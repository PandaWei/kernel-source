From 182a68debec3df71553dea079bad650361372e88 Mon Sep 17 00:00:00 2001
From: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date: Wed, 20 Jun 2018 16:42:58 -0400
Subject: [PATCH] x86/cpufeatures: Add detection of L1D cache flush support.
Patch-mainline: not yet, under discussion
References: bsc#1089343 CVE-2018-3646

commit 11e34e64e4103955fc4568750914c75d65ea87ee upstream

336996-Speculative-Execution-Side-Channel-Mitigations.pdf defines a new MSR
(IA32_FLUSH_CMD) which is detected by CPUID.7.EDX[28]=1 bit being set.

This new MSR "gives software a way to invalidate structures with finer
granularity than other architectual methods like WBINVD."

A copy of this document is available at
  https://bugzilla.kernel.org/show_bug.cgi?id=199511

[jkosina@suse.cz: do a scattered bit initialization]

Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/include/asm/cpufeatures.h |    1 +
 arch/x86/kernel/cpu/scattered.c    |    1 +
 2 files changed, 2 insertions(+)

--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -78,6 +78,7 @@
  */
 #define X86_FEATURE_ZEN		( 2*32+ 4) /* "" CPU is AMD family 0x17 (Zen) */
 #define X86_FEATURE_L1TF_FIX		( 2*32+5) /* "" L1TF workaround used */
+#define X86_FEATURE_FLUSH_L1D		( 2*32+6) /* Flush L1D cache */
 
 #define X86_FEATURE_USE_IBPB	( 2*32+ 5) /* "" Indirect Branch Prediction Barrier enabled*/
 #define X86_FEATURE_USE_IBRS_FW	( 2*32+ 6) /* "" Use IBRS during runtime firmware calls */
--- a/arch/x86/kernel/cpu/scattered.c
+++ b/arch/x86/kernel/cpu/scattered.c
@@ -52,6 +52,7 @@ static const struct cpuid_bit cpuid_bits
 	{ X86_FEATURE_PAUSEFILTER,	CPUID_EDX,10, 0x8000000a, 0 },
 	{ X86_FEATURE_PFTHRESHOLD,	CPUID_EDX,12, 0x8000000a, 0 },
 	{ X86_FEATURE_AVIC,		CPUID_EDX,13, 0x8000000a, 0 },
+	{ X86_FEATURE_FLUSH_L1D,        CPUID_EDX,28, 0x00000007, 0 },
 	{ 0, 0, 0, 0, 0 }
 };
 
