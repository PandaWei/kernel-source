From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: s390/qeth: don't dump control cmd twice
Patch-mainline: v4.15-rc1
Git-commit: 52c44d2975433fab645d29f1b5e6c0c7e77dd342
References: bnc#1099709, LTC#169004

Description:  qeth: fix IPA command submission race 
Symptom:      Sporadic recovery.
Problem:      If multiple IPA commands are build & sent out
              concurrently, fill_ipacmd_header() may assign a seqno
              value to a command that's different from what
              send_control_data() later assigns to this command's reply.
              This is due to other commands passing through
              send_control_data(), and incrementing card->seqno.ipa along
              the way.
              So one IPA command has no reply that's waiting for its
              seqno, while some other IPA command has multiple reply
              objects waiting for it.
              Only one of those waiting replies wins, and the other(s)
              times out and triggers a recovery via send_ipa_cmd().
Solution:     Fix this by making sure that the same seqno value is
              assigned to a command and its reply object.
              Do so immediately before submitting the command & while
              holding the irq_pending "lock", to produce nicely ascending
              seqnos.
Reproduction: -

Upstream-Description:

              s390/qeth: don't dump control cmd twice

              A few lines down, qeth_prepare_control_data() makes further changes to
              the control cmd buffer, and then also writes a trace entry for it.
              So the first entry just pollutes the trace file with intermediate data,
              drop it.

              Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
              Reviewed-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
              Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/net/qeth_core_main.c |    1 -
 1 file changed, 1 deletion(-)

--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -2044,7 +2044,6 @@ int qeth_send_control_data(struct qeth_c
 	spin_lock_irqsave(&card->lock, flags);
 	list_add_tail(&reply->list, &card->cmd_waiter_list);
 	spin_unlock_irqrestore(&card->lock, flags);
-	QETH_DBF_HEX(CTRL, 2, iob->data, QETH_DBF_CTRL_LEN);
 
 	while (atomic_cmpxchg(&card->write.irq_pending, 0, 1)) ;
 	qeth_prepare_control_data(card, len, iob);
