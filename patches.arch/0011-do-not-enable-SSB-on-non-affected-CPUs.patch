From 14eba3e0d6fdb582e1efc3b71a1d2ee6b9d8a1df Mon Sep 17 00:00:00 2001
From: Joerg Roedel <jroedel@suse.de>
Date: Mon, 7 May 2018 17:20:26 +0200
Subject: do not enable SSB on non-affected CPUs
Patch-mainline: not yet, queued in subsystem tree
References: bsc#1087082 CVE-2018-3639

Signed-off-by: Joerg Roedel <jroedel@suse.de>
---
 arch/x86/include/asm/intel-family.h |  1 +
 arch/x86/kernel/cpu/bugs.c          | 29 ++++++++++++++++++++++++++++-
 2 files changed, 29 insertions(+), 1 deletion(-)

--- a/arch/x86/include/asm/intel-family.h
+++ b/arch/x86/include/asm/intel-family.h
@@ -64,5 +64,6 @@
 /* Xeon Phi */
 
 #define INTEL_FAM6_XEON_PHI_KNL		0x57 /* Knights Landing */
+#define INTEL_FAM6_XEON_PHI_KNM		0x85 /* Knights Mill */
 
 #endif /* _ASM_X86_INTEL_FAMILY_H */
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -24,6 +24,7 @@
 #include <asm/pgtable.h>
 #include <asm/cacheflush.h>
 #include <asm/intel-family.h>
+#include <asm/cpu_device_id.h>
 
 #ifdef CONFIG_X86_32
 static int __init no_halt(char *s)
@@ -269,6 +270,30 @@ static const char *spectre_v2_strings[]
 
 static enum spectre_v2_mitigation spectre_v2_enabled = SPECTRE_V2_NONE;
 
+static const __initconst struct x86_cpu_id cpu_no_spec_store_bypass[] = {
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_PINEVIEW	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_LINCROFT	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_PENWELL		},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_CLOVERVIEW	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_CEDARVIEW	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_SILVERMONT1	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_AIRMONT		},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_SILVERMONT2	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_ATOM_MERRIFIELD1	},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_CORE_YONAH		},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_XEON_PHI_KNL		},
+        { X86_VENDOR_INTEL,	6,	INTEL_FAM6_XEON_PHI_KNM		},
+        { X86_VENDOR_CENTAUR,	5,					},
+        { X86_VENDOR_INTEL,	5,					},
+        { X86_VENDOR_NSC,	5,					},
+        { X86_VENDOR_AMD,	0x12,					},
+        { X86_VENDOR_AMD,	0x11,					},
+        { X86_VENDOR_AMD,	0x10,					},
+        { X86_VENDOR_AMD,	0xf,					},
+        { X86_VENDOR_ANY,	4,					},
+        {}
+};
+
 static bool x86_bug_spectre_v1, x86_bug_spectre_v2, x86_bug_meltdown;
 static bool x86_bug_spec_store_bypass;
 
@@ -276,7 +301,9 @@ void setup_force_cpu_bugs(unsigned long
 {
 	x86_bug_spectre_v1 = true;
 	x86_bug_spectre_v2 = true;
-	x86_bug_spec_store_bypass = true;
+
+	if (!x86_match_cpu(cpu_no_spec_store_bypass))
+		x86_bug_spec_store_bypass = true;
 
 	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD)
 		x86_bug_meltdown = false;
