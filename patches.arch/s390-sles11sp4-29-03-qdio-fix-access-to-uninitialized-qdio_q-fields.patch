From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: s390/qdio: fix access to uninitialized qdio_q fields
Patch-mainline: v4.17-rc6
Git-commit: e521813468f786271a87e78e8644243bead48fad
References: bnc#1091659, LTC#168037

Description:  qdio: fix access to uninitialized qdio_q fields
Symptom:      "Unable to handle kernel pointer dereference" in
              qdio_release_memory()
Problem:      calling qdio_free() straight after qdio_alloc() results
              in qdio_release_memory() accessing uninitialized memory
              (ie. q->u.out.use_cq and q->u.out.aobs). Followed by a
              kmem_cache_free() on the random AOB addresses.

              For older kernels that don't have 6e30c549f6ca, the same
              applies if qdio_establish() fails in the DEV_STATE_ONLINE
              check.
Solution:     Zero-alloc the qdio_q struct.
Reproduction: Error injection.

Upstream-Description:

              s390/qdio: fix access to uninitialized qdio_q fields

              Ever since CQ/QAOB support was added, calling qdio_free() straight after
              qdio_alloc() results in qdio_release_memory() accessing uninitialized
              memory (ie. q->u.out.use_cq and q->u.out.aobs). Followed by a
              kmem_cache_free() on the random AOB addresses.

              For older kernels that don't have 6e30c549f6ca, the same applies if
              qdio_establish() fails in the DEV_STATE_ONLINE check.

              While initializing q->u.out.use_cq would be enough to fix this
              particular bug, the more future-proof change is to just zero-alloc the
              whole struct.

              Fixes: 104ea556ee7f ("qdio: support asynchronous delivery of storage blocks")
              Cc: <stable@vger.kernel.org> #v3.2+
              Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
              Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>


Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/cio/qdio_setup.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/s390/cio/qdio_setup.c
+++ b/drivers/s390/cio/qdio_setup.c
@@ -94,7 +94,7 @@ static int __qdio_allocate_qs(struct qdi
 	int i;
 
 	for (i = 0; i < nr_queues; i++) {
-		q = kmem_cache_alloc(qdio_q_cache, GFP_KERNEL);
+		q = kmem_cache_zalloc(qdio_q_cache, GFP_KERNEL);
 		if (!q)
 			return -ENOMEM;
 
