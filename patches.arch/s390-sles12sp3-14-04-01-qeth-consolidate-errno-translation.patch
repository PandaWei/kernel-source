From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: s390/qeth: consolidate errno translation
Patch-mainline: v4.11-rc1
Git-commit: 754e0b8d92e5ba24a711d51b5fdbbd211e2fdd24
References: bnc#1093144, LTC#167507

Description:  qeth: translate SETVLAN/DELVLAN errors
Symptom:      qeth VLAN interface does not receive inbound traffic.
Problem:      If registering a VLAN ID with the HW fails,
              qeth_l2_send_setdelvlan() returns the raw HW error code.
              Upper layers don't interpret this as an error, and
              the VLAN interface is created even though it is
              non-operabel.
Solution:     Translate the HW error codes to errnos. On error, the
              VLAN interface is no longer created and the error is
              properly propagated back to userspace.
Reproduction: IO error injection.

Upstream-Description:

              s390/qeth: consolidate errno translation

              Consolidate errno handling for MAC management: Instead of doing this in every
              caller, do it in one place.

              Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
              Reviewed-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
              Suggested-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
              Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/net/qeth_l2_main.c |   20 ++++++++------------
 1 file changed, 8 insertions(+), 12 deletions(-)

--- a/drivers/s390/net/qeth_l2_main.c
+++ b/drivers/s390/net/qeth_l2_main.c
@@ -171,8 +171,7 @@ static int qeth_l2_send_setgroupmac(stru
 	int rc;
 
 	QETH_CARD_TEXT(card, 2, "L2Sgmac");
-	rc = qeth_setdel_makerc(card, qeth_l2_send_setdelmac(card, mac,
-					IPA_CMD_SETGMAC));
+	rc = qeth_l2_send_setdelmac(card, mac, IPA_CMD_SETGMAC);
 	if (rc == -EEXIST)
 		QETH_DBF_MESSAGE(2, "Group MAC %pM already existing on %s\n",
 			mac, QETH_CARD_IFNAME(card));
@@ -187,8 +186,7 @@ static int qeth_l2_send_delgroupmac(stru
 	int rc;
 
 	QETH_CARD_TEXT(card, 2, "L2Dgmac");
-	rc = qeth_setdel_makerc(card, qeth_l2_send_setdelmac(card, mac,
-					IPA_CMD_DELGMAC));
+	rc = qeth_l2_send_setdelmac(card, mac, IPA_CMD_DELGMAC);
 	if (rc)
 		QETH_DBF_MESSAGE(2,
 			"Could not delete group MAC %pM on %s: %d\n",
@@ -207,9 +205,8 @@ static int qeth_l2_write_mac(struct qeth
 	int rc;
 
 	if (mac->is_uc) {
-		rc = qeth_setdel_makerc(card,
-				qeth_l2_send_setdelmac(card, mac->mac_addr,
-						IPA_CMD_SETVMAC));
+		rc = qeth_l2_send_setdelmac(card, mac->mac_addr,
+						IPA_CMD_SETVMAC);
 	} else {
 		rc = qeth_l2_send_setgroupmac(card, mac->mac_addr);
 	}
@@ -622,7 +619,8 @@ static int qeth_l2_send_setdelmac(struct
 	cmd = (struct qeth_ipa_cmd *)(iob->data+IPA_PDU_HEADER_SIZE);
 	cmd->data.setdelmac.mac_length = OSA_ADDR_LEN;
 	memcpy(&cmd->data.setdelmac.mac, mac, OSA_ADDR_LEN);
-	return qeth_send_ipa_cmd(card, iob, NULL, NULL);
+	return qeth_setdel_makerc(card, qeth_send_ipa_cmd(card, iob,
+					NULL, NULL));
 }
 
 static int qeth_l2_send_setmac(struct qeth_card *card, __u8 *mac)
@@ -630,8 +628,7 @@ static int qeth_l2_send_setmac(struct qe
 	int rc;
 
 	QETH_CARD_TEXT(card, 2, "L2Setmac");
-	rc = qeth_setdel_makerc(card, qeth_l2_send_setdelmac(card, mac,
-					IPA_CMD_SETVMAC));
+	rc = qeth_l2_send_setdelmac(card, mac, IPA_CMD_SETVMAC);
 	if (rc == 0) {
 		card->info.mac_bits |= QETH_LAYER2_MAC_REGISTERED;
 		memcpy(card->dev->dev_addr, mac, OSA_ADDR_LEN);
@@ -661,8 +658,7 @@ static int qeth_l2_send_delmac(struct qe
 	QETH_CARD_TEXT(card, 2, "L2Delmac");
 	if (!(card->info.mac_bits & QETH_LAYER2_MAC_REGISTERED))
 		return 0;
-	rc = qeth_setdel_makerc(card, qeth_l2_send_setdelmac(card, mac,
-					IPA_CMD_DELVMAC));
+	rc = qeth_l2_send_setdelmac(card, mac, IPA_CMD_DELVMAC);
 	if (rc == 0)
 		card->info.mac_bits &= ~QETH_LAYER2_MAC_REGISTERED;
 	return rc;
