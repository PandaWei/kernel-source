From: Thomas Gleixner <tglx@linutronix.de>
Date: Sat, 27 Jan 2018 15:45:14 +0100
Subject: [PATCH 2/2] x86/cpu/bugs: Make retpoline module warning conditional
Git-commit: e383095c7fe8d218e00ec0f83e4b95ed4e627b02
References: bnc#1099177
Patch-mainline: v4.16-rc1

If sysfs is disabled and RETPOLINE not defined:

arch/x86/kernel/cpu/bugs.c:97:13: warning: ‘spectre_v2_bad_module’ defined but not used
[-Wunused-variable]
 static bool spectre_v2_bad_module;

Hide it.

Fixes: caf7501a1b4e ("module/retpoline: Warn about missing retpoline in module")
Reported-by: Borislav Petkov <bp@alien8.de>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: David Woodhouse <dwmw2@infradead.org>
Signed-off-by: Josef Cejka <jcejka@suse.com>

---
 arch/x86/kernel/cpu/bugs.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c
index 006c91468304..a02907968448 100644
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -287,9 +287,10 @@ static const char *spectre_v2_strings[] = {
 #define pr_fmt(fmt)     "Spectre V2 mitigation: " fmt
 
 static enum spectre_v2_mitigation spectre_v2_enabled = SPECTRE_V2_NONE;
-static bool spectre_v2_bad_module;
 
 #ifdef RETPOLINE
+static bool spectre_v2_bad_module;
+
 bool retpoline_module_ok(bool has_retpoline)
 {
 	if (spectre_v2_enabled == SPECTRE_V2_NONE || has_retpoline)
@@ -299,6 +300,13 @@ bool retpoline_module_ok(bool has_retpoline)
 	spectre_v2_bad_module = true;
 	return false;
 }
+
+static inline const char *spectre_v2_module_string(void)
+{
+	return spectre_v2_bad_module ? " - vulnerable module loaded" : "";
+}
+#else
+static inline const char *spectre_v2_module_string(void) { return ""; }
 #endif
 
 static const __initconst struct x86_cpu_id cpu_no_spec_store_bypass[] = {
@@ -777,15 +785,15 @@ ssize_t cpu_show_spectre_v2(struct device *dev,
 
 	if (boot_cpu_has(X86_FEATURE_SPEC_CTRL) && x86_ibrs_enabled()) {
 		return sprintf(buf, "Mitigation: IBRS+IBPB%s\n",
-			spectre_v2_bad_module ? " - vulnerable module loaded" : "");
+			spectre_v2_module_string());
 	}
 
 	if (x86_ibpb_enabled())
 		return sprintf(buf, "%s + IBPB%s\n", spectre_v2_strings[spectre_v2_enabled],
-			spectre_v2_bad_module ? " - vulnerable module loaded" : "");
+			spectre_v2_module_string());
 	else
 		return sprintf(buf, "%s%s\n", spectre_v2_strings[spectre_v2_enabled],
-			spectre_v2_bad_module ? " - vulnerable module loaded" : "");
+			spectre_v2_module_string());
 }
 
 ssize_t __weak cpu_show_spec_store_bypass(struct device *dev,
-- 
2.13.7

