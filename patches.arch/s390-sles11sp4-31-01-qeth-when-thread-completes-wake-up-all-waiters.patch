From: Julian Wiedmann <jwi@linux.ibm.com>
Subject: s390/qeth: when thread completes, wake up all waiters
Patch-mainline: v4.16-rc7
Git-commit: 1063e432bb45be209427ed3f1ca3908e4aa3c7d7
References: bnc#1099709, LTC#169002

Description:  qeth: when thread completes, wake up all waiters
Symptom:      Interaction with netdevice stalls
Problem:      During device recovery, certain callers that want to
              modify the netdevice are put into wait_event() until
              the recovery worker thread has completed.
              But when a worker thread complets, only one caller is
              woken up. Any other callers stay blocked; if they hold
              resources (eg locks), those are blocked too.
Solution:     On completion of a worker thread, wake up _all_ waiters
              of that thread.
Reproduction: Recovery with concurrent activity on the netdevice
              (VLAN (de-)registration, MAC address change).

Upstream-Description:

              s390/qeth: when thread completes, wake up all waiters

              qeth_wait_for_threads() is potentially called by multiple users, make
              sure to notify all of them after qeth_clear_thread_running_bit()
              adjusted the thread_running_mask. With no timeout, callers would
              otherwise stall.

              Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
              Signed-off-by: David S. Miller <davem@davemloft.net>


Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/s390/net/qeth_core_main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -909,7 +909,7 @@ void qeth_clear_thread_running_bit(struc
 	spin_lock_irqsave(&card->thread_mask_lock, flags);
 	card->thread_running_mask &= ~thread;
 	spin_unlock_irqrestore(&card->thread_mask_lock, flags);
-	wake_up(&card->wait_q);
+	wake_up_all(&card->wait_q);
 }
 EXPORT_SYMBOL_GPL(qeth_clear_thread_running_bit);
 
