/* arch/powerpc/kernel/btext.o */
btext_update_display extern void btext_update_display ( unsigned long , int , int , int , int ) 

/* arch/powerpc/kernel/cputable.o */
e#powerpc_pmc_type enum powerpc_pmc_type { PPC_PMC_DEFAULT = 0 , PPC_PMC_IBM = 1 , PPC_PMC_PA6T = 2 , PPC_PMC_G4 = 3 , } 
t#cpu_setup_t typedef void ( * cpu_setup_t ) ( unsigned long , s#cpu_spec * ) 
t#cpu_restore_t typedef void ( * cpu_restore_t ) ( void ) 
e#powerpc_oprofile_type enum powerpc_oprofile_type { PPC_OPROFILE_INVALID = 0 , PPC_OPROFILE_RS64 = 1 , PPC_OPROFILE_POWER4 = 2 , PPC_OPROFILE_G4 = 3 , PPC_OPROFILE_FSL_EMB = 4 , PPC_OPROFILE_CELL = 5 , PPC_OPROFILE_PA6T = 6 , } 
s#pt_regs struct pt_regs { unsigned long gpr [ 32 ] ; unsigned long nip ; unsigned long msr ; unsigned long orig_gpr3 ; unsigned long ctr ; unsigned long link ; unsigned long xer ; unsigned long ccr ; unsigned long softe ; unsigned long trap ; unsigned long dar ; unsigned long dsisr ; unsigned long result ; } 
s#cpu_spec struct cpu_spec { unsigned int pvr_mask ; unsigned int pvr_value ; char * cpu_name ; unsigned long cpu_features ; unsigned int cpu_user_features ; unsigned int cpu_user_features2 ; unsigned int mmu_features ; unsigned int icache_bsize ; unsigned int dcache_bsize ; unsigned int num_pmcs ; e#powerpc_pmc_type pmc_type ; t#cpu_setup_t cpu_setup ; t#cpu_restore_t cpu_restore ; char * oprofile_cpu_type ; e#powerpc_oprofile_type oprofile_type ; unsigned long oprofile_mmcra_sihv ; unsigned long oprofile_mmcra_sipr ; unsigned long oprofile_mmcra_clear ; char * platform ; int ( * machine_check ) ( s#pt_regs * ) ; } 
cur_cpu_spec extern s#cpu_spec * cur_cpu_spec 

/* arch/powerpc/kernel/crash.o */
t#crash_shutdown_t typedef void ( * crash_shutdown_t ) ( void ) 
crash_shutdown_register extern int crash_shutdown_register ( t#crash_shutdown_t ) 
crash_shutdown_unregister extern int crash_shutdown_unregister ( t#crash_shutdown_t ) 

/* arch/powerpc/kernel/dma.o */
s##device_private
s#list_head struct list_head { s#list_head * next , * prev ; } 
t#arch_spinlock_t typedef struct { volatile unsigned int slock ; } arch_spinlock_t 
s#raw_spinlock struct raw_spinlock { t#arch_spinlock_t raw_lock ; } 
s#spinlock struct spinlock { union { s#raw_spinlock rlock ; } ; } 
t#spinlock_t typedef s#spinlock spinlock_t 
s#kobj_uevent_env struct kobj_uevent_env { char * envp [ 32 ] ; int envp_idx ; char buf [ 2048 ] ; int buflen ; } 
s#kset_uevent_ops struct kset_uevent_ops { int ( * const filter ) ( s#kset * , s#kobject * ) ; const char * ( * const name ) ( s#kset * , s#kobject * ) ; int ( * const uevent ) ( s#kset * , s#kobject * , s#kobj_uevent_env * ) ; } 
s#kset struct kset { s#list_head list ; t#spinlock_t list_lock ; s#kobject kobj ; const s#kset_uevent_ops * uevent_ops ; } 
t#__kernel_ssize_t typedef long __kernel_ssize_t 
t#ssize_t typedef t#__kernel_ssize_t ssize_t 
t#__kernel_mode_t typedef unsigned int __kernel_mode_t 
t#mode_t typedef t#__kernel_mode_t mode_t 
s#attribute struct attribute { const char * name ; t#mode_t mode ; } 
t#__kernel_size_t typedef unsigned long __kernel_size_t 
t#size_t typedef t#__kernel_size_t size_t 
s#sysfs_ops struct sysfs_ops { t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; } 
e#kobj_ns_type enum kobj_ns_type { KOBJ_NS_TYPE_NONE = 0 , KOBJ_NS_TYPE_NET , KOBJ_NS_TYPES } 
s##sock
s#kobj_ns_type_operations struct kobj_ns_type_operations { e#kobj_ns_type type ; void * ( * grab_current_ns ) ( void ) ; const void * ( * netlink_ns ) ( s#sock * ) ; const void * ( * initial_ns ) ( void ) ; void ( * drop_ns ) ( void * ) ; } 
s#kobj_type struct kobj_type { void ( * release ) ( s#kobject * ) ; const s#sysfs_ops * sysfs_ops ; s#attribute * * default_attrs ; const s#kobj_ns_type_operations * ( * child_ns_type ) ( s#kobject * ) ; const void * ( * namespace ) ( s#kobject * ) ; } 
s##sysfs_dirent
t#atomic_t typedef struct { int counter ; } atomic_t 
s#kref struct kref { t#atomic_t refcount ; } 
s#kobject struct kobject { const char * name ; s#list_head entry ; s#kobject * parent ; s#kset * kset ; s#kobj_type * ktype ; s#sysfs_dirent * sd ; s#kref kref ; unsigned int state_initialized : 1 ; unsigned int state_in_sysfs : 1 ; unsigned int state_add_uevent_sent : 1 ; unsigned int state_remove_uevent_sent : 1 ; unsigned int uevent_suppress : 1 ; } 
s#attribute_group struct attribute_group { const char * name ; t#mode_t ( * is_visible ) ( s#kobject * , s#attribute * , int ) ; s#attribute * * attrs ; } 
s#dev_pm_ops struct dev_pm_ops { int ( * prepare ) ( s#device * ) ; void ( * complete ) ( s#device * ) ; int ( * suspend ) ( s#device * ) ; int ( * resume ) ( s#device * ) ; int ( * freeze ) ( s#device * ) ; int ( * thaw ) ( s#device * ) ; int ( * poweroff ) ( s#device * ) ; int ( * restore ) ( s#device * ) ; int ( * suspend_noirq ) ( s#device * ) ; int ( * resume_noirq ) ( s#device * ) ; int ( * freeze_noirq ) ( s#device * ) ; int ( * thaw_noirq ) ( s#device * ) ; int ( * poweroff_noirq ) ( s#device * ) ; int ( * restore_noirq ) ( s#device * ) ; int ( * runtime_suspend ) ( s#device * ) ; int ( * runtime_resume ) ( s#device * ) ; int ( * runtime_idle ) ( s#device * ) ; } 
s#device_type struct device_type { const char * name ; const s#attribute_group * * groups ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#mode_t * ) ; void ( * release ) ( s#device * ) ; const s#dev_pm_ops * pm ; } 
s##rq
t#bool typedef _Bool bool 
s#cpumask struct cpumask { unsigned long bits [ ( ( ( 1024 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#sched_class struct sched_class { const s#sched_class * next ; void ( * enqueue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * dequeue_task ) ( s#rq * , s#task_struct * , int ) ; void ( * yield_task ) ( s#rq * ) ; t#bool ( * yield_to_task ) ( s#rq * , s#task_struct * , t#bool ) ; void ( * check_preempt_curr ) ( s#rq * , s#task_struct * , int ) ; s#task_struct * ( * pick_next_task ) ( s#rq * ) ; void ( * put_prev_task ) ( s#rq * , s#task_struct * ) ; int ( * select_task_rq ) ( s#task_struct * , int , int ) ; void ( * pre_schedule ) ( s#rq * , s#task_struct * ) ; void ( * post_schedule ) ( s#rq * ) ; void ( * task_waking ) ( s#task_struct * ) ; void ( * task_woken ) ( s#rq * , s#task_struct * ) ; void ( * set_cpus_allowed ) ( s#task_struct * , const s#cpumask * ) ; void ( * rq_online ) ( s#rq * ) ; void ( * rq_offline ) ( s#rq * ) ; void ( * set_curr_task ) ( s#rq * ) ; void ( * task_tick ) ( s#rq * , s#task_struct * , int ) ; void ( * task_fork ) ( s#task_struct * ) ; void ( * switched_from ) ( s#rq * , s#task_struct * ) ; void ( * switched_to ) ( s#rq * , s#task_struct * ) ; void ( * prio_changed ) ( s#rq * , s#task_struct * , int ) ; unsigned int ( * get_rr_interval ) ( s#rq * , s#task_struct * ) ; void ( * task_move_group ) ( s#task_struct * , int ) ; } 
s#load_weight struct load_weight { unsigned long weight , inv_weight ; } 
s#rb_node struct rb_node { unsigned long rb_parent_color ; s#rb_node * rb_right ; s#rb_node * rb_left ; } 
t#u64 typedef unsigned long long u64 
t#s64 typedef signed long long s64 
s#sched_statistics struct sched_statistics { t#u64 wait_start ; t#u64 wait_max ; t#u64 wait_count ; t#u64 wait_sum ; t#u64 iowait_count ; t#u64 iowait_sum ; t#u64 sleep_start ; t#u64 sleep_max ; t#s64 sum_sleep_runtime ; t#u64 block_start ; t#u64 block_max ; t#u64 exec_max ; t#u64 slice_max ; t#u64 nr_migrations_cold ; t#u64 nr_failed_migrations_affine ; t#u64 nr_failed_migrations_running ; t#u64 nr_failed_migrations_hot ; t#u64 nr_forced_migrations ; t#u64 nr_wakeups ; t#u64 nr_wakeups_sync ; t#u64 nr_wakeups_migrate ; t#u64 nr_wakeups_local ; t#u64 nr_wakeups_remote ; t#u64 nr_wakeups_affine ; t#u64 nr_wakeups_affine_attempts ; t#u64 nr_wakeups_passive ; t#u64 nr_wakeups_idle ; } 
s##cfs_rq
s#sched_entity struct sched_entity { s#load_weight load ; s#rb_node run_node ; s#list_head group_node ; unsigned int on_rq ; t#u64 exec_start ; t#u64 sum_exec_runtime ; t#u64 vruntime ; t#u64 prev_sum_exec_runtime ; t#u64 nr_migrations ; s#sched_statistics statistics ; s#sched_entity * parent ; s#cfs_rq * cfs_rq ; s#cfs_rq * my_q ; void * suse_kabi_padding ; } 
s##rt_rq
s#sched_rt_entity struct sched_rt_entity { s#list_head run_list ; unsigned long timeout ; unsigned int time_slice ; int nr_cpus_allowed ; s#sched_rt_entity * back ; s#sched_rt_entity * parent ; s#rt_rq * rt_rq ; s#rt_rq * my_q ; } 
s##task_group
t#cpumask_t typedef s#cpumask cpumask_t 
s#sched_info struct sched_info { unsigned long pcount ; unsigned long long run_delay ; unsigned long long last_arrival , last_queued ; } 
s#plist_node struct plist_node { int prio ; s#list_head prio_list ; s#list_head node_list ; } 
t#pgprot_t typedef unsigned long pgprot_t 
s#prio_tree_node struct prio_tree_node { s#prio_tree_node * left ; s#prio_tree_node * right ; s#prio_tree_node * parent ; unsigned long start ; unsigned long last ; } 
s#raw_prio_tree_node struct raw_prio_tree_node { s#prio_tree_node * left ; s#prio_tree_node * right ; s#prio_tree_node * parent ; } 
s##anon_vma
t#u16 typedef unsigned short u16 
s##address_space
s##kmem_cache
s#page struct page { unsigned long flags ; t#atomic_t _count ; union { t#atomic_t _mapcount ; struct { t#u16 inuse ; t#u16 objects ; } ; } ; union { struct { unsigned long private ; s#address_space * mapping ; } ; t#spinlock_t ptl ; s#kmem_cache * slab ; s#page * first_page ; } ; union { unsigned long index ; void * freelist ; t#bool pfmemalloc ; } ; s#list_head lru ; } 
s#vm_fault struct vm_fault { unsigned int flags ; unsigned long pgoff ; void * virtual_address ; s#page * page ; } 
s##mempolicy
t#nodemask_t typedef struct { unsigned long bits [ ( ( ( ( 1 << 8 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } nodemask_t 
s#vm_operations_struct struct vm_operations_struct { void ( * open ) ( s#vm_area_struct * ) ; void ( * close ) ( s#vm_area_struct * ) ; int ( * fault ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * mprotect ) ( s#vm_area_struct * , unsigned int ) ; int ( * page_mkwrite ) ( s#vm_area_struct * , s#vm_fault * ) ; int ( * access ) ( s#vm_area_struct * , unsigned long , void * , int , int ) ; int ( * set_policy ) ( s#vm_area_struct * , s#mempolicy * ) ; s#mempolicy * ( * get_policy ) ( s#vm_area_struct * , unsigned long ) ; int ( * migrate ) ( s#vm_area_struct * , const t#nodemask_t * , const t#nodemask_t * , unsigned long ) ; } 
s##file
s#vm_area_struct struct vm_area_struct { s#mm_struct * vm_mm ; unsigned long vm_start ; unsigned long vm_end ; s#vm_area_struct * vm_next , * vm_prev ; t#pgprot_t vm_page_prot ; unsigned long vm_flags ; s#rb_node vm_rb ; union { struct { s#list_head list ; void * parent ; s#vm_area_struct * head ; } vm_set ; s#raw_prio_tree_node prio_tree_node ; } shared ; s#list_head anon_vma_chain ; s#anon_vma * anon_vma ; const s#vm_operations_struct * vm_ops ; unsigned long vm_pgoff ; s#file * vm_file ; void * vm_private_data ; s#mempolicy * vm_policy ; void * suse_kabi_padding ; } 
s#rb_root struct rb_root { s#rb_node * rb_node ; } 
t#u32 typedef unsigned int u32 
t#pgd_t typedef unsigned long pgd_t 
s#rw_semaphore struct rw_semaphore { long count ; t#spinlock_t wait_lock ; s#list_head wait_list ; } 
t#atomic64_t typedef struct { long counter ; } atomic64_t 
t#atomic_long_t typedef t#atomic64_t atomic_long_t 
E#NR_MM_COUNTERS 3 
s#mm_rss_stat struct mm_rss_stat { t#atomic_long_t count [ E#NR_MM_COUNTERS ] ; } 
s##linux_binfmt
t#cpumask_var_t typedef s#cpumask * cpumask_var_t 
t#mm_context_id_t typedef unsigned long mm_context_id_t 
s#subpage_prot_table struct subpage_prot_table { unsigned long maxaddr ; unsigned int * * protptrs [ 2 ] ; unsigned int * low_prot [ 4 ] ; } 
t#mm_context_t typedef struct { t#mm_context_id_t id ; t#u16 user_psize ; t#u64 low_slices_psize ; t#u64 high_slices_psize ; unsigned long vdso_base ; s#subpage_prot_table spt ; s#spinlock * cop_lockp ; unsigned long acop ; unsigned int cop_pid ; } mm_context_t 
s#core_thread struct core_thread { s#task_struct * task ; s#core_thread * next ; } 
s#__wait_queue_head struct __wait_queue_head { t#spinlock_t lock ; s#list_head task_list ; } 
t#wait_queue_head_t typedef s#__wait_queue_head wait_queue_head_t 
s#completion struct completion { unsigned int done ; t#wait_queue_head_t wait ; } 
s#core_state struct core_state { t#atomic_t nr_threads ; s#core_thread dumper ; s#completion startup ; } 
s#hlist_node struct hlist_node { s#hlist_node * next , * * pprev ; } 
s#hlist_head struct hlist_head { s#hlist_node * first ; } 
s#mm_struct struct mm_struct { s#vm_area_struct * mmap ; s#rb_root mm_rb ; t#u32 vmacache_seqnum ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; void ( * unmap_area ) ( s#mm_struct * , unsigned long ) ; unsigned long mmap_base ; unsigned long task_size ; unsigned long cached_hole_size ; unsigned long free_area_cache ; t#pgd_t * pgd ; t#atomic_t mm_users ; t#atomic_t mm_count ; int map_count ; t#spinlock_t page_table_lock ; s#rw_semaphore mmap_sem ; s#list_head mmlist ; unsigned long hiwater_rss ; unsigned long hiwater_vm ; unsigned long total_vm , locked_vm , pinned_vm , shared_vm , exec_vm ; unsigned long stack_vm , reserved_vm , def_flags , nr_ptes ; unsigned long start_code , end_code , start_data , end_data ; unsigned long start_brk , brk , start_stack ; unsigned long arg_start , arg_end , env_start , env_end ; unsigned long saved_auxv [ ( 2 * ( 6 + 19 + 1 ) ) ] ; s#mm_rss_stat rss_stat ; s#linux_binfmt * binfmt ; t#cpumask_var_t cpu_vm_mask_var ; t#mm_context_t context ; t#atomic_t oom_disable_count ; unsigned long flags ; s#core_state * core_state ; t#spinlock_t ioctx_lock ; s#hlist_head ioctx_list ; s#task_struct * owner ; s#file * exe_file ; unsigned long num_exe_file_vmas ; s#cpumask cpumask_allocation ; void * suse_kabi_padding ; } 
s#task_rss_stat struct task_rss_stat { int events ; int count [ E#NR_MM_COUNTERS ] ; } 
t#__kernel_pid_t typedef int __kernel_pid_t 
t#pid_t typedef t#__kernel_pid_t pid_t 
E#PIDTYPE_MAX 3 
s#rcu_head struct rcu_head { s#rcu_head * next ; void ( * func ) ( s#rcu_head * ) ; } 
s##pid_namespace
s#upid struct upid { int nr ; s#pid_namespace * ns ; s#hlist_node pid_chain ; } 
s#pid struct pid { t#atomic_t count ; unsigned int level ; s#hlist_head tasks [ E#PIDTYPE_MAX ] ; s#rcu_head rcu ; s#upid numbers [ 1 ] ; } 
s#pid_link struct pid_link { s#hlist_node node ; s#pid * pid ; } 
t#cputime_t typedef t#u64 cputime_t 
t#__kernel_time_t typedef long __kernel_time_t 
s#timespec struct timespec { t#__kernel_time_t tv_sec ; long tv_nsec ; } 
s#task_cputime struct task_cputime { t#cputime_t utime ; t#cputime_t stime ; unsigned long long sum_exec_runtime ; } 
t#__kernel_uid32_t typedef unsigned int __kernel_uid32_t 
t#uid_t typedef t#__kernel_uid32_t uid_t 
t#__kernel_gid32_t typedef unsigned int __kernel_gid32_t 
t#gid_t typedef t#__kernel_gid32_t gid_t 
t#__u32 typedef unsigned int __u32 
s#kernel_cap_struct struct kernel_cap_struct { t#__u32 cap [ 2 ] ; } 
t#kernel_cap_t typedef s#kernel_cap_struct kernel_cap_t 
t#__s32 typedef __signed__ int __s32 
t#int32_t typedef t#__s32 int32_t 
t#key_serial_t typedef t#int32_t key_serial_t 
s##key_type
s##key_user
t#time_t typedef t#__kernel_time_t time_t 
t#uint32_t typedef t#__u32 uint32_t 
t#key_perm_t typedef t#uint32_t key_perm_t 
s##keyring_list
s#key struct key { t#atomic_t usage ; t#key_serial_t serial ; s#rb_node serial_node ; s#key_type * type ; s#rw_semaphore sem ; s#key_user * user ; void * security ; union { t#time_t expiry ; t#time_t revoked_at ; } ; t#uid_t uid ; t#gid_t gid ; t#key_perm_t perm ; unsigned short quotalen ; unsigned short datalen ; unsigned long flags ; char * description ; union { s#list_head link ; unsigned long x [ 2 ] ; void * p [ 2 ] ; int reject_error ; } type_data ; union { unsigned long value ; void * rcudata ; void * data ; s#keyring_list * subscriptions ; } payload ; } 
s#thread_group_cred struct thread_group_cred { t#atomic_t usage ; t#pid_t tgid ; t#spinlock_t lock ; s#key * session_keyring ; s#key * process_keyring ; s#rcu_head rcu ; } 
s##user_namespace
s#user_struct struct user_struct { t#atomic_t __count ; t#atomic_t processes ; t#atomic_t files ; t#atomic_t sigpending ; t#atomic_t inotify_watches ; t#atomic_t inotify_devs ; t#atomic_t fanotify_listeners ; t#atomic_long_t epoll_watches ; unsigned long mq_bytes ; unsigned long locked_shm ; s#key * uid_keyring ; s#key * session_keyring ; s#hlist_node uidhash_node ; t#uid_t uid ; s#user_namespace * user_ns ; t#atomic_long_t locked_vm ; } 
s#group_info struct group_info { t#atomic_t usage ; int ngroups ; int nblocks ; t#gid_t small_block [ 32 ] ; t#gid_t * blocks [ 0 ] ; } 
s#cred struct cred { t#atomic_t usage ; t#uid_t uid ; t#gid_t gid ; t#uid_t suid ; t#gid_t sgid ; t#uid_t euid ; t#gid_t egid ; t#uid_t fsuid ; t#gid_t fsgid ; unsigned securebits ; t#kernel_cap_t cap_inheritable ; t#kernel_cap_t cap_permitted ; t#kernel_cap_t cap_effective ; t#kernel_cap_t cap_bset ; unsigned char jit_keyring ; s#key * thread_keyring ; s#key * request_key_auth ; s#thread_group_cred * tgcred ; void * security ; s#user_struct * user ; s#user_namespace * user_ns ; s#group_info * group_info ; s#rcu_head rcu ; } 
s#sem_undo_list struct sem_undo_list { t#atomic_t refcnt ; t#spinlock_t lock ; s#list_head list_proc ; } 
s#sysv_sem struct sysv_sem { s#sem_undo_list * undo_list ; } 
t#mm_segment_t typedef struct { unsigned long seg ; } mm_segment_t 
s##perf_event
t#__vector128 typedef struct { t#__u32 u [ 4 ] ; } __attribute__ ( ( aligned ( 16 ) ) ) __vector128 
t#vector128 typedef t#__vector128 vector128 
s#thread_struct struct thread_struct { unsigned long ksp ; unsigned long ksp_limit ; unsigned long ksp_vsid ; s#pt_regs * regs ; t#mm_segment_t fs ; double fpr [ 32 ] [ 2 ] ; struct { unsigned int pad ; unsigned int val ; } fpscr ; int fpexc_mode ; unsigned int align_ctl ; unsigned long start_tb ; unsigned long accum_tb ; s#perf_event * ptrace_bps [ 1 ] ; s#perf_event * last_hit_ubp ; unsigned long dabr ; t#vector128 vr [ 32 ] __attribute__ ( ( aligned ( 16 ) ) ) ; t#vector128 vscr __attribute__ ( ( aligned ( 16 ) ) ) ; unsigned long vrsave ; int used_vr ; int used_vsr ; unsigned long dscr ; int dscr_inherit ; unsigned long ppr ; unsigned long tar ; unsigned long ebbrr ; unsigned long ebbhr ; unsigned long bescr ; } 
s##fs_struct
s##files_struct
s##nsproxy
t#sigset_t typedef struct { unsigned long sig [ ( 64 / 64 ) ] ; } sigset_t 
s#sigpending struct sigpending { s#list_head list ; t#sigset_t signal ; } 
u#ktime union ktime { t#s64 tv64 ; } 
t#ktime_t typedef u#ktime ktime_t 
s#timerqueue_node struct timerqueue_node { s#rb_node node ; t#ktime_t expires ; } 
e#hrtimer_restart enum hrtimer_restart { HRTIMER_NORESTART , HRTIMER_RESTART , } 
t#raw_spinlock_t typedef s#raw_spinlock raw_spinlock_t 
E#HRTIMER_MAX_CLOCK_BASES 3 
s#hrtimer_cpu_base struct hrtimer_cpu_base { t#raw_spinlock_t lock ; unsigned int active_bases ; unsigned int clock_was_set ; t#ktime_t expires_next ; int hres_active ; int hang_detected ; unsigned long nr_events ; unsigned long nr_retries ; unsigned long nr_hangs ; t#ktime_t max_hang_time ; s#hrtimer_clock_base clock_base [ E#HRTIMER_MAX_CLOCK_BASES ] ; } 
t#__kernel_clockid_t typedef int __kernel_clockid_t 
t#clockid_t typedef t#__kernel_clockid_t clockid_t 
s#timerqueue_head struct timerqueue_head { s#rb_root head ; s#timerqueue_node * next ; } 
s#hrtimer_clock_base struct hrtimer_clock_base { s#hrtimer_cpu_base * cpu_base ; int index ; t#clockid_t clockid ; s#timerqueue_head active ; t#ktime_t resolution ; t#ktime_t ( * get_time ) ( void ) ; t#ktime_t softirq_time ; t#ktime_t offset ; } 
s#hrtimer struct hrtimer { s#timerqueue_node node ; t#ktime_t _softexpires ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; s#hrtimer_clock_base * base ; unsigned long state ; int start_pid ; void * start_site ; char start_comm [ 16 ] ; } 
s#cpu_itimer struct cpu_itimer { t#cputime_t expires ; t#cputime_t incr ; t#u32 error ; t#u32 incr_error ; } 
s#thread_group_cputimer struct thread_group_cputimer { s#task_cputime cputime ; int running ; t#spinlock_t lock ; } 
s##tty_struct
s#task_io_accounting struct task_io_accounting { t#u64 rchar ; t#u64 wchar ; t#u64 syscr ; t#u64 syscw ; t#u64 read_bytes ; t#u64 write_bytes ; t#u64 cancelled_write_bytes ; } 
s#rlimit struct rlimit { unsigned long rlim_cur ; unsigned long rlim_max ; } 
s#pacct_struct struct pacct_struct { int ac_flag ; long ac_exitcode ; unsigned long ac_mem ; t#cputime_t ac_utime , ac_stime ; unsigned long ac_minflt , ac_majflt ; } 
s##taskstats
s##tty_audit_buf
s#signal_struct struct signal_struct { t#atomic_t sigcnt ; t#atomic_t live ; int nr_threads ; t#wait_queue_head_t wait_chldexit ; s#task_struct * curr_target ; s#sigpending shared_pending ; int group_exit_code ; int notify_count ; s#task_struct * group_exit_task ; int group_stop_count ; unsigned int flags ; s#list_head posix_timers ; s#hrtimer real_timer ; s#pid * leader_pid ; t#ktime_t it_real_incr ; s#cpu_itimer it [ 2 ] ; s#thread_group_cputimer cputimer ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; s#pid * tty_old_pgrp ; int leader ; s#tty_struct * tty ; t#cputime_t utime , stime , cutime , cstime ; t#cputime_t gtime ; t#cputime_t cgtime ; unsigned long nvcsw , nivcsw , cnvcsw , cnivcsw ; unsigned long min_flt , maj_flt , cmin_flt , cmaj_flt ; unsigned long inblock , oublock , cinblock , coublock ; unsigned long maxrss , cmaxrss ; s#task_io_accounting ioac ; unsigned long long sum_sched_runtime ; s#rlimit rlim [ 16 ] ; s#pacct_struct pacct ; s#taskstats * stats ; unsigned audit_tty ; s#tty_audit_buf * tty_audit_buf ; s#rw_semaphore threadgroup_fork_lock ; int oom_adj ; int oom_score_adj ; int oom_score_adj_min ; s#mutex cred_guard_mutex ; void * suse_kabi_padding ; } 
t#__signalfn_t typedef void __signalfn_t ( int ) 
t#__sighandler_t typedef t#__signalfn_t * __sighandler_t 
t#__restorefn_t typedef void __restorefn_t ( void ) 
t#__sigrestore_t typedef t#__restorefn_t * __sigrestore_t 
s#sigaction struct sigaction { t#__sighandler_t sa_handler ; unsigned long sa_flags ; t#__sigrestore_t sa_restorer ; t#sigset_t sa_mask ; } 
s#k_sigaction struct k_sigaction { s#sigaction sa ; } 
s#sighand_struct struct sighand_struct { t#atomic_t count ; s#k_sigaction action [ 64 ] ; t#spinlock_t siglock ; t#wait_queue_head_t signalfd_wqh ; } 
s##audit_context
s##seccomp_filter
s#seccomp struct seccomp { int mode ; s#seccomp_filter * filter ; } 
s##irqaction
s#plist_head struct plist_head { s#list_head node_list ; } 
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
t#__kernel_timer_t typedef int __kernel_timer_t 
u#sigval union sigval { int sival_int ; void * sival_ptr ; } 
t#sigval_t typedef u#sigval sigval_t 
t#__kernel_clock_t typedef long __kernel_clock_t 
s#siginfo struct siginfo { int si_signo ; int si_errno ; int si_code ; union { int _pad [ ( ( 128 - ( 4 * sizeof ( int ) ) ) / sizeof ( int ) ) ] ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; } _kill ; struct { t#__kernel_timer_t _tid ; int _overrun ; char _pad [ sizeof ( __kernel_uid32_t ) - sizeof ( int ) ] ; t#sigval_t _sigval ; int _sys_private ; } _timer ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; t#sigval_t _sigval ; } _rt ; struct { t#__kernel_pid_t _pid ; t#__kernel_uid32_t _uid ; int _status ; t#__kernel_clock_t _utime ; t#__kernel_clock_t _stime ; } _sigchld ; struct { void * _addr ; short _addr_lsb ; } _sigfault ; struct { long _band ; int _fd ; } _sigpoll ; struct { void * _call_addr ; int _syscall ; unsigned int _arch ; } _sigsys ; } _sifields ; } 
t#siginfo_t typedef s#siginfo siginfo_t 
s#seqcount struct seqcount { unsigned sequence ; } 
t#seqcount_t typedef s#seqcount seqcount_t 
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
E#perf_nr_task_contexts ( 0 ) + 2 
s##pipe_inode_info
s#task_delay_info struct task_delay_info { t#spinlock_t lock ; unsigned int flags ; s#timespec blkio_start , blkio_end ; t#u64 blkio_delay ; t#u64 swapin_delay ; t#u32 blkio_count ; t#u32 swapin_count ; s#timespec freepages_start , freepages_end ; t#u64 freepages_delay ; t#u32 freepages_count ; } 
s#prop_local_single struct prop_local_single { unsigned long events ; unsigned long period ; int shift ; t#spinlock_t lock ; } 
s#latency_record struct latency_record { unsigned long backtrace [ 12 ] ; unsigned int count ; unsigned long time ; unsigned long max ; } 
s##mem_cgroup
s#memcg_batch_info struct memcg_batch_info { int do_batch ; s#mem_cgroup * memcg ; unsigned long nr_pages ; unsigned long memsw_nr_pages ; } 
s#task_struct struct task_struct { volatile long state ; void * stack ; t#atomic_t usage ; unsigned int flags ; unsigned int ptrace ; s#task_struct * wake_entry ; int on_cpu ; int on_rq ; int prio , static_prio , normal_prio ; unsigned int rt_priority ; const s#sched_class * sched_class ; s#sched_entity se ; s#sched_rt_entity rt ; s#task_group * sched_task_group ; unsigned char fpu_counter ; unsigned int btrace_seq ; unsigned int policy ; t#cpumask_t cpus_allowed ; s#sched_info sched_info ; s#list_head tasks ; s#plist_node pushable_tasks ; s#mm_struct * mm , * active_mm ; unsigned brk_randomized : 1 ; t#u32 vmacache_seqnum ; s#vm_area_struct * vmacache [ ( 1U << 2 ) ] ; s#task_rss_stat rss_stat ; int exit_state ; int exit_code , exit_signal ; int pdeath_signal ; unsigned int group_stop ; unsigned int personality ; unsigned did_exec : 1 ; unsigned in_execve : 1 ; unsigned in_iowait : 1 ; unsigned no_new_privs : 1 ; unsigned sched_reset_on_fork : 1 ; unsigned sched_contributes_to_load : 1 ; t#pid_t pid ; t#pid_t tgid ; s#task_struct * real_parent ; s#task_struct * parent ; s#list_head children ; s#list_head sibling ; s#task_struct * group_leader ; s#list_head ptraced ; s#list_head ptrace_entry ; s#pid_link pids [ E#PIDTYPE_MAX ] ; s#list_head thread_group ; s#completion * vfork_done ; int * set_child_tid ; int * clear_child_tid ; t#cputime_t utime , stime , utimescaled , stimescaled ; t#cputime_t gtime ; unsigned long nvcsw , nivcsw ; s#timespec start_time ; s#timespec real_start_time ; unsigned long min_flt , maj_flt ; s#task_cputime cputime_expires ; s#list_head cpu_timers [ 3 ] ; const s#cred * real_cred ; const s#cred * cred ; s#cred * replacement_session_keyring ; char comm [ 16 ] ; int link_count , total_link_count ; s#sysv_sem sysvsem ; unsigned long last_switch_count ; s#thread_struct thread ; s#fs_struct * fs ; s#files_struct * files ; s#nsproxy * nsproxy ; s#signal_struct * signal ; s#sighand_struct * sighand ; t#sigset_t blocked , real_blocked ; t#sigset_t saved_sigmask ; s#sigpending pending ; unsigned long sas_ss_sp ; t#size_t sas_ss_size ; int ( * notifier ) ( void * ) ; void * notifier_data ; t#sigset_t * notifier_mask ; s#audit_context * audit_context ; t#uid_t loginuid ; unsigned int sessionid ; s#seccomp seccomp ; t#u32 parent_exec_id ; t#u32 self_exec_id ; t#spinlock_t alloc_lock ; s#irqaction * irqaction ; t#raw_spinlock_t pi_lock ; s#plist_head pi_waiters ; s#rt_mutex_waiter * pi_blocked_on ; void * journal_info ; s#bio_list * bio_list ; s#blk_plug * plug ; s#reclaim_state * reclaim_state ; s#backing_dev_info * backing_dev_info ; s#io_context * io_context ; unsigned long ptrace_message ; t#siginfo_t * last_siginfo ; s#task_io_accounting ioac ; t#u64 acct_rss_mem1 ; t#u64 acct_vm_mem1 ; t#cputime_t acct_timexpd ; t#nodemask_t mems_allowed ; t#seqcount_t mems_allowed_seq ; int cpuset_mem_spread_rotor ; int cpuset_slab_spread_rotor ; s#css_set * cgroups ; s#list_head cg_list ; s#robust_list_head * robust_list ; s#compat_robust_list_head * compat_robust_list ; s#list_head pi_state_list ; s#futex_pi_state * pi_state_cache ; s#perf_event_context * perf_event_ctxp [ E#perf_nr_task_contexts ] ; s#mutex perf_event_mutex ; s#list_head perf_event_list ; s#mempolicy * mempolicy ; short il_next ; short pref_node_fork ; t#atomic_t fs_excl ; s#rcu_head rcu ; s#pipe_inode_info * splice_pipe ; s#task_delay_info * delays ; int make_it_fail ; s#prop_local_single dirties ; int latency_record_count ; s#latency_record latency_record [ 32 ] ; unsigned long timer_slack_ns ; unsigned long default_timer_slack_ns ; s#list_head * scm_work_list ; unsigned long trace ; unsigned long trace_recursion ; s#memcg_batch_info memcg_batch ; t#atomic_t ptrace_bp_refcnt ; void * suse_kabi_padding ; } 
s#mutex struct mutex { t#atomic_t count ; t#spinlock_t wait_lock ; s#list_head * wait_list ; void * * spin_mlock ; s#task_struct * owner ; } 
s#bus_attribute struct bus_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#bus_type * , char * ) ; t#ssize_t ( * store ) ( s#bus_type * , const char * , t#size_t ) ; } 
s#device_attribute struct device_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device * , s#device_attribute * , char * ) ; t#ssize_t ( * store ) ( s#device * , s#device_attribute * , const char * , t#size_t ) ; } 
e#module_state enum module_state { MODULE_STATE_LIVE , MODULE_STATE_COMING , MODULE_STATE_GOING , } 
s##module_param_attrs
s#module_kobject struct module_kobject { s#kobject kobj ; s#module * mod ; s#kobject * drivers_dir ; s#module_param_attrs * mp ; } 
s#module_attribute struct module_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#module_attribute * , s#module * , char * ) ; t#ssize_t ( * store ) ( s#module_attribute * , s#module * , const char * , t#size_t ) ; void ( * setup ) ( s#module * , const char * ) ; int ( * test ) ( s#module * ) ; void ( * free ) ( s#module * ) ; } 
s#kernel_symbol struct kernel_symbol { unsigned long value ; const char * name ; } 
s#kernel_param_ops struct kernel_param_ops { int ( * set ) ( const char * , const s#kernel_param * ) ; int ( * get ) ( char * , const s#kernel_param * ) ; void ( * free ) ( void * ) ; } 
s#kparam_string struct kparam_string { unsigned int maxlen ; char * string ; } 
s#kparam_array struct kparam_array { unsigned int max ; unsigned int elemsize ; unsigned int * num ; const s#kernel_param_ops * ops ; void * elem ; } 
s#kernel_param struct kernel_param { const char * name ; const s#kernel_param_ops * ops ; t#u16 perm ; t#u16 flags ; union { void * arg ; const s#kparam_string * str ; const s#kparam_array * arr ; } ; } 
s##exception_table_entry
s#bug_entry struct bug_entry { unsigned long bug_addr ; const char * file ; unsigned short line ; unsigned short flags ; } 
s#mod_arch_specific struct mod_arch_specific { unsigned int stubs_section ; unsigned int toc_section ; s#list_head bug_list ; s#bug_entry * bug_table ; unsigned int num_bugs ; } 
t#Elf64_Word typedef t#__u32 Elf64_Word 
t#__u16 typedef unsigned short __u16 
t#Elf64_Half typedef t#__u16 Elf64_Half 
t#__u64 __extension__ typedef unsigned long long __u64 
t#Elf64_Addr typedef t#__u64 Elf64_Addr 
t#Elf64_Xword typedef t#__u64 Elf64_Xword 
s#elf64_sym struct elf64_sym { t#Elf64_Word st_name ; unsigned char st_info ; unsigned char st_other ; t#Elf64_Half st_shndx ; t#Elf64_Addr st_value ; t#Elf64_Xword st_size ; } 
t#Elf64_Sym typedef s#elf64_sym Elf64_Sym 
s##module_sect_attrs
s##module_notes_attrs
s#jump_label_key struct jump_label_key { t#atomic_t enabled ; } 
s#tracepoint_func struct tracepoint_func { void * func ; void * data ; } 
s#tracepoint struct tracepoint { const char * name ; s#jump_label_key key ; void ( * regfunc ) ( void ) ; void ( * unregfunc ) ( void ) ; s#tracepoint_func * funcs ; } 
s##ftrace_event_call
s#module_ref struct module_ref { unsigned int incs ; unsigned int decs ; } 
s#module struct module { e#module_state state ; s#list_head list ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; s#module_kobject mkobj ; s#module_attribute * modinfo_attrs ; const char * version ; const char * srcversion ; s#kobject * holders_dir ; const s#kernel_symbol * syms ; const unsigned long * crcs ; unsigned int num_syms ; s#kernel_param * kp ; unsigned int num_kp ; unsigned int num_gpl_syms ; const s#kernel_symbol * gpl_syms ; const unsigned long * gpl_crcs ; const s#kernel_symbol * unused_syms ; const unsigned long * unused_crcs ; unsigned int num_unused_syms ; unsigned int num_unused_gpl_syms ; const s#kernel_symbol * unused_gpl_syms ; const unsigned long * unused_gpl_crcs ; const s#kernel_symbol * gpl_future_syms ; const unsigned long * gpl_future_crcs ; unsigned int num_gpl_future_syms ; unsigned int num_exentries ; s#exception_table_entry * extable ; int ( * init ) ( void ) ; void * module_init ; void * module_core ; unsigned int init_size , core_size ; unsigned int init_text_size , core_text_size ; unsigned int init_ro_size , core_ro_size ; void * unwind_info ; s#mod_arch_specific arch ; unsigned int taints ; unsigned num_bugs ; s#list_head bug_list ; s#bug_entry * bug_table ; t#Elf64_Sym * symtab , * core_symtab ; unsigned int num_symtab , core_num_syms ; char * strtab , * core_strtab ; s#module_sect_attrs * sect_attrs ; s#module_notes_attrs * notes_attrs ; char * args ; void * percpu ; unsigned int percpu_size ; unsigned int num_tracepoints ; s#tracepoint * const * tracepoints_ptrs ; unsigned int num_trace_bprintk_fmt ; const char * * trace_bprintk_fmt_start ; s#ftrace_event_call * * trace_events ; unsigned int num_trace_events ; s#list_head source_list ; s#list_head target_list ; s#task_struct * waiter ; void ( * exit ) ( void ) ; s#module_ref * refptr ; } 
s#of_device_id struct of_device_id { char name [ 32 ] ; char type [ 32 ] ; char compatible [ 128 ] ; void * data ; } 
s#pm_message struct pm_message { int event ; } 
t#pm_message_t typedef s#pm_message pm_message_t 
s##driver_private
s#device_driver struct device_driver { const char * name ; s#bus_type * bus ; s#module * owner ; const char * mod_name ; t#bool suppress_bind_attrs ; const s#of_device_id * of_match_table ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#attribute_group * * groups ; const s#dev_pm_ops * pm ; s#driver_private * p ; } 
s#driver_attribute struct driver_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#device_driver * , char * ) ; t#ssize_t ( * store ) ( s#device_driver * , const char * , t#size_t ) ; } 
s##subsys_private
s#bus_type struct bus_type { const char * name ; s#bus_attribute * bus_attrs ; s#device_attribute * dev_attrs ; s#driver_attribute * drv_attrs ; int ( * match ) ( s#device * , s#device_driver * ) ; int ( * uevent ) ( s#device * , s#kobj_uevent_env * ) ; int ( * probe ) ( s#device * ) ; int ( * remove ) ( s#device * ) ; void ( * shutdown ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#subsys_private * p ; } 
s##tvec_base
s#timer_list struct timer_list { s#list_head entry ; unsigned long expires ; s#tvec_base * base ; void ( * function ) ( unsigned long ) ; unsigned long data ; int slack ; int start_pid ; void * start_site ; char start_comm [ 16 ] ; } 
s#wakeup_source struct wakeup_source { char * name ; s#list_head entry ; t#spinlock_t lock ; s#timer_list timer ; unsigned long timer_expires ; t#ktime_t total_time ; t#ktime_t max_time ; t#ktime_t last_time ; unsigned long event_count ; unsigned long active_count ; unsigned long relax_count ; unsigned long hit_count ; unsigned int active : 1 ; } 
t#work_func_t typedef void ( * work_func_t ) ( s#work_struct * ) 
s#work_struct struct work_struct { t#atomic_long_t data ; s#list_head entry ; t#work_func_t func ; } 
e#rpm_request enum rpm_request { RPM_REQ_NONE = 0 , RPM_REQ_IDLE , RPM_REQ_SUSPEND , RPM_REQ_AUTOSUSPEND , RPM_REQ_RESUME , } 
e#rpm_status enum rpm_status { RPM_ACTIVE = 0 , RPM_RESUMING , RPM_SUSPENDED , RPM_SUSPENDING , } 
s#dev_pm_info struct dev_pm_info { t#pm_message_t power_state ; unsigned int can_wakeup : 1 ; unsigned int async_suspend : 1 ; t#bool is_prepared : 1 ; t#bool is_suspended : 1 ; t#spinlock_t lock ; s#list_head entry ; s#completion completion ; s#wakeup_source * wakeup ; s#timer_list suspend_timer ; unsigned long timer_expires ; s#work_struct work ; t#wait_queue_head_t wait_queue ; t#atomic_t usage_count ; t#atomic_t child_count ; unsigned int disable_depth : 3 ; unsigned int ignore_children : 1 ; unsigned int idle_notification : 1 ; unsigned int request_pending : 1 ; unsigned int deferred_resume : 1 ; unsigned int run_wake : 1 ; unsigned int runtime_auto : 1 ; unsigned int no_callbacks : 1 ; unsigned int irq_safe : 1 ; unsigned int use_autosuspend : 1 ; unsigned int timer_autosuspends : 1 ; e#rpm_request request ; e#rpm_status runtime_status ; int runtime_error ; int autosuspend_delay ; unsigned long last_busy ; unsigned long active_jiffies ; unsigned long suspended_jiffies ; unsigned long accounting_timestamp ; void * subsys_data ; } 
s#dev_power_domain struct dev_power_domain { s#dev_pm_ops ops ; } 
s#device_dma_parameters struct device_dma_parameters { unsigned int max_segment_size ; unsigned long segment_boundary_mask ; } 
s##dma_coherent_mem
t#dma_addr_t typedef t#u64 dma_addr_t 
s#dev_archdata struct dev_archdata { s#dma_map_ops * dma_ops ; union { t#dma_addr_t dma_offset ; void * iommu_table_base ; } dma_data ; } 
t#phandle typedef t#u32 phandle 
s#property struct property { char * name ; int length ; void * value ; s#property * next ; unsigned long _flags ; unsigned int unique_id ; } 
s##proc_dir_entry
s#device_node struct device_node { const char * name ; const char * type ; t#phandle t#phandle ; char * full_name ; s#property * properties ; s#property * deadprops ; s#device_node * parent ; s#device_node * child ; s#device_node * sibling ; s#device_node * next ; s#device_node * allnext ; s#proc_dir_entry * pde ; s#kref kref ; unsigned long _flags ; void * data ; } 
t#__kernel_dev_t typedef t#__u32 __kernel_dev_t 
t#dev_t typedef t#__kernel_dev_t dev_t 
s#klist_node struct klist_node { void * n_klist ; s#list_head n_node ; s#kref n_ref ; } 
s#class_attribute struct class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#class * , s#class_attribute * , char * ) ; t#ssize_t ( * store ) ( s#class * , s#class_attribute * , const char * , t#size_t ) ; } 
t#__kernel_loff_t typedef long long __kernel_loff_t 
t#loff_t typedef t#__kernel_loff_t loff_t 
s#bin_attribute struct bin_attribute { s#attribute attr ; t#size_t size ; void * private ; t#ssize_t ( * read ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; t#ssize_t ( * write ) ( s#file * , s#kobject * , s#bin_attribute * , char * , t#loff_t , t#size_t ) ; int ( * mmap ) ( s#file * , s#kobject * , s#bin_attribute * , s#vm_area_struct * ) ; } 
s#class struct class { const char * name ; s#module * owner ; s#class_attribute * class_attrs ; s#device_attribute * dev_attrs ; s#bin_attribute * dev_bin_attrs ; s#kobject * dev_kobj ; int ( * dev_uevent ) ( s#device * , s#kobj_uevent_env * ) ; char * ( * devnode ) ( s#device * , t#mode_t * ) ; void ( * class_release ) ( s#class * ) ; void ( * dev_release ) ( s#device * ) ; int ( * suspend ) ( s#device * , t#pm_message_t ) ; int ( * resume ) ( s#device * ) ; const s#kobj_ns_type_operations * ns_type ; const void * ( * namespace ) ( s#device * ) ; const s#dev_pm_ops * pm ; s#subsys_private * p ; } 
s#device struct device { s#device * parent ; s#device_private * p ; s#kobject kobj ; const char * init_name ; const s#device_type * type ; s#mutex mutex ; s#bus_type * bus ; s#device_driver * driver ; void * platform_data ; s#dev_pm_info power ; s#dev_power_domain * pwr_domain ; int numa_node ; t#u64 * dma_mask ; t#u64 coherent_dma_mask ; s#device_dma_parameters * dma_parms ; s#list_head dma_pools ; s#dma_coherent_mem * dma_mem ; s#dev_archdata archdata ; s#device_node * of_node ; t#dev_t devt ; t#spinlock_t devres_lock ; s#list_head devres_head ; s#klist_node knode_class ; s#class * class ; const s#attribute_group * * groups ; void ( * release ) ( s#device * ) ; } 
t#gfp_t typedef unsigned gfp_t 
e#dma_data_direction enum dma_data_direction { DMA_BIDIRECTIONAL = 0 , DMA_TO_DEVICE = 1 , DMA_FROM_DEVICE = 2 , DMA_NONE = 3 , } 
E#DMA_ATTR_MAX 2 
s#dma_attrs struct dma_attrs { unsigned long flags [ ( ( ( E#DMA_ATTR_MAX ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#scatterlist struct scatterlist { unsigned long page_link ; unsigned int offset ; unsigned int length ; t#dma_addr_t dma_address ; unsigned int dma_length ; } 
s#dma_map_ops struct dma_map_ops { void * ( * alloc_coherent ) ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) ; void ( * free_coherent ) ( s#device * , t#size_t , void * , t#dma_addr_t ) ; t#dma_addr_t ( * map_page ) ( s#device * , s#page * , unsigned long , t#size_t , e#dma_data_direction , s#dma_attrs * ) ; void ( * unmap_page ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction , s#dma_attrs * ) ; int ( * map_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , s#dma_attrs * ) ; void ( * unmap_sg ) ( s#device * , s#scatterlist * , int , e#dma_data_direction , s#dma_attrs * ) ; void ( * sync_single_for_cpu ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#device * , t#dma_addr_t , t#size_t , e#dma_data_direction ) ; void ( * sync_sg_for_cpu ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * sync_sg_for_device ) ( s#device * , s#scatterlist * , int , e#dma_data_direction ) ; int ( * mapping_error ) ( s#device * , t#dma_addr_t ) ; int ( * dma_supported ) ( s#device * , t#u64 ) ; int ( * set_dma_mask ) ( s#device * , t#u64 ) ; t#u64 ( * get_required_mask ) ( s#device * ) ; int is_phys ; } 
dma_direct_ops extern s#dma_map_ops dma_direct_ops 
dma_set_mask extern int dma_set_mask ( s#device * , t#u64 ) 
dma_get_required_mask extern t#u64 dma_get_required_mask ( s#device * ) 
dma_mmap_coherent extern int dma_mmap_coherent ( s#device * , s#vm_area_struct * , void * , t#dma_addr_t , t#size_t ) 

/* arch/powerpc/kernel/dma-iommu.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
dma_iommu_ops extern s#dma_map_ops dma_iommu_ops 

/* arch/powerpc/kernel/firmware.o */
powerpc_firmware_features extern unsigned long powerpc_firmware_features 

/* arch/powerpc/kernel/ibmebus.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s#kmem_cache struct kmem_cache { s#array_cache * array [ 1024 ] ; unsigned int batchcount ; unsigned int limit ; unsigned int shared ; unsigned int buffer_size ; t#u32 reciprocal_buffer_size ; unsigned int flags ; unsigned int num ; unsigned int gfporder ; t#gfp_t gfpflags ; t#size_t colour ; unsigned int colour_off ; s#kmem_cache * slabp_cache ; unsigned int slab_size ; unsigned int dflags ; void ( * ctor ) ( void * ) ; const char * name ; s#list_head next ; s#kmem_list3 * nodelists [ ( 1 << 8 ) ] ; } 
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
e#irqreturn enum irqreturn { IRQ_NONE = ( 0 << 0 ) , IRQ_HANDLED = ( 1 << 0 ) , IRQ_WAKE_THREAD = ( 1 << 1 ) , } 
t#irqreturn_t typedef e#irqreturn irqreturn_t 
t#irq_handler_t typedef t#irqreturn_t ( * irq_handler_t ) ( int , void * ) 
s##proc_dir_entry
s#irqaction struct irqaction { t#irq_handler_t handler ; unsigned long flags ; void * dev_id ; s#irqaction * next ; int irq ; t#irq_handler_t thread_fn ; s#task_struct * thread ; unsigned long thread_flags ; unsigned long thread_mask ; const char * name ; s#proc_dir_entry * dir ; } 
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
t#phys_addr_t typedef t#u64 phys_addr_t 
t#resource_size_t typedef t#phys_addr_t resource_size_t 
s#resource struct resource { t#resource_size_t start ; t#resource_size_t end ; const char * name ; unsigned long flags ; s#resource * parent , * sibling , * child ; } 
t#kernel_ulong_t typedef unsigned long kernel_ulong_t 
s#platform_device_id struct platform_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s##mfd_cell
s#pdev_archdata struct pdev_archdata { t#u64 dma_mask ; } 
s#platform_device struct platform_device { const char * name ; int id ; s#device dev ; t#u32 num_resources ; s#resource * resource ; const s#platform_device_id * id_entry ; s#mfd_cell * mfd_cell ; s#pdev_archdata archdata ; } 
s#of_platform_driver struct of_platform_driver { int ( * probe ) ( s#platform_device * , const s#of_device_id * ) ; int ( * remove ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * , t#pm_message_t ) ; int ( * resume ) ( s#platform_device * ) ; int ( * shutdown ) ( s#platform_device * ) ; s#device_driver driver ; } 
ibmebus_register_driver int ibmebus_register_driver ( s#of_platform_driver * ) 
ibmebus_unregister_driver void ibmebus_unregister_driver ( s#of_platform_driver * ) 
ibmebus_request_irq int ibmebus_request_irq ( t#u32 , t#irq_handler_t , unsigned long , const char * , void * ) 
ibmebus_free_irq void ibmebus_free_irq ( t#u32 , void * ) 
ibmebus_bus_type extern s#bus_type ibmebus_bus_type 

/* arch/powerpc/kernel/idle.o */
cpuidle_disable extern unsigned long cpuidle_disable 
cpu_idle_wait void cpu_idle_wait ( void ) 

/* arch/powerpc/kernel/init_task.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
t#umode_t typedef unsigned int umode_t 
s#hlist_bl_node struct hlist_bl_node { s#hlist_bl_node * next , * * pprev ; } 
s#qstr struct qstr { unsigned int hash ; unsigned int len ; const unsigned char * name ; } 
s#lockref struct lockref { union { struct { t#spinlock_t lock ; unsigned int count ; } ; } ; } 
s##nameidata
s##vfsmount
s#path struct path { s#vfsmount * mnt ; s#dentry * dentry ; } 
s#dentry_operations struct dentry_operations { int ( * d_revalidate ) ( s#dentry * , s#nameidata * ) ; int ( * d_hash ) ( const s#dentry * , const s#inode * , s#qstr * ) ; int ( * d_compare ) ( const s#dentry * , const s#inode * , const s#dentry * , const s#inode * , unsigned int , const char * , const s#qstr * ) ; int ( * d_delete ) ( const s#dentry * ) ; void ( * d_release ) ( s#dentry * ) ; void ( * d_iput ) ( s#dentry * , s#inode * ) ; char * ( * d_dname ) ( s#dentry * , char * , int ) ; s#vfsmount * ( * d_automount ) ( s#path * ) ; int ( * d_manage ) ( s#dentry * , t#bool ) ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s#exception_table_entry struct exception_table_entry { unsigned long insn ; unsigned long fixup ; } 
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#lock_class_key struct lock_class_key { } 
s#file_system_type struct file_system_type { const char * name ; int fs_flags ; s#dentry * ( * mount ) ( s#file_system_type * , int , const char * , void * ) ; void ( * kill_sb ) ( s#super_block * ) ; s#module * owner ; s#file_system_type * next ; s#list_head fs_supers ; s#lock_class_key s_lock_key ; s#lock_class_key s_umount_key ; s#lock_class_key s_vfs_rename_key ; s#lock_class_key i_lock_key ; s#lock_class_key i_mutex_key ; s#lock_class_key i_mutex_dir_key ; s#lock_class_key i_alloc_sem_key ; } 
s##writeback_control
s##kstatfs
s#seq_operations struct seq_operations { void * ( * start ) ( s#seq_file * , t#loff_t * ) ; void ( * stop ) ( s#seq_file * , void * ) ; void * ( * next ) ( s#seq_file * , void * , t#loff_t * ) ; int ( * show ) ( s#seq_file * , void * ) ; } 
s#seq_file struct seq_file { char * buf ; t#size_t size ; t#size_t from ; t#size_t count ; t#loff_t index ; t#loff_t read_pos ; t#u64 version ; s#mutex lock ; const s#seq_operations * op ; void * private ; } 
s#super_operations struct super_operations { s#inode * ( * alloc_inode ) ( s#super_block * ) ; void ( * destroy_inode ) ( s#inode * ) ; void ( * dirty_inode ) ( s#inode * , int ) ; int ( * write_inode ) ( s#inode * , s#writeback_control * ) ; int ( * drop_inode ) ( s#inode * ) ; void ( * evict_inode ) ( s#inode * ) ; void ( * put_super ) ( s#super_block * ) ; void ( * write_super ) ( s#super_block * ) ; int ( * sync_fs ) ( s#super_block * , int ) ; int ( * freeze_fs ) ( s#super_block * ) ; int ( * unfreeze_fs ) ( s#super_block * ) ; int ( * statfs ) ( s#dentry * , s#kstatfs * ) ; int ( * remount_fs ) ( s#super_block * , int * , char * ) ; void ( * umount_begin ) ( s#super_block * ) ; int ( * show_options ) ( s#seq_file * , s#vfsmount * ) ; int ( * show_devname ) ( s#seq_file * , s#vfsmount * ) ; int ( * show_path ) ( s#seq_file * , s#vfsmount * ) ; int ( * show_stats ) ( s#seq_file * , s#vfsmount * ) ; t#ssize_t ( * quota_read ) ( s#super_block * , int , char * , t#size_t , t#loff_t ) ; t#ssize_t ( * quota_write ) ( s#super_block * , int , const char * , t#size_t , t#loff_t ) ; int ( * bdev_try_to_free_page ) ( s#super_block * , s#page * , t#gfp_t ) ; t#dev_t ( * get_maps_dev ) ( s#inode * ) ; } 
t#qsize_t typedef long long qsize_t 
s#mem_dqblk struct mem_dqblk { t#qsize_t dqb_bhardlimit ; t#qsize_t dqb_bsoftlimit ; t#qsize_t dqb_curspace ; t#qsize_t dqb_rsvspace ; t#qsize_t dqb_ihardlimit ; t#qsize_t dqb_isoftlimit ; t#qsize_t dqb_curinodes ; t#time_t dqb_btime ; t#time_t dqb_itime ; } 
s#dquot struct dquot { s#hlist_node dq_hash ; s#list_head dq_inuse ; s#list_head dq_free ; s#list_head dq_dirty ; s#mutex dq_lock ; t#atomic_t dq_count ; t#wait_queue_head_t dq_wait_unused ; s#super_block * dq_sb ; unsigned int dq_id ; t#loff_t dq_off ; unsigned long dq_flags ; short dq_type ; s#mem_dqblk dq_dqb ; } 
s#dquot_operations struct dquot_operations { int ( * write_dquot ) ( s#dquot * ) ; s#dquot * ( * alloc_dquot ) ( s#super_block * , int ) ; void ( * destroy_dquot ) ( s#dquot * ) ; int ( * acquire_dquot ) ( s#dquot * ) ; int ( * release_dquot ) ( s#dquot * ) ; int ( * mark_dirty ) ( s#dquot * ) ; int ( * write_info ) ( s#super_block * , int ) ; t#qsize_t * ( * get_reserved_space ) ( s#inode * ) ; } 
s#if_dqinfo struct if_dqinfo { t#__u64 dqi_bgrace ; t#__u64 dqi_igrace ; t#__u32 dqi_flags ; t#__u32 dqi_valid ; } 
t#qid_t typedef t#__kernel_uid32_t qid_t 
t#__s8 typedef __signed__ char __s8 
t#__s16 typedef __signed__ short __s16 
s#fs_disk_quota struct fs_disk_quota { t#__s8 d_version ; t#__s8 d_flags ; t#__u16 d_fieldmask ; t#__u32 d_id ; t#__u64 d_blk_hardlimit ; t#__u64 d_blk_softlimit ; t#__u64 d_ino_hardlimit ; t#__u64 d_ino_softlimit ; t#__u64 d_bcount ; t#__u64 d_icount ; t#__s32 d_itimer ; t#__s32 d_btimer ; t#__u16 d_iwarns ; t#__u16 d_bwarns ; t#__s32 d_padding2 ; t#__u64 d_rtb_hardlimit ; t#__u64 d_rtb_softlimit ; t#__u64 d_rtbcount ; t#__s32 d_rtbtimer ; t#__u16 d_rtbwarns ; t#__s16 d_padding3 ; char d_padding4 [ 8 ] ; } 
s#fs_qfilestat struct fs_qfilestat { t#__u64 qfs_ino ; t#__u64 qfs_nblks ; t#__u32 qfs_nextents ; } 
t#fs_qfilestat_t typedef s#fs_qfilestat fs_qfilestat_t 
s#fs_quota_stat struct fs_quota_stat { t#__s8 qs_version ; t#__u16 qs_flags ; t#__s8 qs_pad ; t#fs_qfilestat_t qs_uquota ; t#fs_qfilestat_t qs_gquota ; t#__u32 qs_incoredqs ; t#__s32 qs_btimelimit ; t#__s32 qs_itimelimit ; t#__s32 qs_rtbtimelimit ; t#__u16 qs_bwarnlimit ; t#__u16 qs_iwarnlimit ; } 
s#quotactl_ops struct quotactl_ops { int ( * quota_on ) ( s#super_block * , int , int , s#path * ) ; int ( * quota_on_meta ) ( s#super_block * , int , int ) ; int ( * quota_off ) ( s#super_block * , int ) ; int ( * quota_sync ) ( s#super_block * , int , int ) ; int ( * get_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * set_info ) ( s#super_block * , int , s#if_dqinfo * ) ; int ( * get_dqblk ) ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) ; int ( * set_dqblk ) ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) ; int ( * get_xstate ) ( s#super_block * , s#fs_quota_stat * ) ; int ( * set_xstate ) ( s#super_block * , unsigned int , int ) ; } 
s##export_operations
s##xattr_handler
s#hlist_bl_head struct hlist_bl_head { s#hlist_bl_node * first ; } 
s##hd_struct
s##gendisk
s#block_device struct block_device { t#dev_t bd_dev ; int bd_openers ; s#inode * bd_inode ; s#super_block * bd_super ; s#mutex bd_mutex ; s#list_head bd_inodes ; void * bd_claiming ; void * bd_holder ; int bd_holders ; t#bool bd_write_holder ; s#list_head bd_holder_disks ; s#block_device * bd_contains ; unsigned bd_block_size ; s#hd_struct * bd_part ; unsigned bd_part_count ; int bd_invalidated ; s#gendisk * bd_disk ; s#list_head bd_list ; unsigned long bd_private ; int bd_fsfreeze_count ; s#mutex bd_fsfreeze_mutex ; } 
s##backing_dev_info
s##mtd_info
s#quota_format_ops struct quota_format_ops { int ( * check_quota_file ) ( s#super_block * , int ) ; int ( * read_file_info ) ( s#super_block * , int ) ; int ( * write_file_info ) ( s#super_block * , int ) ; int ( * free_file_info ) ( s#super_block * , int ) ; int ( * read_dqblk ) ( s#dquot * ) ; int ( * commit_dqblk ) ( s#dquot * ) ; int ( * release_dqblk ) ( s#dquot * ) ; } 
s#quota_format_type struct quota_format_type { int qf_fmt_id ; const s#quota_format_ops * qf_ops ; s#module * qf_owner ; s#quota_format_type * qf_next ; } 
s#mem_dqinfo struct mem_dqinfo { s#quota_format_type * dqi_format ; int dqi_fmt_id ; s#list_head dqi_dirty_list ; unsigned long dqi_flags ; unsigned int dqi_bgrace ; unsigned int dqi_igrace ; t#qsize_t dqi_maxblimit ; t#qsize_t dqi_maxilimit ; void * dqi_priv ; } 
s#quota_info struct quota_info { unsigned int flags ; s#mutex dqio_mutex ; s#mutex dqonoff_mutex ; s#rw_semaphore dqptr_sem ; s#inode * files [ 2 ] ; s#mem_dqinfo info [ 2 ] ; const s#quota_format_ops * ops [ 2 ] ; } 
t#s32 typedef signed int s32 
s#percpu_counter struct percpu_counter { t#spinlock_t lock ; t#s64 count ; s#list_head list ; t#s32 * counters ; } 
E#SB_FREEZE_COMPLETE 4 
s#sb_writers struct sb_writers { s#percpu_counter counter [ ( E#SB_FREEZE_COMPLETE - 1 ) ] ; t#wait_queue_head_t wait ; int frozen ; t#wait_queue_head_t wait_unfrozen ; } 
t#u8 typedef unsigned char u8 
t#fmode_t typedef unsigned fmode_t 
s#super_block struct super_block { s#list_head s_list ; t#dev_t s_dev ; unsigned char s_dirt ; unsigned char s_blocksize_bits ; unsigned long s_blocksize ; t#loff_t s_maxbytes ; s#file_system_type * s_type ; const s#super_operations * s_op ; const s#dquot_operations * dq_op ; const s#quotactl_ops * s_qcop ; const s#export_operations * s_export_op ; unsigned long s_flags ; unsigned long s_magic ; s#dentry * s_root ; s#rw_semaphore s_umount ; s#mutex s_lock ; int s_count ; t#atomic_t s_active ; void * s_security ; const s#xattr_handler * * s_xattr ; s#list_head s_inodes ; s#hlist_bl_head s_anon ; s#list_head * s_files ; s#list_head s_dentry_lru ; int s_nr_dentry_unused ; s#block_device * s_bdev ; s#backing_dev_info * s_bdi ; s#mtd_info * s_mtd ; s#list_head s_instances ; s#quota_info s_dquot ; int s_frozen ; t#wait_queue_head_t s_wait_unfrozen ; s#sb_writers s_writers ; char s_id [ 32 ] ; t#u8 s_uuid [ 16 ] ; void * s_fs_info ; t#fmode_t s_mode ; t#u32 s_time_gran ; s#mutex s_vfs_rename_mutex ; char * s_subtype ; char * s_options ; const s#dentry_operations * s_d_op ; int cleancache_poolid ; } 
s#dentry struct dentry { unsigned int d_flags ; t#seqcount_t d_seq ; s#hlist_bl_node d_hash ; s#dentry * d_parent ; s#qstr d_name ; s#inode * d_inode ; unsigned char d_iname [ 32 ] ; s#lockref d_lockref ; const s#dentry_operations * d_op ; s#super_block * d_sb ; unsigned long d_time ; void * d_fsdata ; s#list_head d_lru ; union { s#list_head d_child ; } d_u ; s#list_head d_subdirs ; union { s#list_head d_alias ; s#rcu_head d_rcu ; } ; } 
s#aio_ring_info struct aio_ring_info { unsigned long mmap_base ; unsigned long mmap_size ; s#page * * ring_pages ; t#spinlock_t ring_lock ; long nr_pages ; unsigned nr , tail ; s#page * internal_pages [ 8 ] ; } 
s##tvec_base
s#delayed_work struct delayed_work { s#work_struct work ; s#timer_list timer ; } 
s#kioctx struct kioctx { t#atomic_t users ; int dead ; s#mm_struct * mm ; unsigned long user_id ; s#hlist_node list ; t#wait_queue_head_t wait ; t#spinlock_t ctx_lock ; int reqs_active ; s#list_head active_reqs ; s#list_head run_list ; unsigned max_reqs ; s#aio_ring_info ring_info ; s#delayed_work wq ; t#wait_queue_head_t poll_wait ; s#file * file ; s#rcu_head rcu_head ; } 
t#__s64 __extension__ typedef __signed__ long long __s64 
s#io_event struct io_event { t#__u64 data ; t#__u64 obj ; t#__s64 res ; t#__s64 res2 ; } 
s#iovec struct iovec { void * iov_base ; t#__kernel_size_t iov_len ; } 
s##eventfd_ctx
s#kiocb struct kiocb { s#list_head ki_run_list ; unsigned long ki_flags ; int ki_users ; unsigned ki_key ; s#file * ki_filp ; s#kioctx * ki_ctx ; int ( * ki_cancel ) ( s#kiocb * , s#io_event * ) ; t#ssize_t ( * ki_retry ) ( s#kiocb * ) ; void ( * ki_dtor ) ( s#kiocb * ) ; union { void * user ; s#task_struct * tsk ; } ki_obj ; t#__u64 ki_user_data ; t#loff_t ki_pos ; void * private ; unsigned short ki_opcode ; t#size_t ki_nbytes ; char * ki_buf ; t#size_t ki_left ; s#iovec ki_inline_vec ; s#iovec * ki_iovec ; unsigned long ki_nr_segs ; unsigned long ki_cur_seg ; s#list_head ki_list ; s#eventfd_ctx * ki_eventfd ; } 
t#filldir_t typedef int ( * filldir_t ) ( void * , const char * , int , t#loff_t , t#u64 , unsigned ) 
s##poll_table_struct
s##files_struct
t#fl_owner_t typedef s#files_struct * fl_owner_t 
s#pidmap struct pidmap { t#atomic_t nr_free ; void * page ; } 
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s#pid_namespace struct pid_namespace { s#kref kref ; s#pidmap pidmap [ ( ( ( 0 ? ( 1UL << 16 ) * 8 : ( sizeof ( long ) > 4 ? 4 * 1024 * 1024 : ( 0 ? 0x1000 : 0x8000 ) ) ) + 8 * ( 1UL << 16 ) - 1 ) / ( 1UL << 16 ) / 8 ) ] ; int last_pid ; s#task_struct * child_reaper ; s#kmem_cache * pid_cachep ; unsigned int level ; s#pid_namespace * parent ; s#vfsmount * proc_mnt ; s#bsd_acct_struct * bacct ; } 
s#fasync_struct struct fasync_struct { t#spinlock_t fa_lock ; int magic ; int fa_fd ; s#fasync_struct * fa_next ; s#file * fa_file ; s#rcu_head fa_rcu ; } 
s#file_lock_operations struct file_lock_operations { void ( * fl_copy_lock ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_release_private ) ( s#file_lock * ) ; } 
s#lock_manager_operations struct lock_manager_operations { int ( * fl_compare_owner ) ( s#file_lock * , s#file_lock * ) ; void ( * fl_notify ) ( s#file_lock * ) ; int ( * fl_grant ) ( s#file_lock * , s#file_lock * , int ) ; void ( * fl_release_private ) ( s#file_lock * ) ; void ( * fl_break ) ( s#file_lock * ) ; int ( * fl_change ) ( s#file_lock * * , int ) ; } 
s##nlm_lockowner
s#nfs_lock_info struct nfs_lock_info { t#u32 state ; s#nlm_lockowner * owner ; s#list_head list ; } 
s##nfs4_lock_state
s#nfs4_lock_info struct nfs4_lock_info { s#nfs4_lock_state * owner ; } 
s#file_lock struct file_lock { s#file_lock * fl_next ; s#list_head fl_link ; s#list_head fl_block ; t#fl_owner_t fl_owner ; unsigned char fl_flags ; unsigned char fl_type ; unsigned int fl_pid ; s#pid * fl_nspid ; t#wait_queue_head_t fl_wait ; s#file * fl_file ; t#loff_t fl_start ; t#loff_t fl_end ; s#fasync_struct * fl_fasync ; unsigned long fl_break_time ; const s#file_lock_operations * fl_ops ; const s#lock_manager_operations * fl_lmops ; union { s#nfs_lock_info nfs_fl ; s#nfs4_lock_info nfs4_fl ; struct { s#list_head link ; int state ; } afs ; } fl_u ; } 
s##pipe_inode_info
s#file_operations struct file_operations { s#module * owner ; t#loff_t ( * llseek ) ( s#file * , t#loff_t , int ) ; t#ssize_t ( * read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#file * , const char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * aio_read ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; t#ssize_t ( * aio_write ) ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) ; int ( * readdir ) ( s#file * , void * , t#filldir_t ) ; unsigned int ( * poll ) ( s#file * , s#poll_table_struct * ) ; long ( * unlocked_ioctl ) ( s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#file * , s#vm_area_struct * ) ; int ( * open ) ( s#inode * , s#file * ) ; int ( * flush ) ( s#file * , t#fl_owner_t ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * fsync ) ( s#file * , t#loff_t , t#loff_t , int ) ; int ( * aio_fsync ) ( s#kiocb * , int ) ; int ( * fasync ) ( int , s#file * , int ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * sendpage ) ( s#file * , s#page * , int , t#size_t , t#loff_t * , int ) ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; int ( * check_flags ) ( int ) ; int ( * flock ) ( s#file * , int , s#file_lock * ) ; t#ssize_t ( * splice_write ) ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) ; t#ssize_t ( * splice_read ) ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; int ( * open_exec ) ( s#inode * ) ; int ( * setlease ) ( s#file * , long , s#file_lock * * ) ; long ( * fallocate ) ( s#file * , int , t#loff_t , t#loff_t ) ; } 
t#arch_rwlock_t typedef struct { volatile signed int lock ; } arch_rwlock_t 
t#rwlock_t typedef struct { t#arch_rwlock_t raw_lock ; } rwlock_t 
e#pid_type enum pid_type { PIDTYPE_PID , PIDTYPE_PGID , PIDTYPE_SID , PIDTYPE_MAX } 
s#fown_struct struct fown_struct { t#rwlock_t lock ; s#pid * pid ; e#pid_type pid_type ; t#uid_t uid , euid ; int signum ; } 
s##key_type
s##key_user
s##keyring_list
s#user_namespace struct user_namespace { s#kref kref ; s#hlist_head uidhash_table [ ( 1 << ( 0 ? 3 : 7 ) ) ] ; s#user_struct * creator ; s#work_struct destroyer ; } 
s#file_ra_state struct file_ra_state { unsigned long start ; unsigned int size ; unsigned int async_size ; unsigned int ra_pages ; unsigned int mmap_miss ; t#loff_t prev_pos ; } 
s#file struct file { union { s#list_head fu_list ; s#rcu_head fu_rcuhead ; } f_u ; s#path f_path ; const s#file_operations * f_op ; t#spinlock_t f_lock ; int f_sb_list_cpu ; t#atomic_long_t f_count ; unsigned int f_flags ; t#fmode_t f_mode ; t#loff_t f_pos ; s#fown_struct f_owner ; const s#cred * f_cred ; s#file_ra_state f_ra ; t#u64 f_version ; void * f_security ; void * private_data ; s#list_head f_ep_links ; s#list_head f_tfile_llink ; s#address_space * f_mapping ; } 
s#iattr struct iattr { unsigned int ia_valid ; t#umode_t ia_mode ; t#uid_t ia_uid ; t#gid_t ia_gid ; t#loff_t ia_size ; s#timespec ia_atime ; s#timespec ia_mtime ; s#timespec ia_ctime ; s#file * ia_file ; } 
s#kstat struct kstat { t#u64 ino ; t#dev_t dev ; t#umode_t mode ; unsigned int nlink ; t#uid_t uid ; t#gid_t gid ; t#dev_t rdev ; t#loff_t size ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; unsigned long blksize ; unsigned long long blocks ; } 
s#fiemap_extent struct fiemap_extent { t#__u64 fe_logical ; t#__u64 fe_physical ; t#__u64 fe_length ; t#__u64 fe_reserved64 [ 2 ] ; t#__u32 fe_flags ; t#__u32 fe_reserved [ 3 ] ; } 
s#fiemap_extent_info struct fiemap_extent_info { unsigned int fi_flags ; unsigned int fi_extents_mapped ; unsigned int fi_extents_max ; s#fiemap_extent * fi_extents_start ; } 
s#inode_operations struct inode_operations { s#dentry * ( * lookup ) ( s#inode * , s#dentry * , s#nameidata * ) ; void * ( * follow_link ) ( s#dentry * , s#nameidata * ) ; int ( * permission ) ( s#inode * , int , unsigned int ) ; int ( * check_acl ) ( s#inode * , int , unsigned int ) ; int ( * may_create ) ( s#inode * , int ) ; int ( * may_delete ) ( s#inode * , s#inode * ) ; int ( * readlink ) ( s#dentry * , char * , int ) ; void ( * put_link ) ( s#dentry * , s#nameidata * , void * ) ; int ( * create ) ( s#inode * , s#dentry * , int , s#nameidata * ) ; int ( * link ) ( s#dentry * , s#inode * , s#dentry * ) ; int ( * unlink ) ( s#inode * , s#dentry * ) ; int ( * symlink ) ( s#inode * , s#dentry * , const char * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , int ) ; int ( * rmdir ) ( s#inode * , s#dentry * ) ; int ( * mknod ) ( s#inode * , s#dentry * , int , t#dev_t ) ; int ( * rename ) ( s#inode * , s#dentry * , s#inode * , s#dentry * ) ; void ( * truncate ) ( s#inode * ) ; int ( * setattr ) ( s#dentry * , s#iattr * ) ; int ( * getattr ) ( s#vfsmount * , s#dentry * , s#kstat * ) ; int ( * setxattr ) ( s#dentry * , const char * , const void * , t#size_t , int ) ; t#ssize_t ( * getxattr ) ( s#dentry * , const char * , void * , t#size_t ) ; t#ssize_t ( * listxattr ) ( s#dentry * , char * , t#size_t ) ; int ( * removexattr ) ( s#dentry * , const char * ) ; void ( * truncate_range ) ( s#inode * , t#loff_t , t#loff_t ) ; int ( * fiemap ) ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 ) ; int ( * update_time ) ( s#inode * , s#timespec * , int ) ; } 
t#blkcnt_t typedef unsigned long blkcnt_t 
s##cdev
s##posix_acl
s#inode struct inode { t#umode_t i_mode ; t#uid_t i_uid ; t#gid_t i_gid ; const s#inode_operations * i_op ; s#super_block * i_sb ; t#spinlock_t i_lock ; unsigned int i_flags ; unsigned long i_state ; void * i_security ; s#mutex i_mutex ; unsigned long dirtied_when ; s#hlist_node i_hash ; s#list_head i_wb_list ; s#list_head i_lru ; s#list_head i_sb_list ; union { s#list_head i_dentry ; s#rcu_head i_rcu ; } ; unsigned long i_ino ; t#atomic_t i_count ; unsigned int i_nlink ; t#dev_t i_rdev ; unsigned int i_blkbits ; t#u64 i_version ; t#loff_t i_size ; s#timespec i_atime ; s#timespec i_mtime ; s#timespec i_ctime ; t#blkcnt_t i_blocks ; unsigned short i_bytes ; s#rw_semaphore i_alloc_sem ; const s#file_operations * i_fop ; s#file_lock * i_flock ; s#address_space * i_mapping ; s#address_space i_data ; s#dquot * i_dquot [ 2 ] ; s#list_head i_devices ; union { s#pipe_inode_info * i_pipe ; s#block_device * i_bdev ; s#cdev * i_cdev ; } ; t#__u32 i_generation ; t#__u32 i_fsnotify_mask ; s#hlist_head i_fsnotify_marks ; t#atomic_t i_writecount ; s#posix_acl * i_acl ; s#posix_acl * i_default_acl ; void * i_private ; } 
s##radix_tree_node
s#radix_tree_root struct radix_tree_root { unsigned int height ; t#gfp_t gfp_mask ; s#radix_tree_node * rnode ; } 
s#prio_tree_root struct prio_tree_root { s#prio_tree_node * prio_tree_node ; unsigned short index_bits ; unsigned short raw ; } 
t#sector_t typedef unsigned long sector_t 
e##migrate_mode
t#read_descriptor_t typedef struct { t#size_t written ; t#size_t count ; union { char * buf ; void * data ; } arg ; int error ; } read_descriptor_t 
s##swap_info_struct
s#address_space_operations struct address_space_operations { int ( * writepage ) ( s#page * , s#writeback_control * ) ; int ( * readpage ) ( s#file * , s#page * ) ; int ( * writepages ) ( s#address_space * , s#writeback_control * ) ; int ( * set_page_dirty ) ( s#page * ) ; int ( * readpages ) ( s#file * , s#address_space * , s#list_head * , unsigned ) ; int ( * write_begin ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) ; int ( * write_end ) ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) ; t#sector_t ( * bmap ) ( s#address_space * , t#sector_t ) ; void ( * invalidatepage ) ( s#page * , unsigned long ) ; int ( * releasepage ) ( s#page * , t#gfp_t ) ; void ( * freepage ) ( s#page * ) ; t#ssize_t ( * direct_IO ) ( int , s#kiocb * , const s#iovec * , t#loff_t , unsigned long ) ; int ( * get_xip_mem ) ( s#address_space * , unsigned long , int , void * * , unsigned long * ) ; int ( * migratepage ) ( s#address_space * , s#page * , s#page * , e#migrate_mode ) ; int ( * launder_page ) ( s#page * ) ; int ( * is_partially_uptodate ) ( s#page * , t#read_descriptor_t * , unsigned long ) ; void ( * is_dirty_writeback ) ( s#page * , t#bool * , t#bool * ) ; int ( * error_remove_page ) ( s#address_space * , s#page * ) ; int ( * swap_activate ) ( s#swap_info_struct * , s#file * , t#sector_t * ) ; void ( * swap_deactivate ) ( s#file * ) ; } 
s#address_space struct address_space { s#inode * host ; s#radix_tree_root page_tree ; t#spinlock_t tree_lock ; unsigned int i_mmap_writable ; s#prio_tree_root i_mmap ; s#list_head i_mmap_nonlinear ; s#mutex i_mmap_mutex ; unsigned long nrpages ; unsigned long writeback_index ; const s#address_space_operations * a_ops ; unsigned long flags ; s#backing_dev_info * backing_dev_info ; t#spinlock_t private_lock ; s#list_head private_list ; void * private_data ; } 
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s#new_utsname struct new_utsname { char sysname [ 64 + 1 ] ; char nodename [ 64 + 1 ] ; char release [ 64 + 1 ] ; char version [ 64 + 1 ] ; char machine [ 64 + 1 ] ; char domainname [ 64 + 1 ] ; } 
s#uts_namespace struct uts_namespace { s#kref kref ; s#new_utsname name ; s#user_namespace * user_ns ; } 
s##ipc_namespace
s##mnt_namespace
t#__kernel_nlink_t typedef unsigned long __kernel_nlink_t 
t#nlink_t typedef t#__kernel_nlink_t nlink_t 
t#__kernel_off_t typedef long __kernel_off_t 
t#off_t typedef t#__kernel_off_t off_t 
t#read_proc_t typedef int ( read_proc_t ) ( char * , char * * , t#off_t , int , int * , void * ) 
t#write_proc_t typedef int ( write_proc_t ) ( s#file * , const char * , unsigned long , void * ) 
s#proc_dir_entry struct proc_dir_entry { unsigned int low_ino ; unsigned int namelen ; const char * name ; t#mode_t mode ; t#nlink_t nlink ; t#uid_t uid ; t#gid_t gid ; t#loff_t size ; const s#inode_operations * proc_iops ; const s#file_operations * proc_fops ; s#proc_dir_entry * next , * parent , * subdir ; void * data ; t#read_proc_t * read_proc ; t#write_proc_t * write_proc ; t#atomic_t count ; int pde_users ; t#spinlock_t pde_unload_lock ; s#completion * pde_unload_completion ; s#list_head pde_openers ; } 
s#ctl_table_set struct ctl_table_set { s#list_head list ; s#ctl_table_set * parent ; int ( * is_seen ) ( s#ctl_table_set * ) ; } 
s##net_device
t#proc_handler typedef int proc_handler ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
s#ctl_table struct ctl_table { const char * procname ; void * data ; int maxlen ; t#mode_t mode ; s#ctl_table * child ; s#ctl_table * parent ; t#proc_handler * proc_handler ; void * extra1 ; void * extra2 ; } 
s#ctl_table_root struct ctl_table_root { s#list_head root_list ; s#ctl_table_set default_set ; s#ctl_table_set * ( * lookup ) ( s#ctl_table_root * , s#nsproxy * ) ; int ( * permissions ) ( s#ctl_table_root * , s#nsproxy * , s#ctl_table * ) ; } 
s#ctl_table_header struct ctl_table_header { union { struct { s#ctl_table * ctl_table ; s#list_head ctl_entry ; int used ; int count ; } ; s#rcu_head rcu ; } ; s#completion * unregistering ; s#ctl_table * ctl_table_arg ; s#ctl_table_root * root ; s#ctl_table_set * set ; s#ctl_table * attached_by ; s#ctl_table * attached_to ; s#ctl_table_header * parent ; } 
s##prot_inuse
s#netns_core struct netns_core { s#ctl_table_header * sysctl_hdr ; int sysctl_somaxconn ; s#prot_inuse * inuse ; } 
E#__TCP_MIB_MAX ( 0 ) + 15 
s#tcp_mib struct tcp_mib { unsigned long mibs [ E#__TCP_MIB_MAX ] ; } 
E#__IPSTATS_MIB_MAX ( 0 ) + 31 
s#u64_stats_sync struct u64_stats_sync { } 
s#ipstats_mib struct ipstats_mib { t#u64 mibs [ E#__IPSTATS_MIB_MAX ] ; s#u64_stats_sync syncp ; } 
E#__LINUX_MIB_MAX ( 0 ) + 81 
s#linux_mib struct linux_mib { unsigned long mibs [ E#__LINUX_MIB_MAX ] ; } 
E#__UDP_MIB_MAX ( 0 ) + 7 
s#udp_mib struct udp_mib { unsigned long mibs [ E#__UDP_MIB_MAX ] ; } 
E#__ICMP_MIB_MAX ( 0 ) + 27 
s#icmp_mib struct icmp_mib { unsigned long mibs [ E#__ICMP_MIB_MAX ] ; } 
s#icmpmsg_mib struct icmpmsg_mib { unsigned long mibs [ 512 ] ; } 
E#__ICMP6_MIB_MAX ( 0 ) + 5 
s#icmpv6_mib struct icmpv6_mib { unsigned long mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib struct icmpv6msg_mib { unsigned long mibs [ 512 ] ; } 
s#netns_mib struct netns_mib { __typeof__ ( s#tcp_mib ) * tcp_statistics [ 2 ] ; __typeof__ ( s#ipstats_mib ) * ip_statistics [ 2 ] ; __typeof__ ( s#linux_mib ) * net_statistics [ 2 ] ; __typeof__ ( s#udp_mib ) * udp_statistics [ 2 ] ; __typeof__ ( s#udp_mib ) * udplite_statistics [ 2 ] ; __typeof__ ( s#icmp_mib ) * icmp_statistics [ 2 ] ; __typeof__ ( s#icmpmsg_mib ) * icmpmsg_statistics [ 2 ] ; s#proc_dir_entry * proc_net_devsnmp6 ; __typeof__ ( s#udp_mib ) * udp_stats_in6 [ 2 ] ; __typeof__ ( s#udp_mib ) * udplite_stats_in6 [ 2 ] ; __typeof__ ( s#ipstats_mib ) * ipv6_statistics [ 2 ] ; __typeof__ ( s#icmpv6_mib ) * icmpv6_statistics [ 2 ] ; __typeof__ ( s#icmpv6msg_mib ) * icmpv6msg_statistics [ 2 ] ; } 
s#netns_packet struct netns_packet { t#spinlock_t sklist_lock ; s#hlist_head sklist ; } 
s#netns_unix struct netns_unix { int sysctl_max_dgram_qlen ; s#ctl_table_header * ctl ; } 
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s#netns_frags struct netns_frags { int nqueues ; t#atomic_t mem ; s#list_head lru_list ; int timeout ; int high_thresh ; int low_thresh ; } 
s##xt_table
s#netns_ipv4 struct netns_ipv4 { s#ctl_table_header * forw_hdr ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * ipv4_hdr ; s#ctl_table_header * route_hdr ; s#ctl_table_header * xfrm4_hdr ; s#ipv4_devconf * devconf_all ; s#ipv4_devconf * devconf_dflt ; s#fib_rules_ops * rules_ops ; s#hlist_head * fib_table_hash ; s#sock * fibnl ; s#sock * * icmp_sk ; s#sock * tcp_sock ; s#inet_peer_base * peers ; s#netns_frags frags ; s#xt_table * iptable_filter ; s#xt_table * iptable_mangle ; s#xt_table * iptable_raw ; s#xt_table * arptable_filter ; s#xt_table * iptable_security ; s#xt_table * nat_table ; s#hlist_head * nat_bysource ; unsigned int nat_htable_size ; int sysctl_icmp_echo_ignore_all ; int sysctl_icmp_echo_ignore_broadcasts ; int sysctl_icmp_ignore_bogus_error_responses ; int sysctl_icmp_ratelimit ; int sysctl_icmp_ratemask ; int sysctl_icmp_errors_use_inbound_ifaddr ; int sysctl_rt_cache_rebuild_count ; int current_rt_cache_rebuild_count ; unsigned int sysctl_ping_group_range [ 2 ] ; t#atomic_t rt_genid ; t#atomic_t dev_addr_genid ; s#list_head mr_tables ; s#fib_rules_ops * mr_rules_ops ; } 
s#netns_sysctl_ipv6 struct netns_sysctl_ipv6 { s#ctl_table_header * table ; s#ctl_table_header * frags_hdr ; s#ctl_table_header * xfrm6_hdr ; int bindv6only ; int flush_delay ; int ip6_rt_max_size ; int ip6_rt_gc_min_interval ; int ip6_rt_gc_timeout ; int ip6_rt_gc_interval ; int ip6_rt_gc_elasticity ; int ip6_rt_mtu_expires ; int ip6_rt_min_advmss ; int icmpv6_time ; } 
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
t#__be16 typedef t#__u16 __be16 
s##dst_entry
s##sec_path
t#__wsum typedef t#__u32 __wsum 
t#__u8 typedef unsigned char __u8 
s#nf_conntrack struct nf_conntrack { t#atomic_t use ; } 
s#nf_bridge_info struct nf_bridge_info { t#atomic_t use ; s#net_device * physindev ; s#net_device * physoutdev ; unsigned int mask ; unsigned long data [ 32 / sizeof ( unsigned long ) ] ; } 
t#dma_cookie_t typedef t#s32 dma_cookie_t 
t#sk_buff_data_t typedef unsigned int sk_buff_data_t 
s#sk_buff struct sk_buff { s#sk_buff * next ; s#sk_buff * prev ; t#ktime_t tstamp ; s#sock * sk ; s#net_device * dev ; char cb [ 48 ] __attribute__ ( ( aligned ( 8 ) ) ) ; unsigned long _skb_refdst ; s#sec_path * sp ; unsigned int len , data_len ; t#__u16 mac_len , hdr_len ; union { t#__wsum csum ; struct { t#__u16 csum_start ; t#__u16 csum_offset ; } ; } ; t#__u32 priority ; ; t#__u8 local_df : 1 , cloned : 1 , ip_summed : 2 , nohdr : 1 , nfctinfo : 3 ; t#__u8 pkt_type : 3 , fclone : 2 , ipvs_property : 1 , peeked : 1 , nf_trace : 1 ; ; t#__be16 protocol ; void ( * destructor ) ( s#sk_buff * ) ; s#nf_conntrack * nfct ; s#nf_bridge_info * nf_bridge ; int skb_iif ; t#__u16 tc_index ; t#__u16 tc_verd ; t#__u32 rxhash ; t#__u16 queue_mapping ; ; t#__u8 ndisc_nodetype : 2 ; t#__u8 pfmemalloc : 1 ; t#__u8 ooo_okay : 1 ; t#__u8 no_fcs : 1 ; t#__u8 encapsulation : 1 ; ; t#dma_cookie_t dma_cookie ; t#__u32 secmark ; union { t#__u32 mark ; t#__u32 dropcount ; } ; t#__u16 vlan_tci ; t#sk_buff_data_t inner_transport_header ; t#sk_buff_data_t inner_network_header ; t#sk_buff_data_t transport_header ; t#sk_buff_data_t network_header ; t#sk_buff_data_t mac_header ; t#sk_buff_data_t tail ; t#sk_buff_data_t end ; unsigned char * head , * data ; unsigned int truesize ; t#atomic_t users ; } 
s#dst_ops struct dst_ops { unsigned short family ; t#__be16 protocol ; unsigned gc_thresh ; int ( * gc ) ( s#dst_ops * ) ; s#dst_entry * ( * check ) ( s#dst_entry * , t#__u32 ) ; unsigned int ( * default_advmss ) ( const s#dst_entry * ) ; unsigned int ( * default_mtu ) ( const s#dst_entry * ) ; t#u32 * ( * cow_metrics ) ( s#dst_entry * , unsigned long ) ; void ( * destroy ) ( s#dst_entry * ) ; void ( * ifdown ) ( s#dst_entry * , s#net_device * , int ) ; s#dst_entry * ( * negative_advice ) ( s#dst_entry * ) ; void ( * link_failure ) ( s#sk_buff * ) ; void ( * update_pmtu ) ( s#dst_entry * , t#u32 ) ; int ( * local_out ) ( s#sk_buff * ) ; s#kmem_cache * kmem_cachep ; s#percpu_counter pcpuc_entries __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s#netns_ipv6 struct netns_ipv6 { s#netns_sysctl_ipv6 sysctl ; s#ipv6_devconf * devconf_all ; s#ipv6_devconf * devconf_dflt ; s#inet_peer_base * peers ; s#netns_frags frags ; s#xt_table * ip6table_filter ; s#xt_table * ip6table_mangle ; s#xt_table * ip6table_raw ; s#xt_table * ip6table_security ; s#rt6_info * ip6_null_entry ; s#rt6_statistics * rt6_stats ; s#timer_list ip6_fib_timer ; s#hlist_head * fib_table_hash ; s#fib6_table * fib6_main_tbl ; s#dst_ops ip6_dst_ops ; unsigned int ip6_rt_gc_expire ; unsigned long ip6_rt_last_gc ; s#rt6_info * ip6_prohibit_entry ; s#rt6_info * ip6_blk_hole_entry ; s#fib6_table * fib6_local_tbl ; s#fib_rules_ops * fib6_rules_ops ; s#sock * * icmp_sk ; s#sock * ndisc_sk ; s#sock * tcp_sk ; s#sock * igmp_sk ; } 
s#netns_dccp struct netns_dccp { s#sock * v4_ctl_sk ; s#sock * v6_ctl_sk ; } 
s#netns_nf struct netns_nf { s#proc_dir_entry * proc_netfilter ; } 
E#NFPROTO_NUMPROTO ( 12 ) + 1 
s##ebt_table
s#netns_xt struct netns_xt { s#list_head tables [ E#NFPROTO_NUMPROTO ] ; s#ebt_table * broute_table ; s#ebt_table * frame_filter ; s#ebt_table * frame_nat ; } 
s#hlist_nulls_node struct hlist_nulls_node { s#hlist_nulls_node * next , * * pprev ; } 
s#hlist_nulls_head struct hlist_nulls_head { s#hlist_nulls_node * first ; } 
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s#netns_ct struct netns_ct { t#atomic_t count ; unsigned int expect_count ; unsigned int htable_size ; s#kmem_cache * nf_conntrack_cachep ; s#hlist_nulls_head * hash ; s#hlist_head * expect_hash ; s#hlist_nulls_head unconfirmed ; s#hlist_nulls_head dying ; s#ip_conntrack_stat * stat ; s#nf_ct_event_notifier * nf_conntrack_event_cb ; s#nf_exp_event_notifier * nf_expect_event_cb ; int sysctl_events ; unsigned int sysctl_events_retry_timeout ; int sysctl_acct ; int sysctl_tstamp ; int sysctl_checksum ; unsigned int sysctl_log_invalid ; s#ctl_table_header * sysctl_header ; s#ctl_table_header * acct_sysctl_header ; s#ctl_table_header * tstamp_sysctl_header ; s#ctl_table_header * event_sysctl_header ; char * slabname ; } 
s#sk_buff_head struct sk_buff_head { s#sk_buff * next ; s#sk_buff * prev ; t#__u32 qlen ; t#spinlock_t lock ; } 
s##net_generic
E#XFRM_POLICY_MAX 3 
s#xfrm_policy_hash struct xfrm_policy_hash { s#hlist_head * table ; unsigned int hmask ; } 
s#netns_xfrm struct netns_xfrm { s#list_head state_all ; s#hlist_head * state_bydst ; s#hlist_head * state_bysrc ; s#hlist_head * state_byspi ; unsigned int state_hmask ; unsigned int state_num ; s#work_struct state_hash_work ; s#hlist_head state_gc_list ; s#work_struct state_gc_work ; t#wait_queue_head_t km_waitq ; s#list_head policy_all ; s#hlist_head * policy_byidx ; unsigned int policy_idx_hmask ; s#hlist_head policy_inexact [ E#XFRM_POLICY_MAX * 2 ] ; s#xfrm_policy_hash policy_bydst [ E#XFRM_POLICY_MAX * 2 ] ; unsigned int policy_count [ E#XFRM_POLICY_MAX * 2 ] ; s#work_struct policy_hash_work ; s#sock * nlsk ; s#sock * nlsk_stash ; t#u32 sysctl_aevent_etime ; t#u32 sysctl_aevent_rseqth ; int sysctl_larval_drop ; t#u32 sysctl_acq_expires ; s#ctl_table_header * sysctl_hdr ; s#dst_ops xfrm4_dst_ops ; s#dst_ops xfrm6_dst_ops ; } 
s##netns_ipvs
s#net struct net { t#atomic_t passive ; t#atomic_t count ; t#spinlock_t rules_mod_lock ; s#list_head list ; s#list_head cleanup_list ; s#list_head exit_list ; s#proc_dir_entry * proc_net ; s#proc_dir_entry * proc_net_stat ; s#ctl_table_set sysctls ; s#sock * rtnl ; s#sock * genl_sock ; s#list_head dev_base_head ; s#hlist_head * dev_name_head ; s#hlist_head * dev_index_head ; s#list_head rules_ops ; s#net_device * loopback_dev ; s#netns_core core ; s#netns_mib mib ; s#netns_packet packet ; s#netns_unix unx ; s#netns_ipv4 ipv4 ; s#netns_ipv6 ipv6 ; s#netns_dccp dccp ; s#netns_nf nf ; s#netns_xt xt ; s#netns_ct ct ; s#sock * nfnl ; s#sock * nfnl_stash ; s#sk_buff_head wext_nlevents ; s#net_generic * gen ; s#netns_xfrm xfrm ; s#netns_ipvs * ipvs ; } 
s#nsproxy struct nsproxy { t#atomic_t count ; s#uts_namespace * uts_ns ; s#ipc_namespace * ipc_ns ; s#mnt_namespace * mnt_ns ; s#pid_namespace * pid_ns ; s#net * net_ns ; } 
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
init_task extern s#task_struct init_task 

/* arch/powerpc/kernel/io.o */
_insb extern void _insb ( const volatile t#u8 * , void * , long ) 
_outsb extern void _outsb ( volatile t#u8 * , const void * , long ) 
_insw_ns extern void _insw_ns ( const volatile t#u16 * , void * , long ) 
_outsw_ns extern void _outsw_ns ( volatile t#u16 * , const void * , long ) 
_insl_ns extern void _insl_ns ( const volatile t#u32 * , void * , long ) 
_outsl_ns extern void _outsl_ns ( volatile t#u32 * , const void * , long ) 
_memset_io extern void _memset_io ( volatile void * , int , unsigned long ) 
_memcpy_fromio extern void _memcpy_fromio ( void * , const volatile void * , unsigned long ) 
_memcpy_toio extern void _memcpy_toio ( volatile void * , const void * , unsigned long ) 

/* arch/powerpc/kernel/irq.o */
t#irq_cpustat_t typedef struct { unsigned int __softirq_pending ; unsigned int timer_irqs ; unsigned int pmu_irqs ; unsigned int mce_exceptions ; unsigned int spurious_irqs ; } __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) irq_cpustat_t 
irq_stat extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( t#irq_cpustat_t ) irq_stat 
arch_local_irq_restore extern void arch_local_irq_restore ( unsigned long ) 
t#irq_hw_number_t typedef unsigned long irq_hw_number_t 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
e#trace_reg enum trace_reg { TRACE_REG_REGISTER , TRACE_REG_UNREGISTER , TRACE_REG_PERF_REGISTER , TRACE_REG_PERF_UNREGISTER , TRACE_REG_PERF_OPEN , TRACE_REG_PERF_CLOSE , TRACE_REG_PERF_ADD , TRACE_REG_PERF_DEL , } 
s#ftrace_event_class struct ftrace_event_class { char * system ; void * probe ; void * perf_probe ; int ( * reg ) ( s#ftrace_event_call * , e#trace_reg , void * ) ; int ( * define_fields ) ( s#ftrace_event_call * ) ; s#list_head * ( * get_fields ) ( s#ftrace_event_call * ) ; s#list_head fields ; int ( * raw_init ) ( s#ftrace_event_call * ) ; } 
e#print_line_t enum print_line_t { TRACE_TYPE_PARTIAL_LINE = 0 , TRACE_TYPE_HANDLED = 1 , TRACE_TYPE_UNHANDLED = 2 , TRACE_TYPE_NO_CONSUME = 3 } 
s##trace_array
s##tracer
s##ring_buffer_iter
s#trace_seq struct trace_seq { unsigned char buffer [ ( 1UL << 16 ) ] ; unsigned int len ; unsigned int readpos ; int full ; } 
s#trace_entry struct trace_entry { unsigned short type ; unsigned char flags ; unsigned char preempt_count ; int pid ; int padding ; } 
s#trace_iterator struct trace_iterator { s#trace_array * tr ; s#tracer * trace ; void * private ; int cpu_file ; s#mutex mutex ; s#ring_buffer_iter * buffer_iter [ 1024 ] ; unsigned long iter_flags ; s#trace_seq tmp_seq ; t#cpumask_var_t started ; s#trace_seq seq ; s#trace_entry * ent ; unsigned long lost_events ; int leftover ; int cpu ; t#u64 ts ; t#loff_t pos ; long idx ; } 
t#trace_print_func typedef e#print_line_t ( * trace_print_func ) ( s#trace_iterator * , int , s#trace_event * ) 
s#trace_event_functions struct trace_event_functions { t#trace_print_func trace ; t#trace_print_func raw ; t#trace_print_func hex ; t#trace_print_func binary ; } 
s#trace_event struct trace_event { s#hlist_node node ; s#list_head list ; int type ; s#trace_event_functions * funcs ; } 
s##event_filter
s#ftrace_event_call struct ftrace_event_call { s#list_head list ; s#ftrace_event_class * class ; char * name ; s#dentry * dir ; s#trace_event event ; const char * print_fmt ; s#event_filter * filter ; void * mod ; void * data ; unsigned int flags ; int perf_refcount ; s#hlist_head * perf_events ; } 
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
e#perf_event_context_type enum perf_event_context_type { task_context , cpu_context , } 
s#perf_event_context struct perf_event_context { s#pmu * pmu ; e#perf_event_context_type type ; t#raw_spinlock_t lock ; s#mutex mutex ; s#list_head pinned_groups ; s#list_head flexible_groups ; s#list_head event_list ; int nr_events ; int nr_active ; int is_active ; int nr_stat ; int nr_freq ; int rotate_disable ; t#atomic_t refcount ; s#task_struct * task ; t#u64 time ; t#u64 timestamp ; s#perf_event_context * parent_ctx ; t#u64 parent_gen ; t#u64 generation ; int pin_count ; int nr_cgroups ; int nr_branch_stack ; s#rcu_head rcu_head ; } 
s##cgroupfs_root
s#cgroup struct cgroup { unsigned long flags ; t#atomic_t count ; s#list_head sibling ; s#list_head children ; s#cgroup * parent ; s#dentry * dentry ; s#cgroup_subsys_state * subsys [ ( 8 * sizeof ( unsigned long ) ) ] ; s#cgroupfs_root * root ; s#cgroup * top_cgroup ; s#list_head css_sets ; s#list_head release_list ; s#list_head pidlists ; s#mutex pidlist_mutex ; s#rcu_head rcu_head ; s#list_head event_list ; t#spinlock_t event_list_lock ; } 
s##css_id
s#cgroup_subsys_state struct cgroup_subsys_state { s#cgroup * cgroup ; t#atomic_t refcnt ; unsigned long flags ; s#css_id * id ; } 
s#perf_cgroup_info struct perf_cgroup_info { t#u64 time ; t#u64 timestamp ; } 
s#perf_cgroup struct perf_cgroup { s#cgroup_subsys_state css ; s#perf_cgroup_info * info ; } 
s#perf_cpu_context struct perf_cpu_context { s#perf_event_context ctx ; s#perf_event_context * task_ctx ; int active_oncpu ; int exclusive ; s#list_head rotation_list ; int jiffies_interval ; s#pmu * unique_pmu ; s#perf_cgroup * cgrp ; } 
s#pmu struct pmu { s#list_head entry ; s#device * dev ; const s#attribute_group * * attr_groups ; char * name ; int type ; int * pmu_disable_count ; s#perf_cpu_context * pmu_cpu_context ; int task_ctx_nr ; void ( * pmu_enable ) ( s#pmu * ) ; void ( * pmu_disable ) ( s#pmu * ) ; int ( * event_init ) ( s#perf_event * ) ; int ( * add ) ( s#perf_event * , int ) ; void ( * del ) ( s#perf_event * , int ) ; void ( * start ) ( s#perf_event * , int ) ; void ( * stop ) ( s#perf_event * , int ) ; void ( * read ) ( s#perf_event * ) ; void ( * start_txn ) ( s#pmu * ) ; int ( * commit_txn ) ( s#pmu * ) ; void ( * cancel_txn ) ( s#pmu * ) ; int ( * event_idx ) ( s#perf_event * ) ; void ( * flush_branch_stack ) ( void ) ; } 
e#perf_event_active_state enum perf_event_active_state { PERF_EVENT_STATE_ERROR = - 2 , PERF_EVENT_STATE_OFF = - 1 , PERF_EVENT_STATE_INACTIVE = 0 , PERF_EVENT_STATE_ACTIVE = 1 , } 
t#local_t typedef struct { t#atomic_long_t a ; } local_t 
t#local64_t typedef struct { t#local_t a ; } local64_t 
s#perf_event_attr struct perf_event_attr { t#__u32 type ; t#__u32 size ; t#__u64 config ; union { t#__u64 sample_period ; t#__u64 sample_freq ; } ; t#__u64 sample_type ; t#__u64 read_format ; t#__u64 disabled : 1 , inherit : 1 , pinned : 1 , exclusive : 1 , exclude_user : 1 , exclude_kernel : 1 , exclude_hv : 1 , exclude_idle : 1 , mmap : 1 , comm : 1 , freq : 1 , inherit_stat : 1 , enable_on_exec : 1 , task : 1 , watermark : 1 , precise_ip : 2 , mmap_data : 1 , sample_id_all : 1 , exclude_host : 1 , exclude_guest : 1 , __reserved_1 : 43 ; union { t#__u32 wakeup_events ; t#__u32 wakeup_watermark ; } ; t#__u32 bp_type ; union { t#__u64 bp_addr ; t#__u64 config1 ; } ; union { t#__u64 bp_len ; t#__u64 config2 ; } ; t#__u64 branch_sample_type ; } 
s#hw_perf_event_extra struct hw_perf_event_extra { t#u64 config ; unsigned int reg ; int alloc ; int idx ; } 
s#arch_hw_breakpoint struct arch_hw_breakpoint { t#bool extraneous_interrupt ; t#u8 len ; int type ; unsigned long address ; } 
s#hw_perf_event struct hw_perf_event { union { struct { t#u64 config ; t#u64 last_tag ; unsigned long config_base ; unsigned long event_base ; int event_base_rdpmc ; int idx ; int last_cpu ; int flags ; s#hw_perf_event_extra extra_reg ; s#hw_perf_event_extra branch_reg ; } ; struct { s#hrtimer hrtimer ; } ; struct { s#arch_hw_breakpoint info ; s#list_head bp_list ; s#task_struct * bp_target ; } ; } ; int state ; t#local64_t prev_count ; t#u64 sample_period ; t#u64 last_period ; t#local64_t period_left ; t#u64 interrupts_seq ; t#u64 interrupts ; t#u64 freq_time_stamp ; t#u64 freq_count_stamp ; } 
s##ring_buffer
s#irq_work struct irq_work { s#irq_work * next ; void ( * func ) ( s#irq_work * ) ; } 
u#perf_mem_data_src union perf_mem_data_src { t#__u64 val ; struct { t#__u64 mem_op : 5 , mem_lvl : 14 , mem_snoop : 5 , mem_lock : 2 , mem_dtlb : 7 , mem_rsvd : 31 ; } ; } 
s#perf_callchain_entry struct perf_callchain_entry { t#__u64 nr ; t#__u64 ip [ 255 ] ; } 
s#perf_raw_record struct perf_raw_record { t#u32 size ; void * data ; } 
s#perf_branch_entry struct perf_branch_entry { t#__u64 from ; t#__u64 to ; t#__u64 mispred : 1 , predicted : 1 , reserved : 62 ; } 
s#perf_branch_stack struct perf_branch_stack { t#__u64 nr ; s#perf_branch_entry entries [ 0 ] ; } 
s#perf_sample_data struct perf_sample_data { t#u64 type ; t#u64 ip ; struct { t#u32 pid ; t#u32 tid ; } tid_entry ; t#u64 time ; t#u64 addr ; t#u64 id ; t#u64 stream_id ; struct { t#u32 cpu ; t#u32 reserved ; } cpu_entry ; t#u64 period ; u#perf_mem_data_src data_src ; s#perf_callchain_entry * callchain ; s#perf_raw_record * raw ; s#perf_branch_stack * br_stack ; t#u64 weight ; } 
t#perf_overflow_handler_t typedef void ( * perf_overflow_handler_t ) ( s#perf_event * , s#perf_sample_data * , s#pt_regs * ) 
s#perf_event struct perf_event { s#list_head group_entry ; s#list_head event_entry ; s#list_head sibling_list ; s#hlist_node hlist_entry ; int nr_siblings ; int group_flags ; s#perf_event * group_leader ; s#pmu * pmu ; e#perf_event_active_state state ; unsigned int attach_state ; t#local64_t count ; t#atomic64_t child_count ; t#u64 total_time_enabled ; t#u64 total_time_running ; t#u64 tstamp_enabled ; t#u64 tstamp_running ; t#u64 tstamp_stopped ; t#u64 shadow_ctx_time ; s#perf_event_attr attr ; t#u16 header_size ; t#u16 id_header_size ; t#u16 read_size ; s#hw_perf_event hw ; s#perf_event_context * ctx ; t#atomic_long_t refcount ; t#atomic64_t child_total_time_enabled ; t#atomic64_t child_total_time_running ; s#mutex child_mutex ; s#list_head child_list ; s#perf_event * parent ; int oncpu ; int cpu ; s#list_head owner_entry ; s#task_struct * owner ; s#mutex mmap_mutex ; t#atomic_t mmap_count ; int mmap_locked ; s#user_struct * mmap_user ; s#ring_buffer * rb ; s#list_head rb_entry ; t#wait_queue_head_t waitq ; s#fasync_struct * fasync ; int pending_wakeup ; int pending_kill ; int pending_disable ; s#irq_work pending ; t#atomic_t event_limit ; void ( * destroy ) ( s#perf_event * ) ; s#rcu_head rcu_head ; s#pid_namespace * ns ; t#u64 id ; t#perf_overflow_handler_t overflow_handler ; void * overflow_handler_context ; s#ftrace_event_call * tp_event ; s#event_filter * filter ; s#perf_cgroup * cgrp ; int cgrp_defer_enabled ; } 
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s#taskstats struct taskstats { t#__u16 version ; t#__u32 ac_exitcode ; t#__u8 ac_flag ; t#__u8 ac_nice ; t#__u64 cpu_count __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 cpu_delay_total ; t#__u64 blkio_count ; t#__u64 blkio_delay_total ; t#__u64 swapin_count ; t#__u64 swapin_delay_total ; t#__u64 cpu_run_real_total ; t#__u64 cpu_run_virtual_total ; char ac_comm [ 32 ] ; t#__u8 ac_sched __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u8 ac_pad [ 3 ] ; t#__u32 ac_uid __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u32 ac_gid ; t#__u32 ac_pid ; t#__u32 ac_ppid ; t#__u32 ac_btime ; t#__u64 ac_etime __attribute__ ( ( aligned ( 8 ) ) ) ; t#__u64 ac_utime ; t#__u64 ac_stime ; t#__u64 ac_minflt ; t#__u64 ac_majflt ; t#__u64 coremem ; t#__u64 virtmem ; t#__u64 hiwater_rss ; t#__u64 hiwater_vm ; t#__u64 read_char ; t#__u64 write_char ; t#__u64 read_syscalls ; t#__u64 write_syscalls ; t#__u64 read_bytes ; t#__u64 write_bytes ; t#__u64 cancelled_write_bytes ; t#__u64 nvcsw ; t#__u64 nivcsw ; t#__u64 ac_utimescaled ; t#__u64 ac_stimescaled ; t#__u64 cpu_scaled_run_real_total ; t#__u64 freepages_count ; t#__u64 freepages_delay_total ; } 
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s#css_set struct css_set { t#atomic_t refcount ; s#hlist_node hlist ; s#list_head tasks ; s#list_head cg_links ; s#cgroup_subsys_state * subsys [ ( 8 * sizeof ( unsigned long ) ) ] ; s#rcu_head rcu_head ; } 
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s#irq_chip struct irq_chip { const char * name ; unsigned int ( * irq_startup ) ( s#irq_data * ) ; void ( * irq_shutdown ) ( s#irq_data * ) ; void ( * irq_enable ) ( s#irq_data * ) ; void ( * irq_disable ) ( s#irq_data * ) ; void ( * irq_ack ) ( s#irq_data * ) ; void ( * irq_mask ) ( s#irq_data * ) ; void ( * irq_mask_ack ) ( s#irq_data * ) ; void ( * irq_unmask ) ( s#irq_data * ) ; void ( * irq_eoi ) ( s#irq_data * ) ; int ( * irq_set_affinity ) ( s#irq_data * , const s#cpumask * , t#bool ) ; int ( * irq_retrigger ) ( s#irq_data * ) ; int ( * irq_set_type ) ( s#irq_data * , unsigned int ) ; int ( * irq_set_wake ) ( s#irq_data * , unsigned int ) ; void ( * irq_bus_lock ) ( s#irq_data * ) ; void ( * irq_bus_sync_unlock ) ( s#irq_data * ) ; void ( * irq_cpu_online ) ( s#irq_data * ) ; void ( * irq_cpu_offline ) ( s#irq_data * ) ; void ( * irq_suspend ) ( s#irq_data * ) ; void ( * irq_resume ) ( s#irq_data * ) ; void ( * irq_pm_shutdown ) ( s#irq_data * ) ; void ( * irq_print_chip ) ( s#irq_data * , s#seq_file * ) ; unsigned long flags ; } 
s##msi_desc
s#irq_data struct irq_data { unsigned int irq ; unsigned int node ; unsigned int state_use_accessors ; s#irq_chip * chip ; void * handler_data ; void * chip_data ; s#msi_desc * msi_desc ; t#cpumask_var_t affinity ; } 
irqd_to_hwirq extern t#irq_hw_number_t irqd_to_hwirq ( s#irq_data * ) 
virq_to_hw extern t#irq_hw_number_t virq_to_hw ( unsigned int ) 
s#irq_host_ops struct irq_host_ops { int ( * match ) ( s#irq_host * , s#device_node * ) ; int ( * map ) ( s#irq_host * , unsigned int , t#irq_hw_number_t ) ; void ( * unmap ) ( s#irq_host * , unsigned int ) ; int ( * xlate ) ( s#irq_host * , s#device_node * , const t#u32 * , unsigned int , t#irq_hw_number_t * , unsigned int * ) ; } 
s#irq_host struct irq_host { s#list_head link ; unsigned int revmap_type ; union { struct { unsigned int size ; unsigned int * revmap ; } linear ; s#radix_tree_root tree ; } revmap_data ; s#irq_host_ops * ops ; void * host_data ; t#irq_hw_number_t inval_irq ; s#device_node * of_node ; } 
virq_is_host extern t#bool virq_is_host ( unsigned int , s#irq_host * ) 
irq_find_host extern s#irq_host * irq_find_host ( s#device_node * ) 
irq_create_mapping extern unsigned int irq_create_mapping ( s#irq_host * , t#irq_hw_number_t ) 
irq_create_of_mapping extern unsigned int irq_create_of_mapping ( s#device_node * , const t#u32 * , unsigned int ) 
irq_dispose_mapping extern void irq_dispose_mapping ( unsigned int ) 
irq_find_mapping extern unsigned int irq_find_mapping ( s#irq_host * , t#irq_hw_number_t ) 

/* arch/powerpc/kernel/isa-bridge.o */
isa_io_base extern unsigned long isa_io_base 
s#pci_ops struct pci_ops { int ( * read ) ( s#pci_bus * , unsigned int , int , int , t#u32 * ) ; int ( * write ) ( s#pci_bus * , unsigned int , int , int , t#u32 ) ; } 
s##proc_dir_entry
t#pci_bus_flags_t typedef unsigned short pci_bus_flags_t 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s#pci_bus struct pci_bus { s#list_head node ; s#pci_bus * parent ; s#list_head children ; s#list_head devices ; s#pci_dev * self ; s#list_head slots ; s#resource * resource [ 4 ] ; s#list_head resources ; s#pci_ops * ops ; void * sysdata ; s#proc_dir_entry * procdir ; unsigned char number ; unsigned char primary ; unsigned char secondary ; unsigned char subordinate ; unsigned char max_bus_speed ; unsigned char cur_bus_speed ; char name [ 48 ] ; unsigned short bridge_ctl ; t#pci_bus_flags_t bus_flags ; s#device * bridge ; s#device dev ; s#bin_attribute * legacy_io ; s#bin_attribute * legacy_mem ; unsigned int is_added : 1 ; } 
s##hotplug_slot
s#pci_slot struct pci_slot { s#pci_bus * bus ; s#list_head list ; s#hotplug_slot * hotplug ; unsigned char number ; s#kobject kobj ; } 
s#pci_device_id struct pci_device_id { t#__u32 vendor , device ; t#__u32 subvendor , subdevice ; t#__u32 class , class_mask ; t#kernel_ulong_t driver_data ; } 
t#pci_ers_result_t typedef unsigned int pci_ers_result_t 
e#pci_channel_state enum pci_channel_state { pci_channel_io_normal = ( pci_channel_state_t ) 1 , pci_channel_io_frozen = ( pci_channel_state_t ) 2 , pci_channel_io_perm_failure = ( pci_channel_state_t ) 3 , } 
s#pci_error_handlers struct pci_error_handlers { t#pci_ers_result_t ( * error_detected ) ( s#pci_dev * , e#pci_channel_state ) ; t#pci_ers_result_t ( * mmio_enabled ) ( s#pci_dev * ) ; t#pci_ers_result_t ( * link_reset ) ( s#pci_dev * ) ; t#pci_ers_result_t ( * slot_reset ) ( s#pci_dev * ) ; void ( * resume ) ( s#pci_dev * ) ; } 
s#pci_dynids struct pci_dynids { t#spinlock_t lock ; s#list_head list ; } 
s#pci_driver struct pci_driver { s#list_head node ; const char * name ; const s#pci_device_id * id_table ; int ( * probe ) ( s#pci_dev * , const s#pci_device_id * ) ; void ( * remove ) ( s#pci_dev * ) ; int ( * suspend ) ( s#pci_dev * , t#pm_message_t ) ; int ( * suspend_late ) ( s#pci_dev * , t#pm_message_t ) ; int ( * resume_early ) ( s#pci_dev * ) ; int ( * resume ) ( s#pci_dev * ) ; void ( * shutdown ) ( s#pci_dev * ) ; int ( * sriov_configure ) ( s#pci_dev * , int ) ; const s#pci_error_handlers * err_handler ; s#device_driver driver ; s#pci_dynids dynids ; } 
t#pci_power_t typedef int pci_power_t 
s##pcie_link_state
t#pci_channel_state_t typedef unsigned int pci_channel_state_t 
E#PCI_BRIDGE_RESOURCES ( 5 ) + 2 
E#DEVICE_COUNT_RESOURCE ( E#PCI_BRIDGE_RESOURCES + 4 - 1 ) + 2 
t#pci_dev_flags_t typedef unsigned short pci_dev_flags_t 
s##pci_vpd
s#pci_dev struct pci_dev { s#list_head bus_list ; s#pci_bus * bus ; s#pci_bus * subordinate ; void * sysdata ; s#proc_dir_entry * procent ; s#pci_slot * slot ; unsigned int devfn ; unsigned short vendor ; unsigned short device ; unsigned short subsystem_vendor ; unsigned short subsystem_device ; unsigned int class ; t#u8 revision ; t#u8 hdr_type ; t#u8 pcie_cap ; t#u8 msi_cap ; t#u8 msix_cap ; t#u8 pcie_type : 4 ; t#u8 pcie_mpss : 3 ; t#u8 rom_base_reg ; t#u8 pin ; t#u16 pcie_flags_reg ; s#pci_driver * driver ; t#u64 dma_mask ; s#device_dma_parameters dma_parms ; t#pci_power_t current_state ; int pm_cap ; unsigned int pme_support : 5 ; unsigned int pme_interrupt : 1 ; unsigned int d1_support : 1 ; unsigned int d2_support : 1 ; unsigned int no_d1d2 : 1 ; unsigned int mmio_always_on : 1 ; unsigned int wakeup_prepared : 1 ; unsigned int d3_delay ; s#pcie_link_state * link_state ; t#pci_channel_state_t error_state ; s#device dev ; int cfg_size ; unsigned int irq ; s#resource resource [ E#DEVICE_COUNT_RESOURCE ] ; t#resource_size_t fw_addr [ E#DEVICE_COUNT_RESOURCE ] ; unsigned int transparent : 1 ; unsigned int multifunction : 1 ; unsigned int is_added : 1 ; unsigned int is_busmaster : 1 ; unsigned int no_msi : 1 ; unsigned int block_ucfg_access : 1 ; unsigned int broken_parity_status : 1 ; unsigned int irq_reroute_variant : 2 ; unsigned int msi_enabled : 1 ; unsigned int msix_enabled : 1 ; unsigned int ari_enabled : 1 ; unsigned int is_managed : 1 ; unsigned int is_pcie : 1 ; unsigned int needs_freset : 1 ; unsigned int state_saved : 1 ; unsigned int is_physfn : 1 ; unsigned int is_virtfn : 1 ; unsigned int reset_fn : 1 ; unsigned int is_hotplug_bridge : 1 ; unsigned int __aer_firmware_first_valid : 1 ; unsigned int __aer_firmware_first : 1 ; t#pci_dev_flags_t dev_flags ; t#atomic_t enable_cnt ; t#u32 saved_config_space [ 16 ] ; s#hlist_head saved_cap_space ; s#bin_attribute * rom_attr ; int rom_attr_enabled ; s#bin_attribute * res_attr [ E#DEVICE_COUNT_RESOURCE ] ; s#bin_attribute * res_attr_wc [ E#DEVICE_COUNT_RESOURCE ] ; s#list_head msi_list ; s#kset * msi_kset ; s#pci_vpd * vpd ; } 
isa_bridge_pcidev extern s#pci_dev * isa_bridge_pcidev 

/* arch/powerpc/kernel/kvm.o */
kvm_hypercall extern unsigned long kvm_hypercall ( unsigned long * , unsigned long * , unsigned long ) 

/* arch/powerpc/kernel/paca.o */
s#lppaca struct lppaca { t#u32 desc ; t#u16 size ; t#u16 reserved1 ; t#u16 reserved2 : 14 ; t#u8 shared_proc : 1 ; t#u8 secondary_thread : 1 ; volatile t#u8 dyn_proc_status : 8 ; t#u8 secondary_thread_count ; volatile t#u16 dyn_hv_phys_proc_index ; volatile t#u16 dyn_hv_log_proc_index ; t#u32 decr_val ; t#u32 pmc_val ; volatile t#u32 dyn_hw_node_id ; volatile t#u32 dyn_hw_proc_id ; volatile t#u32 dyn_pir ; t#u32 dsei_data ; t#u64 sprg3 ; t#u8 reserved3 [ 40 ] ; volatile t#u8 vphn_assoc_counts [ 8 ] ; t#u8 reserved4 [ 32 ] ; union { t#u64 any_int ; struct { t#u16 reserved ; t#u8 xirr_int ; t#u8 ipi_cnt ; t#u8 decr_int ; t#u8 pdc_int ; t#u8 quantum_int ; t#u8 old_plic_deferred_ext_int ; } fields ; } int_dword ; t#u64 plic_defer_ints_area ; t#u64 saved_srr0 ; t#u64 saved_srr1 ; t#u64 saved_gpr3 ; t#u64 saved_gpr4 ; union { t#u64 saved_gpr5 ; struct { t#u8 cede_latency_hint ; t#u8 reserved [ 7 ] ; } fields ; } gpr5_dword ; t#u8 dtl_enable_mask ; t#u8 donate_dedicated_cpu ; t#u8 fpregs_in_use ; t#u8 pmcregs_in_use ; volatile t#u32 saved_decr ; volatile t#u64 emulated_time_base ; volatile t#u64 cur_plic_latency ; t#u64 tot_plic_latency ; t#u64 wait_state_cycles ; t#u64 end_of_quantum ; t#u64 pdc_saved_sprg1 ; t#u64 pdc_saved_srr0 ; volatile t#u32 virtual_decr ; t#u16 slb_count ; t#u8 idle ; t#u8 vmxregs_in_use ; volatile t#u32 yield_count ; volatile t#u32 dispersion_count ; volatile t#u64 cmo_faults ; volatile t#u64 cmo_fault_time ; t#u8 reserved7 [ 104 ] ; t#u32 page_ins ; t#u8 reserved8 [ 148 ] ; volatile t#u64 dtl_idx ; t#u8 reserved9 [ 96 ] ; } 
t#s16 typedef signed short s16 
s#slb_shadow struct slb_shadow { t#u32 persistent ; t#u32 buffer_length ; t#u64 reserved ; struct { t#u64 esid ; t#u64 vsid ; } save_area [ 3 ] ; } 
s#dtl_entry struct dtl_entry { t#u8 dispatch_reason ; t#u8 preempt_reason ; t#u16 processor_id ; t#u32 enqueue_to_dispatch_time ; t#u32 ready_to_enqueue_time ; t#u32 waiting_to_ready_time ; t#u64 timebase ; t#u64 fault_addr ; t#u64 srr0 ; t#u64 srr1 ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#paca_struct struct paca_struct { s#lppaca * lppaca_ptr ; t#u16 lock_token ; t#u16 paca_index ; t#u64 kernel_toc ; t#u64 kernelbase ; t#u64 kernel_msr ; t#u64 stab_real ; t#u64 stab_addr ; void * emergency_sp ; t#u64 data_offset ; t#s16 hw_cpu_id ; t#u8 cpu_start ; t#u8 kexec_state ; s#slb_shadow * slb_shadow_ptr ; s#dtl_entry * dispatch_log ; s#dtl_entry * dispatch_log_end ; t#u64 dscr_default ; t#u64 exgen [ 12 ] __attribute__ ( ( aligned ( 0x80 ) ) ) ; t#u64 exmc [ 12 ] ; t#u64 exslb [ 12 ] ; t#u16 vmalloc_sllp ; t#u16 slb_cache_ptr ; t#u16 slb_cache [ 8 ] ; t#mm_context_t context ; s#task_struct * __current ; t#u64 kstack ; t#u64 stab_rr ; t#u64 saved_r1 ; t#u64 saved_msr ; t#u16 trap_save ; t#u8 soft_enabled ; t#u8 hard_enabled ; t#u8 io_sync ; t#u8 irq_work_pending ; t#u64 user_time ; t#u64 system_time ; t#u64 user_time_scaled ; t#u64 starttime ; t#u64 starttime_user ; t#u64 startspurr ; t#u64 utime_sspurr ; t#u64 stolen_time ; t#u64 dtl_ridx ; s#dtl_entry * dtl_curr ; } 
paca extern s#paca_struct * paca 

/* arch/powerpc/kernel/pci-common.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
get_pci_dma_ops extern s#dma_map_ops * get_pci_dma_ops ( void ) 
pci_address_to_pio extern unsigned long pci_address_to_pio ( t#phys_addr_t ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pci_domain_nr extern int pci_domain_nr ( s#pci_bus * ) 
pci_read_irq_line extern int pci_read_irq_line ( s#pci_dev * ) 
s#pci_bus_region struct pci_bus_region { t#resource_size_t start ; t#resource_size_t end ; } 
pcibios_resource_to_bus extern void pcibios_resource_to_bus ( s#pci_dev * , s#pci_bus_region * , s#resource * ) 
pcibios_bus_to_resource extern void pcibios_bus_to_resource ( s#pci_dev * , s#resource * , s#pci_bus_region * ) 
pcibios_fixup_bus void pcibios_fixup_bus ( s#pci_bus * ) 
pcibios_align_resource t#resource_size_t pcibios_align_resource ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) 
pcibios_finish_adding_to_bus extern void pcibios_finish_adding_to_bus ( s#pci_bus * ) 

/* arch/powerpc/kernel/pci_64.o */
pci_io_base extern unsigned long pci_io_base 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##dma_coherent_mem
s##subsys_private
s##driver_private
s##pcie_link_state
s##pci_vpd
pcibios_unmap_io_space extern int pcibios_unmap_io_space ( s#pci_bus * ) 
pcibios_map_io_space extern int pcibios_map_io_space ( s#pci_bus * ) 
pcibus_to_node extern int pcibus_to_node ( s#pci_bus * ) 

/* arch/powerpc/kernel/pci_dn.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
fetch_dev_dn extern s#device_node * fetch_dev_dn ( s#pci_dev * ) 

/* arch/powerpc/kernel/pci_of_scan.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
of_create_pci_dev extern s#pci_dev * of_create_pci_dev ( s#device_node * , s#pci_bus * , int ) 
of_scan_pci_bridge extern void of_scan_pci_bridge ( s#device_node * , s#pci_dev * ) 
of_scan_bus extern void of_scan_bus ( s#device_node * , s#pci_bus * ) 
of_rescan_bus extern void of_rescan_bus ( s#device_node * , s#pci_bus * ) 

/* arch/powerpc/kernel/pmc.o */
t#perf_irq_t typedef void ( * perf_irq_t ) ( s#pt_regs * ) 
reserve_pmc_hardware int reserve_pmc_hardware ( t#perf_irq_t ) 
release_pmc_hardware void release_pmc_hardware ( void ) 

/* arch/powerpc/kernel/ppc_ksyms.o */
strcpy extern char * strcpy ( char * , const char * ) 
strncpy extern char * strncpy ( char * , const char * , t#__kernel_size_t ) 
strcat extern char * strcat ( char * , const char * ) 
strlen extern t#__kernel_size_t strlen ( const char * ) 
strcmp extern int strcmp ( const char * , const char * ) 
strncmp extern int strncmp ( const char * , const char * , t#__kernel_size_t ) 
csum_partial extern t#__wsum csum_partial ( const void * , int , t#__wsum ) 
csum_partial_copy_generic extern t#__wsum csum_partial_copy_generic ( const void * , void * , int , t#__wsum , int * , int * ) 
t#__sum16 typedef t#__u16 __sum16 
ip_fast_csum extern t#__sum16 ip_fast_csum ( const void * , unsigned int ) 
t#__be32 typedef t#__u32 __be32 
csum_tcpudp_magic extern t#__sum16 csum_tcpudp_magic ( t#__be32 , t#__be32 , unsigned short , unsigned short , t#__wsum ) 
__copy_tofrom_user extern unsigned long __copy_tofrom_user ( void * , const void * , unsigned long ) 
__clear_user extern unsigned long __clear_user ( void * , unsigned long ) 
__strncpy_from_user extern int __strncpy_from_user ( char * , const char * , long ) 
__strnlen_user extern int __strnlen_user ( const char * , long , unsigned long ) 
copy_page extern void copy_page ( void * , void * ) 
start_thread void start_thread ( s#pt_regs * , unsigned long , unsigned long ) 
kernel_thread extern long kernel_thread ( int ( * ) ( void * ) , void * , unsigned long ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s#cdev struct cdev { s#kobject kobj ; s#module * owner ; const s#file_operations * ops ; s#list_head list ; t#dev_t dev ; unsigned int count ; } 
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
t#tcflag_t typedef unsigned int tcflag_t 
t#cc_t typedef unsigned char cc_t 
t#speed_t typedef unsigned int speed_t 
s#ktermios struct ktermios { t#tcflag_t c_iflag ; t#tcflag_t c_oflag ; t#tcflag_t c_cflag ; t#tcflag_t c_lflag ; t#cc_t c_cc [ 19 ] ; t#cc_t c_line ; t#speed_t c_ispeed ; t#speed_t c_ospeed ; } 
s#winsize struct winsize { unsigned short ws_row ; unsigned short ws_col ; unsigned short ws_xpixel ; unsigned short ws_ypixel ; } 
s#termiox struct termiox { t#__u16 x_hflag ; t#__u16 x_cflag ; t#__u16 x_rflag [ 5 ] ; t#__u16 x_sflag ; } 
s#serial_icounter_struct struct serial_icounter_struct { int cts , dsr , rng , dcd ; int rx , tx ; int frame , overrun , parity , brk ; int buf_overrun ; int reserved [ 9 ] ; } 
s#tty_operations struct tty_operations { s#tty_struct * ( * lookup ) ( s#tty_driver * , s#inode * , int ) ; int ( * install ) ( s#tty_driver * , s#tty_struct * ) ; void ( * remove ) ( s#tty_driver * , s#tty_struct * ) ; int ( * open ) ( s#tty_struct * , s#file * ) ; void ( * close ) ( s#tty_struct * , s#file * ) ; void ( * shutdown ) ( s#tty_struct * ) ; void ( * cleanup ) ( s#tty_struct * ) ; int ( * write ) ( s#tty_struct * , const unsigned char * , int ) ; int ( * put_char ) ( s#tty_struct * , unsigned char ) ; void ( * flush_chars ) ( s#tty_struct * ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; void ( * stop ) ( s#tty_struct * ) ; void ( * start ) ( s#tty_struct * ) ; void ( * hangup ) ( s#tty_struct * ) ; int ( * break_ctl ) ( s#tty_struct * , int ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; void ( * set_ldisc ) ( s#tty_struct * ) ; void ( * wait_until_sent ) ( s#tty_struct * , int ) ; void ( * send_xchar ) ( s#tty_struct * , char ) ; int ( * tiocmget ) ( s#tty_struct * ) ; int ( * tiocmset ) ( s#tty_struct * , unsigned int , unsigned int ) ; int ( * resize ) ( s#tty_struct * , s#winsize * ) ; int ( * set_termiox ) ( s#tty_struct * , s#termiox * ) ; int ( * get_icount ) ( s#tty_struct * , s#serial_icounter_struct * ) ; const s#file_operations * proc_fops ; } 
s#tty_driver struct tty_driver { int magic ; s#kref kref ; s#cdev cdev ; s#module * owner ; const char * driver_name ; const char * name ; int name_base ; int major ; int minor_start ; int minor_num ; int num ; short type ; short subtype ; s#ktermios init_termios ; int flags ; s#proc_dir_entry * proc_entry ; s#tty_driver * other ; s#tty_struct * * ttys ; s#ktermios * * termios ; s#ktermios * * termios_locked ; void * driver_state ; const s#tty_operations * ops ; s#list_head tty_drivers ; } 
s#pps_event_time struct pps_event_time { s#timespec ts_real ; } 
s#tty_ldisc_ops struct tty_ldisc_ops { int magic ; char * name ; int num ; int flags ; int ( * open ) ( s#tty_struct * ) ; void ( * close ) ( s#tty_struct * ) ; void ( * flush_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * chars_in_buffer ) ( s#tty_struct * ) ; t#ssize_t ( * read ) ( s#tty_struct * , s#file * , unsigned char * , t#size_t ) ; t#ssize_t ( * write ) ( s#tty_struct * , s#file * , const unsigned char * , t#size_t ) ; int ( * ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; long ( * compat_ioctl ) ( s#tty_struct * , s#file * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#ktermios * ) ; unsigned int ( * poll ) ( s#tty_struct * , s#file * , s#poll_table_struct * ) ; int ( * hangup ) ( s#tty_struct * ) ; void ( * receive_buf ) ( s#tty_struct * , const unsigned char * , char * , int ) ; void ( * write_wakeup ) ( s#tty_struct * ) ; void ( * dcd_change ) ( s#tty_struct * , unsigned int , s#pps_event_time * ) ; s#module * owner ; int refcount ; } 
s#tty_ldisc struct tty_ldisc { s#tty_ldisc_ops * ops ; t#atomic_t users ; } 
s#tty_buffer struct tty_buffer { s#tty_buffer * next ; char * char_buf_ptr ; unsigned char * flag_buf_ptr ; int used ; int size ; int commit ; int read ; unsigned long data [ 0 ] ; } 
s#tty_bufhead struct tty_bufhead { s#work_struct work ; t#spinlock_t lock ; s#tty_buffer * head ; s#tty_buffer * tail ; s#tty_buffer * free ; int memory_used ; } 
s#tty_port_operations struct tty_port_operations { int ( * carrier_raised ) ( s#tty_port * ) ; void ( * dtr_rts ) ( s#tty_port * , int ) ; void ( * shutdown ) ( s#tty_port * ) ; void ( * drop ) ( s#tty_port * ) ; int ( * activate ) ( s#tty_port * , s#tty_struct * ) ; void ( * destruct ) ( s#tty_port * ) ; } 
s#tty_port struct tty_port { s#tty_struct * tty ; const s#tty_port_operations * ops ; t#spinlock_t lock ; int blocked_open ; int count ; t#wait_queue_head_t open_wait ; t#wait_queue_head_t close_wait ; t#wait_queue_head_t delta_msr_wait ; unsigned long flags ; unsigned char console : 1 ; s#mutex mutex ; s#mutex buf_mutex ; unsigned char * xmit_buf ; unsigned int close_delay ; unsigned int closing_wait ; int drain_delay ; s#kref kref ; } 
s#tty_struct struct tty_struct { int magic ; s#kref kref ; s#device * dev ; s#tty_driver * driver ; const s#tty_operations * ops ; int index ; s#mutex ldisc_mutex ; s#tty_ldisc * ldisc ; s#mutex termios_mutex ; t#spinlock_t ctrl_lock ; s#ktermios * termios , * termios_locked ; s#termiox * termiox ; char name [ 64 ] ; s#pid * pgrp ; s#pid * session ; unsigned long flags ; int count ; s#winsize winsize ; unsigned char stopped : 1 , hw_stopped : 1 , flow_stopped : 1 , packet : 1 ; unsigned char low_latency : 1 , warned : 1 ; unsigned char ctrl_status ; unsigned int receive_room ; s#tty_struct * link ; s#fasync_struct * fasync ; s#tty_bufhead buf ; int alt_speed ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t read_wait ; s#work_struct hangup_work ; void * disc_data ; void * driver_data ; s#list_head tty_files ; unsigned int column ; unsigned char lnext : 1 , erasing : 1 , raw : 1 , real_raw : 1 , icanon : 1 ; unsigned char closing : 1 ; unsigned char echo_overrun : 1 ; unsigned short minimum_to_wake ; unsigned long overrun_time ; int num_overrun ; unsigned long process_char_map [ 256 / ( 8 * sizeof ( unsigned long ) ) ] ; char * read_buf ; int read_head ; int read_tail ; int read_cnt ; unsigned long read_flags [ 4096 / ( 8 * sizeof ( unsigned long ) ) ] ; unsigned char * echo_buf ; unsigned int echo_pos ; unsigned int echo_cnt ; int canon_data ; unsigned long canon_head ; unsigned int canon_column ; s#mutex atomic_read_lock ; s#mutex atomic_write_lock ; s#mutex output_lock ; s#mutex echo_lock ; unsigned char * write_buf ; int write_cnt ; t#spinlock_t read_lock ; s#work_struct SAK_work ; s#tty_port * port ; } 
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
giveup_fpu extern void giveup_fpu ( s#task_struct * ) 
giveup_altivec extern void giveup_altivec ( s#task_struct * ) 
giveup_vsx extern void giveup_vsx ( s#task_struct * ) 
__giveup_vsx extern void __giveup_vsx ( s#task_struct * ) 
__flush_icache_range extern void __flush_icache_range ( unsigned long , unsigned long ) 
flush_dcache_range extern void flush_dcache_range ( unsigned long , unsigned long ) 
s#adb_request struct adb_request { unsigned char data [ 32 ] ; int nbytes ; unsigned char reply [ 32 ] ; int reply_len ; unsigned char reply_expected ; unsigned char sent ; unsigned char complete ; void ( * done ) ( s#adb_request * ) ; void * arg ; s#adb_request * next ; } 
adb_request int adb_request ( s#adb_request * , void ( * ) ( s#adb_request * ) , int , int , ... ) 
s#adb_ids struct adb_ids { int nids ; unsigned char id [ 16 ] ; } 
adb_register int adb_register ( int , int , s#adb_ids * , void ( * ) ( unsigned char * , int , int ) ) 
adb_unregister int adb_unregister ( int ) 
adb_poll void adb_poll ( void ) 
adb_try_handler_change int adb_try_handler_change ( int , int ) 
s##rtc_time
to_tm extern void to_tm ( int , s#rtc_time * ) 
memcpy extern void * memcpy ( void * , const void * , t#__kernel_size_t ) 
memset extern void * memset ( void * , int , t#__kernel_size_t ) 
memmove extern void * memmove ( void * , const void * , t#__kernel_size_t ) 
memcmp extern int memcmp ( const void * , const void * , t#__kernel_size_t ) 
memchr extern void * memchr ( const void * , int , t#__kernel_size_t ) 
empty_zero_page extern unsigned long empty_zero_page [ ] 
__arch_hweight8 unsigned int __arch_hweight8 ( unsigned int ) 
__arch_hweight16 unsigned int __arch_hweight16 ( unsigned int ) 
__arch_hweight32 unsigned int __arch_hweight32 ( unsigned int ) 
__arch_hweight64 unsigned long __arch_hweight64 ( t#__u64 ) 

/* arch/powerpc/kernel/process.o */
enable_kernel_fp extern void enable_kernel_fp ( void ) 
enable_kernel_altivec extern void enable_kernel_altivec ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
validate_sp int validate_sp ( unsigned long , s#task_struct * , unsigned long ) 
dump_stack extern void dump_stack ( void ) 

/* arch/powerpc/kernel/prom.o */
cpu_to_chip_id extern int cpu_to_chip_id ( int ) 
s##proc_dir_entry
of_get_cpu_node s#device_node * of_get_cpu_node ( int , unsigned int * ) 

/* arch/powerpc/kernel/rtas.o */
t#rtas_arg_t typedef t#u32 rtas_arg_t 
s#rtas_args struct rtas_args { t#u32 token ; t#u32 nargs ; t#u32 nret ; t#rtas_arg_t args [ 16 ] ; t#rtas_arg_t * rets ; } 
s##proc_dir_entry
s#rtas_t struct rtas_t { unsigned long entry ; unsigned long base ; unsigned long size ; t#arch_spinlock_t lock ; s#rtas_args args ; s#device_node * dev ; } 
rtas extern s#rtas_t rtas 
rtas_data_buf_lock extern t#spinlock_t rtas_data_buf_lock 
rtas_data_buf extern char rtas_data_buf [ 4096 ] 
rtas_flash_term_hook extern void ( * rtas_flash_term_hook ) ( int ) 
rtas_progress extern void rtas_progress ( char * , unsigned short ) 
rtas_token extern int rtas_token ( const char * ) 
rtas_service_present extern int rtas_service_present ( const char * ) 
rtas_get_error_log_max extern int rtas_get_error_log_max ( void ) 
rtas_call extern int rtas_call ( int , int , int , int * , ... ) 
rtas_busy_delay_time extern unsigned int rtas_busy_delay_time ( int ) 
rtas_busy_delay extern unsigned int rtas_busy_delay ( int ) 
rtas_get_power_level extern int rtas_get_power_level ( int , int * ) 
rtas_set_power_level extern int rtas_set_power_level ( int , int , int * ) 
rtas_get_sensor extern int rtas_get_sensor ( int , int , int * ) 
rtas_indicator_present extern t#bool rtas_indicator_present ( int , int * ) 
rtas_set_indicator extern int rtas_set_indicator ( int , int , int ) 
rtas_online_cpus_mask extern int rtas_online_cpus_mask ( t#cpumask_var_t ) 
rtas_offline_cpus_mask extern int rtas_offline_cpus_mask ( t#cpumask_var_t ) 

/* arch/powerpc/kernel/setup-common.o */
s#iommu_pool struct iommu_pool { unsigned long start ; unsigned long end ; unsigned long hint ; t#spinlock_t lock ; } 
s#iommu_table struct iommu_table { unsigned long it_busno ; unsigned long it_size ; unsigned long it_offset ; unsigned long it_base ; unsigned long it_index ; unsigned long it_type ; unsigned long it_blocksize ; unsigned long poolsize ; unsigned long nr_pools ; s#iommu_pool large_pool ; s#iommu_pool pools [ ( 1 << 2 ) ] ; unsigned long * it_map ; } 
s##pci_dev
s##pci_bus
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##pci_controller
s##rtc_time
s##kimage
s#machdep_calls struct machdep_calls { char * name ; void ( * hpte_invalidate ) ( unsigned long , unsigned long , int , int , int ) ; long ( * hpte_updatepp ) ( unsigned long , unsigned long , unsigned long , int , int , int ) ; void ( * hpte_updateboltedpp ) ( unsigned long , unsigned long , int , int ) ; long ( * hpte_insert ) ( unsigned long , unsigned long , unsigned long , unsigned long , unsigned long , int , int ) ; long ( * hpte_remove ) ( unsigned long ) ; void ( * hpte_removebolted ) ( unsigned long , int , int ) ; void ( * flush_hash_range ) ( unsigned long , int ) ; void ( * hpte_clear_all ) ( void ) ; int ( * tce_build ) ( s#iommu_table * , long , long , unsigned long , e#dma_data_direction , s#dma_attrs * ) ; void ( * tce_free ) ( s#iommu_table * , long , long ) ; unsigned long ( * tce_get ) ( s#iommu_table * , long ) ; void ( * tce_flush ) ( s#iommu_table * ) ; void * ( * ioremap ) ( t#phys_addr_t , unsigned long , unsigned long , void * ) ; void ( * iounmap ) ( volatile void * ) ; void ( * iommu_save ) ( void ) ; void ( * iommu_restore ) ( void ) ; void ( * pci_dma_dev_setup ) ( s#pci_dev * ) ; void ( * pci_dma_bus_setup ) ( s#pci_bus * ) ; int ( * dma_set_mask ) ( s#device * , t#u64 ) ; t#u64 ( * dma_get_required_mask ) ( s#device * ) ; int ( * probe ) ( void ) ; void ( * setup_arch ) ( void ) ; void ( * init_early ) ( void ) ; void ( * show_cpuinfo ) ( s#seq_file * ) ; void ( * show_percpuinfo ) ( s#seq_file * , int ) ; void ( * init_IRQ ) ( void ) ; unsigned int ( * get_irq ) ( void ) ; void ( * pcibios_fixup ) ( void ) ; int ( * pci_probe_mode ) ( s#pci_bus * ) ; void ( * pci_irq_fixup ) ( s#pci_dev * ) ; int ( * pci_setup_phb ) ( s#pci_controller * ) ; int ( * msi_check_device ) ( s#pci_dev * , int , int ) ; int ( * setup_msi_irqs ) ( s#pci_dev * , int , int ) ; void ( * teardown_msi_irqs ) ( s#pci_dev * ) ; void ( * restart ) ( char * ) ; void ( * power_off ) ( void ) ; void ( * halt ) ( void ) ; void ( * panic ) ( char * ) ; void ( * cpu_die ) ( void ) ; long ( * time_init ) ( void ) ; int ( * set_rtc_time ) ( s#rtc_time * ) ; void ( * get_rtc_time ) ( s#rtc_time * ) ; unsigned long ( * get_boot_time ) ( void ) ; unsigned char ( * rtc_read_val ) ( int ) ; void ( * rtc_write_val ) ( int , unsigned char ) ; void ( * calibrate_decr ) ( void ) ; void ( * progress ) ( char * , unsigned short ) ; void ( * log_error ) ( char * , unsigned int , int ) ; unsigned char ( * nvram_read_val ) ( int ) ; void ( * nvram_write_val ) ( int , unsigned char ) ; t#ssize_t ( * nvram_write ) ( char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * nvram_read ) ( char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * nvram_size ) ( void ) ; void ( * nvram_sync ) ( void ) ; int ( * system_reset_exception ) ( s#pt_regs * ) ; int ( * machine_check_exception ) ( s#pt_regs * ) ; long ( * feature_call ) ( unsigned int , ... ) ; int ( * pci_get_legacy_ide_irq ) ( s#pci_dev * , int ) ; t#pgprot_t ( * phys_mem_access_prot ) ( s#file * , unsigned long , unsigned long , t#pgprot_t ) ; void ( * idle_loop ) ( void ) ; void ( * power_save ) ( void ) ; void ( * enable_pmcs ) ( void ) ; int ( * set_dabr ) ( unsigned long ) ; int ( * pci_exclude_device ) ( s#pci_controller * , unsigned char , unsigned char ) ; void ( * pcibios_fixup_resources ) ( s#pci_dev * ) ; void ( * pcibios_fixup_bus ) ( s#pci_bus * ) ; int ( * pcibios_enable_device_hook ) ( s#pci_dev * ) ; void ( * machine_shutdown ) ( void ) ; void ( * kexec_cpu_down ) ( int , int ) ; int ( * machine_kexec_prepare ) ( s#kimage * ) ; void ( * machine_kexec ) ( s#kimage * ) ; void ( * suspend_disable_irqs ) ( void ) ; void ( * suspend_enable_irqs ) ( void ) ; int ( * suspend_disable_cpu ) ( void ) ; t#ssize_t ( * cpu_probe ) ( const char * , t#size_t ) ; t#ssize_t ( * cpu_release ) ( const char * , t#size_t ) ; } 
ppc_md extern s#machdep_calls ppc_md 
machine_id extern s#machdep_calls * machine_id 
of_i8042_kbd_irq int of_i8042_kbd_irq 
of_i8042_aux_irq int of_i8042_aux_irq 
machine_power_off extern void machine_power_off ( void ) 
pm_power_off extern void ( * pm_power_off ) ( void ) 
check_legacy_ioport extern int check_legacy_ioport ( unsigned long ) 
powerpc_debugfs_root extern s#dentry * powerpc_debugfs_root 

/* arch/powerpc/kernel/setup_64.o */
s#ppc64_caches struct ppc64_caches { t#u32 dsize ; t#u32 dline_size ; t#u32 log_dline_size ; t#u32 dlines_per_page ; t#u32 isize ; t#u32 iline_size ; t#u32 log_iline_size ; t#u32 ilines_per_page ; } 
ppc64_caches extern s#ppc64_caches ppc64_caches 
__per_cpu_offset extern unsigned long __per_cpu_offset [ 1024 ] 
s#ppc_pci_io extern struct ppc_pci_io { t#u8 ( * readb ) ( const volatile void * ) ; t#u16 ( * readw ) ( const volatile void * ) ; t#u32 ( * readl ) ( const volatile void * ) ; t#u16 ( * readw_be ) ( const volatile void * ) ; t#u32 ( * readl_be ) ( const volatile void * ) ; void ( * writeb ) ( t#u8 , volatile void * ) ; void ( * writew ) ( t#u16 , volatile void * ) ; void ( * writel ) ( t#u32 , volatile void * ) ; void ( * writew_be ) ( t#u16 , volatile void * ) ; void ( * writel_be ) ( t#u32 , volatile void * ) ; t#u64 ( * readq ) ( const volatile void * ) ; t#u64 ( * readq_be ) ( const volatile void * ) ; void ( * writeq ) ( t#u64 , volatile void * ) ; void ( * writeq_be ) ( t#u64 , volatile void * ) ; t#u8 ( * inb ) ( unsigned long ) ; t#u16 ( * inw ) ( unsigned long ) ; t#u32 ( * inl ) ( unsigned long ) ; void ( * outb ) ( t#u8 , unsigned long ) ; void ( * outw ) ( t#u16 , unsigned long ) ; void ( * outl ) ( t#u32 , unsigned long ) ; void ( * readsb ) ( const volatile void * , void * , unsigned long ) ; void ( * readsw ) ( const volatile void * , void * , unsigned long ) ; void ( * readsl ) ( const volatile void * , void * , unsigned long ) ; void ( * writesb ) ( volatile void * , const void * , unsigned long ) ; void ( * writesw ) ( volatile void * , const void * , unsigned long ) ; void ( * writesl ) ( volatile void * , const void * , unsigned long ) ; void ( * insb ) ( unsigned long , void * , unsigned long ) ; void ( * insw ) ( unsigned long , void * , unsigned long ) ; void ( * insl ) ( unsigned long , void * , unsigned long ) ; void ( * outsb ) ( unsigned long , const void * , unsigned long ) ; void ( * outsw ) ( unsigned long , const void * , unsigned long ) ; void ( * outsl ) ( unsigned long , const void * , unsigned long ) ; void ( * memset_io ) ( volatile void * , int , unsigned long ) ; void ( * memcpy_fromio ) ( void * , const volatile void * , unsigned long ) ; void ( * memcpy_toio ) ( volatile void * , const void * , unsigned long ) ; } 
ppc_pci_io extern s#ppc_pci_io ppc_pci_io 

/* arch/powerpc/kernel/smp.o */
cpu_sibling_map extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#cpumask_var_t ) cpu_sibling_map 
cpu_core_map extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#cpumask_var_t ) cpu_core_map 
cpu_core_index_of_thread int cpu_core_index_of_thread ( int ) 
cpu_first_thread_of_core int cpu_first_thread_of_core ( int ) 

/* arch/powerpc/kernel/stacktrace.o */
s#stack_trace struct stack_trace { unsigned int nr_entries , max_entries ; unsigned long * entries ; int skip ; } 
save_stack_trace extern void save_stack_trace ( s#stack_trace * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
save_stack_trace_tsk extern void save_stack_trace_tsk ( s#task_struct * , s#stack_trace * ) 

/* arch/powerpc/kernel/sysfs.o */
ppc_enable_pmcs void ppc_enable_pmcs ( void ) 
s#sysdev_class_attribute struct sysdev_class_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#sysdev_class * , s#sysdev_class_attribute * , char * ) ; t#ssize_t ( * store ) ( s#sysdev_class * , s#sysdev_class_attribute * , const char * , t#size_t ) ; } 
s##sock
s##sysfs_dirent
s#sysdev_class struct sysdev_class { const char * name ; s#list_head drivers ; s#sysdev_class_attribute * * attrs ; s#kset kset ; } 
s#sys_device struct sys_device { t#u32 id ; s#sysdev_class * cls ; s#kobject kobj ; } 
s#sysdev_attribute struct sysdev_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#sys_device * , s#sysdev_attribute * , char * ) ; t#ssize_t ( * store ) ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) ; } 
cpu_add_sysdev_attr extern int cpu_add_sysdev_attr ( s#sysdev_attribute * ) 
cpu_add_sysdev_attr_group extern int cpu_add_sysdev_attr_group ( s#attribute_group * ) 
cpu_remove_sysdev_attr extern void cpu_remove_sysdev_attr ( s#sysdev_attribute * ) 
cpu_remove_sysdev_attr_group extern void cpu_remove_sysdev_attr_group ( s#attribute_group * ) 
sysfs_add_device_to_node extern int sysfs_add_device_to_node ( s#sys_device * , int ) 
sysfs_remove_device_from_node extern void sysfs_remove_device_from_node ( s#sys_device * , int ) 

/* arch/powerpc/kernel/time.o */
tb_ticks_per_usec extern unsigned long tb_ticks_per_usec 
tb_ticks_per_sec extern unsigned long tb_ticks_per_sec 
rtc_lock t#spinlock_t rtc_lock 
ppc_proc_freq extern unsigned long ppc_proc_freq 
ppc_tb_freq extern unsigned long ppc_tb_freq 
__cputime_jiffies_factor extern t#u64 __cputime_jiffies_factor 
__cputime_usec_factor extern t#u64 __cputime_usec_factor 
__cputime_sec_factor extern t#u64 __cputime_sec_factor 
__cputime_clockt_factor extern t#u64 __cputime_clockt_factor 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
t#poll_queue_proc typedef void ( * poll_queue_proc ) ( s#file * , t#wait_queue_head_t * , s#poll_table_struct * ) 
s#poll_table_struct struct poll_table_struct { t#poll_queue_proc qproc ; unsigned long key ; } 
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s#linux_binprm struct linux_binprm { char buf [ 128 ] ; s#vm_area_struct * vma ; unsigned long vma_pages ; s#mm_struct * mm ; unsigned long p ; unsigned int cred_prepared : 1 , cap_effective : 1 ; unsigned int recursion_depth ; s#file * file ; s#cred * cred ; int unsafe ; unsigned int per_clear ; int argc , envc ; const char * filename ; const char * interp ; unsigned interp_flags ; unsigned interp_data ; unsigned long loader , exec ; } 
s#coredump_params struct coredump_params { long signr ; s#pt_regs * regs ; s#file * file ; unsigned long limit ; unsigned long mm_flags ; } 
s#linux_binfmt struct linux_binfmt { s#list_head lh ; s#module * module ; int ( * load_binary ) ( s#linux_binprm * , s#pt_regs * ) ; int ( * load_shlib ) ( s#file * ) ; int ( * core_dump ) ( s#coredump_params * ) ; unsigned long min_coredump ; } 
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
account_system_vtime extern void account_system_vtime ( s#task_struct * ) 
__delay extern void __delay ( unsigned long ) 
udelay extern void udelay ( unsigned long ) 
profile_pc extern unsigned long profile_pc ( s#pt_regs * ) 

/* arch/powerpc/kernel/traps.o */
__debugger extern int ( * __debugger ) ( s#pt_regs * ) 
__debugger_ipi extern int ( * __debugger_ipi ) ( s#pt_regs * ) 
__debugger_bpt extern int ( * __debugger_bpt ) ( s#pt_regs * ) 
__debugger_sstep extern int ( * __debugger_sstep ) ( s#pt_regs * ) 
__debugger_iabr_match extern int ( * __debugger_iabr_match ) ( s#pt_regs * ) 
__debugger_dabr_match extern int ( * __debugger_dabr_match ) ( s#pt_regs * ) 
__debugger_fault_handler extern int ( * __debugger_fault_handler ) ( s#pt_regs * ) 

/* arch/powerpc/kernel/vio.o */
vio_cmo_entitlement_update extern int vio_cmo_entitlement_update ( t#size_t ) 
e#vio_dev_family enum vio_dev_family { VDEVICE , PFO , } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s#vio_dev struct vio_dev { const char * name ; const char * type ; t#uint32_t unit_address ; t#uint32_t resource_id ; unsigned int irq ; struct { t#size_t desired ; t#size_t entitled ; t#size_t allocated ; t#atomic_t allocs_failed ; } cmo ; e#vio_dev_family family ; s#device dev ; } 
vio_cmo_set_dev_desired extern void vio_cmo_set_dev_desired ( s#vio_dev * , t#size_t ) 
s#vio_pfo_op struct vio_pfo_op { t#u64 flags ; t#s64 in ; t#s64 inlen ; t#s64 out ; t#s64 outlen ; t#u64 csbcpb ; void * done ; unsigned long handle ; unsigned int timeout ; long hcall_err ; } 
vio_h_cop_sync extern int vio_h_cop_sync ( s#vio_dev * , s#vio_pfo_op * ) 
s#vio_device_id struct vio_device_id { char type [ 32 ] ; char compat [ 32 ] ; } 
s#vio_driver struct vio_driver { const s#vio_device_id * id_table ; int ( * probe ) ( s#vio_dev * , const s#vio_device_id * ) ; int ( * remove ) ( s#vio_dev * ) ; unsigned long ( * get_desired_dma ) ( s#vio_dev * ) ; s#device_driver driver ; } 
vio_register_driver extern int vio_register_driver ( s#vio_driver * ) 
vio_unregister_driver extern void vio_unregister_driver ( s#vio_driver * ) 
vio_register_device_node extern s#vio_dev * vio_register_device_node ( s#device_node * ) 
vio_unregister_device extern void __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) vio_unregister_device ( s#vio_dev * ) 
vio_get_attribute extern const void * vio_get_attribute ( s#vio_dev * , char * , int * ) 
vio_find_node extern s#vio_dev * vio_find_node ( s#device_node * ) 
vio_enable_interrupts extern int vio_enable_interrupts ( s#vio_dev * ) 
vio_disable_interrupts extern int vio_disable_interrupts ( s#vio_dev * ) 

/* arch/powerpc/lib/checksum_wrappers_64.o */
csum_and_copy_from_user extern t#__wsum csum_and_copy_from_user ( const void * , void * , int , t#__wsum , int * ) 
csum_and_copy_to_user extern t#__wsum csum_and_copy_to_user ( const void * , void * , int , t#__wsum , int * ) 

/* arch/powerpc/lib/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
devm_ioremap_prot void * devm_ioremap_prot ( s#device * , t#resource_size_t , t#size_t , unsigned long ) 

/* arch/powerpc/lib/locks.o */
arch_spin_unlock_wait extern void arch_spin_unlock_wait ( t#arch_spinlock_t * ) 

/* arch/powerpc/lib/usercopy_64.o */
copy_from_user extern unsigned long copy_from_user ( void * , const void * , unsigned long ) 
copy_to_user extern unsigned long copy_to_user ( void * , const void * , unsigned long ) 
copy_in_user extern unsigned long copy_in_user ( void * , const void * , unsigned long ) 

/* arch/powerpc/mm/hash_utils_64.o */
htab_hash_mask extern unsigned long htab_hash_mask 
mmu_slb_size extern t#u16 mmu_slb_size 
hash_page extern int hash_page ( unsigned long , unsigned long , unsigned long ) 

/* arch/powerpc/mm/init_64.o */
memstart_addr extern t#phys_addr_t memstart_addr 
kernstart_addr extern t#phys_addr_t kernstart_addr 

/* arch/powerpc/mm/mem.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s#swap_extent struct swap_extent { s#list_head list ; unsigned long start_page ; unsigned long nr_pages ; t#sector_t start_block ; } 
s##hd_struct
s##gendisk
s#swap_info_struct struct swap_info_struct { unsigned long flags ; signed short prio ; signed char type ; signed char next ; unsigned int max ; unsigned char * swap_map ; unsigned int lowest_bit ; unsigned int highest_bit ; unsigned int pages ; unsigned int inuse_pages ; unsigned int cluster_next ; unsigned int cluster_nr ; unsigned int lowest_alloc ; unsigned int highest_alloc ; s#swap_extent * curr_swap_extent ; s#swap_extent first_swap_extent ; s#block_device * bdev ; s#file * swap_file ; unsigned int old_block_size ; } 
s##backing_dev_info
s##array_cache
s##kmem_list3
s#mempolicy struct mempolicy { t#atomic_t refcnt ; unsigned short mode ; unsigned short flags ; union { short preferred_node ; t#nodemask_t nodes ; } v ; union { t#nodemask_t cpuset_mems_allowed ; t#nodemask_t user_nodemask ; } w ; } 
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s#reclaim_state struct reclaim_state { unsigned long reclaimed_slab ; } 
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
phys_mem_access_prot extern t#pgprot_t phys_mem_access_prot ( s#file * , unsigned long , unsigned long , t#pgprot_t ) 
walk_system_ram_range extern int walk_system_ram_range ( unsigned long , unsigned long , void * , int ( * ) ( unsigned long , unsigned long , void * ) ) 
flush_dcache_page extern void flush_dcache_page ( s#page * ) 
clear_user_page extern void clear_user_page ( void * , unsigned long , s#page * ) 
flush_icache_user_range extern void flush_icache_user_range ( s#vm_area_struct * , s#page * , unsigned long , int ) 

/* arch/powerpc/mm/mmu_context_hash64.o */
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
use_cop extern int use_cop ( unsigned long , s#mm_struct * ) 
drop_cop extern void drop_cop ( unsigned long , s#mm_struct * ) 
__init_new_context extern int __init_new_context ( void ) 
__destroy_context extern void __destroy_context ( int ) 

/* arch/powerpc/mm/numa.o */
numa_cpu_lookup_table extern int numa_cpu_lookup_table [ ] 
node_to_cpumask_map extern t#cpumask_var_t node_to_cpumask_map [ ] 
E#NR_WMARK 3 
s#per_cpu_pages struct per_cpu_pages { int count ; int high ; int batch ; s#list_head lists [ 3 ] ; } 
t#s8 typedef signed char s8 
E#NR_LRU_BASE 1 
E#NR_VM_ZONE_STAT_ITEMS ( E#NR_LRU_BASE ) + 32 
s#per_cpu_pageset struct per_cpu_pageset { s#per_cpu_pages pcp ; t#s8 expire ; t#s8 stat_threshold ; t#s8 vm_stat_diff [ E#NR_VM_ZONE_STAT_ITEMS ] ; } 
t#seqlock_t typedef struct { unsigned sequence ; t#spinlock_t lock ; } seqlock_t 
s#free_area struct free_area { s#list_head free_list [ 5 ] ; unsigned long nr_free ; } 
s#zone_padding struct zone_padding { char x [ 0 ] ; } 
s#zone_lru struct zone_lru { s#list_head list ; } 
E#NR_LRU_LISTS ( 0 + 2 + 1 ) + 2 
s#zone_reclaim_stat struct zone_reclaim_stat { unsigned long recent_rotated [ 2 ] ; unsigned long recent_scanned [ 2 ] ; } 
s#zone struct zone { unsigned long watermark [ E#NR_WMARK ] ; unsigned long percpu_drift_mark ; unsigned long lowmem_reserve [ 3 ] ; int node ; unsigned long min_unmapped_pages ; unsigned long min_slab_pages ; s#per_cpu_pageset * pageset ; t#spinlock_t lock ; int all_unreclaimable ; t#bool compact_blockskip_flush ; unsigned long compact_cached_free_pfn ; unsigned long compact_cached_migrate_pfn ; t#seqlock_t span_seqlock ; s#free_area free_area [ 9 ] ; unsigned int compact_considered ; unsigned int compact_defer_shift ; int compact_order_failed ; t#atomic_t pagecache_reclaim ; s#zone_padding _pad1_ ; t#spinlock_t lru_lock ; s#zone_lru lru [ E#NR_LRU_LISTS ] ; s#zone_reclaim_stat reclaim_stat ; unsigned long pages_scanned ; unsigned long flags ; t#atomic_long_t vm_stat [ E#NR_VM_ZONE_STAT_ITEMS ] ; unsigned int inactive_ratio ; s#zone_padding _pad2_ ; t#wait_queue_head_t * wait_table ; unsigned long wait_table_hash_nr_entries ; unsigned long wait_table_bits ; s#pglist_data * zone_pgdat ; unsigned long zone_start_pfn ; unsigned long spanned_pages ; unsigned long present_pages ; const char * name ; void * suse_kabi_padding ; } 
s#zonelist_cache struct zonelist_cache { unsigned short z_to_n [ ( ( 1 << 8 ) * 3 ) ] ; unsigned long fullzones [ ( ( ( ( ( 1 << 8 ) * 3 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long last_full_zap ; } 
s#zoneref struct zoneref { s#zone * zone ; int zone_idx ; } 
s#zonelist struct zonelist { s#zonelist_cache * zlcache_ptr ; s#zoneref _zonerefs [ ( ( 1 << 8 ) * 3 ) + 1 ] ; s#zonelist_cache zlcache ; } 
s#bootmem_data struct bootmem_data { unsigned long node_min_pfn ; unsigned long node_low_pfn ; void * node_bootmem_map ; unsigned long last_end_off ; unsigned long hint_idx ; s#list_head list ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
e#zone_type enum zone_type { ZONE_DMA , ZONE_NORMAL , ZONE_MOVABLE , __MAX_NR_ZONES } 
s#pglist_data struct pglist_data { s#zone node_zones [ 3 ] ; s#zonelist node_zonelists [ 2 ] ; int nr_zones ; s#bootmem_data * bdata ; t#spinlock_t node_size_lock ; unsigned long node_start_pfn ; unsigned long node_present_pages ; unsigned long node_spanned_pages ; int node_id ; t#wait_queue_head_t kswapd_wait ; t#wait_queue_head_t pfmemalloc_wait ; s#task_struct * kswapd ; int kswapd_max_order ; e#zone_type classzone_idx ; void * suse_kabi_padding ; } 
t#pg_data_t typedef s#pglist_data pg_data_t 
node_data extern t#pg_data_t * node_data [ ] 
__node_distance extern int __node_distance ( int , int ) 
s##proc_dir_entry
of_node_to_nid extern int of_node_to_nid ( s#device_node * ) 

/* arch/powerpc/mm/pgtable_64.o */
ioremap extern void * ioremap ( t#phys_addr_t , unsigned long ) 
ioremap_wc extern void * ioremap_wc ( t#phys_addr_t , unsigned long ) 
ioremap_prot extern void * ioremap_prot ( t#phys_addr_t , unsigned long , unsigned long ) 
__ioremap extern void * __ioremap ( t#phys_addr_t , unsigned long , unsigned long ) 
__ioremap_at extern void * __ioremap_at ( t#phys_addr_t , void * , unsigned long , unsigned long ) 
iounmap extern void iounmap ( volatile void * ) 
__iounmap extern void __iounmap ( volatile void * ) 
__iounmap_at extern void __iounmap_at ( void * , unsigned long ) 

/* arch/powerpc/mm/slice.o */
slice_get_unmapped_area extern unsigned long slice_get_unmapped_area ( unsigned long , unsigned long , unsigned long , unsigned int , int , int ) 
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##kmem_cache
s##linux_binfmt
get_slice_psize extern unsigned int get_slice_psize ( s#mm_struct * , unsigned long ) 

/* arch/powerpc/platforms/cell/cbe_cpufreq_pmi.o */
cbe_cpufreq_has_pmi extern t#bool cbe_cpufreq_has_pmi 
cbe_cpufreq_set_pmode_pmi int cbe_cpufreq_set_pmode_pmi ( int , unsigned int ) 

/* arch/powerpc/platforms/cell/cbe_regs.o */
E#group_control 0 
E#debug_bus_control 1 
E#trace_address 2 
E#ext_tr_timer 3 
E#pm_status 4 
E#pm_control 5 
E#pm_interval 6 
E#pm_start_stop 7 
u#spe_reg union spe_reg { t#u64 val ; t#u8 spe [ 8 ] ; } 
u#ppe_spe_reg union ppe_spe_reg { t#u64 val ; struct { t#u32 ppe ; t#u32 spe ; } ; } 
s#cbe_pmd_regs struct cbe_pmd_regs { t#u64 pad_0x0000 ; t#u64 E#group_control ; t#u8 pad_0x0010_0x00a8 [ 0x00a8 - 0x0010 ] ; t#u64 E#debug_bus_control ; t#u8 pad_0x00b0_0x0100 [ 0x0100 - 0x00b0 ] ; t#u64 trace_aux_data ; t#u64 trace_buffer_0_63 ; t#u64 trace_buffer_64_127 ; t#u64 E#trace_address ; t#u64 E#ext_tr_timer ; t#u8 pad_0x0128_0x0400 [ 0x0400 - 0x0128 ] ; t#u64 E#pm_status ; t#u64 E#pm_control ; t#u64 E#pm_interval ; t#u64 pm_ctr [ 4 ] ; t#u64 E#pm_start_stop ; t#u64 pm07_control [ 8 ] ; t#u8 pad_0x0480_0x0800 [ 0x0800 - 0x0480 ] ; u#spe_reg ts_ctsr1 ; t#u64 ts_ctsr2 ; u#spe_reg ts_mtsr1 ; t#u64 ts_mtsr2 ; u#spe_reg ts_itr1 ; t#u64 ts_itr2 ; t#u64 ts_gitr ; t#u64 ts_isr ; t#u64 ts_imr ; u#spe_reg tm_cr1 ; t#u64 tm_cr2 ; t#u64 tm_simr ; u#ppe_spe_reg tm_tpr ; u#spe_reg tm_str1 ; t#u64 tm_str2 ; u#ppe_spe_reg tm_tsr ; t#u64 pmcr ; t#u64 pmsr ; t#u64 tbr ; t#u8 pad_0x0898_0x0c00 [ 0x0c00 - 0x0898 ] ; t#u64 checkstop_fir ; t#u64 recoverable_fir ; t#u64 spec_att_mchk_fir ; t#u32 fir_mode_reg ; t#u8 pad_0x0c1c_0x0c20 [ 4 ] ; t#u64 fir_enable_mask ; t#u8 pad_0x0c28_0x0ca8 [ 0x0ca8 - 0x0c28 ] ; t#u64 ras_esc_0 ; t#u8 pad_0x0cb0_0x1000 [ 0x1000 - 0x0cb0 ] ; } 
s##proc_dir_entry
cbe_get_pmd_regs extern s#cbe_pmd_regs * cbe_get_pmd_regs ( s#device_node * ) 
cbe_get_cpu_pmd_regs extern s#cbe_pmd_regs * cbe_get_cpu_pmd_regs ( int ) 
s#cbe_mic_tm_regs struct cbe_mic_tm_regs { t#u8 pad_0x0000_0x0040 [ 0x0040 - 0x0000 ] ; t#u64 mic_ctl_cnfg2 ; t#u64 pad_0x0048 ; t#u64 mic_aux_trc_base ; t#u64 mic_aux_trc_max_addr ; t#u64 mic_aux_trc_cur_addr ; t#u64 mic_aux_trc_grf_addr ; t#u64 mic_aux_trc_grf_data ; t#u64 pad_0x0078 ; t#u64 mic_ctl_cnfg_0 ; t#u64 pad_0x0088 ; t#u64 slow_fast_timer_0 ; t#u64 slow_next_timer_0 ; t#u8 pad_0x00a0_0x00f8 [ 0x00f8 - 0x00a0 ] ; t#u64 mic_df_ecc_address_0 ; t#u8 pad_0x0100_0x01b8 [ 0x01b8 - 0x0100 ] ; t#u64 mic_df_ecc_address_1 ; t#u64 mic_ctl_cnfg_1 ; t#u64 pad_0x01c8 ; t#u64 slow_fast_timer_1 ; t#u64 slow_next_timer_1 ; t#u8 pad_0x01e0_0x0208 [ 0x0208 - 0x01e0 ] ; t#u64 mic_exc ; t#u64 mic_mnt_cfg ; t#u64 mic_df_config ; t#u8 pad_0x0220_0x0230 [ 0x0230 - 0x0220 ] ; t#u64 mic_fir ; t#u64 mic_fir_debug ; t#u8 pad_0x0240_0x1000 [ 0x1000 - 0x0240 ] ; } 
cbe_get_cpu_mic_tm_regs extern s#cbe_mic_tm_regs * cbe_get_cpu_mic_tm_regs ( int ) 
cbe_get_hw_thread_id extern t#u32 cbe_get_hw_thread_id ( int ) 
cbe_cpu_to_node extern t#u32 cbe_cpu_to_node ( int ) 
cbe_node_to_cpu extern t#u32 cbe_node_to_cpu ( int ) 

/* arch/powerpc/platforms/cell/interrupt.o */
iic_get_target_id extern t#u8 iic_get_target_id ( int ) 
s##radix_tree_node
s##proc_dir_entry
iic_get_irq_host s#irq_host * iic_get_irq_host ( int ) 

/* arch/powerpc/platforms/cell/pmu.o */
cbe_read_phys_ctr extern t#u32 cbe_read_phys_ctr ( t#u32 , t#u32 ) 
cbe_write_phys_ctr extern void cbe_write_phys_ctr ( t#u32 , t#u32 , t#u32 ) 
cbe_read_ctr extern t#u32 cbe_read_ctr ( t#u32 , t#u32 ) 
cbe_write_ctr extern void cbe_write_ctr ( t#u32 , t#u32 , t#u32 ) 
cbe_read_pm07_control extern t#u32 cbe_read_pm07_control ( t#u32 , t#u32 ) 
cbe_write_pm07_control extern void cbe_write_pm07_control ( t#u32 , t#u32 , t#u32 ) 
e#pm_reg_name enum pm_reg_name { group_control , debug_bus_control , trace_address , ext_tr_timer , pm_status , pm_control , pm_interval , pm_start_stop , } 
cbe_read_pm extern t#u32 cbe_read_pm ( t#u32 , e#pm_reg_name ) 
cbe_write_pm extern void cbe_write_pm ( t#u32 , e#pm_reg_name , t#u32 ) 
cbe_get_ctr_size extern t#u32 cbe_get_ctr_size ( t#u32 , t#u32 ) 
cbe_set_ctr_size extern void cbe_set_ctr_size ( t#u32 , t#u32 , t#u32 ) 
cbe_enable_pm extern void cbe_enable_pm ( t#u32 ) 
cbe_disable_pm extern void cbe_disable_pm ( t#u32 ) 
cbe_read_trace_buffer extern void cbe_read_trace_buffer ( t#u32 , t#u64 * ) 
cbe_get_and_clear_pm_interrupts extern t#u32 cbe_get_and_clear_pm_interrupts ( t#u32 ) 
cbe_enable_pm_interrupts extern void cbe_enable_pm_interrupts ( t#u32 , t#u32 , t#u32 ) 
cbe_disable_pm_interrupts extern void cbe_disable_pm_interrupts ( t#u32 ) 
cbe_sync_irq extern void cbe_sync_irq ( int ) 

/* arch/powerpc/platforms/cell/setup.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#pci_controller struct pci_controller { s#pci_bus * bus ; char is_dynamic ; int node ; s#device_node * dn ; s#list_head list_node ; s#device * parent ; int first_busno ; int last_busno ; int self_busno ; void * io_base_virt ; void * io_base_alloc ; t#resource_size_t io_base_phys ; t#resource_size_t pci_io_size ; t#resource_size_t pci_mem_offset ; t#resource_size_t isa_mem_phys ; t#resource_size_t isa_mem_size ; s#pci_ops * ops ; unsigned int * cfg_addr ; void * cfg_data ; t#u32 indirect_type ; s#resource io_resource ; s#resource mem_resources [ 3 ] ; int global_number ; t#resource_size_t dma_window_base_cur ; t#resource_size_t dma_window_size ; unsigned long buid ; void * private_data ; } 
s##rtc_time
s##kimage
mach_cell extern s#machdep_calls mach_cell 

/* arch/powerpc/platforms/cell/spu_base.o */
u#mfc_tag_size_class_cmd union mfc_tag_size_class_cmd { struct { t#u16 mfc_size ; t#u16 mfc_tag ; t#u8 pad ; t#u8 mfc_rclassid ; t#u16 mfc_cmd ; } u ; struct { t#u32 mfc_size_tag32 ; t#u32 mfc_class_cmd32 ; } by32 ; t#u64 all64 ; } 
s#spu_problem struct spu_problem { t#u64 spc_mssync_RW ; t#u8 pad_0x0008_0x3000 [ 0x3000 - 0x0008 ] ; t#u8 pad_0x3000_0x3004 [ 0x4 ] ; t#u32 mfc_lsa_W ; t#u64 mfc_ea_W ; u#mfc_tag_size_class_cmd mfc_union_W ; t#u8 pad_0x3018_0x3104 [ 0xec ] ; t#u32 dma_qstatus_R ; t#u8 pad_0x3108_0x3204 [ 0xfc ] ; t#u32 dma_querytype_RW ; t#u8 pad_0x3208_0x321c [ 0x14 ] ; t#u32 dma_querymask_RW ; t#u8 pad_0x3220_0x322c [ 0xc ] ; t#u32 dma_tagstatus_R ; t#u8 pad_0x3230_0x4000 [ 0x4000 - 0x3230 ] ; t#u8 pad_0x4000_0x4004 [ 0x4 ] ; t#u32 pu_mb_R ; t#u8 pad_0x4008_0x400c [ 0x4 ] ; t#u32 spu_mb_W ; t#u8 pad_0x4010_0x4014 [ 0x4 ] ; t#u32 mb_stat_R ; t#u8 pad_0x4018_0x401c [ 0x4 ] ; t#u32 spu_runcntl_RW ; t#u8 pad_0x4020_0x4024 [ 0x4 ] ; t#u32 spu_status_R ; t#u8 pad_0x4028_0x402c [ 0x4 ] ; t#u32 spu_spe_R ; t#u8 pad_0x4030_0x4034 [ 0x4 ] ; t#u32 spu_npc_RW ; t#u8 pad_0x4038_0x14000 [ 0x14000 - 0x4038 ] ; t#u8 pad_0x14000_0x1400c [ 0xc ] ; t#u32 signal_notify1 ; t#u8 pad_0x14010_0x1c00c [ 0x7ffc ] ; t#u32 signal_notify2 ; } 
s#mfc_cq_sr struct mfc_cq_sr { t#u64 mfc_cq_data0_RW ; t#u64 mfc_cq_data1_RW ; t#u64 mfc_cq_data2_RW ; t#u64 mfc_cq_data3_RW ; } 
s#spu_priv2 struct spu_priv2 { t#u8 pad_0x0000_0x1100 [ 0x1100 - 0x0000 ] ; t#u8 pad_0x1100_0x1108 [ 0x8 ] ; t#u64 slb_index_W ; t#u64 slb_esid_RW ; t#u64 slb_vsid_RW ; t#u64 slb_invalidate_entry_W ; t#u64 slb_invalidate_all_W ; t#u8 pad_0x1130_0x2000 [ 0x2000 - 0x1130 ] ; s#mfc_cq_sr spuq [ 16 ] ; s#mfc_cq_sr puq [ 8 ] ; t#u8 pad_0x2300_0x3000 [ 0x3000 - 0x2300 ] ; t#u64 mfc_control_RW ; t#u8 pad_0x3008_0x4000 [ 0x4000 - 0x3008 ] ; t#u64 puint_mb_R ; t#u8 pad_0x4008_0x4040 [ 0x4040 - 0x4008 ] ; t#u64 spu_privcntl_RW ; t#u8 pad_0x4048_0x4058 [ 0x10 ] ; t#u64 spu_lslr_RW ; t#u64 spu_chnlcntptr_RW ; t#u64 spu_chnlcnt_RW ; t#u64 spu_chnldata_RW ; t#u64 spu_cfg_RW ; t#u8 pad_0x4080_0x5000 [ 0x5000 - 0x4080 ] ; t#u64 spu_pm_trace_tag_status_RW ; t#u64 spu_tag_status_query_RW ; t#u64 spu_cmd_buf1_RW ; t#u64 spu_cmd_buf2_RW ; t#u64 spu_atomic_status_RW ; } 
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##spu_context
s##spu_runqueue
s#spu_priv1 struct spu_priv1 { t#u64 mfc_sr1_RW ; t#u64 mfc_lpid_RW ; t#u64 spu_idr_RW ; t#u64 mfc_vr_RO ; t#u64 spu_vr_RO ; t#u8 pad_0x28_0x100 [ 0x100 - 0x28 ] ; t#u64 int_mask_RW [ 3 ] ; t#u8 pad_0x118_0x140 [ 0x28 ] ; t#u64 int_stat_RW [ 3 ] ; t#u8 pad_0x158_0x180 [ 0x28 ] ; t#u64 int_route_RW ; t#u8 pad_0x188_0x200 [ 0x200 - 0x188 ] ; t#u64 mfc_atomic_flush_RW ; t#u8 pad_0x208_0x280 [ 0x78 ] ; t#u64 resource_allocation_groupID_RW ; t#u64 resource_allocation_enable_RW ; t#u8 pad_0x290_0x3c8 [ 0x3c8 - 0x290 ] ; t#u64 smf_sbi_signal_sel ; t#u64 smf_ato_signal_sel ; t#u8 pad_0x3d8_0x400 [ 0x400 - 0x3d8 ] ; t#u64 mfc_sdr_RW ; t#u8 pad_0x408_0x500 [ 0xf8 ] ; t#u64 tlb_index_hint_RO ; t#u64 tlb_index_W ; t#u64 tlb_vpn_RW ; t#u64 tlb_rpn_RW ; t#u8 pad_0x520_0x540 [ 0x20 ] ; t#u64 tlb_invalidate_entry_W ; t#u64 tlb_invalidate_all_W ; t#u8 pad_0x550_0x580 [ 0x580 - 0x550 ] ; t#u64 smm_hid ; t#u8 pad_0x588_0x600 [ 0x600 - 0x588 ] ; t#u64 mfc_accr_RW ; t#u8 pad_0x608_0x610 [ 0x8 ] ; t#u64 mfc_dsisr_RW ; t#u8 pad_0x618_0x620 [ 0x8 ] ; t#u64 mfc_dar_RW ; t#u8 pad_0x628_0x700 [ 0x700 - 0x628 ] ; t#u64 rmt_index_RW ; t#u8 pad_0x708_0x710 [ 0x8 ] ; t#u64 rmt_data1_RW ; t#u8 pad_0x718_0x800 [ 0x800 - 0x718 ] ; t#u64 mfc_dsir_R ; t#u64 mfc_lsacr_RW ; t#u64 mfc_lscrr_R ; t#u8 pad_0x818_0x820 [ 0x8 ] ; t#u64 mfc_tclass_id_RW ; t#u8 pad_0x828_0x900 [ 0x900 - 0x828 ] ; t#u64 mfc_rm_boundary ; t#u8 pad_0x908_0x938 [ 0x30 ] ; t#u64 smf_dma_signal_sel ; t#u8 pad_0x940_0xa38 [ 0xf8 ] ; t#u64 smm_signal_sel ; t#u8 pad_0xa40_0xc00 [ 0xc00 - 0xa40 ] ; t#u64 mfc_cer_R ; t#u8 pad_0xc08_0x1000 [ 0x1000 - 0xc08 ] ; t#u64 spu_ecc_cntl_RW ; t#u64 spu_ecc_stat_RW ; t#u64 spu_ecc_addr_RW ; t#u64 spu_err_mask_RW ; t#u8 pad_0x1020_0x1028 [ 0x1028 - 0x1020 ] ; t#u64 spu_trig0_sel ; t#u64 spu_trig1_sel ; t#u64 spu_trig2_sel ; t#u64 spu_trig3_sel ; t#u64 spu_trace_sel ; t#u64 spu_event0_sel ; t#u64 spu_event1_sel ; t#u64 spu_event2_sel ; t#u64 spu_event3_sel ; t#u64 spu_trace_cntl ; } 
s##sock
s##sysfs_dirent
e#spu_utilization_state enum spu_utilization_state { SPU_UTIL_USER , SPU_UTIL_SYSTEM , SPU_UTIL_IOWAIT , SPU_UTIL_IDLE_LOADED , SPU_UTIL_MAX } 
E#SPU_UTIL_MAX 4 
s#spu struct spu { const char * name ; unsigned long local_store_phys ; t#u8 * local_store ; unsigned long problem_phys ; s#spu_problem * problem ; s#spu_priv2 * priv2 ; s#list_head cbe_list ; s#list_head full_list ; enum { SPU_FREE , SPU_USED } alloc_state ; int number ; unsigned int irqs [ 3 ] ; t#u32 node ; unsigned long flags ; t#u64 class_0_pending ; t#u64 class_0_dar ; t#u64 class_1_dar ; t#u64 class_1_dsisr ; t#size_t ls_size ; unsigned int slb_replace ; s#mm_struct * mm ; s#spu_context * ctx ; s#spu_runqueue * rq ; unsigned long long timestamp ; t#pid_t pid ; t#pid_t tgid ; t#spinlock_t register_lock ; void ( * wbox_callback ) ( s#spu * ) ; void ( * ibox_callback ) ( s#spu * ) ; void ( * stop_callback ) ( s#spu * , int ) ; void ( * mfc_callback ) ( s#spu * ) ; char irq_c0 [ 8 ] ; char irq_c1 [ 8 ] ; char irq_c2 [ 8 ] ; t#u64 spe_id ; void * pdata ; s#device_node * devnode ; s#spu_priv1 * priv1 ; t#u64 shadow_int_mask_RW [ 3 ] ; s#sys_device sysdev ; int has_mem_affinity ; s#list_head aff_list ; struct { e#spu_utilization_state util_state ; unsigned long long tstamp ; unsigned long long times [ E#SPU_UTIL_MAX ] ; unsigned long long vol_ctx_switch ; unsigned long long invol_ctx_switch ; unsigned long long min_flt ; unsigned long long maj_flt ; unsigned long long hash_flt ; unsigned long long slb_flt ; unsigned long long class2_intr ; unsigned long long libassist ; } stats ; } 
s#spu_management_ops struct spu_management_ops { int ( * enumerate_spus ) ( int ( * ) ( void * ) ) ; int ( * create_spu ) ( s#spu * , void * ) ; int ( * destroy_spu ) ( s#spu * ) ; void ( * enable_spu ) ( s#spu_context * ) ; void ( * disable_spu ) ( s#spu_context * ) ; int ( * init_affinity ) ( void ) ; } 
spu_management_ops extern const s#spu_management_ops * spu_management_ops 
s#spu_priv1_ops struct spu_priv1_ops { void ( * int_mask_and ) ( s#spu * , int , t#u64 ) ; void ( * int_mask_or ) ( s#spu * , int , t#u64 ) ; void ( * int_mask_set ) ( s#spu * , int , t#u64 ) ; t#u64 ( * int_mask_get ) ( s#spu * , int ) ; void ( * int_stat_clear ) ( s#spu * , int , t#u64 ) ; t#u64 ( * int_stat_get ) ( s#spu * , int ) ; void ( * cpu_affinity_set ) ( s#spu * , int ) ; t#u64 ( * mfc_dar_get ) ( s#spu * ) ; t#u64 ( * mfc_dsisr_get ) ( s#spu * ) ; void ( * mfc_dsisr_set ) ( s#spu * , t#u64 ) ; void ( * mfc_sdr_setup ) ( s#spu * ) ; void ( * mfc_sr1_set ) ( s#spu * , t#u64 ) ; t#u64 ( * mfc_sr1_get ) ( s#spu * ) ; void ( * mfc_tclass_id_set ) ( s#spu * , t#u64 ) ; t#u64 ( * mfc_tclass_id_get ) ( s#spu * ) ; void ( * tlb_invalidate ) ( s#spu * ) ; void ( * resource_allocation_groupID_set ) ( s#spu * , t#u64 ) ; t#u64 ( * resource_allocation_groupID_get ) ( s#spu * ) ; void ( * resource_allocation_enable_set ) ( s#spu * , t#u64 ) ; t#u64 ( * resource_allocation_enable_get ) ( s#spu * ) ; } 
spu_priv1_ops extern const s#spu_priv1_ops * spu_priv1_ops 
s#cbe_spu_info struct cbe_spu_info { s#mutex list_mutex ; s#list_head spus ; int n_spus ; int nr_active ; t#atomic_t busy_spus ; t#atomic_t reserved_spus ; } 
cbe_spu_info extern s#cbe_spu_info cbe_spu_info [ ] 
force_sig_info extern int force_sig_info ( int , s#siginfo * , s#task_struct * ) 
spu_invalidate_slbs extern void spu_invalidate_slbs ( s#spu * ) 
spu_associate_mm extern void spu_associate_mm ( s#spu * , s#mm_struct * ) 
spu_64k_pages_available int spu_64k_pages_available ( void ) 
s#spu_reg128 struct spu_reg128 { t#u32 slot [ 4 ] ; } 
s#spu_lscsa struct spu_lscsa { s#spu_reg128 gprs [ 128 ] ; s#spu_reg128 fpcr ; s#spu_reg128 decr ; s#spu_reg128 decr_status ; s#spu_reg128 ppu_mb ; s#spu_reg128 ppuint_mb ; s#spu_reg128 tag_mask ; s#spu_reg128 event_mask ; s#spu_reg128 srr0 ; s#spu_reg128 stopped_status ; unsigned char ls [ ( 256 * 1024 ) ] __attribute__ ( ( aligned ( 65536 ) ) ) ; } 
spu_setup_kernel_slbs void spu_setup_kernel_slbs ( s#spu * , s#spu_lscsa * , void * , int ) 
spu_init_channels void spu_init_channels ( s#spu * ) 
spu_add_sysdev_attr int spu_add_sysdev_attr ( s#sysdev_attribute * ) 
spu_add_sysdev_attr_group int spu_add_sysdev_attr_group ( s#attribute_group * ) 
spu_remove_sysdev_attr void spu_remove_sysdev_attr ( s#sysdev_attribute * ) 
spu_remove_sysdev_attr_group void spu_remove_sysdev_attr_group ( s#attribute_group * ) 

/* arch/powerpc/platforms/cell/spu_callbacks.o */
s#spu_syscall_block struct spu_syscall_block { t#u64 nr_ret ; t#u64 parm [ 6 ] ; } 
spu_sys_callback extern long spu_sys_callback ( s#spu_syscall_block * ) 

/* arch/powerpc/platforms/cell/spu_fault.o */
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
spu_handle_mm_fault int spu_handle_mm_fault ( s#mm_struct * , unsigned long , unsigned long , unsigned * ) 

/* arch/powerpc/platforms/cell/spu_manage.o */
s##proc_dir_entry
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##linux_binfmt
s#spu_problem_collapsed struct spu_problem_collapsed { t#u64 spc_mssync_RW ; t#u32 mfc_lsa_W ; t#u32 unused_pad0 ; t#u64 mfc_ea_W ; u#mfc_tag_size_class_cmd mfc_union_W ; t#u32 dma_qstatus_R ; t#u32 dma_querytype_RW ; t#u32 dma_querymask_RW ; t#u32 dma_tagstatus_R ; t#u32 pu_mb_R ; t#u32 spu_mb_W ; t#u32 mb_stat_R ; t#u32 spu_runcntl_RW ; t#u32 spu_status_R ; t#u32 spu_spc_R ; t#u32 spu_npc_RW ; t#u32 signal_notify1 ; t#u32 signal_notify2 ; t#u32 unused_pad1 ; } 
s#spu_priv1_collapsed struct spu_priv1_collapsed { t#u64 mfc_sr1_RW ; t#u64 mfc_lpid_RW ; t#u64 spu_idr_RW ; t#u64 mfc_vr_RO ; t#u64 spu_vr_RO ; t#u64 int_mask_class0_RW ; t#u64 int_mask_class1_RW ; t#u64 int_mask_class2_RW ; t#u64 int_stat_class0_RW ; t#u64 int_stat_class1_RW ; t#u64 int_stat_class2_RW ; t#u64 int_route_RW ; t#u64 mfc_atomic_flush_RW ; t#u64 resource_allocation_groupID_RW ; t#u64 resource_allocation_enable_RW ; t#u64 mfc_fir_R ; t#u64 mfc_fir_status_or_W ; t#u64 mfc_fir_status_and_W ; t#u64 mfc_fir_mask_R ; t#u64 mfc_fir_mask_or_W ; t#u64 mfc_fir_mask_and_W ; t#u64 mfc_fir_chkstp_enable_RW ; t#u64 smf_sbi_signal_sel ; t#u64 smf_ato_signal_sel ; t#u64 tlb_index_hint_RO ; t#u64 tlb_index_W ; t#u64 tlb_vpn_RW ; t#u64 tlb_rpn_RW ; t#u64 tlb_invalidate_entry_W ; t#u64 tlb_invalidate_all_W ; t#u64 smm_hid ; t#u64 mfc_accr_RW ; t#u64 mfc_dsisr_RW ; t#u64 mfc_dar_RW ; t#u64 rmt_index_RW ; t#u64 rmt_data1_RW ; t#u64 mfc_dsir_R ; t#u64 mfc_lsacr_RW ; t#u64 mfc_lscrr_R ; t#u64 mfc_tclass_id_RW ; t#u64 mfc_rm_boundary ; t#u64 smf_dma_signal_sel ; t#u64 smm_signal_sel ; t#u64 mfc_cer_R ; t#u64 pu_ecc_cntl_RW ; t#u64 pu_ecc_stat_RW ; t#u64 spu_ecc_addr_RW ; t#u64 spu_err_mask_RW ; t#u64 spu_trig0_sel ; t#u64 spu_trig1_sel ; t#u64 spu_trig2_sel ; t#u64 spu_trig3_sel ; t#u64 spu_trace_sel ; t#u64 spu_event0_sel ; t#u64 spu_event1_sel ; t#u64 spu_event2_sel ; t#u64 spu_event3_sel ; t#u64 spu_trace_cntl ; } 
s#spu_priv2_collapsed struct spu_priv2_collapsed { t#u64 slb_index_W ; t#u64 slb_esid_RW ; t#u64 slb_vsid_RW ; t#u64 slb_invalidate_entry_W ; t#u64 slb_invalidate_all_W ; s#mfc_cq_sr spuq [ 16 ] ; s#mfc_cq_sr puq [ 8 ] ; t#u64 mfc_control_RW ; t#u64 puint_mb_R ; t#u64 spu_privcntl_RW ; t#u64 spu_lslr_RW ; t#u64 spu_chnlcntptr_RW ; t#u64 spu_chnlcnt_RW ; t#u64 spu_chnldata_RW ; t#u64 spu_cfg_RW ; t#u64 spu_tag_status_query_RW ; t#u64 spu_cmd_buf1_RW ; t#u64 spu_cmd_buf2_RW ; t#u64 spu_atomic_status_RW ; } 
s#spu_state struct spu_state { s#spu_lscsa * lscsa ; s#spu_problem_collapsed prob ; s#spu_priv1_collapsed priv1 ; s#spu_priv2_collapsed priv2 ; t#u64 spu_chnlcnt_RW [ 32 ] ; t#u64 spu_chnldata_RW [ 32 ] ; t#u32 spu_mailbox_data [ 4 ] ; t#u32 pu_mailbox_data [ 1 ] ; t#u64 class_0_dar , class_0_pending ; t#u64 class_1_dar , class_1_dsisr ; unsigned long suspend_time ; t#spinlock_t register_lock ; } 
t#uint64_t typedef t#__u64 uint64_t 
t#uint16_t typedef t#__u16 uint16_t 
s#mfc_dma_command struct mfc_dma_command { t#int32_t pad ; t#uint32_t lsa ; t#uint64_t ea ; t#uint16_t size ; t#uint16_t tag ; t#uint16_t class ; t#uint16_t cmd ; } 
s#spu_dma_info struct spu_dma_info { t#__u64 dma_info_type ; t#__u64 dma_info_mask ; t#__u64 dma_info_status ; t#__u64 dma_info_stall_and_notify ; t#__u64 dma_info_atomic_command_status ; s#mfc_cq_sr dma_info_command_data [ 16 ] ; } 
s#spu_proxydma_info struct spu_proxydma_info { t#__u64 proxydma_info_type ; t#__u64 proxydma_info_mask ; t#__u64 proxydma_info_status ; s#mfc_cq_sr proxydma_info_command_data [ 8 ] ; } 
s#spu_context_ops struct spu_context_ops { int ( * mbox_read ) ( s#spu_context * , t#u32 * ) ; t#u32 ( * mbox_stat_read ) ( s#spu_context * ) ; unsigned int ( * mbox_stat_poll ) ( s#spu_context * , unsigned int ) ; int ( * ibox_read ) ( s#spu_context * , t#u32 * ) ; int ( * wbox_write ) ( s#spu_context * , t#u32 ) ; t#u32 ( * signal1_read ) ( s#spu_context * ) ; void ( * signal1_write ) ( s#spu_context * , t#u32 ) ; t#u32 ( * signal2_read ) ( s#spu_context * ) ; void ( * signal2_write ) ( s#spu_context * , t#u32 ) ; void ( * signal1_type_set ) ( s#spu_context * , t#u64 ) ; t#u64 ( * signal1_type_get ) ( s#spu_context * ) ; void ( * signal2_type_set ) ( s#spu_context * , t#u64 ) ; t#u64 ( * signal2_type_get ) ( s#spu_context * ) ; t#u32 ( * npc_read ) ( s#spu_context * ) ; void ( * npc_write ) ( s#spu_context * , t#u32 ) ; t#u32 ( * status_read ) ( s#spu_context * ) ; char * ( * get_ls ) ( s#spu_context * ) ; void ( * privcntl_write ) ( s#spu_context * , t#u64 ) ; t#u32 ( * runcntl_read ) ( s#spu_context * ) ; void ( * runcntl_write ) ( s#spu_context * , t#u32 ) ; void ( * runcntl_stop ) ( s#spu_context * ) ; void ( * master_start ) ( s#spu_context * ) ; void ( * master_stop ) ( s#spu_context * ) ; int ( * set_mfc_query ) ( s#spu_context * , t#u32 , t#u32 ) ; t#u32 ( * read_mfc_tagstatus ) ( s#spu_context * ) ; t#u32 ( * get_mfc_free_elements ) ( s#spu_context * ) ; int ( * send_mfc_command ) ( s#spu_context * , s#mfc_dma_command * ) ; void ( * dma_info_read ) ( s#spu_context * , s#spu_dma_info * ) ; void ( * proxydma_info_read ) ( s#spu_context * , s#spu_proxydma_info * ) ; void ( * restart_dma ) ( s#spu_context * ) ; } 
s#spu_gang struct spu_gang { s#list_head list ; s#mutex mutex ; s#kref kref ; int contexts ; s#spu_context * aff_ref_ctx ; s#list_head aff_list_head ; s#mutex aff_mutex ; int aff_flags ; s#spu * aff_ref_spu ; t#atomic_t aff_sched_count ; } 
s#switch_log_entry struct switch_log_entry { s#timespec tstamp ; t#s32 spu_id ; t#u32 type ; t#u32 val ; t#u64 timebase ; } 
s#switch_log struct switch_log { t#wait_queue_head_t wait ; unsigned long head ; unsigned long tail ; s#switch_log_entry log [ ] ; } 
s#spu_context struct spu_context { s#spu * spu ; s#spu_state csa ; t#spinlock_t mmio_lock ; s#address_space * local_store ; s#address_space * mfc ; s#address_space * cntl ; s#address_space * signal1 ; s#address_space * signal2 ; s#address_space * mss ; s#address_space * psmap ; s#mutex mapping_lock ; t#u64 object_id ; enum { SPU_STATE_RUNNABLE , SPU_STATE_SAVED } state ; s#mutex state_mutex ; s#mutex run_mutex ; s#mm_struct * owner ; s#kref kref ; t#wait_queue_head_t ibox_wq ; t#wait_queue_head_t wbox_wq ; t#wait_queue_head_t stop_wq ; t#wait_queue_head_t mfc_wq ; t#wait_queue_head_t run_wq ; s#fasync_struct * ibox_fasync ; s#fasync_struct * wbox_fasync ; s#fasync_struct * mfc_fasync ; t#u32 tagwait ; s#spu_context_ops * ops ; s#work_struct reap_work ; unsigned long flags ; unsigned long event_return ; s#list_head gang_list ; s#spu_gang * gang ; s#kref * prof_priv_kref ; void ( * prof_priv_release ) ( s#kref * ) ; t#pid_t tid ; s#list_head rq ; unsigned int time_slice ; unsigned long sched_flags ; t#cpumask_t cpus_allowed ; int policy ; int prio ; int last_ran ; struct { e#spu_utilization_state util_state ; unsigned long long tstamp ; unsigned long long times [ E#SPU_UTIL_MAX ] ; unsigned long long vol_ctx_switch ; unsigned long long invol_ctx_switch ; unsigned long long min_flt ; unsigned long long maj_flt ; unsigned long long hash_flt ; unsigned long long slb_flt ; unsigned long long slb_flt_base ; unsigned long long class2_intr ; unsigned long long class2_intr_base ; unsigned long long libassist ; } stats ; s#switch_log * switch_log ; s#list_head aff_list ; int aff_head ; int aff_offset ; } 
s##spu_runqueue
spu_devnode s#device_node * spu_devnode ( s#spu * ) 

/* arch/powerpc/platforms/cell/spu_notify.o */
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s##spu_runqueue
s##device_node
spu_switch_notify void spu_switch_notify ( s#spu * , s#spu_context * ) 
s#notifier_block struct notifier_block { int ( * notifier_call ) ( s#notifier_block * , unsigned long , void * ) ; s#notifier_block * next ; int priority ; } 
spu_switch_event_register int spu_switch_event_register ( s#notifier_block * ) 
spu_switch_event_unregister int spu_switch_event_unregister ( s#notifier_block * ) 
spu_set_profile_private_kref void spu_set_profile_private_kref ( s#spu_context * , s#kref * , void ( * ) ( s#kref * ) ) 
spu_get_profile_private_kref void * spu_get_profile_private_kref ( s#spu_context * ) 

/* arch/powerpc/platforms/cell/spu_syscalls.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s#spufs_calls struct spufs_calls { long ( * create_thread ) ( const char * , unsigned int , t#mode_t , s#file * ) ; long ( * spu_run ) ( s#file * , t#__u32 * , t#__u32 * ) ; int ( * coredump_extra_notes_size ) ( void ) ; int ( * coredump_extra_notes_write ) ( s#file * , t#loff_t * ) ; void ( * notify_spus_active ) ( void ) ; s#module * owner ; } 
register_spu_syscalls int register_spu_syscalls ( s#spufs_calls * ) 
unregister_spu_syscalls void unregister_spu_syscalls ( s#spufs_calls * ) 

/* arch/powerpc/platforms/cell/spufs/inode.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
e#writeback_sync_modes enum writeback_sync_modes { WB_SYNC_NONE , WB_SYNC_ALL , } 
s#writeback_control struct writeback_control { e#writeback_sync_modes sync_mode ; unsigned long * older_than_this ; unsigned long wb_start ; long nr_to_write ; long pages_skipped ; t#loff_t range_start ; t#loff_t range_end ; unsigned nonblocking : 1 ; unsigned encountered_congestion : 1 ; unsigned for_kupdate : 1 ; unsigned for_background : 1 ; unsigned tagged_writepages : 1 ; unsigned for_reclaim : 1 ; unsigned range_cyclic : 1 ; unsigned more_io : 1 ; } 
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
t#congested_fn typedef int ( congested_fn ) ( void * , int ) 
E#NR_BDI_STAT_ITEMS 2 
s#prop_local_percpu struct prop_local_percpu { s#percpu_counter events ; int shift ; unsigned long period ; t#spinlock_t lock ; } 
s##tvec_base
s#bdi_writeback struct bdi_writeback { s#backing_dev_info * bdi ; unsigned long last_move_tail ; unsigned long last_old_flush ; unsigned long last_active ; s#task_struct * task ; s#timer_list wakeup_timer ; s#list_head b_dirty ; s#list_head b_io ; s#list_head b_more_io ; t#spinlock_t list_lock ; } 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s#backing_dev_info struct backing_dev_info { s#list_head bdi_list ; unsigned long ra_pages ; unsigned long state ; unsigned int capabilities ; t#congested_fn * congested_fn ; void * congested_data ; char * name ; s#percpu_counter bdi_stat [ E#NR_BDI_STAT_ITEMS ] ; s#prop_local_percpu completions ; int dirty_exceeded ; unsigned int min_ratio ; unsigned int max_ratio , max_prop_frac ; s#bdi_writeback wb ; t#spinlock_t wb_lock ; s#list_head work_list ; s#device * dev ; s#timer_list laptop_mode_wb_timer ; s#dentry * debug_dir ; s#dentry * debug_stats ; } 
s##mtd_info
s#mnt_pcp struct mnt_pcp { int mnt_count ; int mnt_writers ; } 
s##mnt_namespace
s#vfsmount struct vfsmount { s#list_head mnt_hash ; s#vfsmount * mnt_parent ; s#dentry * mnt_mountpoint ; s#dentry * mnt_root ; s#super_block * mnt_sb ; s#mnt_pcp * mnt_pcp ; t#atomic_t mnt_longterm ; s#list_head mnt_mounts ; s#list_head mnt_child ; int mnt_flags ; t#__u32 mnt_fsnotify_mask ; s#hlist_head mnt_fsnotify_marks ; const char * mnt_devname ; s#list_head mnt_list ; s#list_head mnt_expire ; s#list_head mnt_share ; s#list_head mnt_slave_list ; s#list_head mnt_slave ; s#vfsmount * mnt_master ; s#mnt_namespace * mnt_ns ; int mnt_id ; int mnt_group_id ; int mnt_expiry_mark ; int mnt_pinned ; int mnt_ghosts ; void * suse_kabi_padding ; } 
E#MAX_NESTED_LINKS 8 
s#open_intent struct open_intent { int flags ; int create_mode ; s#file * file ; } 
s#nameidata struct nameidata { s#path path ; s#qstr last ; s#path root ; s#inode * inode ; unsigned int flags ; unsigned seq ; int last_type ; unsigned depth ; char * saved_names [ E#MAX_NESTED_LINKS + 1 ] ; union { s#open_intent open ; } intent ; } 
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
s##eventfd_ctx
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
spufs_context_fops extern const s#file_operations spufs_context_fops 

/* arch/powerpc/platforms/cell/spufs/switch.o */
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##linux_binfmt
s##spu_runqueue
s##device_node
spu_save extern int spu_save ( s#spu_state * , s#spu * ) 
spu_restore extern int spu_restore ( s#spu_state * , s#spu * ) 

/* arch/powerpc/platforms/maple/setup.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##rtc_time
s##kimage
mach_maple extern s#machdep_calls mach_maple 

/* arch/powerpc/platforms/powermac/feature.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#macio_bus struct macio_bus { s#macio_chip * chip ; int index ; s#pci_dev * pdev ; } 
s#macio_chip struct macio_chip { s#device_node * of_node ; int type ; const char * name ; int rev ; volatile t#u32 * base ; unsigned long flags ; s#macio_bus lbus ; } 
macio_find extern s#macio_chip * macio_find ( s#device_node * , int ) 
pmac_set_early_video_resume extern void pmac_set_early_video_resume ( void ( * ) ( void * ) , void * ) 
pmac_register_agp_pm extern void pmac_register_agp_pm ( s#pci_dev * , int ( * ) ( s#pci_dev * ) , int ( * ) ( s#pci_dev * ) ) 
pmac_suspend_agp_for_card extern void pmac_suspend_agp_for_card ( s#pci_dev * ) 
pmac_resume_agp_for_card extern void pmac_resume_agp_for_card ( s#pci_dev * ) 

/* arch/powerpc/platforms/powermac/low_i2c.o */
s##pmac_i2c_bus
s##proc_dir_entry
pmac_i2c_find_bus extern s#pmac_i2c_bus * pmac_i2c_find_bus ( s#device_node * ) 
pmac_i2c_get_dev_addr extern t#u8 pmac_i2c_get_dev_addr ( s#device_node * ) 
pmac_i2c_get_controller extern s#device_node * pmac_i2c_get_controller ( s#pmac_i2c_bus * ) 
pmac_i2c_get_bus_node extern s#device_node * pmac_i2c_get_bus_node ( s#pmac_i2c_bus * ) 
pmac_i2c_get_type extern int pmac_i2c_get_type ( s#pmac_i2c_bus * ) 
pmac_i2c_get_flags extern int pmac_i2c_get_flags ( s#pmac_i2c_bus * ) 
pmac_i2c_get_channel extern int pmac_i2c_get_channel ( s#pmac_i2c_bus * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#i2c_msg struct i2c_msg { t#__u16 addr ; t#__u16 flags ; t#__u16 len ; t#__u8 * buf ; } 
u#i2c_smbus_data union i2c_smbus_data { t#__u8 byte ; t#__u16 word ; t#__u8 block [ 32 + 2 ] ; } 
s#i2c_algorithm struct i2c_algorithm { int ( * master_xfer ) ( s#i2c_adapter * , s#i2c_msg * , int ) ; int ( * smbus_xfer ) ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) ; t#u32 ( * functionality ) ( s#i2c_adapter * ) ; } 
s#rt_mutex struct rt_mutex { t#raw_spinlock_t wait_lock ; s#plist_head wait_list ; s#task_struct * owner ; } 
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s#i2c_adapter struct i2c_adapter { s#module * owner ; unsigned int class ; const s#i2c_algorithm * algo ; void * algo_data ; s#rt_mutex bus_lock ; int timeout ; int retries ; s#device dev ; int nr ; char name [ 48 ] ; s#completion dev_released ; s#mutex userspace_clients_lock ; s#list_head userspace_clients ; } 
pmac_i2c_get_adapter extern s#i2c_adapter * pmac_i2c_get_adapter ( s#pmac_i2c_bus * ) 
pmac_i2c_adapter_to_bus extern s#pmac_i2c_bus * pmac_i2c_adapter_to_bus ( s#i2c_adapter * ) 
pmac_i2c_match_adapter extern int pmac_i2c_match_adapter ( s#device_node * , s#i2c_adapter * ) 
pmac_low_i2c_lock extern int pmac_low_i2c_lock ( s#device_node * ) 
pmac_low_i2c_unlock extern int pmac_low_i2c_unlock ( s#device_node * ) 
pmac_i2c_open extern int pmac_i2c_open ( s#pmac_i2c_bus * , int ) 
pmac_i2c_close extern void pmac_i2c_close ( s#pmac_i2c_bus * ) 
pmac_i2c_setmode extern int pmac_i2c_setmode ( s#pmac_i2c_bus * , int ) 
pmac_i2c_xfer extern int pmac_i2c_xfer ( s#pmac_i2c_bus * , t#u8 , int , t#u32 , t#u8 * , int ) 

/* arch/powerpc/platforms/powermac/nvram.o */
pmac_get_partition extern int pmac_get_partition ( int ) 
pmac_xpram_read extern t#u8 pmac_xpram_read ( int ) 
pmac_xpram_write extern void pmac_xpram_write ( int , t#u8 ) 

/* arch/powerpc/platforms/powermac/pfunc_core.o */
s##proc_dir_entry
s##pmf_device
s#pmf_function struct pmf_function { s#list_head link ; s#device_node * node ; void * driver_data ; s#pmf_device * dev ; const char * name ; t#u32 t#phandle ; t#u32 flags ; const void * data ; unsigned int length ; s#list_head irq_clients ; s#kref ref ; } 
s#pmf_args struct pmf_args { union { t#u32 v ; t#u32 * p ; } u [ 4 ] ; unsigned int count ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#pmf_handlers struct pmf_handlers { void * ( * begin ) ( s#pmf_function * , s#pmf_args * ) ; void ( * end ) ( s#pmf_function * , void * ) ; int ( * irq_enable ) ( s#pmf_function * ) ; int ( * irq_disable ) ( s#pmf_function * ) ; int ( * write_gpio ) ( s#pmf_function * , void * , s#pmf_args * , t#u8 , t#u8 ) ; int ( * read_gpio ) ( s#pmf_function * , void * , s#pmf_args * , t#u8 , int , t#u8 ) ; int ( * write_reg32 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 ) ; int ( * read_reg32 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 ) ; int ( * write_reg16 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u16 , t#u16 ) ; int ( * read_reg16 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 ) ; int ( * write_reg8 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u8 , t#u8 ) ; int ( * read_reg8 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 ) ; int ( * delay ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 ) ; int ( * wait_reg32 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 ) ; int ( * wait_reg16 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u16 , t#u16 ) ; int ( * wait_reg8 ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u8 , t#u8 ) ; int ( * read_i2c ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 ) ; int ( * write_i2c ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , const t#u8 * ) ; int ( * rmw_i2c ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 , const t#u8 * , const t#u8 * ) ; int ( * read_cfg ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 ) ; int ( * write_cfg ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , const t#u8 * ) ; int ( * rmw_cfg ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 , t#u32 , const t#u8 * , const t#u8 * ) ; int ( * read_i2c_sub ) ( s#pmf_function * , void * , s#pmf_args * , t#u8 , t#u32 ) ; int ( * write_i2c_sub ) ( s#pmf_function * , void * , s#pmf_args * , t#u8 , t#u32 , const t#u8 * ) ; int ( * set_i2c_mode ) ( s#pmf_function * , void * , s#pmf_args * , int ) ; int ( * rmw_i2c_sub ) ( s#pmf_function * , void * , s#pmf_args * , t#u8 , t#u32 , t#u32 , t#u32 , const t#u8 * , const t#u8 * ) ; int ( * read_reg32_msrx ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 , t#u32 ) ; int ( * read_reg16_msrx ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 , t#u32 ) ; int ( * read_reg8_msrx ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 , t#u32 ) ; int ( * write_reg32_slm ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 ) ; int ( * write_reg16_slm ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 ) ; int ( * write_reg8_slm ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , t#u32 , t#u32 ) ; int ( * mask_and_compare ) ( s#pmf_function * , void * , s#pmf_args * , t#u32 , const t#u8 * , const t#u8 * ) ; s#module * owner ; } 
pmf_register_driver extern int pmf_register_driver ( s#device_node * , s#pmf_handlers * , void * ) 
pmf_get_function extern s#pmf_function * pmf_get_function ( s#pmf_function * ) 
pmf_put_function extern void pmf_put_function ( s#pmf_function * ) 
pmf_unregister_driver extern void pmf_unregister_driver ( s#device_node * ) 
s#pmf_irq_client struct pmf_irq_client { void ( * handler ) ( void * ) ; void * data ; s#module * owner ; s#list_head link ; s#pmf_function * func ; } 
pmf_register_irq_client extern int pmf_register_irq_client ( s#device_node * , const char * , s#pmf_irq_client * ) 
pmf_unregister_irq_client extern void pmf_unregister_irq_client ( s#pmf_irq_client * ) 
pmf_do_irq extern void pmf_do_irq ( s#pmf_function * ) 
pmf_call_one extern int pmf_call_one ( s#pmf_function * , s#pmf_args * ) 
pmf_do_functions extern int pmf_do_functions ( s#device_node * , const char * , t#u32 t#phandle , t#u32 , s#pmf_args * ) 
pmf_find_function extern s#pmf_function * pmf_find_function ( s#device_node * , const char * ) 
pmf_call_function extern int pmf_call_function ( s#device_node * , const char * , s#pmf_args * ) 

/* arch/powerpc/platforms/powermac/setup.o */
e#sys_ctrler_kind enum sys_ctrler_kind { SYS_CTRLER_UNKNOWN = 0 , SYS_CTRLER_CUDA = 1 , SYS_CTRLER_PMU = 2 , SYS_CTRLER_SMU = 3 , } 
t#sys_ctrler_t typedef e#sys_ctrler_kind sys_ctrler_t 
sys_ctrler extern t#sys_ctrler_t sys_ctrler 
smu_cmdbuf_abs extern unsigned long smu_cmdbuf_abs 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##rtc_time
s##kimage
mach_powermac extern s#machdep_calls mach_powermac 

/* arch/powerpc/platforms/pseries/eeh.o */
eeh_subsystem_enabled extern int eeh_subsystem_enabled 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
eeh_dn_check_failure int eeh_dn_check_failure ( s#device_node * , s#pci_dev * ) 
eeh_check_failure unsigned long eeh_check_failure ( const volatile void * , unsigned long ) 
eeh_add_device_tree_early void eeh_add_device_tree_early ( s#device_node * ) 
eeh_add_device_tree_late void eeh_add_device_tree_late ( s#pci_bus * ) 
eeh_remove_bus_device void eeh_remove_bus_device ( s#pci_dev * ) 

/* arch/powerpc/platforms/pseries/hvconsole.o */
hvc_get_chars extern int hvc_get_chars ( t#uint32_t , char * , int ) 
hvc_put_chars extern int hvc_put_chars ( t#uint32_t , const char * , int ) 

/* arch/powerpc/platforms/pseries/hvcserver.o */
hvcs_free_partner_info extern int hvcs_free_partner_info ( s#list_head * ) 
hvcs_get_partner_info extern int hvcs_get_partner_info ( t#uint32_t , s#list_head * , unsigned long * ) 
hvcs_register_connection extern int hvcs_register_connection ( t#uint32_t , t#uint32_t , t#uint32_t ) 
hvcs_free_connection extern int hvcs_free_connection ( t#uint32_t ) 

/* arch/powerpc/platforms/pseries/io_event_irq.o */
s#atomic_notifier_head struct atomic_notifier_head { t#spinlock_t lock ; s#notifier_block * head ; } 
pseries_ioei_notifier_list extern s#atomic_notifier_head pseries_ioei_notifier_list 

/* arch/powerpc/platforms/pseries/lpar.o */
plpar_hcall long plpar_hcall ( unsigned long , unsigned long * , ... ) 
plpar_hcall9 long plpar_hcall9 ( unsigned long , unsigned long * , ... ) 
plpar_hcall_norets long plpar_hcall_norets ( unsigned long , ... ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
arch_free_page void arch_free_page ( s#page * , int ) 
s#hvcall_mpp_data struct hvcall_mpp_data { unsigned long entitled_mem ; unsigned long mapped_mem ; unsigned short group_num ; unsigned short pool_num ; unsigned char mem_weight ; unsigned char unallocated_mem_weight ; unsigned long unallocated_entitlement ; unsigned long pool_size ; signed long loan_request ; unsigned long backing_mem ; } 
h_get_mpp int h_get_mpp ( s#hvcall_mpp_data * ) 

/* arch/powerpc/platforms/pseries/pci_dlpar.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
s##pci_vpd
pcibios_find_pci_bus extern s#pci_bus * pcibios_find_pci_bus ( s#device_node * ) 
pcibios_remove_pci_devices extern void pcibios_remove_pci_devices ( s#pci_bus * ) 
pcibios_add_pci_devices extern void pcibios_add_pci_devices ( s#pci_bus * ) 
init_phb_dynamic extern s#pci_controller * init_phb_dynamic ( s#device_node * ) 
remove_phb_dynamic extern int remove_phb_dynamic ( s#pci_controller * ) 

/* arch/powerpc/platforms/pseries/reconfig.o */
pSeries_reconfig_notifier_register extern int pSeries_reconfig_notifier_register ( s#notifier_block * ) 
pSeries_reconfig_notifier_unregister extern void pSeries_reconfig_notifier_unregister ( s#notifier_block * ) 

/* arch/powerpc/platforms/pseries/setup.o */
CMO_PageSize extern unsigned long CMO_PageSize 
default_idle void default_idle ( void ) 
pm_idle extern void ( * pm_idle ) ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
t#compat_uptr_t typedef t#u32 compat_uptr_t 
s#compat_robust_list struct compat_robust_list { t#compat_uptr_t next ; } 
t#compat_long_t typedef t#s32 compat_long_t 
s#compat_robust_list_head struct compat_robust_list_head { s#compat_robust_list list ; t#compat_long_t futex_offset ; t#compat_uptr_t list_op_pending ; } 
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##rtc_time
t#kimage_entry_t typedef unsigned long kimage_entry_t 
s#kexec_segment struct kexec_segment { void * buf ; t#size_t bufsz ; unsigned long mem ; t#size_t memsz ; } 
s#kimage struct kimage { t#kimage_entry_t head ; t#kimage_entry_t * entry ; t#kimage_entry_t * last_entry ; unsigned long destination ; unsigned long start ; s#page * control_code_page ; s#page * swap_page ; unsigned long nr_segments ; s#kexec_segment segment [ 16 ] ; s#list_head control_pages ; s#list_head dest_pages ; s#list_head unuseable_pages ; unsigned long control_page ; unsigned int type : 1 ; unsigned int preserve_context : 1 ; } 
mach_pseries extern s#machdep_calls mach_pseries 

/* arch/powerpc/sysdev/dcr.o */
s##proc_dir_entry
dcr_resource_start extern unsigned int dcr_resource_start ( const s#device_node * , unsigned int ) 
dcr_resource_len extern unsigned int dcr_resource_len ( const s#device_node * , unsigned int ) 
t#dcr_host_mmio_t typedef struct { void * token ; unsigned int stride ; unsigned int base ; } dcr_host_mmio_t 
dcr_map_mmio extern t#dcr_host_mmio_t dcr_map_mmio ( s#device_node * , unsigned int , unsigned int ) 
dcr_unmap_mmio extern void dcr_unmap_mmio ( t#dcr_host_mmio_t , unsigned int ) 

/* arch/powerpc/sysdev/pmi.o */
t#pmi_message_t typedef struct { t#u8 type ; t#u8 data0 ; t#u8 data1 ; t#u8 data2 ; } pmi_message_t 
pmi_send_message int pmi_send_message ( t#pmi_message_t ) 
s#pmi_handler struct pmi_handler { s#list_head node ; t#u8 type ; void ( * handle_pmi_message ) ( t#pmi_message_t ) ; } 
pmi_register_handler int pmi_register_handler ( s#pmi_handler * ) 
pmi_unregister_handler void pmi_unregister_handler ( s#pmi_handler * ) 

/* arch/powerpc/xmon/xmon.o */
xmon extern int xmon ( s#pt_regs * ) 

/* block/blk-cgroup.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mtd_info
s#partition_meta_info struct partition_meta_info { t#u8 uuid [ 16 ] ; t#u8 volname [ 64 ] ; } 
s#disk_stats struct disk_stats { unsigned long sectors [ 2 ] ; unsigned long ios [ 2 ] ; unsigned long merges [ 2 ] ; unsigned long ticks [ 2 ] ; unsigned long io_ticks ; unsigned long time_in_queue ; } 
s#hd_struct struct hd_struct { t#sector_t start_sect ; t#sector_t nr_sects ; t#sector_t alignment_offset ; unsigned int discard_alignment ; s#device __dev ; s#kobject * holder_dir ; int policy , partno ; s#partition_meta_info * info ; unsigned long stamp ; t#atomic_t in_flight [ 2 ] ; s#disk_stats * dkstats ; t#atomic_t ref ; s#rcu_head rcu_head ; } 
s#disk_part_tbl struct disk_part_tbl { s#rcu_head rcu_head ; int len ; s#hd_struct * last_lookup ; s#hd_struct * part [ ] ; } 
s##hd_geometry
s#block_device_operations struct block_device_operations { int ( * open ) ( s#block_device * , t#fmode_t ) ; int ( * release ) ( s#gendisk * , t#fmode_t ) ; int ( * ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * compat_ioctl ) ( s#block_device * , t#fmode_t , unsigned , unsigned long ) ; int ( * direct_access ) ( s#block_device * , t#sector_t , void * * , unsigned long * ) ; unsigned int ( * check_events ) ( s#gendisk * , unsigned int ) ; int ( * media_changed ) ( s#gendisk * ) ; void ( * unlock_native_capacity ) ( s#gendisk * ) ; int ( * revalidate_disk ) ( s#gendisk * ) ; int ( * getgeo ) ( s#block_device * , s#hd_geometry * ) ; void ( * swap_slot_free_notify ) ( s#block_device * , unsigned long ) ; s#module * owner ; } 
t#smp_call_func_t typedef void ( * smp_call_func_t ) ( void * ) 
s#call_single_data struct call_single_data { s#list_head list ; t#smp_call_func_t func ; void * info ; t#u16 flags ; t#u16 priv ; } 
e#rq_cmd_type_bits enum rq_cmd_type_bits { REQ_TYPE_FS = 1 , REQ_TYPE_BLOCK_PC , REQ_TYPE_SENSE , REQ_TYPE_PM_SUSPEND , REQ_TYPE_PM_RESUME , REQ_TYPE_PM_SHUTDOWN , REQ_TYPE_SPECIAL , REQ_TYPE_ATA_TASKFILE , REQ_TYPE_ATA_PC , } 
s#bio_vec struct bio_vec { s#page * bv_page ; unsigned int bv_len ; unsigned int bv_offset ; } 
t#bio_end_io_t typedef void ( bio_end_io_t ) ( s#bio * , int ) 
s#bio_integrity_payload struct bio_integrity_payload { s#bio * bip_bio ; t#sector_t bip_sector ; void * bip_buf ; t#bio_end_io_t * bip_end_io ; unsigned int bip_size ; unsigned short bip_slab ; unsigned short bip_vcnt ; unsigned short bip_idx ; s#work_struct bip_work ; s#bio_vec bip_vec [ 0 ] ; } 
t#bio_destructor_t typedef void ( bio_destructor_t ) ( s#bio * ) 
s#bio struct bio { t#sector_t bi_sector ; s#bio * bi_next ; s#block_device * bi_bdev ; unsigned long bi_flags ; unsigned long bi_rw ; unsigned short bi_vcnt ; unsigned short bi_idx ; unsigned int bi_phys_segments ; unsigned int bi_size ; unsigned int bi_seg_front_size ; unsigned int bi_seg_back_size ; unsigned int bi_max_vecs ; unsigned int bi_comp_cpu ; t#atomic_t bi_cnt ; s#bio_vec * bi_io_vec ; t#bio_end_io_t * bi_end_io ; void * bi_private ; s#bio_integrity_payload * bi_integrity ; t#bio_destructor_t * bi_destructor ; s#bio_vec bi_inline_vecs [ 0 ] ; } 
t#rq_end_io_fn typedef void ( rq_end_io_fn ) ( s#request * , int ) 
s#request struct request { s#list_head queuelist ; s#call_single_data csd ; s#request_queue * q ; unsigned int cmd_flags ; e#rq_cmd_type_bits cmd_type ; unsigned long atomic_flags ; int cpu ; unsigned int __data_len ; t#sector_t __sector ; s#bio * bio ; s#bio * biotail ; s#hlist_node hash ; union { s#rb_node rb_node ; void * completion_data ; } ; union { void * elevator_private [ 3 ] ; struct { unsigned int seq ; s#list_head list ; t#rq_end_io_fn * saved_end_io ; } flush ; } ; s#gendisk * rq_disk ; s#hd_struct * part ; unsigned long start_time ; unsigned long long start_time_ns ; unsigned long long io_start_time_ns ; unsigned short nr_phys_segments ; unsigned short nr_integrity_segments ; unsigned short ioprio ; int ref_count ; void * special ; char * buffer ; int tag ; int errors ; unsigned char __cmd [ 16 ] ; unsigned char * cmd ; unsigned short cmd_len ; unsigned int extra_len ; unsigned int sense_len ; unsigned int resid_len ; void * sense ; unsigned long deadline ; s#list_head timeout_list ; unsigned int timeout ; int retries ; t#rq_end_io_fn * end_io ; void * end_io_data ; s#request * next_rq ; } 
t#elevator_merge_fn typedef int ( elevator_merge_fn ) ( s#request_queue * , s#request * * , s#bio * ) 
t#elevator_merged_fn typedef void ( elevator_merged_fn ) ( s#request_queue * , s#request * , int ) 
t#elevator_merge_req_fn typedef void ( elevator_merge_req_fn ) ( s#request_queue * , s#request * , s#request * ) 
t#elevator_allow_merge_fn typedef int ( elevator_allow_merge_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_bio_merged_fn typedef void ( elevator_bio_merged_fn ) ( s#request_queue * , s#request * , s#bio * ) 
t#elevator_dispatch_fn typedef int ( elevator_dispatch_fn ) ( s#request_queue * , int ) 
t#elevator_add_req_fn typedef void ( elevator_add_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_activate_req_fn typedef void ( elevator_activate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_deactivate_req_fn typedef void ( elevator_deactivate_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_completed_req_fn typedef void ( elevator_completed_req_fn ) ( s#request_queue * , s#request * ) 
t#elevator_request_list_fn typedef s#request * ( elevator_request_list_fn ) ( s#request_queue * , s#request * ) 
t#elevator_set_req_fn typedef int ( elevator_set_req_fn ) ( s#request_queue * , s#request * , t#gfp_t ) 
t#elevator_put_req_fn typedef void ( elevator_put_req_fn ) ( s#request * ) 
t#elevator_may_queue_fn typedef int ( elevator_may_queue_fn ) ( s#request_queue * , int ) 
t#elevator_init_fn typedef void * ( elevator_init_fn ) ( s#request_queue * ) 
t#elevator_exit_fn typedef void ( elevator_exit_fn ) ( s#elevator_queue * ) 
s#io_context struct io_context { t#atomic_long_t refcount ; t#atomic_t nr_tasks ; t#spinlock_t lock ; unsigned short ioprio ; unsigned short ioprio_changed ; unsigned short cgroup_changed ; int nr_batch_requests ; unsigned long last_waited ; s#radix_tree_root radix_root ; s#hlist_head cic_list ; void * ioc_data ; } 
s#elevator_ops struct elevator_ops { t#elevator_merge_fn * elevator_merge_fn ; t#elevator_merged_fn * elevator_merged_fn ; t#elevator_merge_req_fn * elevator_merge_req_fn ; t#elevator_allow_merge_fn * elevator_allow_merge_fn ; t#elevator_bio_merged_fn * elevator_bio_merged_fn ; t#elevator_dispatch_fn * elevator_dispatch_fn ; t#elevator_add_req_fn * elevator_add_req_fn ; t#elevator_activate_req_fn * elevator_activate_req_fn ; t#elevator_deactivate_req_fn * elevator_deactivate_req_fn ; t#elevator_completed_req_fn * elevator_completed_req_fn ; t#elevator_request_list_fn * elevator_former_req_fn ; t#elevator_request_list_fn * elevator_latter_req_fn ; t#elevator_set_req_fn * elevator_set_req_fn ; t#elevator_put_req_fn * elevator_put_req_fn ; t#elevator_may_queue_fn * elevator_may_queue_fn ; t#elevator_init_fn * elevator_init_fn ; t#elevator_exit_fn * elevator_exit_fn ; void ( * trim ) ( s#io_context * ) ; } 
s#elv_fs_entry struct elv_fs_entry { s#attribute attr ; t#ssize_t ( * show ) ( s#elevator_queue * , char * ) ; t#ssize_t ( * store ) ( s#elevator_queue * , const char * , t#size_t ) ; } 
s#elevator_type struct elevator_type { s#list_head list ; s#elevator_ops ops ; s#elv_fs_entry * elevator_attrs ; char elevator_name [ ( 16 ) ] ; s#module * elevator_owner ; } 
s#elevator_queue struct elevator_queue { s#elevator_ops * ops ; void * elevator_data ; s#kobject kobj ; s#elevator_type * elevator_type ; s#mutex sysfs_lock ; s#hlist_head * hash ; unsigned int registered : 1 ; } 
t#mempool_alloc_t typedef void * ( mempool_alloc_t ) ( t#gfp_t , void * ) 
t#mempool_free_t typedef void ( mempool_free_t ) ( void * , void * ) 
s#mempool_s struct mempool_s { t#spinlock_t lock ; int min_nr ; int curr_nr ; void * * elements ; void * pool_data ; t#mempool_alloc_t * alloc ; t#mempool_free_t * free ; t#wait_queue_head_t wait ; } 
t#mempool_t typedef s#mempool_s mempool_t 
s#request_list struct request_list { int count [ 2 ] ; int starved [ 2 ] ; int elvpriv ; t#mempool_t * rq_pool ; t#wait_queue_head_t wait [ 2 ] ; } 
t#request_fn_proc typedef void ( request_fn_proc ) ( s#request_queue * ) 
t#make_request_fn typedef int ( make_request_fn ) ( s#request_queue * , s#bio * ) 
t#prep_rq_fn typedef int ( prep_rq_fn ) ( s#request_queue * , s#request * ) 
t#unprep_rq_fn typedef void ( unprep_rq_fn ) ( s#request_queue * , s#request * ) 
s#bvec_merge_data struct bvec_merge_data { s#block_device * bi_bdev ; t#sector_t bi_sector ; unsigned bi_size ; unsigned long bi_rw ; } 
t#merge_bvec_fn typedef int ( merge_bvec_fn ) ( s#request_queue * , s#bvec_merge_data * , s#bio_vec * ) 
t#softirq_done_fn typedef void ( softirq_done_fn ) ( s#request * ) 
e#blk_eh_timer_return enum blk_eh_timer_return { BLK_EH_NOT_HANDLED , BLK_EH_HANDLED , BLK_EH_RESET_TIMER , } 
t#rq_timed_out_fn typedef e#blk_eh_timer_return ( rq_timed_out_fn ) ( s#request * ) 
t#dma_drain_needed_fn typedef int ( dma_drain_needed_fn ) ( s#request * ) 
t#lld_busy_fn typedef int ( lld_busy_fn ) ( s#request_queue * ) 
s#blk_queue_tag struct blk_queue_tag { s#request * * tag_index ; unsigned long * tag_map ; int busy ; int max_depth ; int real_max_depth ; t#atomic_t refcnt ; } 
s#queue_limits struct queue_limits { unsigned long bounce_pfn ; unsigned long seg_boundary_mask ; unsigned int max_hw_sectors ; unsigned int max_sectors ; unsigned int max_segment_size ; unsigned int physical_block_size ; unsigned int alignment_offset ; unsigned int io_min ; unsigned int io_opt ; unsigned int max_discard_sectors ; unsigned int discard_granularity ; unsigned int discard_alignment ; unsigned short logical_block_size ; unsigned short max_segments ; unsigned short max_integrity_segments ; unsigned char misaligned ; unsigned char discard_misaligned ; unsigned char cluster ; unsigned char discard_zeroes_data ; } 
s##blk_trace
s##bsg_job
t#bsg_job_fn typedef int ( bsg_job_fn ) ( s#bsg_job * ) 
s#bsg_class_device struct bsg_class_device { s#device * class_dev ; s#device * parent ; int minor ; s#request_queue * queue ; s#kref ref ; void ( * release ) ( s#device * ) ; } 
s##throtl_data
s#request_queue struct request_queue { s#list_head queue_head ; s#request * last_merge ; s#elevator_queue * elevator ; s#request_list rq ; t#request_fn_proc * request_fn ; t#make_request_fn * make_request_fn ; t#prep_rq_fn * prep_rq_fn ; t#unprep_rq_fn * unprep_rq_fn ; t#merge_bvec_fn * merge_bvec_fn ; t#softirq_done_fn * softirq_done_fn ; t#rq_timed_out_fn * rq_timed_out_fn ; t#dma_drain_needed_fn * dma_drain_needed ; t#lld_busy_fn * lld_busy_fn ; t#sector_t end_sector ; s#request * boundary_rq ; s#delayed_work delay_work ; s#backing_dev_info backing_dev_info ; void * queuedata ; t#gfp_t bounce_gfp ; unsigned long queue_flags ; t#spinlock_t __queue_lock ; t#spinlock_t * queue_lock ; s#kobject kobj ; unsigned long nr_requests ; unsigned int nr_congestion_on ; unsigned int nr_congestion_off ; unsigned int nr_batching ; void * dma_drain_buffer ; unsigned int dma_drain_size ; unsigned int dma_pad_mask ; unsigned int dma_alignment ; s#blk_queue_tag * queue_tags ; s#list_head tag_busy_list ; unsigned int nr_sorted ; unsigned int in_flight [ 2 ] ; unsigned int request_fn_active ; unsigned int rq_timeout ; s#timer_list timeout ; s#list_head timeout_list ; s#queue_limits limits ; unsigned int sg_timeout ; unsigned int sg_reserved_size ; int node ; s#blk_trace * blk_trace ; unsigned int flush_flags ; unsigned int flush_not_queueable : 1 ; unsigned int flush_queue_delayed : 1 ; unsigned int flush_pending_idx : 1 ; unsigned int flush_running_idx : 1 ; unsigned long flush_pending_since ; s#list_head flush_queue [ 2 ] ; s#list_head flush_data_in_flight ; s#request flush_rq ; s#mutex sysfs_lock ; t#bsg_job_fn * bsg_job_fn ; int bsg_job_size ; s#bsg_class_device bsg_dev ; s#throtl_data * td ; } 
s##timer_rand_state
s##disk_events
s#blk_integrity_exchg struct blk_integrity_exchg { void * prot_buf ; void * data_buf ; t#sector_t sector ; unsigned int data_size ; unsigned short sector_size ; const char * disk_name ; } 
t#integrity_gen_fn typedef void ( integrity_gen_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_vrfy_fn typedef int ( integrity_vrfy_fn ) ( s#blk_integrity_exchg * ) 
t#integrity_set_tag_fn typedef void ( integrity_set_tag_fn ) ( void * , void * , unsigned int ) 
t#integrity_get_tag_fn typedef void ( integrity_get_tag_fn ) ( void * , void * , unsigned int ) 
s#blk_integrity struct blk_integrity { t#integrity_gen_fn * generate_fn ; t#integrity_vrfy_fn * verify_fn ; t#integrity_set_tag_fn * set_tag_fn ; t#integrity_get_tag_fn * get_tag_fn ; unsigned short flags ; unsigned short tuple_size ; unsigned short sector_size ; unsigned short tag_size ; const char * name ; s#kobject kobj ; } 
s#gendisk struct gendisk { int major ; int first_minor ; int minors ; char disk_name [ 32 ] ; char * ( * devnode ) ( s#gendisk * , t#mode_t * ) ; unsigned int events ; unsigned int async_events ; s#disk_part_tbl * part_tbl ; s#hd_struct part0 ; const s#block_device_operations * fops ; s#request_queue * queue ; void * private_data ; int flags ; s#device * driverfs_dev ; s#kobject * slave_dir ; s#timer_rand_state * random ; t#atomic_t sync_io ; s#disk_events * ev ; s#blk_integrity * integrity ; int node_id ; } 
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s#bio_list struct bio_list { s#bio * head ; s#bio * tail ; } 
s#blk_plug struct blk_plug { unsigned long magic ; s#list_head list ; s#list_head cb_list ; unsigned int should_sort ; } 
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##cgroupfs_root
s##css_id
s#blkio_cgroup struct blkio_cgroup { s#cgroup_subsys_state css ; unsigned int weight ; t#spinlock_t lock ; s#hlist_head blkg_list ; s#list_head policy_list ; } 
blkio_root_cgroup extern s#blkio_cgroup blkio_root_cgroup 
s#idr_layer struct idr_layer { unsigned long bitmap ; s#idr_layer * ary [ 1 << 6 ] ; int count ; int layer ; s#rcu_head rcu_head ; } 
s#idr struct idr { s#idr_layer * top ; s#idr_layer * id_free ; int layers ; int id_free_cnt ; t#spinlock_t lock ; } 
s#cgroup_subsys struct cgroup_subsys { s#cgroup_subsys_state * ( * create ) ( s#cgroup_subsys * , s#cgroup * ) ; int ( * pre_destroy ) ( s#cgroup_subsys * , s#cgroup * ) ; void ( * destroy ) ( s#cgroup_subsys * , s#cgroup * ) ; int ( * can_attach ) ( s#cgroup_subsys * , s#cgroup * , s#task_struct * ) ; int ( * can_attach_task ) ( s#cgroup * , s#task_struct * ) ; void ( * cancel_attach ) ( s#cgroup_subsys * , s#cgroup * , s#task_struct * ) ; void ( * pre_attach ) ( s#cgroup * ) ; void ( * attach_task ) ( s#cgroup * , s#task_struct * ) ; void ( * attach ) ( s#cgroup_subsys * , s#cgroup * , s#cgroup * , s#task_struct * ) ; void ( * fork ) ( s#cgroup_subsys * , s#task_struct * ) ; void ( * exit ) ( s#cgroup_subsys * , s#cgroup * , s#cgroup * , s#task_struct * ) ; int ( * populate ) ( s#cgroup_subsys * , s#cgroup * ) ; void ( * post_clone ) ( s#cgroup_subsys * , s#cgroup * ) ; void ( * bind ) ( s#cgroup_subsys * , s#cgroup * ) ; int subsys_id ; int active ; int disabled ; int early_init ; t#bool use_id ; const char * name ; s#mutex hierarchy_mutex ; s#lock_class_key subsys_key ; s#cgroupfs_root * root ; s#list_head sibling ; s#idr idr ; t#spinlock_t id_lock ; s#module * module ; } 
blkio_subsys extern s#cgroup_subsys blkio_subsys 
cgroup_to_blkio_cgroup extern s#blkio_cgroup * cgroup_to_blkio_cgroup ( s#cgroup * ) 
task_blkio_cgroup extern s#blkio_cgroup * task_blkio_cgroup ( s#task_struct * ) 
e#blkio_policy_id enum blkio_policy_id { BLKIO_POLICY_PROP = 0 , BLKIO_POLICY_THROTL , } 
E#BLKIO_STAT_QUEUED ( 0 ) + 2 
E#BLKIO_STAT_TOTAL ( 0 ) + 4 
s#blkio_group_stats struct blkio_group_stats { t#uint64_t time ; t#uint64_t stat_arr [ E#BLKIO_STAT_QUEUED + 1 ] [ E#BLKIO_STAT_TOTAL ] ; } 
E#BLKIO_STAT_CPU_NR 4 
s#blkio_group_stats_cpu struct blkio_group_stats_cpu { t#uint64_t sectors ; t#uint64_t stat_arr_cpu [ E#BLKIO_STAT_CPU_NR ] [ E#BLKIO_STAT_TOTAL ] ; s#u64_stats_sync syncp ; } 
s#blkio_group struct blkio_group { void * key ; s#hlist_node blkcg_node ; unsigned short blkcg_id ; char path [ 128 ] ; t#dev_t dev ; e#blkio_policy_id plid ; t#spinlock_t stats_lock ; s#blkio_group_stats stats ; s#blkio_group_stats_cpu * stats_cpu ; } 
blkiocg_update_io_add_stats void blkiocg_update_io_add_stats ( s#blkio_group * , s#blkio_group * , t#bool , t#bool ) 
blkiocg_update_io_remove_stats void blkiocg_update_io_remove_stats ( s#blkio_group * , t#bool , t#bool ) 
blkiocg_update_timeslice_used void blkiocg_update_timeslice_used ( s#blkio_group * , unsigned long , unsigned long ) 
blkiocg_update_dispatch_stats void blkiocg_update_dispatch_stats ( s#blkio_group * , t#uint64_t , t#bool , t#bool ) 
blkiocg_update_completion_stats void blkiocg_update_completion_stats ( s#blkio_group * , t#uint64_t , t#uint64_t , t#bool , t#bool ) 
blkiocg_update_io_merged_stats void blkiocg_update_io_merged_stats ( s#blkio_group * , t#bool , t#bool ) 
blkio_alloc_blkg_stats extern int blkio_alloc_blkg_stats ( s#blkio_group * ) 
blkiocg_add_blkio_group extern void blkiocg_add_blkio_group ( s#blkio_cgroup * , s#blkio_group * , void * , t#dev_t , e#blkio_policy_id ) 
blkiocg_del_blkio_group extern int blkiocg_del_blkio_group ( s#blkio_group * ) 
blkiocg_lookup_group extern s#blkio_group * blkiocg_lookup_group ( s#blkio_cgroup * , void * ) 
blkcg_get_weight extern unsigned int blkcg_get_weight ( s#blkio_cgroup * , t#dev_t ) 
t#blkio_unlink_group_fn typedef void ( blkio_unlink_group_fn ) ( void * , s#blkio_group * ) 
t#blkio_update_group_weight_fn typedef void ( blkio_update_group_weight_fn ) ( void * , s#blkio_group * , unsigned int ) 
t#blkio_update_group_read_bps_fn typedef void ( blkio_update_group_read_bps_fn ) ( void * , s#blkio_group * , t#u64 ) 
t#blkio_update_group_write_bps_fn typedef void ( blkio_update_group_write_bps_fn ) ( void * , s#blkio_group * , t#u64 ) 
t#blkio_update_group_read_iops_fn typedef void ( blkio_update_group_read_iops_fn ) ( void * , s#blkio_group * , unsigned int ) 
t#blkio_update_group_write_iops_fn typedef void ( blkio_update_group_write_iops_fn ) ( void * , s#blkio_group * , unsigned int ) 
s#blkio_policy_ops struct blkio_policy_ops { t#blkio_unlink_group_fn * blkio_unlink_group_fn ; t#blkio_update_group_weight_fn * blkio_update_group_weight_fn ; t#blkio_update_group_read_bps_fn * blkio_update_group_read_bps_fn ; t#blkio_update_group_write_bps_fn * blkio_update_group_write_bps_fn ; t#blkio_update_group_read_iops_fn * blkio_update_group_read_iops_fn ; t#blkio_update_group_write_iops_fn * blkio_update_group_write_iops_fn ; } 
s#blkio_policy_type struct blkio_policy_type { s#list_head list ; s#blkio_policy_ops ops ; e#blkio_policy_id plid ; } 
blkio_policy_register extern void blkio_policy_register ( s#blkio_policy_type * ) 
blkio_policy_unregister extern void blkio_policy_unregister ( s#blkio_policy_type * ) 

/* block/blk-core.o */
__tracepoint_block_bio_remap extern s#tracepoint __tracepoint_block_bio_remap 
__tracepoint_block_rq_remap extern s#tracepoint __tracepoint_block_rq_remap 
__tracepoint_block_bio_complete extern s#tracepoint __tracepoint_block_bio_complete 
__tracepoint_block_split extern s#tracepoint __tracepoint_block_split 
__tracepoint_block_unplug extern s#tracepoint __tracepoint_block_unplug 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s#rchan_buf struct rchan_buf { void * start ; void * data ; t#size_t offset ; t#size_t subbufs_produced ; t#size_t subbufs_consumed ; s#rchan * chan ; t#wait_queue_head_t read_wait ; s#timer_list timer ; s#dentry * dentry ; s#kref kref ; s#page * * page_array ; unsigned int page_count ; unsigned int finalized ; t#size_t * padding ; t#size_t prev_padding ; t#size_t bytes_consumed ; t#size_t early_bytes ; unsigned int cpu ; } 
s#rchan_callbacks struct rchan_callbacks { int ( * subbuf_start ) ( s#rchan_buf * , void * , void * , t#size_t ) ; void ( * buf_mapped ) ( s#rchan_buf * , s#file * ) ; void ( * buf_unmapped ) ( s#rchan_buf * , s#file * ) ; s#dentry * ( * create_buf_file ) ( const char * , s#dentry * , int , s#rchan_buf * , int * ) ; int ( * remove_buf_file ) ( s#dentry * ) ; } 
s#rchan struct rchan { t#u32 version ; t#size_t subbuf_size ; t#size_t n_subbufs ; t#size_t alloc_size ; s#rchan_callbacks * cb ; s#kref kref ; void * private_data ; t#size_t last_toobig ; s#rchan_buf * buf [ 1024 ] ; int is_global ; s#list_head list ; s#dentry * parent ; int has_base_filename ; char base_filename [ 255 ] ; } 
s#blk_trace struct blk_trace { int trace_state ; s#rchan * rchan ; unsigned long * sequence ; unsigned char * msg_data ; t#u16 act_mask ; t#u64 start_lba ; t#u64 end_lba ; t#u32 pid ; t#u32 dev ; s#dentry * dir ; s#dentry * dropped_file ; s#dentry * msg_file ; t#atomic_t dropped ; } 
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
blk_get_backing_dev_info extern s#backing_dev_info * blk_get_backing_dev_info ( s#block_device * ) 
blk_rq_init extern void blk_rq_init ( s#request_queue * , s#request * ) 
blk_dump_rq_flags extern void blk_dump_rq_flags ( s#request * , char * ) 
blk_delay_queue extern void blk_delay_queue ( s#request_queue * , unsigned long ) 
blk_start_queue extern void blk_start_queue ( s#request_queue * ) 
blk_stop_queue extern void blk_stop_queue ( s#request_queue * ) 
blk_sync_queue extern void blk_sync_queue ( s#request_queue * ) 
__blk_run_queue extern void __blk_run_queue ( s#request_queue * ) 
blk_run_queue_async extern void blk_run_queue_async ( s#request_queue * ) 
blk_run_queue extern void blk_run_queue ( s#request_queue * ) 
blk_put_queue extern void blk_put_queue ( s#request_queue * ) 
blk_cleanup_queue extern void blk_cleanup_queue ( s#request_queue * ) 
blk_alloc_queue s#request_queue * blk_alloc_queue ( t#gfp_t ) 
blk_alloc_queue_node s#request_queue * blk_alloc_queue_node ( t#gfp_t , int ) 
blk_init_queue extern s#request_queue * blk_init_queue ( t#request_fn_proc * , t#spinlock_t * ) 
blk_init_queue_node extern s#request_queue * blk_init_queue_node ( t#request_fn_proc * , t#spinlock_t * , int ) 
blk_init_allocated_queue extern s#request_queue * blk_init_allocated_queue ( s#request_queue * , t#request_fn_proc * , t#spinlock_t * ) 
blk_get_queue t#bool blk_get_queue ( s#request_queue * ) 
blk_get_request extern s#request * blk_get_request ( s#request_queue * , int , t#gfp_t ) 
blk_make_request extern s#request * blk_make_request ( s#request_queue * , s#bio * , t#gfp_t ) 
blk_requeue_request extern void blk_requeue_request ( s#request_queue * , s#request * ) 
blk_insert_request extern void blk_insert_request ( s#request_queue * , s#request * , int , void * ) 
part_round_stats extern void part_round_stats ( int , s#hd_struct * ) 
__blk_put_request extern void __blk_put_request ( s#request_queue * , s#request * ) 
blk_put_request extern void blk_put_request ( s#request * ) 
blk_add_request_payload extern void blk_add_request_payload ( s#request * , s#page * , unsigned int ) 
generic_make_request extern void generic_make_request ( s#bio * ) 
submit_bio extern void submit_bio ( int , s#bio * ) 
blk_rq_check_limits extern int blk_rq_check_limits ( s#request_queue * , s#request * ) 
blk_insert_cloned_request extern int blk_insert_cloned_request ( s#request_queue * , s#request * ) 
blk_rq_err_bytes extern unsigned int blk_rq_err_bytes ( const s#request * ) 
blk_peek_request extern s#request * blk_peek_request ( s#request_queue * ) 
blk_start_request extern void blk_start_request ( s#request * ) 
blk_fetch_request extern s#request * blk_fetch_request ( s#request_queue * ) 
blk_update_request extern t#bool blk_update_request ( s#request * , int , unsigned int ) 
blk_unprep_request extern void blk_unprep_request ( s#request * ) 
blk_end_request extern t#bool blk_end_request ( s#request * , int , unsigned int ) 
blk_end_request_all extern void blk_end_request_all ( s#request * , int ) 
blk_end_request_cur extern t#bool blk_end_request_cur ( s#request * , int ) 
blk_end_request_err extern t#bool blk_end_request_err ( s#request * , int ) 
__blk_end_request extern t#bool __blk_end_request ( s#request * , int , unsigned int ) 
__blk_end_request_all extern void __blk_end_request_all ( s#request * , int ) 
__blk_end_request_cur extern t#bool __blk_end_request_cur ( s#request * , int ) 
__blk_end_request_err extern t#bool __blk_end_request_err ( s#request * , int ) 
rq_flush_dcache_pages extern void rq_flush_dcache_pages ( s#request * ) 
blk_lld_busy extern int blk_lld_busy ( s#request_queue * ) 
blk_rq_unprep_clone extern void blk_rq_unprep_clone ( s#request * ) 
s#bio_set struct bio_set { s#kmem_cache * bio_slab ; unsigned int front_pad ; t#mempool_t * bio_pool ; t#mempool_t * bio_integrity_pool ; t#mempool_t * bvec_pool ; } 
blk_rq_prep_clone extern int blk_rq_prep_clone ( s#request * , s#request * , s#bio_set * , t#gfp_t , int ( * ) ( s#bio * , s#bio * , void * ) , void * ) 
kblockd_schedule_work int kblockd_schedule_work ( s#request_queue * , s#work_struct * ) 
kblockd_schedule_delayed_work int kblockd_schedule_delayed_work ( s#request_queue * , s#delayed_work * , unsigned long ) 
blk_start_plug extern void blk_start_plug ( s#blk_plug * ) 
blk_finish_plug extern void blk_finish_plug ( s#blk_plug * ) 
dev_set_rdonly extern void dev_set_rdonly ( s#block_device * ) 
dev_clear_rdonly extern void dev_clear_rdonly ( s#block_device * ) 
dev_check_rdonly extern int dev_check_rdonly ( s#block_device * ) 

/* block/blk-exec.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_execute_rq_nowait extern void blk_execute_rq_nowait ( s#request_queue * , s#gendisk * , s#request * , int , t#rq_end_io_fn * ) 
blk_execute_rq extern int blk_execute_rq ( s#request_queue * , s#gendisk * , s#request * , int ) 

/* block/blk-flush.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
blkdev_issue_flush extern int blkdev_issue_flush ( s#block_device * , t#gfp_t , t#sector_t * ) 

/* block/blk-integrity.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_rq_count_integrity_sg extern int blk_rq_count_integrity_sg ( s#request_queue * , s#bio * ) 
blk_rq_map_integrity_sg extern int blk_rq_map_integrity_sg ( s#request_queue * , s#bio * , s#scatterlist * ) 
blk_integrity_compare extern int blk_integrity_compare ( s#gendisk * , s#gendisk * ) 
blk_integrity_merge_rq extern int blk_integrity_merge_rq ( s#request_queue * , s#request * , s#request * ) 
blk_integrity_merge_bio extern int blk_integrity_merge_bio ( s#request_queue * , s#request * , s#bio * ) 
blk_integrity_is_initialized extern t#bool blk_integrity_is_initialized ( s#gendisk * ) 
blk_integrity_register extern int blk_integrity_register ( s#gendisk * , s#blk_integrity * ) 
blk_integrity_unregister extern void blk_integrity_unregister ( s#gendisk * ) 

/* block/blk-ioc.o */
s##radix_tree_node
put_io_context int put_io_context ( s#io_context * ) 
get_io_context s#io_context * get_io_context ( t#gfp_t , int ) 

/* block/blk-iopoll.o */
blk_iopoll_enabled extern int blk_iopoll_enabled 
t#blk_iopoll_fn typedef int ( blk_iopoll_fn ) ( s#blk_iopoll * , int ) 
s#blk_iopoll struct blk_iopoll { s#list_head list ; unsigned long state ; unsigned long data ; int weight ; int max ; t#blk_iopoll_fn * poll ; } 
blk_iopoll_sched extern void blk_iopoll_sched ( s#blk_iopoll * ) 
__blk_iopoll_complete extern void __blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_complete extern void blk_iopoll_complete ( s#blk_iopoll * ) 
blk_iopoll_disable extern void blk_iopoll_disable ( s#blk_iopoll * ) 
blk_iopoll_enable extern void blk_iopoll_enable ( s#blk_iopoll * ) 
blk_iopoll_init extern void blk_iopoll_init ( s#blk_iopoll * , int , t#blk_iopoll_fn * ) 

/* block/blk-lib.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
blkdev_issue_discard extern int blkdev_issue_discard ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t , unsigned long ) 
blkdev_issue_zeroout extern int blkdev_issue_zeroout ( s#block_device * , t#sector_t , t#sector_t , t#gfp_t ) 

/* block/blk-map.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s#rq_map_data struct rq_map_data { s#page * * pages ; int page_order ; int nr_entries ; unsigned long offset ; int null_mapped ; int from_user ; } 
blk_rq_map_user extern int blk_rq_map_user ( s#request_queue * , s#request * , s#rq_map_data * , void * , unsigned long , t#gfp_t ) 
s#sg_iovec struct sg_iovec { void * iov_base ; t#size_t iov_len ; } 
blk_rq_map_user_iov extern int blk_rq_map_user_iov ( s#request_queue * , s#request * , s#rq_map_data * , s#sg_iovec * , int , unsigned int , t#gfp_t ) 
blk_rq_unmap_user extern int blk_rq_unmap_user ( s#bio * ) 
blk_rq_map_kern extern int blk_rq_map_kern ( s#request_queue * , s#request * , void * , unsigned int , t#gfp_t ) 

/* block/blk-merge.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_recount_segments extern void blk_recount_segments ( s#request_queue * , s#bio * ) 
blk_rq_map_sg extern int blk_rq_map_sg ( s#request_queue * , s#request * , s#scatterlist * ) 

/* block/blk-settings.o */
blk_max_low_pfn extern unsigned long blk_max_low_pfn 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_prep_rq extern void blk_queue_prep_rq ( s#request_queue * , t#prep_rq_fn * ) 
blk_queue_unprep_rq extern void blk_queue_unprep_rq ( s#request_queue * , t#unprep_rq_fn * ) 
blk_queue_merge_bvec extern void blk_queue_merge_bvec ( s#request_queue * , t#merge_bvec_fn * ) 
blk_queue_softirq_done extern void blk_queue_softirq_done ( s#request_queue * , t#softirq_done_fn * ) 
blk_queue_rq_timeout extern void blk_queue_rq_timeout ( s#request_queue * , unsigned int ) 
blk_queue_rq_timed_out extern void blk_queue_rq_timed_out ( s#request_queue * , t#rq_timed_out_fn * ) 
blk_queue_lld_busy extern void blk_queue_lld_busy ( s#request_queue * , t#lld_busy_fn * ) 
blk_set_default_limits extern void blk_set_default_limits ( s#queue_limits * ) 
blk_set_stacking_limits extern void blk_set_stacking_limits ( s#queue_limits * ) 
blk_queue_make_request extern void blk_queue_make_request ( s#request_queue * , t#make_request_fn * ) 
blk_queue_bounce_limit extern void blk_queue_bounce_limit ( s#request_queue * , t#u64 ) 
blk_limits_max_hw_sectors extern void blk_limits_max_hw_sectors ( s#queue_limits * , unsigned int ) 
blk_queue_max_hw_sectors extern void blk_queue_max_hw_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_discard_sectors extern void blk_queue_max_discard_sectors ( s#request_queue * , unsigned int ) 
blk_queue_max_segments extern void blk_queue_max_segments ( s#request_queue * , unsigned short ) 
blk_queue_max_segment_size extern void blk_queue_max_segment_size ( s#request_queue * , unsigned int ) 
blk_queue_logical_block_size extern void blk_queue_logical_block_size ( s#request_queue * , unsigned short ) 
blk_queue_physical_block_size extern void blk_queue_physical_block_size ( s#request_queue * , unsigned int ) 
blk_queue_alignment_offset extern void blk_queue_alignment_offset ( s#request_queue * , unsigned int ) 
blk_limits_io_min extern void blk_limits_io_min ( s#queue_limits * , unsigned int ) 
blk_queue_io_min extern void blk_queue_io_min ( s#request_queue * , unsigned int ) 
blk_limits_io_opt extern void blk_limits_io_opt ( s#queue_limits * , unsigned int ) 
blk_queue_io_opt extern void blk_queue_io_opt ( s#request_queue * , unsigned int ) 
blk_queue_stack_limits extern void blk_queue_stack_limits ( s#request_queue * , s#request_queue * ) 
blk_stack_limits extern int blk_stack_limits ( s#queue_limits * , s#queue_limits * , t#sector_t ) 
bdev_stack_limits extern int bdev_stack_limits ( s#queue_limits * , s#block_device * , t#sector_t ) 
disk_stack_limits extern void disk_stack_limits ( s#gendisk * , s#block_device * , t#sector_t ) 
blk_queue_dma_pad extern void blk_queue_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_update_dma_pad extern void blk_queue_update_dma_pad ( s#request_queue * , unsigned int ) 
blk_queue_dma_drain extern int blk_queue_dma_drain ( s#request_queue * , t#dma_drain_needed_fn * , void * , unsigned int ) 
blk_queue_segment_boundary extern void blk_queue_segment_boundary ( s#request_queue * , unsigned long ) 
blk_queue_dma_alignment extern void blk_queue_dma_alignment ( s#request_queue * , int ) 
blk_queue_update_dma_alignment extern void blk_queue_update_dma_alignment ( s#request_queue * , int ) 
blk_queue_flush extern void blk_queue_flush ( s#request_queue * , unsigned int ) 
blk_queue_flush_queueable extern void blk_queue_flush_queueable ( s#request_queue * , t#bool ) 

/* block/blk-softirq.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_complete_request extern void blk_complete_request ( s#request * ) 

/* block/blk-tag.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_queue_find_tag extern s#request * blk_queue_find_tag ( s#request_queue * , int ) 
blk_free_tags extern void blk_free_tags ( s#blk_queue_tag * ) 
blk_queue_free_tags extern void blk_queue_free_tags ( s#request_queue * ) 
blk_init_tags extern s#blk_queue_tag * blk_init_tags ( int ) 
blk_queue_init_tags extern int blk_queue_init_tags ( s#request_queue * , int , s#blk_queue_tag * ) 
blk_queue_resize_tags extern int blk_queue_resize_tags ( s#request_queue * , int ) 
blk_queue_end_tag extern void blk_queue_end_tag ( s#request_queue * , s#request * ) 
blk_queue_start_tag extern int blk_queue_start_tag ( s#request_queue * , s#request * ) 
blk_queue_invalidate_tags extern void blk_queue_invalidate_tags ( s#request_queue * ) 

/* block/blk-timeout.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
blk_abort_request extern void blk_abort_request ( s#request * ) 
blk_abort_queue extern void blk_abort_queue ( s#request_queue * ) 

/* block/bsg.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
bsg_unregister_queue extern void bsg_unregister_queue ( s#request_queue * ) 
bsg_register_queue extern int bsg_register_queue ( s#request_queue * , s#device * , const char * , void ( * ) ( s#device * ) ) 

/* block/bsg-lib.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#bsg_buffer struct bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#bsg_job struct bsg_job { s#device * dev ; s#request * req ; void * request ; void * reply ; unsigned int request_len ; unsigned int reply_len ; s#bsg_buffer request_payload ; s#bsg_buffer reply_payload ; void * dd_data ; } 
bsg_job_done void bsg_job_done ( s#bsg_job * , int , unsigned int ) 
bsg_goose_queue void bsg_goose_queue ( s#request_queue * ) 
bsg_request_fn void bsg_request_fn ( s#request_queue * ) 
bsg_setup_queue int bsg_setup_queue ( s#device * , s#request_queue * , char * , t#bsg_job_fn * , int ) 

/* block/elevator.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##bsg_job
s##throtl_data
elv_rq_merge_ok extern t#bool elv_rq_merge_ok ( s#request * , s#bio * ) 
elevator_init extern int elevator_init ( s#request_queue * , char * ) 
elevator_exit extern void elevator_exit ( s#elevator_queue * ) 
elv_rb_add extern s#request * elv_rb_add ( s#rb_root * , s#request * ) 
elv_rb_del extern void elv_rb_del ( s#rb_root * , s#request * ) 
elv_rb_find extern s#request * elv_rb_find ( s#rb_root * , t#sector_t ) 
elv_dispatch_sort extern void elv_dispatch_sort ( s#request_queue * , s#request * ) 
elv_dispatch_add_tail extern void elv_dispatch_add_tail ( s#request_queue * , s#request * ) 
__elv_add_request extern void __elv_add_request ( s#request_queue * , s#request * , int ) 
elv_add_request extern void elv_add_request ( s#request_queue * , s#request * , int ) 
elv_abort_queue extern void elv_abort_queue ( s#request_queue * ) 
elv_register_queue extern int elv_register_queue ( s#request_queue * ) 
elv_unregister_queue extern void elv_unregister_queue ( s#request_queue * ) 
elv_register extern void elv_register ( s#elevator_type * ) 
elv_unregister extern void elv_unregister ( s#elevator_type * ) 
elevator_change extern int elevator_change ( s#request_queue * , const char * ) 
elv_rb_former_request extern s#request * elv_rb_former_request ( s#request_queue * , s#request * ) 
elv_rb_latter_request extern s#request * elv_rb_latter_request ( s#request_queue * , s#request * ) 

/* block/genhd.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
disk_get_part extern s#hd_struct * disk_get_part ( s#gendisk * , int ) 
s#disk_part_iter struct disk_part_iter { s#gendisk * disk ; s#hd_struct * part ; int idx ; unsigned int flags ; } 
disk_part_iter_init extern void disk_part_iter_init ( s#disk_part_iter * , s#gendisk * , unsigned int ) 
disk_part_iter_next extern s#hd_struct * disk_part_iter_next ( s#disk_part_iter * ) 
disk_part_iter_exit extern void disk_part_iter_exit ( s#disk_part_iter * ) 
disk_map_sector_rcu extern s#hd_struct * disk_map_sector_rcu ( s#gendisk * , t#sector_t ) 
register_blkdev extern int register_blkdev ( unsigned int , const char * ) 
unregister_blkdev extern void unregister_blkdev ( unsigned int , const char * ) 
blk_register_region extern void blk_register_region ( t#dev_t , unsigned long , s#module * , s#kobject * ( * ) ( t#dev_t , int * , void * ) , int ( * ) ( t#dev_t , void * ) , void * ) 
blk_unregister_region extern void blk_unregister_region ( t#dev_t , unsigned long ) 
add_disk extern void add_disk ( s#gendisk * ) 
del_gendisk extern void del_gendisk ( s#gendisk * ) 
get_gendisk extern s#gendisk * get_gendisk ( t#dev_t , int * ) 
bdget_disk extern s#block_device * bdget_disk ( s#gendisk * , int ) 
blk_lookup_devt extern t#dev_t blk_lookup_devt ( const char * , int ) 
alloc_disk extern s#gendisk * alloc_disk ( int ) 
alloc_disk_node extern s#gendisk * alloc_disk_node ( int , int ) 
get_disk extern s#kobject * get_disk ( s#gendisk * ) 
put_disk extern void put_disk ( s#gendisk * ) 
set_device_ro extern void set_device_ro ( s#block_device * , int ) 
set_disk_ro extern void set_disk_ro ( s#gendisk * , int ) 
bdev_read_only extern int bdev_read_only ( s#block_device * ) 
invalidate_partition extern int invalidate_partition ( s#gendisk * , int ) 
disk_check_events extern void disk_check_events ( s#gendisk * ) 

/* block/ioctl.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s#hd_geometry struct hd_geometry { unsigned char heads ; unsigned char sectors ; unsigned short cylinders ; unsigned long start ; } 
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
__blkdev_driver_ioctl extern int __blkdev_driver_ioctl ( s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
blkdev_ioctl extern int blkdev_ioctl ( s#block_device * , t#fmode_t , unsigned , unsigned long ) 

/* block/scsi_ioctl.o */
scsi_command_size_tbl extern const unsigned char scsi_command_size_tbl [ 8 ] 
blk_verify_command extern int blk_verify_command ( unsigned char * , t#fmode_t ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s#scsi_ioctl_command struct scsi_ioctl_command { unsigned int inlen ; unsigned int outlen ; unsigned char data [ 0 ] ; } 
sg_scsi_ioctl extern int sg_scsi_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , s#scsi_ioctl_command * ) 
scsi_cmd_ioctl extern int scsi_cmd_ioctl ( s#request_queue * , s#gendisk * , t#fmode_t , unsigned int , void * ) 
scsi_verify_blk_ioctl extern int scsi_verify_blk_ioctl ( s#block_device * , unsigned int ) 
scsi_cmd_blk_ioctl extern int scsi_cmd_blk_ioctl ( s#block_device * , t#fmode_t , unsigned int , void * ) 

/* crypto/ablkcipher.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#scatter_walk struct scatter_walk { s#scatterlist * sg ; unsigned int offset ; } 
s#ablkcipher_walk struct ablkcipher_walk { struct { s#page * page ; unsigned int offset ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; s#list_head buffers ; t#u8 * iv_buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
__ablkcipher_walk_complete void __ablkcipher_walk_complete ( s#ablkcipher_walk * ) 
t#crypto_completion_t typedef void ( * crypto_completion_t ) ( s#crypto_async_request * , int ) 
s#crypto_ablkcipher struct crypto_ablkcipher { s#crypto_tfm base ; } 
s#skcipher_givcrypt_request struct skcipher_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#ablkcipher_request creq ; } 
s#ablkcipher_tfm struct ablkcipher_tfm { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; s#crypto_ablkcipher * base ; unsigned int ivsize ; unsigned int reqsize ; } 
s#crypto_aead struct crypto_aead { s#crypto_tfm base ; } 
s#aead_request struct aead_request { s#crypto_async_request base ; unsigned int assoclen ; unsigned int cryptlen ; t#u8 * iv ; s#scatterlist * assoc ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s##aead_givcrypt_request
s#aead_tfm struct aead_tfm { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; s#crypto_aead * base ; unsigned int ivsize ; unsigned int authsize ; unsigned int reqsize ; } 
s#crypto_blkcipher struct crypto_blkcipher { s#crypto_tfm base ; } 
s#blkcipher_desc struct blkcipher_desc { s#crypto_blkcipher * tfm ; void * info ; t#u32 flags ; } 
s#blkcipher_tfm struct blkcipher_tfm { void * iv ; int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; } 
s#cipher_tfm struct cipher_tfm { int ( * cit_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cit_encrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cit_decrypt_one ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#crypto_hash struct crypto_hash { s#crypto_tfm base ; } 
s#hash_desc struct hash_desc { s#crypto_hash * tfm ; t#u32 flags ; } 
s#hash_tfm struct hash_tfm { int ( * init ) ( s#hash_desc * ) ; int ( * update ) ( s#hash_desc * , s#scatterlist * , unsigned int ) ; int ( * final ) ( s#hash_desc * , t#u8 * ) ; int ( * digest ) ( s#hash_desc * , s#scatterlist * , unsigned int , t#u8 * ) ; int ( * setkey ) ( s#crypto_hash * , const t#u8 * , unsigned int ) ; unsigned int digestsize ; } 
s#compress_tfm struct compress_tfm { int ( * cot_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * cot_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#crypto_rng struct crypto_rng { s#crypto_tfm base ; } 
s#rng_tfm struct rng_tfm { int ( * rng_gen_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; } 
s#crypto_type struct crypto_type { unsigned int ( * ctxsize ) ( s#crypto_alg * , t#u32 , t#u32 ) ; unsigned int ( * extsize ) ( s#crypto_alg * ) ; int ( * init ) ( s#crypto_tfm * , t#u32 , t#u32 ) ; int ( * init_tfm ) ( s#crypto_tfm * ) ; void ( * show ) ( s#seq_file * , s#crypto_alg * ) ; s#crypto_alg * ( * lookup ) ( const char * , t#u32 , t#u32 ) ; unsigned int type ; unsigned int maskclear ; unsigned int maskset ; unsigned int tfmsize ; } 
s#ablkcipher_alg struct ablkcipher_alg { int ( * setkey ) ( s#crypto_ablkcipher * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#ablkcipher_request * ) ; int ( * decrypt ) ( s#ablkcipher_request * ) ; int ( * givencrypt ) ( s#skcipher_givcrypt_request * ) ; int ( * givdecrypt ) ( s#skcipher_givcrypt_request * ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#aead_alg struct aead_alg { int ( * setkey ) ( s#crypto_aead * , const t#u8 * , unsigned int ) ; int ( * setauthsize ) ( s#crypto_aead * , unsigned int ) ; int ( * encrypt ) ( s#aead_request * ) ; int ( * decrypt ) ( s#aead_request * ) ; int ( * givencrypt ) ( s#aead_givcrypt_request * ) ; int ( * givdecrypt ) ( s#aead_givcrypt_request * ) ; const char * geniv ; unsigned int ivsize ; unsigned int maxauthsize ; } 
s#blkcipher_alg struct blkcipher_alg { int ( * setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; int ( * encrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; int ( * decrypt ) ( s#blkcipher_desc * , s#scatterlist * , s#scatterlist * , unsigned int ) ; const char * geniv ; unsigned int min_keysize ; unsigned int max_keysize ; unsigned int ivsize ; } 
s#cipher_alg struct cipher_alg { unsigned int cia_min_keysize ; unsigned int cia_max_keysize ; int ( * cia_setkey ) ( s#crypto_tfm * , const t#u8 * , unsigned int ) ; void ( * cia_encrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; void ( * cia_decrypt ) ( s#crypto_tfm * , t#u8 * , const t#u8 * ) ; } 
s#compress_alg struct compress_alg { int ( * coa_compress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; int ( * coa_decompress ) ( s#crypto_tfm * , const t#u8 * , unsigned int , t#u8 * , unsigned int * ) ; } 
s#rng_alg struct rng_alg { int ( * rng_make_random ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; int ( * rng_reset ) ( s#crypto_rng * , t#u8 * , unsigned int ) ; unsigned int seedsize ; } 
s#crypto_alg struct crypto_alg { s#list_head cra_list ; s#list_head cra_users ; t#u32 cra_flags ; unsigned int cra_blocksize ; unsigned int cra_ctxsize ; unsigned int cra_alignmask ; int cra_priority ; t#atomic_t cra_refcnt ; char cra_name [ 64 ] ; char cra_driver_name [ 64 ] ; const s#crypto_type * cra_type ; union { s#ablkcipher_alg ablkcipher ; s#aead_alg aead ; s#blkcipher_alg blkcipher ; s#cipher_alg cipher ; s#compress_alg compress ; s#rng_alg rng ; } cra_u ; int ( * cra_init ) ( s#crypto_tfm * ) ; void ( * cra_exit ) ( s#crypto_tfm * ) ; void ( * cra_destroy ) ( s#crypto_alg * ) ; s#module * cra_module ; } 
s#crypto_tfm struct crypto_tfm { t#u32 crt_flags ; union { s#ablkcipher_tfm ablkcipher ; s#aead_tfm aead ; s#blkcipher_tfm blkcipher ; s#cipher_tfm cipher ; s#hash_tfm hash ; s#compress_tfm compress ; s#rng_tfm rng ; } crt_u ; void ( * exit ) ( s#crypto_tfm * ) ; s#crypto_alg * __crt_alg ; void * __crt_ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_async_request struct crypto_async_request { s#list_head list ; t#crypto_completion_t complete ; void * data ; s#crypto_tfm * tfm ; t#u32 flags ; } 
s#ablkcipher_request struct ablkcipher_request { s#crypto_async_request base ; unsigned int nbytes ; void * info ; s#scatterlist * src ; s#scatterlist * dst ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
ablkcipher_walk_done int ablkcipher_walk_done ( s#ablkcipher_request * , s#ablkcipher_walk * , int ) 
ablkcipher_walk_phys int ablkcipher_walk_phys ( s#ablkcipher_request * , s#ablkcipher_walk * ) 
crypto_ablkcipher_type extern const s#crypto_type crypto_ablkcipher_type 
crypto_givcipher_type extern const s#crypto_type crypto_givcipher_type 
s#rtattr struct rtattr { unsigned short rta_len ; unsigned short rta_type ; } 
s#crypto_template struct crypto_template { s#list_head list ; s#hlist_head instances ; s#module * module ; s#crypto_instance * ( * alloc ) ( s#rtattr * * ) ; void ( * free ) ( s#crypto_instance * ) ; int ( * create ) ( s#crypto_template * , s#rtattr * * ) ; char name [ 64 ] ; } 
s#crypto_instance struct crypto_instance { s#crypto_alg alg ; s#crypto_template * tmpl ; s#hlist_node list ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
s#crypto_spawn struct crypto_spawn { s#list_head list ; s#crypto_alg * alg ; s#crypto_instance * inst ; const s#crypto_type * frontend ; t#u32 mask ; } 
s#crypto_skcipher_spawn struct crypto_skcipher_spawn { s#crypto_spawn base ; } 
crypto_grab_skcipher int crypto_grab_skcipher ( s#crypto_skcipher_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_ablkcipher s#crypto_ablkcipher * crypto_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 

/* crypto/aead.o */
s##skcipher_givcrypt_request
s#aead_givcrypt_request struct aead_givcrypt_request { t#u64 seq ; t#u8 * giv ; s#aead_request areq ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
crypto_aead_setauthsize int crypto_aead_setauthsize ( s#crypto_aead * , unsigned int ) 
crypto_aead_type extern const s#crypto_type crypto_aead_type 
crypto_nivaead_type extern const s#crypto_type crypto_nivaead_type 
aead_geniv_alloc s#crypto_instance * aead_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
aead_geniv_free void aead_geniv_free ( s#crypto_instance * ) 
aead_geniv_init int aead_geniv_init ( s#crypto_tfm * ) 
aead_geniv_exit void aead_geniv_exit ( s#crypto_tfm * ) 
s#crypto_aead_spawn struct crypto_aead_spawn { s#crypto_spawn base ; } 
crypto_grab_aead int crypto_grab_aead ( s#crypto_aead_spawn * , const char * , t#u32 , t#u32 ) 
crypto_alloc_aead s#crypto_aead * crypto_alloc_aead ( const char * , t#u32 , t#u32 ) 

/* crypto/aes_generic.o */
crypto_ft_tab extern const t#u32 crypto_ft_tab [ 4 ] [ 256 ] 
crypto_fl_tab extern const t#u32 crypto_fl_tab [ 4 ] [ 256 ] 
crypto_it_tab extern const t#u32 crypto_it_tab [ 4 ] [ 256 ] 
crypto_il_tab extern const t#u32 crypto_il_tab [ 4 ] [ 256 ] 
s#crypto_aes_ctx struct crypto_aes_ctx { t#u32 key_enc [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_dec [ ( ( 15 * 16 ) / sizeof ( u32 ) ) ] ; t#u32 key_length ; } 
crypto_aes_expand_key int crypto_aes_expand_key ( s#crypto_aes_ctx * , const t#u8 * , unsigned int ) 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
crypto_aes_set_key int crypto_aes_set_key ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/af_alg.o */
t#sa_family_t typedef unsigned short sa_family_t 
s#sockaddr struct sockaddr { t#sa_family_t sa_family ; char sa_data [ 14 ] ; } 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s#msghdr struct msghdr { void * msg_name ; int msg_namelen ; s#iovec * msg_iov ; t#__kernel_size_t msg_iovlen ; void * msg_control ; t#__kernel_size_t msg_controllen ; unsigned msg_flags ; } 
s#pm_qos_request_list struct pm_qos_request_list { s#plist_node list ; int pm_qos_class ; } 
s#net_device_stats struct net_device_stats { unsigned long rx_packets ; unsigned long tx_packets ; unsigned long rx_bytes ; unsigned long tx_bytes ; unsigned long rx_errors ; unsigned long tx_errors ; unsigned long rx_dropped ; unsigned long tx_dropped ; unsigned long multicast ; unsigned long collisions ; unsigned long rx_length_errors ; unsigned long rx_over_errors ; unsigned long rx_crc_errors ; unsigned long rx_frame_errors ; unsigned long rx_fifo_errors ; unsigned long rx_missed_errors ; unsigned long tx_aborted_errors ; unsigned long tx_carrier_errors ; unsigned long tx_fifo_errors ; unsigned long tx_heartbeat_errors ; unsigned long tx_window_errors ; unsigned long rx_compressed ; unsigned long tx_compressed ; } 
s##iw_handler_def
s##iw_public_data
e#netdev_tx enum netdev_tx { __NETDEV_TX_MIN = ( - ( ( int ) ( ~ 0U >> 1 ) ) - 1 ) , NETDEV_TX_OK = 0x00 , NETDEV_TX_BUSY = 0x10 , NETDEV_TX_LOCKED = 0x20 , } 
t#netdev_tx_t typedef e#netdev_tx netdev_tx_t 
s#ifmap struct ifmap { unsigned long mem_start ; unsigned long mem_end ; unsigned short base_addr ; unsigned char irq ; unsigned char dma ; unsigned char port ; } 
t#raw_hdlc_proto typedef struct { unsigned short encoding ; unsigned short parity ; } raw_hdlc_proto 
t#cisco_proto typedef struct { unsigned int interval ; unsigned int timeout ; } cisco_proto 
t#fr_proto typedef struct { unsigned int t391 ; unsigned int t392 ; unsigned int n391 ; unsigned int n392 ; unsigned int n393 ; unsigned short lmi ; unsigned short dce ; } fr_proto 
t#fr_proto_pvc typedef struct { unsigned int dlci ; } fr_proto_pvc 
t#fr_proto_pvc_info typedef struct { unsigned int dlci ; char master [ 16 ] ; } fr_proto_pvc_info 
t#sync_serial_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; } sync_serial_settings 
t#te1_settings typedef struct { unsigned int clock_rate ; unsigned int clock_type ; unsigned short loopback ; unsigned int slot_map ; } te1_settings 
s#if_settings struct if_settings { unsigned int type ; unsigned int size ; union { t#raw_hdlc_proto * raw_hdlc ; t#cisco_proto * cisco ; t#fr_proto * fr ; t#fr_proto_pvc * fr_pvc ; t#fr_proto_pvc_info * fr_pvc_info ; t#sync_serial_settings * sync ; t#te1_settings * te1 ; } ifs_ifsu ; } 
s#ifreq struct ifreq { union { char ifrn_name [ 16 ] ; } ifr_ifrn ; union { s#sockaddr ifru_addr ; s#sockaddr ifru_dstaddr ; s#sockaddr ifru_broadaddr ; s#sockaddr ifru_netmask ; s#sockaddr ifru_hwaddr ; short ifru_flags ; int ifru_ivalue ; int ifru_mtu ; s#ifmap ifru_map ; char ifru_slave [ 16 ] ; char ifru_newname [ 16 ] ; void * ifru_data ; s#if_settings ifru_settings ; } ifr_ifru ; } 
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s#pneigh_entry struct pneigh_entry { s#pneigh_entry * next ; s#net * net ; s#net_device * dev ; t#u8 flags ; t#u8 key [ 0 ] ; } 
s#neigh_statistics struct neigh_statistics { unsigned long allocs ; unsigned long destroys ; unsigned long hash_grows ; unsigned long res_failed ; unsigned long lookups ; unsigned long hits ; unsigned long rcv_probes_mcast ; unsigned long rcv_probes_ucast ; unsigned long periodic_gc_runs ; unsigned long forced_gc_runs ; unsigned long unres_discards ; } 
s#neigh_hash_table struct neigh_hash_table { s#neighbour * * hash_buckets ; unsigned int hash_mask ; t#__u32 hash_rnd ; s#rcu_head rcu ; } 
s#neigh_table struct neigh_table { s#neigh_table * next ; int family ; int entry_size ; int key_len ; t#__u32 ( * hash ) ( const void * , const s#net_device * , t#__u32 ) ; int ( * constructor ) ( s#neighbour * ) ; int ( * pconstructor ) ( s#pneigh_entry * ) ; void ( * pdestructor ) ( s#pneigh_entry * ) ; void ( * proxy_redo ) ( s#sk_buff * ) ; char * id ; s#neigh_parms parms ; int gc_interval ; int gc_thresh1 ; int gc_thresh2 ; int gc_thresh3 ; unsigned long last_flush ; s#delayed_work gc_work ; s#timer_list proxy_timer ; s#sk_buff_head proxy_queue ; t#atomic_t entries ; t#rwlock_t lock ; unsigned long last_rand ; s#kmem_cache * kmem_cachep ; s#neigh_statistics * stats ; s#neigh_hash_table * nht ; s#pneigh_entry * * phash_buckets ; } 
s#hh_cache struct hh_cache { s#hh_cache * hh_next ; t#atomic_t hh_refcnt ; t#__be16 hh_type __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#u16 hh_len ; int ( * hh_output ) ( s#sk_buff * ) ; t#seqlock_t hh_lock ; unsigned long hh_data [ ( ( ( 128 ) + ( 16 - 1 ) ) & ~ ( 16 - 1 ) ) / sizeof ( long ) ] ; } 
s#neigh_ops struct neigh_ops { int family ; void ( * solicit ) ( s#neighbour * , s#sk_buff * ) ; void ( * error_report ) ( s#neighbour * , s#sk_buff * ) ; int ( * output ) ( s#sk_buff * ) ; int ( * connected_output ) ( s#sk_buff * ) ; int ( * hh_output ) ( s#sk_buff * ) ; int ( * queue_xmit ) ( s#sk_buff * ) ; } 
s#neighbour struct neighbour { s#neighbour * next ; s#neigh_table * tbl ; s#neigh_parms * parms ; unsigned long confirmed ; unsigned long updated ; t#rwlock_t lock ; t#atomic_t refcnt ; s#sk_buff_head arp_queue ; s#timer_list timer ; unsigned long used ; t#atomic_t probes ; t#__u8 flags ; t#__u8 nud_state ; t#__u8 type ; t#__u8 dead ; t#seqlock_t ha_lock ; unsigned char ha [ ( ( ( ( 32 ) ) + ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) & ~ ( ( typeof ( ( 32 ) ) ) ( ( sizeof ( unsigned long ) ) ) - 1 ) ) ] ; s#hh_cache * hh ; int ( * output ) ( s#sk_buff * ) ; const s#neigh_ops * ops ; s#rcu_head rcu ; s#net_device * dev ; t#u8 primary_key [ 0 ] ; } 
s##xfrm_state
s##rtable
s##dn_route
s#dst_entry struct dst_entry { s#rcu_head rcu_head ; s#dst_entry * child ; s#net_device * dev ; s#dst_ops * ops ; unsigned long _metrics ; unsigned long expires ; s#dst_entry * path ; s#neighbour * _neighbour ; s#hh_cache * hh ; s#xfrm_state * xfrm ; int ( * input ) ( s#sk_buff * ) ; int ( * output ) ( s#sk_buff * ) ; short error ; short obsolete ; unsigned short header_len ; unsigned short trailer_len ; t#__u32 tclassid ; long __pad_to_align_refcnt [ 1 ] ; t#atomic_t __refcnt ; int __use ; unsigned long lastuse ; int flags ; union { s#dst_entry * next ; s#rtable * rt_next ; s#rt6_info * rt6_next ; s#dn_route * dn_next ; } ; } 
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#neigh_parms struct neigh_parms { s#net * net ; s#net_device * dev ; s#neigh_parms * next ; int ( * neigh_setup ) ( s#neighbour * ) ; void ( * neigh_cleanup ) ( s#neighbour * ) ; s#neigh_table * tbl ; void * sysctl_table ; int dead ; t#atomic_t refcnt ; s#rcu_head rcu_head ; int base_reachable_time ; int retrans_time ; int gc_staletime ; int reachable_time ; int delay_probe_time ; int queue_len ; int ucast_probes ; int app_probes ; int mcast_probes ; int anycast_delay ; int proxy_delay ; int proxy_qlen ; int locktime ; } 
s#rtnl_link_stats64 struct rtnl_link_stats64 { t#__u64 rx_packets ; t#__u64 tx_packets ; t#__u64 rx_bytes ; t#__u64 tx_bytes ; t#__u64 rx_errors ; t#__u64 tx_errors ; t#__u64 rx_dropped ; t#__u64 tx_dropped ; t#__u64 multicast ; t#__u64 collisions ; t#__u64 rx_length_errors ; t#__u64 rx_over_errors ; t#__u64 rx_crc_errors ; t#__u64 rx_frame_errors ; t#__u64 rx_fifo_errors ; t#__u64 rx_missed_errors ; t#__u64 tx_aborted_errors ; t#__u64 tx_carrier_errors ; t#__u64 tx_fifo_errors ; t#__u64 tx_heartbeat_errors ; t#__u64 tx_window_errors ; t#__u64 rx_compressed ; t#__u64 tx_compressed ; } 
s##vlan_group
s##netpoll_info
s#ifla_vf_info struct ifla_vf_info { t#__u32 vf ; t#__u8 mac [ 32 ] ; t#__u32 vlan ; t#__u32 qos ; t#__u32 tx_rate ; t#__u32 spoofchk ; t#__u32 linkstate ; } 
s#nlattr struct nlattr { t#__u16 nla_len ; t#__u16 nla_type ; } 
s#netdev_fcoe_hbainfo struct netdev_fcoe_hbainfo { char manufacturer [ 64 ] ; char serial_number [ 64 ] ; char hardware_version [ 64 ] ; char driver_version [ 64 ] ; char optionrom_version [ 64 ] ; char firmware_version [ 64 ] ; char model [ 256 ] ; char model_description [ 256 ] ; } 
s#ndmsg struct ndmsg { t#__u8 ndm_family ; t#__u8 ndm_pad1 ; t#__u16 ndm_pad2 ; t#__s32 ndm_ifindex ; t#__u16 ndm_state ; t#__u8 ndm_flags ; t#__u8 ndm_type ; } 
s#nlmsghdr struct nlmsghdr { t#__u32 nlmsg_len ; t#__u16 nlmsg_type ; t#__u16 nlmsg_flags ; t#__u32 nlmsg_seq ; t#__u32 nlmsg_pid ; } 
s#netlink_callback struct netlink_callback { s#sk_buff * skb ; const s#nlmsghdr * nlh ; int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; t#u16 family ; t#u16 min_dump_alloc ; long args [ 6 ] ; } 
s#netdev_phys_port_id struct netdev_phys_port_id { unsigned char id [ 32 ] ; unsigned char id_len ; } 
s#net_device_ops struct net_device_ops { int ( * ndo_init ) ( s#net_device * ) ; void ( * ndo_uninit ) ( s#net_device * ) ; int ( * ndo_open ) ( s#net_device * ) ; int ( * ndo_stop ) ( s#net_device * ) ; t#netdev_tx_t ( * ndo_start_xmit ) ( s#sk_buff * , s#net_device * ) ; t#u16 ( * ndo_select_queue ) ( s#net_device * , s#sk_buff * ) ; void ( * ndo_change_rx_flags ) ( s#net_device * , int ) ; void ( * ndo_set_rx_mode ) ( s#net_device * ) ; void ( * ndo_set_multicast_list ) ( s#net_device * ) ; int ( * ndo_set_mac_address ) ( s#net_device * , void * ) ; int ( * ndo_validate_addr ) ( s#net_device * ) ; int ( * ndo_do_ioctl ) ( s#net_device * , s#ifreq * , int ) ; int ( * ndo_set_config ) ( s#net_device * , s#ifmap * ) ; int ( * ndo_change_mtu ) ( s#net_device * , int ) ; int ( * ndo_neigh_setup ) ( s#net_device * , s#neigh_parms * ) ; void ( * ndo_tx_timeout ) ( s#net_device * ) ; s#rtnl_link_stats64 * ( * ndo_get_stats64 ) ( s#net_device * , s#rtnl_link_stats64 * ) ; s#net_device_stats * ( * ndo_get_stats ) ( s#net_device * ) ; void ( * ndo_vlan_rx_register ) ( s#net_device * , s#vlan_group * ) ; void ( * ndo_vlan_rx_add_vid ) ( s#net_device * , unsigned short ) ; void ( * ndo_vlan_rx_kill_vid ) ( s#net_device * , unsigned short ) ; void ( * ndo_poll_controller ) ( s#net_device * ) ; int ( * ndo_netpoll_setup ) ( s#net_device * , s#netpoll_info * ) ; void ( * ndo_netpoll_cleanup ) ( s#net_device * ) ; int ( * ndo_set_vf_mac ) ( s#net_device * , int , t#u8 * ) ; int ( * ndo_set_vf_vlan ) ( s#net_device * , int , t#u16 , t#u8 ) ; int ( * ndo_set_vf_tx_rate ) ( s#net_device * , int , int ) ; int ( * ndo_set_vf_spoofchk ) ( s#net_device * , int , t#bool ) ; int ( * ndo_get_vf_config ) ( s#net_device * , int , s#ifla_vf_info * ) ; int ( * ndo_set_vf_link_state ) ( s#net_device * , int , int ) ; int ( * ndo_set_vf_port ) ( s#net_device * , int , s#nlattr * [ ] ) ; int ( * ndo_get_vf_port ) ( s#net_device * , int , s#sk_buff * ) ; int ( * ndo_setup_tc ) ( s#net_device * , t#u8 ) ; int ( * ndo_fcoe_enable ) ( s#net_device * ) ; int ( * ndo_fcoe_disable ) ( s#net_device * ) ; int ( * ndo_fcoe_ddp_setup ) ( s#net_device * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ndo_fcoe_ddp_done ) ( s#net_device * , t#u16 ) ; int ( * ndo_fcoe_ddp_target ) ( s#net_device * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ndo_fcoe_get_hbainfo ) ( s#net_device * , s#netdev_fcoe_hbainfo * ) ; int ( * ndo_fcoe_get_wwn ) ( s#net_device * , t#u64 * , int ) ; int ( * ndo_rx_flow_steer ) ( s#net_device * , const s#sk_buff * , t#u16 , t#u32 ) ; int ( * ndo_add_slave ) ( s#net_device * , s#net_device * ) ; int ( * ndo_del_slave ) ( s#net_device * , s#net_device * ) ; t#u32 ( * ndo_fix_features ) ( s#net_device * , t#u32 ) ; int ( * ndo_set_features ) ( s#net_device * , t#u32 ) ; int ( * ndo_fdb_add ) ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) ; int ( * ndo_fdb_del ) ( s#ndmsg * , s#net_device * , const unsigned char * ) ; int ( * ndo_fdb_dump ) ( s#sk_buff * , s#netlink_callback * , s#net_device * , int ) ; int ( * ndo_bridge_setlink ) ( s#net_device * , s#nlmsghdr * ) ; int ( * ndo_bridge_getlink ) ( s#sk_buff * , t#u32 , t#u32 , s#net_device * ) ; int ( * ndo_get_phys_port_id ) ( s#net_device * , s#netdev_phys_port_id * ) ; } 
s#ethtool_cmd struct ethtool_cmd { t#__u32 cmd ; t#__u32 supported ; t#__u32 advertising ; t#__u16 speed ; t#__u8 duplex ; t#__u8 port ; t#__u8 phy_address ; t#__u8 transceiver ; t#__u8 autoneg ; t#__u8 mdio_support ; t#__u32 maxtxpkt ; t#__u32 maxrxpkt ; t#__u16 speed_hi ; t#__u8 eth_tp_mdix ; t#__u8 eth_tp_mdix_ctrl ; t#__u32 lp_advertising ; t#__u32 reserved [ 2 ] ; } 
s#ethtool_drvinfo struct ethtool_drvinfo { t#__u32 cmd ; char driver [ 32 ] ; char version [ 32 ] ; char fw_version [ 32 ] ; char bus_info [ 32 ] ; char reserved1 [ 32 ] ; char reserved2 [ 12 ] ; t#__u32 n_priv_flags ; t#__u32 n_stats ; t#__u32 testinfo_len ; t#__u32 eedump_len ; t#__u32 regdump_len ; } 
s#ethtool_regs struct ethtool_regs { t#__u32 cmd ; t#__u32 version ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_wolinfo struct ethtool_wolinfo { t#__u32 cmd ; t#__u32 supported ; t#__u32 wolopts ; t#__u8 sopass [ 6 ] ; } 
s#ethtool_eeprom struct ethtool_eeprom { t#__u32 cmd ; t#__u32 magic ; t#__u32 offset ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_coalesce struct ethtool_coalesce { t#__u32 cmd ; t#__u32 rx_coalesce_usecs ; t#__u32 rx_max_coalesced_frames ; t#__u32 rx_coalesce_usecs_irq ; t#__u32 rx_max_coalesced_frames_irq ; t#__u32 tx_coalesce_usecs ; t#__u32 tx_max_coalesced_frames ; t#__u32 tx_coalesce_usecs_irq ; t#__u32 tx_max_coalesced_frames_irq ; t#__u32 stats_block_coalesce_usecs ; t#__u32 use_adaptive_rx_coalesce ; t#__u32 use_adaptive_tx_coalesce ; t#__u32 pkt_rate_low ; t#__u32 rx_coalesce_usecs_low ; t#__u32 rx_max_coalesced_frames_low ; t#__u32 tx_coalesce_usecs_low ; t#__u32 tx_max_coalesced_frames_low ; t#__u32 pkt_rate_high ; t#__u32 rx_coalesce_usecs_high ; t#__u32 rx_max_coalesced_frames_high ; t#__u32 tx_coalesce_usecs_high ; t#__u32 tx_max_coalesced_frames_high ; t#__u32 rate_sample_interval ; } 
s#ethtool_ringparam struct ethtool_ringparam { t#__u32 cmd ; t#__u32 rx_max_pending ; t#__u32 rx_mini_max_pending ; t#__u32 rx_jumbo_max_pending ; t#__u32 tx_max_pending ; t#__u32 rx_pending ; t#__u32 rx_mini_pending ; t#__u32 rx_jumbo_pending ; t#__u32 tx_pending ; } 
s#ethtool_pauseparam struct ethtool_pauseparam { t#__u32 cmd ; t#__u32 autoneg ; t#__u32 rx_pause ; t#__u32 tx_pause ; } 
s#ethtool_test struct ethtool_test { t#__u32 cmd ; t#__u32 flags ; t#__u32 reserved ; t#__u32 len ; t#__u64 data [ 0 ] ; } 
e#ethtool_phys_id_state enum ethtool_phys_id_state { ETHTOOL_ID_INACTIVE , ETHTOOL_ID_ACTIVE , ETHTOOL_ID_ON , ETHTOOL_ID_OFF } 
s#ethtool_stats struct ethtool_stats { t#__u32 cmd ; t#__u32 n_stats ; t#__u64 data [ 0 ] ; } 
s#ethtool_tcpip4_spec struct ethtool_tcpip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be16 psrc ; t#__be16 pdst ; t#__u8 tos ; } 
s#ethtool_ah_espip4_spec struct ethtool_ah_espip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 spi ; t#__u8 tos ; } 
s#ethtool_usrip4_spec struct ethtool_usrip4_spec { t#__be32 ip4src ; t#__be32 ip4dst ; t#__be32 l4_4_bytes ; t#__u8 tos ; t#__u8 ip_ver ; t#__u8 proto ; } 
s#ethhdr struct ethhdr { unsigned char h_dest [ 6 ] ; unsigned char h_source [ 6 ] ; t#__be16 h_proto ; } 
u#ethtool_flow_union union ethtool_flow_union { s#ethtool_tcpip4_spec tcp_ip4_spec ; s#ethtool_tcpip4_spec udp_ip4_spec ; s#ethtool_tcpip4_spec sctp_ip4_spec ; s#ethtool_ah_espip4_spec ah_ip4_spec ; s#ethtool_ah_espip4_spec esp_ip4_spec ; s#ethtool_usrip4_spec usr_ip4_spec ; s#ethhdr ether_spec ; t#__u8 hdata [ 60 ] ; } 
s#ethtool_flow_ext struct ethtool_flow_ext { t#__be16 vlan_etype ; t#__be16 vlan_tci ; t#__be32 data [ 2 ] ; } 
s#ethtool_rx_flow_spec struct ethtool_rx_flow_spec { t#__u32 flow_type ; u#ethtool_flow_union h_u ; s#ethtool_flow_ext h_ext ; u#ethtool_flow_union m_u ; s#ethtool_flow_ext m_ext ; t#__u64 ring_cookie ; t#__u32 location ; } 
s#ethtool_rxnfc struct ethtool_rxnfc { t#__u32 cmd ; t#__u32 flow_type ; t#__u64 data ; s#ethtool_rx_flow_spec fs ; t#__u32 rule_cnt ; t#__u32 rule_locs [ 0 ] ; } 
s#ethtool_flash struct ethtool_flash { t#__u32 cmd ; t#__u32 region ; char data [ 128 ] ; } 
s#ethtool_rx_ntuple_flow_spec struct ethtool_rx_ntuple_flow_spec { t#__u32 flow_type ; union { s#ethtool_tcpip4_spec tcp_ip4_spec ; s#ethtool_tcpip4_spec udp_ip4_spec ; s#ethtool_tcpip4_spec sctp_ip4_spec ; s#ethtool_ah_espip4_spec ah_ip4_spec ; s#ethtool_ah_espip4_spec esp_ip4_spec ; s#ethtool_usrip4_spec usr_ip4_spec ; s#ethhdr ether_spec ; t#__u8 hdata [ 72 ] ; } h_u , m_u ; t#__u16 vlan_tag ; t#__u16 vlan_tag_mask ; t#__u64 data ; t#__u64 data_mask ; t#__s32 action ; } 
s#ethtool_rx_ntuple struct ethtool_rx_ntuple { t#__u32 cmd ; s#ethtool_rx_ntuple_flow_spec fs ; } 
s#ethtool_channels struct ethtool_channels { t#__u32 cmd ; t#__u32 max_rx ; t#__u32 max_tx ; t#__u32 max_other ; t#__u32 max_combined ; t#__u32 rx_count ; t#__u32 tx_count ; t#__u32 other_count ; t#__u32 combined_count ; } 
s#ethtool_dump struct ethtool_dump { t#__u32 cmd ; t#__u32 version ; t#__u32 flag ; t#__u32 len ; t#__u8 data [ 0 ] ; } 
s#ethtool_ts_info struct ethtool_ts_info { t#__u32 cmd ; t#__u32 so_timestamping ; t#__s32 phc_index ; t#__u32 tx_types ; t#__u32 tx_reserved [ 3 ] ; t#__u32 rx_filters ; t#__u32 rx_reserved [ 3 ] ; } 
s#ethtool_ops struct ethtool_ops { int ( * get_settings ) ( s#net_device * , s#ethtool_cmd * ) ; int ( * set_settings ) ( s#net_device * , s#ethtool_cmd * ) ; void ( * get_drvinfo ) ( s#net_device * , s#ethtool_drvinfo * ) ; int ( * get_regs_len ) ( s#net_device * ) ; void ( * get_regs ) ( s#net_device * , s#ethtool_regs * , void * ) ; void ( * get_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; int ( * set_wol ) ( s#net_device * , s#ethtool_wolinfo * ) ; t#u32 ( * get_msglevel ) ( s#net_device * ) ; void ( * set_msglevel ) ( s#net_device * , t#u32 ) ; int ( * nway_reset ) ( s#net_device * ) ; t#u32 ( * get_link ) ( s#net_device * ) ; int ( * get_eeprom_len ) ( s#net_device * ) ; int ( * get_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * set_eeprom ) ( s#net_device * , s#ethtool_eeprom * , t#u8 * ) ; int ( * get_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; int ( * set_coalesce ) ( s#net_device * , s#ethtool_coalesce * ) ; void ( * get_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; int ( * set_ringparam ) ( s#net_device * , s#ethtool_ringparam * ) ; void ( * get_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; int ( * set_pauseparam ) ( s#net_device * , s#ethtool_pauseparam * ) ; t#u32 ( * get_rx_csum ) ( s#net_device * ) ; int ( * set_rx_csum ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_tx_csum ) ( s#net_device * ) ; int ( * set_tx_csum ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_sg ) ( s#net_device * ) ; int ( * set_sg ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_tso ) ( s#net_device * ) ; int ( * set_tso ) ( s#net_device * , t#u32 ) ; void ( * self_test ) ( s#net_device * , s#ethtool_test * , t#u64 * ) ; void ( * get_strings ) ( s#net_device * , t#u32 , t#u8 * ) ; int ( * set_phys_id ) ( s#net_device * , e#ethtool_phys_id_state ) ; void ( * get_ethtool_stats ) ( s#net_device * , s#ethtool_stats * , t#u64 * ) ; int ( * begin ) ( s#net_device * ) ; void ( * complete ) ( s#net_device * ) ; t#u32 ( * get_ufo ) ( s#net_device * ) ; int ( * set_ufo ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_flags ) ( s#net_device * ) ; int ( * set_flags ) ( s#net_device * , t#u32 ) ; t#u32 ( * get_priv_flags ) ( s#net_device * ) ; int ( * set_priv_flags ) ( s#net_device * , t#u32 ) ; int ( * get_sset_count ) ( s#net_device * , int ) ; int ( * get_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * , void * ) ; int ( * set_rxnfc ) ( s#net_device * , s#ethtool_rxnfc * ) ; int ( * flash_device ) ( s#net_device * , s#ethtool_flash * ) ; int ( * reset ) ( s#net_device * , t#u32 * ) ; int ( * set_rx_ntuple ) ( s#net_device * , s#ethtool_rx_ntuple * ) ; int ( * get_rx_ntuple ) ( s#net_device * , t#u32 , void * ) ; t#u32 ( * get_rxfh_indir_size ) ( s#net_device * ) ; int ( * get_rxfh_indir ) ( s#net_device * , t#u32 * ) ; int ( * set_rxfh_indir ) ( s#net_device * , const t#u32 * ) ; void ( * get_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * set_channels ) ( s#net_device * , s#ethtool_channels * ) ; int ( * get_dump_flag ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_dump_data ) ( s#net_device * , s#ethtool_dump * , void * ) ; int ( * set_dump ) ( s#net_device * , s#ethtool_dump * ) ; int ( * get_ts_info ) ( s#net_device * , s#ethtool_ts_info * ) ; } 
s#header_ops struct header_ops { int ( * create ) ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) ; int ( * parse ) ( const s#sk_buff * , unsigned char * ) ; int ( * rebuild ) ( s#sk_buff * ) ; int ( * cache ) ( const s#neighbour * , s#hh_cache * ) ; void ( * cache_update ) ( s#hh_cache * , const s#net_device * , const unsigned char * ) ; } 
s#netdev_hw_addr_list struct netdev_hw_addr_list { s#list_head list ; int count ; } 
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s#rps_map struct rps_map { unsigned int len ; s#rcu_head rcu ; t#u16 cpus [ 0 ] ; } 
s#rps_dev_flow struct rps_dev_flow { t#u16 cpu ; t#u16 filter ; unsigned int last_qtail ; } 
s#rps_dev_flow_table struct rps_dev_flow_table { unsigned int mask ; s#rcu_head rcu ; s#work_struct free_work ; s#rps_dev_flow flows [ 0 ] ; } 
s#netdev_rx_queue struct netdev_rx_queue { s#rps_map * rps_map ; s#rps_dev_flow_table * rps_flow_table ; s#kobject kobj ; s#net_device * dev ; } 
s##cpu_rmap
e#rx_handler_result enum rx_handler_result { RX_HANDLER_CONSUMED , RX_HANDLER_ANOTHER , RX_HANDLER_EXACT , RX_HANDLER_PASS , } 
t#rx_handler_result_t typedef e#rx_handler_result rx_handler_result_t 
t#rx_handler_func_t typedef t#rx_handler_result_t rx_handler_func_t ( s#sk_buff * * ) 
s##Qdisc
s#netdev_queue struct netdev_queue { s#net_device * dev ; s#Qdisc * qdisc ; unsigned long state ; s#Qdisc * qdisc_sleeping ; s#kobject kobj ; int numa_node ; t#spinlock_t _xmit_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int xmit_lock_owner ; unsigned long trans_start ; } 
s#xps_map struct xps_map { unsigned int len ; unsigned int alloc_len ; s#rcu_head rcu ; t#u16 queues [ 0 ] ; } 
s#xps_dev_maps struct xps_dev_maps { s#rcu_head rcu ; s#xps_map * cpu_map [ 0 ] ; } 
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#nla_policy struct nla_policy { t#u16 type ; t#u16 len ; } 
s#rtnl_link_ops struct rtnl_link_ops { s#list_head list ; const char * kind ; t#size_t priv_size ; void ( * setup ) ( s#net_device * ) ; int maxtype ; const s#nla_policy * policy ; int ( * validate ) ( s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * newlink ) ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; int ( * changelink ) ( s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] ) ; void ( * dellink ) ( s#net_device * , s#list_head * ) ; t#size_t ( * get_size ) ( const s#net_device * ) ; int ( * fill_info ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_xstats_size ) ( const s#net_device * ) ; int ( * fill_xstats ) ( s#sk_buff * , const s#net_device * ) ; int ( * get_tx_queues ) ( s#net * , s#nlattr * [ ] , unsigned int * , unsigned int * ) ; } 
s#netdev_tc_txq struct netdev_tc_txq { t#u16 count ; t#u16 offset ; } 
s#ethtool_rx_ntuple_list struct ethtool_rx_ntuple_list { s#list_head list ; unsigned int count ; } 
s##phy_device
s#net_device struct net_device { char name [ 16 ] ; s#pm_qos_request_list pm_qos_req ; s#hlist_node name_hlist ; char * ifalias ; unsigned long mem_end ; unsigned long mem_start ; unsigned long base_addr ; unsigned int irq ; unsigned long state ; s#list_head dev_list ; s#list_head napi_list ; s#list_head unreg_list ; t#u32 features ; t#u32 hw_features ; t#u32 wanted_features ; t#u32 vlan_features ; t#u32 hw_enc_features ; int ifindex ; int iflink ; s#net_device_stats stats ; t#atomic_long_t rx_dropped ; const s#iw_handler_def * wireless_handlers ; s#iw_public_data * wireless_data ; const s#net_device_ops * netdev_ops ; const s#ethtool_ops * ethtool_ops ; const s#header_ops * header_ops ; unsigned int flags ; unsigned int priv_flags ; unsigned short gflags ; unsigned short padded ; unsigned char operstate ; unsigned char link_mode ; unsigned char if_port ; unsigned char dma ; unsigned int mtu ; unsigned short type ; unsigned short hard_header_len ; unsigned short needed_headroom ; unsigned short needed_tailroom ; unsigned char perm_addr [ 32 ] ; unsigned char addr_assign_type ; unsigned char addr_len ; unsigned short dev_id ; unsigned short dev_port ; t#spinlock_t addr_list_lock ; s#netdev_hw_addr_list uc ; s#netdev_hw_addr_list mc ; int uc_promisc ; unsigned int promiscuity ; unsigned int allmulti ; s#vlan_group * vlgrp ; void * atalk_ptr ; s#in_device * ip_ptr ; s#dn_dev * dn_ptr ; s#inet6_dev * ip6_ptr ; void * ec_ptr ; void * ax25_ptr ; s#wireless_dev * ieee80211_ptr ; unsigned long last_rx ; s#net_device * master ; unsigned char * dev_addr ; s#netdev_hw_addr_list dev_addrs ; unsigned char broadcast [ 32 ] ; s#kset * queues_kset ; s#netdev_rx_queue * _rx ; unsigned int num_rx_queues ; unsigned int real_num_rx_queues ; s#cpu_rmap * rx_cpu_rmap ; t#rx_handler_func_t * rx_handler ; void * rx_handler_data ; s#netdev_queue * ingress_queue ; s#netdev_queue * _tx __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned int num_tx_queues ; unsigned int real_num_tx_queues ; s#Qdisc * qdisc ; unsigned long tx_queue_len ; t#spinlock_t tx_global_lock ; s#xps_dev_maps * xps_maps ; unsigned long trans_start ; int watchdog_timeo ; s#timer_list watchdog_timer ; int * pcpu_refcnt ; s#list_head todo_list ; s#hlist_node index_hlist ; s#list_head link_watch_list ; enum { NETREG_UNINITIALIZED = 0 , NETREG_REGISTERED , NETREG_UNREGISTERING , NETREG_UNREGISTERED , NETREG_RELEASED , NETREG_DUMMY , } reg_state : 8 ; t#bool dismantle ; enum { RTNL_LINK_INITIALIZED , RTNL_LINK_INITIALIZING , } rtnl_link_state : 16 ; void ( * destructor ) ( s#net_device * ) ; s#netpoll_info * npinfo ; s#net * nd_net ; union { void * ml_priv ; s#pcpu_lstats * lstats ; s#pcpu_tstats * tstats ; s#pcpu_dstats * dstats ; } ; s#garp_port * garp_port ; s#device dev ; const s#attribute_group * sysfs_groups [ 4 ] ; const s#rtnl_link_ops * rtnl_link_ops ; unsigned int gso_max_size ; t#u16 gso_max_segs ; t#u8 num_tc ; s#netdev_tc_txq tc_to_txq [ 16 ] ; t#u8 prio_tc_map [ 15 + 1 ] ; unsigned int fcoe_ddp_xid ; s#ethtool_rx_ntuple_list ethtool_ntuple_list ; s#phy_device * phydev ; int group ; } 
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s#proto struct proto { void ( * close ) ( s#sock * , long ) ; int ( * connect ) ( s#sock * , s#sockaddr * , int ) ; int ( * disconnect ) ( s#sock * , int ) ; s#sock * ( * accept ) ( s#sock * , int , int * ) ; int ( * ioctl ) ( s#sock * , int , unsigned long ) ; int ( * init ) ( s#sock * ) ; void ( * destroy ) ( s#sock * ) ; void ( * shutdown ) ( s#sock * , int ) ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_ioctl ) ( s#sock * , unsigned int , unsigned long ) ; int ( * sendmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) ; int ( * sendpage ) ( s#sock * , s#page * , int , t#size_t , int ) ; int ( * bind ) ( s#sock * , s#sockaddr * , int ) ; int ( * backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * hash ) ( s#sock * ) ; void ( * unhash ) ( s#sock * ) ; void ( * rehash ) ( s#sock * ) ; int ( * get_port ) ( s#sock * , unsigned short ) ; void ( * clear_sk ) ( s#sock * , int ) ; unsigned int inuse_idx ; void ( * enter_memory_pressure ) ( s#sock * ) ; t#atomic_long_t * memory_allocated ; s#percpu_counter * sockets_allocated ; int * memory_pressure ; long * sysctl_mem ; int * sysctl_wmem ; int * sysctl_rmem ; int max_header ; t#bool no_autobind ; s#kmem_cache * slab ; unsigned int obj_size ; int slab_flags ; s#percpu_counter * orphan_count ; s#request_sock_ops * rsk_prot ; s#timewait_sock_ops * twsk_prot ; union { s#inet_hashinfo * hashinfo ; s#udp_table * udp_table ; s#raw_hashinfo * raw_hash ; } h ; s#module * owner ; char name [ 32 ] ; s#list_head node ; } 
s#sock_common struct sock_common { t#__be32 skc_daddr ; t#__be32 skc_rcv_saddr ; union { unsigned int skc_hash ; t#__u16 skc_u16hashes [ 2 ] ; } ; unsigned short skc_family ; volatile unsigned char skc_state ; unsigned char skc_reuse ; int skc_bound_dev_if ; union { s#hlist_node skc_bind_node ; s#hlist_nulls_node skc_portaddr_node ; } ; s#proto * skc_prot ; s#net * skc_net ; int skc_dontcopy_begin [ 0 ] ; union { s#hlist_node skc_node ; s#hlist_nulls_node skc_nulls_node ; } ; int skc_tx_queue_mapping ; t#atomic_t skc_refcnt ; int skc_dontcopy_end [ 0 ] ; } 
t#socket_lock_t typedef struct { t#spinlock_t slock ; int owned ; t#wait_queue_head_t wq ; } socket_lock_t 
s#sock_filter struct sock_filter { t#__u16 code ; t#__u8 jt ; t#__u8 jf ; t#__u32 k ; } 
s#sk_filter struct sk_filter { t#atomic_t refcnt ; unsigned int len ; unsigned int ( * bpf_func ) ( const s#sk_buff * , const s#sock_filter * ) ; s#rcu_head rcu ; s#sock_filter insns [ 0 ] ; } 
s#socket_wq struct socket_wq { t#wait_queue_head_t wait ; s#fasync_struct * fasync_list ; s#rcu_head rcu ; } 
s##xfrm_policy
t#socket_state typedef enum { SS_FREE = 0 , SS_UNCONNECTED , SS_CONNECTING , SS_CONNECTED , SS_DISCONNECTING } socket_state 
s#proto_ops struct proto_ops { int family ; s#module * owner ; int ( * release ) ( s#socket * ) ; int ( * bind ) ( s#socket * , s#sockaddr * , int ) ; int ( * connect ) ( s#socket * , s#sockaddr * , int , int ) ; int ( * socketpair ) ( s#socket * , s#socket * ) ; int ( * accept ) ( s#socket * , s#socket * , int ) ; int ( * getname ) ( s#socket * , s#sockaddr * , int * , int ) ; unsigned int ( * poll ) ( s#file * , s#socket * , s#poll_table_struct * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * compat_ioctl ) ( s#socket * , unsigned int , unsigned long ) ; int ( * listen ) ( s#socket * , int ) ; int ( * shutdown ) ( s#socket * , int ) ; int ( * setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#socket * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#socket * , int , int , char * , int * ) ; int ( * sendmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) ; int ( * recvmsg ) ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) ; int ( * mmap ) ( s#file * , s#socket * , s#vm_area_struct * ) ; t#ssize_t ( * sendpage ) ( s#socket * , s#page * , int , t#size_t , int ) ; t#ssize_t ( * splice_read ) ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; } 
s#socket struct socket { t#socket_state state ; ; short type ; ; unsigned long flags ; s#socket_wq * wq ; s#file * file ; s#sock * sk ; const s#proto_ops * ops ; } 
s#sock struct sock { s#sock_common __sk_common ; t#socket_lock_t sk_lock ; s#sk_buff_head sk_receive_queue ; struct { t#atomic_t rmem_alloc ; int len ; s#sk_buff * head ; s#sk_buff * tail ; } sk_backlog ; int sk_forward_alloc ; t#__u32 sk_rxhash ; t#atomic_t sk_drops ; int sk_rcvbuf ; s#sk_filter * sk_filter ; s#socket_wq * sk_wq ; s#sk_buff_head sk_async_wait_queue ; s#xfrm_policy * sk_policy [ 2 ] ; unsigned long sk_flags ; s#dst_entry * sk_dst_cache ; t#spinlock_t sk_dst_lock ; t#atomic_t sk_wmem_alloc ; t#atomic_t sk_omem_alloc ; int sk_sndbuf ; s#sk_buff_head sk_write_queue ; ; unsigned int sk_shutdown : 2 , sk_no_check : 2 , sk_userlocks : 4 , sk_protocol : 8 , sk_type : 16 ; ; int sk_wmem_queued ; t#gfp_t sk_allocation ; int sk_route_caps ; int sk_route_nocaps ; int sk_gso_type ; unsigned int sk_gso_max_size ; t#u16 sk_gso_max_segs ; int sk_rcvlowat ; unsigned long sk_lingertime ; s#sk_buff_head sk_error_queue ; s#proto * sk_prot_creator ; t#rwlock_t sk_callback_lock ; int sk_err , sk_err_soft ; unsigned short sk_ack_backlog ; unsigned short sk_max_ack_backlog ; t#__u32 sk_priority ; s#pid * sk_peer_pid ; const s#cred * sk_peer_cred ; long sk_rcvtimeo ; long sk_sndtimeo ; void * sk_protinfo ; s#timer_list sk_timer ; t#ktime_t sk_stamp ; s#socket * sk_socket ; void * sk_user_data ; s#page * sk_sndmsg_page ; s#sk_buff * sk_send_head ; t#__u32 sk_sndmsg_off ; int sk_write_pending ; void * sk_security ; t#__u32 sk_mark ; t#u32 sk_classid ; void ( * sk_state_change ) ( s#sock * ) ; void ( * sk_data_ready ) ( s#sock * , int ) ; void ( * sk_write_space ) ( s#sock * ) ; void ( * sk_error_report ) ( s#sock * ) ; int ( * sk_backlog_rcv ) ( s#sock * , s#sk_buff * ) ; void ( * sk_destruct ) ( s#sock * ) ; void * suse_kabi_padding ; } 
s#af_alg_type struct af_alg_type { void * ( * bind ) ( const char * , t#u32 , t#u32 ) ; void ( * release ) ( void * ) ; int ( * setkey ) ( void * , const t#u8 * , unsigned int ) ; int ( * accept ) ( void * , s#sock * ) ; s#proto_ops * ops ; s#module * owner ; char name [ 14 ] ; } 
af_alg_register_type int af_alg_register_type ( const s#af_alg_type * ) 
af_alg_unregister_type int af_alg_unregister_type ( const s#af_alg_type * ) 
af_alg_release int af_alg_release ( s#socket * ) 
af_alg_accept int af_alg_accept ( s#sock * , s#socket * ) 
s#af_alg_sgl struct af_alg_sgl { s#scatterlist sg [ 16 ] ; s#page * pages [ 16 ] ; } 
af_alg_make_sg int af_alg_make_sg ( s#af_alg_sgl * , void * , int , int ) 
af_alg_free_sg void af_alg_free_sg ( s#af_alg_sgl * ) 
s#af_alg_iv struct af_alg_iv { t#__u32 ivlen ; t#__u8 iv [ 0 ] ; } 
s#af_alg_control struct af_alg_control { s#af_alg_iv * iv ; int op ; } 
af_alg_cmsg_send int af_alg_cmsg_send ( s#msghdr * , s#af_alg_control * ) 
s#af_alg_completion struct af_alg_completion { s#completion completion ; int err ; } 
af_alg_wait_for_completion int af_alg_wait_for_completion ( int , s#af_alg_completion * ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
af_alg_complete void af_alg_complete ( s#crypto_async_request * , int ) 

/* crypto/ahash.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#crypto_hash_walk struct crypto_hash_walk { char * data ; unsigned int offset ; unsigned int alignmask ; s#page * pg ; unsigned int entrylen ; unsigned int total ; s#scatterlist * sg ; unsigned int flags ; } 
crypto_hash_walk_done int crypto_hash_walk_done ( s#crypto_hash_walk * , int ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s#ahash_request struct ahash_request { s#crypto_async_request base ; unsigned int nbytes ; s#scatterlist * src ; t#u8 * result ; void * priv ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
crypto_hash_walk_first int crypto_hash_walk_first ( s#ahash_request * , s#crypto_hash_walk * ) 
s#crypto_ahash struct crypto_ahash { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; unsigned int reqsize ; s#crypto_tfm base ; } 
crypto_ahash_setkey int crypto_ahash_setkey ( s#crypto_ahash * , const t#u8 * , unsigned int ) 
crypto_ahash_final int crypto_ahash_final ( s#ahash_request * ) 
crypto_ahash_finup int crypto_ahash_finup ( s#ahash_request * ) 
crypto_ahash_digest int crypto_ahash_digest ( s#ahash_request * ) 
crypto_ahash_type extern const s#crypto_type crypto_ahash_type 
crypto_alloc_ahash s#crypto_ahash * crypto_alloc_ahash ( const char * , t#u32 , t#u32 ) 
s#hash_alg_common struct hash_alg_common { unsigned int digestsize ; unsigned int statesize ; s#crypto_alg base ; } 
s#ahash_alg struct ahash_alg { int ( * init ) ( s#ahash_request * ) ; int ( * update ) ( s#ahash_request * ) ; int ( * final ) ( s#ahash_request * ) ; int ( * finup ) ( s#ahash_request * ) ; int ( * digest ) ( s#ahash_request * ) ; int ( * export ) ( s#ahash_request * , void * ) ; int ( * import ) ( s#ahash_request * , const void * ) ; int ( * setkey ) ( s#crypto_ahash * , const t#u8 * , unsigned int ) ; s#hash_alg_common halg ; } 
crypto_register_ahash int crypto_register_ahash ( s#ahash_alg * ) 
crypto_unregister_ahash int crypto_unregister_ahash ( s#ahash_alg * ) 
s##rtattr
s#ahash_instance struct ahash_instance { s#ahash_alg alg ; } 
ahash_register_instance int ahash_register_instance ( s#crypto_template * , s#ahash_instance * ) 
ahash_free_instance void ahash_free_instance ( s#crypto_instance * ) 
s#crypto_ahash_spawn struct crypto_ahash_spawn { s#crypto_spawn base ; } 
crypto_init_ahash_spawn int crypto_init_ahash_spawn ( s#crypto_ahash_spawn * , s#hash_alg_common * , s#crypto_instance * ) 
ahash_attr_alg s#hash_alg_common * ahash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/algapi.o */
crypto_larval_error void crypto_larval_error ( const char * , t#u32 , t#u32 ) 
crypto_alg_tested void crypto_alg_tested ( const char * , int ) 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
crypto_register_alg int crypto_register_alg ( s#crypto_alg * ) 
crypto_unregister_alg int crypto_unregister_alg ( s#crypto_alg * ) 
crypto_register_template int crypto_register_template ( s#crypto_template * ) 
crypto_unregister_template void crypto_unregister_template ( s#crypto_template * ) 
crypto_lookup_template s#crypto_template * crypto_lookup_template ( const char * ) 
crypto_register_instance int crypto_register_instance ( s#crypto_template * , s#crypto_instance * ) 
crypto_init_spawn int crypto_init_spawn ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , t#u32 ) 
crypto_init_spawn2 int crypto_init_spawn2 ( s#crypto_spawn * , s#crypto_alg * , s#crypto_instance * , const s#crypto_type * ) 
crypto_drop_spawn void crypto_drop_spawn ( s#crypto_spawn * ) 
crypto_spawn_tfm s#crypto_tfm * crypto_spawn_tfm ( s#crypto_spawn * , t#u32 , t#u32 ) 
crypto_spawn_tfm2 void * crypto_spawn_tfm2 ( s#crypto_spawn * ) 
crypto_register_notifier int crypto_register_notifier ( s#notifier_block * ) 
crypto_unregister_notifier int crypto_unregister_notifier ( s#notifier_block * ) 
s#crypto_attr_type struct crypto_attr_type { t#u32 type ; t#u32 mask ; } 
crypto_get_attr_type s#crypto_attr_type * crypto_get_attr_type ( s#rtattr * * ) 
crypto_check_attr_type int crypto_check_attr_type ( s#rtattr * * , t#u32 ) 
crypto_attr_alg_name const char * crypto_attr_alg_name ( s#rtattr * ) 
crypto_attr_alg2 s#crypto_alg * crypto_attr_alg2 ( s#rtattr * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_attr_u32 int crypto_attr_u32 ( s#rtattr * , t#u32 * ) 
crypto_alloc_instance2 void * crypto_alloc_instance2 ( const char * , s#crypto_alg * , unsigned int ) 
crypto_alloc_instance s#crypto_instance * crypto_alloc_instance ( const char * , s#crypto_alg * ) 
s#crypto_queue struct crypto_queue { s#list_head list ; s#list_head * backlog ; unsigned int qlen ; unsigned int max_qlen ; } 
crypto_init_queue void crypto_init_queue ( s#crypto_queue * , unsigned int ) 
crypto_enqueue_request int crypto_enqueue_request ( s#crypto_queue * , s#crypto_async_request * ) 
__crypto_dequeue_request void * __crypto_dequeue_request ( s#crypto_queue * , unsigned int ) 
crypto_dequeue_request s#crypto_async_request * crypto_dequeue_request ( s#crypto_queue * ) 
crypto_tfm_in_queue int crypto_tfm_in_queue ( s#crypto_queue * , s#crypto_tfm * ) 
crypto_inc void crypto_inc ( t#u8 * , unsigned int ) 
crypto_xor void crypto_xor ( t#u8 * , const t#u8 * , unsigned int ) 

/* crypto/api.o */
crypto_alg_list extern s#list_head crypto_alg_list 
crypto_alg_sem extern s#rw_semaphore crypto_alg_sem 
s#blocking_notifier_head struct blocking_notifier_head { s#rw_semaphore rwsem ; s#notifier_block * head ; } 
crypto_chain extern s#blocking_notifier_head crypto_chain 
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##seq_file
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
crypto_mod_get s#crypto_alg * crypto_mod_get ( s#crypto_alg * ) 
crypto_mod_put void crypto_mod_put ( s#crypto_alg * ) 
s#crypto_larval struct crypto_larval { s#crypto_alg alg ; s#crypto_alg * adult ; s#completion completion ; t#u32 mask ; } 
crypto_larval_alloc s#crypto_larval * crypto_larval_alloc ( const char * , t#u32 , t#u32 ) 
crypto_larval_kill void crypto_larval_kill ( s#crypto_alg * ) 
crypto_alg_lookup s#crypto_alg * crypto_alg_lookup ( const char * , t#u32 , t#u32 ) 
crypto_larval_lookup s#crypto_alg * crypto_larval_lookup ( const char * , t#u32 , t#u32 ) 
crypto_probing_notify int crypto_probing_notify ( unsigned long , void * ) 
crypto_alg_mod_lookup s#crypto_alg * crypto_alg_mod_lookup ( const char * , t#u32 , t#u32 ) 
crypto_shoot_alg void crypto_shoot_alg ( s#crypto_alg * ) 
__crypto_alloc_tfm s#crypto_tfm * __crypto_alloc_tfm ( s#crypto_alg * , t#u32 , t#u32 ) 
crypto_alloc_base s#crypto_tfm * crypto_alloc_base ( const char * , t#u32 , t#u32 ) 
crypto_create_tfm void * crypto_create_tfm ( s#crypto_alg * , const s#crypto_type * ) 
crypto_find_alg s#crypto_alg * crypto_find_alg ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_alloc_tfm void * crypto_alloc_tfm ( const char * , const s#crypto_type * , t#u32 , t#u32 ) 
crypto_destroy_tfm void crypto_destroy_tfm ( void * , s#crypto_tfm * ) 
crypto_has_alg int crypto_has_alg ( const char * , t#u32 , t#u32 ) 

/* crypto/asymmetric_keys/asymmetric_type.o */
s#key_preparsed_payload struct key_preparsed_payload { char * description ; void * type_data [ 2 ] ; void * payload ; const void * data ; t#size_t datalen ; t#size_t quotalen ; } 
s##key_user
s##keyring_list
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#key_construction struct key_construction { s#key * key ; s#key * authkey ; } 
t#request_key_actor_t typedef int ( * request_key_actor_t ) ( s#key_construction * , const char * , void * ) 
s#key_type struct key_type { const char * name ; t#size_t def_datalen ; int ( * vet_description ) ( const char * ) ; int ( * preparse ) ( s#key_preparsed_payload * ) ; void ( * free_preparse ) ( s#key_preparsed_payload * ) ; int ( * instantiate ) ( s#key * , const void * , t#size_t ) ; int ( * instantiate_prep ) ( s#key * , s#key_preparsed_payload * ) ; int ( * update ) ( s#key * , const void * , t#size_t ) ; int ( * match ) ( const s#key * , const void * ) ; void ( * revoke ) ( s#key * ) ; void ( * destroy ) ( s#key * ) ; void ( * describe ) ( const s#key * , s#seq_file * ) ; long ( * read ) ( const s#key * , char * , t#size_t ) ; t#request_key_actor_t request_key ; s#list_head link ; } 
key_type_asymmetric extern s#key_type key_type_asymmetric 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#asymmetric_key_parser struct asymmetric_key_parser { s#list_head link ; s#module * owner ; const char * name ; int ( * parse ) ( s#key_preparsed_payload * ) ; } 
register_asymmetric_key_parser extern int register_asymmetric_key_parser ( s#asymmetric_key_parser * ) 
unregister_asymmetric_key_parser extern void unregister_asymmetric_key_parser ( s#asymmetric_key_parser * ) 

/* crypto/asymmetric_keys/public_key.o */
E#PKEY_ALGO__LAST 2 
pkey_algo extern const char * const pkey_algo [ E#PKEY_ALGO__LAST ] 
E#PKEY_HASH__LAST 8 
pkey_hash_algo extern const char * const pkey_hash_algo [ E#PKEY_HASH__LAST ] 
E#PKEY_ID_TYPE__LAST 2 
pkey_id_type extern const char * const pkey_id_type [ E#PKEY_ID_TYPE__LAST ] 
public_key_destroy extern void public_key_destroy ( void * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
e#pkey_hash_algo enum pkey_hash_algo { PKEY_HASH_MD4 , PKEY_HASH_MD5 , PKEY_HASH_SHA1 , PKEY_HASH_RIPE_MD_160 , PKEY_HASH_SHA256 , PKEY_HASH_SHA384 , PKEY_HASH_SHA512 , PKEY_HASH_SHA224 , PKEY_HASH__LAST } 
t#mpi_limb_t typedef unsigned long int mpi_limb_t 
s#gcry_mpi struct gcry_mpi { int alloced ; int nlimbs ; int nbits ; int sign ; unsigned flags ; t#mpi_limb_t * d ; } 
t#MPI typedef s#gcry_mpi * MPI 
s#public_key_signature struct public_key_signature { t#u8 * digest ; t#u8 digest_size ; t#u8 nr_mpi ; e#pkey_hash_algo pkey_hash_algo : 8 ; union { t#MPI mpi [ 2 ] ; struct { t#MPI s ; } rsa ; struct { t#MPI r ; t#MPI s ; } dsa ; } ; } 
s#asymmetric_key_subtype struct asymmetric_key_subtype { s#module * owner ; const char * name ; unsigned short name_len ; void ( * describe ) ( const s#key * , s#seq_file * ) ; void ( * destroy ) ( void * ) ; int ( * verify_signature ) ( const s#key * , const s#public_key_signature * ) ; } 
public_key_subtype extern s#asymmetric_key_subtype public_key_subtype 

/* crypto/asymmetric_keys/rsa.o */
e#pkey_id_type enum pkey_id_type { PKEY_ID_PGP , PKEY_ID_X509 , PKEY_ID_TYPE__LAST } 
s#public_key struct public_key { const s#public_key_algorithm * algo ; t#u8 capabilities ; e#pkey_id_type id_type : 8 ; union { t#MPI mpi [ 5 ] ; struct { t#MPI p ; t#MPI q ; t#MPI g ; t#MPI y ; t#MPI x ; } dsa ; struct { t#MPI n ; t#MPI e ; t#MPI d ; t#MPI p ; t#MPI q ; } rsa ; } ; } 
s#public_key_algorithm struct public_key_algorithm { const char * name ; t#u8 n_pub_mpi ; t#u8 n_sec_mpi ; t#u8 n_sig_mpi ; int ( * verify_signature ) ( const s#public_key * , const s#public_key_signature * ) ; } 
RSA_public_key_algorithm extern const s#public_key_algorithm RSA_public_key_algorithm 

/* crypto/asymmetric_keys/signature.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##key_user
s##keyring_list
verify_signature extern int verify_signature ( const s#key * , const s#public_key_signature * ) 

/* crypto/async_tx/async_memcpy.o */
e#dma_ctrl_flags enum dma_ctrl_flags { DMA_PREP_INTERRUPT = ( 1 << 0 ) , DMA_CTRL_ACK = ( 1 << 1 ) , DMA_COMPL_SKIP_SRC_UNMAP = ( 1 << 2 ) , DMA_COMPL_SKIP_DEST_UNMAP = ( 1 << 3 ) , DMA_COMPL_SRC_UNMAP_SINGLE = ( 1 << 4 ) , DMA_COMPL_DEST_UNMAP_SINGLE = ( 1 << 5 ) , DMA_PREP_PQ_DISABLE_P = ( 1 << 6 ) , DMA_PREP_PQ_DISABLE_Q = ( 1 << 7 ) , DMA_PREP_CONTINUE = ( 1 << 8 ) , DMA_PREP_FENCE = ( 1 << 9 ) , } 
E#DMA_CYCLIC 11 
t#dma_cap_mask_t typedef struct { unsigned long bits [ ( ( ( ( E#DMA_CYCLIC + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } dma_cap_mask_t 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
E#SUM_CHECK_P 0 
E#SUM_CHECK_Q 1 
e#sum_check_flags enum sum_check_flags { SUM_CHECK_P_RESULT = ( 1 << E#SUM_CHECK_P ) , SUM_CHECK_Q_RESULT = ( 1 << E#SUM_CHECK_Q ) , } 
e#dma_ctrl_cmd enum dma_ctrl_cmd { DMA_TERMINATE_ALL , DMA_PAUSE , DMA_RESUME , DMA_SLAVE_CONFIG , FSLDMA_EXTERNAL_START , } 
e#dma_status enum dma_status { DMA_SUCCESS , DMA_IN_PROGRESS , DMA_PAUSED , DMA_ERROR , } 
s#dma_tx_state struct dma_tx_state { t#dma_cookie_t last ; t#dma_cookie_t used ; t#u32 residue ; } 
s#dma_device struct dma_device { unsigned int chancnt ; unsigned int privatecnt ; s#list_head channels ; s#list_head global_node ; t#dma_cap_mask_t cap_mask ; unsigned short max_xor ; unsigned short max_pq ; t#u8 copy_align ; t#u8 xor_align ; t#u8 pq_align ; t#u8 fill_align ; int dev_id ; s#device * dev ; int ( * device_alloc_chan_resources ) ( s#dma_chan * ) ; void ( * device_free_chan_resources ) ( s#dma_chan * ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memcpy ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor ) ( s#dma_chan * , t#dma_addr_t , t#dma_addr_t * , unsigned int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_xor_val ) ( s#dma_chan * , t#dma_addr_t * , unsigned int , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_pq_val ) ( s#dma_chan * , t#dma_addr_t * , t#dma_addr_t * , unsigned int , const unsigned char * , t#size_t , e#sum_check_flags * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_memset ) ( s#dma_chan * , t#dma_addr_t , int , t#size_t , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_interrupt ) ( s#dma_chan * , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , s#scatterlist * , unsigned int , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_slave_sg ) ( s#dma_chan * , s#scatterlist * , unsigned int , e#dma_data_direction , unsigned long ) ; s#dma_async_tx_descriptor * ( * device_prep_dma_cyclic ) ( s#dma_chan * , t#dma_addr_t , t#size_t , t#size_t , e#dma_data_direction ) ; int ( * device_control ) ( s#dma_chan * , e#dma_ctrl_cmd , unsigned long ) ; e#dma_status ( * device_tx_status ) ( s#dma_chan * , t#dma_cookie_t , s#dma_tx_state * ) ; void ( * device_issue_pending ) ( s#dma_chan * ) ; } 
s#dma_chan_dev struct dma_chan_dev { s#dma_chan * chan ; s#device device ; int dev_id ; t#atomic_t * idr_ref ; } 
s#dma_chan_percpu struct dma_chan_percpu { unsigned long memcpy_count ; unsigned long bytes_transferred ; } 
s#dma_chan struct dma_chan { s#dma_device * device ; t#dma_cookie_t cookie ; int chan_id ; s#dma_chan_dev * dev ; s#list_head device_node ; s#dma_chan_percpu * local ; int client_count ; int table_count ; void * private ; } 
t#dma_async_tx_callback typedef void ( * dma_async_tx_callback ) ( void * ) 
s#dma_async_tx_descriptor struct dma_async_tx_descriptor { t#dma_cookie_t cookie ; e#dma_ctrl_flags flags ; t#dma_addr_t phys ; s#dma_chan * chan ; t#dma_cookie_t ( * tx_submit ) ( s#dma_async_tx_descriptor * ) ; t#dma_async_tx_callback callback ; void * callback_param ; } 
e#async_tx_flags enum async_tx_flags { ASYNC_TX_XOR_ZERO_DST = ( 1 << 0 ) , ASYNC_TX_XOR_DROP_DST = ( 1 << 1 ) , ASYNC_TX_ACK = ( 1 << 2 ) , ASYNC_TX_FENCE = ( 1 << 3 ) , } 
s#async_submit_ctl struct async_submit_ctl { e#async_tx_flags flags ; s#dma_async_tx_descriptor * depend_tx ; t#dma_async_tx_callback cb_fn ; void * cb_param ; void * scribble ; } 
async_memcpy s#dma_async_tx_descriptor * async_memcpy ( s#page * , s#page * , unsigned int , unsigned int , t#size_t , s#async_submit_ctl * ) 

/* crypto/async_tx/async_pq.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
async_gen_syndrome s#dma_async_tx_descriptor * async_gen_syndrome ( s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_syndrome_val s#dma_async_tx_descriptor * async_syndrome_val ( s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#page * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_raid6_recov.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
async_raid6_2data_recov s#dma_async_tx_descriptor * async_raid6_2data_recov ( int , t#size_t , int , int , s#page * * , s#async_submit_ctl * ) 
async_raid6_datap_recov s#dma_async_tx_descriptor * async_raid6_datap_recov ( int , t#size_t , int , s#page * * , s#async_submit_ctl * ) 

/* crypto/async_tx/async_tx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
e#dma_transaction_type enum dma_transaction_type { DMA_MEMCPY , DMA_XOR , DMA_PQ , DMA_XOR_VAL , DMA_PQ_VAL , DMA_MEMSET , DMA_INTERRUPT , DMA_SG , DMA_PRIVATE , DMA_ASYNC_TX , DMA_SLAVE , DMA_CYCLIC , } 
__async_tx_find_channel s#dma_chan * __async_tx_find_channel ( s#async_submit_ctl * , e#dma_transaction_type ) 
async_tx_submit void async_tx_submit ( s#dma_chan * , s#dma_async_tx_descriptor * , s#async_submit_ctl * ) 
async_trigger_callback s#dma_async_tx_descriptor * async_trigger_callback ( s#async_submit_ctl * ) 
async_tx_quiesce void async_tx_quiesce ( s#dma_async_tx_descriptor * * ) 

/* crypto/async_tx/async_xor.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
async_xor s#dma_async_tx_descriptor * async_xor ( s#page * , s#page * * , unsigned int , int , t#size_t , s#async_submit_ctl * ) 
async_xor_val s#dma_async_tx_descriptor * async_xor_val ( s#page * , s#page * * , unsigned int , int , t#size_t , e#sum_check_flags * , s#async_submit_ctl * ) 

/* crypto/blkcipher.o */
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#blkcipher_walk struct blkcipher_walk { union { struct { s#page * page ; unsigned long offset ; } phys ; struct { t#u8 * page ; t#u8 * addr ; } virt ; } src , dst ; s#scatter_walk in ; unsigned int nbytes ; s#scatter_walk out ; unsigned int total ; void * page ; t#u8 * buffer ; t#u8 * iv ; int flags ; unsigned int blocksize ; } 
blkcipher_walk_done int blkcipher_walk_done ( s#blkcipher_desc * , s#blkcipher_walk * , int ) 
blkcipher_walk_virt int blkcipher_walk_virt ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_phys int blkcipher_walk_phys ( s#blkcipher_desc * , s#blkcipher_walk * ) 
blkcipher_walk_virt_block int blkcipher_walk_virt_block ( s#blkcipher_desc * , s#blkcipher_walk * , unsigned int ) 
crypto_blkcipher_type extern const s#crypto_type crypto_blkcipher_type 
s##rtattr
skcipher_geniv_alloc s#crypto_instance * skcipher_geniv_alloc ( s#crypto_template * , s#rtattr * * , t#u32 , t#u32 ) 
skcipher_geniv_free void skcipher_geniv_free ( s#crypto_instance * ) 
skcipher_geniv_init int skcipher_geniv_init ( s#crypto_tfm * ) 
skcipher_geniv_exit void skcipher_geniv_exit ( s#crypto_tfm * ) 

/* crypto/cryptd.o */
s##skcipher_givcrypt_request
s##seq_file
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#cryptd_ablkcipher struct cryptd_ablkcipher { s#crypto_ablkcipher base ; } 
cryptd_alloc_ablkcipher s#cryptd_ablkcipher * cryptd_alloc_ablkcipher ( const char * , t#u32 , t#u32 ) 
cryptd_ablkcipher_child s#crypto_blkcipher * cryptd_ablkcipher_child ( s#cryptd_ablkcipher * ) 
cryptd_free_ablkcipher void cryptd_free_ablkcipher ( s#cryptd_ablkcipher * ) 
s#cryptd_ahash struct cryptd_ahash { s#crypto_ahash base ; } 
cryptd_alloc_ahash s#cryptd_ahash * cryptd_alloc_ahash ( const char * , t#u32 , t#u32 ) 
s#crypto_shash struct crypto_shash { unsigned int descsize ; s#crypto_tfm base ; } 
cryptd_ahash_child s#crypto_shash * cryptd_ahash_child ( s#cryptd_ahash * ) 
s#shash_desc struct shash_desc { s#crypto_shash * tfm ; t#u32 flags ; void * __ctx [ ] __attribute__ ( ( __aligned__ ( __alignof__ ( unsigned long long ) ) ) ) ; } 
cryptd_shash_desc s#shash_desc * cryptd_shash_desc ( s#ahash_request * ) 
cryptd_free_ahash void cryptd_free_ahash ( s#cryptd_ahash * ) 
s#cryptd_aead struct cryptd_aead { s#crypto_aead base ; } 
cryptd_alloc_aead s#cryptd_aead * cryptd_alloc_aead ( const char * , t#u32 , t#u32 ) 
cryptd_aead_child s#crypto_aead * cryptd_aead_child ( s#cryptd_aead * ) 
cryptd_free_aead void cryptd_free_aead ( s#cryptd_aead * ) 

/* crypto/crypto_wq.o */
s##workqueue_struct
kcrypto_wq extern s#workqueue_struct * kcrypto_wq 

/* crypto/des_generic.o */
des_ekey extern unsigned long des_ekey ( t#u32 * , const t#u8 * ) 

/* crypto/fips.o */
fips_enabled extern int fips_enabled 

/* crypto/gf128mul.o */
t#__be64 typedef t#__u64 __be64 
t#be128 typedef struct { t#__be64 a , b ; } be128 
gf128mul_x_ble void gf128mul_x_ble ( t#be128 * , const t#be128 * ) 
gf128mul_lle void gf128mul_lle ( t#be128 * , const t#be128 * ) 
gf128mul_bbe void gf128mul_bbe ( t#be128 * , const t#be128 * ) 
s#gf128mul_4k struct gf128mul_4k { t#be128 t [ 256 ] ; } 
s#gf128mul_64k struct gf128mul_64k { s#gf128mul_4k * t [ 16 ] ; } 
gf128mul_init_64k_lle s#gf128mul_64k * gf128mul_init_64k_lle ( const t#be128 * ) 
gf128mul_init_64k_bbe s#gf128mul_64k * gf128mul_init_64k_bbe ( const t#be128 * ) 
gf128mul_free_64k void gf128mul_free_64k ( s#gf128mul_64k * ) 
gf128mul_64k_lle void gf128mul_64k_lle ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_64k_bbe void gf128mul_64k_bbe ( t#be128 * , s#gf128mul_64k * ) 
gf128mul_init_4k_lle s#gf128mul_4k * gf128mul_init_4k_lle ( const t#be128 * ) 
gf128mul_init_4k_bbe s#gf128mul_4k * gf128mul_init_4k_bbe ( const t#be128 * ) 
gf128mul_4k_lle void gf128mul_4k_lle ( t#be128 * , s#gf128mul_4k * ) 
gf128mul_4k_bbe void gf128mul_4k_bbe ( t#be128 * , s#gf128mul_4k * ) 

/* crypto/pcompress.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#crypto_pcomp struct crypto_pcomp { s#crypto_tfm base ; } 
crypto_alloc_pcomp extern s#crypto_pcomp * crypto_alloc_pcomp ( const char * , t#u32 , t#u32 ) 
s#comp_request struct comp_request { const void * next_in ; void * next_out ; unsigned int avail_in ; unsigned int avail_out ; } 
s#pcomp_alg struct pcomp_alg { int ( * compress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * compress_init ) ( s#crypto_pcomp * ) ; int ( * compress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * compress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_setup ) ( s#crypto_pcomp * , void * , unsigned int ) ; int ( * decompress_init ) ( s#crypto_pcomp * ) ; int ( * decompress_update ) ( s#crypto_pcomp * , s#comp_request * ) ; int ( * decompress_final ) ( s#crypto_pcomp * , s#comp_request * ) ; s#crypto_alg base ; } 
crypto_register_pcomp extern int crypto_register_pcomp ( s#pcomp_alg * ) 
crypto_unregister_pcomp extern int crypto_unregister_pcomp ( s#pcomp_alg * ) 

/* crypto/rng.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
crypto_default_rng extern s#crypto_rng * crypto_default_rng 
crypto_rng_type extern const s#crypto_type crypto_rng_type 
crypto_get_default_rng int crypto_get_default_rng ( void ) 
crypto_put_default_rng void crypto_put_default_rng ( void ) 

/* crypto/scatterwalk.o */
scatterwalk_start void scatterwalk_start ( s#scatter_walk * , s#scatterlist * ) 
scatterwalk_map void * scatterwalk_map ( s#scatter_walk * , int ) 
scatterwalk_done void scatterwalk_done ( s#scatter_walk * , int , int ) 
scatterwalk_copychunks void scatterwalk_copychunks ( void * , s#scatter_walk * , t#size_t , int ) 
scatterwalk_map_and_copy void scatterwalk_map_and_copy ( void * , s#scatterlist * , unsigned int , unsigned int , int ) 

/* crypto/shash.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
shash_no_setkey int shash_no_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_setkey int crypto_shash_setkey ( s#crypto_shash * , const t#u8 * , unsigned int ) 
crypto_shash_update int crypto_shash_update ( s#shash_desc * , const t#u8 * , unsigned int ) 
crypto_shash_final int crypto_shash_final ( s#shash_desc * , t#u8 * ) 
crypto_shash_finup int crypto_shash_finup ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
crypto_shash_digest int crypto_shash_digest ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) 
shash_ahash_update int shash_ahash_update ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_finup int shash_ahash_finup ( s#ahash_request * , s#shash_desc * ) 
shash_ahash_digest int shash_ahash_digest ( s#ahash_request * , s#shash_desc * ) 
crypto_alloc_shash s#crypto_shash * crypto_alloc_shash ( const char * , t#u32 , t#u32 ) 
s#shash_alg struct shash_alg { int ( * init ) ( s#shash_desc * ) ; int ( * update ) ( s#shash_desc * , const t#u8 * , unsigned int ) ; int ( * final ) ( s#shash_desc * , t#u8 * ) ; int ( * finup ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * digest ) ( s#shash_desc * , const t#u8 * , unsigned int , t#u8 * ) ; int ( * export ) ( s#shash_desc * , void * ) ; int ( * import ) ( s#shash_desc * , const void * ) ; int ( * setkey ) ( s#crypto_shash * , const t#u8 * , unsigned int ) ; unsigned int descsize ; unsigned int digestsize __attribute__ ( ( aligned ( __alignof__ ( struct hash_alg_common ) ) ) ) ; unsigned int statesize ; s#crypto_alg base ; } 
crypto_register_shash int crypto_register_shash ( s#shash_alg * ) 
crypto_unregister_shash int crypto_unregister_shash ( s#shash_alg * ) 
s##rtattr
s#shash_instance struct shash_instance { s#shash_alg alg ; } 
shash_register_instance int shash_register_instance ( s#crypto_template * , s#shash_instance * ) 
shash_free_instance void shash_free_instance ( s#crypto_instance * ) 
s#crypto_shash_spawn struct crypto_shash_spawn { s#crypto_spawn base ; } 
crypto_init_shash_spawn int crypto_init_shash_spawn ( s#crypto_shash_spawn * , s#shash_alg * , s#crypto_instance * ) 
shash_attr_alg s#shash_alg * shash_attr_alg ( s#rtattr * , t#u32 , t#u32 ) 

/* crypto/testmgr.o */
alg_test int alg_test ( const char * , const char * , t#u32 , t#u32 ) 

/* crypto/twofish_common.o */
s##scatterlist
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
twofish_setkey int twofish_setkey ( s#crypto_tfm * , const t#u8 * , unsigned int ) 

/* crypto/xor.o */
xor_blocks extern void xor_blocks ( unsigned int , unsigned int , void * , void * * ) 

/* drivers/ata/libahci.o */
ahci_ignore_sss extern int ahci_ignore_sss 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
ahci_shost_attrs extern s#device_attribute * ahci_shost_attrs [ ] 
ahci_sdev_attrs extern s#device_attribute * ahci_sdev_attrs [ ] 
s##scsi_host_cmd_pool
s##scsi_device
s#sg_table struct sg_table { s#scatterlist * sgl ; unsigned int nents ; unsigned int orig_nents ; } 
s#scsi_data_buffer struct scsi_data_buffer { s#sg_table table ; unsigned length ; int resid ; } 
s#scsi_pointer struct scsi_pointer { char * ptr ; int this_residual ; s#scatterlist * buffer ; int buffers_residual ; t#dma_addr_t dma_handle ; volatile int Status ; volatile int Message ; volatile int have_data_in ; volatile int sent_command ; volatile int phase ; } 
s#scsi_cmnd struct scsi_cmnd { s#scsi_device * device ; s#list_head list ; s#list_head eh_entry ; int eh_eflags ; unsigned long serial_number ; unsigned long jiffies_at_alloc ; int retries ; int allowed ; unsigned char prot_op ; unsigned char prot_type ; unsigned short cmd_len ; e#dma_data_direction sc_data_direction ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#scsi_data_buffer * prot_sdb ; unsigned underflow ; unsigned transfersize ; s#request * request ; unsigned char * sense_buffer ; void ( * scsi_done ) ( s#scsi_cmnd * ) ; s#scsi_pointer SCp ; unsigned char * host_scribble ; int result ; unsigned char tag ; } 
s##scsi_target
s#scsi_host_template struct scsi_host_template { s#module * module ; const char * name ; int ( * detect ) ( s#scsi_host_template * ) ; int ( * release ) ( s#Scsi_Host * ) ; const char * ( * info ) ( s#Scsi_Host * ) ; int ( * ioctl ) ( s#scsi_device * , int , void * ) ; int ( * compat_ioctl ) ( s#scsi_device * , int , void * ) ; int ( * queuecommand ) ( s#Scsi_Host * , s#scsi_cmnd * ) ; int ( * transfer_response ) ( s#scsi_cmnd * , void ( * ) ( s#scsi_cmnd * ) ) ; int ( * eh_abort_handler ) ( s#scsi_cmnd * ) ; int ( * eh_device_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_target_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_bus_reset_handler ) ( s#scsi_cmnd * ) ; int ( * eh_host_reset_handler ) ( s#scsi_cmnd * ) ; int ( * slave_alloc ) ( s#scsi_device * ) ; int ( * slave_configure ) ( s#scsi_device * ) ; void ( * slave_destroy ) ( s#scsi_device * ) ; int ( * target_alloc ) ( s#scsi_target * ) ; void ( * target_destroy ) ( s#scsi_target * ) ; int ( * scan_finished ) ( s#Scsi_Host * , unsigned long ) ; void ( * scan_start ) ( s#Scsi_Host * ) ; int ( * change_queue_depth ) ( s#scsi_device * , int , int ) ; int ( * change_queue_type ) ( s#scsi_device * , int ) ; int ( * bios_param ) ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) ; void ( * unlock_native_capacity ) ( s#scsi_device * ) ; int ( * proc_info ) ( s#Scsi_Host * , char * , char * * , t#off_t , int , int ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * host_reset ) ( s#Scsi_Host * , int ) ; const char * proc_name ; s#proc_dir_entry * proc_dir ; int can_queue ; int this_id ; unsigned short sg_tablesize ; unsigned short sg_prot_tablesize ; unsigned short max_sectors ; unsigned long dma_boundary ; short cmd_per_lun ; unsigned char present ; unsigned supported_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned emulated : 1 ; unsigned skip_settle_delay : 1 ; unsigned ordered_tag : 1 ; unsigned int max_host_blocked ; s#device_attribute * * shost_attrs ; s#device_attribute * * sdev_attrs ; s#list_head legacy_hosts ; t#u64 vendor_id ; } 
s##scsi_transport_template
s##workqueue_struct
e#scsi_host_state enum scsi_host_state { SHOST_CREATED = 1 , SHOST_RUNNING , SHOST_CANCEL , SHOST_DEL , SHOST_RECOVERY , SHOST_CANCEL_RECOVERY , SHOST_DEL_RECOVERY , } 
s#Scsi_Host struct Scsi_Host { s#list_head __devices ; s#list_head __targets ; s#scsi_host_cmd_pool * cmd_pool ; t#spinlock_t free_list_lock ; s#list_head free_list ; s#list_head starved_list ; t#spinlock_t default_lock ; t#spinlock_t * host_lock ; s#mutex scan_mutex ; s#list_head eh_cmd_q ; s#task_struct * ehandler ; s#completion * eh_action ; t#wait_queue_head_t host_wait ; s#scsi_host_template * hostt ; s#scsi_transport_template * transportt ; s#blk_queue_tag * bqt ; unsigned int host_busy ; unsigned int host_failed ; unsigned int host_eh_scheduled ; unsigned int host_no ; int resetting ; unsigned long last_reset ; unsigned int max_id ; unsigned int max_lun ; unsigned int max_channel ; unsigned int unique_id ; unsigned short max_cmd_len ; int this_id ; int can_queue ; short cmd_per_lun ; short unsigned int sg_tablesize ; short unsigned int sg_prot_tablesize ; short unsigned int max_sectors ; unsigned long dma_boundary ; unsigned long cmd_serial_number ; unsigned active_mode : 2 ; unsigned unchecked_isa_dma : 1 ; unsigned use_clustering : 1 ; unsigned use_blk_tcq : 1 ; unsigned host_self_blocked : 1 ; unsigned reverse_ordering : 1 ; unsigned ordered_tag : 1 ; unsigned tmf_in_progress : 1 ; unsigned async_scan : 1 ; unsigned eh_noresume : 1 ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; unsigned int host_blocked ; unsigned int max_host_blocked ; unsigned int prot_capabilities ; unsigned char prot_guard_type ; s#request_queue * uspace_req_q ; unsigned long base ; unsigned long io_port ; unsigned char n_io_port ; unsigned char dma_channel ; unsigned int irq ; e#scsi_host_state shost_state ; s#device shost_gendev , shost_dev ; s#list_head sht_legacy_list ; void * shost_data ; s#device * dma_dev ; unsigned long hostdata [ 0 ] __attribute__ ( ( aligned ( sizeof ( unsigned long ) ) ) ) ; } 
s#ata_ioports struct ata_ioports { void * cmd_addr ; void * data_addr ; void * error_addr ; void * feature_addr ; void * nsect_addr ; void * lbal_addr ; void * lbam_addr ; void * lbah_addr ; void * device_addr ; void * status_addr ; void * command_addr ; void * altstatus_addr ; void * ctl_addr ; void * bmdma_addr ; void * scr_addr ; } 
e#ata_lpm_policy enum ata_lpm_policy { ATA_LPM_UNKNOWN , ATA_LPM_MAX_POWER , ATA_LPM_MED_POWER , ATA_LPM_MIN_POWER , } 
E#ATA_ID_WORDS 256 
E#SATA_PMP_GSCR_DWORDS 128 
E#ATA_LOG_DEVSLP_SIZE 0x08 
s#ata_ering_entry struct ata_ering_entry { unsigned int eflags ; unsigned int err_mask ; t#u64 timestamp ; } 
E#ATA_ERING_SIZE 32 
s#ata_ering struct ata_ering { int cursor ; s#ata_ering_entry ring [ E#ATA_ERING_SIZE ] ; } 
s#ata_device struct ata_device { s#ata_link * link ; unsigned int devno ; unsigned int horkage ; unsigned long flags ; s#scsi_device * sdev ; void * private_data ; s#device tdev ; t#u64 n_sectors ; t#u64 n_native_sectors ; unsigned int class ; unsigned long unpark_deadline ; t#u8 pio_mode ; t#u8 dma_mode ; t#u8 xfer_mode ; unsigned int xfer_shift ; unsigned int multi_count ; unsigned int max_sectors ; unsigned int cdb_len ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; t#u16 cylinders ; t#u16 heads ; t#u16 sectors ; union { t#u16 id [ E#ATA_ID_WORDS ] ; t#u32 gscr [ E#SATA_PMP_GSCR_DWORDS ] ; } ; t#u8 devslp_timing [ E#ATA_LOG_DEVSLP_SIZE ] ; int spdn_cnt ; s#ata_ering ering ; } 
E#ATA_MAX_DEVICES 2 
E#ATA_EH_DESC_LEN 80 
s#ata_eh_info struct ata_eh_info { s#ata_device * dev ; t#u32 serror ; unsigned int err_mask ; unsigned int action ; unsigned int dev_action [ E#ATA_MAX_DEVICES ] ; unsigned int flags ; unsigned int probe_mask ; char desc [ E#ATA_EH_DESC_LEN ] ; int desc_len ; } 
E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE 6 
s#ata_eh_context struct ata_eh_context { s#ata_eh_info i ; int tries [ E#ATA_MAX_DEVICES ] ; int cmd_timeout_idx [ E#ATA_MAX_DEVICES ] [ E#ATA_EH_CMD_TIMEOUT_TABLE_SIZE ] ; unsigned int classes [ E#ATA_MAX_DEVICES ] ; unsigned int did_probe_mask ; unsigned int unloaded_mask ; unsigned int saved_ncq_enabled ; t#u8 saved_xfer_mode [ E#ATA_MAX_DEVICES ] ; unsigned long last_reset ; } 
s#ata_link struct ata_link { s#ata_port * ap ; int pmp ; s#device tdev ; unsigned int active_tag ; t#u32 sactive ; unsigned int flags ; t#u32 saved_scontrol ; unsigned int hw_sata_spd_limit ; unsigned int sata_spd_limit ; unsigned int sata_spd ; e#ata_lpm_policy lpm_policy ; s#ata_eh_info eh_info ; s#ata_eh_context eh_context ; s#ata_device device [ E#ATA_MAX_DEVICES ] ; } 
t#__le32 typedef t#__u32 __le32 
s#ata_bmdma_prd struct ata_bmdma_prd { t#__le32 addr ; t#__le32 flags_len ; } 
E#ATA_MAX_QUEUE 32 
s#ata_port_stats struct ata_port_stats { unsigned long unhandled_irq ; unsigned long idle_irq ; unsigned long rw_reqbuf ; } 
s#ata_host struct ata_host { t#spinlock_t lock ; s#device * dev ; void * const * iomap ; unsigned int n_ports ; void * private_data ; s#ata_port_operations * ops ; unsigned long flags ; s#mutex eh_mutex ; s#task_struct * eh_owner ; s#ata_port * simplex_claimed ; s#ata_port * ports [ 0 ] ; } 
E#ATA_SECT_SIZE 512 
s#ata_port struct ata_port { s#Scsi_Host * scsi_host ; s#ata_port_operations * ops ; t#spinlock_t * lock ; unsigned long flags ; unsigned int pflags ; unsigned int print_id ; unsigned int port_no ; s#ata_ioports ioaddr ; t#u8 ctl ; t#u8 last_ctl ; s#ata_link * sff_pio_task_link ; s#delayed_work sff_pio_task ; s#ata_bmdma_prd * bmdma_prd ; t#dma_addr_t bmdma_prd_dma ; unsigned int pio_mask ; unsigned int mwdma_mask ; unsigned int udma_mask ; unsigned int cbl ; s#ata_queued_cmd qcmd [ E#ATA_MAX_QUEUE ] ; unsigned long qc_allocated ; unsigned int qc_active ; int nr_active_links ; unsigned int last_tag ; s#ata_link link ; s#ata_link * slave_link ; int nr_pmp_links ; s#ata_link * pmp_link ; s#ata_link * excl_link ; s#ata_port_stats stats ; s#ata_host * host ; s#device * dev ; s#device tdev ; s#mutex scsi_scan_mutex ; s#delayed_work hotplug_task ; s#work_struct scsi_rescan_task ; unsigned int hsm_task_state ; t#u32 msg_enable ; s#list_head eh_done_q ; t#wait_queue_head_t eh_wait_q ; int eh_tries ; s#completion park_req_pending ; t#pm_message_t pm_mesg ; int * pm_result ; e#ata_lpm_policy target_lpm_policy ; s#timer_list fastdrain_timer ; unsigned long fastdrain_cnt ; int em_message_type ; void * private_data ; t#u8 sector_buf [ E#ATA_SECT_SIZE ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s#ata_taskfile struct ata_taskfile { unsigned long flags ; t#u8 protocol ; t#u8 ctl ; t#u8 hob_feature ; t#u8 hob_nsect ; t#u8 hob_lbal ; t#u8 hob_lbam ; t#u8 hob_lbah ; t#u8 feature ; t#u8 nsect ; t#u8 lbal ; t#u8 lbam ; t#u8 lbah ; t#u8 device ; t#u8 command ; } 
E#ATAPI_CDB_LEN 16 
t#ata_qc_cb_t typedef void ( * ata_qc_cb_t ) ( s#ata_queued_cmd * ) 
s#ata_queued_cmd struct ata_queued_cmd { s#ata_port * ap ; s#ata_device * dev ; s#scsi_cmnd * scsicmd ; void ( * scsidone ) ( s#scsi_cmnd * ) ; s#ata_taskfile tf ; t#u8 cdb [ E#ATAPI_CDB_LEN ] ; unsigned long flags ; unsigned int tag ; unsigned int n_elem ; unsigned int orig_n_elem ; int dma_dir ; unsigned int sect_size ; unsigned int nbytes ; unsigned int extrabytes ; unsigned int curbytes ; s#scatterlist sgent ; s#scatterlist * sg ; s#scatterlist * cursg ; unsigned int cursg_ofs ; unsigned int err_mask ; s#ata_taskfile result_tf ; t#ata_qc_cb_t complete_fn ; void * private_data ; void * lldd_task ; } 
t#ata_prereset_fn_t typedef int ( * ata_prereset_fn_t ) ( s#ata_link * , unsigned long ) 
t#ata_reset_fn_t typedef int ( * ata_reset_fn_t ) ( s#ata_link * , unsigned int * , unsigned long ) 
t#ata_postreset_fn_t typedef void ( * ata_postreset_fn_t ) ( s#ata_link * , unsigned int * ) 
e#sw_activity enum sw_activity { OFF , BLINK_ON , BLINK_OFF , } 
s#ata_port_operations struct ata_port_operations { int ( * qc_defer ) ( s#ata_queued_cmd * ) ; int ( * check_atapi_dma ) ( s#ata_queued_cmd * ) ; void ( * qc_prep ) ( s#ata_queued_cmd * ) ; unsigned int ( * qc_issue ) ( s#ata_queued_cmd * ) ; t#bool ( * qc_fill_rtf ) ( s#ata_queued_cmd * ) ; int ( * cable_detect ) ( s#ata_port * ) ; unsigned long ( * mode_filter ) ( s#ata_device * , unsigned long ) ; void ( * set_piomode ) ( s#ata_port * , s#ata_device * ) ; void ( * set_dmamode ) ( s#ata_port * , s#ata_device * ) ; int ( * set_mode ) ( s#ata_link * , s#ata_device * * ) ; unsigned int ( * read_id ) ( s#ata_device * , s#ata_taskfile * , t#u16 * ) ; void ( * dev_config ) ( s#ata_device * ) ; void ( * freeze ) ( s#ata_port * ) ; void ( * thaw ) ( s#ata_port * ) ; t#ata_prereset_fn_t prereset ; t#ata_reset_fn_t softreset ; t#ata_reset_fn_t hardreset ; t#ata_postreset_fn_t postreset ; t#ata_prereset_fn_t pmp_prereset ; t#ata_reset_fn_t pmp_softreset ; t#ata_reset_fn_t pmp_hardreset ; t#ata_postreset_fn_t pmp_postreset ; void ( * error_handler ) ( s#ata_port * ) ; void ( * lost_interrupt ) ( s#ata_port * ) ; void ( * post_internal_cmd ) ( s#ata_queued_cmd * ) ; void ( * sched_eh ) ( s#ata_port * ) ; void ( * end_eh ) ( s#ata_port * ) ; int ( * scr_read ) ( s#ata_link * , unsigned int , t#u32 * ) ; int ( * scr_write ) ( s#ata_link * , unsigned int , t#u32 ) ; void ( * pmp_attach ) ( s#ata_port * ) ; void ( * pmp_detach ) ( s#ata_port * ) ; int ( * set_lpm ) ( s#ata_link * , e#ata_lpm_policy , unsigned ) ; int ( * port_suspend ) ( s#ata_port * , t#pm_message_t ) ; int ( * port_resume ) ( s#ata_port * ) ; int ( * port_start ) ( s#ata_port * ) ; void ( * port_stop ) ( s#ata_port * ) ; void ( * host_stop ) ( s#ata_host * ) ; void ( * sff_dev_select ) ( s#ata_port * , unsigned int ) ; void ( * sff_set_devctl ) ( s#ata_port * , t#u8 ) ; t#u8 ( * sff_check_status ) ( s#ata_port * ) ; t#u8 ( * sff_check_altstatus ) ( s#ata_port * ) ; void ( * sff_tf_load ) ( s#ata_port * , const s#ata_taskfile * ) ; void ( * sff_tf_read ) ( s#ata_port * , s#ata_taskfile * ) ; void ( * sff_exec_command ) ( s#ata_port * , const s#ata_taskfile * ) ; unsigned int ( * sff_data_xfer ) ( s#ata_device * , unsigned char * , unsigned int , int ) ; void ( * sff_irq_on ) ( s#ata_port * ) ; t#bool ( * sff_irq_check ) ( s#ata_port * ) ; void ( * sff_irq_clear ) ( s#ata_port * ) ; void ( * sff_drain_fifo ) ( s#ata_queued_cmd * ) ; void ( * bmdma_setup ) ( s#ata_queued_cmd * ) ; void ( * bmdma_start ) ( s#ata_queued_cmd * ) ; void ( * bmdma_stop ) ( s#ata_queued_cmd * ) ; t#u8 ( * bmdma_status ) ( s#ata_port * ) ; t#ssize_t ( * em_show ) ( s#ata_port * , char * ) ; t#ssize_t ( * em_store ) ( s#ata_port * , const char * , t#size_t ) ; t#ssize_t ( * sw_activity_show ) ( s#ata_device * , char * ) ; t#ssize_t ( * sw_activity_store ) ( s#ata_device * , e#sw_activity ) ; void ( * phy_reset ) ( s#ata_port * ) ; void ( * eng_timeout ) ( s#ata_port * ) ; const s#ata_port_operations * inherits ; } 
ahci_ops extern s#ata_port_operations ahci_ops 
ahci_em_messages int ahci_em_messages 
s#ahci_host_priv struct ahci_host_priv { void * mmio ; unsigned int flags ; t#u32 cap ; t#u32 cap2 ; t#u32 port_map ; t#u32 saved_cap ; t#u32 saved_cap2 ; t#u32 saved_port_map ; t#u32 em_loc ; t#u32 em_buf_sz ; t#u32 em_msg_type ; } 
ahci_save_initial_config void ahci_save_initial_config ( s#device * , s#ahci_host_priv * , unsigned int , unsigned int ) 
ahci_start_engine void ahci_start_engine ( s#ata_port * ) 
ahci_stop_engine int ahci_stop_engine ( s#ata_port * ) 
ahci_reset_controller int ahci_reset_controller ( s#ata_host * ) 
ahci_reset_em int ahci_reset_em ( s#ata_host * ) 
ahci_init_controller void ahci_init_controller ( s#ata_host * ) 
s#ahci_cmd_hdr struct ahci_cmd_hdr { t#__le32 opts ; t#__le32 status ; t#__le32 tbl_addr ; t#__le32 tbl_addr_hi ; t#__le32 reserved [ 4 ] ; } 
s#ahci_em_priv struct ahci_em_priv { e#sw_activity blink_policy ; s#timer_list timer ; unsigned long saved_activity ; unsigned long activity ; unsigned long led_state ; } 
E#EM_MAX_SLOTS 8 
s#ahci_port_priv struct ahci_port_priv { s#ata_link * active_link ; s#ahci_cmd_hdr * cmd_slot ; t#dma_addr_t cmd_slot_dma ; void * cmd_tbl ; t#dma_addr_t cmd_tbl_dma ; void * rx_fis ; t#dma_addr_t rx_fis_dma ; unsigned int ncq_saw_d2h : 1 ; unsigned int ncq_saw_dmas : 1 ; unsigned int ncq_saw_sdb : 1 ; t#u32 intr_mask ; t#bool fbs_supported ; t#bool fbs_enabled ; int fbs_last_dev ; s#ahci_em_priv em_priv [ E#EM_MAX_SLOTS ] ; } 
ahci_fill_cmd_slot void ahci_fill_cmd_slot ( s#ahci_port_priv * , unsigned int , t#u32 ) 
ahci_kick_engine int ahci_kick_engine ( s#ata_port * ) 
ahci_check_ready int ahci_check_ready ( s#ata_link * ) 
ahci_do_softreset int ahci_do_softreset ( s#ata_link * , unsigned int * , int , unsigned long , int ( * ) ( s#ata_link * ) ) 
ahci_interrupt t#irqreturn_t ahci_interrupt ( int , void * ) 
ahci_port_resume int ahci_port_resume ( s#ata_port * ) 
ahci_print_info void ahci_print_info ( s#ata_host * , const char * ) 
s#ata_port_info struct ata_port_info { unsigned long flags ; unsigned long link_flags ; unsigned long pio_mask ; unsigned long mwdma_mask ; unsigned long udma_mask ; s#ata_port_operations * port_ops ; void * private_data ; } 
ahci_set_em_messages void ahci_set_em_messages ( s#ahci_host_priv * , s#ata_port_info * ) 

/* drivers/ata/libata-core.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_device
s##scsi_target
s##scsi_transport_template
s##workqueue_struct
ata_dev_set_feature extern unsigned int ata_dev_set_feature ( s#ata_device * , t#u8 , t#u8 ) 
ata_sas_port_async_suspend extern int ata_sas_port_async_suspend ( s#ata_port * , int * ) 
ata_sas_port_async_resume extern int ata_sas_port_async_resume ( s#ata_port * , int * ) 
sata_deb_timing_normal extern const unsigned long sata_deb_timing_normal [ ] 
sata_deb_timing_hotplug extern const unsigned long sata_deb_timing_hotplug [ ] 
sata_deb_timing_long extern const unsigned long sata_deb_timing_long [ ] 
ata_base_port_ops extern const s#ata_port_operations ata_base_port_ops 
sata_port_ops extern const s#ata_port_operations sata_port_ops 
ata_dummy_port_ops extern s#ata_port_operations ata_dummy_port_ops 
ata_dummy_port_info extern const s#ata_port_info ata_dummy_port_info 
e#ata_link_iter_mode enum ata_link_iter_mode { ATA_LITER_EDGE , ATA_LITER_HOST_FIRST , ATA_LITER_PMP_FIRST , } 
ata_link_next extern s#ata_link * ata_link_next ( s#ata_link * , s#ata_port * , e#ata_link_iter_mode ) 
e#ata_dev_iter_mode enum ata_dev_iter_mode { ATA_DITER_ENABLED , ATA_DITER_ENABLED_REVERSE , ATA_DITER_ALL , ATA_DITER_ALL_REVERSE , } 
ata_dev_next extern s#ata_device * ata_dev_next ( s#ata_device * , s#ata_link * , e#ata_dev_iter_mode ) 
ata_std_bios_param extern int ata_std_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) 
ata_host_init extern void ata_host_init ( s#ata_host * , s#device * , s#ata_port_operations * ) 
ata_host_alloc extern s#ata_host * ata_host_alloc ( s#device * , int ) 
ata_host_alloc_pinfo extern s#ata_host * ata_host_alloc_pinfo ( s#device * , const s#ata_port_info * const * , int ) 
ata_slave_link_init extern int ata_slave_link_init ( s#ata_port * ) 
ata_host_start extern int ata_host_start ( s#ata_host * ) 
ata_host_register extern int ata_host_register ( s#ata_host * , s#scsi_host_template * ) 
ata_host_activate extern int ata_host_activate ( s#ata_host * , int , t#irq_handler_t , unsigned long , s#scsi_host_template * ) 
ata_host_detach extern void ata_host_detach ( s#ata_host * ) 
ata_sg_init extern void ata_sg_init ( s#ata_queued_cmd * , s#scatterlist * , unsigned int ) 
ata_qc_complete extern void ata_qc_complete ( s#ata_queued_cmd * ) 
ata_qc_complete_multiple extern int ata_qc_complete_multiple ( s#ata_port * , t#u32 ) 
atapi_cmd_type extern int atapi_cmd_type ( t#u8 ) 
ata_tf_to_fis extern void ata_tf_to_fis ( const s#ata_taskfile * , t#u8 , int , t#u8 * ) 
ata_tf_from_fis extern void ata_tf_from_fis ( const t#u8 * , s#ata_taskfile * ) 
ata_pack_xfermask extern unsigned long ata_pack_xfermask ( unsigned long , unsigned long , unsigned long ) 
ata_unpack_xfermask extern void ata_unpack_xfermask ( unsigned long , unsigned long * , unsigned long * , unsigned long * ) 
ata_xfer_mask2mode extern t#u8 ata_xfer_mask2mode ( unsigned long ) 
ata_xfer_mode2mask extern unsigned long ata_xfer_mode2mask ( t#u8 ) 
ata_xfer_mode2shift extern int ata_xfer_mode2shift ( unsigned long ) 
ata_mode_string extern const char * ata_mode_string ( unsigned long ) 
ata_id_xfermask extern unsigned long ata_id_xfermask ( const t#u16 * ) 
ata_do_set_mode extern int ata_do_set_mode ( s#ata_link * , s#ata_device * * ) 
ata_std_qc_defer extern int ata_std_qc_defer ( s#ata_queued_cmd * ) 
ata_noop_qc_prep extern void ata_noop_qc_prep ( s#ata_queued_cmd * ) 
ata_dev_disable extern void ata_dev_disable ( s#ata_device * ) 
sata_set_spd extern int sata_set_spd ( s#ata_link * ) 
ata_wait_after_reset extern int ata_wait_after_reset ( s#ata_link * , unsigned long , int ( * ) ( s#ata_link * ) ) 
sata_link_debounce extern int sata_link_debounce ( s#ata_link * , const unsigned long * , unsigned long ) 
sata_link_resume extern int sata_link_resume ( s#ata_link * , const unsigned long * , unsigned long ) 
sata_link_scr_lpm extern int sata_link_scr_lpm ( s#ata_link * , e#ata_lpm_policy , t#bool ) 
ata_std_prereset extern int ata_std_prereset ( s#ata_link * , unsigned long ) 
sata_link_hardreset extern int sata_link_hardreset ( s#ata_link * , const unsigned long * , unsigned long , t#bool * , int ( * ) ( s#ata_link * ) ) 
sata_std_hardreset extern int sata_std_hardreset ( s#ata_link * , unsigned int * , unsigned long ) 
ata_std_postreset extern void ata_std_postreset ( s#ata_link * , unsigned int * ) 
ata_dev_classify extern unsigned int ata_dev_classify ( const s#ata_taskfile * ) 
ata_dev_pair extern s#ata_device * ata_dev_pair ( s#ata_device * ) 
ata_ratelimit extern int ata_ratelimit ( void ) 
ata_msleep extern void ata_msleep ( s#ata_port * , unsigned int ) 
ata_wait_register extern t#u32 ata_wait_register ( s#ata_port * , void * , t#u32 , t#u32 , unsigned long , unsigned long ) 
ata_scsi_queuecmd extern int ata_scsi_queuecmd ( s#Scsi_Host * , s#scsi_cmnd * ) 
ata_scsi_slave_config extern int ata_scsi_slave_config ( s#scsi_device * ) 
ata_scsi_slave_destroy extern void ata_scsi_slave_destroy ( s#scsi_device * ) 
ata_scsi_change_queue_depth extern int ata_scsi_change_queue_depth ( s#scsi_device * , int , int ) 
__ata_change_queue_depth extern int __ata_change_queue_depth ( s#ata_port * , s#scsi_device * , int , int ) 
sata_scr_valid extern int sata_scr_valid ( s#ata_link * ) 
sata_scr_read extern int sata_scr_read ( s#ata_link * , int , t#u32 * ) 
sata_scr_write extern int sata_scr_write ( s#ata_link * , int , t#u32 ) 
sata_scr_write_flush extern int sata_scr_write_flush ( s#ata_link * , int , t#u32 ) 
ata_link_online extern t#bool ata_link_online ( s#ata_link * ) 
ata_link_offline extern t#bool ata_link_offline ( s#ata_link * ) 
ata_host_suspend extern int ata_host_suspend ( s#ata_host * , t#pm_message_t ) 
ata_host_resume extern void ata_host_resume ( s#ata_host * ) 
ata_id_string extern void ata_id_string ( const t#u16 * , unsigned char * , unsigned int , unsigned int ) 
ata_id_c_string extern void ata_id_c_string ( const t#u16 * , unsigned char * , unsigned int , unsigned int ) 
ata_do_dev_read_id extern unsigned int ata_do_dev_read_id ( s#ata_device * , s#ata_taskfile * , t#u16 * ) 
ata_scsi_simulate extern void ata_scsi_simulate ( s#ata_device * , s#scsi_cmnd * ) 
ata_pio_need_iordy extern unsigned int ata_pio_need_iordy ( const s#ata_device * ) 
s#ata_timing struct ata_timing { unsigned short mode ; unsigned short setup ; unsigned short act8b ; unsigned short rec8b ; unsigned short cyc8b ; unsigned short active ; unsigned short recover ; unsigned short dmack_hold ; unsigned short cycle ; unsigned short udma ; } 
ata_timing_find_mode extern const s#ata_timing * ata_timing_find_mode ( t#u8 ) 
ata_timing_compute extern int ata_timing_compute ( s#ata_device * , unsigned short , s#ata_timing * , int , int ) 
ata_timing_merge extern void ata_timing_merge ( const s#ata_timing * , const s#ata_timing * , s#ata_timing * , unsigned int ) 
ata_timing_cycle2mode extern t#u8 ata_timing_cycle2mode ( unsigned int , int ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#pci_bits struct pci_bits { unsigned int reg ; unsigned int width ; unsigned long mask ; unsigned long val ; } 
pci_test_config_bits extern int pci_test_config_bits ( s#pci_dev * , const s#pci_bits * ) 
ata_pci_remove_one extern void ata_pci_remove_one ( s#pci_dev * ) 
ata_pci_device_do_suspend extern void ata_pci_device_do_suspend ( s#pci_dev * , t#pm_message_t ) 
ata_pci_device_do_resume extern int ata_pci_device_do_resume ( s#pci_dev * ) 
ata_pci_device_suspend extern int ata_pci_device_suspend ( s#pci_dev * , t#pm_message_t ) 
ata_pci_device_resume extern int ata_pci_device_resume ( s#pci_dev * ) 
__ata_ehi_push_desc extern void __ata_ehi_push_desc ( s#ata_eh_info * , const char * , ... ) 
ata_ehi_push_desc extern void ata_ehi_push_desc ( s#ata_eh_info * , const char * , ... ) 
ata_ehi_clear_desc extern void ata_ehi_clear_desc ( s#ata_eh_info * ) 
ata_port_desc extern void ata_port_desc ( s#ata_port * , const char * , ... ) 
ata_port_pbar_desc extern void ata_port_pbar_desc ( s#ata_port * , int , t#ssize_t , const char * ) 
ata_port_schedule_eh extern void ata_port_schedule_eh ( s#ata_port * ) 
ata_link_abort extern int ata_link_abort ( s#ata_link * ) 
ata_port_abort extern int ata_port_abort ( s#ata_port * ) 
ata_port_freeze extern int ata_port_freeze ( s#ata_port * ) 
sata_async_notification extern int sata_async_notification ( s#ata_port * ) 
ata_eh_freeze_port extern void ata_eh_freeze_port ( s#ata_port * ) 
ata_eh_thaw_port extern void ata_eh_thaw_port ( s#ata_port * ) 
ata_eh_qc_complete extern void ata_eh_qc_complete ( s#ata_queued_cmd * ) 
ata_eh_qc_retry extern void ata_eh_qc_retry ( s#ata_queued_cmd * ) 
ata_eh_analyze_ncq_error extern void ata_eh_analyze_ncq_error ( s#ata_link * ) 
ata_do_eh extern void ata_do_eh ( s#ata_port * , t#ata_prereset_fn_t , t#ata_reset_fn_t , t#ata_reset_fn_t , t#ata_postreset_fn_t ) 
ata_std_error_handler extern void ata_std_error_handler ( s#ata_port * ) 
ata_cable_40wire extern int ata_cable_40wire ( s#ata_port * ) 
ata_cable_80wire extern int ata_cable_80wire ( s#ata_port * ) 
ata_cable_unknown extern int ata_cable_unknown ( s#ata_port * ) 
ata_cable_ignore extern int ata_cable_ignore ( s#ata_port * ) 
ata_cable_sata extern int ata_cable_sata ( s#ata_port * ) 

/* drivers/ata/libata-eh.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#execute_work struct execute_work { s#work_struct work ; } 
e#scsi_target_state enum scsi_target_state { STARGET_CREATED = 1 , STARGET_RUNNING , STARGET_DEL , } 
s#scsi_target struct scsi_target { s#scsi_device * starget_sdev_user ; s#list_head siblings ; s#list_head devices ; s#device dev ; unsigned int reap_ref ; unsigned int channel ; unsigned int id ; unsigned int create : 1 ; unsigned int single_lun : 1 ; unsigned int pdt_1f_for_no_lun : 1 ; unsigned int no_report_luns : 1 ; unsigned int target_busy ; unsigned int can_queue ; unsigned int target_blocked ; unsigned int max_target_blocked ; char scsi_level ; s#execute_work ew ; e#scsi_target_state state ; void * hostdata ; unsigned long starget_data [ 0 ] ; } 
E#SDEV_EVT_MEDIA_CHANGE 1 
E#SDEV_EVT_LAST E#SDEV_EVT_MEDIA_CHANGE 
E#SDEV_EVT_MAXBITS E#SDEV_EVT_LAST + 1 
s#scsi_dh_devlist struct scsi_dh_devlist { char * vendor ; char * model ; } 
s#scsi_sense_hdr struct scsi_sense_hdr { t#u8 response_code ; t#u8 sense_key ; t#u8 asc ; t#u8 ascq ; t#u8 byte4 ; t#u8 byte5 ; t#u8 byte6 ; t#u8 additional_length ; } 
t#activate_complete typedef void ( * activate_complete ) ( void * , int ) 
s#scsi_device_handler struct scsi_device_handler { s#list_head list ; s#module * module ; const char * name ; const s#scsi_dh_devlist * devlist ; int ( * check_sense ) ( s#scsi_device * , s#scsi_sense_hdr * ) ; int ( * attach ) ( s#scsi_device * ) ; void ( * detach ) ( s#scsi_device * ) ; int ( * activate ) ( s#scsi_device * , t#activate_complete , void * ) ; int ( * prep_fn ) ( s#scsi_device * , s#request * ) ; int ( * set_params ) ( s#scsi_device * , const char * ) ; t#bool ( * match ) ( s#scsi_device * ) ; } 
s#scsi_dh_data struct scsi_dh_data { s#scsi_device_handler * scsi_dh ; s#scsi_device * sdev ; s#kref kref ; char buf [ 0 ] ; } 
e#scsi_device_state enum scsi_device_state { SDEV_CREATED = 1 , SDEV_RUNNING , SDEV_CANCEL , SDEV_DEL , SDEV_QUIESCE , SDEV_OFFLINE , SDEV_TRANSPORT_OFFLINE , SDEV_BLOCK , SDEV_CREATED_BLOCK , } 
s#scsi_device struct scsi_device { s#Scsi_Host * host ; s#request_queue * request_queue ; s#list_head siblings ; s#list_head same_target_siblings ; unsigned int device_busy ; t#spinlock_t list_lock ; s#list_head cmd_list ; s#list_head starved_entry ; s#scsi_cmnd * current_cmnd ; unsigned short queue_depth ; unsigned short max_queue_depth ; unsigned short last_queue_full_depth ; unsigned short last_queue_full_count ; unsigned long last_queue_full_time ; unsigned long queue_ramp_up_period ; unsigned long last_queue_ramp_up ; unsigned int id , lun , channel ; unsigned int manufacturer ; unsigned sector_size ; void * hostdata ; char type ; char scsi_level ; char inq_periph_qual ; unsigned char inquiry_len ; unsigned char * inquiry ; const char * vendor ; const char * model ; const char * rev ; unsigned char current_tag ; s#scsi_target * sdev_target ; unsigned int sdev_bflags ; unsigned int eh_timeout ; unsigned writeable : 1 ; unsigned removable : 1 ; unsigned changed : 1 ; unsigned busy : 1 ; unsigned lockable : 1 ; unsigned locked : 1 ; unsigned borken : 1 ; unsigned disconnect : 1 ; unsigned soft_reset : 1 ; unsigned sdtr : 1 ; unsigned wdtr : 1 ; unsigned ppr : 1 ; unsigned tagged_supported : 1 ; unsigned simple_tags : 1 ; unsigned ordered_tags : 1 ; unsigned was_reset : 1 ; unsigned expecting_cc_ua : 1 ; unsigned use_10_for_rw : 1 ; unsigned use_10_for_ms : 1 ; unsigned skip_ms_page_8 : 1 ; unsigned skip_ms_page_3f : 1 ; unsigned skip_vpd_pages : 1 ; unsigned try_vpd_pages : 1 ; unsigned use_192_bytes_for_3f : 1 ; unsigned no_start_on_add : 1 ; unsigned allow_restart : 1 ; unsigned manage_start_stop : 1 ; unsigned start_stop_pwr_cond : 1 ; unsigned no_uld_attach : 1 ; unsigned select_no_atn : 1 ; unsigned fix_capacity : 1 ; unsigned guess_capacity : 1 ; unsigned retry_hwerror : 1 ; unsigned last_sector_bug : 1 ; unsigned no_read_disc_info : 1 ; unsigned no_read_capacity_16 : 1 ; unsigned try_rc_10_first : 1 ; unsigned is_visible : 1 ; unsigned wce_default_on : 1 ; unsigned no_dif : 1 ; unsigned long supported_events [ ( ( ( E#SDEV_EVT_MAXBITS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#list_head event_list ; s#work_struct event_work ; unsigned int device_blocked ; unsigned int max_device_blocked ; t#atomic_t iorequest_cnt ; t#atomic_t iodone_cnt ; t#atomic_t ioerr_cnt ; s#device sdev_gendev , sdev_dev ; s#execute_work ew ; s#work_struct requeue_work ; s#scsi_dh_data * scsi_dh_data ; e#scsi_device_state sdev_state ; unsigned long sdev_data [ 0 ] ; } 
s##scsi_transport_template
s##workqueue_struct
ata_scsi_cmd_error_handler extern void ata_scsi_cmd_error_handler ( s#Scsi_Host * , s#ata_port * , s#list_head * ) 
ata_scsi_port_error_handler extern void ata_scsi_port_error_handler ( s#Scsi_Host * , s#ata_port * ) 
ata_port_wait_eh extern void ata_port_wait_eh ( s#ata_port * ) 
ata_std_sched_eh extern void ata_std_sched_eh ( s#ata_port * ) 
ata_std_end_eh extern void ata_std_end_eh ( s#ata_port * ) 

/* drivers/ata/libata-pmp.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_device
s##scsi_cmnd
s##scsi_target
e##blk_eh_timer_return
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##scsi_transport_template
s##blk_queue_tag
s##workqueue_struct
s##request_queue
sata_pmp_port_ops extern const s#ata_port_operations sata_pmp_port_ops 
sata_pmp_qc_defer_cmd_switch extern int sata_pmp_qc_defer_cmd_switch ( s#ata_queued_cmd * ) 
sata_pmp_error_handler extern void sata_pmp_error_handler ( s#ata_port * ) 

/* drivers/ata/libata-scsi.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
dev_attr_link_power_management_policy extern s#device_attribute dev_attr_link_power_management_policy 
dev_attr_unload_heads extern s#device_attribute dev_attr_unload_heads 
dev_attr_em_message extern s#device_attribute dev_attr_em_message 
dev_attr_em_message_type extern s#device_attribute dev_attr_em_message_type 
dev_attr_sw_activity extern s#device_attribute dev_attr_sw_activity 
ata_common_sdev_attrs extern s#device_attribute * ata_common_sdev_attrs [ ] 
s##scsi_host_cmd_pool
s#klist struct klist { t#spinlock_t k_lock ; s#list_head k_list ; void ( * get ) ( s#klist_node * ) ; void ( * put ) ( s#klist_node * ) ; } 
s#attribute_container struct attribute_container { s#list_head node ; s#klist containers ; s#class * class ; const s#attribute_group * grp ; s#device_attribute * * attrs ; int ( * match ) ( s#attribute_container * , s#device * ) ; unsigned long flags ; } 
s#transport_container struct transport_container { s#attribute_container ac ; const s#attribute_group * statistics ; } 
t#uint typedef unsigned int uint 
s#scsi_transport_template struct scsi_transport_template { s#transport_container host_attrs ; s#transport_container target_attrs ; s#transport_container device_attrs ; int ( * user_scan ) ( s#Scsi_Host * , t#uint , t#uint , t#uint ) ; int device_size ; int device_private_offset ; int target_size ; int target_private_offset ; int host_size ; unsigned int create_work_queue : 1 ; void ( * eh_strategy_handler ) ( s#Scsi_Host * ) ; e#blk_eh_timer_return ( * eh_timed_out ) ( s#scsi_cmnd * ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; } 
s##workqueue_struct
ata_sas_scsi_ioctl extern int ata_sas_scsi_ioctl ( s#ata_port * , s#scsi_device * , int , void * ) 
ata_scsi_ioctl extern int ata_scsi_ioctl ( s#scsi_device * , int , void * ) 
ata_sas_port_alloc extern s#ata_port * ata_sas_port_alloc ( s#ata_host * , s#ata_port_info * , s#Scsi_Host * ) 
ata_sas_port_start extern int ata_sas_port_start ( s#ata_port * ) 
ata_sas_port_stop extern void ata_sas_port_stop ( s#ata_port * ) 
ata_sas_async_probe extern void ata_sas_async_probe ( s#ata_port * ) 
ata_sas_sync_probe extern int ata_sas_sync_probe ( s#ata_port * ) 
ata_sas_port_init extern int ata_sas_port_init ( s#ata_port * ) 
ata_sas_port_destroy extern void ata_sas_port_destroy ( s#ata_port * ) 
ata_sas_slave_configure extern int ata_sas_slave_configure ( s#scsi_device * , s#ata_port * ) 
ata_sas_queuecmd extern int ata_sas_queuecmd ( s#scsi_cmnd * , s#ata_port * ) 

/* drivers/ata/libata-sff.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_device
s##scsi_cmnd
s##scsi_target
e##blk_eh_timer_return
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##scsi_transport_template
s##blk_queue_tag
s##workqueue_struct
s##request_queue
ata_sff_port_ops extern const s#ata_port_operations ata_sff_port_ops 
ata_sff_check_status extern t#u8 ata_sff_check_status ( s#ata_port * ) 
ata_sff_pause extern void ata_sff_pause ( s#ata_port * ) 
ata_sff_dma_pause extern void ata_sff_dma_pause ( s#ata_port * ) 
ata_sff_busy_sleep extern int ata_sff_busy_sleep ( s#ata_port * , unsigned long , unsigned long ) 
ata_sff_wait_ready extern int ata_sff_wait_ready ( s#ata_link * , unsigned long ) 
ata_sff_dev_select extern void ata_sff_dev_select ( s#ata_port * , unsigned int ) 
ata_sff_irq_on extern void ata_sff_irq_on ( s#ata_port * ) 
ata_sff_tf_load extern void ata_sff_tf_load ( s#ata_port * , const s#ata_taskfile * ) 
ata_sff_tf_read extern void ata_sff_tf_read ( s#ata_port * , s#ata_taskfile * ) 
ata_sff_exec_command extern void ata_sff_exec_command ( s#ata_port * , const s#ata_taskfile * ) 
ata_sff_data_xfer extern unsigned int ata_sff_data_xfer ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_data_xfer32 extern unsigned int ata_sff_data_xfer32 ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_data_xfer_noirq extern unsigned int ata_sff_data_xfer_noirq ( s#ata_device * , unsigned char * , unsigned int , int ) 
ata_sff_hsm_move extern int ata_sff_hsm_move ( s#ata_port * , s#ata_queued_cmd * , t#u8 , int ) 
ata_sff_queue_work extern void ata_sff_queue_work ( s#work_struct * ) 
ata_sff_queue_delayed_work extern void ata_sff_queue_delayed_work ( s#delayed_work * , unsigned long ) 
ata_sff_queue_pio_task extern void ata_sff_queue_pio_task ( s#ata_link * , unsigned long ) 
ata_sff_qc_issue extern unsigned int ata_sff_qc_issue ( s#ata_queued_cmd * ) 
ata_sff_qc_fill_rtf extern t#bool ata_sff_qc_fill_rtf ( s#ata_queued_cmd * ) 
ata_sff_port_intr extern unsigned int ata_sff_port_intr ( s#ata_port * , s#ata_queued_cmd * ) 
ata_sff_interrupt extern t#irqreturn_t ata_sff_interrupt ( int , void * ) 
ata_sff_lost_interrupt extern void ata_sff_lost_interrupt ( s#ata_port * ) 
ata_sff_freeze extern void ata_sff_freeze ( s#ata_port * ) 
ata_sff_thaw extern void ata_sff_thaw ( s#ata_port * ) 
ata_sff_prereset extern int ata_sff_prereset ( s#ata_link * , unsigned long ) 
ata_sff_dev_classify extern unsigned int ata_sff_dev_classify ( s#ata_device * , int , t#u8 * ) 
ata_sff_wait_after_reset extern int ata_sff_wait_after_reset ( s#ata_link * , unsigned int , unsigned long ) 
ata_sff_softreset extern int ata_sff_softreset ( s#ata_link * , unsigned int * , unsigned long ) 
sata_sff_hardreset extern int sata_sff_hardreset ( s#ata_link * , unsigned int * , unsigned long ) 
ata_sff_postreset extern void ata_sff_postreset ( s#ata_link * , unsigned int * ) 
ata_sff_drain_fifo extern void ata_sff_drain_fifo ( s#ata_queued_cmd * ) 
ata_sff_error_handler extern void ata_sff_error_handler ( s#ata_port * ) 
ata_sff_std_ports extern void ata_sff_std_ports ( s#ata_ioports * ) 
ata_pci_sff_init_host extern int ata_pci_sff_init_host ( s#ata_host * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ata_pci_sff_prepare_host extern int ata_pci_sff_prepare_host ( s#pci_dev * , const s#ata_port_info * const * , s#ata_host * * ) 
ata_pci_sff_activate_host extern int ata_pci_sff_activate_host ( s#ata_host * , t#irq_handler_t , s#scsi_host_template * ) 
ata_pci_sff_init_one extern int ata_pci_sff_init_one ( s#pci_dev * , const s#ata_port_info * const * , s#scsi_host_template * , void * , int ) 
ata_bmdma_port_ops extern const s#ata_port_operations ata_bmdma_port_ops 
ata_bmdma32_port_ops extern const s#ata_port_operations ata_bmdma32_port_ops 
ata_bmdma_qc_prep extern void ata_bmdma_qc_prep ( s#ata_queued_cmd * ) 
ata_bmdma_dumb_qc_prep extern void ata_bmdma_dumb_qc_prep ( s#ata_queued_cmd * ) 
ata_bmdma_qc_issue extern unsigned int ata_bmdma_qc_issue ( s#ata_queued_cmd * ) 
ata_bmdma_port_intr extern unsigned int ata_bmdma_port_intr ( s#ata_port * , s#ata_queued_cmd * ) 
ata_bmdma_interrupt extern t#irqreturn_t ata_bmdma_interrupt ( int , void * ) 
ata_bmdma_error_handler extern void ata_bmdma_error_handler ( s#ata_port * ) 
ata_bmdma_post_internal_cmd extern void ata_bmdma_post_internal_cmd ( s#ata_queued_cmd * ) 
ata_bmdma_irq_clear extern void ata_bmdma_irq_clear ( s#ata_port * ) 
ata_bmdma_setup extern void ata_bmdma_setup ( s#ata_queued_cmd * ) 
ata_bmdma_start extern void ata_bmdma_start ( s#ata_queued_cmd * ) 
ata_bmdma_stop extern void ata_bmdma_stop ( s#ata_queued_cmd * ) 
ata_bmdma_status extern t#u8 ata_bmdma_status ( s#ata_port * ) 
ata_bmdma_port_start extern int ata_bmdma_port_start ( s#ata_port * ) 
ata_bmdma_port_start32 extern int ata_bmdma_port_start32 ( s#ata_port * ) 
ata_pci_bmdma_clear_simplex extern int ata_pci_bmdma_clear_simplex ( s#pci_dev * ) 
ata_pci_bmdma_init extern void ata_pci_bmdma_init ( s#ata_host * ) 
ata_pci_bmdma_prepare_host extern int ata_pci_bmdma_prepare_host ( s#pci_dev * , const s#ata_port_info * const * , s#ata_host * * ) 
ata_pci_bmdma_init_one extern int ata_pci_bmdma_init_one ( s#pci_dev * , const s#ata_port_info * const * , s#scsi_host_template * , void * , int ) 

/* drivers/base/attribute_container.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#device_private struct device_private { s#klist klist_children ; s#klist_node knode_parent ; s#klist_node knode_driver ; s#klist_node knode_bus ; void * driver_data ; s#device * device ; } 
s##of_device_id
s#driver_private struct driver_private { s#kobject kobj ; s#klist klist_devices ; s#klist_node knode_bus ; s#module_kobject * mkobj ; s#device_driver * driver ; } 
s#subsys_private struct subsys_private { s#kset subsys ; s#kset * devices_kset ; s#kset * drivers_kset ; s#klist klist_devices ; s#klist klist_drivers ; s#blocking_notifier_head bus_notifier ; unsigned int drivers_autoprobe : 1 ; s#bus_type * bus ; s#list_head class_interfaces ; s#kset glue_dirs ; s#mutex class_mutex ; s#class * class ; } 
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
attribute_container_classdev_to_container s#attribute_container * attribute_container_classdev_to_container ( s#device * ) 
attribute_container_register int attribute_container_register ( s#attribute_container * ) 
attribute_container_unregister int attribute_container_unregister ( s#attribute_container * ) 
attribute_container_find_class_device s#device * attribute_container_find_class_device ( s#attribute_container * , s#device * ) 

/* drivers/base/bus.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
bus_create_file extern int bus_create_file ( s#bus_type * , s#bus_attribute * ) 
bus_remove_file extern void bus_remove_file ( s#bus_type * , s#bus_attribute * ) 
bus_for_each_dev int bus_for_each_dev ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device s#device * bus_find_device ( s#bus_type * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
bus_find_device_by_name s#device * bus_find_device_by_name ( s#bus_type * , s#device * , const char * ) 
bus_for_each_drv int bus_for_each_drv ( s#bus_type * , s#device_driver * , void * , int ( * ) ( s#device_driver * , void * ) ) 
bus_rescan_devices extern int bus_rescan_devices ( s#bus_type * ) 
device_reprobe extern int device_reprobe ( s#device * ) 
bus_register extern int bus_register ( s#bus_type * ) 
bus_unregister extern void bus_unregister ( s#bus_type * ) 
bus_register_notifier extern int bus_register_notifier ( s#bus_type * , s#notifier_block * ) 
bus_unregister_notifier extern int bus_unregister_notifier ( s#bus_type * , s#notifier_block * ) 
bus_get_kset extern s#kset * bus_get_kset ( s#bus_type * ) 
bus_get_device_klist extern s#klist * bus_get_device_klist ( s#bus_type * ) 
bus_sort_breadthfirst void bus_sort_breadthfirst ( s#bus_type * , int ( * ) ( const s#device * , const s#device * ) ) 

/* drivers/base/class.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##of_device_id
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##blk_integrity
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
__class_register extern int __class_register ( s#class * , s#lock_class_key * ) 
__class_create extern s#class * __class_create ( s#module * , const char * , s#lock_class_key * ) 
s#klist_iter struct klist_iter { s#klist * i_klist ; s#klist_node * i_cur ; } 
s#class_dev_iter struct class_dev_iter { s#klist_iter ki ; const s#device_type * type ; } 
class_dev_iter_init extern void class_dev_iter_init ( s#class_dev_iter * , s#class * , s#device * , const s#device_type * ) 
class_dev_iter_next extern s#device * class_dev_iter_next ( s#class_dev_iter * ) 
class_dev_iter_exit extern void class_dev_iter_exit ( s#class_dev_iter * ) 
class_for_each_device extern int class_for_each_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
class_find_device extern s#device * class_find_device ( s#class * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
show_class_attr_string extern t#ssize_t show_class_attr_string ( s#class * , s#class_attribute * , char * ) 
s##class_compat
class_compat_register s#class_compat * class_compat_register ( const char * ) 
class_compat_unregister void class_compat_unregister ( s#class_compat * ) 
class_compat_create_link int class_compat_create_link ( s#class_compat * , s#device * , s#device * ) 
class_compat_remove_link void class_compat_remove_link ( s#class_compat * , s#device * , s#device * ) 
class_create_file extern int class_create_file ( s#class * , const s#class_attribute * ) 
class_remove_file extern void class_remove_file ( s#class * , const s#class_attribute * ) 
class_unregister extern void class_unregister ( s#class * ) 
class_destroy extern void class_destroy ( s#class * ) 
s#class_interface struct class_interface { s#list_head node ; s#class * class ; int ( * add_dev ) ( s#device * , s#class_interface * ) ; void ( * remove_dev ) ( s#device * , s#class_interface * ) ; } 
class_interface_register extern int class_interface_register ( s#class_interface * ) 
class_interface_unregister extern void class_interface_unregister ( s#class_interface * ) 

/* drivers/base/core.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##block_device_operations
s##request_queue
s##timer_rand_state
s##disk_events
s##blk_integrity
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##dma_coherent_mem
s##dma_map_ops
s##device_node
dev_driver_string extern const char * dev_driver_string ( const s#device * ) 
device_create_bin_file extern int device_create_bin_file ( s#device * , const s#bin_attribute * ) 
device_remove_bin_file extern void device_remove_bin_file ( s#device * , const s#bin_attribute * ) 
device_schedule_callback_owner extern int device_schedule_callback_owner ( s#device * , void ( * ) ( s#device * ) , s#module * ) 
dev_set_name extern int dev_set_name ( s#device * , const char * , ... ) 
device_for_each_child extern int device_for_each_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_find_child extern s#device * device_find_child ( s#device * , void * , int ( * ) ( s#device * , void * ) ) 
device_initialize extern void device_initialize ( s#device * ) 
device_add extern int device_add ( s#device * ) 
device_register extern int device_register ( s#device * ) 
device_del extern void device_del ( s#device * ) 
device_unregister extern void device_unregister ( s#device * ) 
get_device extern s#device * get_device ( s#device * ) 
put_device extern void put_device ( s#device * ) 
device_create_file extern int device_create_file ( s#device * , const s#device_attribute * ) 
device_remove_file extern void device_remove_file ( s#device * , const s#device_attribute * ) 
__root_device_register extern s#device * __root_device_register ( const char * , s#module * ) 
root_device_unregister extern void root_device_unregister ( s#device * ) 
device_create_vargs extern s#device * device_create_vargs ( s#class * , s#device * , t#dev_t , void * , const char * , va_list vargs ) 
device_create extern s#device * device_create ( s#class * , s#device * , t#dev_t , void * , const char * , ... ) 
device_destroy extern void device_destroy ( s#class * , t#dev_t ) 
device_rename extern int device_rename ( s#device * , const char * ) 
e#dpm_order enum dpm_order { DPM_ORDER_NONE , DPM_ORDER_DEV_AFTER_PARENT , DPM_ORDER_PARENT_BEFORE_DEV , DPM_ORDER_DEV_LAST , } 
device_move extern int device_move ( s#device * , s#device * , e#dpm_order ) 
dev_printk extern int dev_printk ( const char * , const s#device * , const char * , ... ) 
dev_emerg extern int dev_emerg ( const s#device * , const char * , ... ) 
dev_alert extern int dev_alert ( const s#device * , const char * , ... ) 
dev_crit extern int dev_crit ( const s#device * , const char * , ... ) 
dev_err extern int dev_err ( const s#device * , const char * , ... ) 
dev_warn extern int dev_warn ( const s#device * , const char * , ... ) 
dev_notice extern int dev_notice ( const s#device * , const char * , ... ) 
_dev_info extern int _dev_info ( const s#device * , const char * , ... ) 

/* drivers/base/cpu.o */
s##sock
s##sysfs_dirent
cpu_sysdev_class extern s#sysdev_class cpu_sysdev_class 
get_cpu_sysdev extern s#sys_device * get_cpu_sysdev ( unsigned ) 

/* drivers/base/dd.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
device_bind_driver extern int device_bind_driver ( s#device * ) 
wait_for_device_probe extern void wait_for_device_probe ( void ) 
device_attach extern int device_attach ( s#device * ) 
driver_attach extern int driver_attach ( s#device_driver * ) 
device_release_driver extern void device_release_driver ( s#device * ) 
dev_get_drvdata extern void * dev_get_drvdata ( const s#device * ) 
dev_set_drvdata extern int dev_set_drvdata ( s#device * , void * ) 

/* drivers/base/devres.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
t#dr_release_t typedef void ( * dr_release_t ) ( s#device * , void * ) 
devres_alloc extern void * devres_alloc ( t#dr_release_t , t#size_t , t#gfp_t ) 
t#dr_match_t typedef int ( * dr_match_t ) ( s#device * , void * , void * ) 
devres_for_each_res extern void devres_for_each_res ( s#device * , t#dr_release_t , t#dr_match_t , void * , void ( * ) ( s#device * , void * , void * ) , void * ) 
devres_free extern void devres_free ( void * ) 
devres_add extern void devres_add ( s#device * , void * ) 
devres_find extern void * devres_find ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_get extern void * devres_get ( s#device * , void * , t#dr_match_t , void * ) 
devres_remove extern void * devres_remove ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_destroy extern int devres_destroy ( s#device * , t#dr_release_t , t#dr_match_t , void * ) 
devres_open_group extern void * devres_open_group ( s#device * , void * , t#gfp_t ) 
devres_close_group extern void devres_close_group ( s#device * , void * ) 
devres_remove_group extern void devres_remove_group ( s#device * , void * ) 
devres_release_group extern int devres_release_group ( s#device * , void * ) 
devm_kzalloc extern void * devm_kzalloc ( s#device * , t#size_t , t#gfp_t ) 
devm_kfree extern void devm_kfree ( s#device * , void * ) 

/* drivers/base/dma-buf.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#dma_buf_attachment struct dma_buf_attachment { s#dma_buf * dmabuf ; s#device * dev ; s#list_head node ; void * priv ; } 
s#dma_buf_ops struct dma_buf_ops { int ( * attach ) ( s#dma_buf * , s#device * , s#dma_buf_attachment * ) ; void ( * detach ) ( s#dma_buf * , s#dma_buf_attachment * ) ; s#sg_table * ( * map_dma_buf ) ( s#dma_buf_attachment * , e#dma_data_direction ) ; void ( * unmap_dma_buf ) ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) ; void ( * release ) ( s#dma_buf * ) ; int ( * begin_cpu_access ) ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) ; void ( * end_cpu_access ) ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) ; void * ( * kmap_atomic ) ( s#dma_buf * , unsigned long ) ; void ( * kunmap_atomic ) ( s#dma_buf * , unsigned long , void * ) ; void * ( * kmap ) ( s#dma_buf * , unsigned long ) ; void ( * kunmap ) ( s#dma_buf * , unsigned long , void * ) ; int ( * mmap ) ( s#dma_buf * , s#vm_area_struct * ) ; void * ( * vmap ) ( s#dma_buf * ) ; void ( * vunmap ) ( s#dma_buf * , void * ) ; } 
s#dma_buf struct dma_buf { t#size_t size ; s#file * file ; s#list_head attachments ; const s#dma_buf_ops * ops ; s#mutex lock ; void * priv ; } 
dma_buf_export s#dma_buf * dma_buf_export ( void * , const s#dma_buf_ops * , t#size_t , int ) 
dma_buf_fd int dma_buf_fd ( s#dma_buf * , int ) 
dma_buf_get s#dma_buf * dma_buf_get ( int ) 
dma_buf_put void dma_buf_put ( s#dma_buf * ) 
dma_buf_attach s#dma_buf_attachment * dma_buf_attach ( s#dma_buf * , s#device * ) 
dma_buf_detach void dma_buf_detach ( s#dma_buf * , s#dma_buf_attachment * ) 
dma_buf_map_attachment s#sg_table * dma_buf_map_attachment ( s#dma_buf_attachment * , e#dma_data_direction ) 
dma_buf_unmap_attachment void dma_buf_unmap_attachment ( s#dma_buf_attachment * , s#sg_table * , e#dma_data_direction ) 
dma_buf_begin_cpu_access int dma_buf_begin_cpu_access ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) 
dma_buf_end_cpu_access void dma_buf_end_cpu_access ( s#dma_buf * , t#size_t , t#size_t , e#dma_data_direction ) 
dma_buf_kmap_atomic void * dma_buf_kmap_atomic ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap_atomic void dma_buf_kunmap_atomic ( s#dma_buf * , unsigned long , void * ) 
dma_buf_kmap void * dma_buf_kmap ( s#dma_buf * , unsigned long ) 
dma_buf_kunmap void dma_buf_kunmap ( s#dma_buf * , unsigned long , void * ) 
dma_buf_mmap int dma_buf_mmap ( s#dma_buf * , s#vm_area_struct * , unsigned long ) 
dma_buf_vmap void * dma_buf_vmap ( s#dma_buf * ) 
dma_buf_vunmap void dma_buf_vunmap ( s#dma_buf * , void * ) 

/* drivers/base/dma-mapping.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
dmam_alloc_coherent extern void * dmam_alloc_coherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_coherent extern void dmam_free_coherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 
dmam_alloc_noncoherent extern void * dmam_alloc_noncoherent ( s#device * , t#size_t , t#dma_addr_t * , t#gfp_t ) 
dmam_free_noncoherent extern void dmam_free_noncoherent ( s#device * , t#size_t , void * , t#dma_addr_t ) 

/* drivers/base/driver.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
driver_for_each_device extern int driver_for_each_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_find_device s#device * driver_find_device ( s#device_driver * , s#device * , void * , int ( * ) ( s#device * , void * ) ) 
driver_create_file extern int driver_create_file ( s#device_driver * , const s#driver_attribute * ) 
driver_remove_file extern void driver_remove_file ( s#device_driver * , const s#driver_attribute * ) 
driver_add_kobj extern int driver_add_kobj ( s#device_driver * , s#kobject * , const char * , ... ) 
get_driver extern s#device_driver * get_driver ( s#device_driver * ) 
put_driver extern void put_driver ( s#device_driver * ) 
driver_register extern int driver_register ( s#device_driver * ) 
driver_unregister extern void driver_unregister ( s#device_driver * ) 
driver_find extern s#device_driver * driver_find ( const char * , s#bus_type * ) 

/* drivers/base/firmware.o */
s##sock
s##sysfs_dirent
firmware_kobj extern s#kobject * firmware_kobj 

/* drivers/base/firmware_class.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s#firmware struct firmware { t#size_t size ; const t#u8 * data ; s#page * * pages ; void * priv ; } 
release_firmware void release_firmware ( const s#firmware * ) 
s##of_device_id
s##dma_coherent_mem
s##dma_map_ops
s##device_node
request_firmware int request_firmware ( const s#firmware * * , const char * , s#device * ) 
request_firmware_nowait int request_firmware_nowait ( s#module * , t#bool , const char * , s#device * , t#gfp_t , void * , void ( * ) ( const s#firmware * , void * ) ) 
cache_firmware int cache_firmware ( const char * ) 
uncache_firmware int uncache_firmware ( const char * ) 

/* drivers/base/memory.o */
register_memory_notifier extern int register_memory_notifier ( s#notifier_block * ) 
unregister_memory_notifier extern void unregister_memory_notifier ( s#notifier_block * ) 
register_memory_isolate_notifier extern int register_memory_isolate_notifier ( s#notifier_block * ) 
unregister_memory_isolate_notifier extern void unregister_memory_isolate_notifier ( s#notifier_block * ) 

/* drivers/base/platform.o */
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
platform_bus extern s#device platform_bus 
s##mfd_cell
platform_get_resource extern s#resource * platform_get_resource ( s#platform_device * , unsigned int , unsigned int ) 
platform_get_irq extern int platform_get_irq ( s#platform_device * , unsigned int ) 
platform_get_resource_byname extern s#resource * platform_get_resource_byname ( s#platform_device * , unsigned int , const char * ) 
platform_get_irq_byname extern int platform_get_irq_byname ( s#platform_device * , const char * ) 
platform_add_devices extern int platform_add_devices ( s#platform_device * * , int ) 
platform_device_put extern void platform_device_put ( s#platform_device * ) 
platform_device_alloc extern s#platform_device * platform_device_alloc ( const char * , int ) 
platform_device_add_resources extern int platform_device_add_resources ( s#platform_device * , const s#resource * , unsigned int ) 
platform_device_add_data extern int platform_device_add_data ( s#platform_device * , const void * , t#size_t ) 
platform_device_add extern int platform_device_add ( s#platform_device * ) 
platform_device_del extern void platform_device_del ( s#platform_device * ) 
platform_device_register extern int platform_device_register ( s#platform_device * ) 
platform_device_unregister extern void platform_device_unregister ( s#platform_device * ) 
platform_device_register_resndata extern s#platform_device * platform_device_register_resndata ( s#device * , const char * , int , const s#resource * , unsigned int , const void * , t#size_t ) 
s#platform_driver struct platform_driver { int ( * probe ) ( s#platform_device * ) ; int ( * remove ) ( s#platform_device * ) ; void ( * shutdown ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * , t#pm_message_t ) ; int ( * resume ) ( s#platform_device * ) ; s#device_driver driver ; const s#platform_device_id * id_table ; } 
platform_driver_register extern int platform_driver_register ( s#platform_driver * ) 
platform_driver_unregister extern void platform_driver_unregister ( s#platform_driver * ) 
platform_driver_probe extern int platform_driver_probe ( s#platform_driver * , int ( * ) ( s#platform_device * ) ) 
platform_create_bundle extern s#platform_device * platform_create_bundle ( s#platform_driver * , int ( * ) ( s#platform_device * ) , s#resource * , unsigned int , const void * , t#size_t ) 
platform_bus_type extern s#bus_type platform_bus_type 

/* drivers/base/power/generic_ops.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
pm_generic_runtime_idle extern int pm_generic_runtime_idle ( s#device * ) 
pm_generic_runtime_suspend extern int pm_generic_runtime_suspend ( s#device * ) 
pm_generic_runtime_resume extern int pm_generic_runtime_resume ( s#device * ) 
pm_generic_suspend extern int pm_generic_suspend ( s#device * ) 
pm_generic_freeze extern int pm_generic_freeze ( s#device * ) 
pm_generic_poweroff extern int pm_generic_poweroff ( s#device * ) 
pm_generic_thaw extern int pm_generic_thaw ( s#device * ) 
pm_generic_resume extern int pm_generic_resume ( s#device * ) 
pm_generic_restore extern int pm_generic_restore ( s#device * ) 
generic_subsys_pm_ops extern s#dev_pm_ops generic_subsys_pm_ops 

/* drivers/base/power/main.o */
dpm_resume_noirq extern void dpm_resume_noirq ( t#pm_message_t ) 
dpm_resume_end extern void dpm_resume_end ( t#pm_message_t ) 
dpm_suspend_noirq extern int dpm_suspend_noirq ( t#pm_message_t ) 
dpm_suspend_start extern int dpm_suspend_start ( t#pm_message_t ) 
__suspend_report_result extern void __suspend_report_result ( const char * , void * , int ) 
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
device_pm_wait_for_dev extern int device_pm_wait_for_dev ( s#device * , s#device * ) 
dpm_for_each_dev extern void dpm_for_each_dev ( void * , void ( * ) ( s#device * , void * ) ) 

/* drivers/base/power/runtime.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
pm_runtime_autosuspend_expiration extern unsigned long pm_runtime_autosuspend_expiration ( s#device * ) 
pm_schedule_suspend extern int pm_schedule_suspend ( s#device * , unsigned int ) 
__pm_runtime_idle extern int __pm_runtime_idle ( s#device * , int ) 
__pm_runtime_suspend extern int __pm_runtime_suspend ( s#device * , int ) 
__pm_runtime_resume extern int __pm_runtime_resume ( s#device * , int ) 
__pm_runtime_set_status extern int __pm_runtime_set_status ( s#device * , unsigned int ) 
pm_runtime_barrier extern int pm_runtime_barrier ( s#device * ) 
__pm_runtime_disable extern void __pm_runtime_disable ( s#device * , t#bool ) 
pm_runtime_enable extern void pm_runtime_enable ( s#device * ) 
pm_runtime_forbid extern void pm_runtime_forbid ( s#device * ) 
pm_runtime_allow extern void pm_runtime_allow ( s#device * ) 
pm_runtime_no_callbacks extern void pm_runtime_no_callbacks ( s#device * ) 
pm_runtime_irq_safe extern void pm_runtime_irq_safe ( s#device * ) 
pm_runtime_set_autosuspend_delay extern void pm_runtime_set_autosuspend_delay ( s#device * , int ) 
__pm_runtime_use_autosuspend extern void __pm_runtime_use_autosuspend ( s#device * , t#bool ) 

/* drivers/base/power/sysfs.o */
power_group_name extern const char power_group_name [ ] 

/* drivers/base/power/wakeup.o */
s##tvec_base
wakeup_source_create extern s#wakeup_source * wakeup_source_create ( const char * ) 
wakeup_source_destroy extern void wakeup_source_destroy ( s#wakeup_source * ) 
wakeup_source_add extern void wakeup_source_add ( s#wakeup_source * ) 
wakeup_source_remove extern void wakeup_source_remove ( s#wakeup_source * ) 
wakeup_source_register extern s#wakeup_source * wakeup_source_register ( const char * ) 
wakeup_source_unregister extern void wakeup_source_unregister ( s#wakeup_source * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
device_wakeup_enable extern int device_wakeup_enable ( s#device * ) 
device_wakeup_disable extern int device_wakeup_disable ( s#device * ) 
device_set_wakeup_capable extern void device_set_wakeup_capable ( s#device * , t#bool ) 
device_init_wakeup extern int device_init_wakeup ( s#device * , t#bool ) 
device_set_wakeup_enable extern int device_set_wakeup_enable ( s#device * , t#bool ) 
__pm_stay_awake extern void __pm_stay_awake ( s#wakeup_source * ) 
pm_stay_awake extern void pm_stay_awake ( s#device * ) 
__pm_relax extern void __pm_relax ( s#wakeup_source * ) 
pm_relax extern void pm_relax ( s#device * ) 
__pm_wakeup_event extern void __pm_wakeup_event ( s#wakeup_source * , unsigned int ) 
pm_wakeup_event extern void pm_wakeup_event ( s#device * , unsigned int ) 

/* drivers/base/sys.o */
s##sock
s##sysfs_dirent
sysdev_create_file extern int sysdev_create_file ( s#sys_device * , s#sysdev_attribute * ) 
sysdev_remove_file extern void sysdev_remove_file ( s#sys_device * , s#sysdev_attribute * ) 
sysdev_class_create_file extern int sysdev_class_create_file ( s#sysdev_class * , s#sysdev_class_attribute * ) 
sysdev_class_remove_file extern void sysdev_class_remove_file ( s#sysdev_class * , s#sysdev_class_attribute * ) 
sysdev_class_register extern int sysdev_class_register ( s#sysdev_class * ) 
sysdev_class_unregister extern void sysdev_class_unregister ( s#sysdev_class * ) 
s#sysdev_driver struct sysdev_driver { s#list_head entry ; int ( * add ) ( s#sys_device * ) ; int ( * remove ) ( s#sys_device * ) ; } 
sysdev_driver_register extern int sysdev_driver_register ( s#sysdev_class * , s#sysdev_driver * ) 
sysdev_driver_unregister extern void sysdev_driver_unregister ( s#sysdev_class * , s#sysdev_driver * ) 
sysdev_register extern int sysdev_register ( s#sys_device * ) 
sysdev_unregister extern void sysdev_unregister ( s#sys_device * ) 
sysdev_store_ulong extern t#ssize_t sysdev_store_ulong ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) 
sysdev_show_ulong extern t#ssize_t sysdev_show_ulong ( s#sys_device * , s#sysdev_attribute * , char * ) 
sysdev_store_int extern t#ssize_t sysdev_store_int ( s#sys_device * , s#sysdev_attribute * , const char * , t#size_t ) 
sysdev_show_int extern t#ssize_t sysdev_show_int ( s#sys_device * , s#sysdev_attribute * , char * ) 

/* drivers/base/syscore.o */
s#syscore_ops struct syscore_ops { s#list_head node ; int ( * suspend ) ( void ) ; void ( * resume ) ( void ) ; void ( * shutdown ) ( void ) ; } 
register_syscore_ops extern void register_syscore_ops ( s#syscore_ops * ) 
unregister_syscore_ops extern void unregister_syscore_ops ( s#syscore_ops * ) 
syscore_suspend extern int syscore_suspend ( void ) 
syscore_resume extern void syscore_resume ( void ) 

/* drivers/base/transport_class.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#transport_class struct transport_class { s#class class ; int ( * setup ) ( s#transport_container * , s#device * , s#device * ) ; int ( * configure ) ( s#transport_container * , s#device * , s#device * ) ; int ( * remove ) ( s#transport_container * , s#device * , s#device * ) ; } 
transport_class_register int transport_class_register ( s#transport_class * ) 
transport_class_unregister void transport_class_unregister ( s#transport_class * ) 
s#anon_transport_class struct anon_transport_class { s#transport_class tclass ; s#attribute_container container ; } 
anon_transport_class_register int anon_transport_class_register ( s#anon_transport_class * ) 
anon_transport_class_unregister void anon_transport_class_unregister ( s#anon_transport_class * ) 
transport_setup_device void transport_setup_device ( s#device * ) 
transport_add_device void transport_add_device ( s#device * ) 
transport_configure_device void transport_configure_device ( s#device * ) 
transport_remove_device void transport_remove_device ( s#device * ) 
transport_destroy_device void transport_destroy_device ( s#device * ) 

/* drivers/bcma/core.o */
s#bcma_host_ops struct bcma_host_ops { t#u8 ( * read8 ) ( s#bcma_device * , t#u16 ) ; t#u16 ( * read16 ) ( s#bcma_device * , t#u16 ) ; t#u32 ( * read32 ) ( s#bcma_device * , t#u16 ) ; void ( * write8 ) ( s#bcma_device * , t#u16 , t#u8 ) ; void ( * write16 ) ( s#bcma_device * , t#u16 , t#u16 ) ; void ( * write32 ) ( s#bcma_device * , t#u16 , t#u32 ) ; t#u32 ( * aread32 ) ( s#bcma_device * , t#u16 ) ; void ( * awrite32 ) ( s#bcma_device * , t#u16 , t#u32 ) ; } 
e#bcma_hosttype enum bcma_hosttype { BCMA_HOSTTYPE_NONE , BCMA_HOSTTYPE_PCI , BCMA_HOSTTYPE_SDIO , } 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##sdio_func
s#bcma_chipinfo struct bcma_chipinfo { t#u16 id ; t#u8 rev ; t#u8 pkg ; } 
s#bcma_chipcommon_pmu struct bcma_chipcommon_pmu { t#u8 rev ; t#u32 crystalfreq ; } 
s#bcma_drv_cc struct bcma_drv_cc { s#bcma_device * core ; t#u32 status ; t#u32 capabilities ; t#u32 capabilities_ext ; t#u16 fast_pwrup_delay ; s#bcma_chipcommon_pmu pmu ; } 
s#bcma_drv_pci struct bcma_drv_pci { s#bcma_device * core ; t#u8 setup_done : 1 ; } 
s#bcma_bus struct bcma_bus { void * mmio ; const s#bcma_host_ops * ops ; e#bcma_hosttype hosttype ; union { s#pci_dev * host_pci ; s#sdio_func * host_sdio ; } ; s#bcma_chipinfo chipinfo ; s#bcma_device * mapped_core ; s#list_head cores ; t#u8 nr_cores ; s#bcma_drv_cc drv_cc ; s#bcma_drv_pci drv_pci ; } 
s#bcma_device_id struct bcma_device_id { t#__u16 manuf ; t#__u16 id ; t#__u8 rev ; t#__u8 class ; } 
s#bcma_device struct bcma_device { s#bcma_bus * bus ; s#bcma_device_id id ; s#device dev ; t#bool dev_registered ; t#u8 core_index ; t#u32 addr ; t#u32 wrap ; void * drvdata ; s#list_head list ; } 
bcma_core_is_enabled extern t#bool bcma_core_is_enabled ( s#bcma_device * ) 
bcma_core_enable extern int bcma_core_enable ( s#bcma_device * , t#u32 ) 

/* drivers/bcma/driver_chipcommon.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##sdio_func
bcma_chipco_gpio_control t#u32 bcma_chipco_gpio_control ( s#bcma_drv_cc * , t#u32 , t#u32 ) 

/* drivers/bcma/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##sdio_func
bcma_bus_register extern int bcma_bus_register ( s#bcma_bus * ) 
bcma_bus_unregister extern void bcma_bus_unregister ( s#bcma_bus * ) 
s#bcma_driver struct bcma_driver { const char * name ; const s#bcma_device_id * id_table ; int ( * probe ) ( s#bcma_device * ) ; void ( * remove ) ( s#bcma_device * ) ; int ( * suspend ) ( s#bcma_device * , t#pm_message_t ) ; int ( * resume ) ( s#bcma_device * ) ; void ( * shutdown ) ( s#bcma_device * ) ; s#device_driver drv ; } 
__bcma_driver_register extern int __bcma_driver_register ( s#bcma_driver * , s#module * ) 
bcma_driver_unregister extern void bcma_driver_unregister ( s#bcma_driver * ) 

/* drivers/block/drbd/drbd_main.o */
e#drbd_conns enum drbd_conns { C_STANDALONE , C_DISCONNECTING , C_UNCONNECTED , C_TIMEOUT , C_BROKEN_PIPE , C_NETWORK_FAILURE , C_PROTOCOL_ERROR , C_TEAR_DOWN , C_WF_CONNECTION , C_WF_REPORT_PARAMS , C_CONNECTED , C_STARTING_SYNC_S , C_STARTING_SYNC_T , C_WF_BITMAP_S , C_WF_BITMAP_T , C_WF_SYNC_UUID , C_SYNC_SOURCE , C_SYNC_TARGET , C_VERIFY_S , C_VERIFY_T , C_PAUSED_SYNC_S , C_PAUSED_SYNC_T , C_AHEAD , C_BEHIND , C_MASK = 31 } 
drbd_conn_str extern const char * drbd_conn_str ( e#drbd_conns ) 
e#drbd_role enum drbd_role { R_UNKNOWN = 0 , R_PRIMARY = 1 , R_SECONDARY = 2 , R_MASK = 3 , } 
drbd_role_str extern const char * drbd_role_str ( e#drbd_role ) 
e#drbd_disk_state enum drbd_disk_state { D_DISKLESS , D_ATTACHING , D_FAILED , D_NEGOTIATING , D_INCONSISTENT , D_OUTDATED , D_UNKNOWN , D_CONSISTENT , D_UP_TO_DATE , D_MASK = 15 } 
drbd_disk_str extern const char * drbd_disk_str ( e#drbd_disk_state ) 
e#drbd_state_rv enum drbd_state_rv { SS_CW_NO_NEED = 4 , SS_CW_SUCCESS = 3 , SS_NOTHING_TO_DO = 2 , SS_SUCCESS = 1 , SS_UNKNOWN_ERROR = 0 , SS_TWO_PRIMARIES = - 1 , SS_NO_UP_TO_DATE_DISK = - 2 , SS_NO_LOCAL_DISK = - 4 , SS_NO_REMOTE_DISK = - 5 , SS_CONNECTED_OUTDATES = - 6 , SS_PRIMARY_NOP = - 7 , SS_RESYNC_RUNNING = - 8 , SS_ALREADY_STANDALONE = - 9 , SS_CW_FAILED_BY_PEER = - 10 , SS_IS_DISKLESS = - 11 , SS_DEVICE_IN_USE = - 12 , SS_NO_NET_CONFIG = - 13 , SS_NO_VERIFY_ALG = - 14 , SS_NEED_CONNECTION = - 15 , SS_LOWER_THAN_OUTDATED = - 16 , SS_NOT_SUPPORTED = - 17 , SS_IN_TRANSIENT_STATE = - 18 , SS_CONCURRENT_ST_CHG = - 19 , SS_AFTER_LAST_ERROR = - 20 , } 
drbd_set_st_err_str extern const char * drbd_set_st_err_str ( e#drbd_state_rv ) 

/* drivers/block/loop.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s#pipe_buf_operations struct pipe_buf_operations { int can_merge ; void * ( * map ) ( s#pipe_inode_info * , s#pipe_buffer * , int ) ; void ( * unmap ) ( s#pipe_inode_info * , s#pipe_buffer * , void * ) ; int ( * confirm ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * release ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; int ( * steal ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; void ( * get ) ( s#pipe_inode_info * , s#pipe_buffer * ) ; } 
s#pipe_buffer struct pipe_buffer { s#page * page ; unsigned int offset , len ; const s#pipe_buf_operations * ops ; unsigned int flags ; unsigned long private ; } 
s#pipe_inode_info struct pipe_inode_info { t#wait_queue_head_t wait ; unsigned int nrbufs , curbuf , buffers ; unsigned int readers ; unsigned int writers ; unsigned int waiting_writers ; unsigned int r_counter ; unsigned int w_counter ; s#page * tmp_page ; s#fasync_struct * fasync_readers ; s#fasync_struct * fasync_writers ; s#inode * inode ; s#pipe_buffer * bufs ; } 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s#loop_device struct loop_device { int lo_number ; int lo_refcnt ; t#loff_t lo_offset ; t#loff_t lo_sizelimit ; int lo_flags ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; char lo_file_name [ 64 ] ; char lo_crypt_name [ 64 ] ; char lo_encrypt_key [ 32 ] ; int lo_encrypt_key_size ; s#loop_func_table * lo_encryption ; t#__u32 lo_init [ 2 ] ; t#uid_t lo_key_owner ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#file * lo_backing_file ; s#block_device * lo_device ; unsigned lo_blocksize ; void * key_data ; t#gfp_t old_gfp_mask ; t#spinlock_t lo_lock ; s#bio_list lo_bio_list ; int lo_state ; s#mutex lo_ctl_mutex ; s#task_struct * lo_thread ; t#wait_queue_head_t lo_event ; s#request_queue * lo_queue ; s#gendisk * lo_disk ; s#list_head lo_list ; } 
s#loop_info64 struct loop_info64 { t#__u64 lo_device ; t#__u64 lo_inode ; t#__u64 lo_rdevice ; t#__u64 lo_offset ; t#__u64 lo_sizelimit ; t#__u32 lo_number ; t#__u32 lo_encrypt_type ; t#__u32 lo_encrypt_key_size ; t#__u32 lo_flags ; t#__u8 lo_file_name [ 64 ] ; t#__u8 lo_crypt_name [ 64 ] ; t#__u8 lo_encrypt_key [ 32 ] ; t#__u64 lo_init [ 2 ] ; } 
s#loop_func_table struct loop_func_table { int number ; int ( * transfer ) ( s#loop_device * , int , s#page * , unsigned , s#page * , unsigned , int , t#sector_t ) ; int ( * init ) ( s#loop_device * , const s#loop_info64 * ) ; int ( * release ) ( s#loop_device * ) ; int ( * ioctl ) ( s#loop_device * , int , unsigned long ) ; s#module * owner ; } 
loop_register_transfer int loop_register_transfer ( s#loop_func_table * ) 
loop_unregister_transfer int loop_unregister_transfer ( int ) 

/* drivers/bluetooth/btmrvl_main.o */
t#bdaddr_t typedef struct { t#__u8 b [ 6 ] ; } __attribute__ ( ( packed ) ) bdaddr_t 
t#__le16 typedef t#__u16 __le16 
s##workqueue_struct
s##tvec_base
s#tasklet_struct struct tasklet_struct { s#tasklet_struct * next ; unsigned long state ; t#atomic_t count ; void ( * func ) ( unsigned long ) ; unsigned long data ; } 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#inquiry_data struct inquiry_data { t#bdaddr_t bdaddr ; t#__u8 pscan_rep_mode ; t#__u8 pscan_period_mode ; t#__u8 pscan_mode ; t#__u8 dev_class [ 3 ] ; t#__le16 clock_offset ; t#__s8 rssi ; t#__u8 ssp_mode ; } 
s#inquiry_entry struct inquiry_entry { s#inquiry_entry * next ; t#__u32 timestamp ; s#inquiry_data data ; } 
s#inquiry_cache struct inquiry_cache { t#spinlock_t lock ; t#__u32 timestamp ; s#inquiry_entry * list ; } 
s#hci_conn_hash struct hci_conn_hash { s#list_head list ; t#spinlock_t lock ; unsigned int acl_num ; unsigned int sco_num ; unsigned int le_num ; } 
s#hci_dev_stats struct hci_dev_stats { t#__u32 err_rx ; t#__u32 err_tx ; t#__u32 cmd_tx ; t#__u32 evt_rx ; t#__u32 acl_tx ; t#__u32 acl_rx ; t#__u32 sco_tx ; t#__u32 sco_rx ; t#__u32 byte_rx ; t#__u32 byte_tx ; } 
s##rfkill
s#hci_dev struct hci_dev { s#list_head list ; t#spinlock_t lock ; t#atomic_t refcnt ; char name [ 8 ] ; unsigned long flags ; t#__u16 id ; t#__u8 bus ; t#__u8 dev_type ; t#bdaddr_t bdaddr ; t#__u8 dev_name [ 248 ] ; t#__u8 eir [ 240 ] ; t#__u8 dev_class [ 3 ] ; t#__u8 major_class ; t#__u8 minor_class ; t#__u8 features [ 8 ] ; t#__u8 commands [ 64 ] ; t#__u8 ssp_mode ; t#__u8 hci_ver ; t#__u16 hci_rev ; t#__u8 lmp_ver ; t#__u16 manufacturer ; t#__le16 lmp_subver ; t#__u16 voice_setting ; t#__u8 io_capability ; t#__u16 pkt_type ; t#__u16 esco_type ; t#__u16 link_policy ; t#__u16 link_mode ; t#__u32 idle_timeout ; t#__u16 sniff_min_interval ; t#__u16 sniff_max_interval ; unsigned int auto_accept_delay ; unsigned long quirks ; t#atomic_t cmd_cnt ; unsigned int acl_cnt ; unsigned int sco_cnt ; unsigned int le_cnt ; unsigned int acl_mtu ; unsigned int sco_mtu ; unsigned int le_mtu ; unsigned int acl_pkts ; unsigned int sco_pkts ; unsigned int le_pkts ; unsigned long acl_last_tx ; unsigned long sco_last_tx ; unsigned long le_last_tx ; s#workqueue_struct * workqueue ; s#work_struct power_on ; s#work_struct power_off ; s#timer_list off_timer ; s#timer_list cmd_timer ; s#tasklet_struct cmd_task ; s#tasklet_struct rx_task ; s#tasklet_struct tx_task ; s#sk_buff_head rx_q ; s#sk_buff_head raw_q ; s#sk_buff_head cmd_q ; s#sk_buff * sent_cmd ; s#sk_buff * reassembly [ 4 ] ; s#mutex req_lock ; t#wait_queue_head_t req_wait_q ; t#__u32 req_status ; t#__u32 req_result ; t#__u16 init_last_cmd ; s#inquiry_cache inq_cache ; s#hci_conn_hash conn_hash ; s#list_head blacklist ; s#list_head uuids ; s#list_head link_keys ; s#list_head remote_oob_data ; s#hci_dev_stats stat ; s#sk_buff_head driver_init ; void * driver_data ; void * core_data ; t#atomic_t promisc ; s#dentry * debugfs ; s#device * parent ; s#device dev ; s#rfkill * rfkill ; s#module * owner ; int ( * open ) ( s#hci_dev * ) ; int ( * close ) ( s#hci_dev * ) ; int ( * flush ) ( s#hci_dev * ) ; int ( * send ) ( s#sk_buff * ) ; void ( * destruct ) ( s#hci_dev * ) ; void ( * notify ) ( s#hci_dev * , unsigned int ) ; int ( * ioctl ) ( s#hci_dev * , unsigned int , unsigned long ) ; } 
s#btmrvl_device struct btmrvl_device { void * card ; s#hci_dev * hcidev ; t#u8 dev_type ; t#u8 tx_dnld_rdy ; t#u8 psmode ; t#u8 pscmd ; t#u8 hsmode ; t#u8 hscmd ; t#u16 gpio_gap ; t#u8 hscfgcmd ; t#u8 sendcmdflag ; } 
s#btmrvl_adapter struct btmrvl_adapter { t#u32 int_count ; s#sk_buff_head tx_queue ; t#u8 psmode ; t#u8 ps_state ; t#u8 hs_state ; t#u8 wakeup_tries ; t#wait_queue_head_t cmd_wait_q ; t#u8 cmd_complete ; } 
s#btmrvl_thread struct btmrvl_thread { s#task_struct * task ; t#wait_queue_head_t wait_q ; void * priv ; } 
s#btmrvl_private struct btmrvl_private { s#btmrvl_device btmrvl_dev ; s#btmrvl_adapter * adapter ; s#btmrvl_thread main_thread ; int ( * hw_host_to_card ) ( s#btmrvl_private * , t#u8 * , t#u16 ) ; int ( * hw_wakeup_firmware ) ( s#btmrvl_private * ) ; int ( * hw_process_int_status ) ( s#btmrvl_private * ) ; t#spinlock_t driver_lock ; void * debugfs_data ; } 
btmrvl_interrupt void btmrvl_interrupt ( s#btmrvl_private * ) 
btmrvl_check_evtpkt void btmrvl_check_evtpkt ( s#btmrvl_private * , s#sk_buff * ) 
btmrvl_process_event int btmrvl_process_event ( s#btmrvl_private * , s#sk_buff * ) 
btmrvl_send_module_cfg_cmd int btmrvl_send_module_cfg_cmd ( s#btmrvl_private * , int ) 
btmrvl_enable_ps int btmrvl_enable_ps ( s#btmrvl_private * ) 
btmrvl_register_hdev int btmrvl_register_hdev ( s#btmrvl_private * ) 
btmrvl_add_card s#btmrvl_private * btmrvl_add_card ( void * ) 
btmrvl_remove_card int btmrvl_remove_card ( s#btmrvl_private * ) 

/* drivers/cdrom/cdrom.o */
s#cdrom_msf0 struct cdrom_msf0 { t#__u8 minute ; t#__u8 second ; t#__u8 frame ; } 
u#cdrom_addr union cdrom_addr { s#cdrom_msf0 msf ; int lba ; } 
s#cdrom_multisession struct cdrom_multisession { u#cdrom_addr addr ; t#__u8 xa_flag ; t#__u8 addr_format ; } 
s#cdrom_mcn struct cdrom_mcn { t#__u8 medium_catalog_number [ 14 ] ; } 
s#request_sense struct request_sense { t#__u8 valid : 1 ; t#__u8 error_code : 7 ; t#__u8 segment_number ; t#__u8 reserved1 : 2 ; t#__u8 ili : 1 ; t#__u8 reserved2 : 1 ; t#__u8 sense_key : 4 ; t#__u8 information [ 4 ] ; t#__u8 add_sense_len ; t#__u8 command_info [ 4 ] ; t#__u8 asc ; t#__u8 ascq ; t#__u8 fruc ; t#__u8 sks [ 3 ] ; t#__u8 asb [ 46 ] ; } 
s#packet_command struct packet_command { unsigned char cmd [ 12 ] ; unsigned char * buffer ; unsigned int buflen ; int stat ; s#request_sense * sense ; unsigned char data_direction ; int quiet ; int timeout ; void * reserved [ 1 ] ; } 
s#cdrom_device_ops struct cdrom_device_ops { int ( * open ) ( s#cdrom_device_info * , int ) ; void ( * release ) ( s#cdrom_device_info * ) ; int ( * drive_status ) ( s#cdrom_device_info * , int ) ; unsigned int ( * check_events ) ( s#cdrom_device_info * , unsigned int , int ) ; int ( * media_changed ) ( s#cdrom_device_info * , int ) ; int ( * tray_move ) ( s#cdrom_device_info * , int ) ; int ( * lock_door ) ( s#cdrom_device_info * , int ) ; int ( * select_speed ) ( s#cdrom_device_info * , int ) ; int ( * select_disc ) ( s#cdrom_device_info * , int ) ; int ( * get_last_session ) ( s#cdrom_device_info * , s#cdrom_multisession * ) ; int ( * get_mcn ) ( s#cdrom_device_info * , s#cdrom_mcn * ) ; int ( * reset ) ( s#cdrom_device_info * ) ; int ( * audio_ioctl ) ( s#cdrom_device_info * , unsigned int , void * ) ; const int capability ; int n_minors ; int ( * generic_packet ) ( s#cdrom_device_info * , s#packet_command * ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##tvec_base
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s#cdrom_device_info struct cdrom_device_info { s#cdrom_device_ops * ops ; s#list_head list ; s#gendisk * disk ; void * handle ; int mask ; int speed ; int capacity ; unsigned int options : 30 ; unsigned mc_flags : 2 ; unsigned int vfs_events ; unsigned int ioctl_events ; int use_count ; char name [ 20 ] ; t#__u8 sanyo_slot : 2 ; t#__u8 reserved : 6 ; int cdda_method ; t#__u8 last_sense ; t#__u8 media_written ; unsigned short mmc3_profile ; int for_data ; int ( * exit ) ( s#cdrom_device_info * ) ; int mrw_mode_page ; } 
cdrom_check_events extern unsigned int cdrom_check_events ( s#cdrom_device_info * , unsigned int ) 
cdrom_get_last_written extern int cdrom_get_last_written ( s#cdrom_device_info * , long * ) 
register_cdrom extern int register_cdrom ( s#cdrom_device_info * ) 
unregister_cdrom extern void unregister_cdrom ( s#cdrom_device_info * ) 
cdrom_open extern int cdrom_open ( s#cdrom_device_info * , s#block_device * , t#fmode_t ) 
cdrom_release extern void cdrom_release ( s#cdrom_device_info * , t#fmode_t ) 
cdrom_ioctl extern int cdrom_ioctl ( s#cdrom_device_info * , s#block_device * , t#fmode_t , unsigned int , unsigned long ) 
cdrom_media_changed extern int cdrom_media_changed ( s#cdrom_device_info * ) 
cdrom_number_of_slots extern int cdrom_number_of_slots ( s#cdrom_device_info * ) 
cdrom_mode_select extern int cdrom_mode_select ( s#cdrom_device_info * , s#packet_command * ) 
cdrom_mode_sense extern int cdrom_mode_sense ( s#cdrom_device_info * , s#packet_command * , int , int ) 
init_cdrom_command extern void init_cdrom_command ( s#packet_command * , void * , int , int ) 
s#media_event_desc struct media_event_desc { t#__u8 reserved1 : 4 ; t#__u8 media_event_code : 4 ; t#__u8 reserved2 : 6 ; t#__u8 media_present : 1 ; t#__u8 door_open : 1 ; t#__u8 start_slot ; t#__u8 end_slot ; } 
cdrom_get_media_event extern int cdrom_get_media_event ( s#cdrom_device_info * , s#media_event_desc * ) 

/* drivers/char/agp/backend.o */
s#agp_version struct agp_version { t#u16 major ; t#u16 minor ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#aper_size_type enum aper_size_type { U8_APER_SIZE , U16_APER_SIZE , U32_APER_SIZE , LVL2_APER_SIZE , FIXED_APER_SIZE } 
s#gatt_mask struct gatt_mask { unsigned long mask ; t#u32 type ; } 
s#agp_memory struct agp_memory { s#agp_memory * next ; s#agp_memory * prev ; s#agp_bridge_data * bridge ; s#page * * pages ; t#size_t page_count ; int key ; int num_scratch_pages ; t#off_t pg_start ; t#u32 type ; t#u32 physical ; t#bool is_bound ; t#bool is_flushed ; s#list_head mapped_list ; s#scatterlist * sg_list ; int num_sg ; } 
s#agp_bridge_driver struct agp_bridge_driver { s#module * owner ; const void * aperture_sizes ; int num_aperture_sizes ; e#aper_size_type size_type ; t#bool cant_use_aperture ; t#bool needs_scratch_page ; const s#gatt_mask * masks ; int ( * fetch_size ) ( void ) ; int ( * configure ) ( void ) ; void ( * agp_enable ) ( s#agp_bridge_data * , t#u32 ) ; void ( * cleanup ) ( void ) ; void ( * tlb_flush ) ( s#agp_memory * ) ; unsigned long ( * mask_memory ) ( s#agp_bridge_data * , t#dma_addr_t , int ) ; void ( * cache_flush ) ( void ) ; int ( * create_gatt_table ) ( s#agp_bridge_data * ) ; int ( * free_gatt_table ) ( s#agp_bridge_data * ) ; int ( * insert_memory ) ( s#agp_memory * , t#off_t , int ) ; int ( * remove_memory ) ( s#agp_memory * , t#off_t , int ) ; s#agp_memory * ( * alloc_by_type ) ( t#size_t , int ) ; void ( * free_by_type ) ( s#agp_memory * ) ; s#page * ( * agp_alloc_page ) ( s#agp_bridge_data * ) ; int ( * agp_alloc_pages ) ( s#agp_bridge_data * , s#agp_memory * , t#size_t ) ; void ( * agp_destroy_page ) ( s#page * , int ) ; void ( * agp_destroy_pages ) ( s#agp_memory * ) ; int ( * agp_type_to_mask_type ) ( s#agp_bridge_data * , int ) ; } 
s##proc_dir_entry
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
e#chipset_type enum chipset_type { NOT_SUPPORTED , SUPPORTED , } 
s#agp_bridge_data struct agp_bridge_data { const s#agp_version * version ; const s#agp_bridge_driver * driver ; const s#vm_operations_struct * vm_ops ; void * previous_size ; void * current_size ; void * dev_private_data ; s#pci_dev * dev ; t#u32 * gatt_table ; t#u32 * gatt_table_real ; unsigned long scratch_page ; s#page * scratch_page_page ; t#dma_addr_t scratch_page_dma ; unsigned long gart_bus_addr ; unsigned long gatt_bus_addr ; t#u32 mode ; e#chipset_type type ; unsigned long * key_list ; t#atomic_t current_memory_agp ; t#atomic_t agp_in_use ; int max_memory_agp ; int aperture_size_idx ; int capndx ; int flags ; char major_version ; char minor_version ; s#list_head list ; t#u32 apbase_config ; s#list_head mapped_list ; t#spinlock_t mapped_lock ; } 
agp_bridge extern s#agp_bridge_data * agp_bridge 
agp_bridges extern s#list_head agp_bridges 
agp_find_bridge extern s#agp_bridge_data * ( * agp_find_bridge ) ( s#pci_dev * ) 
agp_backend_acquire extern s#agp_bridge_data * agp_backend_acquire ( s#pci_dev * ) 
agp_backend_release extern void agp_backend_release ( s#agp_bridge_data * ) 
agp_alloc_bridge s#agp_bridge_data * agp_alloc_bridge ( void ) 
agp_put_bridge void agp_put_bridge ( s#agp_bridge_data * ) 
agp_add_bridge int agp_add_bridge ( s#agp_bridge_data * ) 
agp_remove_bridge void agp_remove_bridge ( s#agp_bridge_data * ) 
agp_off extern int agp_off 
agp_try_unsupported_boot extern int agp_try_unsupported_boot 

/* drivers/char/agp/generic.o */
agp_memory_reserved int agp_memory_reserved 
agp_free_key void agp_free_key ( int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
agp_alloc_page_array void agp_alloc_page_array ( t#size_t , s#agp_memory * ) 
agp_free_page_array void agp_free_page_array ( s#agp_memory * ) 
agp_create_memory s#agp_memory * agp_create_memory ( int ) 
agp_free_memory extern void agp_free_memory ( s#agp_memory * ) 
agp_allocate_memory extern s#agp_memory * agp_allocate_memory ( s#agp_bridge_data * , t#size_t , t#u32 ) 
agp_num_entries int agp_num_entries ( void ) 
s#agp_kern_info struct agp_kern_info { s#agp_version version ; s#pci_dev * device ; e#chipset_type chipset ; unsigned long mode ; unsigned long aper_base ; t#size_t aper_size ; int max_memory ; int current_memory ; t#bool cant_use_aperture ; unsigned long page_mask ; const s#vm_operations_struct * vm_ops ; } 
agp_copy_info extern int agp_copy_info ( s#agp_bridge_data * , s#agp_kern_info * ) 
agp_bind_memory extern int agp_bind_memory ( s#agp_memory * , t#off_t ) 
agp_unbind_memory extern int agp_unbind_memory ( s#agp_memory * ) 
agp_collect_device_status t#u32 agp_collect_device_status ( s#agp_bridge_data * , t#u32 , t#u32 ) 
agp_device_command void agp_device_command ( t#u32 , t#bool ) 
get_agp_version void get_agp_version ( s#agp_bridge_data * ) 
agp_generic_enable void agp_generic_enable ( s#agp_bridge_data * , t#u32 ) 
agp_generic_create_gatt_table int agp_generic_create_gatt_table ( s#agp_bridge_data * ) 
agp_generic_free_gatt_table int agp_generic_free_gatt_table ( s#agp_bridge_data * ) 
agp_generic_insert_memory int agp_generic_insert_memory ( s#agp_memory * , t#off_t , int ) 
agp_generic_remove_memory int agp_generic_remove_memory ( s#agp_memory * , t#off_t , int ) 
agp_generic_alloc_by_type s#agp_memory * agp_generic_alloc_by_type ( t#size_t , int ) 
agp_generic_free_by_type void agp_generic_free_by_type ( s#agp_memory * ) 
agp_generic_alloc_user s#agp_memory * agp_generic_alloc_user ( t#size_t , int ) 
agp_generic_alloc_pages int agp_generic_alloc_pages ( s#agp_bridge_data * , s#agp_memory * , t#size_t ) 
agp_generic_alloc_page s#page * agp_generic_alloc_page ( s#agp_bridge_data * ) 
agp_generic_destroy_pages void agp_generic_destroy_pages ( s#agp_memory * ) 
agp_generic_destroy_page void agp_generic_destroy_page ( s#page * , int ) 
agp_enable extern void agp_enable ( s#agp_bridge_data * , t#u32 ) 
global_cache_flush void global_cache_flush ( void ) 
agp_generic_mask_memory unsigned long agp_generic_mask_memory ( s#agp_bridge_data * , t#dma_addr_t , int ) 
agp_generic_type_to_mask_type int agp_generic_type_to_mask_type ( s#agp_bridge_data * , int ) 
agp3_generic_fetch_size int agp3_generic_fetch_size ( void ) 
agp3_generic_tlbflush void agp3_generic_tlbflush ( s#agp_memory * ) 
agp3_generic_configure int agp3_generic_configure ( void ) 
agp3_generic_cleanup void agp3_generic_cleanup ( void ) 
s#aper_size_info_16 struct aper_size_info_16 { int size ; int num_entries ; int page_order ; t#u16 size_value ; } 
agp3_generic_sizes extern const s#aper_size_info_16 agp3_generic_sizes [ ] 

/* drivers/char/hw_random/core.o */
s#hwrng struct hwrng { const char * name ; int ( * init ) ( s#hwrng * ) ; void ( * cleanup ) ( s#hwrng * ) ; int ( * data_present ) ( s#hwrng * , int ) ; int ( * data_read ) ( s#hwrng * , t#u32 * ) ; int ( * read ) ( s#hwrng * , void * , t#size_t , t#bool ) ; unsigned long priv ; s#list_head list ; } 
hwrng_register extern int hwrng_register ( s#hwrng * ) 
hwrng_unregister extern void hwrng_unregister ( s#hwrng * ) 

/* drivers/char/ipmi/ipmi_msghandler.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#ipmi_smi_watcher struct ipmi_smi_watcher { s#list_head link ; s#module * owner ; void ( * new_smi ) ( int , s#device * ) ; void ( * smi_gone ) ( int ) ; } 
ipmi_smi_watcher_register int ipmi_smi_watcher_register ( s#ipmi_smi_watcher * ) 
ipmi_smi_watcher_unregister int ipmi_smi_watcher_unregister ( s#ipmi_smi_watcher * ) 
s#ipmi_addr struct ipmi_addr { int addr_type ; short channel ; char data [ 32 ] ; } 
ipmi_validate_addr int ipmi_validate_addr ( s#ipmi_addr * , int ) 
ipmi_addr_length unsigned int ipmi_addr_length ( int ) 
s##ipmi_user
t#ipmi_user_t typedef s#ipmi_user * ipmi_user_t 
s#kernel_ipmi_msg struct kernel_ipmi_msg { unsigned char netfn ; unsigned char cmd ; unsigned short data_len ; unsigned char * data ; } 
s#ipmi_recv_msg struct ipmi_recv_msg { s#list_head link ; int recv_type ; t#ipmi_user_t user ; s#ipmi_addr addr ; long msgid ; s#kernel_ipmi_msg msg ; void * user_msg_data ; void ( * done ) ( s#ipmi_recv_msg * ) ; unsigned char msg_data [ 272 ] ; } 
s#ipmi_user_hndl struct ipmi_user_hndl { void ( * ipmi_recv_hndl ) ( s#ipmi_recv_msg * , void * ) ; void ( * ipmi_watchdog_pretimeout ) ( void * ) ; } 
ipmi_create_user int ipmi_create_user ( unsigned int , s#ipmi_user_hndl * , void * , t#ipmi_user_t * ) 
e#ipmi_addr_src enum ipmi_addr_src { SI_INVALID = 0 , SI_HOTMOD , SI_HARDCODED , SI_SPMI , SI_ACPI , SI_SMBIOS , SI_PCI , SI_DEVICETREE , SI_DEFAULT } 
u#ipmi_smi_info_union union ipmi_smi_info_union { struct { void * acpi_handle ; } acpi_info ; } 
s#ipmi_smi_info struct ipmi_smi_info { e#ipmi_addr_src addr_src ; s#device * dev ; u#ipmi_smi_info_union addr_info ; } 
ipmi_get_smi_info extern int ipmi_get_smi_info ( int , s#ipmi_smi_info * ) 
ipmi_destroy_user int ipmi_destroy_user ( t#ipmi_user_t ) 
ipmi_get_version void ipmi_get_version ( t#ipmi_user_t , unsigned char * , unsigned char * ) 
ipmi_set_my_address int ipmi_set_my_address ( t#ipmi_user_t , unsigned int , unsigned char ) 
ipmi_get_my_address int ipmi_get_my_address ( t#ipmi_user_t , unsigned int , unsigned char * ) 
ipmi_set_my_LUN int ipmi_set_my_LUN ( t#ipmi_user_t , unsigned int , unsigned char ) 
ipmi_get_my_LUN int ipmi_get_my_LUN ( t#ipmi_user_t , unsigned int , unsigned char * ) 
ipmi_get_maintenance_mode int ipmi_get_maintenance_mode ( t#ipmi_user_t ) 
ipmi_set_maintenance_mode int ipmi_set_maintenance_mode ( t#ipmi_user_t , int ) 
ipmi_set_gets_events int ipmi_set_gets_events ( t#ipmi_user_t , t#bool ) 
ipmi_register_for_cmd int ipmi_register_for_cmd ( t#ipmi_user_t , unsigned char , unsigned char , unsigned int ) 
ipmi_unregister_for_cmd int ipmi_unregister_for_cmd ( t#ipmi_user_t , unsigned char , unsigned char , unsigned int ) 
ipmi_request_settime int ipmi_request_settime ( t#ipmi_user_t , s#ipmi_addr * , long , s#kernel_ipmi_msg * , void * , int , int , unsigned int ) 
ipmi_request_supply_msgs int ipmi_request_supply_msgs ( t#ipmi_user_t , s#ipmi_addr * , long , s#kernel_ipmi_msg * , void * , void * , s#ipmi_recv_msg * , int ) 
s##ipmi_smi
t#ipmi_smi_t typedef s#ipmi_smi * ipmi_smi_t 
ipmi_smi_add_proc_entry int ipmi_smi_add_proc_entry ( t#ipmi_smi_t , char * , const s#file_operations * , void * ) 
ipmi_poll_interface void ipmi_poll_interface ( t#ipmi_user_t ) 
s#ipmi_smi_msg struct ipmi_smi_msg { s#list_head link ; long msgid ; void * user_data ; int data_size ; unsigned char data [ 272 ] ; int rsp_size ; unsigned char rsp [ 272 ] ; void ( * done ) ( s#ipmi_smi_msg * ) ; } 
s#ipmi_smi_handlers struct ipmi_smi_handlers { s#module * owner ; int ( * start_processing ) ( void * , t#ipmi_smi_t ) ; int ( * get_smi_info ) ( void * , s#ipmi_smi_info * ) ; void ( * sender ) ( void * , s#ipmi_smi_msg * , int ) ; void ( * request_events ) ( void * ) ; void ( * set_need_watch ) ( void * , int ) ; void ( * set_run_to_completion ) ( void * , int ) ; void ( * poll ) ( void * ) ; void ( * set_maintenance_mode ) ( void * , int ) ; int ( * inc_usecount ) ( void * ) ; void ( * dec_usecount ) ( void * ) ; } 
s#ipmi_device_id struct ipmi_device_id { unsigned char device_id ; unsigned char device_revision ; unsigned char firmware_revision_1 ; unsigned char firmware_revision_2 ; unsigned char ipmi_version ; unsigned char additional_device_support ; unsigned int manufacturer_id ; unsigned int product_id ; unsigned char aux_firmware_revision [ 4 ] ; unsigned int aux_firmware_revision_set : 1 ; } 
ipmi_register_smi int ipmi_register_smi ( s#ipmi_smi_handlers * , void * , s#ipmi_device_id * , s#device * , const char * , unsigned char ) 
ipmi_unregister_smi int ipmi_unregister_smi ( t#ipmi_smi_t ) 
ipmi_smi_msg_received void ipmi_smi_msg_received ( t#ipmi_smi_t , s#ipmi_smi_msg * ) 
ipmi_smi_watchdog_pretimeout void ipmi_smi_watchdog_pretimeout ( t#ipmi_smi_t ) 
ipmi_alloc_smi_msg s#ipmi_smi_msg * ipmi_alloc_smi_msg ( void ) 
ipmi_free_recv_msg void ipmi_free_recv_msg ( s#ipmi_recv_msg * ) 

/* drivers/char/misc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##serial_icounter_struct
s##poll_table_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#miscdevice struct miscdevice { int minor ; const char * name ; const s#file_operations * fops ; s#list_head list ; s#device * parent ; s#device * this_device ; const char * nodename ; t#mode_t mode ; } 
misc_register extern int misc_register ( s#miscdevice * ) 
misc_deregister extern int misc_deregister ( s#miscdevice * ) 

/* drivers/char/random.o */
add_device_randomness extern void add_device_randomness ( const void * , unsigned int ) 
add_input_randomness extern void add_input_randomness ( unsigned int , unsigned int , unsigned int ) 
get_random_bytes extern void get_random_bytes ( void * , int ) 
get_random_bytes_arch extern void get_random_bytes_arch ( void * , int ) 
generate_random_uuid void generate_random_uuid ( unsigned char [ 16 ] ) 
add_hwgenerator_randomness void add_hwgenerator_randomness ( const char * , t#size_t ) 

/* drivers/connector/connector.o */
s#cb_id struct cb_id { t#__u32 idx ; t#__u32 val ; } 
s#cn_msg struct cn_msg { s#cb_id id ; t#__u32 seq ; t#__u32 ack ; t#__u16 len ; t#__u16 flags ; t#__u8 data [ 0 ] ; } 
cn_netlink_send int cn_netlink_send ( s#cn_msg * , t#u32 , t#gfp_t ) 
s#ucred struct ucred { t#__u32 pid ; t#__u32 uid ; t#__u32 gid ; } 
s#netlink_skb_parms struct netlink_skb_parms { s#ucred creds ; t#__u32 pid ; t#__u32 dst_group ; } 
cn_add_callback int cn_add_callback ( s#cb_id * , const char * , void ( * ) ( s#cn_msg * , s#netlink_skb_parms * ) ) 
cn_del_callback void cn_del_callback ( s#cb_id * ) 

/* drivers/cpufreq/cpufreq.o */
s#cpufreq_cpuinfo struct cpufreq_cpuinfo { unsigned int max_freq ; unsigned int min_freq ; unsigned int transition_latency ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#cpufreq_governor struct cpufreq_governor { char name [ 16 ] ; int ( * governor ) ( s#cpufreq_policy * , unsigned int ) ; t#ssize_t ( * show_setspeed ) ( s#cpufreq_policy * , char * ) ; int ( * store_setspeed ) ( s#cpufreq_policy * , unsigned int ) ; unsigned int max_transition_latency ; s#list_head governor_list ; s#module * owner ; } 
s#cpufreq_real_policy struct cpufreq_real_policy { unsigned int min ; unsigned int max ; unsigned int policy ; s#cpufreq_governor * governor ; } 
s#cpufreq_policy struct cpufreq_policy { t#cpumask_var_t cpus ; t#cpumask_var_t related_cpus ; unsigned int shared_type ; unsigned int cpu ; s#cpufreq_cpuinfo cpuinfo ; unsigned int min ; unsigned int max ; unsigned int cur ; unsigned int policy ; s#cpufreq_governor * governor ; s#work_struct update ; s#cpufreq_real_policy user_policy ; s#kobject kobj ; s#completion kobj_unregister ; } 
cpufreq_cpu_get s#cpufreq_policy * cpufreq_cpu_get ( unsigned int ) 
cpufreq_cpu_put void cpufreq_cpu_put ( s#cpufreq_policy * ) 
s#cpufreq_freqs struct cpufreq_freqs { unsigned int cpu ; unsigned int old ; unsigned int new ; t#u8 flags ; } 
cpufreq_notify_transition void cpufreq_notify_transition ( s#cpufreq_freqs * , unsigned int ) 
cpufreq_global_kobject extern s#kobject * cpufreq_global_kobject 
cpufreq_quick_get unsigned int cpufreq_quick_get ( unsigned int ) 
cpufreq_quick_get_max unsigned int cpufreq_quick_get_max ( unsigned int ) 
cpufreq_get unsigned int cpufreq_get ( unsigned int ) 
cpufreq_register_notifier int cpufreq_register_notifier ( s#notifier_block * , unsigned int ) 
cpufreq_unregister_notifier int cpufreq_unregister_notifier ( s#notifier_block * , unsigned int ) 
__cpufreq_driver_target extern int __cpufreq_driver_target ( s#cpufreq_policy * , unsigned int , unsigned int ) 
cpufreq_driver_target extern int cpufreq_driver_target ( s#cpufreq_policy * , unsigned int , unsigned int ) 
__cpufreq_driver_getavg extern int __cpufreq_driver_getavg ( s#cpufreq_policy * , unsigned int ) 
cpufreq_register_governor int cpufreq_register_governor ( s#cpufreq_governor * ) 
cpufreq_unregister_governor void cpufreq_unregister_governor ( s#cpufreq_governor * ) 
cpufreq_get_policy int cpufreq_get_policy ( s#cpufreq_policy * , unsigned int ) 
cpufreq_update_policy int cpufreq_update_policy ( unsigned int ) 
s#freq_attr struct freq_attr { s#attribute attr ; t#ssize_t ( * show ) ( s#cpufreq_policy * , char * ) ; t#ssize_t ( * store ) ( s#cpufreq_policy * , const char * , t#size_t ) ; } 
s#cpufreq_driver struct cpufreq_driver { s#module * owner ; char name [ 16 ] ; t#u8 flags ; int ( * init ) ( s#cpufreq_policy * ) ; int ( * verify ) ( s#cpufreq_policy * ) ; int ( * setpolicy ) ( s#cpufreq_policy * ) ; int ( * target ) ( s#cpufreq_policy * , unsigned int , unsigned int ) ; unsigned int ( * get ) ( unsigned int ) ; unsigned int ( * getavg ) ( s#cpufreq_policy * , unsigned int ) ; int ( * bios_limit ) ( int , unsigned int * ) ; int ( * exit ) ( s#cpufreq_policy * ) ; int ( * suspend ) ( s#cpufreq_policy * ) ; int ( * resume ) ( s#cpufreq_policy * ) ; s#freq_attr * * attr ; } 
cpufreq_register_driver int cpufreq_register_driver ( s#cpufreq_driver * ) 
cpufreq_unregister_driver int cpufreq_unregister_driver ( s#cpufreq_driver * ) 

/* drivers/cpufreq/freq_table.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#cpufreq_frequency_table struct cpufreq_frequency_table { unsigned int index ; unsigned int frequency ; } 
cpufreq_frequency_table_cpuinfo int cpufreq_frequency_table_cpuinfo ( s#cpufreq_policy * , s#cpufreq_frequency_table * ) 
cpufreq_frequency_table_verify int cpufreq_frequency_table_verify ( s#cpufreq_policy * , s#cpufreq_frequency_table * ) 
cpufreq_frequency_table_target int cpufreq_frequency_table_target ( s#cpufreq_policy * , s#cpufreq_frequency_table * , unsigned int , unsigned int , unsigned int * ) 
cpufreq_freq_attr_scaling_available_freqs extern s#freq_attr cpufreq_freq_attr_scaling_available_freqs 
cpufreq_frequency_table_get_attr void cpufreq_frequency_table_get_attr ( s#cpufreq_frequency_table * , unsigned int ) 
cpufreq_frequency_table_put_attr void cpufreq_frequency_table_put_attr ( unsigned int ) 
cpufreq_frequency_get_table s#cpufreq_frequency_table * cpufreq_frequency_get_table ( unsigned int ) 

/* drivers/cpuidle/cpuidle.o */
cpuidle_pause_and_lock extern void cpuidle_pause_and_lock ( void ) 
cpuidle_resume_and_unlock extern void cpuidle_resume_and_unlock ( void ) 
s#cpuidle_state struct cpuidle_state { char name [ 16 ] ; char desc [ 32 ] ; void * driver_data ; unsigned int flags ; unsigned int exit_latency ; unsigned int power_usage ; unsigned int target_residency ; unsigned long long usage ; unsigned long long time ; int ( * enter ) ( s#cpuidle_device * , s#cpuidle_state * ) ; } 
s##sock
s##sysfs_dirent
s#cpuidle_state_kobj struct cpuidle_state_kobj { s#cpuidle_state * state ; s#completion kobj_unregister ; s#kobject kobj ; } 
s#cpuidle_device struct cpuidle_device { unsigned int registered : 1 ; unsigned int enabled : 1 ; unsigned int power_specified : 1 ; unsigned int cpu ; int last_residency ; int state_count ; s#cpuidle_state states [ 8 ] ; s#cpuidle_state_kobj * kobjs [ 8 ] ; s#cpuidle_state * last_state ; s#list_head device_list ; s#kobject kobj ; s#completion kobj_unregister ; void * governor_data ; s#cpuidle_state * safe_state ; int ( * prepare ) ( s#cpuidle_device * ) ; } 
cpuidle_enable_device extern int cpuidle_enable_device ( s#cpuidle_device * ) 
cpuidle_disable_device extern void cpuidle_disable_device ( s#cpuidle_device * ) 
cpuidle_register_device extern int cpuidle_register_device ( s#cpuidle_device * ) 
cpuidle_unregister_device extern void cpuidle_unregister_device ( s#cpuidle_device * ) 

/* drivers/cpuidle/driver.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#cpuidle_driver struct cpuidle_driver { char name [ 16 ] ; s#module * owner ; } 
cpuidle_register_driver extern int cpuidle_register_driver ( s#cpuidle_driver * ) 
cpuidle_get_driver s#cpuidle_driver * cpuidle_get_driver ( void ) 
cpuidle_unregister_driver extern void cpuidle_unregister_driver ( s#cpuidle_driver * ) 

/* drivers/dma/dmaengine.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
dma_sync_wait e#dma_status dma_sync_wait ( s#dma_chan * , t#dma_cookie_t ) 
dma_find_channel s#dma_chan * dma_find_channel ( e#dma_transaction_type ) 
dma_issue_pending_all void dma_issue_pending_all ( void ) 
t#dma_filter_fn typedef t#bool ( * dma_filter_fn ) ( s#dma_chan * , void * ) 
__dma_request_channel s#dma_chan * __dma_request_channel ( t#dma_cap_mask_t * , t#dma_filter_fn , void * ) 
dma_release_channel void dma_release_channel ( s#dma_chan * ) 
dmaengine_get void dmaengine_get ( void ) 
dmaengine_put void dmaengine_put ( void ) 
dma_async_device_register int dma_async_device_register ( s#dma_device * ) 
dma_async_device_unregister void dma_async_device_unregister ( s#dma_device * ) 
dma_async_memcpy_buf_to_buf t#dma_cookie_t dma_async_memcpy_buf_to_buf ( s#dma_chan * , void * , void * , t#size_t ) 
dma_async_memcpy_buf_to_pg t#dma_cookie_t dma_async_memcpy_buf_to_pg ( s#dma_chan * , s#page * , unsigned int , void * , t#size_t ) 
dma_async_memcpy_pg_to_pg t#dma_cookie_t dma_async_memcpy_pg_to_pg ( s#dma_chan * , s#page * , unsigned int , s#page * , unsigned int , t#size_t ) 
dma_async_tx_descriptor_init void dma_async_tx_descriptor_init ( s#dma_async_tx_descriptor * , s#dma_chan * ) 
dma_wait_for_async_tx e#dma_status dma_wait_for_async_tx ( s#dma_async_tx_descriptor * ) 
dma_run_dependencies void dma_run_dependencies ( s#dma_async_tx_descriptor * ) 

/* drivers/edac/edac_device.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#edac_dev_sysfs_attribute struct edac_dev_sysfs_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#edac_device_ctl_info * , char * ) ; t#ssize_t ( * store ) ( s#edac_device_ctl_info * , const char * , t#size_t ) ; } 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s#edac_device_counter struct edac_device_counter { t#u32 ue_count ; t#u32 ce_count ; } 
s#edac_dev_sysfs_block_attribute struct edac_dev_sysfs_block_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#kobject * , s#attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#attribute * , const char * , t#size_t ) ; s#edac_device_block * block ; unsigned int value ; } 
s#edac_device_block struct edac_device_block { s#edac_device_instance * instance ; char name [ 31 + 1 ] ; s#edac_device_counter counters ; int nr_attribs ; s#edac_dev_sysfs_block_attribute * block_attributes ; s#kobject kobj ; } 
s#edac_device_instance struct edac_device_instance { s#edac_device_ctl_info * ctl ; char name [ 31 + 4 ] ; s#edac_device_counter counters ; t#u32 nr_blocks ; s#edac_device_block * blocks ; s#kobject kobj ; } 
s#edac_device_ctl_info struct edac_device_ctl_info { s#list_head link ; s#module * owner ; int dev_idx ; int log_ue ; int log_ce ; int panic_on_ue ; unsigned poll_msec ; unsigned long delay ; s#edac_dev_sysfs_attribute * sysfs_attributes ; s#sysdev_class * edac_class ; int op_state ; s#delayed_work work ; void ( * edac_check ) ( s#edac_device_ctl_info * ) ; s#device * dev ; const char * mod_name ; const char * ctl_name ; const char * dev_name ; void * pvt_info ; unsigned long start_time ; s#completion removal_complete ; char name [ 31 + 1 ] ; t#u32 nr_instances ; s#edac_device_instance * instances ; s#edac_device_counter counters ; s#kobject kobj ; } 
edac_device_alloc_ctl_info extern s#edac_device_ctl_info * edac_device_alloc_ctl_info ( unsigned , char * , unsigned , char * , unsigned , unsigned , s#edac_dev_sysfs_block_attribute * , unsigned , int ) 
edac_device_free_ctl_info extern void edac_device_free_ctl_info ( s#edac_device_ctl_info * ) 
edac_device_alloc_index extern int edac_device_alloc_index ( void ) 
edac_device_add_device extern int edac_device_add_device ( s#edac_device_ctl_info * ) 
edac_device_del_device extern s#edac_device_ctl_info * edac_device_del_device ( s#device * ) 
edac_device_handle_ce extern void edac_device_handle_ce ( s#edac_device_ctl_info * , int , int , const char * ) 
edac_device_handle_ue extern void edac_device_handle_ue ( s#edac_device_ctl_info * , int , int , const char * ) 

/* drivers/edac/edac_mc.o */
edac_mem_types extern const char * edac_mem_types [ ] 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#scrub_type enum scrub_type { SCRUB_UNKNOWN = 0 , SCRUB_NONE , SCRUB_SW_PROG , SCRUB_SW_SRC , SCRUB_SW_PROG_SRC , SCRUB_SW_TUNABLE , SCRUB_HW_PROG , SCRUB_HW_SRC , SCRUB_HW_PROG_SRC , SCRUB_HW_TUNABLE } 
e#dev_type enum dev_type { DEV_UNKNOWN = 0 , DEV_X1 , DEV_X2 , DEV_X4 , DEV_X8 , DEV_X16 , DEV_X32 , DEV_X64 } 
e#mem_type enum mem_type { MEM_EMPTY = 0 , MEM_RESERVED , MEM_UNKNOWN , MEM_FPM , MEM_EDO , MEM_BEDO , MEM_SDR , MEM_RDR , MEM_DDR , MEM_RDDR , MEM_RMBS , MEM_DDR2 , MEM_FB_DDR2 , MEM_RDDR2 , MEM_XDR , MEM_DDR3 , MEM_RDDR3 , } 
e#edac_type enum edac_type { EDAC_UNKNOWN = 0 , EDAC_NONE , EDAC_RESERVED , EDAC_PARITY , EDAC_EC , EDAC_SECDED , EDAC_S2ECD2ED , EDAC_S4ECD4ED , EDAC_S8ECD8ED , EDAC_S16ECD16ED , } 
s#channel_info struct channel_info { int chan_idx ; t#u32 ce_count ; char label [ 31 + 1 ] ; s#csrow_info * csrow ; } 
s#csrow_info struct csrow_info { unsigned long first_page ; unsigned long last_page ; unsigned long page_mask ; t#u32 nr_pages ; t#u32 grain ; int csrow_idx ; e#dev_type dtype ; t#u32 ue_count ; t#u32 ce_count ; e#mem_type mtype ; e#edac_type edac_mode ; s#mem_ctl_info * mci ; s#kobject kobj ; t#u32 nr_channels ; s#channel_info * channels ; } 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s#mcidev_sysfs_group struct mcidev_sysfs_group { const char * name ; const s#mcidev_sysfs_attribute * mcidev_attr ; } 
s#mcidev_sysfs_attribute struct mcidev_sysfs_attribute { s#attribute attr ; const s#mcidev_sysfs_group * grp ; t#ssize_t ( * show ) ( s#mem_ctl_info * , char * ) ; t#ssize_t ( * store ) ( s#mem_ctl_info * , const char * , t#size_t ) ; } 
s#mem_ctl_info struct mem_ctl_info { s#list_head link ; s#module * owner ; unsigned long mtype_cap ; unsigned long edac_ctl_cap ; unsigned long edac_cap ; unsigned long scrub_cap ; e#scrub_type scrub_mode ; int ( * set_sdram_scrub_rate ) ( s#mem_ctl_info * , t#u32 ) ; int ( * get_sdram_scrub_rate ) ( s#mem_ctl_info * ) ; void ( * edac_check ) ( s#mem_ctl_info * ) ; unsigned long ( * ctl_page_to_phys ) ( s#mem_ctl_info * , unsigned long ) ; int mc_idx ; int nr_csrows ; s#csrow_info * csrows ; s#device * dev ; const char * mod_name ; const char * mod_ver ; const char * ctl_name ; const char * dev_name ; char proc_name [ 7 + 1 ] ; void * pvt_info ; t#u32 ue_noinfo_count ; t#u32 ce_noinfo_count ; t#u32 ue_count ; t#u32 ce_count ; unsigned long start_time ; s#completion complete ; s#kobject edac_mci_kobj ; s#list_head grp_kobj_list ; const s#mcidev_sysfs_attribute * mc_driver_sysfs_attributes ; s#delayed_work work ; int op_state ; } 
edac_mc_alloc extern s#mem_ctl_info * edac_mc_alloc ( unsigned , unsigned , unsigned , int ) 
edac_mc_free extern void edac_mc_free ( s#mem_ctl_info * ) 
find_mci_by_dev extern s#mem_ctl_info * find_mci_by_dev ( s#device * ) 
edac_mc_find extern s#mem_ctl_info * edac_mc_find ( int ) 
edac_mc_add_mc extern int edac_mc_add_mc ( s#mem_ctl_info * ) 
edac_mc_del_mc extern s#mem_ctl_info * edac_mc_del_mc ( s#device * ) 
edac_mc_find_csrow_by_page extern int edac_mc_find_csrow_by_page ( s#mem_ctl_info * , unsigned long ) 
edac_mc_handle_ce extern void edac_mc_handle_ce ( s#mem_ctl_info * , unsigned long , unsigned long , unsigned long , int , int , const char * ) 
edac_mc_handle_ce_no_info extern void edac_mc_handle_ce_no_info ( s#mem_ctl_info * , const char * ) 
edac_mc_handle_ue extern void edac_mc_handle_ue ( s#mem_ctl_info * , unsigned long , unsigned long , int , const char * ) 
edac_mc_handle_ue_no_info extern void edac_mc_handle_ue_no_info ( s#mem_ctl_info * , const char * ) 
edac_mc_handle_fbd_ue extern void edac_mc_handle_fbd_ue ( s#mem_ctl_info * , unsigned int , unsigned int , unsigned int , char * ) 
edac_mc_handle_fbd_ce extern void edac_mc_handle_fbd_ce ( s#mem_ctl_info * , unsigned int , unsigned int , char * ) 

/* drivers/edac/edac_pci.o */
s##sock
s##sysfs_dirent
s##tvec_base
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s#edac_pci_counter struct edac_pci_counter { t#atomic_t pe_count ; t#atomic_t npe_count ; } 
s#edac_pci_ctl_info struct edac_pci_ctl_info { s#list_head link ; int pci_idx ; s#sysdev_class * edac_class ; int op_state ; s#delayed_work work ; void ( * edac_check ) ( s#edac_pci_ctl_info * ) ; s#device * dev ; const char * mod_name ; const char * ctl_name ; const char * dev_name ; void * pvt_info ; unsigned long start_time ; s#completion complete ; char name [ 31 + 1 ] ; s#edac_pci_counter counters ; s#kobject kobj ; s#completion kobj_complete ; } 
edac_pci_alloc_ctl_info extern s#edac_pci_ctl_info * edac_pci_alloc_ctl_info ( unsigned int , const char * ) 
edac_pci_free_ctl_info extern void edac_pci_free_ctl_info ( s#edac_pci_ctl_info * ) 
edac_pci_reset_delay_period extern void edac_pci_reset_delay_period ( s#edac_pci_ctl_info * , unsigned long ) 
edac_pci_alloc_index extern int edac_pci_alloc_index ( void ) 
edac_pci_add_device extern int edac_pci_add_device ( s#edac_pci_ctl_info * , int ) 
edac_pci_del_device extern s#edac_pci_ctl_info * edac_pci_del_device ( s#device * ) 
edac_pci_create_generic_ctl extern s#edac_pci_ctl_info * edac_pci_create_generic_ctl ( s#device * , const char * ) 
edac_pci_release_generic_ctl extern void edac_pci_release_generic_ctl ( s#edac_pci_ctl_info * ) 

/* drivers/edac/edac_pci_sysfs.o */
s##sock
s##sysfs_dirent
s##tvec_base
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
edac_pci_handle_pe extern void edac_pci_handle_pe ( s#edac_pci_ctl_info * , const char * ) 
edac_pci_handle_npe extern void edac_pci_handle_npe ( s#edac_pci_ctl_info * , const char * ) 

/* drivers/edac/edac_stub.o */
edac_op_state extern int edac_op_state 
edac_handlers extern t#atomic_t edac_handlers 
edac_err_assert extern int edac_err_assert 
edac_handler_set extern int edac_handler_set ( void ) 
edac_atomic_assert_error extern void edac_atomic_assert_error ( void ) 
s##sock
s##sysfs_dirent
edac_class extern s#sysdev_class edac_class 
edac_get_sysfs_class extern s#sysdev_class * edac_get_sysfs_class ( void ) 
edac_put_sysfs_class extern void edac_put_sysfs_class ( void ) 

/* drivers/firewire/core-card.o */
s#fw_descriptor struct fw_descriptor { s#list_head link ; t#size_t length ; t#u32 immediate ; t#u32 key ; const t#u32 * data ; } 
fw_core_add_descriptor int fw_core_add_descriptor ( s#fw_descriptor * ) 
fw_core_remove_descriptor void fw_core_remove_descriptor ( s#fw_descriptor * ) 
t#fw_packet_callback_t typedef void ( * fw_packet_callback_t ) ( s#fw_packet * , s#fw_card * , int ) 
s#fw_packet struct fw_packet { int speed ; int generation ; t#u32 header [ 4 ] ; t#size_t header_length ; void * payload ; t#size_t payload_length ; t#dma_addr_t payload_bus ; t#bool payload_mapped ; t#u32 timestamp ; t#fw_packet_callback_t callback ; int ack ; s#list_head link ; void * driver_data ; } 
t#fw_iso_callback_t typedef void ( * fw_iso_callback_t ) ( s#fw_iso_context * , t#u32 , t#size_t , void * , void * ) 
t#fw_iso_mc_callback_t typedef void ( * fw_iso_mc_callback_t ) ( s#fw_iso_context * , t#dma_addr_t , void * ) 
s#fw_iso_context struct fw_iso_context { s#fw_card * card ; int type ; int channel ; int speed ; t#size_t header_size ; union { t#fw_iso_callback_t sc ; t#fw_iso_mc_callback_t mc ; } callback ; void * callback_data ; } 
s#fw_iso_packet struct fw_iso_packet { t#u16 payload_length ; t#u32 interrupt : 1 ; t#u32 skip : 1 ; t#u32 tag : 2 ; t#u32 sy : 4 ; t#u32 header_length : 8 ; t#u32 header [ 0 ] ; } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#fw_iso_buffer struct fw_iso_buffer { e#dma_data_direction direction ; s#page * * pages ; int page_count ; } 
s#fw_card_driver struct fw_card_driver { int ( * enable ) ( s#fw_card * , const t#__be32 * , t#size_t ) ; int ( * read_phy_reg ) ( s#fw_card * , int ) ; int ( * update_phy_reg ) ( s#fw_card * , int , int , int ) ; int ( * set_config_rom ) ( s#fw_card * , const t#__be32 * , t#size_t ) ; void ( * send_request ) ( s#fw_card * , s#fw_packet * ) ; void ( * send_response ) ( s#fw_card * , s#fw_packet * ) ; int ( * cancel_packet ) ( s#fw_card * , s#fw_packet * ) ; int ( * enable_phys_dma ) ( s#fw_card * , int , int ) ; t#u32 ( * read_csr ) ( s#fw_card * , int ) ; void ( * write_csr ) ( s#fw_card * , int , t#u32 ) ; s#fw_iso_context * ( * allocate_iso_context ) ( s#fw_card * , int , int , t#size_t ) ; void ( * free_iso_context ) ( s#fw_iso_context * ) ; int ( * start_iso ) ( s#fw_iso_context * , t#s32 , t#u32 , t#u32 ) ; int ( * set_iso_channels ) ( s#fw_iso_context * , t#u64 * ) ; int ( * queue_iso ) ( s#fw_iso_context * , s#fw_iso_packet * , s#fw_iso_buffer * , unsigned long ) ; void ( * flush_queue_iso ) ( s#fw_iso_context * ) ; int ( * stop_iso ) ( s#fw_iso_context * ) ; } 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#fw_node struct fw_node { t#u16 node_id ; t#u8 color ; t#u8 port_count ; t#u8 link_on : 1 ; t#u8 initiated_reset : 1 ; t#u8 b_path : 1 ; t#u8 phy_speed : 2 ; t#u8 max_speed : 2 ; t#u8 max_depth : 4 ; t#u8 max_hops : 4 ; t#atomic_t ref_count ; s#list_head link ; void * data ; s#fw_node * ports [ 0 ] ; } 
s#fw_card struct fw_card { const s#fw_card_driver * driver ; s#device * device ; s#kref kref ; s#completion done ; int node_id ; int generation ; int current_tlabel ; t#u64 tlabel_mask ; s#list_head transaction_list ; t#u64 reset_jiffies ; t#u32 split_timeout_hi ; t#u32 split_timeout_lo ; unsigned int split_timeout_cycles ; unsigned int split_timeout_jiffies ; unsigned long long guid ; unsigned max_receive ; int link_speed ; int config_rom_generation ; t#spinlock_t lock ; s#fw_node * local_node ; s#fw_node * root_node ; s#fw_node * irm_node ; t#u8 color ; int gap_count ; t#bool beta_repeaters_present ; int index ; s#list_head link ; s#list_head phy_receiver_list ; s#delayed_work br_work ; t#bool br_short ; s#delayed_work bm_work ; int bm_retries ; int bm_generation ; int bm_node_id ; t#bool bm_abdicate ; t#bool priority_budget_implemented ; t#bool broadcast_channel_auto_allocated ; t#bool broadcast_channel_allocated ; t#u32 broadcast_channel ; t#__be32 topology_map [ ( 0x1400 - 0x1000 ) / 4 ] ; t#__be32 maint_utility_register ; } 
fw_schedule_bus_reset void fw_schedule_bus_reset ( s#fw_card * , t#bool , t#bool ) 
fw_card_initialize void fw_card_initialize ( s#fw_card * , const s#fw_card_driver * , s#device * ) 
fw_card_add int fw_card_add ( s#fw_card * , t#u32 , t#u32 , t#u64 ) 
fw_core_remove_card void fw_core_remove_card ( s#fw_card * ) 

/* drivers/firewire/core-device.o */
s#fw_csr_iterator struct fw_csr_iterator { const t#u32 * p ; const t#u32 * end ; } 
fw_csr_iterator_init void fw_csr_iterator_init ( s#fw_csr_iterator * , const t#u32 * ) 
fw_csr_iterator_next int fw_csr_iterator_next ( s#fw_csr_iterator * , int * , int * ) 
fw_csr_string int fw_csr_string ( const t#u32 * , int , char * , t#size_t ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##dma_coherent_mem
s##device_node
s##subsys_private
fw_bus_type extern s#bus_type fw_bus_type 
s#fw_attribute_group struct fw_attribute_group { s#attribute_group * groups [ 2 ] ; s#attribute_group group ; s#attribute * attrs [ 12 ] ; } 
s#fw_device struct fw_device { t#atomic_t state ; s#fw_node * node ; int node_id ; int generation ; unsigned max_speed ; s#fw_card * card ; s#device device ; s#mutex client_list_mutex ; s#list_head client_list ; const t#u32 * config_rom ; t#size_t config_rom_length ; int config_rom_retries ; unsigned is_local : 1 ; unsigned max_rec : 4 ; unsigned cmc : 1 ; unsigned irmc : 1 ; unsigned bc_implemented : 2 ; s#delayed_work work ; s#fw_attribute_group attribute_group ; } 
fw_device_enable_phys_dma int fw_device_enable_phys_dma ( s#fw_device * ) 
s##workqueue_struct
fw_workqueue extern s#workqueue_struct * fw_workqueue 

/* drivers/firewire/core-iso.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
fw_iso_buffer_init int fw_iso_buffer_init ( s#fw_iso_buffer * , s#fw_card * , int , e#dma_data_direction ) 
fw_iso_buffer_destroy void fw_iso_buffer_destroy ( s#fw_iso_buffer * , s#fw_card * ) 
fw_iso_context_create s#fw_iso_context * fw_iso_context_create ( s#fw_card * , int , int , int , t#size_t , t#fw_iso_callback_t , void * ) 
fw_iso_context_destroy void fw_iso_context_destroy ( s#fw_iso_context * ) 
fw_iso_context_start int fw_iso_context_start ( s#fw_iso_context * , int , int , int ) 
fw_iso_context_queue int fw_iso_context_queue ( s#fw_iso_context * , s#fw_iso_packet * , s#fw_iso_buffer * , unsigned long ) 
fw_iso_context_queue_flush void fw_iso_context_queue_flush ( s#fw_iso_context * ) 
fw_iso_context_stop int fw_iso_context_stop ( s#fw_iso_context * ) 
fw_iso_resource_manage void fw_iso_resource_manage ( s#fw_card * , int , t#u64 , int * , int * , t#bool ) 

/* drivers/firewire/core-topology.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
fw_core_handle_bus_reset void fw_core_handle_bus_reset ( s#fw_card * , int , int , int , t#u32 * , t#bool ) 

/* drivers/firewire/core-transaction.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
t#fw_transaction_callback_t typedef void ( * fw_transaction_callback_t ) ( s#fw_card * , int , void * , t#size_t , void * ) 
s#fw_transaction struct fw_transaction { int node_id ; int tlabel ; s#list_head link ; s#fw_card * card ; t#bool is_split_transaction ; s#timer_list split_timeout_timer ; s#fw_packet packet ; t#fw_transaction_callback_t callback ; void * callback_data ; } 
fw_cancel_transaction int fw_cancel_transaction ( s#fw_card * , s#fw_transaction * ) 
fw_send_request void fw_send_request ( s#fw_card * , s#fw_transaction * , int , int , int , int , unsigned long long , void * , t#size_t , t#fw_transaction_callback_t , void * ) 
fw_run_transaction int fw_run_transaction ( s#fw_card * , int , int , int , int , unsigned long long , void * , t#size_t ) 
s#fw_address_region struct fw_address_region { t#u64 start ; t#u64 end ; } 
fw_high_memory_region extern const s#fw_address_region fw_high_memory_region 
s##fw_request
t#fw_address_callback_t typedef void ( * fw_address_callback_t ) ( s#fw_card * , s#fw_request * , int , int , int , int , unsigned long long , void * , t#size_t , void * ) 
s#fw_address_handler struct fw_address_handler { t#u64 offset ; t#size_t length ; t#fw_address_callback_t address_callback ; void * callback_data ; s#list_head link ; } 
fw_core_add_address_handler int fw_core_add_address_handler ( s#fw_address_handler * , const s#fw_address_region * ) 
fw_core_remove_address_handler void fw_core_remove_address_handler ( s#fw_address_handler * ) 
fw_fill_response void fw_fill_response ( s#fw_packet * , t#u32 * , int , void * , t#size_t ) 
fw_send_response void fw_send_response ( s#fw_card * , s#fw_request * , int ) 
fw_core_handle_request void fw_core_handle_request ( s#fw_card * , s#fw_packet * ) 
fw_core_handle_response void fw_core_handle_response ( s#fw_card * , s#fw_packet * ) 

/* drivers/gpio/basic_mmio_gpio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##seq_file
s#gpio_chip struct gpio_chip { const char * label ; s#device * dev ; s#module * owner ; int ( * request ) ( s#gpio_chip * , unsigned ) ; void ( * free ) ( s#gpio_chip * , unsigned ) ; int ( * direction_input ) ( s#gpio_chip * , unsigned ) ; int ( * get ) ( s#gpio_chip * , unsigned ) ; int ( * direction_output ) ( s#gpio_chip * , unsigned , int ) ; int ( * set_debounce ) ( s#gpio_chip * , unsigned , unsigned ) ; void ( * set ) ( s#gpio_chip * , unsigned , int ) ; int ( * to_irq ) ( s#gpio_chip * , unsigned ) ; void ( * dbg_show ) ( s#seq_file * , s#gpio_chip * ) ; int base ; t#u16 ngpio ; const char * const * names ; unsigned can_sleep : 1 ; unsigned exported : 1 ; s#device_node * of_node ; int of_gpio_n_cells ; int ( * of_xlate ) ( s#gpio_chip * , s#device_node * , const void * , t#u32 * ) ; } 
s#bgpio_chip struct bgpio_chip { s#gpio_chip gc ; unsigned long ( * read_reg ) ( void * ) ; void ( * write_reg ) ( void * , unsigned long ) ; void * reg_dat ; void * reg_set ; void * reg_clr ; void * reg_dir ; int bits ; unsigned long ( * pin2mask ) ( s#bgpio_chip * , unsigned int ) ; t#spinlock_t lock ; unsigned long data ; unsigned long dir ; } 
bgpio_remove int __attribute__ ( ( __section__ ( ".devexit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) bgpio_remove ( s#bgpio_chip * ) 
bgpio_init int __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) bgpio_init ( s#bgpio_chip * , s#device * , unsigned long , void * , void * , void * , void * , void * , t#bool ) 

/* drivers/gpio/gpiolib.o */
gpio_export extern int gpio_export ( unsigned , t#bool ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
gpio_export_link extern int gpio_export_link ( s#device * , const char * , unsigned ) 
gpio_sysfs_set_active_low extern int gpio_sysfs_set_active_low ( unsigned , int ) 
gpio_unexport extern void gpio_unexport ( unsigned ) 
gpiochip_add extern int gpiochip_add ( s#gpio_chip * ) 
gpiochip_remove extern int gpiochip_remove ( s#gpio_chip * ) 
gpiochip_find extern s#gpio_chip * gpiochip_find ( void * , int ( * ) ( s#gpio_chip * , void * ) ) 
gpio_request extern int gpio_request ( unsigned , const char * ) 
gpio_free extern void gpio_free ( unsigned ) 
gpio_request_one extern int gpio_request_one ( unsigned , unsigned long , const char * ) 
s#gpio struct gpio { unsigned gpio ; unsigned long flags ; const char * label ; } 
gpio_request_array extern int gpio_request_array ( const s#gpio * , t#size_t ) 
gpio_free_array extern void gpio_free_array ( const s#gpio * , t#size_t ) 
gpiochip_is_requested extern const char * gpiochip_is_requested ( s#gpio_chip * , unsigned ) 
gpio_direction_input extern int gpio_direction_input ( unsigned ) 
gpio_direction_output extern int gpio_direction_output ( unsigned , int ) 
gpio_set_debounce extern int gpio_set_debounce ( unsigned , unsigned ) 
__gpio_get_value extern int __gpio_get_value ( unsigned ) 
__gpio_set_value extern void __gpio_set_value ( unsigned , int ) 
__gpio_cansleep extern int __gpio_cansleep ( unsigned ) 
__gpio_to_irq extern int __gpio_to_irq ( unsigned ) 
gpio_get_value_cansleep extern int gpio_get_value_cansleep ( unsigned ) 
gpio_set_value_cansleep extern void gpio_set_value_cansleep ( unsigned , int ) 

/* drivers/gpio/max730x.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##seq_file
s#max7301 struct max7301 { s#mutex lock ; t#u8 port_config [ 8 ] ; t#u32 out_level ; t#u32 input_pullup_active ; s#gpio_chip chip ; s#device * dev ; int ( * write ) ( s#device * , unsigned int , unsigned int ) ; int ( * read ) ( s#device * , unsigned int ) ; } 
__max730x_probe extern int __max730x_probe ( s#max7301 * ) 
__max730x_remove extern int __max730x_remove ( s#device * ) 

/* drivers/gpu/drm/ati_pcigart.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#drm_stat_type enum drm_stat_type { _DRM_STAT_LOCK , _DRM_STAT_OPENS , _DRM_STAT_CLOSES , _DRM_STAT_IOCTLS , _DRM_STAT_LOCKS , _DRM_STAT_UNLOCKS , _DRM_STAT_VALUE , _DRM_STAT_BYTE , _DRM_STAT_COUNT , _DRM_STAT_IRQ , _DRM_STAT_PRIMARY , _DRM_STAT_SECONDARY , _DRM_STAT_DMA , _DRM_STAT_SPECIAL , _DRM_STAT_MISSED } 
s#drm_open_hash struct drm_open_hash { s#hlist_head * table ; t#u8 order ; } 
t#kuid_t typedef t#uid_t kuid_t 
t#drm_magic_t typedef unsigned int drm_magic_t 
s#drm_info_list struct drm_info_list { const char * name ; int ( * show ) ( s#seq_file * , void * ) ; t#u32 driver_features ; void * data ; } 
s#drm_info_node struct drm_info_node { s#list_head list ; s#drm_minor * minor ; s#drm_info_list * info_ent ; s#dentry * dent ; } 
s#drm_hw_lock struct drm_hw_lock { __volatile__ unsigned int lock ; char padding [ 60 ] ; } 
s#drm_lock_data struct drm_lock_data { s#drm_hw_lock * hw_lock ; s#drm_file * file_priv ; t#wait_queue_head_t lock_queue ; unsigned long lock_time ; t#spinlock_t spinlock ; t#uint32_t kernel_waiters ; t#uint32_t user_waiters ; int idle_has_lock ; } 
s#drm_master struct drm_master { s#kref refcount ; s#list_head head ; s#drm_minor * minor ; char * unique ; int unique_len ; int unique_size ; int blocked ; s#drm_open_hash magiclist ; s#list_head magicfree ; s#drm_lock_data lock ; void * driver_priv ; } 
s#drm_mode_group struct drm_mode_group { t#uint32_t num_crtcs ; t#uint32_t num_encoders ; t#uint32_t num_connectors ; t#uint32_t * id_list ; } 
s#drm_minor struct drm_minor { int index ; int type ; t#dev_t device ; s#device kdev ; s#drm_device * dev ; s#proc_dir_entry * proc_root ; s#drm_info_node proc_nodes ; s#dentry * debugfs_root ; s#list_head debugfs_list ; s#mutex debugfs_lock ; s#drm_master * master ; s#list_head master_list ; s#drm_mode_group mode_group ; } 
s#drm_prime_file_private struct drm_prime_file_private { s#list_head head ; s#mutex lock ; } 
s#drm_file struct drm_file { int authenticated ; s#pid * pid ; t#kuid_t uid ; t#drm_magic_t magic ; unsigned long ioctl_count ; s#list_head lhead ; s#drm_minor * minor ; unsigned long lock_count ; s#idr object_idr ; t#spinlock_t table_lock ; s#file * filp ; void * driver_priv ; int is_master ; s#drm_master * master ; s#list_head fbs ; t#wait_queue_head_t event_wait ; s#list_head event_list ; int event_space ; s#drm_prime_file_private prime ; } 
s#drm_buf struct drm_buf { int idx ; int total ; int order ; int used ; unsigned long offset ; void * address ; unsigned long bus_address ; s#drm_buf * next ; __volatile__ int waiting ; __volatile__ int pending ; s#drm_file * file_priv ; int context ; int while_locked ; enum { DRM_LIST_NONE = 0 , DRM_LIST_FREE = 1 , DRM_LIST_WAIT = 2 , DRM_LIST_PEND = 3 , DRM_LIST_PRIO = 4 , DRM_LIST_RECLAIM = 5 } list ; int dev_priv_size ; void * dev_private ; } 
s#drm_dma_handle struct drm_dma_handle { t#dma_addr_t busaddr ; void * vaddr ; t#size_t size ; } 
s#drm_freelist struct drm_freelist { int initialized ; t#atomic_t count ; s#drm_buf * next ; t#wait_queue_head_t waiting ; int low_mark ; int high_mark ; t#atomic_t wfh ; t#spinlock_t lock ; } 
s#drm_buf_entry struct drm_buf_entry { int buf_size ; int buf_count ; s#drm_buf * buflist ; int seg_count ; int page_order ; s#drm_dma_handle * * seglist ; s#drm_freelist freelist ; } 
s#drm_device_dma struct drm_device_dma { s#drm_buf_entry bufs [ 22 + 1 ] ; int buf_count ; s#drm_buf * * buflist ; int seg_count ; int page_count ; unsigned long * pagelist ; unsigned long byte_count ; enum { _DRM_DMA_USE_AGP = 0x01 , _DRM_DMA_USE_SG = 0x02 , _DRM_DMA_USE_FB = 0x04 , _DRM_DMA_USE_PCI_RO = 0x08 } flags ; } 
t#__kernel_suseconds_t typedef long __kernel_suseconds_t 
s#timeval struct timeval { t#__kernel_time_t tv_sec ; t#__kernel_suseconds_t tv_usec ; } 
t#cycles_t typedef unsigned long cycles_t 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s#drm_agp_head struct drm_agp_head { s#agp_kern_info agp_info ; s#list_head memory ; unsigned long mode ; s#agp_bridge_data * bridge ; int enabled ; int acquired ; unsigned long base ; int agp_mtrr ; int cant_use_aperture ; unsigned long page_mask ; } 
s##mfd_cell
s##usb_device
s#drm_sg_mem struct drm_sg_mem { unsigned long handle ; void * virtual ; int pages ; s#page * * pagelist ; t#dma_addr_t * busaddr ; } 
s#drm_sigdata struct drm_sigdata { int context ; s#drm_hw_lock * lock ; } 
s#drm_set_version struct drm_set_version { int drm_di_major ; int drm_di_minor ; int drm_dd_major ; int drm_dd_minor ; } 
s#drm_hash_item struct drm_hash_item { s#hlist_node head ; unsigned long key ; } 
e#drm_map_type enum drm_map_type { _DRM_FRAME_BUFFER = 0 , _DRM_REGISTERS = 1 , _DRM_SHM = 2 , _DRM_AGP = 3 , _DRM_SCATTER_GATHER = 4 , _DRM_CONSISTENT = 5 , _DRM_GEM = 6 , } 
e#drm_map_flags enum drm_map_flags { _DRM_RESTRICTED = 0x01 , _DRM_READ_ONLY = 0x02 , _DRM_LOCKED = 0x04 , _DRM_KERNEL = 0x08 , _DRM_WRITE_COMBINING = 0x10 , _DRM_CONTAINS_LOCK = 0x20 , _DRM_REMOVABLE = 0x40 , _DRM_DRIVER = 0x80 } 
s#drm_local_map struct drm_local_map { t#resource_size_t offset ; unsigned long size ; e#drm_map_type type ; e#drm_map_flags flags ; void * handle ; int mtrr ; } 
s#drm_mm struct drm_mm { s#list_head hole_stack ; s#drm_mm_node head_node ; s#list_head unused_nodes ; int num_unused ; t#spinlock_t unused_lock ; unsigned int scan_check_range : 1 ; unsigned scan_alignment ; unsigned long scan_color ; unsigned long scan_size ; unsigned long scan_hit_start ; unsigned long scan_hit_end ; unsigned scanned_blocks ; unsigned long scan_start ; unsigned long scan_end ; s#drm_mm_node * prev_scanned_node ; void ( * color_adjust ) ( s#drm_mm_node * , unsigned long , unsigned long * , unsigned long * ) ; } 
s#drm_mm_node struct drm_mm_node { s#list_head node_list ; s#list_head hole_stack ; unsigned hole_follows : 1 ; unsigned scanned_block : 1 ; unsigned scanned_prev_free : 1 ; unsigned scanned_next_free : 1 ; unsigned scanned_preceeds_hole : 1 ; unsigned allocated : 1 ; unsigned long color ; unsigned long start ; unsigned long size ; s#drm_mm * mm ; } 
s#drm_map_list struct drm_map_list { s#list_head head ; s#drm_hash_item hash ; s#drm_local_map * map ; t#uint64_t user_token ; s#drm_master * master ; s#drm_mm_node * file_offset_node ; } 
s##dma_buf
s##dma_buf_attachment
s#drm_gem_object struct drm_gem_object { s#kref refcount ; t#atomic_t handle_count ; s#drm_device * dev ; s#file * filp ; s#drm_map_list map_list ; t#size_t size ; int name ; t#uint32_t read_domains ; t#uint32_t write_domain ; t#uint32_t pending_read_domains ; t#uint32_t pending_write_domain ; void * driver_private ; s#dma_buf * export_dma_buf ; s#dma_buf_attachment * import_attach ; } 
s#drm_mode_create_dumb struct drm_mode_create_dumb { t#uint32_t height ; t#uint32_t width ; t#uint32_t bpp ; t#uint32_t flags ; t#uint32_t handle ; t#uint32_t pitch ; t#uint64_t size ; } 
t#drm_ioctl_t typedef int drm_ioctl_t ( s#drm_device * , void * , s#drm_file * ) 
s#drm_ioctl_desc struct drm_ioctl_desc { unsigned int cmd ; int flags ; t#drm_ioctl_t * func ; unsigned int cmd_drv ; } 
s##usb_driver
s#drm_unique struct drm_unique { t#size_t unique_len ; char * unique ; } 
s#drm_irq_busid struct drm_irq_busid { int irq ; int busnum ; int devnum ; int funcnum ; } 
s#drm_bus struct drm_bus { int bus_type ; int ( * get_irq ) ( s#drm_device * ) ; const char * ( * get_name ) ( s#drm_device * ) ; int ( * set_busid ) ( s#drm_device * , s#drm_master * ) ; int ( * set_unique ) ( s#drm_device * , s#drm_master * , s#drm_unique * ) ; int ( * irq_by_busid ) ( s#drm_device * , s#drm_irq_busid * ) ; int ( * agp_init ) ( s#drm_device * ) ; } 
s#drm_driver struct drm_driver { int ( * load ) ( s#drm_device * , unsigned long ) ; int ( * firstopen ) ( s#drm_device * ) ; int ( * open ) ( s#drm_device * , s#drm_file * ) ; void ( * preclose ) ( s#drm_device * , s#drm_file * ) ; void ( * postclose ) ( s#drm_device * , s#drm_file * ) ; void ( * lastclose ) ( s#drm_device * ) ; int ( * unload ) ( s#drm_device * ) ; int ( * suspend ) ( s#drm_device * , t#pm_message_t ) ; int ( * resume ) ( s#drm_device * ) ; int ( * dma_ioctl ) ( s#drm_device * , void * , s#drm_file * ) ; int ( * dma_quiescent ) ( s#drm_device * ) ; int ( * context_dtor ) ( s#drm_device * , int ) ; t#u32 ( * get_vblank_counter ) ( s#drm_device * , int ) ; int ( * enable_vblank ) ( s#drm_device * , int ) ; void ( * disable_vblank ) ( s#drm_device * , int ) ; int ( * device_is_agp ) ( s#drm_device * ) ; int ( * get_scanout_position ) ( s#drm_device * , int , int * , int * ) ; int ( * get_vblank_timestamp ) ( s#drm_device * , int , int * , s#timeval * , unsigned ) ; t#irqreturn_t ( * irq_handler ) ( int , void * ) ; void ( * irq_preinstall ) ( s#drm_device * ) ; int ( * irq_postinstall ) ( s#drm_device * ) ; void ( * irq_uninstall ) ( s#drm_device * ) ; void ( * set_version ) ( s#drm_device * , s#drm_set_version * ) ; int ( * master_create ) ( s#drm_device * , s#drm_master * ) ; void ( * master_destroy ) ( s#drm_device * , s#drm_master * ) ; int ( * master_set ) ( s#drm_device * , s#drm_file * , t#bool ) ; void ( * master_drop ) ( s#drm_device * , s#drm_file * , t#bool ) ; int ( * debugfs_init ) ( s#drm_minor * ) ; void ( * debugfs_cleanup ) ( s#drm_minor * ) ; int ( * gem_init_object ) ( s#drm_gem_object * ) ; void ( * gem_free_object ) ( s#drm_gem_object * ) ; int ( * gem_open_object ) ( s#drm_gem_object * , s#drm_file * ) ; void ( * gem_close_object ) ( s#drm_gem_object * , s#drm_file * ) ; int ( * prime_handle_to_fd ) ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) ; int ( * prime_fd_to_handle ) ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) ; s#dma_buf * ( * gem_prime_export ) ( s#drm_device * , s#drm_gem_object * , int ) ; s#drm_gem_object * ( * gem_prime_import ) ( s#drm_device * , s#dma_buf * ) ; void ( * vgaarb_irq ) ( s#drm_device * , t#bool ) ; int ( * dumb_create ) ( s#drm_file * , s#drm_device * , s#drm_mode_create_dumb * ) ; int ( * dumb_map_offset ) ( s#drm_file * , s#drm_device * , t#uint32_t , t#uint64_t * ) ; int ( * dumb_destroy ) ( s#drm_file * , s#drm_device * , t#uint32_t ) ; const s#vm_operations_struct * gem_vm_ops ; int major ; int minor ; int patchlevel ; char * name ; char * desc ; char * date ; t#u32 driver_features ; int dev_priv_size ; s#drm_ioctl_desc * ioctls ; int num_ioctls ; const s#file_operations * fops ; union { s#pci_driver * pci ; s#platform_device * platform_device ; s#usb_driver * usb ; } kdriver ; s#drm_bus * bus ; s#list_head device_list ; } 
s#drm_object_properties struct drm_object_properties { int count ; t#uint32_t ids [ 24 ] ; t#uint64_t values [ 24 ] ; } 
s#drm_mode_object struct drm_mode_object { t#uint32_t id ; t#uint32_t type ; s#drm_object_properties * properties ; } 
s#drm_clip_rect struct drm_clip_rect { unsigned short x1 ; unsigned short y1 ; unsigned short x2 ; unsigned short y2 ; } 
s#drm_framebuffer_funcs struct drm_framebuffer_funcs { void ( * destroy ) ( s#drm_framebuffer * ) ; int ( * create_handle ) ( s#drm_framebuffer * , s#drm_file * , unsigned int * ) ; int ( * dirty ) ( s#drm_framebuffer * , s#drm_file * , unsigned , unsigned , s#drm_clip_rect * , unsigned ) ; } 
s#drm_framebuffer struct drm_framebuffer { s#drm_device * dev ; s#kref refcount ; s#list_head head ; s#drm_mode_object base ; const s#drm_framebuffer_funcs * funcs ; unsigned int pitches [ 4 ] ; unsigned int offsets [ 4 ] ; unsigned int width ; unsigned int height ; unsigned int depth ; int bits_per_pixel ; int flags ; t#uint32_t pixel_format ; s#list_head filp_head ; void * helper_private ; } 
s#drm_mode_fb_cmd2 struct drm_mode_fb_cmd2 { t#__u32 fb_id ; t#__u32 width , height ; t#__u32 pixel_format ; t#__u32 flags ; t#__u32 handles [ 4 ] ; t#__u32 pitches [ 4 ] ; t#__u32 offsets [ 4 ] ; } 
s#drm_mode_config_funcs struct drm_mode_config_funcs { s#drm_framebuffer * ( * fb_create ) ( s#drm_device * , s#drm_file * , s#drm_mode_fb_cmd2 * ) ; void ( * output_poll_changed ) ( s#drm_device * ) ; } 
s#drm_property struct drm_property { s#list_head head ; s#drm_mode_object base ; t#uint32_t flags ; char name [ 32 ] ; t#uint32_t num_values ; t#uint64_t * values ; s#list_head enum_blob_list ; } 
s#drm_mode_config struct drm_mode_config { s#mutex mutex ; s#mutex idr_mutex ; s#idr crtc_idr ; int num_fb ; s#list_head fb_list ; int num_connector ; s#list_head connector_list ; int num_encoder ; s#list_head encoder_list ; int num_plane ; s#list_head plane_list ; int num_crtc ; s#list_head crtc_list ; s#list_head property_list ; int min_width , min_height ; int max_width , max_height ; const s#drm_mode_config_funcs * funcs ; t#resource_size_t fb_base ; t#bool poll_enabled ; t#bool poll_running ; s#delayed_work output_poll_work ; s#list_head property_blob_list ; s#drm_property * edid_property ; s#drm_property * dpms_property ; s#drm_property * dvi_i_subconnector_property ; s#drm_property * dvi_i_select_subconnector_property ; s#drm_property * tv_subconnector_property ; s#drm_property * tv_select_subconnector_property ; s#drm_property * tv_mode_property ; s#drm_property * tv_left_margin_property ; s#drm_property * tv_right_margin_property ; s#drm_property * tv_top_margin_property ; s#drm_property * tv_bottom_margin_property ; s#drm_property * tv_brightness_property ; s#drm_property * tv_contrast_property ; s#drm_property * tv_flicker_reduction_property ; s#drm_property * tv_overscan_property ; s#drm_property * tv_saturation_property ; s#drm_property * tv_hue_property ; s#drm_property * scaling_mode_property ; s#drm_property * dithering_mode_property ; s#drm_property * dirty_info_property ; t#uint32_t preferred_depth , prefer_shadow ; } 
s#drm_device struct drm_device { s#list_head driver_item ; char * devname ; int if_version ; t#spinlock_t count_lock ; s#mutex struct_mutex ; int open_count ; t#atomic_t ioctl_count ; t#atomic_t vma_count ; int buf_use ; t#atomic_t buf_alloc ; unsigned long counters ; e#drm_stat_type types [ 15 ] ; t#atomic_t counts [ 15 ] ; s#list_head filelist ; s#list_head maplist ; int map_count ; s#drm_open_hash map_hash ; s#list_head ctxlist ; int ctx_count ; s#mutex ctxlist_mutex ; s#idr ctx_idr ; s#list_head vmalist ; s#drm_device_dma * dma ; int irq_enabled ; __volatile__ long context_flag ; __volatile__ long interrupt_flag ; __volatile__ long dma_flag ; t#wait_queue_head_t context_wait ; int last_checked ; int last_context ; unsigned long last_switch ; s#work_struct work ; int vblank_disable_allowed ; t#wait_queue_head_t * vbl_queue ; t#atomic_t * _vblank_count ; s#timeval * _vblank_time ; t#spinlock_t vblank_time_lock ; t#spinlock_t vbl_lock ; t#atomic_t * vblank_refcount ; t#u32 * last_vblank ; int * vblank_enabled ; int * vblank_inmodeset ; t#u32 * last_vblank_wait ; s#timer_list vblank_disable_timer ; t#u32 max_vblank_count ; s#list_head vblank_event_list ; t#spinlock_t event_lock ; t#cycles_t ctx_start ; t#cycles_t lck_start ; s#fasync_struct * buf_async ; t#wait_queue_head_t buf_readers ; t#wait_queue_head_t buf_writers ; s#drm_agp_head * agp ; s#device * dev ; s#pci_dev * pdev ; int pci_vendor ; int pci_device ; s#platform_device * platformdev ; s#usb_device * usbdev ; s#drm_sg_mem * sg ; unsigned int num_crtcs ; void * dev_private ; void * mm_private ; s#address_space * dev_mapping ; s#drm_sigdata sigdata ; t#sigset_t sigmask ; s#drm_driver * driver ; s#drm_local_map * agp_buffer_map ; unsigned int agp_buffer_token ; s#drm_minor * control ; s#drm_minor * primary ; s#drm_mode_config mode_config ; t#spinlock_t object_name_lock ; s#idr object_name_idr ; int switch_power_state ; t#atomic_t unplugged ; } 
s#drm_ati_pcigart_info struct drm_ati_pcigart_info { int gart_table_location ; int gart_reg_if ; void * addr ; t#dma_addr_t bus_addr ; t#dma_addr_t table_mask ; s#drm_dma_handle * table_handle ; s#drm_local_map mapping ; int table_size ; } 
drm_ati_pcigart_cleanup extern int drm_ati_pcigart_cleanup ( s#drm_device * , s#drm_ati_pcigart_info * ) 
drm_ati_pcigart_init extern int drm_ati_pcigart_init ( s#drm_device * , s#drm_ati_pcigart_info * ) 

/* drivers/gpu/drm/drm_agpsupport.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_agp_info struct drm_agp_info { int agp_version_major ; int agp_version_minor ; unsigned long mode ; unsigned long aperture_base ; unsigned long aperture_size ; unsigned long memory_allowed ; unsigned long memory_used ; unsigned short id_vendor ; unsigned short id_device ; } 
drm_agp_info extern int drm_agp_info ( s#drm_device * , s#drm_agp_info * ) 
drm_agp_acquire extern int drm_agp_acquire ( s#drm_device * ) 
drm_agp_release extern int drm_agp_release ( s#drm_device * ) 
s#drm_agp_mode struct drm_agp_mode { unsigned long mode ; } 
drm_agp_enable extern int drm_agp_enable ( s#drm_device * , s#drm_agp_mode ) 
s#drm_agp_buffer struct drm_agp_buffer { unsigned long size ; unsigned long handle ; unsigned long type ; unsigned long physical ; } 
drm_agp_alloc extern int drm_agp_alloc ( s#drm_device * , s#drm_agp_buffer * ) 
s#drm_agp_binding struct drm_agp_binding { unsigned long handle ; unsigned long offset ; } 
drm_agp_unbind extern int drm_agp_unbind ( s#drm_device * , s#drm_agp_binding * ) 
drm_agp_bind extern int drm_agp_bind ( s#drm_device * , s#drm_agp_binding * ) 
drm_agp_free extern int drm_agp_free ( s#drm_device * , s#drm_agp_buffer * ) 
drm_agp_bind_pages extern s#agp_memory * drm_agp_bind_pages ( s#drm_device * , s#page * * , unsigned long , t#uint32_t , t#uint32_t ) 

/* drivers/gpu/drm/drm_buffer.o */
s#drm_buffer struct drm_buffer { int iterator ; int size ; char * data [ ] ; } 
drm_buffer_alloc extern int drm_buffer_alloc ( s#drm_buffer * * , int ) 
drm_buffer_copy_from_user extern int drm_buffer_copy_from_user ( s#drm_buffer * , void * , int ) 
drm_buffer_free extern void drm_buffer_free ( s#drm_buffer * ) 
drm_buffer_read_object extern void * drm_buffer_read_object ( s#drm_buffer * , int , void * ) 

/* drivers/gpu/drm/drm_bufs.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_addmap extern int drm_addmap ( s#drm_device * , t#resource_size_t , unsigned int , e#drm_map_type , e#drm_map_flags , s#drm_local_map * * ) 
drm_rmmap_locked extern int drm_rmmap_locked ( s#drm_device * , s#drm_local_map * ) 
drm_rmmap extern int drm_rmmap ( s#drm_device * , s#drm_local_map * ) 
s#drm_buf_desc struct drm_buf_desc { int count ; int size ; int low_mark ; int high_mark ; enum { _DRM_PAGE_ALIGN = 0x01 , _DRM_AGP_BUFFER = 0x02 , _DRM_SG_BUFFER = 0x04 , _DRM_FB_BUFFER = 0x08 , _DRM_PCI_BUFFER_RO = 0x10 } flags ; unsigned long agp_start ; } 
drm_addbufs_agp extern int drm_addbufs_agp ( s#drm_device * , s#drm_buf_desc * ) 
drm_addbufs_pci extern int drm_addbufs_pci ( s#drm_device * , s#drm_buf_desc * ) 
drm_order extern int drm_order ( unsigned long ) 

/* drivers/gpu/drm/drm_cache.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
drm_clflush_pages void drm_clflush_pages ( s#page * [ ] , unsigned long ) 
drm_clflush_sg void drm_clflush_sg ( s#sg_table * ) 
drm_clflush_virt_range void drm_clflush_virt_range ( char * , unsigned long ) 

/* drivers/gpu/drm/drm_crtc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
e#drm_mode_status enum drm_mode_status { MODE_OK = 0 , MODE_HSYNC , MODE_VSYNC , MODE_H_ILLEGAL , MODE_V_ILLEGAL , MODE_BAD_WIDTH , MODE_NOMODE , MODE_NO_INTERLACE , MODE_NO_DBLESCAN , MODE_NO_VSCAN , MODE_MEM , MODE_VIRTUAL_X , MODE_VIRTUAL_Y , MODE_MEM_VIRT , MODE_NOCLOCK , MODE_CLOCK_HIGH , MODE_CLOCK_LOW , MODE_CLOCK_RANGE , MODE_BAD_HVALUE , MODE_BAD_VVALUE , MODE_BAD_VSCAN , MODE_HSYNC_NARROW , MODE_HSYNC_WIDE , MODE_HBLANK_NARROW , MODE_HBLANK_WIDE , MODE_VSYNC_NARROW , MODE_VSYNC_WIDE , MODE_VBLANK_NARROW , MODE_VBLANK_WIDE , MODE_PANEL , MODE_INTERLACE_WIDTH , MODE_ONE_WIDTH , MODE_ONE_HEIGHT , MODE_ONE_SIZE , MODE_NO_REDUCED , MODE_UNVERIFIED = - 3 , MODE_BAD = - 2 , MODE_ERROR = - 1 } 
s#drm_display_mode struct drm_display_mode { s#list_head head ; s#drm_mode_object base ; char name [ 32 ] ; e#drm_mode_status status ; unsigned int type ; int clock ; int hdisplay ; int hsync_start ; int hsync_end ; int htotal ; int hskew ; int vdisplay ; int vsync_start ; int vsync_end ; int vtotal ; int vscan ; unsigned int flags ; int width_mm ; int height_mm ; int clock_index ; int synth_clock ; int crtc_hdisplay ; int crtc_hblank_start ; int crtc_hblank_end ; int crtc_hsync_start ; int crtc_hsync_end ; int crtc_htotal ; int crtc_hskew ; int crtc_vdisplay ; int crtc_vblank_start ; int crtc_vblank_end ; int crtc_vsync_start ; int crtc_vsync_end ; int crtc_vtotal ; int private_size ; int * private ; int private_flags ; int vrefresh ; int hsync ; } 
e#drm_connector_status enum drm_connector_status { connector_status_connected = 1 , connector_status_disconnected = 2 , connector_status_unknown = 3 , } 
e#subpixel_order enum subpixel_order { SubPixelUnknown = 0 , SubPixelHorizontalRGB , SubPixelHorizontalBGR , SubPixelVerticalRGB , SubPixelVerticalBGR , SubPixelNone , } 
s#drm_display_info struct drm_display_info { char name [ 32 ] ; unsigned int width_mm ; unsigned int height_mm ; unsigned int min_vfreq , max_vfreq ; unsigned int min_hfreq , max_hfreq ; unsigned int pixel_clock ; unsigned int bpc ; e#subpixel_order subpixel_order ; t#u32 color_formats ; t#u8 cea_rev ; } 
s#drm_connector_funcs struct drm_connector_funcs { void ( * dpms ) ( s#drm_connector * , int ) ; void ( * save ) ( s#drm_connector * ) ; void ( * restore ) ( s#drm_connector * ) ; void ( * reset ) ( s#drm_connector * ) ; e#drm_connector_status ( * detect ) ( s#drm_connector * , t#bool ) ; int ( * fill_modes ) ( s#drm_connector * , t#uint32_t , t#uint32_t ) ; int ( * set_property ) ( s#drm_connector * , s#drm_property * , t#uint64_t ) ; void ( * destroy ) ( s#drm_connector * ) ; void ( * force ) ( s#drm_connector * ) ; } 
s#drm_property_blob struct drm_property_blob { s#drm_mode_object base ; s#list_head head ; unsigned int length ; unsigned char data [ ] ; } 
t#uint8_t typedef t#__u8 uint8_t 
e#drm_connector_force enum drm_connector_force { DRM_FORCE_UNSPECIFIED , DRM_FORCE_OFF , DRM_FORCE_ON , DRM_FORCE_ON_DIGITAL , } 
s#drm_connector struct drm_connector { s#drm_device * dev ; s#device kdev ; s#device_attribute * attr ; s#list_head head ; s#drm_mode_object base ; int connector_type ; int connector_type_id ; t#bool interlace_allowed ; t#bool doublescan_allowed ; s#list_head modes ; e#drm_connector_status status ; s#list_head probed_modes ; s#drm_display_info display_info ; const s#drm_connector_funcs * funcs ; s#list_head user_modes ; s#drm_property_blob * edid_blob_ptr ; s#drm_object_properties properties ; t#uint8_t polled ; int dpms ; void * helper_private ; e#drm_connector_force force ; t#uint32_t encoder_ids [ 3 ] ; s#drm_encoder * encoder ; t#uint8_t eld [ 128 ] ; t#bool dvi_dual ; int max_tmds_clock ; t#bool latency_present [ 2 ] ; int video_latency [ 2 ] ; int audio_latency [ 2 ] ; int null_edid_counter ; unsigned bad_edid_counter ; } 
s#drm_mode_set struct drm_mode_set { s#drm_framebuffer * fb ; s#drm_crtc * crtc ; s#drm_display_mode * mode ; t#uint32_t x ; t#uint32_t y ; s#drm_connector * * connectors ; t#size_t num_connectors ; } 
s#drm_event struct drm_event { t#__u32 type ; t#__u32 length ; } 
s#drm_pending_event struct drm_pending_event { s#drm_event * event ; s#list_head link ; s#drm_file * file_priv ; t#pid_t pid ; void ( * destroy ) ( s#drm_pending_event * ) ; } 
s#drm_event_vblank struct drm_event_vblank { s#drm_event base ; t#__u64 user_data ; t#__u32 tv_sec ; t#__u32 tv_usec ; t#__u32 sequence ; t#__u32 reserved ; } 
s#drm_pending_vblank_event struct drm_pending_vblank_event { s#drm_pending_event base ; int pipe ; s#drm_event_vblank event ; } 
s#drm_crtc_funcs struct drm_crtc_funcs { void ( * save ) ( s#drm_crtc * ) ; void ( * restore ) ( s#drm_crtc * ) ; void ( * reset ) ( s#drm_crtc * ) ; int ( * cursor_set ) ( s#drm_crtc * , s#drm_file * , t#uint32_t , t#uint32_t , t#uint32_t ) ; int ( * cursor_move ) ( s#drm_crtc * , int , int ) ; void ( * gamma_set ) ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , t#uint32_t , t#uint32_t ) ; void ( * destroy ) ( s#drm_crtc * ) ; int ( * set_config ) ( s#drm_mode_set * ) ; int ( * page_flip ) ( s#drm_crtc * , s#drm_framebuffer * , s#drm_pending_vblank_event * ) ; int ( * set_property ) ( s#drm_crtc * , s#drm_property * , t#uint64_t ) ; } 
s#drm_crtc struct drm_crtc { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; s#drm_framebuffer * fb ; t#bool enabled ; s#drm_display_mode mode ; s#drm_display_mode hwmode ; t#bool invert_dimensions ; int x , y ; const s#drm_crtc_funcs * funcs ; t#uint32_t gamma_size ; t#uint16_t * gamma_store ; t#s64 framedur_ns , linedur_ns , pixeldur_ns ; void * helper_private ; s#drm_object_properties properties ; } 
s#drm_encoder_funcs struct drm_encoder_funcs { void ( * reset ) ( s#drm_encoder * ) ; void ( * destroy ) ( s#drm_encoder * ) ; } 
s#drm_encoder struct drm_encoder { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; int encoder_type ; t#uint32_t possible_crtcs ; t#uint32_t possible_clones ; s#drm_crtc * crtc ; const s#drm_encoder_funcs * funcs ; void * helper_private ; } 
drm_get_encoder_name extern char * drm_get_encoder_name ( s#drm_encoder * ) 
drm_get_connector_name extern char * drm_get_connector_name ( s#drm_connector * ) 
drm_mode_object_find extern s#drm_mode_object * drm_mode_object_find ( s#drm_device * , t#uint32_t , t#uint32_t ) 
drm_framebuffer_init extern int drm_framebuffer_init ( s#drm_device * , s#drm_framebuffer * , const s#drm_framebuffer_funcs * ) 
drm_framebuffer_unreference extern void drm_framebuffer_unreference ( s#drm_framebuffer * ) 
drm_framebuffer_reference extern void drm_framebuffer_reference ( s#drm_framebuffer * ) 
drm_framebuffer_cleanup extern void drm_framebuffer_cleanup ( s#drm_framebuffer * ) 
drm_framebuffer_remove extern void drm_framebuffer_remove ( s#drm_framebuffer * ) 
drm_crtc_init extern int drm_crtc_init ( s#drm_device * , s#drm_crtc * , const s#drm_crtc_funcs * ) 
drm_crtc_cleanup extern void drm_crtc_cleanup ( s#drm_crtc * ) 
drm_mode_probed_add extern void drm_mode_probed_add ( s#drm_connector * , s#drm_display_mode * ) 
drm_mode_remove extern void drm_mode_remove ( s#drm_connector * , s#drm_display_mode * ) 
drm_connector_init extern int drm_connector_init ( s#drm_device * , s#drm_connector * , const s#drm_connector_funcs * , int ) 
drm_connector_cleanup extern void drm_connector_cleanup ( s#drm_connector * ) 
drm_connector_unplug_all extern void drm_connector_unplug_all ( s#drm_device * ) 
drm_encoder_init extern int drm_encoder_init ( s#drm_device * , s#drm_encoder * , const s#drm_encoder_funcs * , int ) 
drm_encoder_cleanup extern void drm_encoder_cleanup ( s#drm_encoder * ) 
s#drm_plane_funcs struct drm_plane_funcs { int ( * update_plane ) ( s#drm_plane * , s#drm_crtc * , s#drm_framebuffer * , int , int , unsigned int , unsigned int , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t ) ; int ( * disable_plane ) ( s#drm_plane * ) ; void ( * destroy ) ( s#drm_plane * ) ; int ( * set_property ) ( s#drm_plane * , s#drm_property * , t#uint64_t ) ; } 
s#drm_plane struct drm_plane { s#drm_device * dev ; s#list_head head ; s#drm_mode_object base ; t#uint32_t possible_crtcs ; t#uint32_t * format_types ; t#uint32_t format_count ; s#drm_crtc * crtc ; s#drm_framebuffer * fb ; t#uint32_t gamma_size ; t#uint16_t * gamma_store ; t#bool enabled ; const s#drm_plane_funcs * funcs ; void * helper_private ; s#drm_object_properties properties ; } 
drm_plane_init extern int drm_plane_init ( s#drm_device * , s#drm_plane * , unsigned long , const s#drm_plane_funcs * , const t#uint32_t * , t#uint32_t , t#bool ) 
drm_plane_cleanup extern void drm_plane_cleanup ( s#drm_plane * ) 
drm_mode_create extern s#drm_display_mode * drm_mode_create ( s#drm_device * ) 
drm_mode_destroy extern void drm_mode_destroy ( s#drm_device * , s#drm_display_mode * ) 
drm_mode_create_dvi_i_properties extern int drm_mode_create_dvi_i_properties ( s#drm_device * ) 
drm_mode_create_tv_properties extern int drm_mode_create_tv_properties ( s#drm_device * , int , char * [ ] ) 
drm_mode_create_scaling_mode_property extern int drm_mode_create_scaling_mode_property ( s#drm_device * ) 
drm_mode_create_dithering_property extern int drm_mode_create_dithering_property ( s#drm_device * ) 
drm_mode_create_dirty_info_property extern int drm_mode_create_dirty_info_property ( s#drm_device * ) 
drm_mode_config_init extern void drm_mode_config_init ( s#drm_device * ) 
drm_mode_group_init_legacy_group extern int drm_mode_group_init_legacy_group ( s#drm_device * , s#drm_mode_group * ) 
drm_mode_config_cleanup extern void drm_mode_config_cleanup ( s#drm_device * ) 
drm_mode_legacy_fb_format extern t#uint32_t drm_mode_legacy_fb_format ( t#uint32_t , t#uint32_t ) 
drm_mode_attachmode_crtc extern int drm_mode_attachmode_crtc ( s#drm_device * , s#drm_crtc * , const s#drm_display_mode * ) 
drm_mode_detachmode_crtc extern int drm_mode_detachmode_crtc ( s#drm_device * , s#drm_display_mode * ) 
drm_property_create extern s#drm_property * drm_property_create ( s#drm_device * , int , const char * , int ) 
s#drm_prop_enum_list struct drm_prop_enum_list { int type ; char * name ; } 
drm_property_create_enum extern s#drm_property * drm_property_create_enum ( s#drm_device * , int , const char * , const s#drm_prop_enum_list * , int ) 
drm_property_create_bitmask s#drm_property * drm_property_create_bitmask ( s#drm_device * , int , const char * , const s#drm_prop_enum_list * , int ) 
drm_property_create_range s#drm_property * drm_property_create_range ( s#drm_device * , int , const char * , t#uint64_t , t#uint64_t ) 
drm_property_add_enum extern int drm_property_add_enum ( s#drm_property * , int , t#uint64_t , const char * ) 
drm_property_destroy extern void drm_property_destroy ( s#drm_device * , s#drm_property * ) 
drm_connector_attach_property extern void drm_connector_attach_property ( s#drm_connector * , s#drm_property * , t#uint64_t ) 
drm_connector_property_set_value extern int drm_connector_property_set_value ( s#drm_connector * , s#drm_property * , t#uint64_t ) 
drm_connector_property_get_value extern int drm_connector_property_get_value ( s#drm_connector * , s#drm_property * , t#uint64_t * ) 
drm_object_attach_property extern void drm_object_attach_property ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_set_value extern int drm_object_property_set_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t ) 
drm_object_property_get_value extern int drm_object_property_get_value ( s#drm_mode_object * , s#drm_property * , t#uint64_t * ) 
s#est_timings struct est_timings { t#u8 t1 ; t#u8 t2 ; t#u8 mfg_rsvd ; } 
s#std_timing struct std_timing { t#u8 hsize ; t#u8 vfreq_aspect ; } 
s#detailed_pixel_timing struct detailed_pixel_timing { t#u8 hactive_lo ; t#u8 hblank_lo ; t#u8 hactive_hblank_hi ; t#u8 vactive_lo ; t#u8 vblank_lo ; t#u8 vactive_vblank_hi ; t#u8 hsync_offset_lo ; t#u8 hsync_pulse_width_lo ; t#u8 vsync_offset_pulse_width_lo ; t#u8 hsync_vsync_offset_pulse_width_hi ; t#u8 width_mm_lo ; t#u8 height_mm_lo ; t#u8 width_height_mm_hi ; t#u8 hborder ; t#u8 vborder ; t#u8 misc ; } 
s#detailed_data_string struct detailed_data_string { t#u8 str [ 13 ] ; } 
s#detailed_data_monitor_range struct detailed_data_monitor_range { t#u8 min_vfreq ; t#u8 max_vfreq ; t#u8 min_hfreq_khz ; t#u8 max_hfreq_khz ; t#u8 pixel_clock_mhz ; t#u8 flags ; union { struct { t#u8 reserved ; t#u8 hfreq_start_khz ; t#u8 c ; t#__le16 m ; t#u8 k ; t#u8 j ; } __attribute__ ( ( packed ) ) gtf2 ; struct { t#u8 version ; t#u8 data1 ; t#u8 data2 ; t#u8 supported_aspects ; t#u8 flags ; t#u8 supported_scalings ; t#u8 preferred_refresh ; } __attribute__ ( ( packed ) ) cvt ; } formula ; } 
s#detailed_data_wpindex struct detailed_data_wpindex { t#u8 white_yx_lo ; t#u8 white_x_hi ; t#u8 white_y_hi ; t#u8 gamma ; } 
s#cvt_timing struct cvt_timing { t#u8 code [ 3 ] ; } 
s#detailed_non_pixel struct detailed_non_pixel { t#u8 pad1 ; t#u8 type ; t#u8 pad2 ; union { s#detailed_data_string str ; s#detailed_data_monitor_range range ; s#detailed_data_wpindex color ; s#std_timing timings [ 6 ] ; s#cvt_timing cvt [ 4 ] ; } data ; } 
s#detailed_timing struct detailed_timing { t#__le16 pixel_clock ; union { s#detailed_pixel_timing pixel_data ; s#detailed_non_pixel other_data ; } data ; } 
s#edid struct edid { t#u8 header [ 8 ] ; t#u8 mfg_id [ 2 ] ; t#u8 prod_code [ 2 ] ; t#u32 serial ; t#u8 mfg_week ; t#u8 mfg_year ; t#u8 version ; t#u8 revision ; t#u8 input ; t#u8 width_cm ; t#u8 height_cm ; t#u8 gamma ; t#u8 features ; t#u8 red_green_lo ; t#u8 black_white_lo ; t#u8 red_x ; t#u8 red_y ; t#u8 green_x ; t#u8 green_y ; t#u8 blue_x ; t#u8 blue_y ; t#u8 white_x ; t#u8 white_y ; s#est_timings established_timings ; s#std_timing standard_timings [ 8 ] ; s#detailed_timing detailed_timings [ 4 ] ; t#u8 extensions ; t#u8 checksum ; } 
drm_mode_connector_update_edid_property extern int drm_mode_connector_update_edid_property ( s#drm_connector * , s#edid * ) 
drm_mode_connector_attach_encoder extern int drm_mode_connector_attach_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_mode_connector_detach_encoder extern void drm_mode_connector_detach_encoder ( s#drm_connector * , s#drm_encoder * ) 
drm_mode_crtc_set_gamma_size extern int drm_mode_crtc_set_gamma_size ( s#drm_crtc * , int ) 
drm_mode_config_reset extern void drm_mode_config_reset ( s#drm_device * ) 
drm_fb_get_bpp_depth extern void drm_fb_get_bpp_depth ( t#uint32_t , unsigned int * , int * ) 
drm_format_num_planes extern int drm_format_num_planes ( t#uint32_t ) 
drm_format_plane_cpp extern int drm_format_plane_cpp ( t#uint32_t , int ) 
drm_format_horz_chroma_subsampling extern int drm_format_horz_chroma_subsampling ( t#uint32_t ) 
drm_format_vert_chroma_subsampling extern int drm_format_vert_chroma_subsampling ( t#uint32_t ) 

/* drivers/gpu/drm/drm_crtc_helper.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_helper_move_panel_connectors_to_head extern void drm_helper_move_panel_connectors_to_head ( s#drm_device * ) 
drm_helper_probe_single_connector_modes extern int drm_helper_probe_single_connector_modes ( s#drm_connector * , t#uint32_t , t#uint32_t ) 
drm_helper_encoder_in_use extern t#bool drm_helper_encoder_in_use ( s#drm_encoder * ) 
drm_helper_crtc_in_use extern t#bool drm_helper_crtc_in_use ( s#drm_crtc * ) 
drm_helper_disable_unused_functions extern void drm_helper_disable_unused_functions ( s#drm_device * ) 
drm_crtc_helper_set_mode extern t#bool drm_crtc_helper_set_mode ( s#drm_crtc * , s#drm_display_mode * , int , int , s#drm_framebuffer * ) 
drm_crtc_helper_set_config extern int drm_crtc_helper_set_config ( s#drm_mode_set * ) 
drm_helper_connector_dpms extern void drm_helper_connector_dpms ( s#drm_connector * , int ) 
drm_helper_mode_fill_fb_struct extern int drm_helper_mode_fill_fb_struct ( s#drm_framebuffer * , s#drm_mode_fb_cmd2 * ) 
drm_helper_resume_force_mode extern int drm_helper_resume_force_mode ( s#drm_device * ) 
drm_kms_helper_hotplug_event extern void drm_kms_helper_hotplug_event ( s#drm_device * ) 
drm_kms_helper_poll_disable extern void drm_kms_helper_poll_disable ( s#drm_device * ) 
drm_kms_helper_poll_enable extern void drm_kms_helper_poll_enable ( s#drm_device * ) 
drm_kms_helper_poll_init extern void drm_kms_helper_poll_init ( s#drm_device * ) 
drm_kms_helper_poll_fini extern void drm_kms_helper_poll_fini ( s#drm_device * ) 
drm_helper_hpd_irq_event extern void drm_helper_hpd_irq_event ( s#drm_device * ) 

/* drivers/gpu/drm/drm_debugfs.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_debugfs_create_files extern int drm_debugfs_create_files ( s#drm_info_list * , int , s#dentry * , s#drm_minor * ) 
drm_debugfs_remove_files extern int drm_debugfs_remove_files ( s#drm_info_list * , int , s#drm_minor * ) 

/* drivers/gpu/drm/drm_dma.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_core_reclaim_buffers extern void drm_core_reclaim_buffers ( s#drm_device * , s#drm_file * ) 

/* drivers/gpu/drm/drm_dp_helper.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
i2c_dp_aux_add_bus int i2c_dp_aux_add_bus ( s#i2c_adapter * ) 
drm_dp_channel_eq_ok t#bool drm_dp_channel_eq_ok ( t#u8 [ 6 ] , int ) 
drm_dp_clock_recovery_ok t#bool drm_dp_clock_recovery_ok ( t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_voltage t#u8 drm_dp_get_adjust_request_voltage ( t#u8 [ 6 ] , int ) 
drm_dp_get_adjust_request_pre_emphasis t#u8 drm_dp_get_adjust_request_pre_emphasis ( t#u8 [ 6 ] , int ) 
drm_dp_link_train_clock_recovery_delay void drm_dp_link_train_clock_recovery_delay ( t#u8 [ 0xf ] ) 
drm_dp_link_train_channel_eq_delay void drm_dp_link_train_channel_eq_delay ( t#u8 [ 0xf ] ) 
drm_dp_link_rate_to_bw_code t#u8 drm_dp_link_rate_to_bw_code ( int ) 
drm_dp_bw_code_to_link_rate int drm_dp_bw_code_to_link_rate ( t#u8 ) 

/* drivers/gpu/drm/drm_drv.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
drm_ioctl extern long drm_ioctl ( s#file * , unsigned int , unsigned long ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_getsarea extern s#drm_local_map * drm_getsarea ( s#drm_device * ) 

/* drivers/gpu/drm/drm_edid.o */
drm_edid_header_is_valid extern int drm_edid_header_is_valid ( const t#u8 * ) 
drm_edid_block_valid extern t#bool drm_edid_block_valid ( t#u8 * , int , t#bool ) 
drm_edid_is_valid extern t#bool drm_edid_is_valid ( s#edid * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
drm_probe_ddc extern t#bool drm_probe_ddc ( s#i2c_adapter * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_get_edid extern s#edid * drm_get_edid ( s#drm_connector * , s#i2c_adapter * ) 
drm_mode_find_dmt s#drm_display_mode * drm_mode_find_dmt ( s#drm_device * , int , int , int , t#bool ) 
drm_find_cea_extension extern t#u8 * drm_find_cea_extension ( s#edid * ) 
drm_match_cea_mode extern t#u8 drm_match_cea_mode ( s#drm_display_mode * ) 
drm_edid_to_eld void drm_edid_to_eld ( s#drm_connector * , s#edid * ) 
drm_av_sync_delay int drm_av_sync_delay ( s#drm_connector * , s#drm_display_mode * ) 
drm_select_eld s#drm_connector * drm_select_eld ( s#drm_encoder * , s#drm_display_mode * ) 
drm_detect_hdmi_monitor extern t#bool drm_detect_hdmi_monitor ( s#edid * ) 
drm_detect_monitor_audio extern t#bool drm_detect_monitor_audio ( s#edid * ) 
drm_add_edid_modes extern int drm_add_edid_modes ( s#drm_connector * , s#edid * ) 
drm_add_modes_noedid extern int drm_add_modes_noedid ( s#drm_connector * , int , int ) 
drm_set_preferred_mode extern void drm_set_preferred_mode ( s#drm_connector * , int , int ) 
drm_mode_cea_vic extern t#uint8_t drm_mode_cea_vic ( const s#drm_display_mode * ) 

/* drivers/gpu/drm/drm_encoder_slave.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_encoder_slave_funcs struct drm_encoder_slave_funcs { void ( * set_config ) ( s#drm_encoder * , void * ) ; void ( * destroy ) ( s#drm_encoder * ) ; void ( * dpms ) ( s#drm_encoder * , int ) ; void ( * save ) ( s#drm_encoder * ) ; void ( * restore ) ( s#drm_encoder * ) ; t#bool ( * mode_fixup ) ( s#drm_encoder * , const s#drm_display_mode * , s#drm_display_mode * ) ; int ( * mode_valid ) ( s#drm_encoder * , s#drm_display_mode * ) ; void ( * mode_set ) ( s#drm_encoder * , s#drm_display_mode * , s#drm_display_mode * ) ; e#drm_connector_status ( * detect ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * get_modes ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * create_resources ) ( s#drm_encoder * , s#drm_connector * ) ; int ( * set_property ) ( s#drm_encoder * , s#drm_connector * , s#drm_property * , t#uint64_t ) ; } 
s#drm_encoder_slave struct drm_encoder_slave { s#drm_encoder base ; s#drm_encoder_slave_funcs * slave_funcs ; void * slave_priv ; void * bus_priv ; } 
s#i2c_board_info struct i2c_board_info { char type [ 20 ] ; unsigned short flags ; unsigned short addr ; void * platform_data ; s#dev_archdata * archdata ; s#device_node * of_node ; int irq ; } 
drm_i2c_encoder_init int drm_i2c_encoder_init ( s#drm_device * , s#drm_encoder_slave * , s#i2c_adapter * , const s#i2c_board_info * ) 
drm_i2c_encoder_destroy void drm_i2c_encoder_destroy ( s#drm_encoder * ) 

/* drivers/gpu/drm/drm_fb_helper.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
s#drm_fb_helper_crtc struct drm_fb_helper_crtc { s#drm_mode_set mode_set ; s#drm_display_mode * desired_mode ; } 
s#drm_cmdline_mode struct drm_cmdline_mode { t#bool specified ; t#bool refresh_specified ; t#bool bpp_specified ; int xres , yres ; int bpp ; int refresh ; t#bool rb ; t#bool interlace ; t#bool cvt ; t#bool margins ; e#drm_connector_force force ; } 
s#drm_fb_helper_connector struct drm_fb_helper_connector { s#drm_connector * connector ; s#drm_cmdline_mode cmdline_mode ; } 
s#drm_fb_helper_surface_size struct drm_fb_helper_surface_size { t#u32 fb_width ; t#u32 fb_height ; t#u32 surface_width ; t#u32 surface_height ; t#u32 surface_bpp ; t#u32 surface_depth ; } 
s#drm_fb_helper_funcs struct drm_fb_helper_funcs { void ( * gamma_set ) ( s#drm_crtc * , t#u16 , t#u16 , t#u16 , int ) ; void ( * gamma_get ) ( s#drm_crtc * , t#u16 * , t#u16 * , t#u16 * , int ) ; int ( * fb_probe ) ( s#drm_fb_helper * , s#drm_fb_helper_surface_size * ) ; } 
s#fb_bitfield struct fb_bitfield { t#__u32 offset ; t#__u32 length ; t#__u32 msb_right ; } 
s#fb_var_screeninfo struct fb_var_screeninfo { t#__u32 xres ; t#__u32 yres ; t#__u32 xres_virtual ; t#__u32 yres_virtual ; t#__u32 xoffset ; t#__u32 yoffset ; t#__u32 bits_per_pixel ; t#__u32 grayscale ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; t#__u32 nonstd ; t#__u32 activate ; t#__u32 height ; t#__u32 width ; t#__u32 accel_flags ; t#__u32 pixclock ; t#__u32 left_margin ; t#__u32 right_margin ; t#__u32 upper_margin ; t#__u32 lower_margin ; t#__u32 hsync_len ; t#__u32 vsync_len ; t#__u32 sync ; t#__u32 vmode ; t#__u32 rotate ; t#__u32 reserved [ 5 ] ; } 
s#fb_fix_screeninfo struct fb_fix_screeninfo { char id [ 16 ] ; unsigned long smem_start ; t#__u32 smem_len ; t#__u32 type ; t#__u32 type_aux ; t#__u32 visual ; t#__u16 xpanstep ; t#__u16 ypanstep ; t#__u16 ywrapstep ; t#__u32 line_length ; unsigned long mmio_start ; t#__u32 mmio_len ; t#__u32 accel ; t#__u16 reserved [ 3 ] ; } 
s#fb_chroma struct fb_chroma { t#__u32 redx ; t#__u32 greenx ; t#__u32 bluex ; t#__u32 whitex ; t#__u32 redy ; t#__u32 greeny ; t#__u32 bluey ; t#__u32 whitey ; } 
s#fb_videomode struct fb_videomode { const char * name ; t#u32 refresh ; t#u32 xres ; t#u32 yres ; t#u32 pixclock ; t#u32 left_margin ; t#u32 right_margin ; t#u32 upper_margin ; t#u32 lower_margin ; t#u32 hsync_len ; t#u32 vsync_len ; t#u32 sync ; t#u32 vmode ; t#u32 flag ; } 
s#fb_monspecs struct fb_monspecs { s#fb_chroma chroma ; s#fb_videomode * modedb ; t#__u8 manufacturer [ 4 ] ; t#__u8 monitor [ 14 ] ; t#__u8 serial_no [ 14 ] ; t#__u8 ascii [ 14 ] ; t#__u32 modedb_len ; t#__u32 model ; t#__u32 serial ; t#__u32 year ; t#__u32 week ; t#__u32 hfmin ; t#__u32 hfmax ; t#__u32 dclkmin ; t#__u32 dclkmax ; t#__u16 input ; t#__u16 dpms ; t#__u16 signal ; t#__u16 vfmin ; t#__u16 vfmax ; t#__u16 gamma ; t#__u16 gtf : 1 ; t#__u16 misc ; t#__u8 version ; t#__u8 revision ; t#__u8 max_x ; t#__u8 max_y ; } 
s#fb_pixmap struct fb_pixmap { t#u8 * addr ; t#u32 size ; t#u32 offset ; t#u32 buf_align ; t#u32 scan_align ; t#u32 access_align ; t#u32 flags ; t#u32 blit_x ; t#u32 blit_y ; void ( * writeio ) ( s#fb_info * , void * , void * , unsigned int ) ; void ( * readio ) ( s#fb_info * , void * , void * , unsigned int ) ; } 
s#fb_cmap struct fb_cmap { t#__u32 start ; t#__u32 len ; t#__u16 * red ; t#__u16 * green ; t#__u16 * blue ; t#__u16 * transp ; } 
e#backlight_type enum backlight_type { BACKLIGHT_RAW = 1 , BACKLIGHT_PLATFORM , BACKLIGHT_FIRMWARE , BACKLIGHT_TYPE_MAX , } 
s#backlight_properties struct backlight_properties { int brightness ; int max_brightness ; int power ; int fb_blank ; e#backlight_type type ; unsigned int state ; } 
s#backlight_ops struct backlight_ops { unsigned int options ; int ( * update_status ) ( s#backlight_device * ) ; int ( * get_brightness ) ( s#backlight_device * ) ; int ( * check_fb ) ( s#backlight_device * , s#fb_info * ) ; } 
s#backlight_device struct backlight_device { s#backlight_properties props ; s#mutex update_lock ; s#mutex ops_lock ; const s#backlight_ops * ops ; s#notifier_block fb_notif ; s#device dev ; } 
s#fb_deferred_io struct fb_deferred_io { unsigned long delay ; s#mutex lock ; s#list_head pagelist ; void ( * deferred_io ) ( s#fb_info * , s#list_head * ) ; } 
s#fb_fillrect struct fb_fillrect { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 color ; t#__u32 rop ; } 
s#fb_copyarea struct fb_copyarea { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 sx ; t#__u32 sy ; } 
s#fb_image struct fb_image { t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; t#__u32 fg_color ; t#__u32 bg_color ; t#__u8 depth ; const char * data ; s#fb_cmap cmap ; } 
s#fbcurpos struct fbcurpos { t#__u16 x , y ; } 
s#fb_cursor struct fb_cursor { t#__u16 set ; t#__u16 enable ; t#__u16 rop ; const char * mask ; s#fbcurpos hot ; s#fb_image image ; } 
s#fb_blit_caps struct fb_blit_caps { t#u32 x ; t#u32 y ; t#u32 len ; t#u32 flags ; } 
s#fb_ops struct fb_ops { s#module * owner ; int ( * fb_open ) ( s#fb_info * , int ) ; int ( * fb_release ) ( s#fb_info * , int ) ; t#ssize_t ( * fb_read ) ( s#fb_info * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * fb_write ) ( s#fb_info * , const char * , t#size_t , t#loff_t * ) ; int ( * fb_check_var ) ( s#fb_var_screeninfo * , s#fb_info * ) ; int ( * fb_set_par ) ( s#fb_info * ) ; int ( * fb_setcolreg ) ( unsigned , unsigned , unsigned , unsigned , unsigned , s#fb_info * ) ; int ( * fb_setcmap ) ( s#fb_cmap * , s#fb_info * ) ; int ( * fb_blank ) ( int , s#fb_info * ) ; int ( * fb_pan_display ) ( s#fb_var_screeninfo * , s#fb_info * ) ; void ( * fb_fillrect ) ( s#fb_info * , const s#fb_fillrect * ) ; void ( * fb_copyarea ) ( s#fb_info * , const s#fb_copyarea * ) ; void ( * fb_imageblit ) ( s#fb_info * , const s#fb_image * ) ; int ( * fb_cursor ) ( s#fb_info * , s#fb_cursor * ) ; void ( * fb_rotate ) ( s#fb_info * , int ) ; int ( * fb_sync ) ( s#fb_info * ) ; int ( * fb_ioctl ) ( s#fb_info * , unsigned int , unsigned long ) ; int ( * fb_compat_ioctl ) ( s#fb_info * , unsigned , unsigned long ) ; int ( * fb_mmap ) ( s#fb_info * , s#vm_area_struct * ) ; void ( * fb_get_caps ) ( s#fb_info * , s#fb_blit_caps * , s#fb_var_screeninfo * ) ; void ( * fb_destroy ) ( s#fb_info * ) ; int ( * fb_debug_enter ) ( s#fb_info * ) ; int ( * fb_debug_leave ) ( s#fb_info * ) ; } 
s#fb_tilemap struct fb_tilemap { t#__u32 width ; t#__u32 height ; t#__u32 depth ; t#__u32 length ; const t#__u8 * data ; } 
s#fb_tilearea struct fb_tilearea { t#__u32 sx ; t#__u32 sy ; t#__u32 dx ; t#__u32 dy ; t#__u32 width ; t#__u32 height ; } 
s#fb_tilerect struct fb_tilerect { t#__u32 sx ; t#__u32 sy ; t#__u32 width ; t#__u32 height ; t#__u32 index ; t#__u32 fg ; t#__u32 bg ; t#__u32 rop ; } 
s#fb_tileblit struct fb_tileblit { t#__u32 sx ; t#__u32 sy ; t#__u32 width ; t#__u32 height ; t#__u32 fg ; t#__u32 bg ; t#__u32 length ; t#__u32 * indices ; } 
s#fb_tilecursor struct fb_tilecursor { t#__u32 sx ; t#__u32 sy ; t#__u32 mode ; t#__u32 shape ; t#__u32 fg ; t#__u32 bg ; } 
s#fb_tile_ops struct fb_tile_ops { void ( * fb_settile ) ( s#fb_info * , s#fb_tilemap * ) ; void ( * fb_tilecopy ) ( s#fb_info * , s#fb_tilearea * ) ; void ( * fb_tilefill ) ( s#fb_info * , s#fb_tilerect * ) ; void ( * fb_tileblit ) ( s#fb_info * , s#fb_tileblit * ) ; void ( * fb_tilecursor ) ( s#fb_info * , s#fb_tilecursor * ) ; int ( * fb_get_tilemax ) ( s#fb_info * ) ; } 
s#aperture struct aperture { t#resource_size_t base ; t#resource_size_t size ; } 
s#apertures_struct struct apertures_struct { unsigned int count ; s#aperture ranges [ 0 ] ; } 
s#fb_info struct fb_info { t#atomic_t count ; int node ; int flags ; s#mutex lock ; s#mutex mm_lock ; s#fb_var_screeninfo var ; s#fb_fix_screeninfo fix ; s#fb_monspecs monspecs ; s#work_struct queue ; s#fb_pixmap pixmap ; s#fb_pixmap sprite ; s#fb_cmap cmap ; s#list_head modelist ; s#fb_videomode * mode ; s#backlight_device * bl_dev ; s#mutex bl_curve_mutex ; t#u8 bl_curve [ 128 ] ; s#delayed_work deferred_work ; s#fb_deferred_io * fbdefio ; s#fb_ops * fbops ; s#device * device ; s#device * dev ; int class_flag ; s#fb_tile_ops * tileops ; char * screen_base ; unsigned long screen_size ; void * pseudo_palette ; t#u32 state ; void * fbcon_par ; void * par ; s#apertures_struct * apertures ; } 
s#drm_fb_helper struct drm_fb_helper { s#drm_framebuffer * fb ; s#drm_framebuffer * saved_fb ; s#drm_device * dev ; s#drm_display_mode * mode ; int crtc_count ; s#drm_fb_helper_crtc * crtc_info ; int connector_count ; s#drm_fb_helper_connector * * connector_info ; s#drm_fb_helper_funcs * funcs ; s#fb_info * fbdev ; t#u32 pseudo_palette [ 17 ] ; s#list_head kernel_fb_list ; t#bool delayed_hotplug ; } 
drm_fb_helper_single_add_all_connectors int drm_fb_helper_single_add_all_connectors ( s#drm_fb_helper * ) 
drm_fb_helper_debug_enter int drm_fb_helper_debug_enter ( s#fb_info * ) 
drm_fb_helper_debug_leave int drm_fb_helper_debug_leave ( s#fb_info * ) 
drm_fb_helper_restore_fbdev_mode t#bool drm_fb_helper_restore_fbdev_mode ( s#drm_fb_helper * ) 
drm_fb_helper_panic int drm_fb_helper_panic ( s#notifier_block * , unsigned long , void * ) 
drm_fb_helper_restore void drm_fb_helper_restore ( void ) 
drm_fb_helper_blank int drm_fb_helper_blank ( int , s#fb_info * ) 
drm_fb_helper_init int drm_fb_helper_init ( s#drm_device * , s#drm_fb_helper * , int , int ) 
drm_fb_helper_fini void drm_fb_helper_fini ( s#drm_fb_helper * ) 
drm_fb_helper_setcmap int drm_fb_helper_setcmap ( s#fb_cmap * , s#fb_info * ) 
drm_fb_helper_check_var int drm_fb_helper_check_var ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_set_par int drm_fb_helper_set_par ( s#fb_info * ) 
drm_fb_helper_pan_display int drm_fb_helper_pan_display ( s#fb_var_screeninfo * , s#fb_info * ) 
drm_fb_helper_single_fb_probe int drm_fb_helper_single_fb_probe ( s#drm_fb_helper * , int ) 
drm_fb_helper_fill_fix void drm_fb_helper_fill_fix ( s#fb_info * , t#uint32_t , t#uint32_t ) 
drm_fb_helper_fill_var void drm_fb_helper_fill_var ( s#fb_info * , s#drm_fb_helper * , t#uint32_t , t#uint32_t ) 
drm_fb_helper_initial_config t#bool drm_fb_helper_initial_config ( s#drm_fb_helper * , int ) 
drm_fb_helper_hotplug_event int drm_fb_helper_hotplug_event ( s#drm_fb_helper * ) 

/* drivers/gpu/drm/drm_fops.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
drm_global_mutex extern s#mutex drm_global_mutex 
drm_open extern int drm_open ( s#inode * , s#file * ) 
drm_fasync extern int drm_fasync ( int , s#file * , int ) 
drm_release extern int drm_release ( s#inode * , s#file * ) 
drm_read extern t#ssize_t drm_read ( s#file * , char * , t#size_t , t#loff_t * ) 
drm_poll extern unsigned int drm_poll ( s#file * , s#poll_table_struct * ) 

/* drivers/gpu/drm/drm_gem.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##usb_driver
drm_gem_object_init int drm_gem_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_private_object_init int drm_gem_private_object_init ( s#drm_device * , s#drm_gem_object * , t#size_t ) 
drm_gem_object_alloc s#drm_gem_object * drm_gem_object_alloc ( s#drm_device * , t#size_t ) 
drm_gem_handle_delete int drm_gem_handle_delete ( s#drm_file * , t#u32 ) 
drm_gem_handle_create int drm_gem_handle_create ( s#drm_file * , s#drm_gem_object * , t#u32 * ) 
drm_gem_free_mmap_offset void drm_gem_free_mmap_offset ( s#drm_gem_object * ) 
drm_gem_create_mmap_offset int drm_gem_create_mmap_offset ( s#drm_gem_object * ) 
drm_gem_object_lookup s#drm_gem_object * drm_gem_object_lookup ( s#drm_device * , s#drm_file * , t#u32 ) 
drm_gem_object_release void drm_gem_object_release ( s#drm_gem_object * ) 
drm_gem_object_free void drm_gem_object_free ( s#kref * ) 
drm_gem_object_handle_free void drm_gem_object_handle_free ( s#drm_gem_object * ) 
drm_gem_vm_open void drm_gem_vm_open ( s#vm_area_struct * ) 
drm_gem_vm_close void drm_gem_vm_close ( s#vm_area_struct * ) 
drm_gem_mmap int drm_gem_mmap ( s#file * , s#vm_area_struct * ) 

/* drivers/gpu/drm/drm_global.o */
e#drm_global_types enum drm_global_types { DRM_GLOBAL_TTM_MEM = 0 , DRM_GLOBAL_TTM_BO , DRM_GLOBAL_TTM_OBJECT , DRM_GLOBAL_NUM } 
s#drm_global_reference struct drm_global_reference { e#drm_global_types global_type ; t#size_t size ; void * object ; int ( * init ) ( s#drm_global_reference * ) ; void ( * release ) ( s#drm_global_reference * ) ; } 
drm_global_item_ref extern int drm_global_item_ref ( s#drm_global_reference * ) 
drm_global_item_unref extern void drm_global_item_unref ( s#drm_global_reference * ) 

/* drivers/gpu/drm/drm_hashtab.o */
drm_ht_create extern int drm_ht_create ( s#drm_open_hash * , unsigned int ) 
drm_ht_insert_item extern int drm_ht_insert_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_just_insert_please extern int drm_ht_just_insert_please ( s#drm_open_hash * , s#drm_hash_item * , unsigned long , int , int , unsigned long ) 
drm_ht_find_item extern int drm_ht_find_item ( s#drm_open_hash * , unsigned long , s#drm_hash_item * * ) 
drm_ht_remove_item extern int drm_ht_remove_item ( s#drm_open_hash * , s#drm_hash_item * ) 
drm_ht_remove extern void drm_ht_remove ( s#drm_open_hash * ) 

/* drivers/gpu/drm/drm_ioc32.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
drm_compat_ioctl extern long drm_compat_ioctl ( s#file * , unsigned int , unsigned long ) 

/* drivers/gpu/drm/drm_ioctl.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_noop extern int drm_noop ( s#drm_device * , void * , s#drm_file * ) 

/* drivers/gpu/drm/drm_irq.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_vblank_cleanup extern void drm_vblank_cleanup ( s#drm_device * ) 
drm_vblank_init extern int drm_vblank_init ( s#drm_device * , int ) 
drm_irq_install extern int drm_irq_install ( s#drm_device * ) 
drm_irq_uninstall extern int drm_irq_uninstall ( s#drm_device * ) 
drm_calc_timestamping_constants extern void drm_calc_timestamping_constants ( s#drm_crtc * ) 
drm_calc_vbltimestamp_from_scanoutpos extern int drm_calc_vbltimestamp_from_scanoutpos ( s#drm_device * , int , int * , s#timeval * , unsigned , s#drm_crtc * ) 
drm_get_last_vbltimestamp extern t#u32 drm_get_last_vbltimestamp ( s#drm_device * , int , s#timeval * , unsigned ) 
drm_vblank_count extern t#u32 drm_vblank_count ( s#drm_device * , int ) 
drm_vblank_count_and_time extern t#u32 drm_vblank_count_and_time ( s#drm_device * , int , s#timeval * ) 
drm_send_vblank_event extern void drm_send_vblank_event ( s#drm_device * , int , s#drm_pending_vblank_event * ) 
drm_vblank_get extern int drm_vblank_get ( s#drm_device * , int ) 
drm_vblank_put extern void drm_vblank_put ( s#drm_device * , int ) 
drm_vblank_off extern void drm_vblank_off ( s#drm_device * , int ) 
drm_vblank_pre_modeset extern void drm_vblank_pre_modeset ( s#drm_device * , int ) 
drm_vblank_post_modeset extern void drm_vblank_post_modeset ( s#drm_device * , int ) 
drm_handle_vblank extern t#bool drm_handle_vblank ( s#drm_device * , int ) 

/* drivers/gpu/drm/drm_lock.o */
s##pid_namespace
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_idlelock_take extern void drm_idlelock_take ( s#drm_lock_data * ) 
drm_idlelock_release extern void drm_idlelock_release ( s#drm_lock_data * ) 

/* drivers/gpu/drm/drm_memory.o */
s##agp_bridge_data
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
drm_free_agp extern void drm_free_agp ( s#agp_memory * , int ) 
drm_unbind_agp extern int drm_unbind_agp ( s#agp_memory * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_core_ioremap extern void drm_core_ioremap ( s#drm_local_map * , s#drm_device * ) 
drm_core_ioremap_wc extern void drm_core_ioremap_wc ( s#drm_local_map * , s#drm_device * ) 
drm_core_ioremapfree extern void drm_core_ioremapfree ( s#drm_local_map * , s#drm_device * ) 

/* drivers/gpu/drm/drm_mm.o */
drm_mm_pre_get extern int drm_mm_pre_get ( s#drm_mm * ) 
drm_mm_create_block extern s#drm_mm_node * drm_mm_create_block ( s#drm_mm * , unsigned long , unsigned long , t#bool ) 
drm_mm_get_block_generic extern s#drm_mm_node * drm_mm_get_block_generic ( s#drm_mm_node * , unsigned long , unsigned , unsigned long , int ) 
drm_mm_insert_node_generic extern int drm_mm_insert_node_generic ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned , unsigned long ) 
drm_mm_insert_node extern int drm_mm_insert_node ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned ) 
drm_mm_get_block_range_generic extern s#drm_mm_node * drm_mm_get_block_range_generic ( s#drm_mm_node * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long , int ) 
drm_mm_insert_node_in_range_generic extern int drm_mm_insert_node_in_range_generic ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long ) 
drm_mm_insert_node_in_range extern int drm_mm_insert_node_in_range ( s#drm_mm * , s#drm_mm_node * , unsigned long , unsigned , unsigned long , unsigned long ) 
drm_mm_remove_node extern void drm_mm_remove_node ( s#drm_mm_node * ) 
drm_mm_put_block extern void drm_mm_put_block ( s#drm_mm_node * ) 
drm_mm_search_free_generic extern s#drm_mm_node * drm_mm_search_free_generic ( const s#drm_mm * , unsigned long , unsigned , unsigned long , t#bool ) 
drm_mm_search_free_in_range_generic extern s#drm_mm_node * drm_mm_search_free_in_range_generic ( const s#drm_mm * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long , t#bool ) 
drm_mm_replace_node extern void drm_mm_replace_node ( s#drm_mm_node * , s#drm_mm_node * ) 
drm_mm_init_scan void drm_mm_init_scan ( s#drm_mm * , unsigned long , unsigned , unsigned long ) 
drm_mm_init_scan_with_range void drm_mm_init_scan_with_range ( s#drm_mm * , unsigned long , unsigned , unsigned long , unsigned long , unsigned long ) 
drm_mm_scan_add_block int drm_mm_scan_add_block ( s#drm_mm_node * ) 
drm_mm_scan_remove_block int drm_mm_scan_remove_block ( s#drm_mm_node * ) 
drm_mm_clean extern int drm_mm_clean ( s#drm_mm * ) 
drm_mm_init extern int drm_mm_init ( s#drm_mm * , unsigned long , unsigned long ) 
drm_mm_takedown extern void drm_mm_takedown ( s#drm_mm * ) 
drm_mm_debug_table extern void drm_mm_debug_table ( s#drm_mm * , const char * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
drm_mm_dump_table int drm_mm_dump_table ( s#seq_file * , s#drm_mm * ) 

/* drivers/gpu/drm/drm_modes.o */
drm_mode_debug_printmodeline extern void drm_mode_debug_printmodeline ( const s#drm_display_mode * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_cvt_mode extern s#drm_display_mode * drm_cvt_mode ( s#drm_device * , int , int , int , t#bool , t#bool , t#bool ) 
drm_gtf_mode_complex extern s#drm_display_mode * drm_gtf_mode_complex ( s#drm_device * , int , int , int , t#bool , int , int , int , int , int ) 
drm_gtf_mode extern s#drm_display_mode * drm_gtf_mode ( s#drm_device * , int , int , int , t#bool , int ) 
drm_mode_set_name extern void drm_mode_set_name ( s#drm_display_mode * ) 
drm_mode_list_concat extern void drm_mode_list_concat ( s#list_head * , s#list_head * ) 
drm_mode_width extern int drm_mode_width ( const s#drm_display_mode * ) 
drm_mode_height extern int drm_mode_height ( const s#drm_display_mode * ) 
drm_mode_hsync extern int drm_mode_hsync ( const s#drm_display_mode * ) 
drm_mode_vrefresh extern int drm_mode_vrefresh ( const s#drm_display_mode * ) 
drm_mode_set_crtcinfo extern void drm_mode_set_crtcinfo ( s#drm_display_mode * , int ) 
drm_mode_copy extern void drm_mode_copy ( s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_duplicate extern s#drm_display_mode * drm_mode_duplicate ( s#drm_device * , const s#drm_display_mode * ) 
drm_mode_equal extern t#bool drm_mode_equal ( const s#drm_display_mode * , const s#drm_display_mode * ) 
drm_mode_validate_size extern void drm_mode_validate_size ( s#drm_device * , s#list_head * , int , int , int ) 
drm_mode_validate_clocks void drm_mode_validate_clocks ( s#drm_device * , s#list_head * , int * , int * , int ) 
drm_mode_prune_invalid extern void drm_mode_prune_invalid ( s#drm_device * , s#list_head * , t#bool ) 
drm_mode_sort extern void drm_mode_sort ( s#list_head * ) 
drm_mode_connector_list_update extern void drm_mode_connector_list_update ( s#drm_connector * ) 
drm_mode_parse_command_line_for_connector extern t#bool drm_mode_parse_command_line_for_connector ( const char * , s#drm_connector * , s#drm_cmdline_mode * ) 
drm_mode_create_from_cmdline_mode extern s#drm_display_mode * drm_mode_create_from_cmdline_mode ( s#drm_device * , s#drm_cmdline_mode * ) 

/* drivers/gpu/drm/drm_pci.o */
t#drm_dma_handle_t typedef s#drm_dma_handle drm_dma_handle_t 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_pci_alloc extern t#drm_dma_handle_t * drm_pci_alloc ( s#drm_device * , t#size_t , t#size_t ) 
drm_pci_free extern void drm_pci_free ( s#drm_device * , t#drm_dma_handle_t * ) 
drm_get_pci_dev extern int drm_get_pci_dev ( s#pci_dev * , const s#pci_device_id * , s#drm_driver * ) 
drm_pci_init extern int drm_pci_init ( s#drm_driver * , s#pci_driver * ) 
drm_pci_exit extern void drm_pci_exit ( s#drm_driver * , s#pci_driver * ) 
drm_pcie_get_speed_cap_mask extern int drm_pcie_get_speed_cap_mask ( s#drm_device * , t#u32 * ) 

/* drivers/gpu/drm/drm_platform.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##mfd_cell
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_get_platform_dev extern int drm_get_platform_dev ( s#platform_device * , s#drm_driver * ) 
drm_platform_init extern int drm_platform_init ( s#drm_driver * , s#platform_device * ) 
drm_platform_exit extern void drm_platform_exit ( s#drm_driver * , s#platform_device * ) 

/* drivers/gpu/drm/drm_prime.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##usb_driver
drm_gem_prime_handle_to_fd extern int drm_gem_prime_handle_to_fd ( s#drm_device * , s#drm_file * , t#uint32_t , t#uint32_t , int * ) 
drm_gem_prime_fd_to_handle extern int drm_gem_prime_fd_to_handle ( s#drm_device * , s#drm_file * , int , t#uint32_t * ) 
drm_prime_pages_to_sg extern s#sg_table * drm_prime_pages_to_sg ( s#page * * , int ) 
drm_prime_sg_to_page_addr_arrays extern int drm_prime_sg_to_page_addr_arrays ( s#sg_table * , s#page * * , t#dma_addr_t * , int ) 
drm_prime_gem_destroy extern void drm_prime_gem_destroy ( s#drm_gem_object * , s#sg_table * ) 
drm_prime_init_file_private void drm_prime_init_file_private ( s#drm_prime_file_private * ) 
drm_prime_destroy_file_private void drm_prime_destroy_file_private ( s#drm_prime_file_private * ) 
drm_prime_add_imported_buf_handle int drm_prime_add_imported_buf_handle ( s#drm_prime_file_private * , s#dma_buf * , t#uint32_t ) 
drm_prime_lookup_imported_buf_handle int drm_prime_lookup_imported_buf_handle ( s#drm_prime_file_private * , s#dma_buf * , t#uint32_t * ) 
drm_prime_remove_imported_buf_handle void drm_prime_remove_imported_buf_handle ( s#drm_prime_file_private * , s#dma_buf * ) 

/* drivers/gpu/drm/drm_stub.o */
drm_debug extern unsigned int drm_debug 
drm_vblank_offdelay extern unsigned int drm_vblank_offdelay 
drm_timestamp_precision extern unsigned int drm_timestamp_precision 
drm_err extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) int drm_err ( const char * , const char * , ... ) 
drm_ut_debug_printk extern __attribute__ ( ( format ( printf , 4 , 5 ) ) ) void drm_ut_debug_printk ( unsigned int , const char * , const char * , const char * , ... ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_master_get extern s#drm_master * drm_master_get ( s#drm_master * ) 
drm_master_put extern void drm_master_put ( s#drm_master * * ) 
drm_fill_in_dev extern int drm_fill_in_dev ( s#drm_device * , const s#pci_device_id * , s#drm_driver * ) 
drm_get_minor int drm_get_minor ( s#drm_device * , s#drm_minor * * , int ) 
drm_put_minor extern int drm_put_minor ( s#drm_minor * * ) 
drm_put_dev extern void drm_put_dev ( s#drm_device * ) 
drm_unplug_dev extern void drm_unplug_dev ( s#drm_device * ) 

/* drivers/gpu/drm/drm_sysfs.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##agp_bridge_data
s##mfd_cell
s##usb_device
s##dma_buf
s##dma_buf_attachment
s##usb_driver
drm_sysfs_connector_add extern int drm_sysfs_connector_add ( s#drm_connector * ) 
drm_sysfs_connector_remove extern void drm_sysfs_connector_remove ( s#drm_connector * ) 
drm_sysfs_hotplug_event extern void drm_sysfs_hotplug_event ( s#drm_device * ) 
drm_class_device_register extern int drm_class_device_register ( s#device * ) 
drm_class_device_unregister extern void drm_class_device_unregister ( s#device * ) 

/* drivers/gpu/drm/drm_vm.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
drm_mmap extern int drm_mmap ( s#file * , s#vm_area_struct * ) 

/* drivers/gpu/drm/ttm/ttm_agp_backend.o */
s##sock
s##sysfs_dirent
s#ttm_mem_shrink struct ttm_mem_shrink { int ( * do_shrink ) ( s#ttm_mem_shrink * ) ; } 
s##workqueue_struct
s##ttm_mem_zone
s#ttm_mem_global struct ttm_mem_global { s#kobject kobj ; s#ttm_mem_shrink * shrink ; s#workqueue_struct * swap_queue ; s#work_struct work ; t#spinlock_t lock ; s#ttm_mem_zone * zones [ 2 ] ; unsigned int num_zones ; s#ttm_mem_zone * zone_kernel ; s#ttm_mem_zone * zone_dma32 ; } 
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#ttm_bo_global struct ttm_bo_global { s#kobject kobj ; s#ttm_mem_global * mem_glob ; s#page * dummy_read_page ; s#ttm_mem_shrink shrink ; s#mutex device_list_mutex ; t#spinlock_t lru_lock ; s#list_head device_list ; s#list_head swap_lru ; t#atomic_t bo_count ; } 
e#ttm_bo_type enum ttm_bo_type { ttm_bo_type_device , ttm_bo_type_kernel , ttm_bo_type_sg } 
s#ttm_bus_placement struct ttm_bus_placement { void * addr ; unsigned long base ; unsigned long size ; unsigned long offset ; t#bool is_iomem ; t#bool io_reserved_vm ; t#uint64_t io_reserved_count ; } 
s#ttm_mem_reg struct ttm_mem_reg { void * mm_node ; unsigned long start ; unsigned long size ; unsigned long num_pages ; t#uint32_t page_alignment ; t#uint32_t mem_type ; t#uint32_t placement ; s#ttm_bus_placement bus ; } 
s##sg_table
s#ttm_buffer_object struct ttm_buffer_object { s#ttm_bo_global * glob ; s#ttm_bo_device * bdev ; e#ttm_bo_type type ; void ( * destroy ) ( s#ttm_buffer_object * ) ; unsigned long num_pages ; t#uint64_t addr_space_offset ; t#size_t acc_size ; s#kref kref ; s#kref list_kref ; t#wait_queue_head_t event_queue ; s#ttm_mem_reg mem ; s#file * persistent_swap_storage ; s#ttm_tt * ttm ; t#bool evicted ; t#atomic_t cpu_writers ; s#list_head lru ; s#list_head ddestroy ; s#list_head swap ; s#list_head io_reserve_lru ; t#uint32_t val_seq ; t#bool seq_valid ; t#atomic_t reserved ; void * sync_obj ; unsigned long priv_flags ; s#rb_node vm_rb ; s#drm_mm_node * vm_node ; unsigned long offset ; t#uint32_t cur_placement ; s#sg_table * sg ; } 
s#ttm_placement struct ttm_placement { unsigned fpfn ; unsigned lpfn ; unsigned num_placement ; const t#uint32_t * placement ; unsigned num_busy_placement ; const t#uint32_t * busy_placement ; } 
s#ttm_mem_type_manager_func struct ttm_mem_type_manager_func { int ( * init ) ( s#ttm_mem_type_manager * , unsigned long ) ; int ( * takedown ) ( s#ttm_mem_type_manager * ) ; int ( * get_node ) ( s#ttm_mem_type_manager * , s#ttm_buffer_object * , s#ttm_placement * , s#ttm_mem_reg * ) ; void ( * put_node ) ( s#ttm_mem_type_manager * , s#ttm_mem_reg * ) ; void ( * debug ) ( s#ttm_mem_type_manager * , const char * ) ; } 
s#ttm_mem_type_manager struct ttm_mem_type_manager { s#ttm_bo_device * bdev ; t#bool has_type ; t#bool use_type ; t#uint32_t flags ; unsigned long gpu_offset ; t#uint64_t size ; t#uint32_t available_caching ; t#uint32_t default_caching ; const s#ttm_mem_type_manager_func * func ; void * priv ; s#mutex io_reserve_mutex ; t#bool use_io_reserve_lru ; t#bool io_reserve_fastpath ; s#list_head io_reserve_lru ; s#list_head lru ; } 
s#ttm_bo_driver struct ttm_bo_driver { s#ttm_tt * ( * ttm_tt_create ) ( s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) ; int ( * ttm_tt_populate ) ( s#ttm_tt * ) ; void ( * ttm_tt_unpopulate ) ( s#ttm_tt * ) ; int ( * invalidate_caches ) ( s#ttm_bo_device * , t#uint32_t ) ; int ( * init_mem_type ) ( s#ttm_bo_device * , t#uint32_t , s#ttm_mem_type_manager * ) ; void ( * evict_flags ) ( s#ttm_buffer_object * , s#ttm_placement * ) ; int ( * move ) ( s#ttm_buffer_object * , t#bool , t#bool , t#bool , t#bool , s#ttm_mem_reg * ) ; int ( * verify_access ) ( s#ttm_buffer_object * , s#file * ) ; t#bool ( * sync_obj_signaled ) ( void * ) ; int ( * sync_obj_wait ) ( void * , t#bool , t#bool ) ; int ( * sync_obj_flush ) ( void * ) ; void ( * sync_obj_unref ) ( void * * ) ; void * ( * sync_obj_ref ) ( void * ) ; void ( * move_notify ) ( s#ttm_buffer_object * , s#ttm_mem_reg * ) ; int ( * fault_reserve_notify ) ( s#ttm_buffer_object * ) ; void ( * swap_notify ) ( s#ttm_buffer_object * ) ; int ( * io_mem_reserve ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; void ( * io_mem_free ) ( s#ttm_bo_device * , s#ttm_mem_reg * ) ; } 
s#ttm_bo_device struct ttm_bo_device { s#list_head device_list ; s#ttm_bo_global * glob ; s#ttm_bo_driver * driver ; t#rwlock_t vm_lock ; s#ttm_mem_type_manager man [ 8 ] ; t#spinlock_t fence_lock ; s#rb_root addr_space_rb ; s#drm_mm addr_space_mm ; s#list_head ddestroy ; t#uint32_t val_seq ; s#address_space * dev_mapping ; s#delayed_work wq ; t#bool need_dma32 ; } 
s#ttm_backend_func struct ttm_backend_func { int ( * bind ) ( s#ttm_tt * , s#ttm_mem_reg * ) ; int ( * unbind ) ( s#ttm_tt * ) ; void ( * destroy ) ( s#ttm_tt * ) ; } 
e#ttm_caching_state enum ttm_caching_state { tt_uncached , tt_wc , tt_cached } 
s#ttm_tt struct ttm_tt { s#ttm_bo_device * bdev ; s#ttm_backend_func * func ; s#page * dummy_read_page ; s#page * * pages ; t#uint32_t page_flags ; unsigned long num_pages ; s#sg_table * sg ; s#ttm_bo_global * glob ; s#file * swap_storage ; e#ttm_caching_state caching_state ; enum { tt_bound , tt_unbound , tt_unpopulated , } state ; } 
s##agp_bridge_data
ttm_agp_tt_create extern s#ttm_tt * ttm_agp_tt_create ( s#ttm_bo_device * , s#agp_bridge_data * , unsigned long , t#uint32_t , s#page * ) 
ttm_agp_tt_populate int ttm_agp_tt_populate ( s#ttm_tt * ) 
ttm_agp_tt_unpopulate void ttm_agp_tt_unpopulate ( s#ttm_tt * ) 

/* drivers/gpu/drm/ttm/ttm_bo.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##sg_table
ttm_bo_wait_unreserved extern int ttm_bo_wait_unreserved ( s#ttm_buffer_object * , t#bool ) 
ttm_bo_reserve extern int ttm_bo_reserve ( s#ttm_buffer_object * , t#bool , t#bool , t#bool , t#uint32_t ) 
ttm_bo_unreserve extern void ttm_bo_unreserve ( s#ttm_buffer_object * ) 
ttm_bo_unref extern void ttm_bo_unref ( s#ttm_buffer_object * * ) 
ttm_bo_lock_delayed_workqueue extern int ttm_bo_lock_delayed_workqueue ( s#ttm_bo_device * ) 
ttm_bo_unlock_delayed_workqueue extern void ttm_bo_unlock_delayed_workqueue ( s#ttm_bo_device * , int ) 
ttm_bo_mem_put extern void ttm_bo_mem_put ( s#ttm_buffer_object * , s#ttm_mem_reg * ) 
ttm_bo_mem_space extern int ttm_bo_mem_space ( s#ttm_buffer_object * , s#ttm_placement * , s#ttm_mem_reg * , t#bool , t#bool , t#bool ) 
ttm_bo_validate extern int ttm_bo_validate ( s#ttm_buffer_object * , s#ttm_placement * , t#bool , t#bool , t#bool ) 
ttm_bo_init extern int ttm_bo_init ( s#ttm_bo_device * , s#ttm_buffer_object * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , s#file * , t#size_t , s#sg_table * , void ( * ) ( s#ttm_buffer_object * ) ) 
ttm_bo_acc_size t#size_t ttm_bo_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_dma_acc_size t#size_t ttm_bo_dma_acc_size ( s#ttm_bo_device * , unsigned long , unsigned ) 
ttm_bo_create extern int ttm_bo_create ( s#ttm_bo_device * , unsigned long , e#ttm_bo_type , s#ttm_placement * , t#uint32_t , t#bool , s#file * , s#ttm_buffer_object * * ) 
ttm_bo_clean_mm extern int ttm_bo_clean_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_evict_mm extern int ttm_bo_evict_mm ( s#ttm_bo_device * , unsigned ) 
ttm_bo_init_mm extern int ttm_bo_init_mm ( s#ttm_bo_device * , unsigned , unsigned long ) 
ttm_bo_global_release extern void ttm_bo_global_release ( s#drm_global_reference * ) 
ttm_bo_global_init extern int ttm_bo_global_init ( s#drm_global_reference * ) 
ttm_bo_device_release extern int ttm_bo_device_release ( s#ttm_bo_device * ) 
ttm_bo_device_init extern int ttm_bo_device_init ( s#ttm_bo_device * , s#ttm_bo_global * , s#ttm_bo_driver * , t#uint64_t , t#bool ) 
ttm_bo_unmap_virtual extern void ttm_bo_unmap_virtual ( s#ttm_buffer_object * ) 
ttm_bo_wait extern int ttm_bo_wait ( s#ttm_buffer_object * , t#bool , t#bool , t#bool ) 
ttm_bo_synccpu_write_grab extern int ttm_bo_synccpu_write_grab ( s#ttm_buffer_object * , t#bool ) 
ttm_bo_synccpu_write_release extern void ttm_bo_synccpu_write_release ( s#ttm_buffer_object * ) 
ttm_bo_swapout_all extern void ttm_bo_swapout_all ( s#ttm_bo_device * ) 

/* drivers/gpu/drm/ttm/ttm_bo_manager.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##sg_table
ttm_bo_manager_func extern const s#ttm_mem_type_manager_func ttm_bo_manager_func 

/* drivers/gpu/drm/ttm/ttm_bo_util.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##sg_table
ttm_bo_move_ttm extern int ttm_bo_move_ttm ( s#ttm_buffer_object * , t#bool , t#bool , t#bool , s#ttm_mem_reg * ) 
ttm_bo_move_memcpy extern int ttm_bo_move_memcpy ( s#ttm_buffer_object * , t#bool , t#bool , t#bool , s#ttm_mem_reg * ) 
ttm_io_prot extern t#pgprot_t ttm_io_prot ( t#uint32_t , t#pgprot_t ) 
s#ttm_bo_kmap_obj struct ttm_bo_kmap_obj { void * virtual ; s#page * page ; enum { ttm_bo_map_iomap = 1 | 0x80 , ttm_bo_map_vmap = 2 , ttm_bo_map_kmap = 3 , ttm_bo_map_premapped = 4 | 0x80 , } bo_kmap_type ; s#ttm_buffer_object * bo ; } 
ttm_bo_kmap extern int ttm_bo_kmap ( s#ttm_buffer_object * , unsigned long , unsigned long , s#ttm_bo_kmap_obj * ) 
ttm_bo_kunmap extern void ttm_bo_kunmap ( s#ttm_bo_kmap_obj * ) 
ttm_bo_move_accel_cleanup extern int ttm_bo_move_accel_cleanup ( s#ttm_buffer_object * , void * , t#bool , t#bool , t#bool , s#ttm_mem_reg * ) 

/* drivers/gpu/drm/ttm/ttm_bo_vm.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##workqueue_struct
s##ttm_mem_zone
s##sg_table
ttm_bo_mmap extern int ttm_bo_mmap ( s#file * , s#vm_area_struct * , s#ttm_bo_device * ) 
ttm_fbdev_mmap extern int ttm_fbdev_mmap ( s#vm_area_struct * , s#ttm_buffer_object * ) 

/* drivers/gpu/drm/ttm/ttm_execbuf_util.o */
ttm_eu_backoff_reservation extern void ttm_eu_backoff_reservation ( s#list_head * ) 
ttm_eu_reserve_buffers extern int ttm_eu_reserve_buffers ( s#list_head * ) 
ttm_eu_fence_buffer_objects extern void ttm_eu_fence_buffer_objects ( s#list_head * , void * ) 

/* drivers/gpu/drm/ttm/ttm_lock.o */
e#ttm_object_type enum ttm_object_type { ttm_fence_type , ttm_buffer_type , ttm_lock_type , ttm_driver_type0 = 256 , ttm_driver_type1 , ttm_driver_type2 , ttm_driver_type3 , ttm_driver_type4 , ttm_driver_type5 } 
s##ttm_object_file
e#ttm_ref_type enum ttm_ref_type { TTM_REF_USAGE , TTM_REF_SYNCCPU_READ , TTM_REF_SYNCCPU_WRITE , TTM_REF_NUM } 
s#ttm_base_object struct ttm_base_object { s#rcu_head rhead ; s#drm_hash_item hash ; e#ttm_object_type object_type ; t#bool shareable ; s#ttm_object_file * tfile ; s#kref refcount ; void ( * refcount_release ) ( s#ttm_base_object * * ) ; void ( * ref_obj_release ) ( s#ttm_base_object * , e#ttm_ref_type ) ; } 
s#ttm_lock struct ttm_lock { s#ttm_base_object base ; t#wait_queue_head_t queue ; t#spinlock_t lock ; t#int32_t rw ; t#uint32_t flags ; t#bool kill_takers ; int signal ; s#ttm_object_file * vt_holder ; } 
ttm_lock_init extern void ttm_lock_init ( s#ttm_lock * ) 
ttm_read_unlock extern void ttm_read_unlock ( s#ttm_lock * ) 
ttm_read_lock extern int ttm_read_lock ( s#ttm_lock * , t#bool ) 
ttm_write_unlock extern void ttm_write_unlock ( s#ttm_lock * ) 
ttm_write_lock extern int ttm_write_lock ( s#ttm_lock * , t#bool ) 
ttm_vt_lock extern int ttm_vt_lock ( s#ttm_lock * , t#bool , s#ttm_object_file * ) 
ttm_vt_unlock extern int ttm_vt_unlock ( s#ttm_lock * ) 
ttm_suspend_unlock extern void ttm_suspend_unlock ( s#ttm_lock * ) 
ttm_suspend_lock extern void ttm_suspend_lock ( s#ttm_lock * ) 

/* drivers/gpu/drm/ttm/ttm_memory.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
ttm_mem_global_init extern int ttm_mem_global_init ( s#ttm_mem_global * ) 
ttm_mem_global_release extern void ttm_mem_global_release ( s#ttm_mem_global * ) 
ttm_mem_global_free extern void ttm_mem_global_free ( s#ttm_mem_global * , t#uint64_t ) 
ttm_mem_global_alloc extern int ttm_mem_global_alloc ( s#ttm_mem_global * , t#uint64_t , t#bool , t#bool ) 
ttm_round_pot extern t#size_t ttm_round_pot ( t#size_t ) 

/* drivers/gpu/drm/ttm/ttm_object.o */
s##ttm_object_file
ttm_base_object_init extern int ttm_base_object_init ( s#ttm_object_file * , s#ttm_base_object * , t#bool , e#ttm_object_type , void ( * ) ( s#ttm_base_object * * ) , void ( * ) ( s#ttm_base_object * , e#ttm_ref_type ) ) 
ttm_base_object_unref extern void ttm_base_object_unref ( s#ttm_base_object * * ) 
ttm_base_object_lookup extern s#ttm_base_object * ttm_base_object_lookup ( s#ttm_object_file * , t#uint32_t ) 
ttm_ref_object_add extern int ttm_ref_object_add ( s#ttm_object_file * , s#ttm_base_object * , e#ttm_ref_type , t#bool * ) 
ttm_ref_object_base_unref extern int ttm_ref_object_base_unref ( s#ttm_object_file * , unsigned long , e#ttm_ref_type ) 
ttm_object_file_release extern void ttm_object_file_release ( s#ttm_object_file * * ) 
s##ttm_object_device
ttm_object_file_init extern s#ttm_object_file * ttm_object_file_init ( s#ttm_object_device * , unsigned int ) 
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
ttm_object_device_init extern s#ttm_object_device * ttm_object_device_init ( s#ttm_mem_global * , unsigned int ) 
ttm_object_device_release extern void ttm_object_device_release ( s#ttm_object_device * * ) 

/* drivers/gpu/drm/ttm/ttm_page_alloc.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
ttm_pool_populate extern int ttm_pool_populate ( s#ttm_tt * ) 
ttm_pool_unpopulate extern void ttm_pool_unpopulate ( s#ttm_tt * ) 
ttm_page_alloc_debugfs extern int ttm_page_alloc_debugfs ( s#seq_file * , void * ) 

/* drivers/gpu/drm/ttm/ttm_tt.o */
s##sock
s##sysfs_dirent
s##workqueue_struct
s##ttm_mem_zone
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##sg_table
ttm_tt_set_placement_caching extern int ttm_tt_set_placement_caching ( s#ttm_tt * , t#uint32_t ) 
ttm_tt_init extern int ttm_tt_init ( s#ttm_tt * , s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) 
ttm_tt_fini extern void ttm_tt_fini ( s#ttm_tt * ) 
s#ttm_dma_tt struct ttm_dma_tt { s#ttm_tt ttm ; t#dma_addr_t * dma_address ; s#list_head pages_list ; } 
ttm_dma_tt_init extern int ttm_dma_tt_init ( s#ttm_dma_tt * , s#ttm_bo_device * , unsigned long , t#uint32_t , s#page * ) 
ttm_dma_tt_fini extern void ttm_dma_tt_fini ( s#ttm_dma_tt * ) 
ttm_tt_bind extern int ttm_tt_bind ( s#ttm_tt * , s#ttm_mem_reg * ) 

/* drivers/gpu/vga/vgaarb.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
vga_get extern int vga_get ( s#pci_dev * , unsigned int , int ) 
vga_tryget extern int vga_tryget ( s#pci_dev * , unsigned int ) 
vga_put extern void vga_put ( s#pci_dev * , unsigned int ) 
vga_set_legacy_decoding extern void vga_set_legacy_decoding ( s#pci_dev * , unsigned int ) 
vga_client_register int vga_client_register ( s#pci_dev * , void * , void ( * ) ( void * , t#bool ) , unsigned int ( * ) ( void * , t#bool ) ) 

/* drivers/hid/hid-core.o */
hid_debug extern int hid_debug 
s#hid_usage struct hid_usage { unsigned hid ; unsigned collection_index ; unsigned usage_index ; t#__u16 code ; t#__u8 type ; t#__s8 hat_min ; t#__s8 hat_max ; t#__s8 hat_dir ; } 
s#input_id struct input_id { t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; } 
s#input_keymap_entry struct input_keymap_entry { t#__u8 flags ; t#__u8 len ; t#__u16 index ; t#__u32 keycode ; t#__u8 scancode [ 32 ] ; } 
s#ff_trigger struct ff_trigger { t#__u16 button ; t#__u16 interval ; } 
s#ff_replay struct ff_replay { t#__u16 length ; t#__u16 delay ; } 
s#ff_envelope struct ff_envelope { t#__u16 attack_length ; t#__u16 attack_level ; t#__u16 fade_length ; t#__u16 fade_level ; } 
s#ff_constant_effect struct ff_constant_effect { t#__s16 level ; s#ff_envelope envelope ; } 
s#ff_ramp_effect struct ff_ramp_effect { t#__s16 start_level ; t#__s16 end_level ; s#ff_envelope envelope ; } 
s#ff_periodic_effect struct ff_periodic_effect { t#__u16 waveform ; t#__u16 period ; t#__s16 magnitude ; t#__s16 offset ; t#__u16 phase ; s#ff_envelope envelope ; t#__u32 custom_len ; t#__s16 * custom_data ; } 
s#ff_condition_effect struct ff_condition_effect { t#__u16 right_saturation ; t#__u16 left_saturation ; t#__s16 right_coeff ; t#__s16 left_coeff ; t#__u16 deadband ; t#__s16 center ; } 
s#ff_rumble_effect struct ff_rumble_effect { t#__u16 strong_magnitude ; t#__u16 weak_magnitude ; } 
s#ff_effect struct ff_effect { t#__u16 type ; t#__s16 id ; t#__u16 direction ; s#ff_trigger trigger ; s#ff_replay replay ; union { s#ff_constant_effect constant ; s#ff_ramp_effect ramp ; s#ff_periodic_effect periodic ; s#ff_condition_effect condition [ 2 ] ; s#ff_rumble_effect rumble ; } u ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#ff_device struct ff_device { int ( * upload ) ( s#input_dev * , s#ff_effect * , s#ff_effect * ) ; int ( * erase ) ( s#input_dev * , int ) ; int ( * playback ) ( s#input_dev * , int , int ) ; void ( * set_gain ) ( s#input_dev * , t#u16 ) ; void ( * set_autocenter ) ( s#input_dev * , t#u16 ) ; void ( * destroy ) ( s#ff_device * ) ; void * private ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex mutex ; int max_effects ; s#ff_effect * effects ; s#file * effect_owners [ ] ; } 
s##input_mt_slot
s#input_absinfo struct input_absinfo { t#__s32 value ; t#__s32 minimum ; t#__s32 maximum ; t#__s32 fuzz ; t#__s32 flat ; t#__s32 resolution ; } 
s#input_device_id struct input_device_id { t#kernel_ulong_t flags ; t#__u16 bustype ; t#__u16 vendor ; t#__u16 product ; t#__u16 version ; t#kernel_ulong_t evbit [ 0x1f / 64 + 1 ] ; t#kernel_ulong_t keybit [ 0x2ff / 64 + 1 ] ; t#kernel_ulong_t relbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t absbit [ 0x3f / 64 + 1 ] ; t#kernel_ulong_t mscbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ledbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t sndbit [ 0x07 / 64 + 1 ] ; t#kernel_ulong_t ffbit [ 0x7f / 64 + 1 ] ; t#kernel_ulong_t swbit [ 0x0f / 64 + 1 ] ; t#kernel_ulong_t driver_info ; } 
s#input_handler struct input_handler { void * private ; void ( * event ) ( s#input_handle * , unsigned int , unsigned int , int ) ; t#bool ( * filter ) ( s#input_handle * , unsigned int , unsigned int , int ) ; t#bool ( * match ) ( s#input_handler * , s#input_dev * ) ; int ( * connect ) ( s#input_handler * , s#input_dev * , const s#input_device_id * ) ; void ( * disconnect ) ( s#input_handle * ) ; void ( * start ) ( s#input_handle * ) ; const s#file_operations * fops ; int minor ; const char * name ; const s#input_device_id * id_table ; s#list_head h_list ; s#list_head node ; } 
s#input_handle struct input_handle { void * private ; int open ; const char * name ; s#input_dev * dev ; s#input_handler * handler ; s#list_head d_node ; s#list_head h_node ; } 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#input_dev struct input_dev { const char * name ; const char * phys ; const char * uniq ; s#input_id id ; unsigned long propbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long evbit [ ( ( ( ( 0x1f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long keybit [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long relbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long absbit [ ( ( ( ( 0x3f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long mscbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ledbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sndbit [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long ffbit [ ( ( ( ( 0x7f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long swbit [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned int hint_events_per_packet ; unsigned int keycodemax ; unsigned int keycodesize ; void * keycode ; int ( * setkeycode ) ( s#input_dev * , const s#input_keymap_entry * , unsigned int * ) ; int ( * getkeycode ) ( s#input_dev * , s#input_keymap_entry * ) ; s#ff_device * ff ; unsigned int repeat_key ; s#timer_list timer ; int rep [ ( 0x01 + 1 ) ] ; s#input_mt_slot * mt ; int mtsize ; int slot ; int trkid ; s#input_absinfo * absinfo ; unsigned long key [ ( ( ( ( 0x2ff + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long led [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long snd [ ( ( ( ( 0x07 + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long sw [ ( ( ( ( 0x0f + 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int ( * open ) ( s#input_dev * ) ; void ( * close ) ( s#input_dev * ) ; int ( * flush ) ( s#input_dev * , s#file * ) ; int ( * event ) ( s#input_dev * , unsigned int , unsigned int , int ) ; s#input_handle * grab ; t#spinlock_t event_lock ; s#mutex mutex ; unsigned int users ; t#bool going_away ; t#bool sync ; s#device dev ; s#list_head h_list ; s#list_head node ; } 
s#hid_input struct hid_input { s#list_head list ; s#hid_report * report ; s#input_dev * input ; } 
s#hid_field struct hid_field { unsigned physical ; unsigned logical ; unsigned application ; s#hid_usage * usage ; unsigned maxusage ; unsigned flags ; unsigned report_offset ; unsigned report_size ; unsigned report_count ; unsigned report_type ; t#__s32 * value ; t#__s32 logical_minimum ; t#__s32 logical_maximum ; t#__s32 physical_minimum ; t#__s32 physical_maximum ; t#__s32 unit_exponent ; unsigned unit ; s#hid_report * report ; unsigned index ; s#hid_input * hidinput ; t#__u16 dpad ; } 
s#hid_collection struct hid_collection { unsigned type ; unsigned usage ; unsigned level ; } 
e#hid_type enum hid_type { HID_TYPE_OTHER = 0 , HID_TYPE_USBMOUSE } 
s#hid_report_enum struct hid_report_enum { unsigned numbered ; s#list_head report_list ; s#hid_report * report_id_hash [ 256 ] ; } 
s#hid_device_id struct hid_device_id { t#__u16 bus ; t#__u16 pad1 ; t#__u32 vendor ; t#__u32 product ; t#kernel_ulong_t driver_data __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s#hid_report_id struct hid_report_id { t#__u32 report_type ; } 
s#hid_usage_id struct hid_usage_id { t#__u32 usage_hid ; t#__u32 usage_type ; t#__u32 usage_code ; } 
s#hid_driver struct hid_driver { char * name ; const s#hid_device_id * id_table ; s#list_head dyn_list ; t#spinlock_t dyn_lock ; int ( * probe ) ( s#hid_device * , const s#hid_device_id * ) ; void ( * remove ) ( s#hid_device * ) ; const s#hid_report_id * report_table ; int ( * raw_event ) ( s#hid_device * , s#hid_report * , t#u8 * , int ) ; const s#hid_usage_id * usage_table ; int ( * event ) ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) ; t#__u8 * ( * report_fixup ) ( s#hid_device * , t#__u8 * , unsigned int * ) ; int ( * input_mapping ) ( s#hid_device * , s#hid_input * , s#hid_field * , s#hid_usage * , unsigned long * * , int * ) ; int ( * input_mapped ) ( s#hid_device * , s#hid_input * , s#hid_field * , s#hid_usage * , unsigned long * * , int * ) ; void ( * feature_mapping ) ( s#hid_device * , s#hid_field * , s#hid_usage * ) ; int ( * suspend ) ( s#hid_device * , t#pm_message_t ) ; int ( * resume ) ( s#hid_device * ) ; int ( * reset_resume ) ( s#hid_device * ) ; s#device_driver driver ; } 
s#hid_ll_driver struct hid_ll_driver { int ( * start ) ( s#hid_device * ) ; void ( * stop ) ( s#hid_device * ) ; int ( * open ) ( s#hid_device * ) ; void ( * close ) ( s#hid_device * ) ; int ( * power ) ( s#hid_device * , int ) ; int ( * hidinput_input_event ) ( s#input_dev * , unsigned int , unsigned int , int ) ; int ( * parse ) ( s#hid_device * ) ; } 
s#hid_device struct hid_device { t#__u8 * rdesc ; unsigned rsize ; s#hid_collection * collection ; unsigned collection_size ; unsigned maxcollection ; unsigned maxapplication ; t#__u16 bus ; t#__u32 vendor ; t#__u32 product ; t#__u32 version ; e#hid_type type ; unsigned country ; s#hid_report_enum report_enum [ 3 ] ; s#device dev ; s#hid_driver * driver ; s#hid_ll_driver * ll_driver ; unsigned int status ; unsigned claimed ; unsigned quirks ; s#list_head inputs ; void * hiddev ; void * hidraw ; int minor ; int open ; char name [ 128 ] ; char phys [ 64 ] ; char uniq [ 64 ] ; void * driver_data ; int ( * ff_init ) ( s#hid_device * ) ; int ( * hiddev_connect ) ( s#hid_device * , unsigned int ) ; void ( * hiddev_disconnect ) ( s#hid_device * ) ; void ( * hiddev_hid_event ) ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) ; void ( * hiddev_report_event ) ( s#hid_device * , s#hid_report * ) ; int ( * hid_get_raw_report ) ( s#hid_device * , unsigned char , t#__u8 * , t#size_t , unsigned char ) ; int ( * hid_output_raw_report ) ( s#hid_device * , t#__u8 * , t#size_t , unsigned char ) ; unsigned short debug ; s#dentry * debug_dir ; s#dentry * debug_rdesc ; s#dentry * debug_events ; s#list_head debug_list ; t#wait_queue_head_t debug_wait ; } 
s#hid_report struct hid_report { s#list_head list ; unsigned id ; unsigned type ; s#hid_field * field [ 128 ] ; unsigned maxfield ; unsigned size ; s#hid_device * device ; } 
hid_register_report s#hid_report * hid_register_report ( s#hid_device * , unsigned , unsigned ) 
hid_parse_report int hid_parse_report ( s#hid_device * , t#__u8 * , unsigned ) 
hid_validate_values s#hid_report * hid_validate_values ( s#hid_device * , unsigned int , unsigned int , unsigned int , unsigned int ) 
hid_output_report void hid_output_report ( s#hid_report * , t#__u8 * ) 
hid_alloc_report_buf t#u8 * hid_alloc_report_buf ( s#hid_report * , t#gfp_t ) 
hid_set_field int hid_set_field ( s#hid_field * , unsigned , t#__s32 ) 
hid_report_raw_event void hid_report_raw_event ( s#hid_device * , int , t#u8 * , int , int ) 
hid_input_report int hid_input_report ( s#hid_device * , int , t#u8 * , int , int ) 
hid_connect int hid_connect ( s#hid_device * , unsigned int ) 
hid_disconnect void hid_disconnect ( s#hid_device * ) 
hid_add_device extern int hid_add_device ( s#hid_device * ) 
hid_allocate_device s#hid_device * hid_allocate_device ( void ) 
hid_destroy_device extern void hid_destroy_device ( s#hid_device * ) 
__hid_register_driver extern int __hid_register_driver ( s#hid_driver * , s#module * , const char * ) 
hid_unregister_driver extern void hid_unregister_driver ( s#hid_driver * ) 
hid_check_keys_pressed int hid_check_keys_pressed ( s#hid_device * ) 

/* drivers/hid/hid-debug.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
hid_resolv_usage char * hid_resolv_usage ( unsigned , s#seq_file * ) 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##input_mt_slot
hid_dump_field void hid_dump_field ( s#hid_field * , int , s#seq_file * ) 
hid_dump_device void hid_dump_device ( s#hid_device * , s#seq_file * ) 
hid_debug_event void hid_debug_event ( s#hid_device * , char * ) 
hid_dump_input void hid_dump_input ( s#hid_device * , s#hid_usage * , t#__s32 ) 

/* drivers/hid/hid-input.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
hidinput_report_event extern void hidinput_report_event ( s#hid_device * , s#hid_report * ) 
hidinput_find_field int hidinput_find_field ( s#hid_device * , unsigned int , unsigned int , s#hid_field * * ) 
hidinput_connect extern int hidinput_connect ( s#hid_device * , unsigned int ) 
hidinput_disconnect extern void hidinput_disconnect ( s#hid_device * ) 

/* drivers/hid/hid-roccat.o */
roccat_report_event int roccat_report_event ( int , t#u8 const * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##input_mt_slot
roccat_connect int roccat_connect ( s#class * , s#hid_device * , int ) 
roccat_disconnect void roccat_disconnect ( int ) 

/* drivers/hid/hid-roccat-common.o */
e#usb_device_state enum usb_device_state { USB_STATE_NOTATTACHED = 0 , USB_STATE_ATTACHED , USB_STATE_POWERED , USB_STATE_RECONNECTING , USB_STATE_UNAUTHENTICATED , USB_STATE_DEFAULT , USB_STATE_ADDRESS , USB_STATE_CONFIGURED , USB_STATE_SUSPENDED } 
e#usb_device_speed enum usb_device_speed { USB_SPEED_UNKNOWN = 0 , USB_SPEED_LOW , USB_SPEED_FULL , USB_SPEED_HIGH , USB_SPEED_WIRELESS , USB_SPEED_SUPER , } 
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#usb_devmap struct usb_devmap { unsigned long devicemap [ 128 / ( 8 * sizeof ( unsigned long ) ) ] ; } 
s#usb_bus struct usb_bus { s#device * controller ; int busnum ; const char * bus_name ; t#u8 uses_dma ; t#u8 uses_pio_for_control ; t#u8 otg_port ; unsigned is_b_host : 1 ; unsigned b_hnp_enable : 1 ; unsigned no_stop_on_short : 1 ; unsigned no_sg_constraint : 1 ; unsigned sg_tablesize ; int devnum_next ; s#usb_devmap devmap ; s#usb_device * root_hub ; s#usb_bus * hs_companion ; s#list_head bus_list ; int bandwidth_allocated ; int bandwidth_int_reqs ; int bandwidth_isoc_reqs ; s#dentry * usbfs_dentry ; } 
s#usb_endpoint_descriptor struct usb_endpoint_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bEndpointAddress ; t#__u8 bmAttributes ; t#__le16 wMaxPacketSize ; t#__u8 bInterval ; t#__u8 bRefresh ; t#__u8 bSynchAddress ; } 
s#usb_ss_ep_comp_descriptor struct usb_ss_ep_comp_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bMaxBurst ; t#__u8 bmAttributes ; t#__le16 wBytesPerInterval ; } 
s##ep_device
s#usb_host_endpoint struct usb_host_endpoint { s#usb_endpoint_descriptor desc ; s#usb_ss_ep_comp_descriptor ss_ep_comp ; s#list_head urb_list ; void * hcpriv ; s#ep_device * ep_dev ; unsigned char * extra ; int extralen ; int enabled ; } 
s#usb_device_descriptor struct usb_device_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 bcdUSB ; t#__u8 bDeviceClass ; t#__u8 bDeviceSubClass ; t#__u8 bDeviceProtocol ; t#__u8 bMaxPacketSize0 ; t#__le16 idVendor ; t#__le16 idProduct ; t#__le16 bcdDevice ; t#__u8 iManufacturer ; t#__u8 iProduct ; t#__u8 iSerialNumber ; t#__u8 bNumConfigurations ; } 
s#usb_bos_descriptor struct usb_bos_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 wTotalLength ; t#__u8 bNumDeviceCaps ; } 
s#usb_ext_cap_descriptor struct usb_ext_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__le32 bmAttributes ; } 
s#usb_ss_cap_descriptor struct usb_ss_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bmAttributes ; t#__le16 wSpeedSupported ; t#__u8 bFunctionalitySupport ; t#__u8 bU1devExitLat ; t#__le16 bU2DevExitLat ; } 
s#usb_ss_container_id_descriptor struct usb_ss_container_id_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bReserved ; t#__u8 ContainerID [ 16 ] ; } 
s#usb_host_bos struct usb_host_bos { s#usb_bos_descriptor * desc ; s#usb_ext_cap_descriptor * ext_cap ; s#usb_ss_cap_descriptor * ss_cap ; s#usb_ss_container_id_descriptor * ss_id ; } 
s#usb_config_descriptor struct usb_config_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__le16 wTotalLength ; t#__u8 bNumInterfaces ; t#__u8 bConfigurationValue ; t#__u8 iConfiguration ; t#__u8 bmAttributes ; t#__u8 bMaxPower ; } 
s#usb_interface_assoc_descriptor struct usb_interface_assoc_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bFirstInterface ; t#__u8 bInterfaceCount ; t#__u8 bFunctionClass ; t#__u8 bFunctionSubClass ; t#__u8 bFunctionProtocol ; t#__u8 iFunction ; } 
s#usb_interface_descriptor struct usb_interface_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bInterfaceNumber ; t#__u8 bAlternateSetting ; t#__u8 bNumEndpoints ; t#__u8 bInterfaceClass ; t#__u8 bInterfaceSubClass ; t#__u8 bInterfaceProtocol ; t#__u8 iInterface ; } 
s#usb_host_interface struct usb_host_interface { s#usb_interface_descriptor desc ; s#usb_host_endpoint * endpoint ; char * string ; unsigned char * extra ; int extralen ; } 
e#usb_interface_condition enum usb_interface_condition { USB_INTERFACE_UNBOUND = 0 , USB_INTERFACE_BINDING , USB_INTERFACE_BOUND , USB_INTERFACE_UNBINDING , } 
s#usb_interface struct usb_interface { s#usb_host_interface * altsetting ; s#usb_host_interface * cur_altsetting ; unsigned num_altsetting ; s#usb_interface_assoc_descriptor * intf_assoc ; int minor ; e#usb_interface_condition condition ; unsigned sysfs_files_created : 1 ; unsigned ep_devs_created : 1 ; unsigned unregistering : 1 ; unsigned needs_remote_wakeup : 1 ; unsigned needs_altsetting0 : 1 ; unsigned needs_binding : 1 ; unsigned reset_running : 1 ; unsigned resetting_device : 1 ; s#device dev ; s#device * usb_dev ; t#atomic_t pm_usage_cnt ; s#work_struct reset_ws ; } 
s#usb_interface_cache struct usb_interface_cache { unsigned num_altsetting ; s#kref ref ; s#usb_host_interface altsetting [ 0 ] ; } 
s#usb_host_config struct usb_host_config { s#usb_config_descriptor desc ; char * string ; s#usb_interface_assoc_descriptor * intf_assoc [ ( 32 / 2 ) ] ; s#usb_interface * interface [ 32 ] ; s#usb_interface_cache * intf_cache [ 32 ] ; unsigned char * extra ; int extralen ; } 
s##wusb_dev
s#usb2_lpm_parameters struct usb2_lpm_parameters { unsigned int besl ; int timeout ; } 
s#usb3_lpm_parameters struct usb3_lpm_parameters { unsigned int mel ; unsigned int pel ; unsigned int sel ; int timeout ; } 
s#usb_device struct usb_device { int devnum ; char devpath [ 16 ] ; t#u32 route ; e#usb_device_state state ; e#usb_device_speed speed ; s#usb_tt * tt ; int ttport ; unsigned int toggle [ 2 ] ; s#usb_device * parent ; s#usb_bus * bus ; s#usb_host_endpoint ep0 ; s#device dev ; s#usb_device_descriptor descriptor ; s#usb_host_bos * bos ; s#usb_host_config * config ; s#usb_host_config * actconfig ; s#usb_host_endpoint * ep_in [ 16 ] ; s#usb_host_endpoint * ep_out [ 16 ] ; char * * rawdescriptors ; unsigned short bus_mA ; t#u8 portnum ; t#u8 level ; unsigned can_submit : 1 ; unsigned persist_enabled : 1 ; unsigned have_langid : 1 ; unsigned authorized : 1 ; unsigned authenticated : 1 ; unsigned wusb : 1 ; unsigned lpm_capable : 1 ; unsigned usb2_hw_lpm_capable : 1 ; unsigned usb2_hw_lpm_besl_capable : 1 ; unsigned usb2_hw_lpm_enabled : 1 ; unsigned usb2_hw_lpm_allowed : 1 ; unsigned usb3_lpm_enabled : 1 ; int string_langid ; char * product ; char * manufacturer ; char * serial ; s#list_head filelist ; s#dentry * usbfs_dentry ; int maxchild ; s#usb_device * children [ ( 31 ) ] ; t#u32 quirks ; t#atomic_t urbnum ; unsigned long active_duration ; unsigned long connect_time ; unsigned do_remote_wakeup : 1 ; unsigned reset_resume : 1 ; s#wusb_dev * wusb_dev ; int slot_id ; s#usb2_lpm_parameters l1_params ; s#usb3_lpm_parameters u1_params ; s#usb3_lpm_parameters u2_params ; unsigned lpm_disable_count ; unsigned hub_initiated_lpm_disable_count ; } 
roccat_common_receive int roccat_common_receive ( s#usb_device * , t#uint , void * , t#uint ) 
roccat_common_send int roccat_common_send ( s#usb_device * , t#uint , void const * , t#uint ) 

/* drivers/hid/hidraw.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
hidraw_report_event void hidraw_report_event ( s#hid_device * , t#u8 * , int ) 
hidraw_connect int hidraw_connect ( s#hid_device * ) 
hidraw_disconnect void hidraw_disconnect ( s#hid_device * ) 

/* drivers/hid/usbhid/hid-core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
usbhid_submit_report void usbhid_submit_report ( s#hid_device * , s#hid_report * , unsigned char ) 
usbhid_wait_io int usbhid_wait_io ( s#hid_device * ) 
usbhid_set_leds void usbhid_set_leds ( s#hid_device * ) 

/* drivers/hid/usbhid/hid-quirks.o */
usbhid_lookup_quirk t#u32 usbhid_lookup_quirk ( const t#u16 , const t#u16 ) 

/* drivers/hid/usbhid/hiddev.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
hiddev_hid_event void hiddev_hid_event ( s#hid_device * , s#hid_field * , s#hid_usage * , t#__s32 ) 

/* drivers/hwmon/hwmon.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
hwmon_device_register s#device * hwmon_device_register ( s#device * ) 
hwmon_device_unregister void hwmon_device_unregister ( s#device * ) 

/* drivers/hwmon/hwmon-vid.o */
vid_from_reg int vid_from_reg ( int , t#u8 ) 
vid_which_vrm t#u8 vid_which_vrm ( void ) 

/* drivers/hwmon/pmbus_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#i2c_device_id struct i2c_device_id { char name [ 20 ] ; t#kernel_ulong_t driver_data __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s#i2c_driver struct i2c_driver { unsigned int class ; int ( * attach_adapter ) ( s#i2c_adapter * ) __attribute__ ( ( deprecated ) ) ; int ( * detach_adapter ) ( s#i2c_adapter * ) __attribute__ ( ( deprecated ) ) ; int ( * probe ) ( s#i2c_client * , const s#i2c_device_id * ) ; int ( * remove ) ( s#i2c_client * ) ; void ( * shutdown ) ( s#i2c_client * ) ; int ( * suspend ) ( s#i2c_client * , t#pm_message_t ) ; int ( * resume ) ( s#i2c_client * ) ; void ( * alert ) ( s#i2c_client * , unsigned int ) ; int ( * command ) ( s#i2c_client * , unsigned int , void * ) ; s#device_driver driver ; const s#i2c_device_id * id_table ; int ( * detect ) ( s#i2c_client * , s#i2c_board_info * ) ; const unsigned short * address_list ; s#list_head clients ; } 
s#i2c_client struct i2c_client { unsigned short flags ; unsigned short addr ; char name [ 20 ] ; s#i2c_adapter * adapter ; s#i2c_driver * driver ; s#device dev ; int irq ; s#list_head detected ; } 
pmbus_set_page int pmbus_set_page ( s#i2c_client * , t#u8 ) 
pmbus_read_word_data int pmbus_read_word_data ( s#i2c_client * , t#u8 , t#u8 ) 
pmbus_clear_faults void pmbus_clear_faults ( s#i2c_client * ) 
pmbus_check_byte_register t#bool pmbus_check_byte_register ( s#i2c_client * , int , int ) 
pmbus_check_word_register t#bool pmbus_check_word_register ( s#i2c_client * , int , int ) 
E#PSC_NUM_CLASSES ( 0 ) + 7 
s#pmbus_driver_info struct pmbus_driver_info { int pages ; t#bool direct [ E#PSC_NUM_CLASSES ] ; int m [ E#PSC_NUM_CLASSES ] ; int b [ E#PSC_NUM_CLASSES ] ; int R [ E#PSC_NUM_CLASSES ] ; t#u32 func [ 32 ] ; int ( * read_byte_data ) ( s#i2c_client * , int , int ) ; int ( * identify ) ( s#i2c_client * , s#pmbus_driver_info * ) ; } 
pmbus_get_driver_info const s#pmbus_driver_info * pmbus_get_driver_info ( s#i2c_client * ) 
pmbus_do_probe int pmbus_do_probe ( s#i2c_client * , const s#i2c_device_id * , s#pmbus_driver_info * ) 
pmbus_do_remove int pmbus_do_remove ( s#i2c_client * ) 

/* drivers/i2c/algos/i2c-algo-bit.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
i2c_bit_algo extern const s#i2c_algorithm i2c_bit_algo 
i2c_bit_add_bus int i2c_bit_add_bus ( s#i2c_adapter * ) 
i2c_bit_add_numbered_bus int i2c_bit_add_numbered_bus ( s#i2c_adapter * ) 

/* drivers/i2c/algos/i2c-algo-pca.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
i2c_pca_add_bus int i2c_pca_add_bus ( s#i2c_adapter * ) 
i2c_pca_add_numbered_bus int i2c_pca_add_numbered_bus ( s#i2c_adapter * ) 

/* drivers/i2c/i2c-boardinfo.o */
__i2c_board_lock extern s#rw_semaphore __i2c_board_lock 
__i2c_board_list extern s#list_head __i2c_board_list 
__i2c_first_dynamic_bus_num extern int __i2c_first_dynamic_bus_num 

/* drivers/i2c/i2c-core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##subsys_private
i2c_bus_type extern s#bus_type i2c_bus_type 
i2c_verify_client extern s#i2c_client * i2c_verify_client ( s#device * ) 
i2c_lock_adapter void i2c_lock_adapter ( s#i2c_adapter * ) 
i2c_unlock_adapter void i2c_unlock_adapter ( s#i2c_adapter * ) 
i2c_new_device extern s#i2c_client * i2c_new_device ( s#i2c_adapter * , s#i2c_board_info const * ) 
i2c_unregister_device extern void i2c_unregister_device ( s#i2c_client * ) 
i2c_new_dummy extern s#i2c_client * i2c_new_dummy ( s#i2c_adapter * , t#u16 ) 
i2c_adapter_type extern s#device_type i2c_adapter_type 
i2c_add_adapter extern int i2c_add_adapter ( s#i2c_adapter * ) 
i2c_add_numbered_adapter extern int i2c_add_numbered_adapter ( s#i2c_adapter * ) 
i2c_del_adapter extern int i2c_del_adapter ( s#i2c_adapter * ) 
i2c_for_each_dev int i2c_for_each_dev ( void * , int ( * ) ( s#device * , void * ) ) 
i2c_register_driver extern int i2c_register_driver ( s#module * , s#i2c_driver * ) 
i2c_del_driver extern void i2c_del_driver ( s#i2c_driver * ) 
i2c_use_client extern s#i2c_client * i2c_use_client ( s#i2c_client * ) 
i2c_release_client extern void i2c_release_client ( s#i2c_client * ) 
i2c_clients_command extern void i2c_clients_command ( s#i2c_adapter * , unsigned int , void * ) 
i2c_transfer extern int i2c_transfer ( s#i2c_adapter * , s#i2c_msg * , int ) 
i2c_master_send extern int i2c_master_send ( const s#i2c_client * , const char * , int ) 
i2c_master_recv extern int i2c_master_recv ( const s#i2c_client * , char * , int ) 
i2c_probe_func_quick_read extern int i2c_probe_func_quick_read ( s#i2c_adapter * , unsigned short ) 
i2c_new_probed_device extern s#i2c_client * i2c_new_probed_device ( s#i2c_adapter * , s#i2c_board_info * , unsigned short const * , int ( * ) ( s#i2c_adapter * , unsigned short ) ) 
i2c_get_adapter extern s#i2c_adapter * i2c_get_adapter ( int ) 
i2c_put_adapter extern void i2c_put_adapter ( s#i2c_adapter * ) 
i2c_smbus_read_byte extern t#s32 i2c_smbus_read_byte ( const s#i2c_client * ) 
i2c_smbus_write_byte extern t#s32 i2c_smbus_write_byte ( const s#i2c_client * , t#u8 ) 
i2c_smbus_read_byte_data extern t#s32 i2c_smbus_read_byte_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_byte_data extern t#s32 i2c_smbus_write_byte_data ( const s#i2c_client * , t#u8 , t#u8 ) 
i2c_smbus_read_word_data extern t#s32 i2c_smbus_read_word_data ( const s#i2c_client * , t#u8 ) 
i2c_smbus_write_word_data extern t#s32 i2c_smbus_write_word_data ( const s#i2c_client * , t#u8 , t#u16 ) 
i2c_smbus_process_call t#s32 i2c_smbus_process_call ( const s#i2c_client * , t#u8 , t#u16 ) 
i2c_smbus_read_block_data extern t#s32 i2c_smbus_read_block_data ( const s#i2c_client * , t#u8 , t#u8 * ) 
i2c_smbus_write_block_data extern t#s32 i2c_smbus_write_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_read_i2c_block_data extern t#s32 i2c_smbus_read_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , t#u8 * ) 
i2c_smbus_write_i2c_block_data extern t#s32 i2c_smbus_write_i2c_block_data ( const s#i2c_client * , t#u8 , t#u8 , const t#u8 * ) 
i2c_smbus_xfer extern t#s32 i2c_smbus_xfer ( s#i2c_adapter * , t#u16 , unsigned short , char , t#u8 , int , u#i2c_smbus_data * ) 

/* drivers/i2c/i2c-mux.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
i2c_add_mux_adapter s#i2c_adapter * i2c_add_mux_adapter ( s#i2c_adapter * , void * , t#u32 , t#u32 , int ( * ) ( s#i2c_adapter * , void * , t#u32 ) , int ( * ) ( s#i2c_adapter * , void * , t#u32 ) ) 
i2c_del_mux_adapter int i2c_del_mux_adapter ( s#i2c_adapter * ) 

/* drivers/i2c/i2c-smbus.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s#i2c_smbus_alert_setup struct i2c_smbus_alert_setup { unsigned int alert_edge_triggered : 1 ; int irq ; } 
i2c_setup_smbus_alert s#i2c_client * i2c_setup_smbus_alert ( s#i2c_adapter * , s#i2c_smbus_alert_setup * ) 
i2c_handle_smbus_alert int i2c_handle_smbus_alert ( s#i2c_client * ) 

/* drivers/ide/ide.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s#ide_devset struct ide_devset { int ( * get ) ( t#ide_drive_t * ) ; int ( * set ) ( t#ide_drive_t * , int ) ; unsigned int flags ; } 
s#ide_proc_devset struct ide_proc_devset { const char * name ; const s#ide_devset * setting ; int min , max ; int ( * mulf ) ( t#ide_drive_t * ) ; int ( * divf ) ( t#ide_drive_t * ) ; } 
t#ide_hwif_t typedef s#hwif_s __attribute__ ( ( __aligned__ ( 1 << ( 7 ) ) ) ) ide_hwif_t 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#ide_host struct ide_host { t#ide_hwif_t * ports [ 4 + 1 ] ; unsigned int n_ports ; s#device * dev [ 2 ] ; int ( * init_chipset ) ( s#pci_dev * ) ; void ( * get_lock ) ( t#irq_handler_t , void * ) ; void ( * release_lock ) ( void ) ; t#irq_handler_t irq_handler ; unsigned long host_flags ; int irq_flags ; void * host_priv ; t#ide_hwif_t * cur_port ; volatile unsigned long host_busy ; } 
s#ide_io_ports struct ide_io_ports { unsigned long data_addr ; union { unsigned long error_addr ; unsigned long feature_addr ; } ; unsigned long nsect_addr ; unsigned long lbal_addr ; unsigned long lbam_addr ; unsigned long lbah_addr ; unsigned long device_addr ; union { unsigned long status_addr ; unsigned long command_addr ; } ; unsigned long ctl_addr ; unsigned long irq_addr ; } 
t#hwif_chipset_t typedef t#u8 hwif_chipset_t 
s#ide_taskfile struct ide_taskfile { t#u8 data ; union { t#u8 error ; t#u8 feature ; } ; t#u8 nsect ; t#u8 lbal ; t#u8 lbam ; t#u8 lbah ; t#u8 device ; union { t#u8 status ; t#u8 command ; } ; } 
s#ide_cmd struct ide_cmd { s#ide_taskfile tf ; s#ide_taskfile hob ; struct { struct { t#u8 tf ; t#u8 hob ; } out , in ; } valid ; t#u16 tf_flags ; t#u8 ftf_flags ; int protocol ; int sg_nents ; int orig_sg_nents ; int sg_dma_direction ; unsigned int nbytes ; unsigned int nleft ; unsigned int last_xfer_len ; s#scatterlist * cursg ; unsigned int cursg_ofs ; s#request * rq ; } 
s#ide_tp_ops struct ide_tp_ops { void ( * exec_command ) ( s#hwif_s * , t#u8 ) ; t#u8 ( * read_status ) ( s#hwif_s * ) ; t#u8 ( * read_altstatus ) ( s#hwif_s * ) ; void ( * write_devctl ) ( s#hwif_s * , t#u8 ) ; void ( * dev_select ) ( t#ide_drive_t * ) ; void ( * tf_load ) ( t#ide_drive_t * , s#ide_taskfile * , t#u8 ) ; void ( * tf_read ) ( t#ide_drive_t * , s#ide_taskfile * , t#u8 ) ; void ( * input_data ) ( t#ide_drive_t * , s#ide_cmd * , void * , unsigned int ) ; void ( * output_data ) ( t#ide_drive_t * , s#ide_cmd * , void * , unsigned int ) ; } 
s#ide_port_ops struct ide_port_ops { void ( * init_dev ) ( t#ide_drive_t * ) ; void ( * set_pio_mode ) ( s#hwif_s * , t#ide_drive_t * ) ; void ( * set_dma_mode ) ( s#hwif_s * , t#ide_drive_t * ) ; int ( * reset_poll ) ( t#ide_drive_t * ) ; void ( * pre_reset ) ( t#ide_drive_t * ) ; void ( * resetproc ) ( t#ide_drive_t * ) ; void ( * maskproc ) ( t#ide_drive_t * , int ) ; void ( * quirkproc ) ( t#ide_drive_t * ) ; void ( * clear_irq ) ( t#ide_drive_t * ) ; int ( * test_irq ) ( s#hwif_s * ) ; t#u8 ( * mdma_filter ) ( t#ide_drive_t * ) ; t#u8 ( * udma_filter ) ( t#ide_drive_t * ) ; t#u8 ( * cable_detect ) ( s#hwif_s * ) ; } 
s#ide_dma_ops struct ide_dma_ops { void ( * dma_host_set ) ( s#ide_drive_s * , int ) ; int ( * dma_setup ) ( s#ide_drive_s * , s#ide_cmd * ) ; void ( * dma_start ) ( s#ide_drive_s * ) ; int ( * dma_end ) ( s#ide_drive_s * ) ; int ( * dma_test_irq ) ( s#ide_drive_s * ) ; void ( * dma_lost_irq ) ( s#ide_drive_s * ) ; int ( * dma_check ) ( s#ide_drive_s * , s#ide_cmd * ) ; int ( * dma_timer_expiry ) ( s#ide_drive_s * ) ; void ( * dma_clear ) ( s#ide_drive_s * ) ; t#u8 ( * dma_sff_read_status ) ( s#hwif_s * ) ; } 
t#ide_startstop_t typedef enum { ide_stopped , ide_started , } ide_startstop_t 
s#hwif_s struct hwif_s { s#hwif_s * mate ; s#proc_dir_entry * proc ; s#ide_host * host ; char name [ 6 ] ; s#ide_io_ports io_ports ; unsigned long sata_scr [ ( 3 ) ] ; t#ide_drive_t * devices [ 2 + 1 ] ; unsigned long port_flags ; t#u8 major ; t#u8 index ; t#u8 channel ; t#u32 host_flags ; t#u8 pio_mask ; t#u8 ultra_mask ; t#u8 mwdma_mask ; t#u8 swdma_mask ; t#u8 cbl ; t#hwif_chipset_t chipset ; s#device * dev ; void ( * rw_disk ) ( t#ide_drive_t * , s#request * ) ; const s#ide_tp_ops * tp_ops ; const s#ide_port_ops * port_ops ; const s#ide_dma_ops * dma_ops ; unsigned int * dmatable_cpu ; t#dma_addr_t dmatable_dma ; int prd_max_nents ; int prd_ent_size ; s#scatterlist * sg_table ; int sg_max_nents ; s#ide_cmd cmd ; int rqsize ; int irq ; unsigned long dma_base ; unsigned long config_data ; unsigned long select_data ; unsigned long extra_base ; unsigned extra_ports ; unsigned present : 1 ; unsigned busy : 1 ; s#device gendev ; s#device * portdev ; s#completion gendev_rel_comp ; void * hwif_data ; t#ide_startstop_t ( * handler ) ( t#ide_drive_t * ) ; unsigned int polling : 1 ; t#ide_drive_t * cur_dev ; s#request * rq ; s#timer_list timer ; unsigned long poll_timeout ; int ( * expiry ) ( t#ide_drive_t * ) ; int req_gen ; int req_gen_timer ; t#spinlock_t lock ; } 
s#ide_disk_ops struct ide_disk_ops { int ( * check ) ( s#ide_drive_s * , const char * ) ; int ( * get_capacity ) ( s#ide_drive_s * ) ; void ( * unlock_native_capacity ) ( s#ide_drive_s * ) ; void ( * setup ) ( s#ide_drive_s * ) ; void ( * flush ) ( s#ide_drive_s * ) ; int ( * init_media ) ( s#ide_drive_s * , s#gendisk * ) ; int ( * set_doorlock ) ( s#ide_drive_s * , s#gendisk * , int ) ; t#ide_startstop_t ( * do_request ) ( s#ide_drive_s * , s#request * , t#sector_t ) ; int ( * ioctl ) ( s#ide_drive_s * , s#block_device * , t#fmode_t , unsigned int , unsigned long ) ; } 
s#ide_atapi_pc struct ide_atapi_pc { t#u8 c [ 12 ] ; int retries ; int error ; int req_xfer ; s#request * rq ; unsigned long flags ; unsigned long timeout ; } 
s#ide_drive_s struct ide_drive_s { char name [ 4 ] ; char driver_req [ 10 ] ; s#request_queue * queue ; s#request * rq ; void * driver_data ; t#u16 * id ; s#proc_dir_entry * proc ; const s#ide_proc_devset * settings ; s#hwif_s * hwif ; const s#ide_disk_ops * disk_ops ; unsigned long dev_flags ; unsigned long sleep ; unsigned long timeout ; t#u8 special_flags ; t#u8 select ; t#u8 retry_pio ; t#u8 waiting_for_dma ; t#u8 dma ; t#u8 init_speed ; t#u8 current_speed ; t#u8 desired_speed ; t#u8 pio_mode ; t#u8 dma_mode ; t#u8 dn ; t#u8 acoustic ; t#u8 media ; t#u8 ready_stat ; t#u8 mult_count ; t#u8 mult_req ; t#u8 io_32bit ; t#u8 bad_wstat ; t#u8 head ; t#u8 sect ; t#u8 bios_head ; t#u8 bios_sect ; t#u8 pc_delay ; unsigned int bios_cyl ; unsigned int cyl ; void * drive_data ; unsigned int failures ; unsigned int max_failures ; t#u64 probed_capacity ; t#u64 capacity64 ; int lun ; int crc_count ; unsigned long debug_mask ; s#list_head list ; s#device gendev ; s#completion gendev_rel_comp ; s#ide_atapi_pc * pc ; s#ide_atapi_pc * failed_pc ; int ( * pc_callback ) ( s#ide_drive_s * , int ) ; t#ide_startstop_t ( * irq_handler ) ( s#ide_drive_s * ) ; unsigned long atapi_flags ; s#ide_atapi_pc request_sense_pc ; t#bool sense_rq_armed ; s#request sense_rq ; s#request_sense sense_data ; } 
t#ide_drive_t typedef s#ide_drive_s ide_drive_t 
ide_device_get int ide_device_get ( t#ide_drive_t * ) 
ide_device_put void ide_device_put ( t#ide_drive_t * ) 
ide_bus_type extern s#bus_type ide_bus_type 
ide_vlb_clk extern int ide_vlb_clk 
ide_pci_clk extern int ide_pci_clk 

/* drivers/ide/ide-atapi.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_check_atapi_device int ide_check_atapi_device ( t#ide_drive_t * , const char * ) 
ide_init_pc void ide_init_pc ( s#ide_atapi_pc * ) 
ide_queue_pc_tail int ide_queue_pc_tail ( t#ide_drive_t * , s#gendisk * , s#ide_atapi_pc * , void * , unsigned int ) 
ide_do_test_unit_ready int ide_do_test_unit_ready ( t#ide_drive_t * , s#gendisk * ) 
ide_do_start_stop int ide_do_start_stop ( t#ide_drive_t * , s#gendisk * , int ) 
ide_set_media_lock int ide_set_media_lock ( t#ide_drive_t * , s#gendisk * , int ) 
ide_create_request_sense_cmd void ide_create_request_sense_cmd ( t#ide_drive_t * , s#ide_atapi_pc * ) 
ide_prep_sense void ide_prep_sense ( t#ide_drive_t * , s#request * ) 
ide_queue_sense_rq int ide_queue_sense_rq ( t#ide_drive_t * , void * ) 
ide_retry_pc void ide_retry_pc ( t#ide_drive_t * ) 
ide_cd_expiry int ide_cd_expiry ( t#ide_drive_t * ) 
ide_cd_get_xferlen int ide_cd_get_xferlen ( s#request * ) 
ide_read_bcount_and_ireason void ide_read_bcount_and_ireason ( t#ide_drive_t * , t#u16 * , t#u8 * ) 
ide_check_ireason int ide_check_ireason ( t#ide_drive_t * , s#request * , int , int , int ) 
ide_issue_pc t#ide_startstop_t ide_issue_pc ( t#ide_drive_t * , s#ide_cmd * ) 

/* drivers/ide/ide-dma.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_dma_unmap_sg void ide_dma_unmap_sg ( t#ide_drive_t * , s#ide_cmd * ) 
ide_dma_off_quietly void ide_dma_off_quietly ( t#ide_drive_t * ) 
ide_dma_off void ide_dma_off ( t#ide_drive_t * ) 
__ide_dma_bad_drive int __ide_dma_bad_drive ( t#ide_drive_t * ) 
ide_dma_lost_irq void ide_dma_lost_irq ( t#ide_drive_t * ) 
ide_release_dma_engine void ide_release_dma_engine ( t#ide_hwif_t * ) 
ide_allocate_dma_engine int ide_allocate_dma_engine ( t#ide_hwif_t * ) 

/* drivers/ide/ide-dma-sff.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_dma_sff_read_status t#u8 ide_dma_sff_read_status ( t#ide_hwif_t * ) 
ide_dma_host_set void ide_dma_host_set ( t#ide_drive_t * , int ) 
ide_build_dmatable int ide_build_dmatable ( t#ide_drive_t * , s#ide_cmd * ) 
ide_dma_setup int ide_dma_setup ( t#ide_drive_t * , s#ide_cmd * ) 
ide_dma_sff_timer_expiry int ide_dma_sff_timer_expiry ( t#ide_drive_t * ) 
ide_dma_start extern void ide_dma_start ( t#ide_drive_t * ) 
ide_dma_end int ide_dma_end ( t#ide_drive_t * ) 
ide_dma_test_irq int ide_dma_test_irq ( t#ide_drive_t * ) 
sff_dma_ops extern const s#ide_dma_ops sff_dma_ops 

/* drivers/ide/ide-eh.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_error t#ide_startstop_t ide_error ( t#ide_drive_t * , const char * , t#u8 ) 
ide_do_reset extern t#ide_startstop_t ide_do_reset ( t#ide_drive_t * ) 

/* drivers/ide/ide-io.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_end_rq int ide_end_rq ( t#ide_drive_t * , s#request * , int , unsigned int ) 
ide_complete_rq int ide_complete_rq ( t#ide_drive_t * , int , unsigned int ) 
ide_map_sg void ide_map_sg ( t#ide_drive_t * , s#ide_cmd * ) 
ide_init_sg_cmd void ide_init_sg_cmd ( s#ide_cmd * , unsigned int ) 
ide_stall_queue extern void ide_stall_queue ( t#ide_drive_t * , unsigned long ) 
ide_intr extern t#irqreturn_t ide_intr ( int , void * ) 
ide_pad_transfer void ide_pad_transfer ( t#ide_drive_t * , int , int ) 

/* drivers/ide/ide-io-std.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_exec_command void ide_exec_command ( t#ide_hwif_t * , t#u8 ) 
ide_read_status t#u8 ide_read_status ( t#ide_hwif_t * ) 
ide_read_altstatus t#u8 ide_read_altstatus ( t#ide_hwif_t * ) 
ide_write_devctl void ide_write_devctl ( t#ide_hwif_t * , t#u8 ) 
ide_dev_select void ide_dev_select ( t#ide_drive_t * ) 
ide_tf_load void ide_tf_load ( t#ide_drive_t * , s#ide_taskfile * , t#u8 ) 
ide_tf_read void ide_tf_read ( t#ide_drive_t * , s#ide_taskfile * , t#u8 ) 
ide_input_data void ide_input_data ( t#ide_drive_t * , s#ide_cmd * , void * , unsigned int ) 
ide_output_data void ide_output_data ( t#ide_drive_t * , s#ide_cmd * , void * , unsigned int ) 

/* drivers/ide/ide-ioctls.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#ide_ioctl_devset struct ide_ioctl_devset { unsigned int get_ioctl ; unsigned int set_ioctl ; const s#ide_devset * setting ; } 
ide_setting_ioctl int ide_setting_ioctl ( t#ide_drive_t * , s#block_device * , unsigned int , unsigned long , const s#ide_ioctl_devset * ) 
generic_ide_ioctl int generic_ide_ioctl ( t#ide_drive_t * , s#block_device * , unsigned , unsigned long ) 

/* drivers/ide/ide-iops.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_read_error t#u8 ide_read_error ( t#ide_drive_t * ) 
ide_fixstring extern void ide_fixstring ( t#u8 * , const int , const int ) 
ide_wait_stat int ide_wait_stat ( t#ide_startstop_t * , t#ide_drive_t * , t#u8 , t#u8 , unsigned long ) 
s#drive_list_entry struct drive_list_entry { const char * id_model ; const char * id_firmware ; } 
ide_in_drive_list int ide_in_drive_list ( t#u16 * , const s#drive_list_entry * ) 
t#ide_handler_t typedef t#ide_startstop_t ( ide_handler_t ) ( t#ide_drive_t * ) 
ide_set_handler void ide_set_handler ( t#ide_drive_t * , t#ide_handler_t * , unsigned int ) 

/* drivers/ide/ide-lib.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
ide_get_lba_addr t#u64 ide_get_lba_addr ( s#ide_cmd * , int ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_dump_status t#u8 ide_dump_status ( t#ide_drive_t * , const char * , t#u8 ) 

/* drivers/ide/ide-probe.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_undecoded_slave void ide_undecoded_slave ( t#ide_drive_t * ) 
ide_register_region void ide_register_region ( s#gendisk * ) 
ide_unregister_region void ide_unregister_region ( s#gendisk * ) 
ide_init_disk void ide_init_disk ( s#gendisk * , t#ide_drive_t * ) 
s#ide_pci_enablebit struct ide_pci_enablebit { t#u8 reg ; t#u8 mask ; t#u8 val ; } 
s#ide_port_info struct ide_port_info { char * name ; int ( * init_chipset ) ( s#pci_dev * ) ; void ( * get_lock ) ( t#irq_handler_t , void * ) ; void ( * release_lock ) ( void ) ; void ( * init_iops ) ( t#ide_hwif_t * ) ; void ( * init_hwif ) ( t#ide_hwif_t * ) ; int ( * init_dma ) ( t#ide_hwif_t * , const s#ide_port_info * ) ; const s#ide_tp_ops * tp_ops ; const s#ide_port_ops * port_ops ; const s#ide_dma_ops * dma_ops ; s#ide_pci_enablebit enablebits [ 2 ] ; t#hwif_chipset_t chipset ; t#u16 max_sectors ; t#u32 host_flags ; int irq_flags ; t#u8 pio_mask ; t#u8 swdma_mask ; t#u8 mwdma_mask ; t#u8 udma_mask ; } 
s#ide_hw struct ide_hw { union { s#ide_io_ports io_ports ; unsigned long io_ports_array [ ( 10 ) ] ; } ; int irq ; s#device * dev , * parent ; unsigned long config ; } 
ide_host_alloc s#ide_host * ide_host_alloc ( const s#ide_port_info * , s#ide_hw * * , unsigned int ) 
ide_host_register int ide_host_register ( s#ide_host * , const s#ide_port_info * , s#ide_hw * * ) 
ide_host_add int ide_host_add ( const s#ide_port_info * , s#ide_hw * * , unsigned int , s#ide_host * * ) 
ide_port_unregister_devices void ide_port_unregister_devices ( t#ide_hwif_t * ) 
ide_host_free void ide_host_free ( s#ide_host * ) 
ide_host_remove void ide_host_remove ( s#ide_host * ) 
ide_port_scan void ide_port_scan ( t#ide_hwif_t * ) 

/* drivers/ide/ide-proc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##eventfd_ctx
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##poll_table_struct
ide_capacity_proc_fops extern const s#file_operations ide_capacity_proc_fops 
ide_geometry_proc_fops extern const s#file_operations ide_geometry_proc_fops 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
t#ide_proc_entry_t typedef struct { const char * name ; t#mode_t mode ; const s#file_operations * proc_fops ; } ide_proc_entry_t 
s#ide_driver struct ide_driver { const char * version ; t#ide_startstop_t ( * do_request ) ( t#ide_drive_t * , s#request * , t#sector_t ) ; s#device_driver gen_driver ; int ( * probe ) ( t#ide_drive_t * ) ; void ( * remove ) ( t#ide_drive_t * ) ; void ( * resume ) ( t#ide_drive_t * ) ; void ( * shutdown ) ( t#ide_drive_t * ) ; t#ide_proc_entry_t * ( * proc_entries ) ( t#ide_drive_t * ) ; const s#ide_proc_devset * ( * proc_devsets ) ( t#ide_drive_t * ) ; } 
ide_proc_register_driver void ide_proc_register_driver ( t#ide_drive_t * , s#ide_driver * ) 
ide_proc_unregister_driver void ide_proc_unregister_driver ( t#ide_drive_t * , s#ide_driver * ) 

/* drivers/ide/ide-scan-pci.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
__ide_pci_register_driver extern int __ide_pci_register_driver ( s#pci_driver * , s#module * , const char * ) 

/* drivers/ide/ide-taskfile.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
do_rw_taskfile t#ide_startstop_t do_rw_taskfile ( t#ide_drive_t * , s#ide_cmd * ) 
ide_pio_bytes void ide_pio_bytes ( t#ide_drive_t * , s#ide_cmd * , unsigned int , unsigned int ) 
ide_raw_taskfile int ide_raw_taskfile ( t#ide_drive_t * , s#ide_cmd * , t#u8 * , t#u16 ) 
ide_no_data_taskfile int ide_no_data_taskfile ( t#ide_drive_t * , s#ide_cmd * ) 

/* drivers/ide/ide-timings.o */
s#ide_timing struct ide_timing { t#u8 mode ; t#u8 setup ; t#u16 act8b ; t#u16 rec8b ; t#u16 cyc8b ; t#u16 active ; t#u16 recover ; t#u16 cycle ; t#u16 udma ; } 
ide_timing_find_mode s#ide_timing * ide_timing_find_mode ( t#u8 ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_pio_cycle_time t#u16 ide_pio_cycle_time ( t#ide_drive_t * , t#u8 ) 
ide_timing_merge void ide_timing_merge ( s#ide_timing * , s#ide_timing * , s#ide_timing * , unsigned int ) 
ide_timing_compute int ide_timing_compute ( t#ide_drive_t * , t#u8 , s#ide_timing * , int , int ) 

/* drivers/ide/ide-xfer-mode.o */
ide_xfer_verbose const char * ide_xfer_verbose ( t#u8 ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_pio_need_iordy int ide_pio_need_iordy ( t#ide_drive_t * , const t#u8 ) 
ide_set_dma_mode int ide_set_dma_mode ( t#ide_drive_t * , t#u8 ) 
ide_set_pio void ide_set_pio ( t#ide_drive_t * , t#u8 ) 

/* drivers/ide/setup-pci.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ide_pci_dma_base unsigned long ide_pci_dma_base ( t#ide_hwif_t * , const s#ide_port_info * ) 
ide_pci_check_simplex int ide_pci_check_simplex ( t#ide_hwif_t * , const s#ide_port_info * ) 
ide_pci_set_master int ide_pci_set_master ( s#pci_dev * , const char * ) 
ide_setup_pci_noise void ide_setup_pci_noise ( s#pci_dev * , const s#ide_port_info * ) 
ide_pci_setup_ports void ide_pci_setup_ports ( s#pci_dev * , const s#ide_port_info * , s#ide_hw * , s#ide_hw * * ) 
ide_pci_init_two int ide_pci_init_two ( s#pci_dev * , s#pci_dev * , const s#ide_port_info * , void * ) 
ide_pci_init_one int ide_pci_init_one ( s#pci_dev * , const s#ide_port_info * , void * ) 
ide_pci_remove void ide_pci_remove ( s#pci_dev * ) 
ide_pci_suspend int ide_pci_suspend ( s#pci_dev * , t#pm_message_t ) 
ide_pci_resume int ide_pci_resume ( s#pci_dev * ) 

/* drivers/infiniband/core/addr.o */
s#rdma_addr_client struct rdma_addr_client { t#atomic_t refcount ; s#completion comp ; } 
rdma_addr_register_client void rdma_addr_register_client ( s#rdma_addr_client * ) 
rdma_addr_unregister_client void rdma_addr_unregister_client ( s#rdma_addr_client * ) 
e#rdma_transport_type enum rdma_transport_type { RDMA_TRANSPORT_IB , RDMA_TRANSPORT_IWARP } 
s#rdma_dev_addr struct rdma_dev_addr { unsigned char src_dev_addr [ 32 ] ; unsigned char dst_dev_addr [ 32 ] ; unsigned char broadcast [ 32 ] ; unsigned short dev_type ; int bound_dev_if ; e#rdma_transport_type transport ; } 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s#request_sock struct request_sock { s#request_sock * dl_next ; t#u16 mss ; t#u8 retrans ; t#u8 cookie_ts ; t#u32 window_clamp ; t#u32 rcv_wnd ; t#u32 ts_recent ; unsigned long expires ; const s#request_sock_ops * rsk_ops ; s#sock * sk ; t#u32 secid ; t#u32 peer_secid ; } 
s#request_values struct request_values { } 
s#request_sock_ops struct request_sock_ops { int family ; int obj_size ; s#kmem_cache * slab ; char * slab_name ; int ( * rtx_syn_ack ) ( s#sock * , s#request_sock * , s#request_values * ) ; void ( * send_ack ) ( s#sock * , s#sk_buff * , s#request_sock * ) ; void ( * send_reset ) ( s#sock * , s#sk_buff * ) ; void ( * destructor ) ( s#request_sock * ) ; void ( * syn_ack_timeout ) ( s#sock * , s#request_sock * ) ; } 
s#timewait_sock_ops struct timewait_sock_ops { s#kmem_cache * twsk_slab ; char * twsk_slab_name ; unsigned int twsk_obj_size ; int ( * twsk_unique ) ( s#sock * , s#sock * , void * ) ; void ( * twsk_destructor ) ( s#sock * ) ; void * ( * twsk_getpeer ) ( s#sock * ) ; } 
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
E#__IPV4_DEVCONF_MAX ( 1 ) + 25 
s#ipv4_devconf struct ipv4_devconf { void * sysctl ; int data [ ( E#__IPV4_DEVCONF_MAX - 1 ) ] ; unsigned long state [ ( ( ( ( E#__IPV4_DEVCONF_MAX - 1 ) ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s#ipv6_devconf struct ipv6_devconf { t#__s32 forwarding ; t#__s32 hop_limit ; t#__s32 mtu6 ; t#__s32 accept_ra ; t#__s32 accept_redirects ; t#__s32 autoconf ; t#__s32 dad_transmits ; t#__s32 rtr_solicits ; t#__s32 rtr_solicit_interval ; t#__s32 rtr_solicit_delay ; t#__s32 force_mld_version ; t#__s32 use_tempaddr ; t#__s32 temp_valid_lft ; t#__s32 temp_prefered_lft ; t#__s32 regen_max_retry ; t#__s32 max_desync_factor ; t#__s32 max_addresses ; t#__s32 accept_ra_defrtr ; t#__s32 accept_ra_pinfo ; t#__s32 accept_ra_rtr_pref ; t#__s32 rtr_probe_interval ; t#__s32 accept_ra_rt_info_max_plen ; t#__s32 proxy_ndp ; t#__s32 accept_source_route ; t#__s32 disable_ipv6 ; t#__s32 accept_dad ; t#__s32 force_tllao ; void * sysctl ; } 
s##xfrm_state
s##fib_info
s#rtable struct rtable { s#dst_entry dst ; t#__be32 rt_key_dst ; t#__be32 rt_key_src ; int rt_genid ; unsigned rt_flags ; t#__u16 rt_type ; t#__u8 rt_key_tos ; t#__be32 rt_dst ; t#__be32 rt_src ; int rt_route_iif ; int rt_iif ; int rt_oif ; t#__u32 rt_mark ; t#__be32 rt_gateway ; t#__be32 rt_spec_dst ; t#u32 rt_peer_genid ; unsigned long _peer ; s#fib_info * fi ; } 
s##dn_route
s#fib6_node struct fib6_node { s#fib6_node * parent ; s#fib6_node * left ; s#fib6_node * right ; s#fib6_node * subtree ; s#rt6_info * leaf ; t#__u16 fn_bit ; t#__u16 fn_flags ; t#__u32 fn_sernum ; s#rt6_info * rr_ptr ; } 
s#fib6_table struct fib6_table { s#hlist_node tb6_hlist ; t#u32 tb6_id ; t#rwlock_t tb6_lock ; s#fib6_node tb6_root ; } 
s#in6_addr struct in6_addr { union { t#__u8 u6_addr8 [ 16 ] ; t#__be16 u6_addr16 [ 8 ] ; t#__be32 u6_addr32 [ 4 ] ; } in6_u ; } 
s#rt6key struct rt6key { s#in6_addr addr ; int plen ; } 
s#ip6_sf_list struct ip6_sf_list { s#ip6_sf_list * sf_next ; s#in6_addr sf_addr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ifmcaddr6 struct ifmcaddr6 { s#in6_addr mca_addr ; s#inet6_dev * idev ; s#ifmcaddr6 * next ; s#ip6_sf_list * mca_sources ; s#ip6_sf_list * mca_tomb ; unsigned int mca_sfmode ; unsigned char mca_crcount ; unsigned long mca_sfcount [ 2 ] ; s#timer_list mca_timer ; unsigned mca_flags ; int mca_users ; t#atomic_t mca_refcnt ; t#spinlock_t mca_lock ; unsigned long mca_cstamp ; unsigned long mca_tstamp ; } 
s#ifacaddr6 struct ifacaddr6 { s#in6_addr aca_addr ; s#inet6_dev * aca_idev ; s#rt6_info * aca_rt ; s#ifacaddr6 * aca_next ; int aca_users ; t#atomic_t aca_refcnt ; t#spinlock_t aca_lock ; unsigned long aca_cstamp ; unsigned long aca_tstamp ; } 
s#icmpv6_mib_device struct icmpv6_mib_device { t#atomic_long_t mibs [ E#__ICMP6_MIB_MAX ] ; } 
s#icmpv6msg_mib_device struct icmpv6msg_mib_device { t#atomic_long_t mibs [ 512 ] ; } 
s#ipv6_devstat struct ipv6_devstat { s#proc_dir_entry * proc_dir_entry ; __typeof__ ( s#ipstats_mib ) * ipv6 [ 2 ] ; __typeof__ ( s#icmpv6_mib_device ) * icmpv6dev ; __typeof__ ( s#icmpv6msg_mib_device ) * icmpv6msgdev ; } 
s#inet6_dev struct inet6_dev { s#net_device * dev ; s#list_head addr_list ; s#ifmcaddr6 * mc_list ; s#ifmcaddr6 * mc_tomb ; t#spinlock_t mc_lock ; unsigned char mc_qrv ; unsigned char mc_gq_running ; unsigned char mc_ifc_count ; unsigned long mc_v1_seen ; unsigned long mc_maxdelay ; s#timer_list mc_gq_timer ; s#timer_list mc_ifc_timer ; s#ifacaddr6 * ac_list ; t#rwlock_t lock ; t#atomic_t refcnt ; t#__u32 if_flags ; int dead ; t#u8 rndid [ 8 ] ; s#timer_list regen_timer ; s#list_head tempaddr_list ; s#neigh_parms * nd_parms ; s#inet6_dev * next ; s#ipv6_devconf cnf ; s#ipv6_devstat stats ; unsigned long tstamp ; s#rcu_head rcu ; } 
s#rt6_info struct rt6_info { s#dst_entry dst ; s#fib6_table * rt6i_table ; s#fib6_node * rt6i_node ; s#in6_addr rt6i_gateway ; t#atomic_t rt6i_ref ; s#rt6key rt6i_dst __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#u32 rt6i_flags ; s#rt6key rt6i_src ; s#rt6key rt6i_prefsrc ; t#u32 rt6i_metric ; t#u32 rt6i_peer_genid ; s#inet6_dev * rt6i_idev ; unsigned long _rt6i_peer ; t#u32 rt6i_flow_cache_genid ; unsigned short rt6i_nfheader_len ; t#u8 rt6i_protocol ; } 
s#rt6_statistics struct rt6_statistics { t#__u32 fib_nodes ; t#__u32 fib_route_nodes ; t#__u32 fib_rt_alloc ; t#__u32 fib_rt_entries ; t#__u32 fib_rt_cache ; t#__u32 fib_discarded_routes ; } 
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#vlan_group struct vlan_group { s#net_device * real_dev ; unsigned int nr_vlans ; s#hlist_node hlist ; s#net_device * * vlan_devices_arrays [ 8 ] ; s#rcu_head rcu ; } 
s##netpoll_info
s#in_ifaddr struct in_ifaddr { s#hlist_node hash ; s#in_ifaddr * ifa_next ; s#in_device * ifa_dev ; s#rcu_head rcu_head ; t#__be32 ifa_local ; t#__be32 ifa_address ; t#__be32 ifa_mask ; t#__be32 ifa_broadcast ; unsigned char ifa_scope ; unsigned char ifa_flags ; unsigned char ifa_prefixlen ; char ifa_label [ 16 ] ; } 
s##ip_mc_list
s#in_device struct in_device { s#net_device * dev ; t#atomic_t refcnt ; int dead ; s#in_ifaddr * ifa_list ; s#ip_mc_list * mc_list ; int mc_count ; t#spinlock_t mc_tomb_lock ; s#ip_mc_list * mc_tomb ; unsigned long mr_v1_seen ; unsigned long mr_v2_seen ; unsigned long mr_maxdelay ; unsigned char mr_qrv ; unsigned char mr_gq_running ; unsigned char mr_ifc_count ; s#timer_list mr_gq_timer ; s#timer_list mr_ifc_timer ; s#neigh_parms * arp_parms ; s#ipv4_devconf cnf ; s#rcu_head rcu_head ; } 
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
rdma_copy_addr int rdma_copy_addr ( s#rdma_dev_addr * , s#net_device * , const unsigned char * ) 
rdma_translate_ip int rdma_translate_ip ( s#sockaddr * , s#rdma_dev_addr * ) 
rdma_resolve_ip int rdma_resolve_ip ( s#rdma_addr_client * , s#sockaddr * , s#sockaddr * , s#rdma_dev_addr * , int , void ( * ) ( int , s#sockaddr * , s#rdma_dev_addr * , void * ) , void * ) 
rdma_addr_cancel void rdma_addr_cancel ( s#rdma_dev_addr * ) 

/* drivers/infiniband/core/cache.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s#ib_ucontext struct ib_ucontext { s#ib_device * device ; s#list_head pd_list ; s#list_head mr_list ; s#list_head mw_list ; s#list_head cq_list ; s#list_head qp_list ; s#list_head srq_list ; s#list_head ah_list ; s#list_head xrc_domain_list ; int closing ; } 
s#ib_uobject struct ib_uobject { t#u64 user_handle ; s#ib_ucontext * context ; void * object ; s#list_head list ; int id ; s#kref ref ; s#rw_semaphore mutex ; int live ; } 
t#ib_comp_handler typedef void ( * ib_comp_handler ) ( s#ib_cq * , void * ) 
s#ib_cq struct ib_cq { s#ib_device * device ; s#ib_uobject * uobject ; t#ib_comp_handler comp_handler ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * cq_context ; int cqe ; t#atomic_t usecnt ; } 
s#ib_pd struct ib_pd { s#ib_device * device ; s#ib_uobject * uobject ; t#atomic_t usecnt ; } 
s##inode
s#ib_xrcd struct ib_xrcd { s#ib_device * device ; s#ib_uobject * uobject ; s#inode * inode ; s#rb_node node ; t#atomic_t usecnt ; } 
s#ib_srq struct ib_srq { s#ib_device * device ; s#ib_pd * pd ; s#ib_cq * xrc_cq ; s#ib_xrcd * xrcd ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; t#atomic_t usecnt ; t#u32 xrc_srq_num ; } 
e#ib_qp_type enum ib_qp_type { IB_QPT_SMI , IB_QPT_GSI , IB_QPT_RC , IB_QPT_UC , IB_QPT_UD , IB_QPT_XRC , IB_QPT_RAW_IPV6 , IB_QPT_RAW_ETHERTYPE , IB_QPT_RAW_PACKET = 8 , IB_QPT_MAX , IB_QPT_RESERVED1 = 0x1000 , IB_QPT_RESERVED2 , IB_QPT_RESERVED3 , IB_QPT_RESERVED4 , IB_QPT_RESERVED5 , IB_QPT_RESERVED6 , IB_QPT_RESERVED7 , IB_QPT_RESERVED8 , IB_QPT_RESERVED9 , IB_QPT_RESERVED10 , } 
s#ib_qp struct ib_qp { s#ib_device * device ; s#ib_pd * pd ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_uobject * uobject ; void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; t#u32 qp_num ; e#ib_qp_type qp_type ; s#ib_xrcd * xrcd ; } 
e#ib_event_type enum ib_event_type { IB_EVENT_CQ_ERR , IB_EVENT_QP_FATAL , IB_EVENT_QP_REQ_ERR , IB_EVENT_QP_ACCESS_ERR , IB_EVENT_COMM_EST , IB_EVENT_SQ_DRAINED , IB_EVENT_PATH_MIG , IB_EVENT_PATH_MIG_ERR , IB_EVENT_DEVICE_FATAL , IB_EVENT_PORT_ACTIVE , IB_EVENT_PORT_ERR , IB_EVENT_LID_CHANGE , IB_EVENT_PKEY_CHANGE , IB_EVENT_SM_CHANGE , IB_EVENT_SRQ_ERR , IB_EVENT_SRQ_LIMIT_REACHED , IB_EVENT_QP_LAST_WQE_REACHED , IB_EVENT_CLIENT_REREGISTER , IB_EVENT_GID_CHANGE , } 
s#ib_event struct ib_event { s#ib_device * device ; union { s#ib_cq * cq ; s#ib_qp * qp ; s#ib_srq * srq ; t#u8 port_num ; t#u32 xrc_qp_num ; } element ; e#ib_event_type event ; } 
s#ib_event_handler struct ib_event_handler { s#ib_device * device ; void ( * handler ) ( s#ib_event_handler * , s#ib_event * ) ; s#list_head list ; } 
s##ib_pkey_cache
s##ib_gid_cache
s#ib_cache struct ib_cache { t#rwlock_t lock ; s#ib_event_handler event_handler ; s#ib_pkey_cache * * pkey_cache ; s#ib_gid_cache * * gid_cache ; t#u8 * lmc_cache ; } 
s##iw_cm_verbs
s#ib_protocol_stats struct ib_protocol_stats { } 
s#iw_protocol_stats struct iw_protocol_stats { t#u64 ipInReceives ; t#u64 ipInHdrErrors ; t#u64 ipInTooBigErrors ; t#u64 ipInNoRoutes ; t#u64 ipInAddrErrors ; t#u64 ipInUnknownProtos ; t#u64 ipInTruncatedPkts ; t#u64 ipInDiscards ; t#u64 ipInDelivers ; t#u64 ipOutForwDatagrams ; t#u64 ipOutRequests ; t#u64 ipOutDiscards ; t#u64 ipOutNoRoutes ; t#u64 ipReasmTimeout ; t#u64 ipReasmReqds ; t#u64 ipReasmOKs ; t#u64 ipReasmFails ; t#u64 ipFragOKs ; t#u64 ipFragFails ; t#u64 ipFragCreates ; t#u64 ipInMcastPkts ; t#u64 ipOutMcastPkts ; t#u64 ipInBcastPkts ; t#u64 ipOutBcastPkts ; t#u64 tcpRtoAlgorithm ; t#u64 tcpRtoMin ; t#u64 tcpRtoMax ; t#u64 tcpMaxConn ; t#u64 tcpActiveOpens ; t#u64 tcpPassiveOpens ; t#u64 tcpAttemptFails ; t#u64 tcpEstabResets ; t#u64 tcpCurrEstab ; t#u64 tcpInSegs ; t#u64 tcpOutSegs ; t#u64 tcpRetransSegs ; t#u64 tcpInErrs ; t#u64 tcpOutRsts ; } 
u#rdma_protocol_stats union rdma_protocol_stats { s#ib_protocol_stats ib ; s#iw_protocol_stats iw ; } 
e#ib_atomic_cap enum ib_atomic_cap { IB_ATOMIC_NONE , IB_ATOMIC_HCA , IB_ATOMIC_GLOB } 
s#ib_device_attr struct ib_device_attr { t#u64 fw_ver ; t#__be64 sys_image_guid ; t#u64 max_mr_size ; t#u64 page_size_cap ; t#u32 vendor_id ; t#u32 vendor_part_id ; t#u32 hw_ver ; int max_qp ; int max_qp_wr ; int device_cap_flags ; int max_sge ; int max_sge_rd ; int max_cq ; int max_cqe ; int max_mr ; int max_pd ; int max_qp_rd_atom ; int max_ee_rd_atom ; int max_res_rd_atom ; int max_qp_init_rd_atom ; int max_ee_init_rd_atom ; e#ib_atomic_cap atomic_cap ; e#ib_atomic_cap masked_atomic_cap ; int max_ee ; int max_rdd ; int max_mw ; int max_raw_ipv6_qp ; int max_raw_ethy_qp ; int max_mcast_grp ; int max_mcast_qp_attach ; int max_total_mcast_qp_attach ; int max_ah ; int max_fmr ; int max_map_per_fmr ; int max_srq ; int max_srq_wr ; int max_srq_sge ; unsigned int max_fast_reg_page_list_len ; t#u16 max_pkeys ; t#u8 local_ca_ack_delay ; int sig_prot_cap ; int sig_guard_cap ; } 
e#ib_port_state enum ib_port_state { IB_PORT_NOP = 0 , IB_PORT_DOWN = 1 , IB_PORT_INIT = 2 , IB_PORT_ARMED = 3 , IB_PORT_ACTIVE = 4 , IB_PORT_ACTIVE_DEFER = 5 } 
e#ib_mtu enum ib_mtu { IB_MTU_256 = 1 , IB_MTU_512 = 2 , IB_MTU_1024 = 3 , IB_MTU_2048 = 4 , IB_MTU_4096 = 5 } 
s#ib_port_attr struct ib_port_attr { e#ib_port_state state ; e#ib_mtu max_mtu ; e#ib_mtu active_mtu ; int gid_tbl_len ; t#u32 port_cap_flags ; t#u32 max_msg_sz ; t#u32 bad_pkey_cntr ; t#u32 qkey_viol_cntr ; t#u16 pkey_tbl_len ; t#u16 lid ; t#u16 sm_lid ; t#u8 lmc ; t#u8 max_vl_num ; t#u8 sm_sl ; t#u8 subnet_timeout ; t#u8 init_type_reply ; t#u8 active_width ; t#u8 active_speed ; t#u8 phys_state ; } 
e#rdma_link_layer enum rdma_link_layer { IB_LINK_LAYER_UNSPECIFIED , IB_LINK_LAYER_INFINIBAND , IB_LINK_LAYER_ETHERNET , } 
u#ib_gid union ib_gid { t#u8 raw [ 16 ] ; struct { t#__be64 subnet_prefix ; t#__be64 interface_id ; } global ; } 
s#ib_device_modify struct ib_device_modify { t#u64 sys_image_guid ; char node_desc [ 64 ] ; } 
s#ib_port_modify struct ib_port_modify { t#u32 set_port_cap_mask ; t#u32 clr_port_cap_mask ; t#u8 init_type ; } 
s#ib_udata struct ib_udata { void * inbuf ; void * outbuf ; t#size_t inlen ; t#size_t outlen ; } 
s#ib_ah struct ib_ah { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; } 
s#ib_global_route struct ib_global_route { u#ib_gid dgid ; t#u32 flow_label ; t#u8 sgid_index ; t#u8 hop_limit ; t#u8 traffic_class ; } 
s#ib_ah_attr struct ib_ah_attr { s#ib_global_route grh ; t#u16 dlid ; t#u8 sl ; t#u8 src_path_bits ; t#u8 static_rate ; t#u8 ah_flags ; t#u8 port_num ; } 
s#ib_srq_attr struct ib_srq_attr { t#u32 max_wr ; t#u32 max_sge ; t#u32 srq_limit ; } 
s#ib_srq_init_attr struct ib_srq_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * srq_context ; s#ib_srq_attr attr ; } 
e#ib_srq_attr_mask enum ib_srq_attr_mask { IB_SRQ_MAX_WR = 1 << 0 , IB_SRQ_LIMIT = 1 << 1 , } 
s#ib_sge struct ib_sge { t#u64 addr ; t#u32 length ; t#u32 lkey ; } 
s#ib_recv_wr struct ib_recv_wr { s#ib_recv_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; } 
s#ib_qp_cap struct ib_qp_cap { t#u32 max_send_wr ; t#u32 max_recv_wr ; t#u32 max_send_sge ; t#u32 max_recv_sge ; t#u32 max_inline_data ; } 
e#ib_sig_type enum ib_sig_type { IB_SIGNAL_ALL_WR , IB_SIGNAL_REQ_WR } 
e#ib_qp_create_flags enum ib_qp_create_flags { IB_QP_CREATE_IPOIB_UD_LSO = 1 << 0 , IB_QP_CREATE_BLOCK_MULTICAST_LOOPBACK = 1 << 1 , IB_QP_CREATE_USE_GFP_NOFS = 1 << 2 , IB_QP_CREATE_SIGNATURE_EN = 1 << 6 , } 
s#ib_qp_init_attr struct ib_qp_init_attr { void ( * event_handler ) ( s#ib_event * , void * ) ; void * qp_context ; s#ib_cq * send_cq ; s#ib_cq * recv_cq ; s#ib_srq * srq ; s#ib_qp_cap cap ; e#ib_sig_type sq_sig_type ; e#ib_qp_type qp_type ; e#ib_qp_create_flags create_flags ; s#ib_xrcd * xrc_domain ; t#u8 port_num ; } 
e#ib_qp_state enum ib_qp_state { IB_QPS_RESET , IB_QPS_INIT , IB_QPS_RTR , IB_QPS_RTS , IB_QPS_SQD , IB_QPS_SQE , IB_QPS_ERR } 
e#ib_mig_state enum ib_mig_state { IB_MIG_MIGRATED , IB_MIG_REARM , IB_MIG_ARMED } 
s#ib_qp_attr struct ib_qp_attr { e#ib_qp_state qp_state ; e#ib_qp_state cur_qp_state ; e#ib_mtu path_mtu ; e#ib_mig_state path_mig_state ; t#u32 qkey ; t#u32 rq_psn ; t#u32 sq_psn ; t#u32 dest_qp_num ; int qp_access_flags ; s#ib_qp_cap cap ; s#ib_ah_attr ah_attr ; s#ib_ah_attr alt_ah_attr ; t#u16 pkey_index ; t#u16 alt_pkey_index ; t#u8 en_sqd_async_notify ; t#u8 sq_draining ; t#u8 max_rd_atomic ; t#u8 max_dest_rd_atomic ; t#u8 min_rnr_timer ; t#u8 port_num ; t#u8 timeout ; t#u8 retry_cnt ; t#u8 rnr_retry ; t#u8 alt_port_num ; t#u8 alt_timeout ; } 
e#ib_wr_opcode enum ib_wr_opcode { IB_WR_RDMA_WRITE , IB_WR_RDMA_WRITE_WITH_IMM , IB_WR_SEND , IB_WR_SEND_WITH_IMM , IB_WR_RDMA_READ , IB_WR_ATOMIC_CMP_AND_SWP , IB_WR_ATOMIC_FETCH_AND_ADD , IB_WR_LSO , IB_WR_SEND_WITH_INV , IB_WR_RDMA_READ_WITH_INV , IB_WR_LOCAL_INV , IB_WR_FAST_REG_MR , IB_WR_MASKED_ATOMIC_CMP_AND_SWP , IB_WR_MASKED_ATOMIC_FETCH_AND_ADD , IB_WR_REG_SIG_MR , IB_WR_RESERVED1 = 0xf0 , IB_WR_RESERVED2 , IB_WR_RESERVED3 , IB_WR_RESERVED4 , IB_WR_RESERVED5 , IB_WR_RESERVED6 , IB_WR_RESERVED7 , IB_WR_RESERVED8 , IB_WR_RESERVED9 , IB_WR_RESERVED10 , } 
s#ib_fast_reg_page_list struct ib_fast_reg_page_list { s#ib_device * device ; t#u64 * page_list ; unsigned int max_page_list_len ; } 
e#ib_signature_type enum ib_signature_type { IB_SIG_TYPE_T10_DIF , } 
e#ib_t10_dif_type enum ib_t10_dif_type { IB_T10DIF_NONE , IB_T10DIF_TYPE1 , IB_T10DIF_TYPE2 , IB_T10DIF_TYPE3 } 
e#ib_t10_dif_bg_type enum ib_t10_dif_bg_type { IB_T10DIF_CRC , IB_T10DIF_CSUM } 
s#ib_t10_dif_domain struct ib_t10_dif_domain { e#ib_t10_dif_type type ; e#ib_t10_dif_bg_type bg_type ; t#u16 pi_interval ; t#u16 bg ; t#u16 app_tag ; t#u32 ref_tag ; t#bool type3_inc_reftag ; } 
s#ib_sig_domain struct ib_sig_domain { e#ib_signature_type sig_type ; union { s#ib_t10_dif_domain dif ; } sig ; } 
s#ib_sig_attrs struct ib_sig_attrs { t#u8 check_mask ; s#ib_sig_domain mem ; s#ib_sig_domain wire ; } 
s#ib_mr struct ib_mr { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 lkey ; t#u32 rkey ; t#atomic_t usecnt ; } 
s#ib_send_wr struct ib_send_wr { s#ib_send_wr * next ; t#u64 wr_id ; s#ib_sge * sg_list ; int num_sge ; e#ib_wr_opcode opcode ; int send_flags ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; union { struct { t#u64 remote_addr ; t#u32 rkey ; } rdma ; struct { t#u64 remote_addr ; t#u64 compare_add ; t#u64 swap ; t#u64 compare_add_mask ; t#u64 swap_mask ; t#u32 rkey ; } atomic ; struct { s#ib_ah * ah ; void * header ; int hlen ; int mss ; t#u32 remote_qpn ; t#u32 remote_qkey ; t#u16 pkey_index ; t#u8 port_num ; } ud ; struct { t#u64 iova_start ; s#ib_fast_reg_page_list * page_list ; unsigned int page_shift ; unsigned int page_list_len ; t#u32 length ; int access_flags ; t#u32 rkey ; } fast_reg ; struct { s#ib_sig_attrs * sig_attrs ; s#ib_mr * sig_mr ; int access_flags ; s#ib_sge * prot ; } sig_handover ; } wr ; t#u32 xrc_remote_srq_num ; } 
e#ib_wc_status enum ib_wc_status { IB_WC_SUCCESS , IB_WC_LOC_LEN_ERR , IB_WC_LOC_QP_OP_ERR , IB_WC_LOC_EEC_OP_ERR , IB_WC_LOC_PROT_ERR , IB_WC_WR_FLUSH_ERR , IB_WC_MW_BIND_ERR , IB_WC_BAD_RESP_ERR , IB_WC_LOC_ACCESS_ERR , IB_WC_REM_INV_REQ_ERR , IB_WC_REM_ACCESS_ERR , IB_WC_REM_OP_ERR , IB_WC_RETRY_EXC_ERR , IB_WC_RNR_RETRY_EXC_ERR , IB_WC_LOC_RDD_VIOL_ERR , IB_WC_REM_INV_RD_REQ_ERR , IB_WC_REM_ABORT_ERR , IB_WC_INV_EECN_ERR , IB_WC_INV_EEC_STATE_ERR , IB_WC_FATAL_ERR , IB_WC_RESP_TIMEOUT_ERR , IB_WC_GENERAL_ERR } 
e#ib_wc_opcode enum ib_wc_opcode { IB_WC_SEND , IB_WC_RDMA_WRITE , IB_WC_RDMA_READ , IB_WC_COMP_SWAP , IB_WC_FETCH_ADD , IB_WC_BIND_MW , IB_WC_LSO , IB_WC_LOCAL_INV , IB_WC_FAST_REG_MR , IB_WC_MASKED_COMP_SWAP , IB_WC_MASKED_FETCH_ADD , IB_WC_RECV = 1 << 7 , IB_WC_RECV_RDMA_WITH_IMM } 
s#ib_wc struct ib_wc { t#u64 wr_id ; e#ib_wc_status status ; e#ib_wc_opcode opcode ; t#u32 vendor_err ; t#u32 byte_len ; s#ib_qp * qp ; union { t#__be32 imm_data ; t#u32 invalidate_rkey ; } ex ; t#u32 src_qp ; int wc_flags ; t#u16 pkey_index ; t#u16 slid ; t#u8 sl ; t#u8 dlid_path_bits ; t#u8 port_num ; int csum_ok ; } 
E#IB_CQ_SOLICITED 1 << 0 
E#IB_CQ_NEXT_COMP 1 << 1 
e#ib_cq_notify_flags enum ib_cq_notify_flags { IB_CQ_SOLICITED = 1 << 0 , IB_CQ_NEXT_COMP = 1 << 1 , IB_CQ_SOLICITED_MASK = E#IB_CQ_SOLICITED | E#IB_CQ_NEXT_COMP , IB_CQ_REPORT_MISSED_EVENTS = 1 << 2 , } 
s#ib_phys_buf struct ib_phys_buf { t#u64 addr ; t#u64 size ; } 
s#ib_mr_attr struct ib_mr_attr { s#ib_pd * pd ; t#u64 device_virt_addr ; t#u64 size ; int mr_access_flags ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_mr_init_attr struct ib_mr_init_attr { int max_reg_descriptors ; t#u32 flags ; } 
s#ib_mw struct ib_mw { s#ib_device * device ; s#ib_pd * pd ; s#ib_uobject * uobject ; t#u32 rkey ; } 
s#ib_mw_bind struct ib_mw_bind { s#ib_mr * mr ; t#u64 wr_id ; t#u64 addr ; t#u32 length ; int send_flags ; int mw_access_flags ; } 
s#ib_fmr struct ib_fmr { s#ib_device * device ; s#ib_pd * pd ; s#list_head list ; t#u32 lkey ; t#u32 rkey ; } 
s#ib_fmr_attr struct ib_fmr_attr { int max_pages ; int max_maps ; t#u8 page_shift ; } 
s#ib_grh struct ib_grh { t#__be32 version_tclass_flow ; t#__be16 paylen ; t#u8 next_hdr ; t#u8 hop_limit ; u#ib_gid sgid ; u#ib_gid dgid ; } 
s##ib_mad
e#ib_sig_err_type enum ib_sig_err_type { IB_SIG_BAD_GUARD , IB_SIG_BAD_REFTAG , IB_SIG_BAD_APPTAG , } 
s#ib_sig_err struct ib_sig_err { e#ib_sig_err_type err_type ; t#u32 expected ; t#u32 actual ; t#u64 sig_err_offset ; t#u32 key ; } 
s#ib_mr_status struct ib_mr_status { t#u32 fail_status ; s#ib_sig_err sig_err ; } 
s#ib_dma_mapping_ops struct ib_dma_mapping_ops { int ( * mapping_error ) ( s#ib_device * , t#u64 ) ; t#u64 ( * map_single ) ( s#ib_device * , void * , t#size_t , e#dma_data_direction ) ; void ( * unmap_single ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; t#u64 ( * map_page ) ( s#ib_device * , s#page * , unsigned long , t#size_t , e#dma_data_direction ) ; void ( * unmap_page ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; int ( * map_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; void ( * unmap_sg ) ( s#ib_device * , s#scatterlist * , int , e#dma_data_direction ) ; t#u64 ( * dma_address ) ( s#ib_device * , s#scatterlist * ) ; unsigned int ( * dma_len ) ( s#ib_device * , s#scatterlist * ) ; void ( * sync_single_for_cpu ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void ( * sync_single_for_device ) ( s#ib_device * , t#u64 , t#size_t , e#dma_data_direction ) ; void * ( * alloc_coherent ) ( s#ib_device * , t#size_t , t#u64 * , t#gfp_t ) ; void ( * free_coherent ) ( s#ib_device * , t#size_t , void * , t#u64 ) ; } 
s#ib_device struct ib_device { s#device * dma_device ; char name [ 64 ] ; s#list_head event_handler_list ; t#spinlock_t event_handler_lock ; t#spinlock_t client_data_lock ; s#list_head core_list ; s#list_head client_data_list ; s#ib_cache cache ; int * pkey_tbl_len ; int * gid_tbl_len ; int num_comp_vectors ; s#iw_cm_verbs * iwcm ; int ( * get_protocol_stats ) ( s#ib_device * , u#rdma_protocol_stats * ) ; int ( * query_device ) ( s#ib_device * , s#ib_device_attr * ) ; int ( * query_port ) ( s#ib_device * , t#u8 , s#ib_port_attr * ) ; e#rdma_link_layer ( * get_link_layer ) ( s#ib_device * , t#u8 ) ; int ( * query_gid ) ( s#ib_device * , t#u8 , int , u#ib_gid * ) ; int ( * query_pkey ) ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) ; int ( * modify_device ) ( s#ib_device * , int , s#ib_device_modify * ) ; int ( * modify_port ) ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) ; s#ib_ucontext * ( * alloc_ucontext ) ( s#ib_device * , s#ib_udata * ) ; int ( * dealloc_ucontext ) ( s#ib_ucontext * ) ; int ( * mmap ) ( s#ib_ucontext * , s#vm_area_struct * ) ; s#ib_pd * ( * alloc_pd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_pd ) ( s#ib_pd * ) ; s#ib_ah * ( * create_ah ) ( s#ib_pd * , s#ib_ah_attr * ) ; int ( * modify_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * query_ah ) ( s#ib_ah * , s#ib_ah_attr * ) ; int ( * destroy_ah ) ( s#ib_ah * ) ; s#ib_srq * ( * create_srq ) ( s#ib_pd * , s#ib_srq_init_attr * , s#ib_udata * ) ; int ( * modify_srq ) ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask , s#ib_udata * ) ; int ( * query_srq ) ( s#ib_srq * , s#ib_srq_attr * ) ; int ( * destroy_srq ) ( s#ib_srq * ) ; int ( * post_srq_recv ) ( s#ib_srq * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_qp * ( * create_qp ) ( s#ib_pd * , s#ib_qp_init_attr * , s#ib_udata * ) ; int ( * modify_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_udata * ) ; int ( * query_qp ) ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) ; int ( * destroy_qp ) ( s#ib_qp * ) ; int ( * post_send ) ( s#ib_qp * , s#ib_send_wr * , s#ib_send_wr * * ) ; int ( * post_recv ) ( s#ib_qp * , s#ib_recv_wr * , s#ib_recv_wr * * ) ; s#ib_cq * ( * create_cq ) ( s#ib_device * , int , int , s#ib_ucontext * , s#ib_udata * ) ; int ( * modify_cq ) ( s#ib_cq * , t#u16 , t#u16 ) ; int ( * destroy_cq ) ( s#ib_cq * ) ; int ( * resize_cq ) ( s#ib_cq * , int , s#ib_udata * ) ; int ( * poll_cq ) ( s#ib_cq * , int , s#ib_wc * ) ; int ( * peek_cq ) ( s#ib_cq * , int ) ; int ( * req_notify_cq ) ( s#ib_cq * , e#ib_cq_notify_flags ) ; int ( * req_ncomp_notif ) ( s#ib_cq * , int ) ; s#ib_mr * ( * get_dma_mr ) ( s#ib_pd * , int ) ; s#ib_mr * ( * reg_phys_mr ) ( s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mr * ( * reg_user_mr ) ( s#ib_pd * , t#u64 , t#u64 , t#u64 , int , s#ib_udata * ) ; int ( * query_mr ) ( s#ib_mr * , s#ib_mr_attr * ) ; int ( * dereg_mr ) ( s#ib_mr * ) ; int ( * destroy_mr ) ( s#ib_mr * ) ; s#ib_mr * ( * create_mr ) ( s#ib_pd * , s#ib_mr_init_attr * ) ; s#ib_mr * ( * alloc_fast_reg_mr ) ( s#ib_pd * , int ) ; s#ib_fast_reg_page_list * ( * alloc_fast_reg_page_list ) ( s#ib_device * , int ) ; void ( * free_fast_reg_page_list ) ( s#ib_fast_reg_page_list * ) ; int ( * rereg_phys_mr ) ( s#ib_mr * , int , s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) ; s#ib_mw * ( * alloc_mw ) ( s#ib_pd * ) ; int ( * bind_mw ) ( s#ib_qp * , s#ib_mw * , s#ib_mw_bind * ) ; int ( * dealloc_mw ) ( s#ib_mw * ) ; s#ib_fmr * ( * alloc_fmr ) ( s#ib_pd * , int , s#ib_fmr_attr * ) ; int ( * map_phys_fmr ) ( s#ib_fmr * , t#u64 * , int , t#u64 ) ; int ( * unmap_fmr ) ( s#list_head * ) ; int ( * dealloc_fmr ) ( s#ib_fmr * ) ; int ( * attach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * detach_mcast ) ( s#ib_qp * , u#ib_gid * , t#u16 ) ; int ( * process_mad ) ( s#ib_device * , int , t#u8 , s#ib_wc * , s#ib_grh * , s#ib_mad * , s#ib_mad * ) ; s#ib_srq * ( * create_xrc_srq ) ( s#ib_pd * , s#ib_cq * , s#ib_xrcd * , s#ib_srq_init_attr * , s#ib_udata * ) ; s#ib_xrcd * ( * alloc_xrcd ) ( s#ib_device * , s#ib_ucontext * , s#ib_udata * ) ; int ( * dealloc_xrcd ) ( s#ib_xrcd * ) ; int ( * create_xrc_rcv_qp ) ( s#ib_qp_init_attr * , t#u32 * ) ; int ( * modify_xrc_rcv_qp ) ( s#ib_xrcd * , t#u32 , s#ib_qp_attr * , int ) ; int ( * query_xrc_rcv_qp ) ( s#ib_xrcd * , t#u32 , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) ; int ( * reg_xrc_rcv_qp ) ( s#ib_xrcd * , void * , t#u32 ) ; int ( * unreg_xrc_rcv_qp ) ( s#ib_xrcd * , void * , t#u32 ) ; int ( * check_mr_status ) ( s#ib_mr * , t#u32 , s#ib_mr_status * ) ; s#ib_dma_mapping_ops * dma_ops ; s#module * owner ; s#device dev ; s#kobject * ports_parent ; s#list_head port_list ; enum { IB_DEV_UNINITIALIZED , IB_DEV_REGISTERED , IB_DEV_UNREGISTERED } reg_state ; int uverbs_abi_ver ; t#u64 uverbs_cmd_mask ; char node_desc [ 64 ] ; t#__be64 node_guid ; t#u32 local_dma_lkey ; t#u8 node_type ; t#u8 phys_port_cnt ; s#rb_root ib_uverbs_xrcd_table ; s#mutex xrcd_table_mutex ; } 
ib_get_cached_gid int ib_get_cached_gid ( s#ib_device * , t#u8 , int , u#ib_gid * ) 
ib_find_cached_gid int ib_find_cached_gid ( s#ib_device * , u#ib_gid * , t#u8 * , t#u16 * ) 
ib_get_cached_pkey int ib_get_cached_pkey ( s#ib_device * , t#u8 , int , t#u16 * ) 
ib_find_cached_pkey int ib_find_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_find_exact_cached_pkey int ib_find_exact_cached_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_get_cached_lmc int ib_get_cached_lmc ( s#ib_device * , t#u8 , t#u8 * ) 

/* drivers/infiniband/core/cm.o */
e#ib_cm_event_type enum ib_cm_event_type { IB_CM_REQ_ERROR , IB_CM_REQ_RECEIVED , IB_CM_REP_ERROR , IB_CM_REP_RECEIVED , IB_CM_RTU_RECEIVED , IB_CM_USER_ESTABLISHED , IB_CM_DREQ_ERROR , IB_CM_DREQ_RECEIVED , IB_CM_DREP_RECEIVED , IB_CM_TIMEWAIT_EXIT , IB_CM_MRA_RECEIVED , IB_CM_REJ_RECEIVED , IB_CM_LAP_ERROR , IB_CM_LAP_RECEIVED , IB_CM_APR_RECEIVED , IB_CM_SIDR_REQ_ERROR , IB_CM_SIDR_REQ_RECEIVED , IB_CM_SIDR_REP_RECEIVED } 
s#ib_sa_path_rec struct ib_sa_path_rec { t#__be64 service_id ; u#ib_gid dgid ; u#ib_gid sgid ; t#__be16 dlid ; t#__be16 slid ; int raw_traffic ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 traffic_class ; int reversible ; t#u8 numb_path ; t#__be16 pkey ; t#__be16 qos_class ; t#u8 sl ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 preference ; } 
s#ib_cm_req_event_param struct ib_cm_req_event_param { s#ib_cm_id * listen_id ; t#u8 port ; s#ib_sa_path_rec * primary_path ; s#ib_sa_path_rec * alternate_path ; t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; e#ib_qp_type qp_type ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int local_cm_response_timeout : 5 ; unsigned int flow_control : 1 ; unsigned int remote_cm_response_timeout : 5 ; unsigned int retry_count : 3 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
s#ib_cm_rep_event_param struct ib_cm_rep_event_param { t#__be64 remote_ca_guid ; t#u32 remote_qkey ; t#u32 remote_qpn ; t#u32 starting_psn ; t#u8 responder_resources ; t#u8 initiator_depth ; unsigned int target_ack_delay : 5 ; unsigned int failover_accepted : 2 ; unsigned int flow_control : 1 ; unsigned int rnr_retry_count : 3 ; unsigned int srq : 1 ; } 
e#ib_cm_rej_reason enum ib_cm_rej_reason { IB_CM_REJ_NO_QP = 1 , IB_CM_REJ_NO_EEC = 2 , IB_CM_REJ_NO_RESOURCES = 3 , IB_CM_REJ_TIMEOUT = 4 , IB_CM_REJ_UNSUPPORTED = 5 , IB_CM_REJ_INVALID_COMM_ID = 6 , IB_CM_REJ_INVALID_COMM_INSTANCE = 7 , IB_CM_REJ_INVALID_SERVICE_ID = 8 , IB_CM_REJ_INVALID_TRANSPORT_TYPE = 9 , IB_CM_REJ_STALE_CONN = 10 , IB_CM_REJ_RDC_NOT_EXIST = 11 , IB_CM_REJ_INVALID_GID = 12 , IB_CM_REJ_INVALID_LID = 13 , IB_CM_REJ_INVALID_SL = 14 , IB_CM_REJ_INVALID_TRAFFIC_CLASS = 15 , IB_CM_REJ_INVALID_HOP_LIMIT = 16 , IB_CM_REJ_INVALID_PACKET_RATE = 17 , IB_CM_REJ_INVALID_ALT_GID = 18 , IB_CM_REJ_INVALID_ALT_LID = 19 , IB_CM_REJ_INVALID_ALT_SL = 20 , IB_CM_REJ_INVALID_ALT_TRAFFIC_CLASS = 21 , IB_CM_REJ_INVALID_ALT_HOP_LIMIT = 22 , IB_CM_REJ_INVALID_ALT_PACKET_RATE = 23 , IB_CM_REJ_PORT_CM_REDIRECT = 24 , IB_CM_REJ_PORT_REDIRECT = 25 , IB_CM_REJ_INVALID_MTU = 26 , IB_CM_REJ_INSUFFICIENT_RESP_RESOURCES = 27 , IB_CM_REJ_CONSUMER_DEFINED = 28 , IB_CM_REJ_INVALID_RNR_RETRY = 29 , IB_CM_REJ_DUPLICATE_LOCAL_COMM_ID = 30 , IB_CM_REJ_INVALID_CLASS_VERSION = 31 , IB_CM_REJ_INVALID_FLOW_LABEL = 32 , IB_CM_REJ_INVALID_ALT_FLOW_LABEL = 33 } 
s#ib_cm_rej_event_param struct ib_cm_rej_event_param { e#ib_cm_rej_reason reason ; void * ari ; t#u8 ari_length ; } 
s#ib_cm_mra_event_param struct ib_cm_mra_event_param { t#u8 service_timeout ; } 
s#ib_cm_lap_event_param struct ib_cm_lap_event_param { s#ib_sa_path_rec * alternate_path ; } 
e#ib_cm_apr_status enum ib_cm_apr_status { IB_CM_APR_SUCCESS , IB_CM_APR_INVALID_COMM_ID , IB_CM_APR_UNSUPPORTED , IB_CM_APR_REJECT , IB_CM_APR_REDIRECT , IB_CM_APR_IS_CURRENT , IB_CM_APR_INVALID_QPN_EECN , IB_CM_APR_INVALID_LID , IB_CM_APR_INVALID_GID , IB_CM_APR_INVALID_FLOW_LABEL , IB_CM_APR_INVALID_TCLASS , IB_CM_APR_INVALID_HOP_LIMIT , IB_CM_APR_INVALID_PACKET_RATE , IB_CM_APR_INVALID_SL } 
s#ib_cm_apr_event_param struct ib_cm_apr_event_param { e#ib_cm_apr_status ap_status ; void * apr_info ; t#u8 info_len ; } 
s#ib_cm_sidr_req_event_param struct ib_cm_sidr_req_event_param { s#ib_cm_id * listen_id ; t#u8 port ; t#u16 pkey ; } 
e#ib_cm_sidr_status enum ib_cm_sidr_status { IB_SIDR_SUCCESS , IB_SIDR_UNSUPPORTED , IB_SIDR_REJECT , IB_SIDR_NO_QP , IB_SIDR_REDIRECT , IB_SIDR_UNSUPPORTED_VERSION } 
s#ib_cm_sidr_rep_event_param struct ib_cm_sidr_rep_event_param { e#ib_cm_sidr_status status ; t#u32 qkey ; t#u32 qpn ; void * info ; t#u8 info_len ; } 
s#ib_cm_event struct ib_cm_event { e#ib_cm_event_type event ; union { s#ib_cm_req_event_param req_rcvd ; s#ib_cm_rep_event_param rep_rcvd ; s#ib_cm_rej_event_param rej_rcvd ; s#ib_cm_mra_event_param mra_rcvd ; s#ib_cm_lap_event_param lap_rcvd ; s#ib_cm_apr_event_param apr_rcvd ; s#ib_cm_sidr_req_event_param sidr_req_rcvd ; s#ib_cm_sidr_rep_event_param sidr_rep_rcvd ; e#ib_wc_status send_status ; } param ; void * private_data ; } 
t#ib_cm_handler typedef int ( * ib_cm_handler ) ( s#ib_cm_id * , s#ib_cm_event * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s#ib_mad_hdr struct ib_mad_hdr { t#u8 base_version ; t#u8 mgmt_class ; t#u8 class_version ; t#u8 method ; t#__be16 status ; t#__be16 class_specific ; t#__be64 tid ; t#__be16 attr_id ; t#__be16 resv ; t#__be32 attr_mod ; } 
E#IB_MGMT_MAD_DATA 232 
s#ib_mad struct ib_mad { s#ib_mad_hdr mad_hdr ; t#u8 data [ E#IB_MGMT_MAD_DATA ] ; } 
e#ib_cm_state enum ib_cm_state { IB_CM_IDLE , IB_CM_LISTEN , IB_CM_REQ_SENT , IB_CM_REQ_RCVD , IB_CM_MRA_REQ_SENT , IB_CM_MRA_REQ_RCVD , IB_CM_REP_SENT , IB_CM_REP_RCVD , IB_CM_MRA_REP_SENT , IB_CM_MRA_REP_RCVD , IB_CM_ESTABLISHED , IB_CM_DREQ_SENT , IB_CM_DREQ_RCVD , IB_CM_TIMEWAIT , IB_CM_SIDR_REQ_SENT , IB_CM_SIDR_REQ_RCVD } 
e#ib_cm_lap_state enum ib_cm_lap_state { IB_CM_LAP_UNINIT , IB_CM_LAP_IDLE , IB_CM_LAP_SENT , IB_CM_LAP_RCVD , IB_CM_MRA_LAP_SENT , IB_CM_MRA_LAP_RCVD , } 
s#ib_cm_id struct ib_cm_id { t#ib_cm_handler cm_handler ; void * context ; s#ib_device * device ; t#__be64 service_id ; t#__be64 service_mask ; e#ib_cm_state state ; e#ib_cm_lap_state lap_state ; t#__be32 local_id ; t#__be32 remote_id ; t#u32 remote_cm_qpn ; } 
ib_create_cm_id s#ib_cm_id * ib_create_cm_id ( s#ib_device * , t#ib_cm_handler , void * ) 
ib_destroy_cm_id void ib_destroy_cm_id ( s#ib_cm_id * ) 
E#IB_CM_COMPARE_SIZE 64 
s#ib_cm_compare_data struct ib_cm_compare_data { t#u8 data [ E#IB_CM_COMPARE_SIZE ] ; t#u8 mask [ E#IB_CM_COMPARE_SIZE ] ; } 
ib_cm_listen int ib_cm_listen ( s#ib_cm_id * , t#__be64 , t#__be64 , s#ib_cm_compare_data * ) 
s#ib_cm_req_param struct ib_cm_req_param { s#ib_sa_path_rec * primary_path ; s#ib_sa_path_rec * alternate_path ; t#__be64 service_id ; t#u32 qp_num ; e#ib_qp_type qp_type ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 peer_to_peer ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 remote_cm_response_timeout ; t#u8 flow_control ; t#u8 local_cm_response_timeout ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 max_cm_retries ; t#u8 srq ; } 
ib_send_cm_req int ib_send_cm_req ( s#ib_cm_id * , s#ib_cm_req_param * ) 
s#ib_cm_rep_param struct ib_cm_rep_param { t#u32 qp_num ; t#u32 starting_psn ; const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 failover_accepted ; t#u8 flow_control ; t#u8 rnr_retry_count ; t#u8 srq ; } 
ib_send_cm_rep int ib_send_cm_rep ( s#ib_cm_id * , s#ib_cm_rep_param * ) 
ib_send_cm_rtu int ib_send_cm_rtu ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_dreq int ib_send_cm_dreq ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_drep int ib_send_cm_drep ( s#ib_cm_id * , const void * , t#u8 ) 
ib_send_cm_rej int ib_send_cm_rej ( s#ib_cm_id * , e#ib_cm_rej_reason , void * , t#u8 , const void * , t#u8 ) 
ib_send_cm_mra int ib_send_cm_mra ( s#ib_cm_id * , t#u8 , const void * , t#u8 ) 
ib_send_cm_lap int ib_send_cm_lap ( s#ib_cm_id * , s#ib_sa_path_rec * , const void * , t#u8 ) 
ib_send_cm_apr int ib_send_cm_apr ( s#ib_cm_id * , e#ib_cm_apr_status , void * , t#u8 , const void * , t#u8 ) 
s#ib_cm_sidr_req_param struct ib_cm_sidr_req_param { s#ib_sa_path_rec * path ; t#__be64 service_id ; int timeout_ms ; const void * private_data ; t#u8 private_data_len ; t#u8 max_cm_retries ; } 
ib_send_cm_sidr_req int ib_send_cm_sidr_req ( s#ib_cm_id * , s#ib_cm_sidr_req_param * ) 
s#ib_cm_sidr_rep_param struct ib_cm_sidr_rep_param { t#u32 qp_num ; t#u32 qkey ; e#ib_cm_sidr_status status ; const void * info ; t#u8 info_length ; const void * private_data ; t#u8 private_data_len ; } 
ib_send_cm_sidr_rep int ib_send_cm_sidr_rep ( s#ib_cm_id * , s#ib_cm_sidr_rep_param * ) 
ib_cm_notify int ib_cm_notify ( s#ib_cm_id * , e#ib_event_type ) 
ib_cm_init_qp_attr int ib_cm_init_qp_attr ( s#ib_cm_id * , s#ib_qp_attr * , int * ) 
cm_class s#class cm_class 

/* drivers/infiniband/core/cma.o */
s##device_private
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s#inet_ehash_bucket struct inet_ehash_bucket { s#hlist_nulls_head chain ; s#hlist_nulls_head twchain ; } 
s#inet_bind_hashbucket struct inet_bind_hashbucket { t#spinlock_t lock ; s#hlist_head chain ; } 
s#inet_listen_hashbucket struct inet_listen_hashbucket { t#spinlock_t lock ; s#hlist_nulls_head head ; } 
s#inet_hashinfo struct inet_hashinfo { s#inet_ehash_bucket * ehash ; t#spinlock_t * ehash_locks ; unsigned int ehash_mask ; unsigned int ehash_locks_mask ; s#inet_bind_hashbucket * bhash ; unsigned int bhash_size ; s#kmem_cache * bind_bucket_cachep ; s#inet_listen_hashbucket listening_hash [ 32 ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#atomic_t bsockets ; } 
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ib_pkey_cache
s##ib_gid_cache
e#iw_cm_event_type enum iw_cm_event_type { IW_CM_EVENT_CONNECT_REQUEST = 1 , IW_CM_EVENT_CONNECT_REPLY , IW_CM_EVENT_ESTABLISHED , IW_CM_EVENT_DISCONNECT , IW_CM_EVENT_CLOSE } 
s#in_addr struct in_addr { t#__be32 s_addr ; } 
s#sockaddr_in struct sockaddr_in { t#sa_family_t sin_family ; t#__be16 sin_port ; s#in_addr sin_addr ; unsigned char __pad [ 16 - sizeof ( short int ) - sizeof ( unsigned short int ) - sizeof ( struct in_addr ) ] ; } 
s#iw_cm_event struct iw_cm_event { e#iw_cm_event_type event ; int status ; s#sockaddr_in local_addr ; s#sockaddr_in remote_addr ; void * private_data ; void * provider_data ; t#u8 private_data_len ; t#u8 ord ; t#u8 ird ; } 
t#iw_cm_handler typedef int ( * iw_cm_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
t#iw_event_handler typedef int ( * iw_event_handler ) ( s#iw_cm_id * , s#iw_cm_event * ) 
s#iw_cm_id struct iw_cm_id { t#iw_cm_handler cm_handler ; void * context ; s#ib_device * device ; s#sockaddr_in local_addr ; s#sockaddr_in remote_addr ; void * provider_data ; t#iw_event_handler event_handler ; void ( * add_ref ) ( s#iw_cm_id * ) ; void ( * rem_ref ) ( s#iw_cm_id * ) ; } 
s#iw_cm_conn_param struct iw_cm_conn_param { const void * private_data ; t#u16 private_data_len ; t#u32 ord ; t#u32 ird ; t#u32 qpn ; } 
s#iw_cm_verbs struct iw_cm_verbs { void ( * add_ref ) ( s#ib_qp * ) ; void ( * rem_ref ) ( s#ib_qp * ) ; s#ib_qp * ( * get_qp ) ( s#ib_device * , int ) ; int ( * connect ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * accept ) ( s#iw_cm_id * , s#iw_cm_conn_param * ) ; int ( * reject ) ( s#iw_cm_id * , const void * , t#u8 ) ; int ( * create_listen ) ( s#iw_cm_id * , int ) ; int ( * destroy_listen ) ( s#iw_cm_id * ) ; } 
e#rdma_cm_event_type enum rdma_cm_event_type { RDMA_CM_EVENT_ADDR_RESOLVED , RDMA_CM_EVENT_ADDR_ERROR , RDMA_CM_EVENT_ROUTE_RESOLVED , RDMA_CM_EVENT_ROUTE_ERROR , RDMA_CM_EVENT_CONNECT_REQUEST , RDMA_CM_EVENT_CONNECT_RESPONSE , RDMA_CM_EVENT_CONNECT_ERROR , RDMA_CM_EVENT_UNREACHABLE , RDMA_CM_EVENT_REJECTED , RDMA_CM_EVENT_ESTABLISHED , RDMA_CM_EVENT_DISCONNECTED , RDMA_CM_EVENT_DEVICE_REMOVAL , RDMA_CM_EVENT_MULTICAST_JOIN , RDMA_CM_EVENT_MULTICAST_ERROR , RDMA_CM_EVENT_ADDR_CHANGE , RDMA_CM_EVENT_TIMEWAIT_EXIT } 
s#rdma_conn_param struct rdma_conn_param { const void * private_data ; t#u8 private_data_len ; t#u8 responder_resources ; t#u8 initiator_depth ; t#u8 flow_control ; t#u8 retry_count ; t#u8 rnr_retry_count ; t#u8 srq ; t#u32 qp_num ; } 
s#rdma_ud_param struct rdma_ud_param { const void * private_data ; t#u8 private_data_len ; s#ib_ah_attr ah_attr ; t#u32 qp_num ; t#u32 qkey ; } 
s#rdma_cm_event struct rdma_cm_event { e#rdma_cm_event_type event ; int status ; union { s#rdma_conn_param conn ; s#rdma_ud_param ud ; } param ; } 
t#rdma_cm_event_handler typedef int ( * rdma_cm_event_handler ) ( s#rdma_cm_id * , s#rdma_cm_event * ) 
s#__kernel_sockaddr_storage struct __kernel_sockaddr_storage { unsigned short ss_family ; char __data [ 128 - sizeof ( unsigned short ) ] ; } 
s#rdma_addr struct rdma_addr { s#__kernel_sockaddr_storage src_addr ; s#__kernel_sockaddr_storage dst_addr ; s#rdma_dev_addr dev_addr ; } 
s#rdma_route struct rdma_route { s#rdma_addr addr ; s#ib_sa_path_rec * path_rec ; int num_paths ; } 
e#rdma_port_space enum rdma_port_space { RDMA_PS_SDP = 0x0001 , RDMA_PS_IPOIB = 0x0002 , RDMA_PS_TCP = 0x0106 , RDMA_PS_UDP = 0x0111 , } 
s#rdma_cm_id struct rdma_cm_id { s#ib_device * device ; void * context ; s#ib_qp * qp ; t#rdma_cm_event_handler event_handler ; s#rdma_route route ; e#rdma_port_space ps ; e#ib_qp_type qp_type ; t#u8 port_num ; } 
rdma_create_id s#rdma_cm_id * rdma_create_id ( t#rdma_cm_event_handler , void * , e#rdma_port_space , e#ib_qp_type ) 
rdma_create_qp int rdma_create_qp ( s#rdma_cm_id * , s#ib_pd * , s#ib_qp_init_attr * ) 
rdma_destroy_qp void rdma_destroy_qp ( s#rdma_cm_id * ) 
rdma_init_qp_attr int rdma_init_qp_attr ( s#rdma_cm_id * , s#ib_qp_attr * , int * ) 
rdma_destroy_id void rdma_destroy_id ( s#rdma_cm_id * ) 
rdma_set_service_type void rdma_set_service_type ( s#rdma_cm_id * , int ) 
rdma_set_ib_paths int rdma_set_ib_paths ( s#rdma_cm_id * , s#ib_sa_path_rec * , int ) 
rdma_resolve_route int rdma_resolve_route ( s#rdma_cm_id * , int ) 
rdma_resolve_addr int rdma_resolve_addr ( s#rdma_cm_id * , s#sockaddr * , s#sockaddr * , int ) 
rdma_set_reuseaddr int rdma_set_reuseaddr ( s#rdma_cm_id * , int ) 
rdma_listen int rdma_listen ( s#rdma_cm_id * , int ) 
rdma_bind_addr int rdma_bind_addr ( s#rdma_cm_id * , s#sockaddr * ) 
rdma_connect int rdma_connect ( s#rdma_cm_id * , s#rdma_conn_param * ) 
rdma_accept int rdma_accept ( s#rdma_cm_id * , s#rdma_conn_param * ) 
rdma_notify int rdma_notify ( s#rdma_cm_id * , e#ib_event_type ) 
rdma_reject int rdma_reject ( s#rdma_cm_id * , const void * , t#u8 ) 
rdma_disconnect int rdma_disconnect ( s#rdma_cm_id * ) 
rdma_join_multicast int rdma_join_multicast ( s#rdma_cm_id * , s#sockaddr * , void * ) 
rdma_leave_multicast void rdma_leave_multicast ( s#rdma_cm_id * , s#sockaddr * ) 

/* drivers/infiniband/core/device.o */
s##workqueue_struct
ib_wq extern s#workqueue_struct * ib_wq 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
ib_alloc_device s#ib_device * ib_alloc_device ( t#size_t ) 
ib_dealloc_device void ib_dealloc_device ( s#ib_device * ) 
ib_register_device int ib_register_device ( s#ib_device * , int ( * ) ( s#ib_device * , t#u8 , s#kobject * ) ) 
ib_unregister_device void ib_unregister_device ( s#ib_device * ) 
s#ib_client struct ib_client { char * name ; void ( * add ) ( s#ib_device * ) ; void ( * remove ) ( s#ib_device * ) ; s#list_head list ; } 
ib_register_client int ib_register_client ( s#ib_client * ) 
ib_unregister_client void ib_unregister_client ( s#ib_client * ) 
ib_get_client_data void * ib_get_client_data ( s#ib_device * , s#ib_client * ) 
ib_set_client_data void ib_set_client_data ( s#ib_device * , s#ib_client * , void * ) 
ib_register_event_handler int ib_register_event_handler ( s#ib_event_handler * ) 
ib_unregister_event_handler int ib_unregister_event_handler ( s#ib_event_handler * ) 
ib_dispatch_event void ib_dispatch_event ( s#ib_event * ) 
ib_query_device int ib_query_device ( s#ib_device * , s#ib_device_attr * ) 
ib_query_port int ib_query_port ( s#ib_device * , t#u8 , s#ib_port_attr * ) 
ib_query_gid int ib_query_gid ( s#ib_device * , t#u8 , int , u#ib_gid * ) 
ib_query_pkey int ib_query_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 
ib_modify_device int ib_modify_device ( s#ib_device * , int , s#ib_device_modify * ) 
ib_modify_port int ib_modify_port ( s#ib_device * , t#u8 , int , s#ib_port_modify * ) 
ib_find_gid int ib_find_gid ( s#ib_device * , u#ib_gid * , t#u8 * , t#u16 * ) 
ib_find_pkey int ib_find_pkey ( s#ib_device * , t#u8 , t#u16 , t#u16 * ) 

/* drivers/infiniband/core/fmr_pool.o */
s##ib_fmr_pool
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
e#ib_access_flags enum ib_access_flags { IB_ACCESS_LOCAL_WRITE = 1 , IB_ACCESS_REMOTE_WRITE = ( 1 << 1 ) , IB_ACCESS_REMOTE_READ = ( 1 << 2 ) , IB_ACCESS_REMOTE_ATOMIC = ( 1 << 3 ) , IB_ACCESS_MW_BIND = ( 1 << 4 ) } 
s#ib_fmr_pool_param struct ib_fmr_pool_param { int max_pages_per_fmr ; int page_shift ; e#ib_access_flags access ; int pool_size ; int dirty_watermark ; void ( * flush_function ) ( s#ib_fmr_pool * , void * ) ; void * flush_arg ; unsigned cache : 1 ; } 
ib_create_fmr_pool s#ib_fmr_pool * ib_create_fmr_pool ( s#ib_pd * , s#ib_fmr_pool_param * ) 
ib_destroy_fmr_pool void ib_destroy_fmr_pool ( s#ib_fmr_pool * ) 
ib_flush_fmr_pool int ib_flush_fmr_pool ( s#ib_fmr_pool * ) 
s#ib_pool_fmr struct ib_pool_fmr { s#ib_fmr * fmr ; s#ib_fmr_pool * pool ; s#list_head list ; s#hlist_node cache_node ; int ref_count ; int remap_count ; t#u64 io_virtual_address ; int page_list_len ; t#u64 page_list [ 0 ] ; } 
ib_fmr_pool_map_phys s#ib_pool_fmr * ib_fmr_pool_map_phys ( s#ib_fmr_pool * , t#u64 * , int , t#u64 ) 
ib_fmr_pool_unmap int ib_fmr_pool_unmap ( s#ib_pool_fmr * ) 

/* drivers/infiniband/core/iwcm.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ib_pkey_cache
s##ib_gid_cache
iw_create_cm_id s#iw_cm_id * iw_create_cm_id ( s#ib_device * , t#iw_cm_handler , void * ) 
iw_cm_disconnect int iw_cm_disconnect ( s#iw_cm_id * , int ) 
iw_destroy_cm_id void iw_destroy_cm_id ( s#iw_cm_id * ) 
iw_cm_listen int iw_cm_listen ( s#iw_cm_id * , int ) 
iw_cm_reject int iw_cm_reject ( s#iw_cm_id * , const void * , t#u8 ) 
iw_cm_accept int iw_cm_accept ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_connect int iw_cm_connect ( s#iw_cm_id * , s#iw_cm_conn_param * ) 
iw_cm_init_qp_attr int iw_cm_init_qp_attr ( s#iw_cm_id * , s#ib_qp_attr * , int * ) 

/* drivers/infiniband/core/mad.o */
ib_response_mad int ib_response_mad ( s#ib_mad * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s#ib_mad_recv_buf struct ib_mad_recv_buf { s#list_head list ; s#ib_grh * grh ; s#ib_mad * mad ; } 
s#ib_mad_recv_wc struct ib_mad_recv_wc { s#ib_wc * wc ; s#ib_mad_recv_buf recv_buf ; s#list_head rmpp_list ; int mad_len ; } 
t#ib_mad_recv_handler typedef void ( * ib_mad_recv_handler ) ( s#ib_mad_agent * , s#ib_mad_recv_wc * ) 
s#ib_mad_send_buf struct ib_mad_send_buf { s#ib_mad_send_buf * next ; void * mad ; s#ib_mad_agent * mad_agent ; s#ib_ah * ah ; void * context [ 2 ] ; int hdr_len ; int data_len ; int seg_count ; int seg_size ; int timeout_ms ; int retries ; } 
s#ib_mad_send_wc struct ib_mad_send_wc { s#ib_mad_send_buf * send_buf ; e#ib_wc_status status ; t#u32 vendor_err ; } 
t#ib_mad_send_handler typedef void ( * ib_mad_send_handler ) ( s#ib_mad_agent * , s#ib_mad_send_wc * ) 
t#ib_mad_snoop_handler typedef void ( * ib_mad_snoop_handler ) ( s#ib_mad_agent * , s#ib_mad_send_buf * , s#ib_mad_send_wc * ) 
s#ib_mad_agent struct ib_mad_agent { s#ib_device * device ; s#ib_qp * qp ; s#ib_mr * mr ; t#ib_mad_recv_handler recv_handler ; t#ib_mad_send_handler send_handler ; t#ib_mad_snoop_handler snoop_handler ; void * context ; t#u32 hi_tid ; t#u8 port_num ; t#u8 rmpp_version ; } 
s#ib_mad_reg_req struct ib_mad_reg_req { t#u8 mgmt_class ; t#u8 mgmt_class_version ; t#u8 oui [ 3 ] ; unsigned long method_mask [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
ib_register_mad_agent s#ib_mad_agent * ib_register_mad_agent ( s#ib_device * , t#u8 , e#ib_qp_type , s#ib_mad_reg_req * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * ) 
ib_register_mad_snoop s#ib_mad_agent * ib_register_mad_snoop ( s#ib_device * , t#u8 , e#ib_qp_type , int , t#ib_mad_snoop_handler , t#ib_mad_recv_handler , void * ) 
ib_unregister_mad_agent int ib_unregister_mad_agent ( s#ib_mad_agent * ) 
ib_create_send_mad s#ib_mad_send_buf * ib_create_send_mad ( s#ib_mad_agent * , t#u32 , t#u16 , int , int , int , t#gfp_t ) 
ib_get_mad_data_offset int ib_get_mad_data_offset ( t#u8 ) 
ib_is_mad_class_rmpp int ib_is_mad_class_rmpp ( t#u8 ) 
ib_get_rmpp_segment void * ib_get_rmpp_segment ( s#ib_mad_send_buf * , int ) 
ib_free_send_mad void ib_free_send_mad ( s#ib_mad_send_buf * ) 
ib_post_send_mad int ib_post_send_mad ( s#ib_mad_send_buf * , s#ib_mad_send_buf * * ) 
ib_free_recv_mad void ib_free_recv_mad ( s#ib_mad_recv_wc * ) 
ib_redirect_mad_qp s#ib_mad_agent * ib_redirect_mad_qp ( s#ib_qp * , t#u8 , t#ib_mad_send_handler , t#ib_mad_recv_handler , void * ) 
ib_process_mad_wc int ib_process_mad_wc ( s#ib_mad_agent * , s#ib_wc * ) 
ib_modify_mad int ib_modify_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * , t#u32 ) 
ib_cancel_mad void ib_cancel_mad ( s#ib_mad_agent * , s#ib_mad_send_buf * ) 

/* drivers/infiniband/core/multicast.o */
s#ib_sa_mcmember_rec struct ib_sa_mcmember_rec { u#ib_gid mgid ; u#ib_gid port_gid ; t#__be32 qkey ; t#__be16 mlid ; t#u8 mtu_selector ; t#u8 mtu ; t#u8 traffic_class ; t#__be16 pkey ; t#u8 rate_selector ; t#u8 rate ; t#u8 packet_life_time_selector ; t#u8 packet_life_time ; t#u8 sl ; t#__be32 flow_label ; t#u8 hop_limit ; t#u8 scope ; t#u8 join_state ; int proxy_join ; } 
t#ib_sa_comp_mask typedef t#u64 ib_sa_comp_mask 
s#ib_sa_multicast struct ib_sa_multicast { s#ib_sa_mcmember_rec rec ; t#ib_sa_comp_mask comp_mask ; int ( * callback ) ( int , s#ib_sa_multicast * ) ; void * context ; } 
s#ib_sa_client struct ib_sa_client { t#atomic_t users ; s#completion comp ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
ib_sa_join_multicast s#ib_sa_multicast * ib_sa_join_multicast ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , t#ib_sa_comp_mask , t#gfp_t , int ( * ) ( int , s#ib_sa_multicast * ) , void * ) 
ib_sa_free_multicast void ib_sa_free_multicast ( s#ib_sa_multicast * ) 
ib_sa_get_mcmember_rec int ib_sa_get_mcmember_rec ( s#ib_device * , t#u8 , u#ib_gid * , s#ib_sa_mcmember_rec * ) 
ib_init_ah_from_mcmember int ib_init_ah_from_mcmember ( s#ib_device * , t#u8 , s#ib_sa_mcmember_rec * , s#ib_ah_attr * ) 

/* drivers/infiniband/core/netlink.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#ibnl_client_cbs struct ibnl_client_cbs { int ( * dump ) ( s#sk_buff * , s#netlink_callback * ) ; } 
ibnl_add_client int ibnl_add_client ( int , int , const s#ibnl_client_cbs [ ] ) 
ibnl_remove_client int ibnl_remove_client ( int ) 
ibnl_put_msg void * ibnl_put_msg ( s#sk_buff * , s#nlmsghdr * * , int , int , int , int ) 
ibnl_put_attr int ibnl_put_attr ( s#sk_buff * , s#nlmsghdr * , int , void * , int ) 

/* drivers/infiniband/core/packer.o */
s#ib_field struct ib_field { t#size_t struct_offset_bytes ; t#size_t struct_size_bytes ; int offset_words ; int offset_bits ; int size_bits ; char * field_name ; } 
ib_pack void ib_pack ( const s#ib_field * , int , void * , void * ) 
ib_unpack void ib_unpack ( const s#ib_field * , int , void * , void * ) 

/* drivers/infiniband/core/sa_query.o */
ib_sa_register_client void ib_sa_register_client ( s#ib_sa_client * ) 
ib_sa_unregister_client void ib_sa_unregister_client ( s#ib_sa_client * ) 
s##ib_sa_query
ib_sa_cancel_query void ib_sa_cancel_query ( int , s#ib_sa_query * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
ib_init_ah_from_path int ib_init_ah_from_path ( s#ib_device * , t#u8 , s#ib_sa_path_rec * , s#ib_ah_attr * ) 
ib_sa_unpack_path void ib_sa_unpack_path ( void * , s#ib_sa_path_rec * ) 
ib_sa_path_rec_get int ib_sa_path_rec_get ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_path_rec * , t#ib_sa_comp_mask , int , t#gfp_t , void ( * ) ( int , s#ib_sa_path_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_service_rec struct ib_sa_service_rec { t#u64 id ; u#ib_gid gid ; t#__be16 pkey ; t#u32 lease ; t#u8 key [ 16 ] ; t#u8 name [ 64 ] ; t#u8 data8 [ 16 ] ; t#u16 data16 [ 8 ] ; t#u32 data32 [ 4 ] ; t#u64 data64 [ 2 ] ; } 
ib_sa_service_rec_query int ib_sa_service_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , t#u8 , s#ib_sa_service_rec * , t#ib_sa_comp_mask , int , t#gfp_t , void ( * ) ( int , s#ib_sa_service_rec * , void * ) , void * , s#ib_sa_query * * ) 
s#ib_sa_guidinfo_rec struct ib_sa_guidinfo_rec { t#__be16 lid ; t#u8 block_num ; t#u8 res1 ; t#__be32 res2 ; t#u8 guid_info_list [ 64 ] ; } 
ib_sa_guid_info_rec_query int ib_sa_guid_info_rec_query ( s#ib_sa_client * , s#ib_device * , t#u8 , s#ib_sa_guidinfo_rec * , t#ib_sa_comp_mask , t#u8 , int , t#gfp_t , void ( * ) ( int , s#ib_sa_guidinfo_rec * , void * ) , void * , s#ib_sa_query * * ) 

/* drivers/infiniband/core/ud_header.o */
s#ib_unpacked_lrh struct ib_unpacked_lrh { t#u8 virtual_lane ; t#u8 link_version ; t#u8 service_level ; t#u8 link_next_header ; t#__be16 destination_lid ; t#__be16 packet_length ; t#__be16 source_lid ; } 
s#ib_unpacked_eth struct ib_unpacked_eth { t#u8 dmac_h [ 4 ] ; t#u8 dmac_l [ 2 ] ; t#u8 smac_h [ 2 ] ; t#u8 smac_l [ 4 ] ; t#__be16 type ; } 
s#ib_unpacked_vlan struct ib_unpacked_vlan { t#__be16 tag ; t#__be16 type ; } 
s#ib_unpacked_grh struct ib_unpacked_grh { t#u8 ip_version ; t#u8 traffic_class ; t#__be32 flow_label ; t#__be16 payload_length ; t#u8 next_header ; t#u8 hop_limit ; u#ib_gid source_gid ; u#ib_gid destination_gid ; } 
s#ib_unpacked_bth struct ib_unpacked_bth { t#u8 opcode ; t#u8 solicited_event ; t#u8 mig_req ; t#u8 pad_count ; t#u8 transport_header_version ; t#__be16 pkey ; t#__be32 destination_qpn ; t#u8 ack_req ; t#__be32 psn ; } 
s#ib_unpacked_deth struct ib_unpacked_deth { t#__be32 qkey ; t#__be32 source_qpn ; } 
s#ib_ud_header struct ib_ud_header { int lrh_present ; s#ib_unpacked_lrh lrh ; int eth_present ; s#ib_unpacked_eth eth ; int vlan_present ; s#ib_unpacked_vlan vlan ; int grh_present ; s#ib_unpacked_grh grh ; s#ib_unpacked_bth bth ; s#ib_unpacked_deth deth ; int immediate_present ; t#__be32 immediate_data ; } 
ib_ud_header_init void ib_ud_header_init ( int , int , int , int , int , int , s#ib_ud_header * ) 
ib_ud_header_pack int ib_ud_header_pack ( s#ib_ud_header * , void * ) 
ib_ud_header_unpack int ib_ud_header_unpack ( void * , s#ib_ud_header * ) 

/* drivers/infiniband/core/umem.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
s#ib_umem struct ib_umem { s#ib_ucontext * context ; t#size_t length ; int offset ; int page_size ; int writable ; int hugetlb ; s#list_head chunk_list ; s#work_struct work ; s#mm_struct * mm ; unsigned long diff ; } 
ib_umem_get s#ib_umem * ib_umem_get ( s#ib_ucontext * , unsigned long , t#size_t , int , int ) 
ib_umem_release void ib_umem_release ( s#ib_umem * ) 
ib_umem_page_count int ib_umem_page_count ( s#ib_umem * ) 

/* drivers/infiniband/core/uverbs_marshall.o */
s#ib_uverbs_global_route struct ib_uverbs_global_route { t#__u8 dgid [ 16 ] ; t#__u32 flow_label ; t#__u8 sgid_index ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 reserved ; } 
s#ib_uverbs_ah_attr struct ib_uverbs_ah_attr { s#ib_uverbs_global_route grh ; t#__u16 dlid ; t#__u8 sl ; t#__u8 src_path_bits ; t#__u8 static_rate ; t#__u8 is_global ; t#__u8 port_num ; t#__u8 reserved ; } 
ib_copy_ah_attr_to_user void ib_copy_ah_attr_to_user ( s#ib_uverbs_ah_attr * , s#ib_ah_attr * ) 
s#ib_uverbs_qp_attr struct ib_uverbs_qp_attr { t#__u32 qp_attr_mask ; t#__u32 qp_state ; t#__u32 cur_qp_state ; t#__u32 path_mtu ; t#__u32 path_mig_state ; t#__u32 qkey ; t#__u32 rq_psn ; t#__u32 sq_psn ; t#__u32 dest_qp_num ; t#__u32 qp_access_flags ; s#ib_uverbs_ah_attr ah_attr ; s#ib_uverbs_ah_attr alt_ah_attr ; t#__u32 max_send_wr ; t#__u32 max_recv_wr ; t#__u32 max_send_sge ; t#__u32 max_recv_sge ; t#__u32 max_inline_data ; t#__u16 pkey_index ; t#__u16 alt_pkey_index ; t#__u8 en_sqd_async_notify ; t#__u8 sq_draining ; t#__u8 max_rd_atomic ; t#__u8 max_dest_rd_atomic ; t#__u8 min_rnr_timer ; t#__u8 port_num ; t#__u8 timeout ; t#__u8 retry_cnt ; t#__u8 rnr_retry ; t#__u8 alt_port_num ; t#__u8 alt_timeout ; t#__u8 reserved [ 5 ] ; } 
ib_copy_qp_attr_to_user void ib_copy_qp_attr_to_user ( s#ib_uverbs_qp_attr * , s#ib_qp_attr * ) 
s#ib_user_path_rec struct ib_user_path_rec { t#__u8 dgid [ 16 ] ; t#__u8 sgid [ 16 ] ; t#__be16 dlid ; t#__be16 slid ; t#__u32 raw_traffic ; t#__be32 flow_label ; t#__u32 reversible ; t#__u32 mtu ; t#__be16 pkey ; t#__u8 hop_limit ; t#__u8 traffic_class ; t#__u8 numb_path ; t#__u8 sl ; t#__u8 mtu_selector ; t#__u8 rate_selector ; t#__u8 rate ; t#__u8 packet_life_time_selector ; t#__u8 packet_life_time ; t#__u8 preference ; } 
ib_copy_path_rec_to_user void ib_copy_path_rec_to_user ( s#ib_user_path_rec * , s#ib_sa_path_rec * ) 
ib_copy_path_rec_from_user void ib_copy_path_rec_from_user ( s#ib_sa_path_rec * , s#ib_user_path_rec * ) 

/* drivers/infiniband/core/verbs.o */
e#ib_rate enum ib_rate { IB_RATE_PORT_CURRENT = 0 , IB_RATE_2_5_GBPS = 2 , IB_RATE_5_GBPS = 5 , IB_RATE_10_GBPS = 3 , IB_RATE_20_GBPS = 6 , IB_RATE_30_GBPS = 4 , IB_RATE_40_GBPS = 7 , IB_RATE_60_GBPS = 8 , IB_RATE_80_GBPS = 9 , IB_RATE_120_GBPS = 10 , IB_RATE_14_GBPS = 11 , IB_RATE_56_GBPS = 12 , IB_RATE_112_GBPS = 13 , IB_RATE_168_GBPS = 14 , IB_RATE_25_GBPS = 15 , IB_RATE_100_GBPS = 16 , IB_RATE_200_GBPS = 17 , IB_RATE_300_GBPS = 18 } 
ib_rate_to_mult int ib_rate_to_mult ( e#ib_rate ) 
mult_to_ib_rate e#ib_rate mult_to_ib_rate ( int ) 
ib_rate_to_mbps int ib_rate_to_mbps ( e#ib_rate ) 
e#rdma_node_type enum rdma_node_type { RDMA_NODE_IB_CA = 1 , RDMA_NODE_IB_SWITCH , RDMA_NODE_IB_ROUTER , RDMA_NODE_RNIC } 
rdma_node_get_transport e#rdma_transport_type rdma_node_get_transport ( e#rdma_node_type ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##inode
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##ib_mad
rdma_port_get_link_layer e#rdma_link_layer rdma_port_get_link_layer ( s#ib_device * , t#u8 ) 
ib_alloc_pd s#ib_pd * ib_alloc_pd ( s#ib_device * ) 
ib_dealloc_pd int ib_dealloc_pd ( s#ib_pd * ) 
ib_create_ah s#ib_ah * ib_create_ah ( s#ib_pd * , s#ib_ah_attr * ) 
ib_init_ah_from_wc int ib_init_ah_from_wc ( s#ib_device * , t#u8 , s#ib_wc * , s#ib_grh * , s#ib_ah_attr * ) 
ib_create_ah_from_wc s#ib_ah * ib_create_ah_from_wc ( s#ib_pd * , s#ib_wc * , s#ib_grh * , t#u8 ) 
ib_modify_ah int ib_modify_ah ( s#ib_ah * , s#ib_ah_attr * ) 
ib_query_ah int ib_query_ah ( s#ib_ah * , s#ib_ah_attr * ) 
ib_destroy_ah int ib_destroy_ah ( s#ib_ah * ) 
ib_create_srq s#ib_srq * ib_create_srq ( s#ib_pd * , s#ib_srq_init_attr * ) 
ib_create_xrc_srq s#ib_srq * ib_create_xrc_srq ( s#ib_pd * , s#ib_cq * , s#ib_xrcd * , s#ib_srq_init_attr * ) 
ib_modify_srq int ib_modify_srq ( s#ib_srq * , s#ib_srq_attr * , e#ib_srq_attr_mask ) 
ib_query_srq int ib_query_srq ( s#ib_srq * , s#ib_srq_attr * ) 
ib_destroy_srq int ib_destroy_srq ( s#ib_srq * ) 
ib_create_qp s#ib_qp * ib_create_qp ( s#ib_pd * , s#ib_qp_init_attr * ) 
e#ib_qp_attr_mask enum ib_qp_attr_mask { IB_QP_STATE = 1 , IB_QP_CUR_STATE = ( 1 << 1 ) , IB_QP_EN_SQD_ASYNC_NOTIFY = ( 1 << 2 ) , IB_QP_ACCESS_FLAGS = ( 1 << 3 ) , IB_QP_PKEY_INDEX = ( 1 << 4 ) , IB_QP_PORT = ( 1 << 5 ) , IB_QP_QKEY = ( 1 << 6 ) , IB_QP_AV = ( 1 << 7 ) , IB_QP_PATH_MTU = ( 1 << 8 ) , IB_QP_TIMEOUT = ( 1 << 9 ) , IB_QP_RETRY_CNT = ( 1 << 10 ) , IB_QP_RNR_RETRY = ( 1 << 11 ) , IB_QP_RQ_PSN = ( 1 << 12 ) , IB_QP_MAX_QP_RD_ATOMIC = ( 1 << 13 ) , IB_QP_ALT_PATH = ( 1 << 14 ) , IB_QP_MIN_RNR_TIMER = ( 1 << 15 ) , IB_QP_SQ_PSN = ( 1 << 16 ) , IB_QP_MAX_DEST_RD_ATOMIC = ( 1 << 17 ) , IB_QP_PATH_MIG_STATE = ( 1 << 18 ) , IB_QP_CAP = ( 1 << 19 ) , IB_QP_DEST_QPN = ( 1 << 20 ) } 
ib_modify_qp_is_ok int ib_modify_qp_is_ok ( e#ib_qp_state , e#ib_qp_state , e#ib_qp_type , e#ib_qp_attr_mask ) 
ib_modify_qp int ib_modify_qp ( s#ib_qp * , s#ib_qp_attr * , int ) 
ib_query_qp int ib_query_qp ( s#ib_qp * , s#ib_qp_attr * , int , s#ib_qp_init_attr * ) 
ib_destroy_qp int ib_destroy_qp ( s#ib_qp * ) 
ib_create_cq s#ib_cq * ib_create_cq ( s#ib_device * , t#ib_comp_handler , void ( * ) ( s#ib_event * , void * ) , void * , int , int ) 
ib_modify_cq int ib_modify_cq ( s#ib_cq * , t#u16 , t#u16 ) 
ib_destroy_cq int ib_destroy_cq ( s#ib_cq * ) 
ib_resize_cq int ib_resize_cq ( s#ib_cq * , int ) 
ib_get_dma_mr s#ib_mr * ib_get_dma_mr ( s#ib_pd * , int ) 
ib_reg_phys_mr s#ib_mr * ib_reg_phys_mr ( s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) 
ib_rereg_phys_mr int ib_rereg_phys_mr ( s#ib_mr * , int , s#ib_pd * , s#ib_phys_buf * , int , int , t#u64 * ) 
ib_query_mr int ib_query_mr ( s#ib_mr * , s#ib_mr_attr * ) 
ib_dereg_mr int ib_dereg_mr ( s#ib_mr * ) 
ib_create_mr s#ib_mr * ib_create_mr ( s#ib_pd * , s#ib_mr_init_attr * ) 
ib_destroy_mr int ib_destroy_mr ( s#ib_mr * ) 
ib_alloc_fast_reg_mr s#ib_mr * ib_alloc_fast_reg_mr ( s#ib_pd * , int ) 
ib_alloc_fast_reg_page_list s#ib_fast_reg_page_list * ib_alloc_fast_reg_page_list ( s#ib_device * , int ) 
ib_free_fast_reg_page_list void ib_free_fast_reg_page_list ( s#ib_fast_reg_page_list * ) 
ib_alloc_mw s#ib_mw * ib_alloc_mw ( s#ib_pd * ) 
ib_dealloc_mw int ib_dealloc_mw ( s#ib_mw * ) 
ib_alloc_fmr s#ib_fmr * ib_alloc_fmr ( s#ib_pd * , int , s#ib_fmr_attr * ) 
ib_unmap_fmr int ib_unmap_fmr ( s#list_head * ) 
ib_dealloc_fmr int ib_dealloc_fmr ( s#ib_fmr * ) 
ib_attach_mcast int ib_attach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
ib_detach_mcast int ib_detach_mcast ( s#ib_qp * , u#ib_gid * , t#u16 ) 
ib_dealloc_xrcd int ib_dealloc_xrcd ( s#ib_xrcd * ) 
ib_alloc_xrcd s#ib_xrcd * ib_alloc_xrcd ( s#ib_device * ) 
ib_check_mr_status int ib_check_mr_status ( s#ib_mr * , t#u32 , s#ib_mr_status * ) 

/* drivers/input/ff-core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
input_ff_upload int input_ff_upload ( s#input_dev * , s#ff_effect * , s#file * ) 
input_ff_erase int input_ff_erase ( s#input_dev * , int , s#file * ) 
input_ff_event int input_ff_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_ff_create int input_ff_create ( s#input_dev * , int ) 
input_ff_destroy void input_ff_destroy ( s#input_dev * ) 

/* drivers/input/ff-memless.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
input_ff_create_memless int input_ff_create_memless ( s#input_dev * , void * , int ( * ) ( s#input_dev * , void * , s#ff_effect * ) ) 

/* drivers/input/gameport/gameport.o */
s##tvec_base
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##of_device_id
s##driver_private
s#gameport_driver struct gameport_driver { const char * description ; int ( * connect ) ( s#gameport * , s#gameport_driver * ) ; int ( * reconnect ) ( s#gameport * ) ; void ( * disconnect ) ( s#gameport * ) ; s#device_driver driver ; t#bool ignore ; } 
s#gameport struct gameport { void * port_data ; char name [ 32 ] ; char phys [ 32 ] ; int io ; int speed ; int fuzz ; void ( * trigger ) ( s#gameport * ) ; unsigned char ( * read ) ( s#gameport * ) ; int ( * cooked_read ) ( s#gameport * , int * , int * ) ; int ( * calibrate ) ( s#gameport * , int * , int * ) ; int ( * open ) ( s#gameport * , int ) ; void ( * close ) ( s#gameport * ) ; s#timer_list poll_timer ; unsigned int poll_interval ; t#spinlock_t timer_lock ; unsigned int poll_cnt ; void ( * poll_handler ) ( s#gameport * ) ; s#gameport * parent , * child ; s#gameport_driver * drv ; s#mutex drv_mutex ; s#device dev ; s#list_head node ; } 
gameport_start_polling void gameport_start_polling ( s#gameport * ) 
gameport_stop_polling void gameport_stop_polling ( s#gameport * ) 
gameport_set_phys void gameport_set_phys ( s#gameport * , const char * , ... ) 
__gameport_register_port void __gameport_register_port ( s#gameport * , s#module * ) 
gameport_unregister_port void gameport_unregister_port ( s#gameport * ) 
__gameport_register_driver int __gameport_register_driver ( s#gameport_driver * , s#module * , const char * ) 
gameport_unregister_driver void gameport_unregister_driver ( s#gameport_driver * ) 
gameport_open int gameport_open ( s#gameport * , s#gameport_driver * , int ) 
gameport_close void gameport_close ( s#gameport * ) 

/* drivers/input/input.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#input_mt_slot struct input_mt_slot { int abs [ 0x3b - 0x30 + 1 ] ; } 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
input_event void input_event ( s#input_dev * , unsigned int , unsigned int , int ) 
input_inject_event void input_inject_event ( s#input_handle * , unsigned int , unsigned int , int ) 
input_alloc_absinfo void input_alloc_absinfo ( s#input_dev * ) 
input_set_abs_params void input_set_abs_params ( s#input_dev * , unsigned int , int , int , int , int ) 
input_grab_device int input_grab_device ( s#input_handle * ) 
input_release_device void input_release_device ( s#input_handle * ) 
input_open_device int input_open_device ( s#input_handle * ) 
input_flush_device int input_flush_device ( s#input_handle * , s#file * ) 
input_close_device void input_close_device ( s#input_handle * ) 
input_scancode_to_scalar int input_scancode_to_scalar ( const s#input_keymap_entry * , unsigned int * ) 
input_get_keycode int input_get_keycode ( s#input_dev * , s#input_keymap_entry * ) 
input_set_keycode int input_set_keycode ( s#input_dev * , const s#input_keymap_entry * ) 
input_reset_device void input_reset_device ( s#input_dev * ) 
input_class extern s#class input_class 
input_allocate_device s#input_dev * input_allocate_device ( void ) 
input_free_device void input_free_device ( s#input_dev * ) 
input_set_capability void input_set_capability ( s#input_dev * , unsigned int , unsigned int ) 
input_register_device int input_register_device ( s#input_dev * ) 
input_unregister_device void input_unregister_device ( s#input_dev * ) 
input_register_handler int input_register_handler ( s#input_handler * ) 
input_unregister_handler void input_unregister_handler ( s#input_handler * ) 
input_handler_for_each_handle int input_handler_for_each_handle ( s#input_handler * , void * , int ( * ) ( s#input_handle * , void * ) ) 
input_register_handle int input_register_handle ( s#input_handle * ) 
input_unregister_handle void input_unregister_handle ( s#input_handle * ) 

/* drivers/input/input-compat.o */
s#input_event struct input_event { s#timeval time ; t#__u16 type ; t#__u16 code ; t#__s32 value ; } 
input_event_from_user int input_event_from_user ( const char * , s#input_event * ) 
input_event_to_user int input_event_to_user ( char * , const s#input_event * ) 
input_ff_effect_from_user int input_ff_effect_from_user ( const char * , t#size_t , s#ff_effect * ) 

/* drivers/input/input-mt.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
input_mt_init_slots int input_mt_init_slots ( s#input_dev * , unsigned int ) 
input_mt_destroy_slots void input_mt_destroy_slots ( s#input_dev * ) 
input_mt_report_slot_state void input_mt_report_slot_state ( s#input_dev * , unsigned int , t#bool ) 
input_mt_report_finger_count void input_mt_report_finger_count ( s#input_dev * , int ) 
input_mt_report_pointer_emulation void input_mt_report_pointer_emulation ( s#input_dev * , t#bool ) 

/* drivers/input/input-polldev.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#input_polled_dev struct input_polled_dev { void * private ; void ( * open ) ( s#input_polled_dev * ) ; void ( * close ) ( s#input_polled_dev * ) ; void ( * poll ) ( s#input_polled_dev * ) ; unsigned int poll_interval ; unsigned int poll_interval_max ; unsigned int poll_interval_min ; s#input_dev * input ; s#delayed_work work ; } 
input_allocate_polled_device s#input_polled_dev * input_allocate_polled_device ( void ) 
input_free_polled_device void input_free_polled_device ( s#input_polled_dev * ) 
input_register_polled_device int input_register_polled_device ( s#input_polled_dev * ) 
input_unregister_polled_device void input_unregister_polled_device ( s#input_polled_dev * ) 

/* drivers/input/misc/ad714x.o */
s##ad714x_chip
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
t#ad714x_read_t typedef int ( * ad714x_read_t ) ( s#device * , unsigned short , unsigned short * ) 
t#ad714x_write_t typedef int ( * ad714x_write_t ) ( s#device * , unsigned short , unsigned short ) 
ad714x_probe s#ad714x_chip * ad714x_probe ( s#device * , t#u16 , int , t#ad714x_read_t , t#ad714x_write_t ) 
ad714x_remove void ad714x_remove ( s#ad714x_chip * ) 
ad714x_disable int ad714x_disable ( s#ad714x_chip * ) 
ad714x_enable int ad714x_enable ( s#ad714x_chip * ) 

/* drivers/input/misc/adxl34x.o */
s##adxl34x
adxl34x_suspend void adxl34x_suspend ( s#adxl34x * ) 
adxl34x_resume void adxl34x_resume ( s#adxl34x * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#adxl34x_bus_ops struct adxl34x_bus_ops { t#u16 bustype ; int ( * read ) ( s#device * , unsigned char ) ; int ( * read_block ) ( s#device * , unsigned char , int , void * ) ; int ( * write ) ( s#device * , unsigned char , unsigned char ) ; } 
adxl34x_probe s#adxl34x * adxl34x_probe ( s#device * , int , t#bool , const s#adxl34x_bus_ops * ) 
adxl34x_remove int adxl34x_remove ( s#adxl34x * ) 

/* drivers/input/misc/cma3000_d0x.o */
s##cma3000_accl_data
cma3000_suspend void cma3000_suspend ( s#cma3000_accl_data * ) 
cma3000_resume void cma3000_resume ( s#cma3000_accl_data * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#cma3000_bus_ops struct cma3000_bus_ops { t#u16 bustype ; t#u8 ctrl_mod ; int ( * read ) ( s#device * , t#u8 , char * ) ; int ( * write ) ( s#device * , t#u8 , t#u8 , char * ) ; } 
cma3000_init s#cma3000_accl_data * cma3000_init ( s#device * , int , const s#cma3000_bus_ops * ) 
cma3000_exit void cma3000_exit ( s#cma3000_accl_data * ) 

/* drivers/input/serio/i8042.o */
i8042_lock_chip void i8042_lock_chip ( void ) 
i8042_unlock_chip void i8042_unlock_chip ( void ) 
s#serio_device_id struct serio_device_id { t#__u8 type ; t#__u8 extra ; t#__u8 id ; t#__u8 proto ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s#serio_driver struct serio_driver { const char * description ; const s#serio_device_id * id_table ; t#bool manual_bind ; void ( * write_wakeup ) ( s#serio * ) ; t#irqreturn_t ( * interrupt ) ( s#serio * , unsigned char , unsigned int ) ; int ( * connect ) ( s#serio * , s#serio_driver * ) ; int ( * reconnect ) ( s#serio * ) ; void ( * disconnect ) ( s#serio * ) ; void ( * cleanup ) ( s#serio * ) ; s#device_driver driver ; } 
s#serio struct serio { void * port_data ; char name [ 32 ] ; char phys [ 32 ] ; t#bool manual_bind ; s#serio_device_id id ; t#spinlock_t lock ; int ( * write ) ( s#serio * , unsigned char ) ; int ( * open ) ( s#serio * ) ; void ( * close ) ( s#serio * ) ; int ( * start ) ( s#serio * ) ; void ( * stop ) ( s#serio * ) ; s#serio * parent ; s#list_head child_node ; s#list_head children ; unsigned int depth ; s#serio_driver * drv ; s#mutex drv_mutex ; s#device dev ; s#list_head node ; } 
i8042_install_filter int i8042_install_filter ( t#bool ( * ) ( unsigned char , unsigned char , s#serio * ) ) 
i8042_remove_filter int i8042_remove_filter ( t#bool ( * ) ( unsigned char , unsigned char , s#serio * ) ) 
i8042_command int i8042_command ( unsigned char * , int ) 
i8042_check_port_owner t#bool i8042_check_port_owner ( const s#serio * ) 

/* drivers/input/serio/libps2.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
s##driver_private
s#ps2dev struct ps2dev { s#serio * serio ; s#mutex cmd_mutex ; t#wait_queue_head_t wait ; unsigned long flags ; unsigned char cmdbuf [ 6 ] ; unsigned char cmdcnt ; unsigned char nak ; } 
ps2_sendbyte int ps2_sendbyte ( s#ps2dev * , unsigned char , int ) 
ps2_begin_command void ps2_begin_command ( s#ps2dev * ) 
ps2_end_command void ps2_end_command ( s#ps2dev * ) 
ps2_drain void ps2_drain ( s#ps2dev * , int , int ) 
ps2_is_keyboard_id int ps2_is_keyboard_id ( char ) 
__ps2_command int __ps2_command ( s#ps2dev * , unsigned char * , int ) 
ps2_command int ps2_command ( s#ps2dev * , unsigned char * , int ) 
ps2_init void ps2_init ( s#ps2dev * , s#serio * ) 
ps2_handle_ack int ps2_handle_ack ( s#ps2dev * , unsigned char ) 
ps2_handle_response int ps2_handle_response ( s#ps2dev * , unsigned char ) 
ps2_cmd_aborted void ps2_cmd_aborted ( s#ps2dev * ) 

/* drivers/input/serio/serio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
serio_rescan void serio_rescan ( s#serio * ) 
serio_reconnect void serio_reconnect ( s#serio * ) 
__serio_register_port void __serio_register_port ( s#serio * , s#module * ) 
serio_unregister_port void serio_unregister_port ( s#serio * ) 
serio_unregister_child_port void serio_unregister_child_port ( s#serio * ) 
__serio_register_driver int __serio_register_driver ( s#serio_driver * , s#module * , const char * ) 
serio_unregister_driver void serio_unregister_driver ( s#serio_driver * ) 
serio_open int serio_open ( s#serio * , s#serio_driver * ) 
serio_close void serio_close ( s#serio * ) 
serio_interrupt t#irqreturn_t serio_interrupt ( s#serio * , unsigned char , unsigned int ) 

/* drivers/input/touchscreen/ad7879.o */
s##ad7879
ad7879_suspend void ad7879_suspend ( s#ad7879 * ) 
ad7879_resume void ad7879_resume ( s#ad7879 * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s#ad7879_bus_ops struct ad7879_bus_ops { t#u16 bustype ; int ( * read ) ( s#device * , t#u8 ) ; int ( * multi_read ) ( s#device * , t#u8 , t#u8 , t#u16 * ) ; int ( * write ) ( s#device * , t#u8 , t#u16 ) ; } 
ad7879_probe s#ad7879 * ad7879_probe ( s#device * , t#u8 , unsigned , const s#ad7879_bus_ops * ) 
ad7879_remove void ad7879_remove ( s#ad7879 * ) 

/* drivers/input/touchscreen/wm9705.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#snd_ac97_build_ops struct snd_ac97_build_ops { int ( * build_3d ) ( s#snd_ac97 * ) ; int ( * build_specific ) ( s#snd_ac97 * ) ; int ( * build_spdif ) ( s#snd_ac97 * ) ; int ( * build_post_spdif ) ( s#snd_ac97 * ) ; void ( * suspend ) ( s#snd_ac97 * ) ; void ( * resume ) ( s#snd_ac97 * ) ; void ( * update_jacks ) ( s#snd_ac97 * ) ; } 
s#snd_ac97_bus_ops struct snd_ac97_bus_ops { void ( * reset ) ( s#snd_ac97 * ) ; void ( * warm_reset ) ( s#snd_ac97 * ) ; void ( * write ) ( s#snd_ac97 * , unsigned short , unsigned short ) ; unsigned short ( * read ) ( s#snd_ac97 * , unsigned short ) ; void ( * wait ) ( s#snd_ac97 * ) ; void ( * init ) ( s#snd_ac97 * ) ; } 
s#snd_info_buffer struct snd_info_buffer { char * buffer ; unsigned int curr ; unsigned int size ; unsigned int len ; int stop ; int error ; } 
s#snd_info_entry_text struct snd_info_entry_text { void ( * read ) ( s#snd_info_entry * , s#snd_info_buffer * ) ; void ( * write ) ( s#snd_info_entry * , s#snd_info_buffer * ) ; } 
t#poll_table typedef s#poll_table_struct poll_table 
s#snd_info_entry_ops struct snd_info_entry_ops { int ( * open ) ( s#snd_info_entry * , unsigned short , void * * ) ; int ( * release ) ( s#snd_info_entry * , unsigned short , void * ) ; t#ssize_t ( * read ) ( s#snd_info_entry * , void * , s#file * , char * , t#size_t , t#loff_t ) ; t#ssize_t ( * write ) ( s#snd_info_entry * , void * , s#file * , const char * , t#size_t , t#loff_t ) ; t#loff_t ( * llseek ) ( s#snd_info_entry * , void * , s#file * , t#loff_t , int ) ; unsigned int ( * poll ) ( s#snd_info_entry * , void * , s#file * , t#poll_table * ) ; int ( * ioctl ) ( s#snd_info_entry * , void * , s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#snd_info_entry * , void * , s#inode * , s#file * , s#vm_area_struct * ) ; } 
s##proc_dir_entry
s#snd_info_entry struct snd_info_entry { const char * name ; t#mode_t mode ; long size ; unsigned short content ; union { s#snd_info_entry_text text ; s#snd_info_entry_ops * ops ; } c ; s#snd_info_entry * parent ; s#snd_card * card ; s#module * module ; void * private_data ; void ( * private_free ) ( s#snd_info_entry * ) ; s#proc_dir_entry * p ; s#mutex access ; s#list_head children ; s#list_head list ; } 
s##snd_shutdown_f_ops
s##snd_mixer_oss
s#snd_card struct snd_card { int number ; char id [ 16 ] ; char driver [ 16 ] ; char shortname [ 32 ] ; char longname [ 80 ] ; char mixername [ 80 ] ; char components [ 128 ] ; s#module * module ; void * private_data ; void ( * private_free ) ( s#snd_card * ) ; s#list_head devices ; unsigned int last_numid ; s#rw_semaphore controls_rwsem ; t#rwlock_t ctl_files_rwlock ; int controls_count ; int user_ctl_count ; s#list_head controls ; s#list_head ctl_files ; s#mutex user_ctl_lock ; s#snd_info_entry * proc_root ; s#snd_info_entry * proc_id ; s#proc_dir_entry * proc_root_link ; s#list_head files_list ; s#snd_shutdown_f_ops * s_f_ops ; t#spinlock_t files_lock ; int shutdown ; int free_on_last_close ; t#wait_queue_head_t shutdown_sleep ; t#atomic_t refcount ; s#device * dev ; s#device * card_dev ; unsigned int power_state ; s#mutex power_lock ; t#wait_queue_head_t power_sleep ; s#snd_mixer_oss * mixer_oss ; int mixer_oss_change_count ; } 
s#ac97_pcm struct ac97_pcm { s#snd_ac97_bus * bus ; unsigned int stream : 1 , exclusive : 1 , copy_flag : 1 , spdif : 1 ; unsigned short aslots ; unsigned short cur_dbl ; unsigned int rates ; struct { unsigned short slots ; unsigned short rslots [ 4 ] ; unsigned char rate_table [ 4 ] ; s#snd_ac97 * codec [ 4 ] ; } r [ 2 ] ; unsigned long private_value ; } 
s#snd_ac97_bus struct snd_ac97_bus { s#snd_ac97_bus_ops * ops ; void * private_data ; void ( * private_free ) ( s#snd_ac97_bus * ) ; s#snd_card * card ; unsigned short num ; unsigned short no_vra : 1 , dra : 1 , isdin : 1 ; unsigned int clock ; t#spinlock_t bus_lock ; unsigned short used_slots [ 2 ] [ 4 ] ; unsigned short pcms_count ; s#ac97_pcm * pcms ; s#snd_ac97 * codec [ 4 ] ; s#snd_info_entry * proc ; } 
s##pci_dev
s#snd_ac97_res_table struct snd_ac97_res_table { unsigned short reg ; unsigned short bits ; } 
s#snd_ac97 struct snd_ac97 { const s#snd_ac97_build_ops * build_ops ; void * private_data ; void ( * private_free ) ( s#snd_ac97 * ) ; s#snd_ac97_bus * bus ; s#pci_dev * pci ; s#snd_info_entry * proc ; s#snd_info_entry * proc_regs ; unsigned short subsystem_vendor ; unsigned short subsystem_device ; s#mutex reg_mutex ; s#mutex page_mutex ; unsigned short num ; unsigned short addr ; unsigned int id ; unsigned short caps ; unsigned short ext_id ; unsigned short ext_mid ; const s#snd_ac97_res_table * res_table ; unsigned int scaps ; unsigned int flags ; unsigned int rates [ 6 ] ; unsigned int spdif_status ; unsigned short regs [ 0x80 ] ; unsigned long reg_accessed [ ( ( ( 0x80 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; union { struct { unsigned short unchained [ 3 ] ; unsigned short chained [ 3 ] ; unsigned short id [ 3 ] ; unsigned short pcmreg [ 3 ] ; unsigned short codec_cfg [ 3 ] ; unsigned char swap_mic_linein ; unsigned char lo_as_master ; } ad18xx ; unsigned int dev_flags ; } spec ; unsigned char indep_surround ; unsigned char channel_mode ; unsigned int power_up ; s#delayed_work power_work ; s#device dev ; } 
s##mfd_cell
s#wm97xx_mach_ops struct wm97xx_mach_ops { int acc_enabled ; void ( * acc_pen_up ) ( s#wm97xx * ) ; int ( * acc_pen_down ) ( s#wm97xx * ) ; int ( * acc_startup ) ( s#wm97xx * ) ; void ( * acc_shutdown ) ( s#wm97xx * ) ; void ( * irq_enable ) ( s#wm97xx * , int ) ; int irq_gpio ; void ( * pre_sample ) ( int ) ; void ( * post_sample ) ( int ) ; } 
s##workqueue_struct
s#wm97xx struct wm97xx { t#u16 dig [ 3 ] , id , gpio [ 6 ] , misc ; t#u16 dig_save [ 3 ] ; s#wm97xx_codec_drv * codec ; s#input_dev * input_dev ; s#snd_ac97 * ac97 ; s#device * dev ; s#platform_device * battery_dev ; s#platform_device * touch_dev ; s#wm97xx_mach_ops * mach_ops ; s#mutex codec_mutex ; s#delayed_work ts_reader ; unsigned long ts_reader_interval ; unsigned long ts_reader_min_interval ; unsigned int pen_irq ; s#workqueue_struct * ts_workq ; s#work_struct pen_event_work ; t#u16 acc_slot ; t#u16 acc_rate ; unsigned pen_is_down : 1 ; unsigned aux_waiting : 1 ; unsigned pen_probably_down : 1 ; t#u16 variant ; t#u16 suspend_mode ; } 
s#wm97xx_data struct wm97xx_data { int x ; int y ; int p ; } 
s#wm97xx_codec_drv struct wm97xx_codec_drv { t#u16 id ; char * name ; int ( * poll_sample ) ( s#wm97xx * , int , int * ) ; int ( * poll_touch ) ( s#wm97xx * , s#wm97xx_data * ) ; int ( * acc_enable ) ( s#wm97xx * , int ) ; void ( * phy_init ) ( s#wm97xx * ) ; void ( * dig_enable ) ( s#wm97xx * , int ) ; void ( * dig_restore ) ( s#wm97xx * ) ; void ( * aux_prepare ) ( s#wm97xx * ) ; } 
wm9705_codec extern s#wm97xx_codec_drv wm9705_codec 

/* drivers/input/touchscreen/wm9712.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##snd_shutdown_f_ops
s##snd_mixer_oss
s##pci_dev
s##mfd_cell
s##workqueue_struct
wm9712_codec extern s#wm97xx_codec_drv wm9712_codec 

/* drivers/input/touchscreen/wm9713.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##snd_shutdown_f_ops
s##snd_mixer_oss
s##pci_dev
s##mfd_cell
s##workqueue_struct
wm9713_codec extern s#wm97xx_codec_drv wm9713_codec 

/* drivers/input/touchscreen/wm97xx-core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##input_mt_slot
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_shutdown_f_ops
s##snd_mixer_oss
s##pci_dev
s##mfd_cell
s##workqueue_struct
wm97xx_reg_read int wm97xx_reg_read ( s#wm97xx * , t#u16 ) 
wm97xx_reg_write void wm97xx_reg_write ( s#wm97xx * , t#u16 , t#u16 ) 
wm97xx_read_aux_adc int wm97xx_read_aux_adc ( s#wm97xx * , t#u16 ) 
e#wm97xx_gpio_status enum wm97xx_gpio_status { WM97XX_GPIO_HIGH , WM97XX_GPIO_LOW } 
wm97xx_get_gpio e#wm97xx_gpio_status wm97xx_get_gpio ( s#wm97xx * , t#u32 ) 
wm97xx_set_gpio void wm97xx_set_gpio ( s#wm97xx * , t#u32 , e#wm97xx_gpio_status ) 
e#wm97xx_gpio_dir enum wm97xx_gpio_dir { WM97XX_GPIO_IN , WM97XX_GPIO_OUT } 
e#wm97xx_gpio_pol enum wm97xx_gpio_pol { WM97XX_GPIO_POL_HIGH , WM97XX_GPIO_POL_LOW } 
e#wm97xx_gpio_sticky enum wm97xx_gpio_sticky { WM97XX_GPIO_STICKY , WM97XX_GPIO_NOTSTICKY } 
e#wm97xx_gpio_wake enum wm97xx_gpio_wake { WM97XX_GPIO_WAKE , WM97XX_GPIO_NOWAKE } 
wm97xx_config_gpio void wm97xx_config_gpio ( s#wm97xx * , t#u32 , e#wm97xx_gpio_dir , e#wm97xx_gpio_pol , e#wm97xx_gpio_sticky , e#wm97xx_gpio_wake ) 
wm97xx_set_suspend_mode void wm97xx_set_suspend_mode ( s#wm97xx * , t#u16 ) 
wm97xx_register_mach_ops int wm97xx_register_mach_ops ( s#wm97xx * , s#wm97xx_mach_ops * ) 
wm97xx_unregister_mach_ops void wm97xx_unregister_mach_ops ( s#wm97xx * ) 

/* drivers/isdn/capi/capilib.o */
capilib_new_ncci void capilib_new_ncci ( s#list_head * , t#u16 , t#u32 , t#u32 ) 
capilib_free_ncci void capilib_free_ncci ( s#list_head * , t#u16 , t#u32 ) 
capilib_release_appl void capilib_release_appl ( s#list_head * , t#u16 ) 
capilib_release void capilib_release ( s#list_head * ) 
capilib_data_b3_req t#u16 capilib_data_b3_req ( s#list_head * , t#u16 , t#u32 , t#u16 ) 
capilib_data_b3_conf void capilib_data_b3_conf ( s#list_head * , t#u16 , t#u32 , t#u16 ) 

/* drivers/isdn/capi/capiutil.o */
t#u_char typedef unsigned char u_char 
t#_cdebbuf typedef struct { t#u_char * buf ; t#u_char * p ; t#size_t size ; t#size_t pos ; } _cdebbuf 
cdebbuf_free void cdebbuf_free ( t#_cdebbuf * ) 
t#_cmstruct typedef enum { CAPI_COMPOSE , CAPI_DEFAULT } _cmstruct 
t#_cstruct typedef t#__u8 * _cstruct 
t#_cmsg typedef struct { t#__u16 ApplId ; t#__u8 Command ; t#__u8 Subcommand ; t#__u16 Messagenumber ; union { t#__u32 adrController ; t#__u32 adrPLCI ; t#__u32 adrNCCI ; } adr ; t#_cmstruct AdditionalInfo ; t#_cstruct B1configuration ; t#__u16 B1protocol ; t#_cstruct B2configuration ; t#__u16 B2protocol ; t#_cstruct B3configuration ; t#__u16 B3protocol ; t#_cstruct BC ; t#_cstruct BChannelinformation ; t#_cmstruct BProtocol ; t#_cstruct CalledPartyNumber ; t#_cstruct CalledPartySubaddress ; t#_cstruct CallingPartyNumber ; t#_cstruct CallingPartySubaddress ; t#__u32 CIPmask ; t#__u32 CIPmask2 ; t#__u16 CIPValue ; t#__u32 Class ; t#_cstruct ConnectedNumber ; t#_cstruct ConnectedSubaddress ; t#__u32 Data ; t#__u16 DataHandle ; t#__u16 DataLength ; t#_cstruct FacilityConfirmationParameter ; t#_cstruct Facilitydataarray ; t#_cstruct FacilityIndicationParameter ; t#_cstruct FacilityRequestParameter ; t#__u16 FacilitySelector ; t#__u16 Flags ; t#__u32 Function ; t#_cstruct HLC ; t#__u16 Info ; t#_cstruct InfoElement ; t#__u32 InfoMask ; t#__u16 InfoNumber ; t#_cstruct Keypadfacility ; t#_cstruct LLC ; t#_cstruct ManuData ; t#__u32 ManuID ; t#_cstruct NCPI ; t#__u16 Reason ; t#__u16 Reason_B3 ; t#__u16 Reject ; t#_cstruct Useruserdata ; unsigned l , p ; unsigned char * par ; t#__u8 * m ; t#__u8 buf [ 180 ] ; } _cmsg 
capi_cmsg2message unsigned capi_cmsg2message ( t#_cmsg * , t#__u8 * ) 
capi_message2cmsg unsigned capi_message2cmsg ( t#_cmsg * , t#__u8 * ) 
capi_cmsg_header unsigned capi_cmsg_header ( t#_cmsg * , t#__u16 , t#__u8 , t#__u8 , t#__u16 , t#__u32 ) 
capi_cmd2str char * capi_cmd2str ( t#__u8 , t#__u8 ) 
capi_cmsg2str t#_cdebbuf * capi_cmsg2str ( t#_cmsg * ) 
capi_message2str t#_cdebbuf * capi_message2str ( t#__u8 * ) 
capi_info2str char * capi_info2str ( t#__u16 ) 

/* drivers/isdn/capi/kcapi.o */
register_capictr_notifier int register_capictr_notifier ( s#notifier_block * ) 
unregister_capictr_notifier int unregister_capictr_notifier ( s#notifier_block * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#capiloaddatapart struct capiloaddatapart { int user ; int len ; unsigned char * data ; } 
t#capiloaddatapart typedef s#capiloaddatapart capiloaddatapart 
s#capiloaddata struct capiloaddata { t#capiloaddatapart firmware ; t#capiloaddatapart configuration ; } 
t#capiloaddata typedef s#capiloaddata capiloaddata 
s#capi_register_params struct capi_register_params { t#__u32 level3cnt ; t#__u32 datablkcnt ; t#__u32 datablklen ; } 
t#capi_register_params typedef s#capi_register_params capi_register_params 
s##net_device
s##sec_path
s#capi_version struct capi_version { t#__u32 majorversion ; t#__u32 minorversion ; t#__u32 majormanuversion ; t#__u32 minormanuversion ; } 
t#capi_version typedef s#capi_version capi_version 
s#capi_profile struct capi_profile { t#__u16 ncontroller ; t#__u16 nbchannel ; t#__u32 goptions ; t#__u32 support1 ; t#__u32 support2 ; t#__u32 support3 ; t#__u32 reserved [ 6 ] ; t#__u32 manu [ 5 ] ; } 
t#capi_profile typedef s#capi_profile capi_profile 
s#capi_ctr struct capi_ctr { s#module * owner ; void * driverdata ; char name [ 32 ] ; char * driver_name ; int ( * load_firmware ) ( s#capi_ctr * , t#capiloaddata * ) ; void ( * reset_ctr ) ( s#capi_ctr * ) ; void ( * register_appl ) ( s#capi_ctr * , t#u16 , t#capi_register_params * ) ; void ( * release_appl ) ( s#capi_ctr * , t#u16 ) ; t#u16 ( * send_message ) ( s#capi_ctr * , s#sk_buff * ) ; char * ( * procinfo ) ( s#capi_ctr * ) ; const s#file_operations * proc_fops ; t#u8 manu [ 64 ] ; t#capi_version version ; t#capi_profile profile ; t#u8 serial [ 8 ] ; unsigned long nrecvctlpkt ; unsigned long nrecvdatapkt ; unsigned long nsentctlpkt ; unsigned long nsentdatapkt ; int cnr ; unsigned short state ; int blocked ; int traceflag ; t#wait_queue_head_t state_wait_queue ; s#proc_dir_entry * procent ; char procfn [ 128 ] ; } 
capi_ctr_handle_message void capi_ctr_handle_message ( s#capi_ctr * , t#u16 , s#sk_buff * ) 
capi_ctr_ready void capi_ctr_ready ( s#capi_ctr * ) 
capi_ctr_down void capi_ctr_down ( s#capi_ctr * ) 
capi_ctr_suspend_output void capi_ctr_suspend_output ( s#capi_ctr * ) 
capi_ctr_resume_output void capi_ctr_resume_output ( s#capi_ctr * ) 
attach_capi_ctr int attach_capi_ctr ( s#capi_ctr * ) 
detach_capi_ctr int detach_capi_ctr ( s#capi_ctr * ) 
s#capicardparams struct capicardparams { unsigned int port ; unsigned irq ; int cardtype ; int cardnr ; unsigned int membase ; } 
t#capicardparams typedef s#capicardparams capicardparams 
s#capi_driver struct capi_driver { char name [ 32 ] ; char revision [ 32 ] ; int ( * add_card ) ( s#capi_driver * , t#capicardparams * ) ; s#list_head list ; } 
register_capi_driver void register_capi_driver ( s#capi_driver * ) 
unregister_capi_driver void unregister_capi_driver ( s#capi_driver * ) 
capi20_isinstalled t#u16 capi20_isinstalled ( void ) 
s#capi20_appl struct capi20_appl { t#u16 applid ; t#capi_register_params rparam ; void ( * recv_message ) ( s#capi20_appl * , s#sk_buff * ) ; void * private ; unsigned long nrecvctlpkt ; unsigned long nrecvdatapkt ; unsigned long nsentctlpkt ; unsigned long nsentdatapkt ; s#mutex recv_mtx ; s#sk_buff_head recv_queue ; s#work_struct recv_work ; int release_in_progress ; } 
capi20_register t#u16 capi20_register ( s#capi20_appl * ) 
capi20_release t#u16 capi20_release ( s#capi20_appl * ) 
capi20_put_message t#u16 capi20_put_message ( s#capi20_appl * , s#sk_buff * ) 
capi20_get_manufacturer t#u16 capi20_get_manufacturer ( t#u32 , t#u8 [ 64 ] ) 
capi20_get_version t#u16 capi20_get_version ( t#u32 , s#capi_version * ) 
capi20_get_serial t#u16 capi20_get_serial ( t#u32 , t#u8 [ 8 ] ) 
capi20_get_profile t#u16 capi20_get_profile ( t#u32 , s#capi_profile * ) 
capi20_manufacturer int capi20_manufacturer ( unsigned int , void * ) 

/* drivers/isdn/gigaset/asyncdata.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#cmdbuf_t struct cmdbuf_t { s#cmdbuf_t * next , * prev ; int len , offset ; s#tasklet_struct * wake_tasklet ; unsigned char buf [ 0 ] ; } 
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s#reply_t struct reply_t { int resp_code ; int min_ConState ; int max_ConState ; int parameter ; int new_ConState ; int timeout ; int action [ 3 ] ; char * command ; } 
s#at_state_t struct at_state_t { s#list_head list ; int waiting ; int getstring ; unsigned timer_index ; unsigned long timer_expires ; int timer_active ; unsigned int ConState ; s#reply_t * replystruct ; int cid ; int int_var [ 3 ] ; char * str_var [ 5 ] ; unsigned pending_commands ; unsigned seq_index ; s#cardstate * cs ; s#bc_state * bcs ; } 
s##ser_bc_state
s##usb_bc_state
s##urb
s#isow_urbctx_t struct isow_urbctx_t { s#urb * urb ; s#bc_state * bcs ; int limit ; int status ; } 
s#isowbuf_t struct isowbuf_t { int read ; int nextread ; int write ; t#atomic_t writesem ; int wbits ; unsigned char data [ 4096 + 16 ] ; unsigned char idle ; } 
s#bas_bc_state struct bas_bc_state { int running ; t#atomic_t corrbytes ; t#spinlock_t isooutlock ; s#isow_urbctx_t isoouturbs [ 3 ] ; s#isow_urbctx_t * isooutdone , * isooutfree , * isooutovfl ; s#isowbuf_t * isooutbuf ; unsigned numsub ; s#tasklet_struct sent_tasklet ; t#spinlock_t isoinlock ; s#urb * isoinurbs [ 3 ] ; unsigned char isoinbuf [ ( 16 * 8 ) * 3 ] ; s#urb * isoindone ; int isoinstatus ; int loststatus ; unsigned isoinlost ; unsigned seqlen ; unsigned inbyte , inbits ; unsigned goodbytes ; unsigned alignerrs ; unsigned fcserrs ; unsigned frameerrs ; unsigned giants ; unsigned runts ; unsigned aborts ; unsigned shared0s ; unsigned stolen0s ; s#tasklet_struct rcvd_tasklet ; } 
s#bc_state struct bc_state { s#sk_buff * tx_skb ; s#sk_buff_head squeue ; int corrupted ; int trans_down ; int trans_up ; s#at_state_t at_state ; unsigned rx_bufsize ; s#sk_buff * rx_skb ; t#__u16 rx_fcs ; int inputstate ; int channel ; s#cardstate * cs ; unsigned chstate ; int ignore ; unsigned proto2 ; char * commands [ 7 ] ; int busy ; int use_count ; union { s#ser_bc_state * ser ; s#usb_bc_state * usb ; s#bas_bc_state * bas ; } hw ; void * ap ; int apconnstate ; t#spinlock_t aplock ; } 
s#gigaset_ops struct gigaset_ops { int ( * write_cmd ) ( s#cardstate * , s#cmdbuf_t * ) ; int ( * write_room ) ( s#cardstate * ) ; int ( * chars_in_buffer ) ( s#cardstate * ) ; int ( * brkchars ) ( s#cardstate * , const unsigned char [ 6 ] ) ; int ( * init_bchannel ) ( s#bc_state * ) ; int ( * close_bchannel ) ( s#bc_state * ) ; int ( * initbcshw ) ( s#bc_state * ) ; int ( * freebcshw ) ( s#bc_state * ) ; void ( * reinitbcshw ) ( s#bc_state * ) ; int ( * initcshw ) ( s#cardstate * ) ; void ( * freecshw ) ( s#cardstate * ) ; int ( * set_modem_ctrl ) ( s#cardstate * , unsigned , unsigned ) ; int ( * baud_rate ) ( s#cardstate * , unsigned ) ; int ( * set_line_ctrl ) ( s#cardstate * , unsigned ) ; int ( * send_skb ) ( s#bc_state * , s#sk_buff * ) ; void ( * handle_input ) ( s#inbuf_t * ) ; } 
s#gigaset_driver struct gigaset_driver { s#list_head list ; t#spinlock_t lock ; s#tty_driver * tty ; unsigned have_tty ; unsigned minor ; unsigned minors ; s#cardstate * cs ; int blocked ; const s#gigaset_ops * ops ; s#module * owner ; } 
s#event_t struct event_t { int type ; void * ptr , * arg ; int parameter ; int cid ; s#at_state_t * at_state ; } 
s##usb_cardstate
s##ser_cardstate
s##bas_cardstate
s#cardstate struct cardstate { s#gigaset_driver * driver ; unsigned minor_index ; s#device * dev ; s#device * tty_dev ; unsigned flags ; const s#gigaset_ops * ops ; t#wait_queue_head_t waitqueue ; int waiting ; int mode ; int mstate ; int cmd_result ; int channels ; s#bc_state * bcs ; int onechannel ; t#spinlock_t lock ; s#at_state_t at_state ; s#list_head temp_at_states ; s#inbuf_t * inbuf ; s#cmdbuf_t * cmdbuf , * lastcmdbuf ; t#spinlock_t cmdlock ; unsigned curlen , cmdbytes ; unsigned open_count ; s#tty_struct * tty ; s#tasklet_struct if_wake_tasklet ; unsigned control_state ; unsigned fwver [ 4 ] ; int gotfwver ; unsigned running ; unsigned connected ; unsigned isdn_up ; unsigned cidmode ; int myid ; void * iif ; unsigned short hw_hdr_len ; s#reply_t * tabnocid ; s#reply_t * tabcid ; int cs_init ; int ignoreframes ; s#mutex mutex ; s#timer_list timer ; int retry_count ; int dle ; int cur_at_seq ; int curchannel ; int commands_pending ; s#tasklet_struct event_tasklet ; s#tasklet_struct write_tasklet ; s#event_t events [ 64 ] ; unsigned ev_tail , ev_head ; t#spinlock_t ev_lock ; unsigned char respdata [ 511 + 1 ] ; unsigned cbytes ; union { s#usb_cardstate * usb ; s#ser_cardstate * ser ; s#bas_cardstate * bas ; } hw ; } 
s#inbuf_t struct inbuf_t { s#cardstate * cs ; int inputstate ; int head , tail ; unsigned char data [ 8192 ] ; } 
gigaset_m10x_input void gigaset_m10x_input ( s#inbuf_t * ) 
gigaset_m10x_send_skb int gigaset_m10x_send_skb ( s#bc_state * , s#sk_buff * ) 

/* drivers/isdn/gigaset/capi.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##usb_cardstate
s##ser_cardstate
s##bas_cardstate
s##ser_bc_state
s##usb_bc_state
s##urb
gigaset_skb_sent void gigaset_skb_sent ( s#bc_state * , s#sk_buff * ) 
gigaset_skb_rcvd void gigaset_skb_rcvd ( s#bc_state * , s#sk_buff * ) 
gigaset_isdn_rcv_err void gigaset_isdn_rcv_err ( s#bc_state * ) 

/* drivers/isdn/gigaset/common.o */
gigaset_debuglevel extern int gigaset_debuglevel 
e#debuglevel enum debuglevel { DEBUG_INTR = 0x00008 , DEBUG_CMD = 0x00020 , DEBUG_STREAM = 0x00040 , DEBUG_STREAM_DUMP = 0x00080 , DEBUG_LLDATA = 0x00100 , DEBUG_EVENT = 0x00200 , DEBUG_HDLC = 0x00800 , DEBUG_CHANNEL = 0x01000 , DEBUG_TRANSCMD = 0x02000 , DEBUG_MCMD = 0x04000 , DEBUG_INIT = 0x08000 , DEBUG_SUSPEND = 0x10000 , DEBUG_OUTPUT = 0x20000 , DEBUG_ISO = 0x40000 , DEBUG_IF = 0x80000 , DEBUG_USBREQ = 0x100000 , DEBUG_LOCKCMD = 0x200000 , DEBUG_ANY = 0x3fffff , } 
gigaset_dbg_buffer void gigaset_dbg_buffer ( e#debuglevel , const unsigned char * , t#size_t , const unsigned char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##ser_bc_state
s##usb_bc_state
s##urb
s##usb_cardstate
s##ser_cardstate
s##bas_cardstate
gigaset_add_event s#event_t * gigaset_add_event ( s#cardstate * , s#at_state_t * , int , void * , int , void * ) 
gigaset_freecs void gigaset_freecs ( s#cardstate * ) 
gigaset_fill_inbuf int gigaset_fill_inbuf ( s#inbuf_t * , const unsigned char * , unsigned ) 
gigaset_initcs s#cardstate * gigaset_initcs ( s#gigaset_driver * , int , int , int , int , const char * ) 
gigaset_start int gigaset_start ( s#cardstate * ) 
gigaset_shutdown int gigaset_shutdown ( s#cardstate * ) 
gigaset_stop void gigaset_stop ( s#cardstate * ) 
gigaset_freedriver void gigaset_freedriver ( s#gigaset_driver * ) 
gigaset_initdriver s#gigaset_driver * gigaset_initdriver ( unsigned , unsigned , const char * , const char * , const s#gigaset_ops * , s#module * ) 
gigaset_blockdriver void gigaset_blockdriver ( s#gigaset_driver * ) 

/* drivers/isdn/gigaset/ev-layer.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##ser_bc_state
s##usb_bc_state
s##urb
s##usb_cardstate
s##ser_cardstate
s##bas_cardstate
gigaset_handle_modem_response void gigaset_handle_modem_response ( s#cardstate * ) 

/* drivers/isdn/gigaset/interface.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##ser_bc_state
s##usb_bc_state
s##urb
s##usb_cardstate
s##ser_cardstate
s##bas_cardstate
gigaset_if_receive void gigaset_if_receive ( s#cardstate * , unsigned char * , t#size_t ) 

/* drivers/isdn/hardware/avm/b1.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##poll_table_struct
b1ctl_proc_fops extern const s#file_operations b1ctl_proc_fops 
s#avmcard_dmabuf struct avmcard_dmabuf { long size ; t#u8 * dmabuf ; t#dma_addr_t dmaaddr ; } 
t#avmcard_dmabuf typedef s#avmcard_dmabuf avmcard_dmabuf 
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##rtnl_link_ops
s##phy_device
s##sec_path
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#avmcard_dmainfo struct avmcard_dmainfo { t#u32 recvlen ; t#avmcard_dmabuf recvbuf ; t#avmcard_dmabuf sendbuf ; s#sk_buff_head send_queue ; s#pci_dev * pcidev ; } 
t#avmcard_dmainfo typedef s#avmcard_dmainfo avmcard_dmainfo 
avmcard_dma_alloc t#avmcard_dmainfo * avmcard_dma_alloc ( char * , s#pci_dev * , long , long ) 
avmcard_dma_free void avmcard_dma_free ( t#avmcard_dmainfo * ) 
b1_irq_table extern int b1_irq_table [ 16 ] 
e#avmcardtype enum avmcardtype { avm_b1isa , avm_b1pci , avm_b1pcmcia , avm_m1 , avm_m2 , avm_t1isa , avm_t1pci , avm_c4 , avm_c2 } 
s#avmctrl_info struct avmctrl_info { char cardname [ 32 ] ; int versionlen ; char versionbuf [ 1024 ] ; char * version [ 8 ] ; char infobuf [ 128 ] ; s#avmcard * card ; s#capi_ctr capi_ctrl ; s#list_head ncci_head ; } 
t#u_int typedef unsigned int u_int 
s#avmcard struct avmcard { char name [ 32 ] ; t#spinlock_t lock ; unsigned int port ; unsigned irq ; unsigned long membase ; e#avmcardtype cardtype ; unsigned char revision ; unsigned char class ; int cardnr ; char msgbuf [ 128 ] ; char databuf [ 2048 ] ; void * mbase ; volatile t#u32 csr ; t#avmcard_dmainfo * dma ; s#avmctrl_info * ctrlinfo ; t#u_int nr_controllers ; t#u_int nlogcontr ; s#list_head list ; } 
t#avmcard typedef s#avmcard avmcard 
b1_alloc_card t#avmcard * b1_alloc_card ( int ) 
b1_free_card void b1_free_card ( t#avmcard * ) 
b1_detect int b1_detect ( unsigned int , e#avmcardtype ) 
b1_getrevision void b1_getrevision ( t#avmcard * ) 
b1_load_t4file int b1_load_t4file ( t#avmcard * , t#capiloaddatapart * ) 
b1_load_config int b1_load_config ( t#avmcard * , t#capiloaddatapart * ) 
b1_loaded int b1_loaded ( t#avmcard * ) 
b1_load_firmware int b1_load_firmware ( s#capi_ctr * , t#capiloaddata * ) 
b1_reset_ctr void b1_reset_ctr ( s#capi_ctr * ) 
b1_register_appl void b1_register_appl ( s#capi_ctr * , t#u16 , t#capi_register_params * ) 
b1_release_appl void b1_release_appl ( s#capi_ctr * , t#u16 ) 
b1_send_message t#u16 b1_send_message ( s#capi_ctr * , s#sk_buff * ) 
t#avmctrl_info typedef s#avmctrl_info avmctrl_info 
b1_parse_version void b1_parse_version ( t#avmctrl_info * ) 
b1_interrupt t#irqreturn_t b1_interrupt ( int , void * ) 

/* drivers/isdn/hardware/avm/b1dma.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##poll_table_struct
b1dmactl_proc_fops extern const s#file_operations b1dmactl_proc_fops 
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
s##pci_dev
b1dma_reset void b1dma_reset ( t#avmcard * ) 
t1pci_detect int t1pci_detect ( t#avmcard * ) 
b1pciv4_detect int b1pciv4_detect ( t#avmcard * ) 
b1dma_interrupt t#irqreturn_t b1dma_interrupt ( int , void * ) 
b1dma_load_firmware int b1dma_load_firmware ( s#capi_ctr * , t#capiloaddata * ) 
b1dma_reset_ctr void b1dma_reset_ctr ( s#capi_ctr * ) 
b1dma_register_appl void b1dma_register_appl ( s#capi_ctr * , t#u16 , t#capi_register_params * ) 
b1dma_release_appl void b1dma_release_appl ( s#capi_ctr * , t#u16 ) 
b1dma_send_message t#u16 b1dma_send_message ( s#capi_ctr * , s#sk_buff * ) 

/* drivers/isdn/hardware/eicon/diva_didd.o */
DIVA_DIDD_Read extern void DIVA_DIDD_Read ( void * , int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
proc_net_eicon s#proc_dir_entry * proc_net_eicon 

/* drivers/isdn/hardware/mISDN/mISDNipac.o */
t#u_long typedef unsigned long u_long 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#mISDN_sock_list struct mISDN_sock_list { s#hlist_head head ; t#rwlock_t lock ; } 
s#mISDNstack struct mISDNstack { t#u_long status ; s#mISDNdevice * dev ; s#task_struct * thread ; s#completion * notify ; t#wait_queue_head_t workq ; s#sk_buff_head msgq ; s#list_head layer2 ; s#mISDNchannel * layer1 ; s#mISDNchannel own ; s#mutex lmutex ; s#mISDN_sock_list l1sock ; } 
t#send_func_t typedef int ( send_func_t ) ( s#mISDNchannel * , s#sk_buff * ) 
t#ctrl_func_t typedef int ( ctrl_func_t ) ( s#mISDNchannel * , t#u_int , void * ) 
s#mISDNchannel struct mISDNchannel { s#list_head list ; t#u_int protocol ; t#u_int nr ; t#u_long opt ; t#u_int addr ; s#mISDNstack * st ; s#mISDNchannel * peer ; t#send_func_t * send ; t#send_func_t * recv ; t#ctrl_func_t * ctrl ; } 
s#mISDNdevice struct mISDNdevice { s#mISDNchannel D ; t#u_int id ; t#u_int Dprotocols ; t#u_int Bprotocols ; t#u_int nrbchan ; t#u_char channelmap [ ( ( 127 + 1 ) >> 3 ) ] ; s#list_head bchannels ; s#mISDNchannel * teimgr ; s#device dev ; } 
s#dchannel struct dchannel { s#mISDNdevice dev ; t#u_long Flags ; s#work_struct workq ; void ( * phfunc ) ( s#dchannel * ) ; t#u_int state ; void * l1 ; void * hw ; int slot ; s#timer_list timer ; s#sk_buff * rx_skb ; int maxlen ; s#sk_buff_head squeue ; s#sk_buff_head rqueue ; s#sk_buff * tx_skb ; int tx_idx ; int debug ; int err_crc ; int err_tx ; int err_rx ; } 
t#read_reg_func typedef t#u8 ( read_reg_func ) ( void * , t#u8 ) 
t#write_reg_func typedef void ( write_reg_func ) ( void * , t#u8 , t#u8 ) 
t#fifo_func typedef void ( fifo_func ) ( void * , t#u8 , t#u8 * , int ) 
s#sockaddr_mISDN struct sockaddr_mISDN { t#sa_family_t family ; unsigned char dev ; unsigned char channel ; unsigned char sapi ; unsigned char tei ; } 
s#channel_req struct channel_req { t#u_int protocol ; s#sockaddr_mISDN adr ; s#mISDNchannel * ch ; } 
s##arcofi_msg
s#isac_hw struct isac_hw { s#dchannel dch ; t#u32 type ; t#u32 off ; char * name ; t#spinlock_t * hwlock ; t#read_reg_func * read_reg ; t#write_reg_func * write_reg ; t#fifo_func * read_fifo ; t#fifo_func * write_fifo ; int ( * monitor ) ( void * , t#u32 , t#u8 * , int ) ; void ( * release ) ( s#isac_hw * ) ; int ( * init ) ( s#isac_hw * ) ; int ( * ctrl ) ( s#isac_hw * , t#u32 , t#u_long ) ; int ( * open ) ( s#isac_hw * , s#channel_req * ) ; t#u8 * mon_tx ; t#u8 * mon_rx ; int mon_txp ; int mon_txc ; int mon_rxp ; s#arcofi_msg * arcofi_list ; s#timer_list arcofitimer ; t#wait_queue_head_t arcofi_wait ; t#u8 arcofi_bc ; t#u8 arcofi_state ; t#u8 mocr ; t#u8 adf2 ; t#u8 state ; } 
mISDNisac_irq extern t#irqreturn_t mISDNisac_irq ( s#isac_hw * , t#u8 ) 
mISDNisac_init extern int mISDNisac_init ( s#isac_hw * , void * ) 
s#bchannel struct bchannel { s#mISDNchannel ch ; int nr ; t#u_long Flags ; s#work_struct workq ; t#u_int state ; void * hw ; int slot ; s#timer_list timer ; s#sk_buff * rx_skb ; int maxlen ; s#sk_buff * next_skb ; s#sk_buff * tx_skb ; s#sk_buff_head rqueue ; int rcount ; int tx_idx ; int debug ; int err_crc ; int err_tx ; int err_rx ; } 
s#hscx_hw struct hscx_hw { s#bchannel bch ; s#ipac_hw * ip ; t#u8 fifo_size ; t#u8 off ; t#u8 slot ; char log [ 64 ] ; } 
s#ipac_hw struct ipac_hw { s#isac_hw isac ; s#hscx_hw hscx [ 2 ] ; char * name ; void * hw ; t#spinlock_t * hwlock ; s#module * owner ; t#u32 type ; t#read_reg_func * read_reg ; t#write_reg_func * write_reg ; t#fifo_func * read_fifo ; t#fifo_func * write_fifo ; void ( * release ) ( s#ipac_hw * ) ; int ( * init ) ( s#ipac_hw * ) ; int ( * ctrl ) ( s#ipac_hw * , t#u32 , t#u_long ) ; t#u8 conf ; } 
mISDNipac_irq extern t#irqreturn_t mISDNipac_irq ( s#ipac_hw * , int ) 
mISDNipac_init extern t#u32 mISDNipac_init ( s#ipac_hw * , void * ) 

/* drivers/isdn/hardware/mISDN/mISDNisar.o */
s##device_private
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#isar_ch struct isar_ch { s#bchannel bch ; s#isar_hw * is ; s#timer_list ftimer ; t#u8 nr ; t#u8 dpath ; t#u8 mml ; t#u8 state ; t#u8 cmd ; t#u8 mod ; t#u8 newcmd ; t#u8 newmod ; t#u8 try_mod ; t#u8 conmsg [ 16 ] ; } 
s#isar_hw struct isar_hw { s#isar_ch ch [ 2 ] ; void * hw ; t#spinlock_t * hwlock ; char * name ; s#module * owner ; t#read_reg_func * read_reg ; t#write_reg_func * write_reg ; t#fifo_func * read_fifo ; t#fifo_func * write_fifo ; int ( * ctrl ) ( void * , t#u32 , t#u_long ) ; void ( * release ) ( s#isar_hw * ) ; int ( * init ) ( s#isar_hw * ) ; int ( * open ) ( s#isar_hw * , s#channel_req * ) ; int ( * firmware ) ( s#isar_hw * , const t#u8 * , int ) ; unsigned long Flags ; int version ; t#u8 bstat ; t#u8 iis ; t#u8 cmsb ; t#u8 clsb ; t#u8 buf [ 256 ] ; t#u8 log [ 256 ] ; } 
mISDNisar_irq extern void mISDNisar_irq ( s#isar_hw * ) 
mISDNisar_init extern t#u32 mISDNisar_init ( s#isar_hw * , void * ) 

/* drivers/isdn/hisax/config.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
t#FSMFNPTR typedef void ( * FSMFNPTR ) ( s#FsmInst * , int , void * ) 
s#Fsm struct Fsm { t#FSMFNPTR * jumpmatrix ; int state_count , event_count ; char * * strEvent , * * strState ; } 
s#FsmInst struct FsmInst { s#Fsm * fsm ; int state ; int debug ; void * userdata ; int userint ; void ( * printdebug ) ( s#FsmInst * , char * , ... ) ; } 
s#FsmTimer struct FsmTimer { s#FsmInst * fi ; s#timer_list tl ; int event ; void * arg ; } 
s#Layer1 struct Layer1 { void * hardware ; s#BCState * bcs ; s#PStack * * stlistp ; unsigned long Flags ; s#FsmInst l1m ; s#FsmTimer timer ; void ( * l1l2 ) ( s#PStack * , int , void * ) ; void ( * l1hw ) ( s#PStack * , int , void * ) ; void ( * l1tei ) ( s#PStack * , int , void * ) ; int mode , bc ; int delay ; } 
s#Layer2 struct Layer2 { int tei ; int sap ; int maxlen ; t#u_long flag ; t#spinlock_t lock ; t#u_int vs , va , vr ; int rc ; unsigned int window ; unsigned int sow ; s#sk_buff * windowar [ 8 ] ; s#sk_buff_head i_queue ; s#sk_buff_head ui_queue ; void ( * l2l1 ) ( s#PStack * , int , void * ) ; void ( * l2l3 ) ( s#PStack * , int , void * ) ; void ( * l2tei ) ( s#PStack * , int , void * ) ; s#FsmInst l2m ; s#FsmTimer t200 , t203 ; int T200 , N200 , T203 ; int debug ; char debug_id [ 16 ] ; } 
s#L3Timer struct L3Timer { s#l3_process * pc ; s#timer_list tl ; int event ; } 
s#setup_parm struct setup_parm { unsigned char phone [ 32 ] ; unsigned char eazmsn [ 32 ] ; unsigned char si1 ; unsigned char si2 ; unsigned char plan ; unsigned char screen ; } 
t#setup_parm typedef s#setup_parm setup_parm 
s#Param struct Param { t#u_char cause ; t#u_char loc ; t#u_char diag [ 6 ] ; int bchannel ; int chargeinfo ; int spv ; t#setup_parm setup ; t#u_char moderate ; } 
s#Channel struct Channel { s#PStack * b_st , * d_st ; s#IsdnCardState * cs ; s#BCState * bcs ; int chan ; int incoming ; s#FsmInst fi ; s#FsmTimer drel_timer , dial_timer ; int debug ; int l2_protocol , l2_active_protocol ; int l3_protocol ; int data_open ; s#l3_process * proc ; t#setup_parm setup ; t#u_long Flags ; int leased ; } 
t#ulong typedef unsigned long ulong 
t#dss1_proc_priv typedef struct { unsigned char invoke_id ; t#ulong ll_id ; t#u8 remote_operation ; int proc ; t#ulong remote_result ; char uus1_data [ 35 ] ; } dss1_proc_priv 
t#ni1_proc_priv typedef struct { unsigned char invoke_id ; t#ulong ll_id ; t#u8 remote_operation ; int proc ; t#ulong remote_result ; char uus1_data [ 35 ] ; } ni1_proc_priv 
s#l3_process struct l3_process { int callref ; int state ; s#L3Timer timer ; int N303 ; int debug ; s#Param para ; s#Channel * chan ; s#PStack * st ; s#l3_process * next ; t#ulong redir_result ; union { t#u_char uuuu ; t#dss1_proc_priv dss1 ; t#ni1_proc_priv ni1 ; } prot ; } 
s#Layer3 struct Layer3 { void ( * l3l4 ) ( s#PStack * , int , void * ) ; void ( * l3ml3 ) ( s#PStack * , int , void * ) ; void ( * l3l2 ) ( s#PStack * , int , void * ) ; s#FsmInst l3m ; s#FsmTimer l3m_timer ; s#sk_buff_head squeue ; s#l3_process * proc ; s#l3_process * global ; int N303 ; int debug ; char debug_id [ 8 ] ; } 
t#capi_msg typedef struct { t#__u16 Length ; t#__u16 ApplId ; t#__u8 Command ; t#__u8 Subcommand ; t#__u16 Messagenumber ; union { t#__u32 Controller ; t#__u32 PLCI ; t#__u32 NCCI ; } adr ; t#__u8 para [ 50 ] ; } capi_msg 
t#isdn_cmd_stat typedef struct { t#ulong ll_id ; int hl_id ; int proc ; int timeout ; int datalen ; t#u_char * data ; } isdn_cmd_stat 
t#aux_s typedef struct { t#__u8 cmd ; t#__u8 subcmd ; t#__u8 para [ 50 ] ; } aux_s 
s#T30_s struct T30_s { t#__u8 resolution ; t#__u8 rate ; t#__u8 width ; t#__u8 length ; t#__u8 compression ; t#__u8 ecm ; t#__u8 binary ; t#__u8 scantime ; t#__u8 id [ 21 ] ; t#__u8 phase ; t#__u8 direction ; t#__u8 code ; t#__u8 badlin ; t#__u8 badmul ; t#__u8 bor ; t#__u8 fet ; t#__u8 pollid [ 21 ] ; t#__u8 cq ; t#__u8 cr ; t#__u8 ctcrty ; t#__u8 minsp ; t#__u8 phcto ; t#__u8 rel ; t#__u8 nbc ; t#__u8 r_resolution ; t#__u8 r_rate ; t#__u8 r_width ; t#__u8 r_length ; t#__u8 r_compression ; t#__u8 r_ecm ; t#__u8 r_binary ; t#__u8 r_scantime ; t#__u8 r_id [ 21 ] ; t#__u8 r_code ; } 
t#T30_s typedef s#T30_s __attribute__ ( ( packed ) ) T30_s 
t#isdn_ctrl typedef struct { int driver ; int command ; t#ulong arg ; union { t#ulong errcode ; int length ; t#u_char num [ 50 ] ; t#setup_parm setup ; t#capi_msg cmsg ; char display [ 85 ] ; t#isdn_cmd_stat isdn_io ; t#aux_s aux ; t#T30_s * fax ; t#ulong userdata ; } parm ; } isdn_ctrl 
s#LLInterface struct LLInterface { void ( * l4l3 ) ( s#PStack * , int , void * ) ; int ( * l4l3_proto ) ( s#PStack * , t#isdn_ctrl * ) ; void * userdata ; t#u_long flag ; } 
s#Management struct Management { int ri ; s#FsmInst tei_m ; s#FsmTimer t202 ; int T202 , N202 , debug ; void ( * layer ) ( s#PStack * , int , void * ) ; } 
t#dss1_stk_priv typedef struct { unsigned char last_invoke_id ; unsigned char invoke_used [ 32 ] ; } dss1_stk_priv 
t#ni1_stk_priv typedef struct { unsigned char last_invoke_id ; unsigned char invoke_used [ 32 ] ; } ni1_stk_priv 
s#PStack struct PStack { s#PStack * next ; s#Layer1 l1 ; s#Layer2 l2 ; s#Layer3 l3 ; s#LLInterface lli ; s#Management ma ; int protocol ; union { t#u_char uuuu ; t#dss1_stk_priv dss1 ; t#ni1_stk_priv ni1 ; } prot ; } 
s#hscx_hw struct hscx_hw { int hscx ; int rcvidx ; int count ; t#u_char * rcvbuf ; t#u_char tsaxr0 ; t#u_char tsaxr1 ; } 
s#hdlc_stat_reg struct hdlc_stat_reg { t#u_char fill ; t#u_char mode ; t#u_char xml ; t#u_char cmd ; } 
s#hdlc_hw struct hdlc_hw { union { t#u_int ctrl ; s#hdlc_stat_reg sr ; } ctrl ; t#u_int stat ; int rcvidx ; int count ; t#u_char * rcvbuf ; } 
s#isar_reg struct isar_reg { unsigned long Flags ; volatile t#u_char bstat ; volatile t#u_char iis ; volatile t#u_char cmsb ; volatile t#u_char clsb ; volatile t#u_char par [ 8 ] ; } 
s#isar_hw struct isar_hw { int dpath ; int rcvidx ; int txcnt ; int mml ; t#u_char state ; t#u_char cmd ; t#u_char mod ; t#u_char newcmd ; t#u_char newmod ; char try_mod ; s#timer_list ftimer ; t#u_char * rcvbuf ; t#u_char conmsg [ 16 ] ; s#isar_reg * reg ; } 
s#hfcB_hw struct hfcB_hw { unsigned int * send ; int f1 ; int f2 ; } 
s#tiger_hw struct tiger_hw { t#u_int * send ; t#u_int * s_irq ; t#u_int * s_end ; t#u_int * sendp ; t#u_int * rec ; int free ; t#u_char * rcvbuf ; t#u_char * sendbuf ; t#u_char * sp ; int sendcnt ; t#u_int s_tot ; t#u_int r_bitcnt ; t#u_int r_tot ; t#u_int r_err ; t#u_int r_fcs ; t#u_char r_state ; t#u_char r_one ; t#u_char r_val ; t#u_char s_state ; } 
s##hdlc_state
s#amd7930_hw struct amd7930_hw { t#u_char * tx_buff ; t#u_char * rv_buff ; int rv_buff_in ; int rv_buff_out ; s#sk_buff * rv_skb ; s#hdlc_state * hdlc_state ; s#work_struct tq_rcv ; s#work_struct tq_xmt ; } 
s#w6692B_hw struct w6692B_hw { int bchan ; int rcvidx ; int count ; t#u_char * rcvbuf ; } 
s##hisax_b_if
s#BCState struct BCState { int channel ; int mode ; t#u_long Flag ; s#IsdnCardState * cs ; int tx_cnt ; s#sk_buff * tx_skb ; s#sk_buff_head rqueue ; s#sk_buff_head squeue ; int ackcnt ; t#spinlock_t aclock ; s#PStack * st ; t#u_char * blog ; t#u_char * conmsg ; s#timer_list transbusy ; s#work_struct tqueue ; t#u_long event ; int ( * BC_SetStack ) ( s#PStack * , s#BCState * ) ; void ( * BC_Close ) ( s#BCState * ) ; int err_crc ; int err_tx ; int err_rdo ; int err_inv ; union { s#hscx_hw hscx ; s#hdlc_hw hdlc ; s#isar_hw isar ; s#hfcB_hw hfc ; s#tiger_hw tiger ; s#amd7930_hw amd7930 ; s#w6692B_hw w6692 ; s#hisax_b_if * b_if ; } hw ; } 
s#elsa_hw struct elsa_hw { s#pci_dev * dev ; unsigned long base ; unsigned int cfg ; unsigned int ctrl ; unsigned int ale ; unsigned int isac ; unsigned int itac ; unsigned int hscx ; unsigned int trig ; unsigned int timer ; unsigned int counter ; unsigned int status ; s#timer_list tl ; unsigned int MFlag ; s#BCState * bcs ; t#u_char * transbuf ; t#u_char * rcvbuf ; unsigned int transp ; unsigned int rcvp ; unsigned int transcnt ; unsigned int rcvcnt ; t#u_char IER ; t#u_char FCR ; t#u_char LCR ; t#u_char MCR ; t#u_char ctrl_reg ; } 
s#teles0_hw struct teles0_hw { unsigned int cfg_reg ; void * membase ; unsigned long phymem ; } 
s#teles3_hw struct teles3_hw { unsigned int cfg_reg ; signed int isac ; signed int hscx [ 2 ] ; signed int isacfifo ; signed int hscxfifo [ 2 ] ; } 
s#avm_hw struct avm_hw { unsigned int cfg_reg ; unsigned int isac ; unsigned int hscx [ 2 ] ; unsigned int isacfifo ; unsigned int hscxfifo [ 2 ] ; unsigned int counter ; s#pci_dev * dev ; } 
s#ix1_hw struct ix1_hw { unsigned int cfg_reg ; unsigned int isac_ale ; unsigned int isac ; unsigned int hscx_ale ; unsigned int hscx ; } 
s#diva_hw struct diva_hw { unsigned long cfg_reg ; unsigned long pci_cfg ; unsigned int ctrl ; unsigned long isac_adr ; unsigned int isac ; unsigned long hscx_adr ; unsigned int hscx ; unsigned int status ; s#timer_list tl ; t#u_char ctrl_reg ; s#pci_dev * dev ; } 
s#asus_hw struct asus_hw { unsigned int cfg_reg ; unsigned int adr ; unsigned int isac ; unsigned int hscx ; unsigned int u7 ; unsigned int pots ; } 
s#hfc_hw struct hfc_hw { unsigned int addr ; unsigned int fifosize ; unsigned char cirm ; unsigned char ctmt ; unsigned char cip ; t#u_char isac_spcr ; s#timer_list timer ; } 
s#sedl_hw struct sedl_hw { unsigned int cfg_reg ; unsigned int adr ; unsigned int isac ; unsigned int hscx ; unsigned int reset_on ; unsigned int reset_off ; s#isar_reg isar ; unsigned int chip ; unsigned int bus ; s#pci_dev * dev ; } 
s#spt_hw struct spt_hw { unsigned int cfg_reg ; unsigned int isac ; unsigned int hscx [ 2 ] ; unsigned char res_irq ; } 
s#mic_hw struct mic_hw { unsigned int cfg_reg ; unsigned int adr ; unsigned int isac ; unsigned int hscx ; } 
s#njet_hw struct njet_hw { unsigned long base ; unsigned int isac ; unsigned int auxa ; unsigned char auxd ; unsigned char dmactrl ; unsigned char ctrl_reg ; unsigned char irqmask0 ; unsigned char irqstat0 ; unsigned char last_is0 ; s#pci_dev * dev ; } 
s#hfcD_hw struct hfcD_hw { unsigned int addr ; unsigned int bfifosize ; unsigned int dfifosize ; unsigned char cirm ; unsigned char ctmt ; unsigned char cip ; unsigned char conn ; unsigned char mst_m ; unsigned char int_m1 ; unsigned char int_m2 ; unsigned char int_s1 ; unsigned char sctrl ; unsigned char stat ; unsigned char fifo ; unsigned char f1 ; unsigned char f2 ; unsigned int * send ; s#timer_list timer ; } 
s#hfcPCI_hw struct hfcPCI_hw { unsigned char cirm ; unsigned char ctmt ; unsigned char conn ; unsigned char mst_m ; unsigned char int_m1 ; unsigned char int_m2 ; unsigned char int_s1 ; unsigned char sctrl ; unsigned char sctrl_r ; unsigned char sctrl_e ; unsigned char trm ; unsigned char stat ; unsigned char fifo ; unsigned char fifo_en ; unsigned char bswapped ; unsigned char nt_mode ; int nt_timer ; s#pci_dev * dev ; unsigned char * pci_io ; t#dma_addr_t dma ; void * fifos ; int last_bfifo_cnt [ 2 ] ; s#timer_list timer ; } 
s#hfcSX_hw struct hfcSX_hw { unsigned long base ; unsigned char cirm ; unsigned char ctmt ; unsigned char conn ; unsigned char mst_m ; unsigned char int_m1 ; unsigned char int_m2 ; unsigned char int_s1 ; unsigned char sctrl ; unsigned char sctrl_r ; unsigned char sctrl_e ; unsigned char trm ; unsigned char stat ; unsigned char fifo ; unsigned char bswapped ; unsigned char nt_mode ; unsigned char chip ; int b_fifo_size ; unsigned char last_fifo ; void * extra ; int nt_timer ; s#timer_list timer ; } 
s#isurf_hw struct isurf_hw { unsigned int reset ; unsigned long phymem ; void * isac ; void * isar ; s#isar_reg isar_r ; } 
s#saphir_hw struct saphir_hw { s#pci_dev * dev ; unsigned int cfg_reg ; unsigned int ale ; unsigned int isac ; unsigned int hscx ; s#timer_list timer ; } 
s#bkm_hw struct bkm_hw { s#pci_dev * dev ; unsigned long base ; unsigned long isac_adr ; unsigned int isac_ale ; unsigned long jade_adr ; unsigned int jade_ale ; unsigned long plx_adr ; unsigned long data_adr ; } 
s#gazel_hw struct gazel_hw { s#pci_dev * dev ; unsigned int cfg_reg ; unsigned int pciaddr [ 2 ] ; signed int ipac ; signed int isac ; signed int hscx [ 2 ] ; signed int isacfifo ; signed int hscxfifo [ 2 ] ; unsigned char timeslot ; unsigned char iom2 ; } 
s#w6692_hw struct w6692_hw { s#pci_dev * dev ; unsigned int iobase ; s#timer_list timer ; } 
s##hisax_d_if
t#isdn_if typedef struct { s#module * owner ; int channels ; int maxbufsize ; unsigned long features ; unsigned short hl_hdrlen ; void ( * rcvcallb_skb ) ( int , int , s#sk_buff * ) ; int ( * statcallb ) ( t#isdn_ctrl * ) ; int ( * command ) ( t#isdn_ctrl * ) ; int ( * writebuf_skb ) ( int , int , int , s#sk_buff * ) ; int ( * writecmd ) ( const t#u_char * , int , int , int ) ; int ( * readstat ) ( t#u_char * , int , int , int ) ; char id [ 20 ] ; } isdn_if 
s#arcofi_msg struct arcofi_msg { s#arcofi_msg * next ; t#u_char receive ; t#u_char len ; t#u_char msg [ 10 ] ; } 
s#isac_chip struct isac_chip { int ph_state ; t#u_char * mon_tx ; t#u_char * mon_rx ; int mon_txp ; int mon_txc ; int mon_rxp ; s#arcofi_msg * arcofi_list ; s#timer_list arcofitimer ; t#wait_queue_head_t arcofi_wait ; t#u_char arcofi_bc ; t#u_char arcofi_state ; t#u_char mocr ; t#u_char adf2 ; } 
s#hfcd_chip struct hfcd_chip { int ph_state ; } 
s#hfcpci_chip struct hfcpci_chip { int ph_state ; } 
s#hfcsx_chip struct hfcsx_chip { int ph_state ; } 
s#w6692_chip struct w6692_chip { int ph_state ; } 
s#amd7930_chip struct amd7930_chip { t#u_char lmr1 ; t#u_char ph_state ; t#u_char old_state ; t#u_char flg_t3 ; unsigned int tx_xmtlen ; s#timer_list timer3 ; void ( * ph_command ) ( s#IsdnCardState * , t#u_char , char * ) ; void ( * setIrqMask ) ( s#IsdnCardState * , t#u_char ) ; } 
s#icc_chip struct icc_chip { int ph_state ; t#u_char * mon_tx ; t#u_char * mon_rx ; int mon_txp ; int mon_txc ; int mon_rxp ; s#arcofi_msg * arcofi_list ; s#timer_list arcofitimer ; t#wait_queue_head_t arcofi_wait ; t#u_char arcofi_bc ; t#u_char arcofi_state ; t#u_char mocr ; t#u_char adf2 ; } 
s#IsdnCardState struct IsdnCardState { t#spinlock_t lock ; t#u_char typ ; t#u_char subtyp ; int protocol ; t#u_int irq ; t#u_long irq_flags ; t#u_long HW_Flags ; int * busy_flag ; int chanlimit ; int logecho ; union { s#elsa_hw elsa ; s#teles0_hw teles0 ; s#teles3_hw teles3 ; s#avm_hw avm ; s#ix1_hw ix1 ; s#diva_hw diva ; s#asus_hw asus ; s#hfc_hw hfc ; s#sedl_hw sedl ; s#spt_hw spt ; s#mic_hw mic ; s#njet_hw njet ; s#hfcD_hw hfcD ; s#hfcPCI_hw hfcpci ; s#hfcSX_hw hfcsx ; s#ix1_hw niccy ; s#isurf_hw isurf ; s#saphir_hw saphir ; s#bkm_hw ax ; s#gazel_hw gazel ; s#w6692_hw w6692 ; s#hisax_d_if * hisax_d_if ; } hw ; int myid ; t#isdn_if iif ; t#spinlock_t statlock ; t#u_char * status_buf ; t#u_char * status_read ; t#u_char * status_write ; t#u_char * status_end ; t#u_char ( * readisac ) ( s#IsdnCardState * , t#u_char ) ; void ( * writeisac ) ( s#IsdnCardState * , t#u_char , t#u_char ) ; void ( * readisacfifo ) ( s#IsdnCardState * , t#u_char * , int ) ; void ( * writeisacfifo ) ( s#IsdnCardState * , t#u_char * , int ) ; t#u_char ( * BC_Read_Reg ) ( s#IsdnCardState * , int , t#u_char ) ; void ( * BC_Write_Reg ) ( s#IsdnCardState * , int , t#u_char , t#u_char ) ; void ( * BC_Send_Data ) ( s#BCState * ) ; int ( * cardmsg ) ( s#IsdnCardState * , int , void * ) ; void ( * setstack_d ) ( s#PStack * , s#IsdnCardState * ) ; void ( * DC_Close ) ( s#IsdnCardState * ) ; t#irq_handler_t irq_func ; int ( * auxcmd ) ( s#IsdnCardState * , t#isdn_ctrl * ) ; s#Channel channel [ 2 + 2 ] ; s#BCState bcs [ 2 + 2 ] ; s#PStack * stlist ; s#sk_buff_head rq , sq ; int cardnr ; char * dlog ; int debug ; union { s#isac_chip isac ; s#hfcd_chip hfcd ; s#hfcpci_chip hfcpci ; s#hfcsx_chip hfcsx ; s#w6692_chip w6692 ; s#amd7930_chip amd7930 ; s#icc_chip icc ; } dc ; t#u_char * rcvbuf ; int rcvidx ; s#sk_buff * tx_skb ; int tx_cnt ; t#u_long event ; s#work_struct tqueue ; s#timer_list dbusytimer ; unsigned int irq_cnt ; int err_crc ; int err_tx ; int err_rx ; } 
t#IsdnCardState_t typedef s#IsdnCardState IsdnCardState_t 
s#IsdnCard struct IsdnCard { int typ ; int protocol ; unsigned long para [ 4 ] ; t#IsdnCardState_t * cs ; } 
t#IsdnCard_t typedef s#IsdnCard IsdnCard_t 
hisax_init_pcmcia extern int hisax_init_pcmcia ( void * , int * , t#IsdnCard_t * ) 
HiSax_closecard extern void HiSax_closecard ( int ) 
hisax_register int hisax_register ( s#hisax_d_if * , s#hisax_b_if * [ ] , char * , int ) 
hisax_unregister void hisax_unregister ( s#hisax_d_if * ) 
s#FsmNode struct FsmNode { int state , event ; void ( * routine ) ( s#FsmInst * , int , void * ) ; } 
FsmNew int FsmNew ( s#Fsm * , s#FsmNode * , int ) 
FsmFree void FsmFree ( s#Fsm * ) 
FsmEvent int FsmEvent ( s#FsmInst * , int , void * ) 
FsmChangeState void FsmChangeState ( s#FsmInst * , int ) 
FsmInitTimer void FsmInitTimer ( s#FsmInst * , s#FsmTimer * ) 
FsmDelTimer void FsmDelTimer ( s#FsmTimer * , int ) 
FsmRestartTimer void FsmRestartTimer ( s#FsmTimer * , int , int , void * , int ) 

/* drivers/isdn/hisax/hisax_isac.o */
s#hisax_if struct hisax_if { void * priv ; void ( * l1l2 ) ( s#hisax_if * , int , void * ) ; void ( * l2l1 ) ( s#hisax_if * , int , void * ) ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##IsdnCardState
s##BCState
s#hisax_b_if struct hisax_b_if { s#hisax_if ifc ; s#BCState * bcs ; } 
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
s#hisax_d_if struct hisax_d_if { s#hisax_if ifc ; s#module * owner ; s#IsdnCardState * cs ; s#hisax_b_if * b_if [ 2 ] ; s#sk_buff_head erq ; unsigned long ph_state ; } 
s#isac struct isac { void * priv ; t#u_long flags ; s#hisax_d_if hisax_d_if ; s#FsmInst l1m ; s#FsmTimer timer ; t#u_char mocr ; t#u_char adf2 ; int type ; t#u_char rcvbuf [ 300 ] ; int rcvidx ; s#sk_buff * tx_skb ; int tx_cnt ; t#u_char ( * read_isac ) ( s#isac * , t#u_char ) ; void ( * write_isac ) ( s#isac * , t#u_char , t#u_char ) ; void ( * read_isac_fifo ) ( s#isac * , t#u_char * , int ) ; void ( * write_isac_fifo ) ( s#isac * , t#u_char * , int ) ; } 
isac_init void isac_init ( s#isac * ) 
isac_d_l2l1 void isac_d_l2l1 ( s#hisax_if * , int , void * ) 
isacsx_setup void isacsx_setup ( s#isac * ) 
isacsx_irq void isacsx_irq ( s#isac * ) 
isac_setup void isac_setup ( s#isac * ) 
isac_irq void isac_irq ( s#isac * ) 

/* drivers/isdn/i4l/isdn_common.o */
t#isdn_divert_if typedef struct { t#ulong if_magic ; int cmd ; int ( * stat_callback ) ( t#isdn_ctrl * ) ; int ( * ll_cmd ) ( t#isdn_ctrl * ) ; char * ( * drv_to_name ) ( int ) ; int ( * name_to_drv ) ( char * ) ; } isdn_divert_if 
isdn_register_divert extern int isdn_register_divert ( t#isdn_divert_if * ) 
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
register_isdn extern int register_isdn ( t#isdn_if * ) 
s#isdn_ppp_comp_data struct isdn_ppp_comp_data { int num ; unsigned char options [ 16 ] ; int optlen ; int flags ; } 
s#isdn_ppp_resetparams struct isdn_ppp_resetparams { unsigned char valid : 1 ; unsigned char rsend : 1 ; unsigned char idval : 1 ; unsigned char dtval : 1 ; unsigned char expra : 1 ; unsigned char id ; unsigned short maxdlen ; unsigned short dlen ; unsigned char * data ; } 
s#compstat struct compstat { t#__u32 unc_bytes ; t#__u32 unc_packets ; t#__u32 comp_bytes ; t#__u32 comp_packets ; t#__u32 inc_bytes ; t#__u32 inc_packets ; t#__u32 in_count ; t#__u32 bytes_out ; double ratio ; } 
s#isdn_ppp_compressor struct isdn_ppp_compressor { s#isdn_ppp_compressor * next , * prev ; s#module * owner ; int num ; void * ( * alloc ) ( s#isdn_ppp_comp_data * ) ; void ( * free ) ( void * ) ; int ( * init ) ( void * , s#isdn_ppp_comp_data * , int , int ) ; void ( * reset ) ( void * , unsigned char , unsigned char , unsigned char * , unsigned , s#isdn_ppp_resetparams * ) ; int ( * compress ) ( void * , s#sk_buff * , s#sk_buff * , int ) ; int ( * decompress ) ( void * , s#sk_buff * , s#sk_buff * , s#isdn_ppp_resetparams * ) ; void ( * incomp ) ( void * , s#sk_buff * , int ) ; void ( * stat ) ( void * , s#compstat * ) ; } 
isdn_ppp_register_compressor extern int isdn_ppp_register_compressor ( s#isdn_ppp_compressor * ) 
isdn_ppp_unregister_compressor extern int isdn_ppp_unregister_compressor ( s#isdn_ppp_compressor * ) 

/* drivers/isdn/i4l/isdnhdlc.o */
s#isdnhdlc_vars struct isdnhdlc_vars { int bit_shift ; int hdlc_bits1 ; int data_bits ; int ffbit_shift ; int state ; int dstpos ; t#u16 crc ; t#u8 cbin ; t#u8 shift_reg ; t#u8 ffvalue ; t#u32 data_received : 1 ; t#u32 dchannel : 1 ; t#u32 do_adapt56 : 1 ; t#u32 do_closing : 1 ; t#u32 do_bitreverse : 1 ; } 
isdnhdlc_out_init extern void isdnhdlc_out_init ( s#isdnhdlc_vars * , t#u32 ) 
isdnhdlc_rcv_init extern void isdnhdlc_rcv_init ( s#isdnhdlc_vars * , t#u32 ) 
isdnhdlc_decode extern int isdnhdlc_decode ( s#isdnhdlc_vars * , const t#u8 * , int , int * , t#u8 * , int ) 
isdnhdlc_encode extern int isdnhdlc_encode ( s#isdnhdlc_vars * , const t#u8 * , t#u16 , int * , t#u8 * , int ) 

/* drivers/isdn/mISDN/clock.o */
t#clockctl_func_t typedef int ( clockctl_func_t ) ( void * , int ) 
s#mISDNclock struct mISDNclock { s#list_head list ; char name [ 64 ] ; int pri ; t#clockctl_func_t * ctl ; void * priv ; } 
mISDN_register_clock extern s#mISDNclock * mISDN_register_clock ( char * , int , t#clockctl_func_t * , void * ) 
mISDN_unregister_clock extern void mISDN_unregister_clock ( s#mISDNclock * ) 
mISDN_clock_update extern void mISDN_clock_update ( s#mISDNclock * , int , s#timeval * ) 
mISDN_clock_get extern unsigned short mISDN_clock_get ( void ) 

/* drivers/isdn/mISDN/core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
mISDN_register_device extern int mISDN_register_device ( s#mISDNdevice * , s#device * , char * ) 
mISDN_unregister_device extern void mISDN_unregister_device ( s#mISDNdevice * ) 
t#create_func_t typedef int ( create_func_t ) ( s#channel_req * ) 
s#Bprotocol struct Bprotocol { s#list_head list ; char * name ; t#u_int Bprotocols ; t#create_func_t * create ; } 
mISDN_register_Bprotocol extern int mISDN_register_Bprotocol ( s#Bprotocol * ) 
mISDN_unregister_Bprotocol extern void mISDN_unregister_Bprotocol ( s#Bprotocol * ) 

/* drivers/isdn/mISDN/dsp_audio.o */
dsp_audio_law_to_s32 extern t#s32 * dsp_audio_law_to_s32 
dsp_audio_s16_to_law extern t#u8 dsp_audio_s16_to_law [ 65536 ] 

/* drivers/isdn/mISDN/dsp_pipeline.o */
s#mISDN_dsp_element_arg struct mISDN_dsp_element_arg { char * name ; char * def ; char * desc ; } 
s#mISDN_dsp_element struct mISDN_dsp_element { char * name ; void * ( * new ) ( const char * ) ; void ( * free ) ( void * ) ; void ( * process_tx ) ( void * , unsigned char * , int ) ; void ( * process_rx ) ( void * , unsigned char * , int , unsigned int ) ; int num_args ; s#mISDN_dsp_element_arg * args ; } 
mISDN_dsp_element_register extern int mISDN_dsp_element_register ( s#mISDN_dsp_element * ) 
mISDN_dsp_element_unregister extern void mISDN_dsp_element_unregister ( s#mISDN_dsp_element * ) 

/* drivers/isdn/mISDN/fsm.o */
mISDN_FsmNew extern void mISDN_FsmNew ( s#Fsm * , s#FsmNode * , int ) 
mISDN_FsmFree extern void mISDN_FsmFree ( s#Fsm * ) 
mISDN_FsmEvent extern int mISDN_FsmEvent ( s#FsmInst * , int , void * ) 
mISDN_FsmChangeState extern void mISDN_FsmChangeState ( s#FsmInst * , int ) 
s##tvec_base
mISDN_FsmInitTimer extern void mISDN_FsmInitTimer ( s#FsmInst * , s#FsmTimer * ) 
mISDN_FsmDelTimer extern void mISDN_FsmDelTimer ( s#FsmTimer * , int ) 
mISDN_FsmAddTimer extern int mISDN_FsmAddTimer ( s#FsmTimer * , int , int , void * , int ) 
mISDN_FsmRestartTimer extern void mISDN_FsmRestartTimer ( s#FsmTimer * , int , int , void * , int ) 

/* drivers/isdn/mISDN/hwchannel.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
mISDN_initdchannel extern int mISDN_initdchannel ( s#dchannel * , int , void * ) 
mISDN_initbchannel extern int mISDN_initbchannel ( s#bchannel * , int ) 
mISDN_freedchannel extern int mISDN_freedchannel ( s#dchannel * ) 
mISDN_clear_bchannel extern void mISDN_clear_bchannel ( s#bchannel * ) 
mISDN_freebchannel extern int mISDN_freebchannel ( s#bchannel * ) 
recv_Dchannel extern void recv_Dchannel ( s#dchannel * ) 
recv_Echannel extern void recv_Echannel ( s#dchannel * , s#dchannel * ) 
recv_Bchannel extern void recv_Bchannel ( s#bchannel * , unsigned int ) 
recv_Dchannel_skb extern void recv_Dchannel_skb ( s#dchannel * , s#sk_buff * ) 
recv_Bchannel_skb extern void recv_Bchannel_skb ( s#bchannel * , s#sk_buff * ) 
get_next_dframe extern int get_next_dframe ( s#dchannel * ) 
confirm_Bsend extern void confirm_Bsend ( s#bchannel * ) 
get_next_bframe extern int get_next_bframe ( s#bchannel * ) 
queue_ch_frame extern void queue_ch_frame ( s#mISDNchannel * , t#u_int , int , s#sk_buff * ) 
dchannel_senddata extern int dchannel_senddata ( s#dchannel * , s#sk_buff * ) 
bchannel_senddata extern int bchannel_senddata ( s#bchannel * , s#sk_buff * ) 

/* drivers/isdn/mISDN/layer1.o */
s##layer1
l1_event extern int l1_event ( s#layer1 * , t#u_int ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
t#dchannel_l1callback typedef int ( dchannel_l1callback ) ( s#dchannel * , t#u_int ) 
create_l1 extern int create_l1 ( s#dchannel * , t#dchannel_l1callback * ) 

/* drivers/leds/led-class.o */
e#led_brightness enum led_brightness { LED_OFF = 0 , LED_HALF = 127 , LED_FULL = 255 , } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#led_trigger struct led_trigger { const char * name ; void ( * activate ) ( s#led_classdev * ) ; void ( * deactivate ) ( s#led_classdev * ) ; t#rwlock_t leddev_list_lock ; s#list_head led_cdevs ; s#list_head next_trig ; } 
s#led_classdev struct led_classdev { const char * name ; int brightness ; int max_brightness ; int flags ; void ( * brightness_set ) ( s#led_classdev * , e#led_brightness ) ; e#led_brightness ( * brightness_get ) ( s#led_classdev * ) ; int ( * blink_set ) ( s#led_classdev * , unsigned long * , unsigned long * ) ; s#device * dev ; s#list_head node ; const char * default_trigger ; unsigned long blink_delay_on , blink_delay_off ; s#timer_list blink_timer ; int blink_brightness ; s#rw_semaphore trigger_lock ; s#led_trigger * trigger ; s#list_head trig_list ; void * trigger_data ; } 
led_classdev_suspend extern void led_classdev_suspend ( s#led_classdev * ) 
led_classdev_resume extern void led_classdev_resume ( s#led_classdev * ) 
led_classdev_register extern int led_classdev_register ( s#device * , s#led_classdev * ) 
led_classdev_unregister extern void led_classdev_unregister ( s#led_classdev * ) 
led_blink_set extern void led_blink_set ( s#led_classdev * , unsigned long * , unsigned long * ) 
led_brightness_set extern void led_brightness_set ( s#led_classdev * , e#led_brightness ) 

/* drivers/leds/led-core.o */
leds_list_lock extern s#rw_semaphore leds_list_lock 
leds_list extern s#list_head leds_list 

/* drivers/leds/led-triggers.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
led_trigger_store t#ssize_t led_trigger_store ( s#device * , s#device_attribute * , const char * , t#size_t ) 
led_trigger_show t#ssize_t led_trigger_show ( s#device * , s#device_attribute * , char * ) 
led_trigger_set void led_trigger_set ( s#led_classdev * , s#led_trigger * ) 
led_trigger_remove void led_trigger_remove ( s#led_classdev * ) 
led_trigger_set_default void led_trigger_set_default ( s#led_classdev * ) 
led_trigger_register extern int led_trigger_register ( s#led_trigger * ) 
led_trigger_unregister extern void led_trigger_unregister ( s#led_trigger * ) 
led_trigger_event extern void led_trigger_event ( s#led_trigger * , e#led_brightness ) 
led_trigger_blink extern void led_trigger_blink ( s#led_trigger * , unsigned long * , unsigned long * ) 
led_trigger_register_simple extern void led_trigger_register_simple ( const char * , s#led_trigger * * ) 
led_trigger_unregister_simple extern void led_trigger_unregister_simple ( s#led_trigger * ) 

/* drivers/leds/ledtrig-ide-disk.o */
ledtrig_ide_activity extern void ledtrig_ide_activity ( void ) 

/* drivers/macintosh/adb.o */
adb_client_list extern s#blocking_notifier_head adb_client_list 

/* drivers/macintosh/macio_asic.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##mfd_cell
s#macio_dev struct macio_dev { s#macio_bus * bus ; s#macio_dev * media_bay ; s#platform_device ofdev ; s#device_dma_parameters dma_parms ; int n_resources ; s#resource resource [ 8 ] ; int n_interrupts ; s#resource interrupt [ 8 ] ; } 
s#macio_driver struct macio_driver { int ( * probe ) ( s#macio_dev * , const s#of_device_id * ) ; int ( * remove ) ( s#macio_dev * ) ; int ( * suspend ) ( s#macio_dev * , t#pm_message_t ) ; int ( * resume ) ( s#macio_dev * ) ; int ( * shutdown ) ( s#macio_dev * ) ; s#device_driver driver ; } 
macio_register_driver extern int macio_register_driver ( s#macio_driver * ) 
macio_unregister_driver extern void macio_unregister_driver ( s#macio_driver * ) 
macio_dev_get extern s#macio_dev * macio_dev_get ( s#macio_dev * ) 
macio_dev_put extern void macio_dev_put ( s#macio_dev * ) 
macio_request_resource extern int macio_request_resource ( s#macio_dev * , int , const char * ) 
macio_release_resource extern void macio_release_resource ( s#macio_dev * , int ) 
macio_request_resources extern int macio_request_resources ( s#macio_dev * , const char * ) 
macio_release_resources extern void macio_release_resources ( s#macio_dev * ) 
macio_enable_devres extern int macio_enable_devres ( s#macio_dev * ) 

/* drivers/macintosh/smu.o */
s#smu_cmd struct smu_cmd { t#u8 cmd ; int data_len ; int reply_len ; void * data_buf ; void * reply_buf ; int status ; void ( * done ) ( s#smu_cmd * , void * ) ; void * misc ; s#list_head link ; } 
smu_queue_cmd extern int smu_queue_cmd ( s#smu_cmd * ) 
s#smu_simple_cmd struct smu_simple_cmd { s#smu_cmd cmd ; t#u8 buffer [ 16 ] ; } 
smu_queue_simple extern int smu_queue_simple ( s#smu_simple_cmd * , t#u8 , unsigned int , void ( * ) ( s#smu_cmd * , void * ) , void * , ... ) 
smu_poll extern void smu_poll ( void ) 
smu_done_complete extern void smu_done_complete ( s#smu_cmd * , void * ) 
smu_spinwait_cmd extern void smu_spinwait_cmd ( s#smu_cmd * ) 
smu_present extern int smu_present ( void ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##mfd_cell
smu_get_ofdev extern s#platform_device * smu_get_ofdev ( void ) 
s#smu_sdbp_header struct smu_sdbp_header { t#__u8 id ; t#__u8 len ; t#__u8 version ; t#__u8 flags ; } 
smu_get_sdb_partition extern const s#smu_sdbp_header * smu_get_sdb_partition ( int , unsigned int * ) 

/* drivers/macintosh/via-pmu.o */
pmu_request extern int pmu_request ( s#adb_request * , void ( * ) ( s#adb_request * ) , int , ... ) 
pmu_queue_request extern int pmu_queue_request ( s#adb_request * ) 
pmu_poll extern void pmu_poll ( void ) 
pmu_poll_adb extern void pmu_poll_adb ( void ) 
pmu_wait_complete extern void pmu_wait_complete ( s#adb_request * ) 
pmu_suspend extern void pmu_suspend ( void ) 
pmu_resume extern void pmu_resume ( void ) 
pmu_unlock extern void pmu_unlock ( void ) 

/* drivers/macintosh/windfarm_core.o */
wf_critical_overtemp int wf_critical_overtemp ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#wf_control_ops struct wf_control_ops { int ( * set_value ) ( s#wf_control * , t#s32 ) ; int ( * get_value ) ( s#wf_control * , t#s32 * ) ; t#s32 ( * get_min ) ( s#wf_control * ) ; t#s32 ( * get_max ) ( s#wf_control * ) ; void ( * release ) ( s#wf_control * ) ; s#module * owner ; } 
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#wf_control struct wf_control { s#list_head link ; s#wf_control_ops * ops ; char * name ; int type ; s#kref ref ; s#device_attribute attr ; } 
wf_register_control extern int wf_register_control ( s#wf_control * ) 
wf_unregister_control extern void wf_unregister_control ( s#wf_control * ) 
wf_find_control extern s#wf_control * wf_find_control ( const char * ) 
wf_get_control extern int wf_get_control ( s#wf_control * ) 
wf_put_control extern void wf_put_control ( s#wf_control * ) 
s#wf_sensor_ops struct wf_sensor_ops { int ( * get_value ) ( s#wf_sensor * , t#s32 * ) ; void ( * release ) ( s#wf_sensor * ) ; s#module * owner ; } 
s#wf_sensor struct wf_sensor { s#list_head link ; s#wf_sensor_ops * ops ; char * name ; s#kref ref ; s#device_attribute attr ; } 
wf_register_sensor extern int wf_register_sensor ( s#wf_sensor * ) 
wf_unregister_sensor extern void wf_unregister_sensor ( s#wf_sensor * ) 
wf_find_sensor extern s#wf_sensor * wf_find_sensor ( const char * ) 
wf_get_sensor extern int wf_get_sensor ( s#wf_sensor * ) 
wf_put_sensor extern void wf_put_sensor ( s#wf_sensor * ) 
wf_register_client extern int wf_register_client ( s#notifier_block * ) 
wf_unregister_client extern int wf_unregister_client ( s#notifier_block * ) 
wf_set_overtemp extern void wf_set_overtemp ( void ) 
wf_clear_overtemp extern void wf_clear_overtemp ( void ) 
wf_is_overtemp extern int wf_is_overtemp ( void ) 

/* drivers/macintosh/windfarm_pid.o */
s#wf_pid_param struct wf_pid_param { int interval ; int history_len ; int additive ; t#s32 gd , gp , gr ; t#s32 itarget ; t#s32 min , max ; } 
s#wf_pid_state struct wf_pid_state { int first ; int index ; t#s32 target ; t#s32 samples [ 32 ] ; t#s32 errors [ 32 ] ; s#wf_pid_param param ; } 
wf_pid_init extern void wf_pid_init ( s#wf_pid_state * , s#wf_pid_param * ) 
wf_pid_run extern t#s32 wf_pid_run ( s#wf_pid_state * , t#s32 ) 
s#wf_cpu_pid_param struct wf_cpu_pid_param { int interval ; int history_len ; t#s32 gd , gp , gr ; t#s32 pmaxadj ; t#s32 ttarget ; t#s32 tmax ; t#s32 min , max ; } 
s#wf_cpu_pid_state struct wf_cpu_pid_state { int first ; int index ; int tindex ; t#s32 target ; t#s32 last_delta ; t#s32 powers [ 32 ] ; t#s32 errors [ 32 ] ; t#s32 temps [ 2 ] ; s#wf_cpu_pid_param param ; } 
wf_cpu_pid_init extern void wf_cpu_pid_init ( s#wf_cpu_pid_state * , s#wf_cpu_pid_param * ) 
wf_cpu_pid_run extern t#s32 wf_cpu_pid_run ( s#wf_cpu_pid_state * , t#s32 , t#s32 ) 

/* drivers/macintosh/windfarm_smu_sat.o */
smu_sat_get_sdb_partition extern s#smu_sdbp_header * smu_sat_get_sdb_partition ( unsigned int , int , unsigned int * ) 

/* drivers/md/bitmap.o */
s#bitmap_page struct bitmap_page { char * map ; unsigned int hijacked : 1 ; unsigned int pending : 1 ; unsigned int count : 30 ; } 
s#bitmap_counts struct bitmap_counts { t#spinlock_t lock ; s#bitmap_page * bp ; unsigned long pages ; unsigned long missing_pages ; unsigned long chunkshift ; unsigned long chunks ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#mdk_rdev_s struct mdk_rdev_s { s#list_head same_set ; t#sector_t sectors ; t#mddev_t * mddev ; int last_events ; s#block_device * meta_bdev ; s#block_device * bdev ; s#page * sb_page ; int sb_loaded ; t#__u64 sb_events ; t#sector_t data_offset ; t#sector_t new_data_offset ; t#sector_t sb_start ; int sb_size ; int preferred_minor ; s#kobject kobj ; unsigned long flags ; t#wait_queue_head_t blocked_wait ; int desc_nr ; int raid_disk ; int new_raid_disk ; int saved_raid_disk ; t#sector_t recovery_offset ; t#atomic_t nr_pending ; t#atomic_t read_errors ; s#timespec last_read_error ; t#atomic_t corrected_errors ; s#work_struct del_work ; s#sysfs_dirent * sysfs_state ; } 
t#mdk_rdev_t typedef s#mdk_rdev_s mdk_rdev_t 
s#mdk_personality struct mdk_personality { char * name ; int level ; s#list_head list ; s#module * owner ; int ( * make_request ) ( t#mddev_t * , s#bio * ) ; int ( * run ) ( t#mddev_t * ) ; int ( * stop ) ( t#mddev_t * ) ; void ( * status ) ( s#seq_file * , t#mddev_t * ) ; void ( * error_handler ) ( t#mddev_t * , t#mdk_rdev_t * ) ; int ( * hot_add_disk ) ( t#mddev_t * , t#mdk_rdev_t * ) ; int ( * hot_remove_disk ) ( t#mddev_t * , int ) ; int ( * spare_active ) ( t#mddev_t * ) ; t#sector_t ( * sync_request ) ( t#mddev_t * , t#sector_t , int * , int ) ; int ( * resize ) ( t#mddev_t * , t#sector_t ) ; t#sector_t ( * size ) ( t#mddev_t * , t#sector_t , int ) ; int ( * check_reshape ) ( t#mddev_t * ) ; int ( * start_reshape ) ( t#mddev_t * ) ; void ( * finish_reshape ) ( t#mddev_t * ) ; void ( * quiesce ) ( t#mddev_t * , int ) ; void * ( * takeover ) ( t#mddev_t * ) ; } 
s#mdk_thread_s struct mdk_thread_s { void ( * run ) ( t#mddev_t * ) ; t#mddev_t * mddev ; t#wait_queue_head_t wqueue ; unsigned long flags ; s#task_struct * tsk ; unsigned long timeout ; } 
s#mddev_s struct mddev_s { void * private ; s#mdk_personality * pers ; t#dev_t unit ; int md_minor ; s#list_head disks ; unsigned long flags ; int suspended ; t#atomic_t active_io ; int ro ; int sysfs_active ; int ready ; s#gendisk * gendisk ; s#kobject kobj ; int hold_active ; int major_version , minor_version , patch_version ; int persistent ; int external ; char metadata_type [ 17 ] ; int chunk_sectors ; t#time_t ctime , utime ; int level , layout ; char clevel [ 16 ] ; int raid_disks ; int max_disks ; t#sector_t dev_sectors ; t#sector_t array_sectors ; int external_size ; t#__u64 events ; int can_decrease_events ; char uuid [ 16 ] ; t#sector_t reshape_position ; int delta_disks , new_level , new_layout ; int new_chunk_sectors ; int reshape_backwards ; t#atomic_t plug_cnt ; s#mdk_thread_s * thread ; s#mdk_thread_s * sync_thread ; t#sector_t curr_resync ; t#sector_t curr_resync_completed ; unsigned long resync_mark ; t#sector_t resync_mark_cnt ; t#sector_t curr_mark_cnt ; t#sector_t resync_max_sectors ; t#sector_t resync_mismatches ; t#sector_t suspend_lo ; t#sector_t suspend_hi ; int sync_speed_min ; int sync_speed_max ; int parallel_resync ; int ok_start_degraded ; unsigned long recovery ; int recovery_disabled ; int in_sync ; s#mutex open_mutex ; s#mutex reconfig_mutex ; t#atomic_t active ; t#atomic_t openers ; int changed ; int degraded ; int merge_check_needed ; t#atomic_t recovery_active ; t#wait_queue_head_t recovery_wait ; t#sector_t recovery_cp ; t#sector_t resync_min ; t#sector_t resync_max ; s#sysfs_dirent * sysfs_state ; s#sysfs_dirent * sysfs_action ; s#work_struct del_work ; t#spinlock_t write_lock ; t#wait_queue_head_t sb_wait ; t#atomic_t pending_writes ; unsigned int safemode ; unsigned int safemode_delay ; s#timer_list safemode_timer ; t#atomic_t writes_pending ; s#request_queue * queue ; s#bitmap * bitmap ; struct { s#file * file ; t#loff_t offset ; unsigned long space ; t#loff_t default_offset ; unsigned long default_space ; s#mutex mutex ; unsigned long chunksize ; unsigned long daemon_sleep ; unsigned long max_write_behind ; int external ; } bitmap_info ; t#atomic_t max_corr_read_errors ; s#list_head all_mddevs ; s#attribute_group * to_remove ; s#bio_set * bio_set ; s#bio * flush_bio ; t#atomic_t flush_pending ; s#work_struct flush_work ; s#work_struct event_work ; void ( * sync_super ) ( t#mddev_t * , t#mdk_rdev_t * ) ; } 
t#mddev_t typedef s#mddev_s mddev_t 
s#bitmap_storage struct bitmap_storage { s#file * file ; s#page * sb_page ; s#page * * filemap ; unsigned long * filemap_attr ; unsigned long file_pages ; unsigned long bytes ; } 
s#bitmap struct bitmap { s#bitmap_counts counts ; t#mddev_t * mddev ; t#__u64 events_cleared ; int need_sync ; s#bitmap_storage storage ; unsigned long flags ; int allclean ; t#atomic_t behind_writes ; unsigned long behind_writes_used ; unsigned long daemon_lastrun ; unsigned long last_end_sync ; t#atomic_t pending_writes ; t#wait_queue_head_t write_wait ; t#wait_queue_head_t overflow_wait ; t#wait_queue_head_t behind_wait ; s#sysfs_dirent * sysfs_can_clear ; } 
bitmap_unplug void bitmap_unplug ( s#bitmap * ) 
bitmap_startwrite int bitmap_startwrite ( s#bitmap * , t#sector_t , unsigned long , int ) 
bitmap_endwrite void bitmap_endwrite ( s#bitmap * , t#sector_t , unsigned long , int , int ) 
bitmap_start_sync int bitmap_start_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
bitmap_end_sync void bitmap_end_sync ( s#bitmap * , t#sector_t , t#sector_t * , int ) 
bitmap_close_sync void bitmap_close_sync ( s#bitmap * ) 
bitmap_cond_end_sync void bitmap_cond_end_sync ( s#bitmap * , t#sector_t ) 
bitmap_load int bitmap_load ( t#mddev_t * ) 
bitmap_resize int bitmap_resize ( s#bitmap * , t#sector_t , int , int ) 

/* drivers/md/dm.o */
u#map_info union map_info { void * ptr ; unsigned long long ll ; unsigned target_request_nr ; } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##timer_rand_state
s##disk_events
s##bsg_job
s##throtl_data
dm_get_rq_mapinfo u#map_info * dm_get_rq_mapinfo ( s#request * ) 
dm_requeue_unmapped_request void dm_requeue_unmapped_request ( s#request * ) 
dm_kill_unmapped_request void dm_kill_unmapped_request ( s#request * , int ) 
s##dm_table
t#dm_ctr_fn typedef int ( * dm_ctr_fn ) ( s#dm_target * , unsigned int , char * * ) 
t#dm_dtr_fn typedef void ( * dm_dtr_fn ) ( s#dm_target * ) 
t#dm_map_fn typedef int ( * dm_map_fn ) ( s#dm_target * , s#bio * , u#map_info * ) 
t#dm_map_request_fn typedef int ( * dm_map_request_fn ) ( s#dm_target * , s#request * , u#map_info * ) 
t#dm_endio_fn typedef int ( * dm_endio_fn ) ( s#dm_target * , s#bio * , int , u#map_info * ) 
t#dm_request_endio_fn typedef int ( * dm_request_endio_fn ) ( s#dm_target * , s#request * , int , u#map_info * ) 
t#dm_flush_fn typedef void ( * dm_flush_fn ) ( s#dm_target * ) 
t#dm_presuspend_fn typedef void ( * dm_presuspend_fn ) ( s#dm_target * ) 
t#dm_postsuspend_fn typedef void ( * dm_postsuspend_fn ) ( s#dm_target * ) 
t#dm_preresume_fn typedef int ( * dm_preresume_fn ) ( s#dm_target * ) 
t#dm_resume_fn typedef void ( * dm_resume_fn ) ( s#dm_target * ) 
t#status_type_t typedef enum { STATUSTYPE_INFO , STATUSTYPE_TABLE } status_type_t 
t#dm_status_fn typedef int ( * dm_status_fn ) ( s#dm_target * , t#status_type_t , unsigned , char * , unsigned ) 
t#dm_message_fn typedef int ( * dm_message_fn ) ( s#dm_target * , unsigned , char * * ) 
t#dm_ioctl_fn typedef int ( * dm_ioctl_fn ) ( s#dm_target * , unsigned int , unsigned long ) 
t#dm_merge_fn typedef int ( * dm_merge_fn ) ( s#dm_target * , s#bvec_merge_data * , s#bio_vec * , int ) 
t#dm_busy_fn typedef int ( * dm_busy_fn ) ( s#dm_target * ) 
s#dm_dev struct dm_dev { s#block_device * bdev ; t#fmode_t mode ; char name [ 16 ] ; } 
t#iterate_devices_callout_fn typedef int ( * iterate_devices_callout_fn ) ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
t#dm_iterate_devices_fn typedef int ( * dm_iterate_devices_fn ) ( s#dm_target * , t#iterate_devices_callout_fn , void * ) 
t#dm_io_hints_fn typedef void ( * dm_io_hints_fn ) ( s#dm_target * , s#queue_limits * ) 
s#target_type struct target_type { t#uint64_t features ; const char * name ; s#module * module ; unsigned version [ 3 ] ; t#dm_ctr_fn ctr ; t#dm_dtr_fn dtr ; t#dm_map_fn map ; t#dm_map_request_fn map_rq ; t#dm_endio_fn end_io ; t#dm_request_endio_fn rq_end_io ; t#dm_flush_fn flush ; t#dm_presuspend_fn presuspend ; t#dm_postsuspend_fn postsuspend ; t#dm_preresume_fn preresume ; t#dm_resume_fn resume ; t#dm_status_fn status ; t#dm_message_fn message ; t#dm_ioctl_fn ioctl ; t#dm_merge_fn merge ; t#dm_busy_fn busy ; t#dm_iterate_devices_fn iterate_devices ; t#dm_io_hints_fn io_hints ; s#list_head list ; } 
s#dm_target struct dm_target { s#dm_table * table ; s#target_type * type ; t#sector_t begin ; t#sector_t len ; t#uint32_t max_io_len ; unsigned num_flush_requests ; unsigned num_discard_requests ; void * private ; char * error ; t#bool flush_supported : 1 ; unsigned discards_supported : 1 ; unsigned split_discard_requests : 1 ; unsigned discard_zeroes_data_unsupported : 1 ; } 
dm_set_target_max_io_len int dm_set_target_max_io_len ( s#dm_target * , t#sector_t ) 
dm_dispatch_request void dm_dispatch_request ( s#request * ) 
dm_underlying_device_busy int dm_underlying_device_busy ( s#request_queue * ) 
s##mapped_device
dm_get_md s#mapped_device * dm_get_md ( t#dev_t ) 
dm_device_name const char * dm_device_name ( s#mapped_device * ) 
dm_put void dm_put ( s#mapped_device * ) 
dm_disk s#gendisk * dm_disk ( s#mapped_device * ) 
dm_suspended int dm_suspended ( s#dm_target * ) 
dm_noflush_suspending int dm_noflush_suspending ( s#dm_target * ) 
dm_get_mapinfo u#map_info * dm_get_mapinfo ( s#bio * ) 

/* drivers/md/dm-bufio.o */
s##dm_bufio_client
s##dm_buffer
dm_bufio_get void * dm_bufio_get ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_read void * dm_bufio_read ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_new void * dm_bufio_new ( s#dm_bufio_client * , t#sector_t , s#dm_buffer * * ) 
dm_bufio_prefetch void dm_bufio_prefetch ( s#dm_bufio_client * , t#sector_t , unsigned ) 
dm_bufio_release void dm_bufio_release ( s#dm_buffer * ) 
dm_bufio_mark_buffer_dirty void dm_bufio_mark_buffer_dirty ( s#dm_buffer * ) 
dm_bufio_write_dirty_buffers_async void dm_bufio_write_dirty_buffers_async ( s#dm_bufio_client * ) 
dm_bufio_write_dirty_buffers int dm_bufio_write_dirty_buffers ( s#dm_bufio_client * ) 
dm_bufio_issue_flush int dm_bufio_issue_flush ( s#dm_bufio_client * ) 
dm_bufio_release_move void dm_bufio_release_move ( s#dm_buffer * , t#sector_t ) 
dm_bufio_get_block_size unsigned dm_bufio_get_block_size ( s#dm_bufio_client * ) 
dm_bufio_get_device_size t#sector_t dm_bufio_get_device_size ( s#dm_bufio_client * ) 
dm_bufio_get_block_number t#sector_t dm_bufio_get_block_number ( s#dm_buffer * ) 
dm_bufio_get_block_data void * dm_bufio_get_block_data ( s#dm_buffer * ) 
dm_bufio_get_aux_data void * dm_bufio_get_aux_data ( s#dm_buffer * ) 
dm_bufio_get_client s#dm_bufio_client * dm_bufio_get_client ( s#dm_buffer * ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
dm_bufio_client_create s#dm_bufio_client * dm_bufio_client_create ( s#block_device * , unsigned , unsigned , unsigned , void ( * ) ( s#dm_buffer * ) , void ( * ) ( s#dm_buffer * ) ) 
dm_bufio_client_destroy void dm_bufio_client_destroy ( s#dm_bufio_client * ) 

/* drivers/md/dm-exception-store.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dm_snapshot
s#dm_exception_store struct dm_exception_store { s#dm_exception_store_type * type ; s#dm_snapshot * snap ; unsigned chunk_size ; unsigned chunk_mask ; unsigned chunk_shift ; void * context ; } 
t#chunk_t typedef t#sector_t chunk_t 
s#dm_exception struct dm_exception { s#list_head hash_list ; t#chunk_t old_chunk ; t#chunk_t new_chunk ; } 
s#dm_exception_store_type struct dm_exception_store_type { const char * name ; s#module * module ; int ( * ctr ) ( s#dm_exception_store * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_exception_store * ) ; int ( * read_metadata ) ( s#dm_exception_store * , int ( * ) ( void * , t#chunk_t , t#chunk_t ) , void * ) ; int ( * prepare_exception ) ( s#dm_exception_store * , s#dm_exception * ) ; void ( * commit_exception ) ( s#dm_exception_store * , s#dm_exception * , void ( * ) ( void * , int ) , void * ) ; int ( * prepare_merge ) ( s#dm_exception_store * , t#chunk_t * , t#chunk_t * ) ; int ( * commit_merge ) ( s#dm_exception_store * , int ) ; void ( * drop_snapshot ) ( s#dm_exception_store * ) ; unsigned ( * status ) ( s#dm_exception_store * , t#status_type_t , char * , unsigned ) ; void ( * usage ) ( s#dm_exception_store * , t#sector_t * , t#sector_t * , t#sector_t * ) ; s#list_head list ; } 
dm_exception_store_type_register int dm_exception_store_type_register ( s#dm_exception_store_type * ) 
dm_exception_store_type_unregister int dm_exception_store_type_unregister ( s#dm_exception_store_type * ) 
s##dm_table
dm_exception_store_create int dm_exception_store_create ( s#dm_target * , int , char * * , s#dm_snapshot * , unsigned * , s#dm_exception_store * * ) 
dm_exception_store_destroy void dm_exception_store_destroy ( s#dm_exception_store * ) 

/* drivers/md/dm-io.o */
s##dm_io_client
dm_io_client_create s#dm_io_client * dm_io_client_create ( void ) 
dm_io_client_destroy void dm_io_client_destroy ( s#dm_io_client * ) 
e#dm_io_mem_type enum dm_io_mem_type { DM_IO_PAGE_LIST , DM_IO_BVEC , DM_IO_VMA , DM_IO_KMEM , } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s#page_list struct page_list { s#page_list * next ; s#page * page ; } 
s#dm_io_memory struct dm_io_memory { e#dm_io_mem_type type ; unsigned offset ; union { s#page_list * pl ; s#bio_vec * bvec ; void * vma ; void * addr ; } ptr ; } 
t#io_notify_fn typedef void ( * io_notify_fn ) ( unsigned long , void * ) 
s#dm_io_notify struct dm_io_notify { t#io_notify_fn fn ; void * context ; } 
s#dm_io_request struct dm_io_request { int bi_rw ; s#dm_io_memory mem ; s#dm_io_notify notify ; s#dm_io_client * client ; } 
s#dm_io_region struct dm_io_region { s#block_device * bdev ; t#sector_t sector ; t#sector_t count ; } 
dm_io int dm_io ( s#dm_io_request * , unsigned , s#dm_io_region * , unsigned long * ) 

/* drivers/md/dm-kcopyd.o */
s##dm_kcopyd_client
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
t#dm_kcopyd_notify_fn typedef void ( * dm_kcopyd_notify_fn ) ( int , unsigned long , void * ) 
dm_kcopyd_copy int dm_kcopyd_copy ( s#dm_kcopyd_client * , s#dm_io_region * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_client_create s#dm_kcopyd_client * dm_kcopyd_client_create ( void ) 
dm_kcopyd_zero int dm_kcopyd_zero ( s#dm_kcopyd_client * , unsigned , s#dm_io_region * , unsigned , t#dm_kcopyd_notify_fn , void * ) 
dm_kcopyd_client_destroy void dm_kcopyd_client_destroy ( s#dm_kcopyd_client * ) 

/* drivers/md/dm-log.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dm_table
s#dm_dirty_log struct dm_dirty_log { s#dm_dirty_log_type * type ; int ( * flush_callback_fn ) ( s#dm_target * ) ; void * context ; } 
t#region_t typedef t#sector_t region_t 
s#dm_dirty_log_type struct dm_dirty_log_type { const char * name ; s#module * module ; s#list_head list ; int ( * ctr ) ( s#dm_dirty_log * , s#dm_target * , unsigned , char * * ) ; void ( * dtr ) ( s#dm_dirty_log * ) ; int ( * presuspend ) ( s#dm_dirty_log * ) ; int ( * postsuspend ) ( s#dm_dirty_log * ) ; int ( * resume ) ( s#dm_dirty_log * ) ; t#uint32_t ( * get_region_size ) ( s#dm_dirty_log * ) ; int ( * is_clean ) ( s#dm_dirty_log * , t#region_t ) ; int ( * in_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; int ( * flush ) ( s#dm_dirty_log * ) ; void ( * mark_region ) ( s#dm_dirty_log * , t#region_t ) ; void ( * clear_region ) ( s#dm_dirty_log * , t#region_t ) ; int ( * get_resync_work ) ( s#dm_dirty_log * , t#region_t * ) ; void ( * set_region_sync ) ( s#dm_dirty_log * , t#region_t , int ) ; t#region_t ( * get_sync_count ) ( s#dm_dirty_log * ) ; int ( * status ) ( s#dm_dirty_log * , t#status_type_t , char * , unsigned ) ; int ( * is_remote_recovering ) ( s#dm_dirty_log * , t#region_t ) ; } 
dm_dirty_log_type_register int dm_dirty_log_type_register ( s#dm_dirty_log_type * ) 
dm_dirty_log_type_unregister int dm_dirty_log_type_unregister ( s#dm_dirty_log_type * ) 
dm_dirty_log_create s#dm_dirty_log * dm_dirty_log_create ( const char * , s#dm_target * , int ( * ) ( s#dm_target * ) , unsigned , char * * ) 
dm_dirty_log_destroy void dm_dirty_log_destroy ( s#dm_dirty_log * ) 

/* drivers/md/dm-memcache.o */
s##dm_mem_cache_client
dm_mem_cache_client_create s#dm_mem_cache_client * dm_mem_cache_client_create ( unsigned , unsigned , unsigned ) 
dm_mem_cache_client_destroy void dm_mem_cache_client_destroy ( s#dm_mem_cache_client * ) 
dm_mem_cache_grow int dm_mem_cache_grow ( s#dm_mem_cache_client * , unsigned ) 
dm_mem_cache_shrink int dm_mem_cache_shrink ( s#dm_mem_cache_client * , unsigned ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s#dm_mem_cache_object struct dm_mem_cache_object { s#page_list * pl ; void * private ; } 
dm_mem_cache_alloc s#dm_mem_cache_object * dm_mem_cache_alloc ( s#dm_mem_cache_client * ) 
dm_mem_cache_free void dm_mem_cache_free ( s#dm_mem_cache_client * , s#dm_mem_cache_object * ) 

/* drivers/md/dm-path-selector.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#path_selector struct path_selector { s#path_selector_type * type ; void * context ; } 
s#dm_path struct dm_path { char pdev [ 16 ] ; s#dm_dev * dev ; void * pscontext ; } 
s#path_selector_type struct path_selector_type { char * name ; s#module * module ; unsigned int table_args ; unsigned int info_args ; int ( * create ) ( s#path_selector * , unsigned , char * * ) ; void ( * destroy ) ( s#path_selector * ) ; int ( * add_path ) ( s#path_selector * , s#dm_path * , int , char * * , char * * ) ; s#dm_path * ( * select_path ) ( s#path_selector * , unsigned * , t#size_t ) ; void ( * fail_path ) ( s#path_selector * , s#dm_path * ) ; int ( * reinstate_path ) ( s#path_selector * , s#dm_path * ) ; int ( * status ) ( s#path_selector * , s#dm_path * , t#status_type_t , char * , unsigned int ) ; int ( * start_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; int ( * end_io ) ( s#path_selector * , s#dm_path * , t#size_t ) ; } 
dm_register_path_selector int dm_register_path_selector ( s#path_selector_type * ) 
dm_unregister_path_selector int dm_unregister_path_selector ( s#path_selector_type * ) 

/* drivers/md/dm-region-hash.o */
s##dm_region_hash
dm_rh_sector_to_region t#region_t dm_rh_sector_to_region ( s#dm_region_hash * , t#sector_t ) 
dm_rh_region_to_sector t#sector_t dm_rh_region_to_sector ( s#dm_region_hash * , t#region_t ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
dm_rh_bio_to_region t#region_t dm_rh_bio_to_region ( s#dm_region_hash * , s#bio * ) 
s##dm_region
dm_rh_region_context void * dm_rh_region_context ( s#dm_region * ) 
dm_rh_get_region_key t#region_t dm_rh_get_region_key ( s#dm_region * ) 
dm_rh_get_region_size t#sector_t dm_rh_get_region_size ( s#dm_region_hash * ) 
s##dm_table
dm_region_hash_create s#dm_region_hash * dm_region_hash_create ( void * , void ( * ) ( void * , s#bio_list * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , t#sector_t , unsigned , s#dm_dirty_log * , t#uint32_t , t#region_t ) 
dm_region_hash_destroy void dm_region_hash_destroy ( s#dm_region_hash * ) 
dm_rh_dirty_log s#dm_dirty_log * dm_rh_dirty_log ( s#dm_region_hash * ) 
dm_rh_get_state int dm_rh_get_state ( s#dm_region_hash * , t#region_t , int ) 
dm_rh_mark_nosync void dm_rh_mark_nosync ( s#dm_region_hash * , s#bio * ) 
dm_rh_update_states void dm_rh_update_states ( s#dm_region_hash * , int ) 
dm_rh_inc void dm_rh_inc ( s#dm_region_hash * , t#region_t ) 
dm_rh_inc_pending void dm_rh_inc_pending ( s#dm_region_hash * , s#bio_list * ) 
dm_rh_dec void dm_rh_dec ( s#dm_region_hash * , t#region_t ) 
dm_rh_recovery_prepare void dm_rh_recovery_prepare ( s#dm_region_hash * ) 
dm_rh_recovery_start s#dm_region * dm_rh_recovery_start ( s#dm_region_hash * ) 
dm_rh_recovery_end void dm_rh_recovery_end ( s#dm_region * , int ) 
dm_rh_recovery_in_flight int dm_rh_recovery_in_flight ( s#dm_region_hash * ) 
dm_rh_flush int dm_rh_flush ( s#dm_region_hash * ) 
dm_rh_delay void dm_rh_delay ( s#dm_region_hash * , s#bio * ) 
dm_rh_delay_by_region void dm_rh_delay_by_region ( s#dm_region_hash * , s#bio * , t#region_t ) 
dm_rh_stop_recovery void dm_rh_stop_recovery ( s#dm_region_hash * ) 
dm_rh_start_recovery void dm_rh_start_recovery ( s#dm_region_hash * ) 

/* drivers/md/dm-snap.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##dm_snapshot
dm_snap_origin s#dm_dev * dm_snap_origin ( s#dm_snapshot * ) 
dm_snap_cow s#dm_dev * dm_snap_cow ( s#dm_snapshot * ) 

/* drivers/md/dm-table.o */
dm_vcalloc void * dm_vcalloc ( unsigned long , unsigned long ) 
s##dm_table
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
dm_get_device int dm_get_device ( s#dm_target * , const char * , t#fmode_t , s#dm_dev * * ) 
dm_set_device_limits int dm_set_device_limits ( s#dm_target * , s#dm_dev * , t#sector_t , t#sector_t , void * ) 
dm_put_device void dm_put_device ( s#dm_target * , s#dm_dev * ) 
s#dm_arg struct dm_arg { unsigned min ; unsigned max ; char * error ; } 
s#dm_arg_set struct dm_arg_set { unsigned argc ; char * * argv ; } 
dm_read_arg int dm_read_arg ( s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_read_arg_group int dm_read_arg_group ( s#dm_arg * , s#dm_arg_set * , unsigned * , char * * ) 
dm_shift_arg const char * dm_shift_arg ( s#dm_arg_set * ) 
dm_consume_args void dm_consume_args ( s#dm_arg_set * , unsigned ) 
dm_table_event void dm_table_event ( s#dm_table * ) 
dm_table_get_size t#sector_t dm_table_get_size ( s#dm_table * ) 
dm_table_get_mode t#fmode_t dm_table_get_mode ( s#dm_table * ) 
s#dm_target_callbacks struct dm_target_callbacks { s#list_head list ; int ( * congested_fn ) ( s#dm_target_callbacks * , int ) ; } 
dm_table_add_target_callbacks void dm_table_add_target_callbacks ( s#dm_table * , s#dm_target_callbacks * ) 
s##mapped_device
dm_table_get_md s#mapped_device * dm_table_get_md ( s#dm_table * ) 

/* drivers/md/dm-target.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dm_table
dm_register_target int dm_register_target ( s#target_type * ) 
dm_unregister_target void dm_unregister_target ( s#target_type * ) 

/* drivers/md/dm-uevent.o */
s##sock
s##sysfs_dirent
dm_send_uevents extern void dm_send_uevents ( s#list_head * , s#kobject * ) 
e#dm_uevent_type enum dm_uevent_type { DM_UEVENT_PATH_FAILED , DM_UEVENT_PATH_REINSTATED , } 
s##dm_table
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
dm_path_uevent extern void dm_path_uevent ( e#dm_uevent_type , s#dm_target * , const char * , unsigned ) 

/* drivers/md/md.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
bio_alloc_mddev extern s#bio * bio_alloc_mddev ( t#gfp_t , int , t#mddev_t * ) 
bio_clone_mddev extern s#bio * bio_clone_mddev ( s#bio * , t#gfp_t , t#mddev_t * ) 
md_new_event extern void md_new_event ( t#mddev_t * ) 
mddev_suspend extern void mddev_suspend ( t#mddev_t * ) 
mddev_resume extern void mddev_resume ( t#mddev_t * ) 
mddev_congested extern int mddev_congested ( t#mddev_t * , int ) 
md_flush_request extern void md_flush_request ( t#mddev_t * , s#bio * ) 
mddev_check_plugged extern int mddev_check_plugged ( t#mddev_t * ) 
mddev_init extern void mddev_init ( t#mddev_t * ) 
sync_page_io extern int sync_page_io ( t#mdk_rdev_t * , t#sector_t , int , s#page * , int , t#bool ) 
md_check_no_bitmap extern int md_check_no_bitmap ( t#mddev_t * ) 
md_integrity_register extern int md_integrity_register ( t#mddev_t * ) 
md_integrity_add_rdev extern void md_integrity_add_rdev ( t#mdk_rdev_t * , t#mddev_t * ) 
md_rdev_init extern void md_rdev_init ( t#mdk_rdev_t * ) 
md_run extern int md_run ( t#mddev_t * ) 
md_stop_writes extern void md_stop_writes ( t#mddev_t * ) 
md_stop extern void md_stop ( t#mddev_t * ) 
md_set_array_sectors extern void md_set_array_sectors ( t#mddev_t * , t#sector_t ) 
md_allow_write extern int md_allow_write ( t#mddev_t * ) 
md_do_sync extern void md_do_sync ( t#mddev_t * ) 
md_wait_for_blocked_rdev extern void md_wait_for_blocked_rdev ( t#mdk_rdev_t * , t#mddev_t * ) 
md_finish_reshape extern void md_finish_reshape ( t#mddev_t * ) 
register_md_personality extern int register_md_personality ( s#mdk_personality * ) 
unregister_md_personality extern int unregister_md_personality ( s#mdk_personality * ) 
md_error extern void md_error ( t#mddev_t * , t#mdk_rdev_t * ) 
md_done_sync extern void md_done_sync ( t#mddev_t * , int , int ) 
md_write_start extern void md_write_start ( t#mddev_t * , s#bio * ) 
md_write_end extern void md_write_end ( t#mddev_t * ) 
t#mdk_thread_t typedef s#mdk_thread_s mdk_thread_t 
md_register_thread extern t#mdk_thread_t * md_register_thread ( void ( * ) ( t#mddev_t * ) , t#mddev_t * , const char * ) 
md_unregister_thread extern void md_unregister_thread ( t#mdk_thread_t * * ) 
md_wakeup_thread extern void md_wakeup_thread ( t#mdk_thread_t * ) 
md_check_recovery extern void md_check_recovery ( t#mddev_t * ) 

/* drivers/md/persistent-data/dm-block-manager.o */
t#dm_block_t typedef t#uint64_t dm_block_t 
s##dm_block
dm_block_location t#dm_block_t dm_block_location ( s#dm_block * ) 
dm_block_data void * dm_block_data ( s#dm_block * ) 
s##dm_block_manager
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
dm_block_manager_create s#dm_block_manager * dm_block_manager_create ( s#block_device * , unsigned , unsigned , unsigned ) 
dm_block_manager_destroy void dm_block_manager_destroy ( s#dm_block_manager * ) 
dm_bm_block_size unsigned dm_bm_block_size ( s#dm_block_manager * ) 
s#dm_block_validator struct dm_block_validator { const char * name ; void ( * prepare_for_write ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; int ( * check ) ( s#dm_block_validator * , s#dm_block * , t#size_t ) ; } 
dm_bm_read_lock int dm_bm_read_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock int dm_bm_write_lock ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_write_lock_zero int dm_bm_write_lock_zero ( s#dm_block_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_bm_unlock int dm_bm_unlock ( s#dm_block * ) 
dm_bm_set_read_only void dm_bm_set_read_only ( s#dm_block_manager * ) 
dm_bm_checksum t#u32 dm_bm_checksum ( const void * , t#size_t , t#u32 ) 

/* drivers/md/persistent-data/dm-btree.o */
s##dm_transaction_manager
s#dm_btree_value_type struct dm_btree_value_type { void * context ; t#uint32_t size ; void ( * inc ) ( void * , void * ) ; void ( * dec ) ( void * , void * ) ; int ( * equal ) ( void * , void * , void * ) ; } 
s#dm_btree_info struct dm_btree_info { s#dm_transaction_manager * tm ; unsigned levels ; s#dm_btree_value_type value_type ; } 
dm_btree_empty int dm_btree_empty ( s#dm_btree_info * , t#dm_block_t * ) 
dm_btree_del int dm_btree_del ( s#dm_btree_info * , t#dm_block_t ) 
dm_btree_lookup int dm_btree_lookup ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * ) 
dm_btree_insert int dm_btree_insert ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * ) 
dm_btree_insert_notify int dm_btree_insert_notify ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , void * , t#dm_block_t * , int * ) 
dm_btree_find_highest_key int dm_btree_find_highest_key ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * ) 

/* drivers/md/persistent-data/dm-btree-remove.o */
s##dm_transaction_manager
dm_btree_remove int dm_btree_remove ( s#dm_btree_info * , t#dm_block_t , t#uint64_t * , t#dm_block_t * ) 

/* drivers/md/persistent-data/dm-space-map-disk.o */
s#dm_space_map struct dm_space_map { void ( * destroy ) ( s#dm_space_map * ) ; int ( * extend ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * get_nr_blocks ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_nr_free ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * get_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t * ) ; int ( * count_is_more_than_one ) ( s#dm_space_map * , t#dm_block_t , int * ) ; int ( * set_count ) ( s#dm_space_map * , t#dm_block_t , t#uint32_t ) ; int ( * commit ) ( s#dm_space_map * ) ; int ( * inc_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * dec_block ) ( s#dm_space_map * , t#dm_block_t ) ; int ( * new_block ) ( s#dm_space_map * , t#dm_block_t * ) ; int ( * root_size ) ( s#dm_space_map * , t#size_t * ) ; int ( * copy_root ) ( s#dm_space_map * , void * , t#size_t ) ; } 
s##dm_transaction_manager
dm_sm_disk_create s#dm_space_map * dm_sm_disk_create ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_sm_disk_open s#dm_space_map * dm_sm_disk_open ( s#dm_transaction_manager * , void * , t#size_t ) 

/* drivers/md/persistent-data/dm-transaction-manager.o */
s##dm_transaction_manager
dm_tm_create_non_blocking_clone s#dm_transaction_manager * dm_tm_create_non_blocking_clone ( s#dm_transaction_manager * ) 
dm_tm_destroy void dm_tm_destroy ( s#dm_transaction_manager * ) 
dm_tm_pre_commit int dm_tm_pre_commit ( s#dm_transaction_manager * ) 
s##dm_block
dm_tm_commit int dm_tm_commit ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_shadow_block int dm_tm_shadow_block ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * , int * ) 
dm_tm_read_lock int dm_tm_read_lock ( s#dm_transaction_manager * , t#dm_block_t , s#dm_block_validator * , s#dm_block * * ) 
dm_tm_unlock int dm_tm_unlock ( s#dm_transaction_manager * , s#dm_block * ) 
dm_tm_inc void dm_tm_inc ( s#dm_transaction_manager * , t#dm_block_t ) 
dm_tm_dec void dm_tm_dec ( s#dm_transaction_manager * , t#dm_block_t ) 
s##dm_block_manager
dm_tm_create_with_sm int dm_tm_create_with_sm ( s#dm_block_manager * , t#dm_block_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 
dm_tm_open_with_sm int dm_tm_open_with_sm ( s#dm_block_manager * , t#dm_block_t , void * , t#size_t , s#dm_transaction_manager * * , s#dm_space_map * * ) 

/* drivers/md/raid1.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
md_raid1_congested extern int md_raid1_congested ( t#mddev_t * , int ) 

/* drivers/md/raid5.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
md_raid5_congested extern int md_raid5_congested ( t#mddev_t * , int ) 
raid5_set_cache_size extern int raid5_set_cache_size ( t#mddev_t * , int ) 

/* drivers/media/common/saa7146_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#v4l2_dbg_match struct v4l2_dbg_match { t#__u32 type ; union { t#__u32 addr ; char name [ 32 ] ; } ; } 
s#v4l2_dbg_chip_ident struct v4l2_dbg_chip_ident { s#v4l2_dbg_match match ; t#__u32 ident ; t#__u32 revision ; } 
s#v4l2_subdev_io_pin_config struct v4l2_subdev_io_pin_config { t#u32 flags ; t#u8 pin ; t#u8 function ; t#u8 value ; t#u8 strength ; } 
e#v4l2_ctrl_type enum v4l2_ctrl_type { V4L2_CTRL_TYPE_INTEGER = 1 , V4L2_CTRL_TYPE_BOOLEAN = 2 , V4L2_CTRL_TYPE_MENU = 3 , V4L2_CTRL_TYPE_BUTTON = 4 , V4L2_CTRL_TYPE_INTEGER64 = 5 , V4L2_CTRL_TYPE_CTRL_CLASS = 6 , V4L2_CTRL_TYPE_STRING = 7 , } 
s#v4l2_queryctrl struct v4l2_queryctrl { t#__u32 id ; e#v4l2_ctrl_type type ; t#__u8 name [ 32 ] ; t#__s32 minimum ; t#__s32 maximum ; t#__s32 step ; t#__s32 default_value ; t#__u32 flags ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_control struct v4l2_control { t#__u32 id ; t#__s32 value ; } 
s#v4l2_ext_control struct v4l2_ext_control { t#__u32 id ; t#__u32 size ; t#__u32 reserved2 [ 1 ] ; union { t#__s32 value ; t#__s64 value64 ; char * string ; } ; } 
s#v4l2_ext_controls struct v4l2_ext_controls { t#__u32 ctrl_class ; t#__u32 count ; t#__u32 error_idx ; t#__u32 reserved [ 2 ] ; s#v4l2_ext_control * controls ; } 
s#v4l2_querymenu struct v4l2_querymenu { t#__u32 id ; t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 reserved ; } 
t#v4l2_std_id typedef t#__u64 v4l2_std_id 
s#v4l2_file_operations struct v4l2_file_operations { s#module * owner ; t#ssize_t ( * read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * write ) ( s#file * , const char * , t#size_t , t#loff_t * ) ; unsigned int ( * poll ) ( s#file * , s#poll_table_struct * ) ; long ( * ioctl ) ( s#file * , unsigned int , unsigned long ) ; long ( * unlocked_ioctl ) ( s#file * , unsigned int , unsigned long ) ; unsigned long ( * get_unmapped_area ) ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) ; int ( * mmap ) ( s#file * , s#vm_area_struct * ) ; int ( * open ) ( s#file * ) ; int ( * release ) ( s#file * ) ; } 
s##v4l2_ctrl_handler
s#v4l2_prio_state struct v4l2_prio_state { t#atomic_t prios [ 4 ] ; } 
s##v4l2_ioctl_ops
s#video_device struct video_device { const s#v4l2_file_operations * fops ; s#device dev ; s#cdev * cdev ; s#device * parent ; s#v4l2_device * v4l2_dev ; s#v4l2_ctrl_handler * ctrl_handler ; s#v4l2_prio_state * prio ; char name [ 32 ] ; int vfl_type ; int minor ; t#u16 num ; unsigned long flags ; int index ; t#spinlock_t fh_lock ; s#list_head fh_list ; int debug ; t#v4l2_std_id tvnorms ; t#v4l2_std_id current_norm ; void ( * release ) ( s#video_device * ) ; const s#v4l2_ioctl_ops * ioctl_ops ; s#mutex * lock ; } 
s##v4l2_events
E#V4L2_PRIORITY_INTERACTIVE 2 
e#v4l2_priority enum v4l2_priority { V4L2_PRIORITY_UNSET = 0 , V4L2_PRIORITY_BACKGROUND = 1 , V4L2_PRIORITY_INTERACTIVE = 2 , V4L2_PRIORITY_RECORD = 3 , V4L2_PRIORITY_DEFAULT = E#V4L2_PRIORITY_INTERACTIVE , } 
s#v4l2_fh struct v4l2_fh { s#list_head list ; s#video_device * vdev ; s#v4l2_events * events ; e#v4l2_priority prio ; } 
s#v4l2_event_subscription struct v4l2_event_subscription { t#__u32 type ; t#__u32 reserved [ 7 ] ; } 
s#v4l2_subdev_core_ops struct v4l2_subdev_core_ops { int ( * g_chip_ident ) ( s#v4l2_subdev * , s#v4l2_dbg_chip_ident * ) ; int ( * log_status ) ( s#v4l2_subdev * ) ; int ( * s_io_pin_config ) ( s#v4l2_subdev * , t#size_t , s#v4l2_subdev_io_pin_config * ) ; int ( * init ) ( s#v4l2_subdev * , t#u32 ) ; int ( * load_fw ) ( s#v4l2_subdev * ) ; int ( * reset ) ( s#v4l2_subdev * , t#u32 ) ; int ( * s_gpio ) ( s#v4l2_subdev * , t#u32 ) ; int ( * queryctrl ) ( s#v4l2_subdev * , s#v4l2_queryctrl * ) ; int ( * g_ctrl ) ( s#v4l2_subdev * , s#v4l2_control * ) ; int ( * s_ctrl ) ( s#v4l2_subdev * , s#v4l2_control * ) ; int ( * g_ext_ctrls ) ( s#v4l2_subdev * , s#v4l2_ext_controls * ) ; int ( * s_ext_ctrls ) ( s#v4l2_subdev * , s#v4l2_ext_controls * ) ; int ( * try_ext_ctrls ) ( s#v4l2_subdev * , s#v4l2_ext_controls * ) ; int ( * querymenu ) ( s#v4l2_subdev * , s#v4l2_querymenu * ) ; int ( * s_std ) ( s#v4l2_subdev * , t#v4l2_std_id ) ; long ( * ioctl ) ( s#v4l2_subdev * , unsigned int , void * ) ; int ( * s_power ) ( s#v4l2_subdev * , int ) ; int ( * interrupt_service_routine ) ( s#v4l2_subdev * , t#u32 , t#bool * ) ; int ( * subscribe_event ) ( s#v4l2_subdev * , s#v4l2_fh * , s#v4l2_event_subscription * ) ; int ( * unsubscribe_event ) ( s#v4l2_subdev * , s#v4l2_fh * , s#v4l2_event_subscription * ) ; } 
e#v4l2_tuner_type enum v4l2_tuner_type { V4L2_TUNER_RADIO = 1 , V4L2_TUNER_ANALOG_TV = 2 , V4L2_TUNER_DIGITAL_TV = 3 , } 
s#v4l2_frequency struct v4l2_frequency { t#__u32 tuner ; e#v4l2_tuner_type type ; t#__u32 frequency ; t#__u32 reserved [ 8 ] ; } 
s#v4l2_tuner struct v4l2_tuner { t#__u32 index ; t#__u8 name [ 32 ] ; e#v4l2_tuner_type type ; t#__u32 capability ; t#__u32 rangelow ; t#__u32 rangehigh ; t#__u32 rxsubchans ; t#__u32 audmode ; t#__s32 signal ; t#__s32 afc ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_modulator struct v4l2_modulator { t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 capability ; t#__u32 rangelow ; t#__u32 rangehigh ; t#__u32 txsubchans ; t#__u32 reserved [ 4 ] ; } 
s##tuner_setup
s#v4l2_priv_tun_config struct v4l2_priv_tun_config { int tuner ; void * priv ; } 
s#v4l2_subdev_tuner_ops struct v4l2_subdev_tuner_ops { int ( * s_radio ) ( s#v4l2_subdev * ) ; int ( * s_frequency ) ( s#v4l2_subdev * , s#v4l2_frequency * ) ; int ( * g_frequency ) ( s#v4l2_subdev * , s#v4l2_frequency * ) ; int ( * g_tuner ) ( s#v4l2_subdev * , s#v4l2_tuner * ) ; int ( * s_tuner ) ( s#v4l2_subdev * , s#v4l2_tuner * ) ; int ( * g_modulator ) ( s#v4l2_subdev * , s#v4l2_modulator * ) ; int ( * s_modulator ) ( s#v4l2_subdev * , s#v4l2_modulator * ) ; int ( * s_type_addr ) ( s#v4l2_subdev * , s#tuner_setup * ) ; int ( * s_config ) ( s#v4l2_subdev * , const s#v4l2_priv_tun_config * ) ; } 
s#v4l2_subdev_audio_ops struct v4l2_subdev_audio_ops { int ( * s_clock_freq ) ( s#v4l2_subdev * , t#u32 ) ; int ( * s_i2s_clock_freq ) ( s#v4l2_subdev * , t#u32 ) ; int ( * s_routing ) ( s#v4l2_subdev * , t#u32 , t#u32 , t#u32 ) ; int ( * s_stream ) ( s#v4l2_subdev * , int ) ; } 
e#v4l2_buf_type enum v4l2_buf_type { V4L2_BUF_TYPE_VIDEO_CAPTURE = 1 , V4L2_BUF_TYPE_VIDEO_OUTPUT = 2 , V4L2_BUF_TYPE_VIDEO_OVERLAY = 3 , V4L2_BUF_TYPE_VBI_CAPTURE = 4 , V4L2_BUF_TYPE_VBI_OUTPUT = 5 , V4L2_BUF_TYPE_SLICED_VBI_CAPTURE = 6 , V4L2_BUF_TYPE_SLICED_VBI_OUTPUT = 7 , V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY = 8 , V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE = 9 , V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE = 10 , V4L2_BUF_TYPE_PRIVATE = 0x80 , } 
s#v4l2_rect struct v4l2_rect { t#__s32 left ; t#__s32 top ; t#__s32 width ; t#__s32 height ; } 
s#v4l2_fract struct v4l2_fract { t#__u32 numerator ; t#__u32 denominator ; } 
s#v4l2_cropcap struct v4l2_cropcap { e#v4l2_buf_type type ; s#v4l2_rect bounds ; s#v4l2_rect defrect ; s#v4l2_fract pixelaspect ; } 
s#v4l2_crop struct v4l2_crop { e#v4l2_buf_type type ; s#v4l2_rect c ; } 
s#v4l2_captureparm struct v4l2_captureparm { t#__u32 capability ; t#__u32 capturemode ; s#v4l2_fract timeperframe ; t#__u32 extendedmode ; t#__u32 readbuffers ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_outputparm struct v4l2_outputparm { t#__u32 capability ; t#__u32 outputmode ; s#v4l2_fract timeperframe ; t#__u32 extendedmode ; t#__u32 writebuffers ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_streamparm struct v4l2_streamparm { e#v4l2_buf_type type ; union { s#v4l2_captureparm capture ; s#v4l2_outputparm output ; t#__u8 raw_data [ 200 ] ; } parm ; } 
s#v4l2_subdev_frame_interval struct v4l2_subdev_frame_interval { t#__u32 pad ; s#v4l2_fract interval ; t#__u32 reserved [ 9 ] ; } 
s#v4l2_frmsize_discrete struct v4l2_frmsize_discrete { t#__u32 width ; t#__u32 height ; } 
s#v4l2_frmsize_stepwise struct v4l2_frmsize_stepwise { t#__u32 min_width ; t#__u32 max_width ; t#__u32 step_width ; t#__u32 min_height ; t#__u32 max_height ; t#__u32 step_height ; } 
s#v4l2_frmsizeenum struct v4l2_frmsizeenum { t#__u32 index ; t#__u32 pixel_format ; t#__u32 type ; union { s#v4l2_frmsize_discrete discrete ; s#v4l2_frmsize_stepwise stepwise ; } ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_frmival_stepwise struct v4l2_frmival_stepwise { s#v4l2_fract min ; s#v4l2_fract max ; s#v4l2_fract step ; } 
s#v4l2_frmivalenum struct v4l2_frmivalenum { t#__u32 index ; t#__u32 pixel_format ; t#__u32 width ; t#__u32 height ; t#__u32 type ; union { s#v4l2_fract discrete ; s#v4l2_frmival_stepwise stepwise ; } ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_dv_enum_preset struct v4l2_dv_enum_preset { t#__u32 index ; t#__u32 preset ; t#__u8 name [ 32 ] ; t#__u32 width ; t#__u32 height ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_dv_preset struct v4l2_dv_preset { t#__u32 preset ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_bt_timings struct v4l2_bt_timings { t#__u32 width ; t#__u32 height ; t#__u32 interlaced ; t#__u32 polarities ; t#__u64 pixelclock ; t#__u32 hfrontporch ; t#__u32 hsync ; t#__u32 hbackporch ; t#__u32 vfrontporch ; t#__u32 vsync ; t#__u32 vbackporch ; t#__u32 il_vfrontporch ; t#__u32 il_vsync ; t#__u32 il_vbackporch ; t#__u32 reserved [ 16 ] ; } 
s#v4l2_dv_timings struct v4l2_dv_timings { t#__u32 type ; union { s#v4l2_bt_timings bt ; t#__u32 reserved [ 32 ] ; } ; } 
e#v4l2_mbus_pixelcode enum v4l2_mbus_pixelcode { V4L2_MBUS_FMT_FIXED = 0x0001 , V4L2_MBUS_FMT_RGB444_2X8_PADHI_BE = 0x1001 , V4L2_MBUS_FMT_RGB444_2X8_PADHI_LE = 0x1002 , V4L2_MBUS_FMT_RGB555_2X8_PADHI_BE = 0x1003 , V4L2_MBUS_FMT_RGB555_2X8_PADHI_LE = 0x1004 , V4L2_MBUS_FMT_BGR565_2X8_BE = 0x1005 , V4L2_MBUS_FMT_BGR565_2X8_LE = 0x1006 , V4L2_MBUS_FMT_RGB565_2X8_BE = 0x1007 , V4L2_MBUS_FMT_RGB565_2X8_LE = 0x1008 , V4L2_MBUS_FMT_Y8_1X8 = 0x2001 , V4L2_MBUS_FMT_UYVY8_1_5X8 = 0x2002 , V4L2_MBUS_FMT_VYUY8_1_5X8 = 0x2003 , V4L2_MBUS_FMT_YUYV8_1_5X8 = 0x2004 , V4L2_MBUS_FMT_YVYU8_1_5X8 = 0x2005 , V4L2_MBUS_FMT_UYVY8_2X8 = 0x2006 , V4L2_MBUS_FMT_VYUY8_2X8 = 0x2007 , V4L2_MBUS_FMT_YUYV8_2X8 = 0x2008 , V4L2_MBUS_FMT_YVYU8_2X8 = 0x2009 , V4L2_MBUS_FMT_Y10_1X10 = 0x200a , V4L2_MBUS_FMT_YUYV10_2X10 = 0x200b , V4L2_MBUS_FMT_YVYU10_2X10 = 0x200c , V4L2_MBUS_FMT_Y12_1X12 = 0x2013 , V4L2_MBUS_FMT_UYVY8_1X16 = 0x200f , V4L2_MBUS_FMT_VYUY8_1X16 = 0x2010 , V4L2_MBUS_FMT_YUYV8_1X16 = 0x2011 , V4L2_MBUS_FMT_YVYU8_1X16 = 0x2012 , V4L2_MBUS_FMT_YUYV10_1X20 = 0x200d , V4L2_MBUS_FMT_YVYU10_1X20 = 0x200e , V4L2_MBUS_FMT_SBGGR8_1X8 = 0x3001 , V4L2_MBUS_FMT_SGBRG8_1X8 = 0x3013 , V4L2_MBUS_FMT_SGRBG8_1X8 = 0x3002 , V4L2_MBUS_FMT_SRGGB8_1X8 = 0x3014 , V4L2_MBUS_FMT_SBGGR10_DPCM8_1X8 = 0x300b , V4L2_MBUS_FMT_SGBRG10_DPCM8_1X8 = 0x300c , V4L2_MBUS_FMT_SGRBG10_DPCM8_1X8 = 0x3009 , V4L2_MBUS_FMT_SRGGB10_DPCM8_1X8 = 0x300d , V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_BE = 0x3003 , V4L2_MBUS_FMT_SBGGR10_2X8_PADHI_LE = 0x3004 , V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_BE = 0x3005 , V4L2_MBUS_FMT_SBGGR10_2X8_PADLO_LE = 0x3006 , V4L2_MBUS_FMT_SBGGR10_1X10 = 0x3007 , V4L2_MBUS_FMT_SGBRG10_1X10 = 0x300e , V4L2_MBUS_FMT_SGRBG10_1X10 = 0x300a , V4L2_MBUS_FMT_SRGGB10_1X10 = 0x300f , V4L2_MBUS_FMT_SBGGR12_1X12 = 0x3008 , V4L2_MBUS_FMT_SGBRG12_1X12 = 0x3010 , V4L2_MBUS_FMT_SGRBG12_1X12 = 0x3011 , V4L2_MBUS_FMT_SRGGB12_1X12 = 0x3012 , V4L2_MBUS_FMT_JPEG_1X8 = 0x4001 , } 
s#v4l2_mbus_framefmt struct v4l2_mbus_framefmt { t#__u32 width ; t#__u32 height ; t#__u32 code ; t#__u32 field ; t#__u32 colorspace ; t#__u32 reserved [ 7 ] ; } 
s#v4l2_subdev_video_ops struct v4l2_subdev_video_ops { int ( * s_routing ) ( s#v4l2_subdev * , t#u32 , t#u32 , t#u32 ) ; int ( * s_crystal_freq ) ( s#v4l2_subdev * , t#u32 , t#u32 ) ; int ( * s_std_output ) ( s#v4l2_subdev * , t#v4l2_std_id ) ; int ( * querystd ) ( s#v4l2_subdev * , t#v4l2_std_id * ) ; int ( * g_input_status ) ( s#v4l2_subdev * , t#u32 * ) ; int ( * s_stream ) ( s#v4l2_subdev * , int ) ; int ( * cropcap ) ( s#v4l2_subdev * , s#v4l2_cropcap * ) ; int ( * g_crop ) ( s#v4l2_subdev * , s#v4l2_crop * ) ; int ( * s_crop ) ( s#v4l2_subdev * , s#v4l2_crop * ) ; int ( * g_parm ) ( s#v4l2_subdev * , s#v4l2_streamparm * ) ; int ( * s_parm ) ( s#v4l2_subdev * , s#v4l2_streamparm * ) ; int ( * g_frame_interval ) ( s#v4l2_subdev * , s#v4l2_subdev_frame_interval * ) ; int ( * s_frame_interval ) ( s#v4l2_subdev * , s#v4l2_subdev_frame_interval * ) ; int ( * enum_framesizes ) ( s#v4l2_subdev * , s#v4l2_frmsizeenum * ) ; int ( * enum_frameintervals ) ( s#v4l2_subdev * , s#v4l2_frmivalenum * ) ; int ( * enum_dv_presets ) ( s#v4l2_subdev * , s#v4l2_dv_enum_preset * ) ; int ( * s_dv_preset ) ( s#v4l2_subdev * , s#v4l2_dv_preset * ) ; int ( * query_dv_preset ) ( s#v4l2_subdev * , s#v4l2_dv_preset * ) ; int ( * s_dv_timings ) ( s#v4l2_subdev * , s#v4l2_dv_timings * ) ; int ( * g_dv_timings ) ( s#v4l2_subdev * , s#v4l2_dv_timings * ) ; int ( * enum_mbus_fmt ) ( s#v4l2_subdev * , unsigned int , e#v4l2_mbus_pixelcode * ) ; int ( * enum_mbus_fsizes ) ( s#v4l2_subdev * , s#v4l2_frmsizeenum * ) ; int ( * g_mbus_fmt ) ( s#v4l2_subdev * , s#v4l2_mbus_framefmt * ) ; int ( * try_mbus_fmt ) ( s#v4l2_subdev * , s#v4l2_mbus_framefmt * ) ; int ( * s_mbus_fmt ) ( s#v4l2_subdev * , s#v4l2_mbus_framefmt * ) ; } 
s#v4l2_decode_vbi_line struct v4l2_decode_vbi_line { t#u32 is_second_field ; t#u8 * p ; t#u32 line ; t#u32 type ; } 
s#v4l2_sliced_vbi_data struct v4l2_sliced_vbi_data { t#__u32 id ; t#__u32 field ; t#__u32 line ; t#__u32 reserved ; t#__u8 data [ 48 ] ; } 
s#v4l2_sliced_vbi_cap struct v4l2_sliced_vbi_cap { t#__u16 service_set ; t#__u16 service_lines [ 2 ] [ 24 ] ; e#v4l2_buf_type type ; t#__u32 reserved [ 3 ] ; } 
s#v4l2_vbi_format struct v4l2_vbi_format { t#__u32 sampling_rate ; t#__u32 offset ; t#__u32 samples_per_line ; t#__u32 sample_format ; t#__s32 start [ 2 ] ; t#__u32 count [ 2 ] ; t#__u32 flags ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_sliced_vbi_format struct v4l2_sliced_vbi_format { t#__u16 service_set ; t#__u16 service_lines [ 2 ] [ 24 ] ; t#__u32 io_size ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_subdev_vbi_ops struct v4l2_subdev_vbi_ops { int ( * decode_vbi_line ) ( s#v4l2_subdev * , s#v4l2_decode_vbi_line * ) ; int ( * s_vbi_data ) ( s#v4l2_subdev * , const s#v4l2_sliced_vbi_data * ) ; int ( * g_vbi_data ) ( s#v4l2_subdev * , s#v4l2_sliced_vbi_data * ) ; int ( * g_sliced_vbi_cap ) ( s#v4l2_subdev * , s#v4l2_sliced_vbi_cap * ) ; int ( * s_raw_fmt ) ( s#v4l2_subdev * , s#v4l2_vbi_format * ) ; int ( * g_sliced_fmt ) ( s#v4l2_subdev * , s#v4l2_sliced_vbi_format * ) ; int ( * s_sliced_fmt ) ( s#v4l2_subdev * , s#v4l2_sliced_vbi_format * ) ; } 
e#v4l2_subdev_ir_mode enum v4l2_subdev_ir_mode { V4L2_SUBDEV_IR_MODE_PULSE_WIDTH , } 
s#v4l2_subdev_ir_parameters struct v4l2_subdev_ir_parameters { unsigned int bytes_per_data_element ; e#v4l2_subdev_ir_mode mode ; t#bool enable ; t#bool interrupt_enable ; t#bool shutdown ; t#bool modulation ; t#u32 max_pulse_width ; unsigned int carrier_freq ; unsigned int duty_cycle ; t#bool invert_level ; t#bool invert_carrier_sense ; t#u32 noise_filter_min_width ; unsigned int carrier_range_lower ; unsigned int carrier_range_upper ; t#u32 resolution ; } 
s#v4l2_subdev_ir_ops struct v4l2_subdev_ir_ops { int ( * rx_read ) ( s#v4l2_subdev * , t#u8 * , t#size_t , t#ssize_t * ) ; int ( * rx_g_parameters ) ( s#v4l2_subdev * , s#v4l2_subdev_ir_parameters * ) ; int ( * rx_s_parameters ) ( s#v4l2_subdev * , s#v4l2_subdev_ir_parameters * ) ; int ( * tx_write ) ( s#v4l2_subdev * , t#u8 * , t#size_t , t#ssize_t * ) ; int ( * tx_g_parameters ) ( s#v4l2_subdev * , s#v4l2_subdev_ir_parameters * ) ; int ( * tx_s_parameters ) ( s#v4l2_subdev * , s#v4l2_subdev_ir_parameters * ) ; } 
s#v4l2_subdev_sensor_ops struct v4l2_subdev_sensor_ops { int ( * g_skip_top_lines ) ( s#v4l2_subdev * , t#u32 * ) ; int ( * g_skip_frames ) ( s#v4l2_subdev * , t#u32 * ) ; } 
s#v4l2_subdev_fh struct v4l2_subdev_fh { s#v4l2_fh vfh ; } 
s#v4l2_subdev_mbus_code_enum struct v4l2_subdev_mbus_code_enum { t#__u32 pad ; t#__u32 index ; t#__u32 code ; t#__u32 reserved [ 9 ] ; } 
s#v4l2_subdev_frame_size_enum struct v4l2_subdev_frame_size_enum { t#__u32 index ; t#__u32 pad ; t#__u32 code ; t#__u32 min_width ; t#__u32 max_width ; t#__u32 min_height ; t#__u32 max_height ; t#__u32 reserved [ 9 ] ; } 
s#v4l2_subdev_frame_interval_enum struct v4l2_subdev_frame_interval_enum { t#__u32 index ; t#__u32 pad ; t#__u32 code ; t#__u32 width ; t#__u32 height ; s#v4l2_fract interval ; t#__u32 reserved [ 9 ] ; } 
s#v4l2_subdev_format struct v4l2_subdev_format { t#__u32 which ; t#__u32 pad ; s#v4l2_mbus_framefmt format ; t#__u32 reserved [ 8 ] ; } 
s#v4l2_subdev_crop struct v4l2_subdev_crop { t#__u32 which ; t#__u32 pad ; s#v4l2_rect rect ; t#__u32 reserved [ 8 ] ; } 
s#v4l2_subdev_pad_ops struct v4l2_subdev_pad_ops { int ( * enum_mbus_code ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_mbus_code_enum * ) ; int ( * enum_frame_size ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_frame_size_enum * ) ; int ( * enum_frame_interval ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_frame_interval_enum * ) ; int ( * get_fmt ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_format * ) ; int ( * set_fmt ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_format * ) ; int ( * set_crop ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_crop * ) ; int ( * get_crop ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * , s#v4l2_subdev_crop * ) ; } 
s#v4l2_subdev_ops struct v4l2_subdev_ops { const s#v4l2_subdev_core_ops * core ; const s#v4l2_subdev_tuner_ops * tuner ; const s#v4l2_subdev_audio_ops * audio ; const s#v4l2_subdev_video_ops * video ; const s#v4l2_subdev_vbi_ops * vbi ; const s#v4l2_subdev_ir_ops * ir ; const s#v4l2_subdev_sensor_ops * sensor ; const s#v4l2_subdev_pad_ops * pad ; } 
s#v4l2_subdev_internal_ops struct v4l2_subdev_internal_ops { int ( * registered ) ( s#v4l2_subdev * ) ; void ( * unregistered ) ( s#v4l2_subdev * ) ; int ( * open ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * ) ; int ( * close ) ( s#v4l2_subdev * , s#v4l2_subdev_fh * ) ; } 
s#v4l2_subdev struct v4l2_subdev { s#list_head list ; s#module * owner ; t#u32 flags ; s#v4l2_device * v4l2_dev ; const s#v4l2_subdev_ops * ops ; const s#v4l2_subdev_internal_ops * internal_ops ; s#v4l2_ctrl_handler * ctrl_handler ; char name [ 32 ] ; t#u32 grp_id ; void * dev_priv ; void * host_priv ; s#video_device devnode ; unsigned int nevents ; } 
s#v4l2_device struct v4l2_device { s#device * dev ; s#list_head subdevs ; t#spinlock_t lock ; char name [ ( 20 + 16 ) ] ; void ( * notify ) ( s#v4l2_subdev * , unsigned int , void * ) ; s#v4l2_ctrl_handler * ctrl_handler ; s#v4l2_prio_state prio ; s#mutex ioctl_lock ; s#kref ref ; void ( * release ) ( s#v4l2_device * ) ; } 
s##saa7146_ext_vv
s##saa7146_vv
s#saa7146_dma struct saa7146_dma { t#dma_addr_t dma_handle ; t#__le32 * cpu_addr ; } 
s#saa7146_dev struct saa7146_dev { s#module * module ; s#list_head item ; s#v4l2_device v4l2_dev ; t#spinlock_t slock ; s#mutex v4l2_lock ; unsigned char * mem ; t#u32 revision ; char name [ 32 ] ; s#pci_dev * pci ; t#u32 int_todo ; t#spinlock_t int_slock ; s#saa7146_extension * ext ; void * ext_priv ; s#saa7146_ext_vv * ext_vv_data ; s#saa7146_vv * vv_data ; void ( * vv_callback ) ( s#saa7146_dev * , unsigned long ) ; s#mutex i2c_lock ; t#u32 i2c_bitrate ; s#saa7146_dma d_i2c ; t#wait_queue_head_t i2c_wq ; int i2c_op ; s#saa7146_dma d_rps0 ; s#saa7146_dma d_rps1 ; } 
s#saa7146_pci_extension_data struct saa7146_pci_extension_data { s#saa7146_extension * ext ; void * ext_priv ; } 
s#saa7146_extension struct saa7146_extension { char name [ 32 ] ; int flags ; s#module * module ; s#pci_driver driver ; s#pci_device_id * pci_tbl ; int ( * probe ) ( s#saa7146_dev * ) ; int ( * attach ) ( s#saa7146_dev * , s#saa7146_pci_extension_data * ) ; int ( * detach ) ( s#saa7146_dev * ) ; t#u32 irq_mask ; void ( * irq_func ) ( s#saa7146_dev * , t#u32 * ) ; } 
saa7146_register_extension int saa7146_register_extension ( s#saa7146_extension * ) 
saa7146_unregister_extension int saa7146_unregister_extension ( s#saa7146_extension * ) 
s#saa7146_pgtable struct saa7146_pgtable { unsigned int size ; t#__le32 * cpu ; t#dma_addr_t dma ; unsigned long offset ; s#scatterlist * slist ; int nents ; } 
saa7146_pgtable_alloc int saa7146_pgtable_alloc ( s#pci_dev * , s#saa7146_pgtable * ) 
saa7146_pgtable_free void saa7146_pgtable_free ( s#pci_dev * , s#saa7146_pgtable * ) 
saa7146_pgtable_build_single int saa7146_pgtable_build_single ( s#pci_dev * , s#saa7146_pgtable * , s#scatterlist * , int ) 
saa7146_vmalloc_build_pgtable void * saa7146_vmalloc_build_pgtable ( s#pci_dev * , long , s#saa7146_pgtable * ) 
saa7146_vfree_destroy_pgtable void saa7146_vfree_destroy_pgtable ( s#pci_dev * , void * , s#saa7146_pgtable * ) 
saa7146_wait_for_debi_done int saa7146_wait_for_debi_done ( s#saa7146_dev * , int ) 
saa7146_setgpio void saa7146_setgpio ( s#saa7146_dev * , int , t#u32 ) 
saa7146_i2c_adapter_prepare int saa7146_i2c_adapter_prepare ( s#saa7146_dev * , s#i2c_adapter * , t#u32 ) 
saa7146_debug extern unsigned int saa7146_debug 
saa7146_devices extern s#list_head saa7146_devices 
saa7146_devices_lock extern s#mutex saa7146_devices_lock 

/* drivers/media/common/saa7146_fops.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_ctrl_handler
s#v4l2_capability struct v4l2_capability { t#__u8 driver [ 16 ] ; t#__u8 card [ 32 ] ; t#__u8 bus_info [ 32 ] ; t#__u32 version ; t#__u32 capabilities ; t#__u32 reserved [ 4 ] ; } 
s#v4l2_fmtdesc struct v4l2_fmtdesc { t#__u32 index ; e#v4l2_buf_type type ; t#__u32 flags ; t#__u8 description [ 32 ] ; t#__u32 pixelformat ; t#__u32 reserved [ 4 ] ; } 
e#v4l2_field enum v4l2_field { V4L2_FIELD_ANY = 0 , V4L2_FIELD_NONE = 1 , V4L2_FIELD_TOP = 2 , V4L2_FIELD_BOTTOM = 3 , V4L2_FIELD_INTERLACED = 4 , V4L2_FIELD_SEQ_TB = 5 , V4L2_FIELD_SEQ_BT = 6 , V4L2_FIELD_ALTERNATE = 7 , V4L2_FIELD_INTERLACED_TB = 8 , V4L2_FIELD_INTERLACED_BT = 9 , } 
e#v4l2_colorspace enum v4l2_colorspace { V4L2_COLORSPACE_SMPTE170M = 1 , V4L2_COLORSPACE_SMPTE240M = 2 , V4L2_COLORSPACE_REC709 = 3 , V4L2_COLORSPACE_BT878 = 4 , V4L2_COLORSPACE_470_SYSTEM_M = 5 , V4L2_COLORSPACE_470_SYSTEM_BG = 6 , V4L2_COLORSPACE_JPEG = 7 , V4L2_COLORSPACE_SRGB = 8 , } 
s#v4l2_pix_format struct v4l2_pix_format { t#__u32 width ; t#__u32 height ; t#__u32 pixelformat ; e#v4l2_field field ; t#__u32 bytesperline ; t#__u32 sizeimage ; e#v4l2_colorspace colorspace ; t#__u32 priv ; } 
s#v4l2_plane_pix_format struct v4l2_plane_pix_format { t#__u32 sizeimage ; t#__u16 bytesperline ; t#__u16 reserved [ 7 ] ; } 
s#v4l2_pix_format_mplane struct v4l2_pix_format_mplane { t#__u32 width ; t#__u32 height ; t#__u32 pixelformat ; e#v4l2_field field ; e#v4l2_colorspace colorspace ; s#v4l2_plane_pix_format plane_fmt [ 8 ] ; t#__u8 num_planes ; t#__u8 reserved [ 11 ] ; } 
s#v4l2_clip struct v4l2_clip { s#v4l2_rect c ; s#v4l2_clip * next ; } 
s#v4l2_window struct v4l2_window { s#v4l2_rect w ; e#v4l2_field field ; t#__u32 chromakey ; s#v4l2_clip * clips ; t#__u32 clipcount ; void * bitmap ; t#__u8 global_alpha ; } 
s#v4l2_format struct v4l2_format { e#v4l2_buf_type type ; union { s#v4l2_pix_format pix ; s#v4l2_pix_format_mplane pix_mp ; s#v4l2_window win ; s#v4l2_vbi_format vbi ; s#v4l2_sliced_vbi_format sliced ; t#__u8 raw_data [ 200 ] ; } fmt ; } 
e#v4l2_memory enum v4l2_memory { V4L2_MEMORY_MMAP = 1 , V4L2_MEMORY_USERPTR = 2 , V4L2_MEMORY_OVERLAY = 3 , } 
s#v4l2_requestbuffers struct v4l2_requestbuffers { t#__u32 count ; e#v4l2_buf_type type ; e#v4l2_memory memory ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_timecode struct v4l2_timecode { t#__u32 type ; t#__u32 flags ; t#__u8 frames ; t#__u8 seconds ; t#__u8 minutes ; t#__u8 hours ; t#__u8 userbits [ 4 ] ; } 
s#v4l2_plane struct v4l2_plane { t#__u32 bytesused ; t#__u32 length ; union { t#__u32 mem_offset ; unsigned long userptr ; } m ; t#__u32 data_offset ; t#__u32 reserved [ 11 ] ; } 
s#v4l2_buffer struct v4l2_buffer { t#__u32 index ; e#v4l2_buf_type type ; t#__u32 bytesused ; t#__u32 flags ; e#v4l2_field field ; s#timeval timestamp ; s#v4l2_timecode timecode ; t#__u32 sequence ; e#v4l2_memory memory ; union { t#__u32 offset ; unsigned long userptr ; s#v4l2_plane * planes ; } m ; t#__u32 length ; t#__u32 input ; t#__u32 reserved ; } 
s#v4l2_framebuffer struct v4l2_framebuffer { t#__u32 capability ; t#__u32 flags ; void * base ; s#v4l2_pix_format fmt ; } 
s#v4l2_input struct v4l2_input { t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 type ; t#__u32 audioset ; t#__u32 tuner ; t#v4l2_std_id std ; t#__u32 status ; t#__u32 capabilities ; t#__u32 reserved [ 3 ] ; } 
s#v4l2_output struct v4l2_output { t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 type ; t#__u32 audioset ; t#__u32 modulator ; t#v4l2_std_id std ; t#__u32 capabilities ; t#__u32 reserved [ 3 ] ; } 
s#v4l2_audio struct v4l2_audio { t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 capability ; t#__u32 mode ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_audioout struct v4l2_audioout { t#__u32 index ; t#__u8 name [ 32 ] ; t#__u32 capability ; t#__u32 mode ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_jpegcompression struct v4l2_jpegcompression { int quality ; int APPn ; int APP_len ; char APP_data [ 60 ] ; int COM_len ; char COM_data [ 60 ] ; t#__u32 jpeg_markers ; } 
s#v4l2_enc_idx_entry struct v4l2_enc_idx_entry { t#__u64 offset ; t#__u64 pts ; t#__u32 length ; t#__u32 flags ; t#__u32 reserved [ 2 ] ; } 
s#v4l2_enc_idx struct v4l2_enc_idx { t#__u32 entries ; t#__u32 entries_cap ; t#__u32 reserved [ 4 ] ; s#v4l2_enc_idx_entry entry [ ( 64 ) ] ; } 
s#v4l2_encoder_cmd struct v4l2_encoder_cmd { t#__u32 cmd ; t#__u32 flags ; union { struct { t#__u32 data [ 8 ] ; } raw ; } ; } 
s#v4l2_hw_freq_seek struct v4l2_hw_freq_seek { t#__u32 tuner ; e#v4l2_tuner_type type ; t#__u32 seek_upward ; t#__u32 wrap_around ; t#__u32 spacing ; t#__u32 reserved [ 7 ] ; } 
s#v4l2_ioctl_ops struct v4l2_ioctl_ops { int ( * vidioc_querycap ) ( s#file * , void * , s#v4l2_capability * ) ; int ( * vidioc_g_priority ) ( s#file * , void * , e#v4l2_priority * ) ; int ( * vidioc_s_priority ) ( s#file * , void * , e#v4l2_priority ) ; int ( * vidioc_enum_fmt_vid_cap ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_enum_fmt_vid_overlay ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_enum_fmt_vid_out ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_enum_fmt_vid_cap_mplane ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_enum_fmt_vid_out_mplane ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_enum_fmt_type_private ) ( s#file * , void * , s#v4l2_fmtdesc * ) ; int ( * vidioc_g_fmt_vid_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vid_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vid_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vid_out_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_sliced_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_sliced_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vid_cap_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_vid_out_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_g_fmt_type_private ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_out_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_sliced_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_sliced_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_cap_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_vid_out_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_s_fmt_type_private ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_out_overlay ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_sliced_vbi_cap ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_sliced_vbi_out ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_cap_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_vid_out_mplane ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_try_fmt_type_private ) ( s#file * , void * , s#v4l2_format * ) ; int ( * vidioc_reqbufs ) ( s#file * , void * , s#v4l2_requestbuffers * ) ; int ( * vidioc_querybuf ) ( s#file * , void * , s#v4l2_buffer * ) ; int ( * vidioc_qbuf ) ( s#file * , void * , s#v4l2_buffer * ) ; int ( * vidioc_dqbuf ) ( s#file * , void * , s#v4l2_buffer * ) ; int ( * vidioc_overlay ) ( s#file * , void * , unsigned int ) ; int ( * vidioc_g_fbuf ) ( s#file * , void * , s#v4l2_framebuffer * ) ; int ( * vidioc_s_fbuf ) ( s#file * , void * , s#v4l2_framebuffer * ) ; int ( * vidioc_streamon ) ( s#file * , void * , e#v4l2_buf_type ) ; int ( * vidioc_streamoff ) ( s#file * , void * , e#v4l2_buf_type ) ; int ( * vidioc_g_std ) ( s#file * , void * , t#v4l2_std_id * ) ; int ( * vidioc_s_std ) ( s#file * , void * , t#v4l2_std_id * ) ; int ( * vidioc_querystd ) ( s#file * , void * , t#v4l2_std_id * ) ; int ( * vidioc_enum_input ) ( s#file * , void * , s#v4l2_input * ) ; int ( * vidioc_g_input ) ( s#file * , void * , unsigned int * ) ; int ( * vidioc_s_input ) ( s#file * , void * , unsigned int ) ; int ( * vidioc_enum_output ) ( s#file * , void * , s#v4l2_output * ) ; int ( * vidioc_g_output ) ( s#file * , void * , unsigned int * ) ; int ( * vidioc_s_output ) ( s#file * , void * , unsigned int ) ; int ( * vidioc_queryctrl ) ( s#file * , void * , s#v4l2_queryctrl * ) ; int ( * vidioc_g_ctrl ) ( s#file * , void * , s#v4l2_control * ) ; int ( * vidioc_s_ctrl ) ( s#file * , void * , s#v4l2_control * ) ; int ( * vidioc_g_ext_ctrls ) ( s#file * , void * , s#v4l2_ext_controls * ) ; int ( * vidioc_s_ext_ctrls ) ( s#file * , void * , s#v4l2_ext_controls * ) ; int ( * vidioc_try_ext_ctrls ) ( s#file * , void * , s#v4l2_ext_controls * ) ; int ( * vidioc_querymenu ) ( s#file * , void * , s#v4l2_querymenu * ) ; int ( * vidioc_enumaudio ) ( s#file * , void * , s#v4l2_audio * ) ; int ( * vidioc_g_audio ) ( s#file * , void * , s#v4l2_audio * ) ; int ( * vidioc_s_audio ) ( s#file * , void * , s#v4l2_audio * ) ; int ( * vidioc_enumaudout ) ( s#file * , void * , s#v4l2_audioout * ) ; int ( * vidioc_g_audout ) ( s#file * , void * , s#v4l2_audioout * ) ; int ( * vidioc_s_audout ) ( s#file * , void * , s#v4l2_audioout * ) ; int ( * vidioc_g_modulator ) ( s#file * , void * , s#v4l2_modulator * ) ; int ( * vidioc_s_modulator ) ( s#file * , void * , s#v4l2_modulator * ) ; int ( * vidioc_cropcap ) ( s#file * , void * , s#v4l2_cropcap * ) ; int ( * vidioc_g_crop ) ( s#file * , void * , s#v4l2_crop * ) ; int ( * vidioc_s_crop ) ( s#file * , void * , s#v4l2_crop * ) ; int ( * vidioc_g_jpegcomp ) ( s#file * , void * , s#v4l2_jpegcompression * ) ; int ( * vidioc_s_jpegcomp ) ( s#file * , void * , s#v4l2_jpegcompression * ) ; int ( * vidioc_g_enc_index ) ( s#file * , void * , s#v4l2_enc_idx * ) ; int ( * vidioc_encoder_cmd ) ( s#file * , void * , s#v4l2_encoder_cmd * ) ; int ( * vidioc_try_encoder_cmd ) ( s#file * , void * , s#v4l2_encoder_cmd * ) ; int ( * vidioc_g_parm ) ( s#file * , void * , s#v4l2_streamparm * ) ; int ( * vidioc_s_parm ) ( s#file * , void * , s#v4l2_streamparm * ) ; int ( * vidioc_g_tuner ) ( s#file * , void * , s#v4l2_tuner * ) ; int ( * vidioc_s_tuner ) ( s#file * , void * , s#v4l2_tuner * ) ; int ( * vidioc_g_frequency ) ( s#file * , void * , s#v4l2_frequency * ) ; int ( * vidioc_s_frequency ) ( s#file * , void * , s#v4l2_frequency * ) ; int ( * vidioc_g_sliced_vbi_cap ) ( s#file * , void * , s#v4l2_sliced_vbi_cap * ) ; int ( * vidioc_log_status ) ( s#file * , void * ) ; int ( * vidioc_s_hw_freq_seek ) ( s#file * , void * , s#v4l2_hw_freq_seek * ) ; int ( * vidioc_g_chip_ident ) ( s#file * , void * , s#v4l2_dbg_chip_ident * ) ; int ( * vidioc_enum_framesizes ) ( s#file * , void * , s#v4l2_frmsizeenum * ) ; int ( * vidioc_enum_frameintervals ) ( s#file * , void * , s#v4l2_frmivalenum * ) ; int ( * vidioc_enum_dv_presets ) ( s#file * , void * , s#v4l2_dv_enum_preset * ) ; int ( * vidioc_s_dv_preset ) ( s#file * , void * , s#v4l2_dv_preset * ) ; int ( * vidioc_g_dv_preset ) ( s#file * , void * , s#v4l2_dv_preset * ) ; int ( * vidioc_query_dv_preset ) ( s#file * , void * , s#v4l2_dv_preset * ) ; int ( * vidioc_s_dv_timings ) ( s#file * , void * , s#v4l2_dv_timings * ) ; int ( * vidioc_g_dv_timings ) ( s#file * , void * , s#v4l2_dv_timings * ) ; int ( * vidioc_subscribe_event ) ( s#v4l2_fh * , s#v4l2_event_subscription * ) ; int ( * vidioc_unsubscribe_event ) ( s#v4l2_fh * , s#v4l2_event_subscription * ) ; long ( * vidioc_default ) ( s#file * , void * , t#bool , int , void * ) ; } 
s##v4l2_events
s##tuner_setup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#saa7146_standard struct saa7146_standard { char * name ; t#v4l2_std_id id ; int v_offset ; int v_field ; int h_offset ; int h_pixels ; int v_max_out ; int h_max_out ; } 
s#saa7146_ext_vv struct saa7146_ext_vv { int inputs ; int audios ; t#u32 capabilities ; int flags ; s#saa7146_standard * stds ; int num_stds ; int ( * std_callback ) ( s#saa7146_dev * , s#saa7146_standard * ) ; s#v4l2_ioctl_ops ops ; const s#v4l2_ioctl_ops * core_ops ; s#v4l2_file_operations vbi_fops ; } 
e#videobuf_state enum videobuf_state { VIDEOBUF_NEEDS_INIT = 0 , VIDEOBUF_PREPARED = 1 , VIDEOBUF_QUEUED = 2 , VIDEOBUF_ACTIVE = 3 , VIDEOBUF_DONE = 4 , VIDEOBUF_ERROR = 5 , VIDEOBUF_IDLE = 6 , } 
s#videobuf_queue_ops struct videobuf_queue_ops { int ( * buf_setup ) ( s#videobuf_queue * , unsigned int * , unsigned int * ) ; int ( * buf_prepare ) ( s#videobuf_queue * , s#videobuf_buffer * , e#v4l2_field ) ; void ( * buf_queue ) ( s#videobuf_queue * , s#videobuf_buffer * ) ; void ( * buf_release ) ( s#videobuf_queue * , s#videobuf_buffer * ) ; } 
s#videobuf_qtype_ops struct videobuf_qtype_ops { t#u32 magic ; s#videobuf_buffer * ( * alloc_vb ) ( t#size_t ) ; void * ( * vaddr ) ( s#videobuf_buffer * ) ; int ( * iolock ) ( s#videobuf_queue * , s#videobuf_buffer * , s#v4l2_framebuffer * ) ; int ( * sync ) ( s#videobuf_queue * , s#videobuf_buffer * ) ; int ( * mmap_mapper ) ( s#videobuf_queue * , s#videobuf_buffer * , s#vm_area_struct * ) ; } 
s#videobuf_queue struct videobuf_queue { s#mutex vb_lock ; s#mutex * ext_lock ; t#spinlock_t * irqlock ; s#device * dev ; t#wait_queue_head_t wait ; e#v4l2_buf_type type ; unsigned int inputs ; unsigned int msize ; e#v4l2_field field ; e#v4l2_field last ; s#videobuf_buffer * bufs [ 32 ] ; const s#videobuf_queue_ops * ops ; s#videobuf_qtype_ops * int_ops ; unsigned int streaming : 1 ; unsigned int reading : 1 ; s#list_head stream ; unsigned int read_off ; s#videobuf_buffer * read_buf ; void * priv_data ; } 
s#videobuf_mapping struct videobuf_mapping { unsigned int count ; s#videobuf_queue * q ; } 
s#videobuf_buffer struct videobuf_buffer { unsigned int i ; t#u32 magic ; unsigned int width ; unsigned int height ; unsigned int bytesperline ; unsigned long size ; unsigned int input ; e#v4l2_field field ; e#videobuf_state state ; s#list_head stream ; s#list_head queue ; t#wait_queue_head_t done ; unsigned int field_count ; s#timeval ts ; e#v4l2_memory memory ; t#size_t bsize ; t#size_t boff ; unsigned long baddr ; s#videobuf_mapping * map ; int privsize ; void * priv ; } 
s#saa7146_buf struct saa7146_buf { s#videobuf_buffer vb ; s#v4l2_pix_format * fmt ; int ( * activate ) ( s#saa7146_dev * , s#saa7146_buf * , s#saa7146_buf * ) ; s#saa7146_pgtable pt [ 3 ] ; } 
s#saa7146_dmaqueue struct saa7146_dmaqueue { s#saa7146_dev * dev ; s#saa7146_buf * curr ; s#list_head queue ; s#timer_list timeout ; } 
s#saa7146_overlay struct saa7146_overlay { s#saa7146_fh * fh ; s#v4l2_window win ; s#v4l2_clip clips [ 16 ] ; int nclips ; } 
s#saa7146_fh struct saa7146_fh { s#saa7146_dev * dev ; e#v4l2_buf_type type ; s#saa7146_overlay ov ; s#videobuf_queue video_q ; s#v4l2_pix_format video_fmt ; s#videobuf_queue vbi_q ; s#v4l2_vbi_format vbi_fmt ; s#timer_list vbi_read_timeout ; unsigned int resources ; } 
s#saa7146_format struct saa7146_format { char * name ; t#u32 pixelformat ; t#u32 trans ; t#u8 depth ; t#u8 flags ; t#u8 swap ; } 
s#saa7146_vv struct saa7146_vv { s#saa7146_dmaqueue vbi_q ; t#wait_queue_head_t vbi_wq ; int vbi_fieldcount ; s#saa7146_fh * vbi_streaming ; int video_status ; s#saa7146_fh * video_fh ; s#v4l2_framebuffer ov_fb ; s#saa7146_format * ov_fmt ; s#saa7146_overlay * ov_data ; s#saa7146_fh * ov_suspend ; s#saa7146_dmaqueue video_q ; e#v4l2_field last_field ; s#saa7146_standard * standard ; int vflip ; int hflip ; int current_hps_source ; int current_hps_sync ; s#saa7146_dma d_clipping ; unsigned int resources ; } 
saa7146_vv_init int saa7146_vv_init ( s#saa7146_dev * , s#saa7146_ext_vv * ) 
saa7146_vv_release int saa7146_vv_release ( s#saa7146_dev * ) 
saa7146_register_device int saa7146_register_device ( s#video_device * * , s#saa7146_dev * , char * , int ) 
saa7146_unregister_device int saa7146_unregister_device ( s#video_device * * , s#saa7146_dev * ) 

/* drivers/media/common/saa7146_hlp.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_ctrl_handler
s##v4l2_events
s##tuner_setup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
saa7146_set_hps_source_and_sync void saa7146_set_hps_source_and_sync ( s#saa7146_dev * , int , int ) 

/* drivers/media/common/saa7146_video.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_ctrl_handler
s##v4l2_events
s##tuner_setup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
saa7146_start_preview int saa7146_start_preview ( s#saa7146_fh * ) 
saa7146_stop_preview int saa7146_stop_preview ( s#saa7146_fh * ) 

/* drivers/media/common/tuners/max2165.o */
e#fe_type enum fe_type { FE_QPSK , FE_QAM , FE_OFDM , FE_ATSC } 
t#fe_type_t typedef e#fe_type fe_type_t 
e#fe_caps enum fe_caps { FE_IS_STUPID = 0 , FE_CAN_INVERSION_AUTO = 0x1 , FE_CAN_FEC_1_2 = 0x2 , FE_CAN_FEC_2_3 = 0x4 , FE_CAN_FEC_3_4 = 0x8 , FE_CAN_FEC_4_5 = 0x10 , FE_CAN_FEC_5_6 = 0x20 , FE_CAN_FEC_6_7 = 0x40 , FE_CAN_FEC_7_8 = 0x80 , FE_CAN_FEC_8_9 = 0x100 , FE_CAN_FEC_AUTO = 0x200 , FE_CAN_QPSK = 0x400 , FE_CAN_QAM_16 = 0x800 , FE_CAN_QAM_32 = 0x1000 , FE_CAN_QAM_64 = 0x2000 , FE_CAN_QAM_128 = 0x4000 , FE_CAN_QAM_256 = 0x8000 , FE_CAN_QAM_AUTO = 0x10000 , FE_CAN_TRANSMISSION_MODE_AUTO = 0x20000 , FE_CAN_BANDWIDTH_AUTO = 0x40000 , FE_CAN_GUARD_INTERVAL_AUTO = 0x80000 , FE_CAN_HIERARCHY_AUTO = 0x100000 , FE_CAN_8VSB = 0x200000 , FE_CAN_16VSB = 0x400000 , FE_HAS_EXTENDED_CAPS = 0x800000 , FE_CAN_TURBO_FEC = 0x8000000 , FE_CAN_2G_MODULATION = 0x10000000 , FE_NEEDS_BENDING = 0x20000000 , FE_CAN_RECOVER = 0x40000000 , FE_CAN_MUTE_TS = 0x80000000 } 
t#fe_caps_t typedef e#fe_caps fe_caps_t 
s#dvb_frontend_info struct dvb_frontend_info { char name [ 128 ] ; t#fe_type_t type ; t#__u32 frequency_min ; t#__u32 frequency_max ; t#__u32 frequency_stepsize ; t#__u32 frequency_tolerance ; t#__u32 symbol_rate_min ; t#__u32 symbol_rate_max ; t#__u32 symbol_rate_tolerance ; t#__u32 notifier_delay ; t#fe_caps_t caps ; } 
e#fe_spectral_inversion enum fe_spectral_inversion { INVERSION_OFF , INVERSION_ON , INVERSION_AUTO } 
t#fe_spectral_inversion_t typedef e#fe_spectral_inversion fe_spectral_inversion_t 
e#fe_code_rate enum fe_code_rate { FEC_NONE = 0 , FEC_1_2 , FEC_2_3 , FEC_3_4 , FEC_4_5 , FEC_5_6 , FEC_6_7 , FEC_7_8 , FEC_8_9 , FEC_AUTO , FEC_3_5 , FEC_9_10 , } 
t#fe_code_rate_t typedef e#fe_code_rate fe_code_rate_t 
s#dvb_qpsk_parameters struct dvb_qpsk_parameters { t#__u32 symbol_rate ; t#fe_code_rate_t fec_inner ; } 
e#fe_modulation enum fe_modulation { QPSK , QAM_16 , QAM_32 , QAM_64 , QAM_128 , QAM_256 , QAM_AUTO , VSB_8 , VSB_16 , PSK_8 , APSK_16 , APSK_32 , DQPSK , } 
t#fe_modulation_t typedef e#fe_modulation fe_modulation_t 
s#dvb_qam_parameters struct dvb_qam_parameters { t#__u32 symbol_rate ; t#fe_code_rate_t fec_inner ; t#fe_modulation_t modulation ; } 
e#fe_bandwidth enum fe_bandwidth { BANDWIDTH_8_MHZ , BANDWIDTH_7_MHZ , BANDWIDTH_6_MHZ , BANDWIDTH_AUTO , BANDWIDTH_5_MHZ , BANDWIDTH_10_MHZ , BANDWIDTH_1_712_MHZ , } 
t#fe_bandwidth_t typedef e#fe_bandwidth fe_bandwidth_t 
e#fe_transmit_mode enum fe_transmit_mode { TRANSMISSION_MODE_2K , TRANSMISSION_MODE_8K , TRANSMISSION_MODE_AUTO , TRANSMISSION_MODE_4K , TRANSMISSION_MODE_1K , TRANSMISSION_MODE_16K , TRANSMISSION_MODE_32K , } 
t#fe_transmit_mode_t typedef e#fe_transmit_mode fe_transmit_mode_t 
e#fe_guard_interval enum fe_guard_interval { GUARD_INTERVAL_1_32 , GUARD_INTERVAL_1_16 , GUARD_INTERVAL_1_8 , GUARD_INTERVAL_1_4 , GUARD_INTERVAL_AUTO , GUARD_INTERVAL_1_128 , GUARD_INTERVAL_19_128 , GUARD_INTERVAL_19_256 , } 
t#fe_guard_interval_t typedef e#fe_guard_interval fe_guard_interval_t 
e#fe_hierarchy enum fe_hierarchy { HIERARCHY_NONE , HIERARCHY_1 , HIERARCHY_2 , HIERARCHY_4 , HIERARCHY_AUTO } 
t#fe_hierarchy_t typedef e#fe_hierarchy fe_hierarchy_t 
s#dvb_ofdm_parameters struct dvb_ofdm_parameters { t#fe_bandwidth_t bandwidth ; t#fe_code_rate_t code_rate_HP ; t#fe_code_rate_t code_rate_LP ; t#fe_modulation_t constellation ; t#fe_transmit_mode_t transmission_mode ; t#fe_guard_interval_t guard_interval ; t#fe_hierarchy_t hierarchy_information ; } 
s#dvb_vsb_parameters struct dvb_vsb_parameters { t#fe_modulation_t modulation ; } 
s#dvb_frontend_parameters struct dvb_frontend_parameters { t#__u32 frequency ; t#fe_spectral_inversion_t inversion ; union { s#dvb_qpsk_parameters qpsk ; s#dvb_qam_parameters qam ; s#dvb_ofdm_parameters ofdm ; s#dvb_vsb_parameters vsb ; } u ; } 
e#fe_status enum fe_status { FE_HAS_SIGNAL = 0x01 , FE_HAS_CARRIER = 0x02 , FE_HAS_VITERBI = 0x04 , FE_HAS_SYNC = 0x08 , FE_HAS_LOCK = 0x10 , FE_TIMEDOUT = 0x20 , FE_REINIT = 0x40 } 
t#fe_status_t typedef e#fe_status fe_status_t 
e#dvbfe_algo enum dvbfe_algo { DVBFE_ALGO_HW = ( 1 << 0 ) , DVBFE_ALGO_SW = ( 1 << 1 ) , DVBFE_ALGO_CUSTOM = ( 1 << 2 ) , DVBFE_ALGO_RECOVERY = ( 1 << 31 ) } 
s#dvb_frontend_tune_settings struct dvb_frontend_tune_settings { int min_delay_ms ; int step_size ; int max_drift ; s#dvb_frontend_parameters parameters ; } 
s#dvb_diseqc_master_cmd struct dvb_diseqc_master_cmd { t#__u8 msg [ 6 ] ; t#__u8 msg_len ; } 
s#dvb_diseqc_slave_reply struct dvb_diseqc_slave_reply { t#__u8 msg [ 4 ] ; t#__u8 msg_len ; int timeout ; } 
e#fe_sec_mini_cmd enum fe_sec_mini_cmd { SEC_MINI_A , SEC_MINI_B } 
t#fe_sec_mini_cmd_t typedef e#fe_sec_mini_cmd fe_sec_mini_cmd_t 
e#fe_sec_tone_mode enum fe_sec_tone_mode { SEC_TONE_ON , SEC_TONE_OFF } 
t#fe_sec_tone_mode_t typedef e#fe_sec_tone_mode fe_sec_tone_mode_t 
e#fe_sec_voltage enum fe_sec_voltage { SEC_VOLTAGE_13 , SEC_VOLTAGE_18 , SEC_VOLTAGE_OFF } 
t#fe_sec_voltage_t typedef e#fe_sec_voltage fe_sec_voltage_t 
e#dvbfe_search enum dvbfe_search { DVBFE_ALGO_SEARCH_SUCCESS = ( 1 << 0 ) , DVBFE_ALGO_SEARCH_ASLEEP = ( 1 << 1 ) , DVBFE_ALGO_SEARCH_FAILED = ( 1 << 2 ) , DVBFE_ALGO_SEARCH_INVALID = ( 1 << 3 ) , DVBFE_ALGO_SEARCH_AGAIN = ( 1 << 4 ) , DVBFE_ALGO_SEARCH_ERROR = ( 1 << 31 ) , } 
s#dvb_tuner_info struct dvb_tuner_info { char name [ 128 ] ; t#u32 frequency_min ; t#u32 frequency_max ; t#u32 frequency_step ; t#u32 bandwidth_min ; t#u32 bandwidth_max ; t#u32 bandwidth_step ; } 
s#analog_parameters struct analog_parameters { unsigned int frequency ; unsigned int mode ; unsigned int audmode ; t#u64 std ; } 
e#tuner_param enum tuner_param { DVBFE_TUNER_FREQUENCY = ( 1 << 0 ) , DVBFE_TUNER_TUNERSTEP = ( 1 << 1 ) , DVBFE_TUNER_IFFREQ = ( 1 << 2 ) , DVBFE_TUNER_BANDWIDTH = ( 1 << 3 ) , DVBFE_TUNER_REFCLOCK = ( 1 << 4 ) , DVBFE_TUNER_IQSENSE = ( 1 << 5 ) , DVBFE_TUNER_DUMMY = ( 1 << 31 ) } 
s#tuner_state struct tuner_state { t#u32 frequency ; t#u32 tunerstep ; t#u32 ifreq ; t#u32 bandwidth ; t#u32 iqsense ; t#u32 refclock ; } 
s#dvb_tuner_ops struct dvb_tuner_ops { s#dvb_tuner_info info ; int ( * release ) ( s#dvb_frontend * ) ; int ( * init ) ( s#dvb_frontend * ) ; int ( * sleep ) ( s#dvb_frontend * ) ; int ( * set_params ) ( s#dvb_frontend * , s#dvb_frontend_parameters * ) ; int ( * set_analog_params ) ( s#dvb_frontend * , s#analog_parameters * ) ; int ( * calc_regs ) ( s#dvb_frontend * , s#dvb_frontend_parameters * , t#u8 * , int ) ; int ( * set_config ) ( s#dvb_frontend * , void * ) ; int ( * get_frequency ) ( s#dvb_frontend * , t#u32 * ) ; int ( * get_bandwidth ) ( s#dvb_frontend * , t#u32 * ) ; int ( * get_status ) ( s#dvb_frontend * , t#u32 * ) ; int ( * get_rf_strength ) ( s#dvb_frontend * , t#u16 * ) ; int ( * set_frequency ) ( s#dvb_frontend * , t#u32 ) ; int ( * set_bandwidth ) ( s#dvb_frontend * , t#u32 ) ; int ( * set_state ) ( s#dvb_frontend * , e#tuner_param , s#tuner_state * ) ; int ( * get_state ) ( s#dvb_frontend * , e#tuner_param , s#tuner_state * ) ; } 
s#analog_demod_info struct analog_demod_info { char * name ; } 
s#analog_demod_ops struct analog_demod_ops { s#analog_demod_info info ; void ( * set_params ) ( s#dvb_frontend * , s#analog_parameters * ) ; int ( * has_signal ) ( s#dvb_frontend * ) ; int ( * get_afc ) ( s#dvb_frontend * ) ; void ( * tuner_status ) ( s#dvb_frontend * ) ; void ( * standby ) ( s#dvb_frontend * ) ; void ( * release ) ( s#dvb_frontend * ) ; int ( * i2c_gate_ctrl ) ( s#dvb_frontend * , int ) ; int ( * set_config ) ( s#dvb_frontend * , void * ) ; } 
s#dtv_property struct dtv_property { t#__u32 cmd ; t#__u32 reserved [ 3 ] ; union { t#__u32 data ; struct { t#__u8 data [ 32 ] ; t#__u32 len ; t#__u32 reserved1 [ 3 ] ; void * reserved2 ; } buffer ; } u ; int result ; } 
s#dvb_frontend_ops struct dvb_frontend_ops { s#dvb_frontend_info info ; void ( * release ) ( s#dvb_frontend * ) ; void ( * release_sec ) ( s#dvb_frontend * ) ; int ( * init ) ( s#dvb_frontend * ) ; int ( * sleep ) ( s#dvb_frontend * ) ; int ( * write ) ( s#dvb_frontend * , const t#u8 [ ] , int ) ; int ( * tune ) ( s#dvb_frontend * , s#dvb_frontend_parameters * , unsigned int , unsigned int * , t#fe_status_t * ) ; e#dvbfe_algo ( * get_frontend_algo ) ( s#dvb_frontend * ) ; int ( * set_frontend ) ( s#dvb_frontend * , s#dvb_frontend_parameters * ) ; int ( * get_tune_settings ) ( s#dvb_frontend * , s#dvb_frontend_tune_settings * ) ; int ( * get_frontend ) ( s#dvb_frontend * , s#dvb_frontend_parameters * ) ; int ( * read_status ) ( s#dvb_frontend * , t#fe_status_t * ) ; int ( * read_ber ) ( s#dvb_frontend * , t#u32 * ) ; int ( * read_signal_strength ) ( s#dvb_frontend * , t#u16 * ) ; int ( * read_snr ) ( s#dvb_frontend * , t#u16 * ) ; int ( * read_ucblocks ) ( s#dvb_frontend * , t#u32 * ) ; int ( * diseqc_reset_overload ) ( s#dvb_frontend * ) ; int ( * diseqc_send_master_cmd ) ( s#dvb_frontend * , s#dvb_diseqc_master_cmd * ) ; int ( * diseqc_recv_slave_reply ) ( s#dvb_frontend * , s#dvb_diseqc_slave_reply * ) ; int ( * diseqc_send_burst ) ( s#dvb_frontend * , t#fe_sec_mini_cmd_t ) ; int ( * set_tone ) ( s#dvb_frontend * , t#fe_sec_tone_mode_t ) ; int ( * set_voltage ) ( s#dvb_frontend * , t#fe_sec_voltage_t ) ; int ( * enable_high_lnb_voltage ) ( s#dvb_frontend * , long ) ; int ( * dishnetwork_send_legacy_command ) ( s#dvb_frontend * , unsigned long ) ; int ( * i2c_gate_ctrl ) ( s#dvb_frontend * , int ) ; int ( * ts_bus_ctrl ) ( s#dvb_frontend * , int ) ; e#dvbfe_search ( * search ) ( s#dvb_frontend * , s#dvb_frontend_parameters * ) ; int ( * track ) ( s#dvb_frontend * , s#dvb_frontend_parameters * ) ; s#dvb_tuner_ops tuner_ops ; s#analog_demod_ops analog_ops ; int ( * set_property ) ( s#dvb_frontend * , s#dtv_property * ) ; int ( * get_property ) ( s#dvb_frontend * , s#dtv_property * ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#dvb_device struct dvb_device { s#list_head list_head ; const s#file_operations * fops ; s#dvb_adapter * adapter ; int type ; int minor ; t#u32 id ; int readers ; int writers ; int users ; t#wait_queue_head_t wait_queue ; int ( * kernel_ioctl ) ( s#file * , unsigned int , void * ) ; void * priv ; } 
s#dvb_adapter struct dvb_adapter { int num ; s#list_head list_head ; s#list_head device_list ; const char * name ; t#u8 proposed_mac [ 6 ] ; void * priv ; s#device * device ; s#module * module ; int mfe_shared ; s#dvb_device * mfe_dvbdev ; s#mutex mfe_lock ; int ( * fe_ioctl_override ) ( s#dvb_frontend * , unsigned int , void * , unsigned int ) ; } 
e#fe_pilot enum fe_pilot { PILOT_ON , PILOT_OFF , PILOT_AUTO , } 
t#fe_pilot_t typedef e#fe_pilot fe_pilot_t 
e#fe_rolloff enum fe_rolloff { ROLLOFF_35 , ROLLOFF_20 , ROLLOFF_25 , ROLLOFF_AUTO , } 
t#fe_rolloff_t typedef e#fe_rolloff fe_rolloff_t 
e#fe_delivery_system enum fe_delivery_system { SYS_UNDEFINED , SYS_DVBC_ANNEX_AC , SYS_DVBC_ANNEX_B , SYS_DVBT , SYS_DSS , SYS_DVBS , SYS_DVBS2 , SYS_DVBH , SYS_ISDBT , SYS_ISDBS , SYS_ISDBC , SYS_ATSC , SYS_ATSCMH , SYS_DMBTH , SYS_CMMB , SYS_DAB , SYS_DVBT2 , } 
t#fe_delivery_system_t typedef e#fe_delivery_system fe_delivery_system_t 
s#dtv_frontend_properties struct dtv_frontend_properties { t#u32 state ; t#u32 frequency ; t#fe_modulation_t modulation ; t#fe_sec_voltage_t voltage ; t#fe_sec_tone_mode_t sectone ; t#fe_spectral_inversion_t inversion ; t#fe_code_rate_t fec_inner ; t#fe_transmit_mode_t transmission_mode ; t#u32 bandwidth_hz ; t#fe_guard_interval_t guard_interval ; t#fe_hierarchy_t hierarchy ; t#u32 symbol_rate ; t#fe_code_rate_t code_rate_HP ; t#fe_code_rate_t code_rate_LP ; t#fe_pilot_t pilot ; t#fe_rolloff_t rolloff ; t#fe_delivery_system_t delivery_system ; t#u8 isdbt_partial_reception ; t#u8 isdbt_sb_mode ; t#u8 isdbt_sb_subchannel ; t#u32 isdbt_sb_segment_idx ; t#u32 isdbt_sb_segment_count ; t#u8 isdbt_layer_enabled ; struct { t#u8 segment_count ; t#fe_code_rate_t fec ; t#fe_modulation_t modulation ; t#u8 interleaving ; } layer [ 3 ] ; t#u32 isdbs_ts_id ; t#u32 dvbt2_plp_id ; } 
s#dvb_frontend struct dvb_frontend { s#dvb_frontend_ops ops ; s#dvb_adapter * dvb ; void * demodulator_priv ; void * tuner_priv ; void * frontend_priv ; void * sec_priv ; void * analog_demod_priv ; s#dtv_frontend_properties dtv_property_cache ; int ( * callback ) ( void * , int , int , int ) ; int id ; } 
s#max2165_config struct max2165_config { t#u8 i2c_address ; t#u8 osc_clk ; } 
max2165_attach extern s#dvb_frontend * max2165_attach ( s#dvb_frontend * , s#i2c_adapter * , s#max2165_config * ) 

/* drivers/media/common/tuners/mc44s803.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mc44s803_config struct mc44s803_config { t#u8 i2c_address ; t#u8 dig_out ; } 
mc44s803_attach extern s#dvb_frontend * mc44s803_attach ( s#dvb_frontend * , s#i2c_adapter * , s#mc44s803_config * ) 

/* drivers/media/common/tuners/mt2060.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mt2060_config struct mt2060_config { t#u8 i2c_address ; t#u8 clock_out ; } 
mt2060_attach extern s#dvb_frontend * mt2060_attach ( s#dvb_frontend * , s#i2c_adapter * , s#mt2060_config * , t#u16 ) 

/* drivers/media/common/tuners/mt20xx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
microtune_attach extern s#dvb_frontend * microtune_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 ) 

/* drivers/media/common/tuners/mt2131.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mt2131_config struct mt2131_config { t#u8 i2c_address ; t#u8 clock_out ; } 
mt2131_attach extern s#dvb_frontend * mt2131_attach ( s#dvb_frontend * , s#i2c_adapter * , s#mt2131_config * , t#u16 ) 

/* drivers/media/common/tuners/mt2266.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mt2266_config struct mt2266_config { t#u8 i2c_address ; } 
mt2266_attach extern s#dvb_frontend * mt2266_attach ( s#dvb_frontend * , s#i2c_adapter * , s#mt2266_config * ) 

/* drivers/media/common/tuners/mxl5005s.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mxl5005s_config struct mxl5005s_config { t#u8 i2c_address ; t#u32 if_freq ; t#u32 xtal_freq ; t#u8 agc_mode ; t#u8 tracking_filter ; t#u8 rssi_enable ; t#u8 cap_select ; t#u8 div_out ; t#u8 clock_out ; t#u32 output_load ; t#u32 top ; t#u8 mod_mode ; t#u8 if_mode ; t#u8 qam_gain ; t#u8 AgcMasterByte ; } 
mxl5005s_attach extern s#dvb_frontend * mxl5005s_attach ( s#dvb_frontend * , s#i2c_adapter * , s#mxl5005s_config * ) 

/* drivers/media/common/tuners/mxl5007t.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#mxl5007t_clkout_amp enum mxl5007t_clkout_amp { MxL_CLKOUT_AMP_0_94V = 0 , MxL_CLKOUT_AMP_0_53V = 1 , MxL_CLKOUT_AMP_0_37V = 2 , MxL_CLKOUT_AMP_0_28V = 3 , MxL_CLKOUT_AMP_0_23V = 4 , MxL_CLKOUT_AMP_0_20V = 5 , MxL_CLKOUT_AMP_0_17V = 6 , MxL_CLKOUT_AMP_0_15V = 7 , } 
e#mxl5007t_xtal_freq enum mxl5007t_xtal_freq { MxL_XTAL_16_MHZ , MxL_XTAL_20_MHZ , MxL_XTAL_20_25_MHZ , MxL_XTAL_20_48_MHZ , MxL_XTAL_24_MHZ , MxL_XTAL_25_MHZ , MxL_XTAL_25_14_MHZ , MxL_XTAL_27_MHZ , MxL_XTAL_28_8_MHZ , MxL_XTAL_32_MHZ , MxL_XTAL_40_MHZ , MxL_XTAL_44_MHZ , MxL_XTAL_48_MHZ , MxL_XTAL_49_3811_MHZ , } 
e#mxl5007t_if_freq enum mxl5007t_if_freq { MxL_IF_4_MHZ , MxL_IF_4_5_MHZ , MxL_IF_4_57_MHZ , MxL_IF_5_MHZ , MxL_IF_5_38_MHZ , MxL_IF_6_MHZ , MxL_IF_6_28_MHZ , MxL_IF_9_1915_MHZ , MxL_IF_35_25_MHZ , MxL_IF_36_15_MHZ , MxL_IF_44_MHZ , } 
s#mxl5007t_config struct mxl5007t_config { t#s32 if_diff_out_level ; e#mxl5007t_clkout_amp clk_out_amp ; e#mxl5007t_xtal_freq xtal_freq_hz ; e#mxl5007t_if_freq if_freq_hz ; unsigned int invert_if : 1 ; unsigned int loop_thru_enable : 1 ; unsigned int clk_out_enable : 1 ; } 
mxl5007t_attach extern s#dvb_frontend * mxl5007t_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , s#mxl5007t_config * ) 

/* drivers/media/common/tuners/qt1010.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#qt1010_config struct qt1010_config { t#u8 i2c_address ; } 
qt1010_attach extern s#dvb_frontend * qt1010_attach ( s#dvb_frontend * , s#i2c_adapter * , s#qt1010_config * ) 

/* drivers/media/common/tuners/tda18212.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda18212_config struct tda18212_config { t#u8 i2c_address ; t#u16 if_dvbt_6 ; t#u16 if_dvbt_7 ; t#u16 if_dvbt_8 ; t#u16 if_dvbc ; } 
tda18212_attach extern s#dvb_frontend * tda18212_attach ( s#dvb_frontend * , s#i2c_adapter * , s#tda18212_config * ) 

/* drivers/media/common/tuners/tda18218.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda18218_config struct tda18218_config { t#u8 i2c_address ; t#u8 i2c_wr_max ; t#u8 loop_through : 1 ; } 
tda18218_attach extern s#dvb_frontend * tda18218_attach ( s#dvb_frontend * , s#i2c_adapter * , s#tda18218_config * ) 

/* drivers/media/common/tuners/tda18271-fe.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda18271_std_map_item struct tda18271_std_map_item { t#u16 if_freq ; unsigned int agc_mode : 2 ; unsigned int std : 3 ; unsigned int fm_rfn : 1 ; unsigned int if_lvl : 3 ; unsigned int rfagc_top : 7 ; } 
s#tda18271_std_map struct tda18271_std_map { s#tda18271_std_map_item fm_radio ; s#tda18271_std_map_item atv_b ; s#tda18271_std_map_item atv_dk ; s#tda18271_std_map_item atv_gh ; s#tda18271_std_map_item atv_i ; s#tda18271_std_map_item atv_l ; s#tda18271_std_map_item atv_lc ; s#tda18271_std_map_item atv_mn ; s#tda18271_std_map_item atsc_6 ; s#tda18271_std_map_item dvbt_6 ; s#tda18271_std_map_item dvbt_7 ; s#tda18271_std_map_item dvbt_8 ; s#tda18271_std_map_item qam_6 ; s#tda18271_std_map_item qam_8 ; } 
e#tda18271_role enum tda18271_role { TDA18271_MASTER = 0 , TDA18271_SLAVE , } 
e#tda18271_i2c_gate enum tda18271_i2c_gate { TDA18271_GATE_AUTO = 0 , TDA18271_GATE_ANALOG , TDA18271_GATE_DIGITAL , } 
e#tda18271_output_options enum tda18271_output_options { TDA18271_OUTPUT_LT_XT_ON = 0 , TDA18271_OUTPUT_LT_OFF = 1 , TDA18271_OUTPUT_XT_OFF = 2 , } 
e#tda18271_small_i2c enum tda18271_small_i2c { TDA18271_39_BYTE_CHUNK_INIT = 0 , TDA18271_16_BYTE_CHUNK_INIT = 16 , TDA18271_08_BYTE_CHUNK_INIT = 8 , TDA18271_03_BYTE_CHUNK_INIT = 3 , } 
s#tda18271_config struct tda18271_config { s#tda18271_std_map * std_map ; e#tda18271_role role ; e#tda18271_i2c_gate gate ; e#tda18271_output_options output_opt ; e#tda18271_small_i2c small_i2c ; unsigned int rf_cal_on_startup : 1 ; unsigned int config ; } 
tda18271_attach extern s#dvb_frontend * tda18271_attach ( s#dvb_frontend * , t#u8 , s#i2c_adapter * , s#tda18271_config * ) 

/* drivers/media/common/tuners/tda827x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda827x_config struct tda827x_config { int ( * init ) ( s#dvb_frontend * ) ; int ( * sleep ) ( s#dvb_frontend * ) ; unsigned int config ; int switch_addr ; void ( * agcf ) ( s#dvb_frontend * ) ; } 
tda827x_attach extern s#dvb_frontend * tda827x_attach ( s#dvb_frontend * , int , s#i2c_adapter * , s#tda827x_config * ) 

/* drivers/media/common/tuners/tda8290.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda829x_config struct tda829x_config { unsigned int lna_cfg ; unsigned int probe_tuner : 1 ; } 
tda829x_attach extern s#dvb_frontend * tda829x_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , s#tda829x_config * ) 
tda829x_probe extern int tda829x_probe ( s#i2c_adapter * , t#u8 ) 

/* drivers/media/common/tuners/tda9887.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
tda9887_attach extern s#dvb_frontend * tda9887_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 ) 

/* drivers/media/common/tuners/tea5761.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
tea5761_attach extern s#dvb_frontend * tea5761_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 ) 
tea5761_autodetection extern int tea5761_autodetection ( s#i2c_adapter * , t#u8 ) 

/* drivers/media/common/tuners/tea5767.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
tea5767_attach extern s#dvb_frontend * tea5767_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 ) 
tea5767_autodetection extern int tea5767_autodetection ( s#i2c_adapter * , t#u8 ) 

/* drivers/media/common/tuners/tuner-simple.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
simple_tuner_attach extern s#dvb_frontend * simple_tuner_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , unsigned int ) 

/* drivers/media/common/tuners/tuner-types.o */
e#param_type enum param_type { TUNER_PARAM_TYPE_RADIO , TUNER_PARAM_TYPE_PAL , TUNER_PARAM_TYPE_SECAM , TUNER_PARAM_TYPE_NTSC , TUNER_PARAM_TYPE_DIGITAL , } 
s#tuner_range struct tuner_range { unsigned short limit ; unsigned char config ; unsigned char cb ; } 
s#tuner_params struct tuner_params { e#param_type type ; unsigned int cb_first_if_lower_freq : 1 ; unsigned int has_tda9887 : 1 ; unsigned int port1_fm_high_sensitivity : 1 ; unsigned int port2_fm_high_sensitivity : 1 ; unsigned int fm_gain_normal : 1 ; unsigned int intercarrier_mode : 1 ; unsigned int port1_active : 1 ; unsigned int port2_active : 1 ; unsigned int port1_invert_for_secam_lc : 1 ; unsigned int port2_invert_for_secam_lc : 1 ; unsigned int port1_set_for_fm_mono : 1 ; unsigned int default_pll_gating_18 : 1 ; unsigned int radio_if : 2 ; signed int default_top_low : 5 ; signed int default_top_mid : 5 ; signed int default_top_high : 5 ; signed int default_top_secam_low : 5 ; signed int default_top_secam_mid : 5 ; signed int default_top_secam_high : 5 ; t#u16 iffreq ; unsigned int count ; s#tuner_range * ranges ; } 
s#tunertype struct tunertype { char * name ; unsigned int count ; s#tuner_params * params ; t#u16 min ; t#u16 max ; t#u32 stepsize ; t#u8 * initdata ; t#u8 * sleepdata ; } 
tuners extern s#tunertype tuners [ ] 
tuner_count extern unsigned const int tuner_count 

/* drivers/media/common/tuners/tuner-xc2028.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#firmware_type enum firmware_type { XC2028_AUTO = 0 , XC2028_D2633 , XC2028_D2620 , } 
s#xc2028_ctrl struct xc2028_ctrl { char * fname ; int max_len ; int msleep ; unsigned int scode_table ; unsigned int mts : 1 ; unsigned int input1 : 1 ; unsigned int vhfbw7 : 1 ; unsigned int uhfbw8 : 1 ; unsigned int disable_power_mgmt : 1 ; unsigned int read_not_reliable : 1 ; unsigned int demod ; e#firmware_type type : 2 ; } 
s#xc2028_config struct xc2028_config { s#i2c_adapter * i2c_adap ; t#u8 i2c_addr ; s#xc2028_ctrl * ctrl ; } 
xc2028_attach extern s#dvb_frontend * xc2028_attach ( s#dvb_frontend * , s#xc2028_config * ) 

/* drivers/media/common/tuners/xc5000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#xc5000_config struct xc5000_config { t#u8 i2c_address ; t#u32 if_khz ; t#u8 radio_input ; } 
xc5000_attach extern s#dvb_frontend * xc5000_attach ( s#dvb_frontend * , s#i2c_adapter * , const s#xc5000_config * ) 

/* drivers/media/dvb/b2c2/flexcop.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
t#flexcop_revision_t typedef enum { FLEXCOP_UNK = 0 , FLEXCOP_II , FLEXCOP_IIB , FLEXCOP_III , } flexcop_revision_t 
t#flexcop_device_type_t typedef enum { FC_UNK = 0 , FC_CABLE , FC_AIR_DVBT , FC_AIR_ATSC1 , FC_AIR_ATSC2 , FC_AIR_ATSC3 , FC_SKY_REV23 , FC_SKY_REV26 , FC_SKY_REV27 , FC_SKY_REV28 , } flexcop_device_type_t 
t#flexcop_bus_t typedef enum { FC_USB = 0 , FC_PCI , } flexcop_bus_t 
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
e#dmx_frontend_source enum dmx_frontend_source { DMX_MEMORY_FE , DMX_FRONTEND_0 , DMX_FRONTEND_1 , DMX_FRONTEND_2 , DMX_FRONTEND_3 , DMX_STREAM_0 , DMX_STREAM_1 , DMX_STREAM_2 , DMX_STREAM_3 } 
s#dmx_frontend struct dmx_frontend { s#list_head connectivity_list ; e#dmx_frontend_source source ; } 
e#dmx_ts_pes enum dmx_ts_pes { DMX_TS_PES_AUDIO0 , DMX_TS_PES_VIDEO0 , DMX_TS_PES_TELETEXT0 , DMX_TS_PES_SUBTITLE0 , DMX_TS_PES_PCR0 , DMX_TS_PES_AUDIO1 , DMX_TS_PES_VIDEO1 , DMX_TS_PES_TELETEXT1 , DMX_TS_PES_SUBTITLE1 , DMX_TS_PES_PCR1 , DMX_TS_PES_AUDIO2 , DMX_TS_PES_VIDEO2 , DMX_TS_PES_TELETEXT2 , DMX_TS_PES_SUBTITLE2 , DMX_TS_PES_PCR2 , DMX_TS_PES_AUDIO3 , DMX_TS_PES_VIDEO3 , DMX_TS_PES_TELETEXT3 , DMX_TS_PES_SUBTITLE3 , DMX_TS_PES_PCR3 , DMX_TS_PES_OTHER } 
s#dmx_ts_feed struct dmx_ts_feed { int is_filtering ; s#dmx_demux * parent ; void * priv ; int ( * set ) ( s#dmx_ts_feed * , t#u16 , int , e#dmx_ts_pes , t#size_t , s#timespec ) ; int ( * start_filtering ) ( s#dmx_ts_feed * ) ; int ( * stop_filtering ) ( s#dmx_ts_feed * ) ; } 
e#dmx_success enum dmx_success { DMX_OK = 0 , DMX_LENGTH_ERROR , DMX_OVERRUN_ERROR , DMX_CRC_ERROR , DMX_FRAME_ERROR , DMX_FIFO_ERROR , DMX_MISSED_ERROR } 
t#dmx_ts_cb typedef int ( * dmx_ts_cb ) ( const t#u8 * , t#size_t , const t#u8 * , t#size_t , s#dmx_ts_feed * , e#dmx_success ) 
s#dmx_section_filter struct dmx_section_filter { t#u8 filter_value [ 18 ] ; t#u8 filter_mask [ 18 ] ; t#u8 filter_mode [ 18 ] ; s#dmx_section_feed * parent ; void * priv ; } 
s#dmx_section_feed struct dmx_section_feed { int is_filtering ; s#dmx_demux * parent ; void * priv ; int check_crc ; t#u32 crc_val ; t#u8 * secbuf ; t#u8 secbuf_base [ ( 4096 + 188 ) ] ; t#u16 secbufp , seclen , tsfeedp ; int ( * set ) ( s#dmx_section_feed * , t#u16 , t#size_t , int ) ; int ( * allocate_filter ) ( s#dmx_section_feed * , s#dmx_section_filter * * ) ; int ( * release_filter ) ( s#dmx_section_feed * , s#dmx_section_filter * ) ; int ( * start_filtering ) ( s#dmx_section_feed * ) ; int ( * stop_filtering ) ( s#dmx_section_feed * ) ; } 
t#dmx_section_cb typedef int ( * dmx_section_cb ) ( const t#u8 * , t#size_t , const t#u8 * , t#size_t , s#dmx_section_filter * , e#dmx_success ) 
s#dmx_caps struct dmx_caps { t#__u32 caps ; int num_decoders ; } 
t#dmx_source_t typedef enum { DMX_SOURCE_FRONT0 = 0 , DMX_SOURCE_FRONT1 , DMX_SOURCE_FRONT2 , DMX_SOURCE_FRONT3 , DMX_SOURCE_DVR0 = 16 , DMX_SOURCE_DVR1 , DMX_SOURCE_DVR2 , DMX_SOURCE_DVR3 } dmx_source_t 
s#dmx_demux struct dmx_demux { t#u32 capabilities ; s#dmx_frontend * frontend ; void * priv ; int ( * open ) ( s#dmx_demux * ) ; int ( * close ) ( s#dmx_demux * ) ; int ( * write ) ( s#dmx_demux * , const char * , t#size_t ) ; int ( * allocate_ts_feed ) ( s#dmx_demux * , s#dmx_ts_feed * * , t#dmx_ts_cb ) ; int ( * release_ts_feed ) ( s#dmx_demux * , s#dmx_ts_feed * ) ; int ( * allocate_section_feed ) ( s#dmx_demux * , s#dmx_section_feed * * , t#dmx_section_cb ) ; int ( * release_section_feed ) ( s#dmx_demux * , s#dmx_section_feed * ) ; int ( * add_frontend ) ( s#dmx_demux * , s#dmx_frontend * ) ; int ( * remove_frontend ) ( s#dmx_demux * , s#dmx_frontend * ) ; s#list_head * ( * get_frontends ) ( s#dmx_demux * ) ; int ( * connect_frontend ) ( s#dmx_demux * , s#dmx_frontend * ) ; int ( * disconnect_frontend ) ( s#dmx_demux * ) ; int ( * get_pes_pids ) ( s#dmx_demux * , t#u16 * ) ; int ( * get_caps ) ( s#dmx_demux * , s#dmx_caps * ) ; int ( * set_source ) ( s#dmx_demux * , const t#dmx_source_t * ) ; int ( * get_stc ) ( s#dmx_demux * , unsigned int , t#u64 * , unsigned int * ) ; } 
s#dvb_net struct dvb_net { s#dvb_device * dvbdev ; s#net_device * device [ 10 ] ; int state [ 10 ] ; unsigned int exit : 1 ; s#dmx_demux * demux ; } 
s#dvb_demux_filter struct dvb_demux_filter { s#dmx_section_filter filter ; t#u8 maskandmode [ 18 ] ; t#u8 maskandnotmode [ 18 ] ; int doneq ; s#dvb_demux_filter * next ; s#dvb_demux_feed * feed ; int index ; int state ; int type ; t#u16 hw_handle ; s#timer_list timer ; } 
s#dvb_demux_feed struct dvb_demux_feed { union { s#dmx_ts_feed ts ; s#dmx_section_feed sec ; } feed ; union { t#dmx_ts_cb ts ; t#dmx_section_cb sec ; } cb ; s#dvb_demux * demux ; void * priv ; int type ; int state ; t#u16 pid ; t#u8 * buffer ; int buffer_size ; s#timespec timeout ; s#dvb_demux_filter * filter ; int ts_type ; e#dmx_ts_pes pes_type ; int cc ; int pusi_seen ; t#u16 peslen ; s#list_head list_head ; unsigned int index ; } 
E#DMX_TS_PES_OTHER 20 
s#dvb_demux struct dvb_demux { s#dmx_demux dmx ; void * priv ; int filternum ; int feednum ; int ( * start_feed ) ( s#dvb_demux_feed * ) ; int ( * stop_feed ) ( s#dvb_demux_feed * ) ; int ( * write_to_decoder ) ( s#dvb_demux_feed * , const t#u8 * , t#size_t ) ; t#u32 ( * check_crc32 ) ( s#dvb_demux_feed * , const t#u8 * , t#size_t ) ; void ( * memcopy ) ( s#dvb_demux_feed * , t#u8 * , const t#u8 * , t#size_t ) ; int users ; s#dvb_demux_filter * filter ; s#dvb_demux_feed * feed ; s#list_head frontend_list ; s#dvb_demux_feed * pesfilter [ E#DMX_TS_PES_OTHER ] ; t#u16 pids [ E#DMX_TS_PES_OTHER ] ; int playing ; int recording ; s#list_head feed_list ; t#u8 tsbuf [ 204 ] ; int tsbufp ; s#mutex mutex ; t#spinlock_t lock ; t#uint8_t * cnt_storage ; s#timespec speed_last_time ; t#uint32_t speed_pkts_cnt ; } 
s#dmx_filter struct dmx_filter { t#__u8 filter [ 16 ] ; t#__u8 mask [ 16 ] ; t#__u8 mode [ 16 ] ; } 
t#dmx_filter_t typedef s#dmx_filter dmx_filter_t 
s#dmx_sct_filter_params struct dmx_sct_filter_params { t#__u16 pid ; t#dmx_filter_t filter ; t#__u32 timeout ; t#__u32 flags ; } 
t#dmx_input_t typedef enum { DMX_IN_FRONTEND , DMX_IN_DVR } dmx_input_t 
t#dmx_output_t typedef enum { DMX_OUT_DECODER , DMX_OUT_TAP , DMX_OUT_TS_TAP , DMX_OUT_TSDEMUX_TAP } dmx_output_t 
t#dmx_pes_type_t typedef enum { DMX_PES_AUDIO0 , DMX_PES_VIDEO0 , DMX_PES_TELETEXT0 , DMX_PES_SUBTITLE0 , DMX_PES_PCR0 , DMX_PES_AUDIO1 , DMX_PES_VIDEO1 , DMX_PES_TELETEXT1 , DMX_PES_SUBTITLE1 , DMX_PES_PCR1 , DMX_PES_AUDIO2 , DMX_PES_VIDEO2 , DMX_PES_TELETEXT2 , DMX_PES_SUBTITLE2 , DMX_PES_PCR2 , DMX_PES_AUDIO3 , DMX_PES_VIDEO3 , DMX_PES_TELETEXT3 , DMX_PES_SUBTITLE3 , DMX_PES_PCR3 , DMX_PES_OTHER } dmx_pes_type_t 
s#dmx_pes_filter_params struct dmx_pes_filter_params { t#__u16 pid ; t#dmx_input_t input ; t#dmx_output_t output ; t#dmx_pes_type_t pes_type ; t#__u32 flags ; } 
e#dmxdev_type enum dmxdev_type { DMXDEV_TYPE_NONE , DMXDEV_TYPE_SEC , DMXDEV_TYPE_PES , } 
e#dmxdev_state enum dmxdev_state { DMXDEV_STATE_FREE , DMXDEV_STATE_ALLOCATED , DMXDEV_STATE_SET , DMXDEV_STATE_GO , DMXDEV_STATE_DONE , DMXDEV_STATE_TIMEDOUT } 
s#dvb_ringbuffer struct dvb_ringbuffer { t#u8 * data ; t#ssize_t size ; t#ssize_t pread ; t#ssize_t pwrite ; int error ; t#wait_queue_head_t queue ; t#spinlock_t lock ; } 
s#dmxdev_filter struct dmxdev_filter { union { s#dmx_section_filter * sec ; } filter ; union { s#list_head ts ; s#dmx_section_feed * sec ; } feed ; union { s#dmx_sct_filter_params sec ; s#dmx_pes_filter_params pes ; } params ; e#dmxdev_type type ; e#dmxdev_state state ; s#dmxdev * dev ; s#dvb_ringbuffer buffer ; s#mutex mutex ; s#timer_list timer ; int todo ; t#u8 secheader [ 3 ] ; } 
s#dmxdev struct dmxdev { s#dvb_device * dvbdev ; s#dvb_device * dvr_dvbdev ; s#dmxdev_filter * filter ; s#dmx_demux * demux ; int filternum ; int capabilities ; unsigned int exit : 1 ; s#dmx_frontend * dvr_orig_fe ; s#dvb_ringbuffer dvr_buffer ; s#mutex mutex ; t#spinlock_t lock ; } 
t#flexcop_i2c_port_t typedef enum { FC_I2C_PORT_DEMOD = 1 , FC_I2C_PORT_EEPROM = 2 , FC_I2C_PORT_TUNER = 3 , } flexcop_i2c_port_t 
s#flexcop_i2c_adapter struct flexcop_i2c_adapter { s#flexcop_device * fc ; s#i2c_adapter i2c_adap ; t#u8 no_base_addr ; t#flexcop_i2c_port_t port ; } 
t#flexcop_ibi_value typedef union { t#u32 raw ; struct { t#u32 dma_address0 : 30 ; t#u32 dma_0No_update : 1 ; t#u32 dma_0start : 1 ; } dma_0x0 ; struct { t#u32 dma_addr_size : 24 ; t#u32 DMA_maxpackets : 8 ; } dma_0x4_remap ; struct { t#u32 dma_addr_size : 24 ; t#u32 unused : 1 ; t#u32 dma1timer : 7 ; } dma_0x4_read ; struct { t#u32 dma_addr_size : 24 ; t#u32 dmatimer : 7 ; t#u32 unused : 1 ; } dma_0x4_write ; struct { t#u32 dma_cur_addr : 30 ; t#u32 unused : 2 ; } dma_0x8 ; struct { t#u32 dma_address1 : 30 ; t#u32 remap_enable : 1 ; t#u32 dma_1start : 1 ; } dma_0xc ; struct { t#u32 st_done : 1 ; t#u32 no_base_addr_ack_error : 1 ; t#u32 twoWS_port_reg : 2 ; t#u32 total_bytes : 2 ; t#u32 twoWS_rw : 1 ; t#u32 working_start : 1 ; t#u32 data1_reg : 8 ; t#u32 baseaddr : 8 ; t#u32 reserved1 : 1 ; t#u32 chipaddr : 7 ; } tw_sm_c_100 ; struct { t#u32 unused : 6 ; t#u32 force_stop : 1 ; t#u32 exlicit_stops : 1 ; t#u32 data4_reg : 8 ; t#u32 data3_reg : 8 ; t#u32 data2_reg : 8 ; } tw_sm_c_104 ; struct { t#u32 reserved2 : 19 ; t#u32 tlo1 : 5 ; t#u32 reserved1 : 2 ; t#u32 thi1 : 6 ; } tw_sm_c_108 ; struct { t#u32 reserved2 : 19 ; t#u32 tlo1 : 5 ; t#u32 reserved1 : 2 ; t#u32 thi1 : 6 ; } tw_sm_c_10c ; struct { t#u32 reserved2 : 19 ; t#u32 tlo1 : 5 ; t#u32 reserved1 : 2 ; t#u32 thi1 : 6 ; } tw_sm_c_110 ; struct { t#u32 LNB_CTLPrescaler_sig : 2 ; t#u32 LNB_CTLLowCount_sig : 15 ; t#u32 LNB_CTLHighCount_sig : 15 ; } lnb_switch_freq_200 ; struct { t#u32 Rev_N_sig_reserved2 : 1 ; t#u32 Rev_N_sig_caps : 1 ; t#u32 Rev_N_sig_reserved1 : 2 ; t#u32 Rev_N_sig_revision_hi : 4 ; t#u32 reserved : 20 ; t#u32 Per_reset_sig : 1 ; t#u32 LNB_L_H_sig : 1 ; t#u32 ACPI3_sig : 1 ; t#u32 ACPI1_sig : 1 ; } misc_204 ; struct { t#u32 unused : 9 ; t#u32 Mailbox_from_V8_Enable_sig : 1 ; t#u32 DMA2_Size_IRQ_Enable_sig : 1 ; t#u32 DMA1_Size_IRQ_Enable_sig : 1 ; t#u32 DMA2_Timer_Enable_sig : 1 ; t#u32 DMA2_IRQ_Enable_sig : 1 ; t#u32 DMA1_Timer_Enable_sig : 1 ; t#u32 DMA1_IRQ_Enable_sig : 1 ; t#u32 Rcv_Data_sig : 1 ; t#u32 MAC_filter_Mode_sig : 1 ; t#u32 Multi2_Enable_sig : 1 ; t#u32 Per_CA_Enable_sig : 1 ; t#u32 SMC_Enable_sig : 1 ; t#u32 CA_Enable_sig : 1 ; t#u32 WAN_CA_Enable_sig : 1 ; t#u32 WAN_Enable_sig : 1 ; t#u32 Mask_filter_sig : 1 ; t#u32 Null_filter_sig : 1 ; t#u32 ECM_filter_sig : 1 ; t#u32 EMM_filter_sig : 1 ; t#u32 PMT_filter_sig : 1 ; t#u32 PCR_filter_sig : 1 ; t#u32 Stream2_filter_sig : 1 ; t#u32 Stream1_filter_sig : 1 ; } ctrl_208 ; struct { t#u32 reserved : 21 ; t#u32 Transport_Error : 1 ; t#u32 LLC_SNAP_FLAG_set : 1 ; t#u32 Continuity_error_flag : 1 ; t#u32 Data_receiver_error : 1 ; t#u32 Mailbox_from_V8_Status_sig : 1 ; t#u32 DMA2_Size_IRQ_Status : 1 ; t#u32 DMA1_Size_IRQ_Status : 1 ; t#u32 DMA2_Timer_Status : 1 ; t#u32 DMA2_IRQ_Status : 1 ; t#u32 DMA1_Timer_Status : 1 ; t#u32 DMA1_IRQ_Status : 1 ; } irq_20c ; struct { t#u32 Special_controls : 16 ; t#u32 Block_reset_enable : 8 ; t#u32 reset_block_700 : 1 ; t#u32 reset_block_600 : 1 ; t#u32 reset_block_500 : 1 ; t#u32 reset_block_400 : 1 ; t#u32 reset_block_300 : 1 ; t#u32 reset_block_200 : 1 ; t#u32 reset_block_100 : 1 ; t#u32 reset_block_000 : 1 ; } sw_reset_210 ; struct { t#u32 unused2 : 20 ; t#u32 polarity_PS_ERR_sig : 1 ; t#u32 polarity_PS_SYNC_sig : 1 ; t#u32 polarity_PS_VALID_sig : 1 ; t#u32 polarity_PS_CLK_sig : 1 ; t#u32 unused1 : 3 ; t#u32 s2p_sel_sig : 1 ; t#u32 section_pkg_enable_sig : 1 ; t#u32 halt_V8_sig : 1 ; t#u32 v2WS_oe_sig : 1 ; t#u32 vuart_oe_sig : 1 ; } misc_214 ; struct { t#u32 Mailbox_from_V8 : 32 ; } mbox_v8_to_host_218 ; struct { t#u32 sysramaccess_busmuster : 1 ; t#u32 sysramaccess_write : 1 ; t#u32 unused : 7 ; t#u32 sysramaccess_addr : 15 ; t#u32 sysramaccess_data : 8 ; } mbox_host_to_v8_21c ; struct { t#u32 debug_fifo_problem : 1 ; t#u32 debug_flag_write_status00 : 1 ; t#u32 Stream2_trans : 1 ; t#u32 Stream2_PID : 13 ; t#u32 debug_flag_pid_saved : 1 ; t#u32 MAC_Multicast_filter : 1 ; t#u32 Stream1_trans : 1 ; t#u32 Stream1_PID : 13 ; } pid_filter_300 ; struct { t#u32 reserved : 2 ; t#u32 PMT_trans : 1 ; t#u32 PMT_PID : 13 ; t#u32 debug_overrun2 : 1 ; t#u32 debug_overrun3 : 1 ; t#u32 PCR_trans : 1 ; t#u32 PCR_PID : 13 ; } pid_filter_304 ; struct { t#u32 reserved : 2 ; t#u32 ECM_trans : 1 ; t#u32 ECM_PID : 13 ; t#u32 EMM_filter_6 : 1 ; t#u32 EMM_filter_4 : 1 ; t#u32 EMM_trans : 1 ; t#u32 EMM_PID : 13 ; } pid_filter_308 ; struct { t#u32 unused2 : 3 ; t#u32 Group_mask : 13 ; t#u32 unused1 : 2 ; t#u32 Group_trans : 1 ; t#u32 Group_PID : 13 ; } pid_filter_30c_ext_ind_0_7 ; struct { t#u32 unused : 15 ; t#u32 net_master_read : 17 ; } pid_filter_30c_ext_ind_1 ; struct { t#u32 unused : 15 ; t#u32 net_master_write : 17 ; } pid_filter_30c_ext_ind_2 ; struct { t#u32 unused : 15 ; t#u32 next_net_master_write : 17 ; } pid_filter_30c_ext_ind_3 ; struct { t#u32 reserved2 : 5 ; t#u32 stack_read : 10 ; t#u32 reserved1 : 6 ; t#u32 state_write : 10 ; t#u32 unused1 : 1 ; } pid_filter_30c_ext_ind_4 ; struct { t#u32 unused : 22 ; t#u32 stack_cnt : 10 ; } pid_filter_30c_ext_ind_5 ; struct { t#u32 unused : 4 ; t#u32 data_size_reg : 12 ; t#u32 write_status4 : 2 ; t#u32 write_status1 : 2 ; t#u32 pid_fsm_save_reg300 : 2 ; t#u32 pid_fsm_save_reg4 : 2 ; t#u32 pid_fsm_save_reg3 : 2 ; t#u32 pid_fsm_save_reg2 : 2 ; t#u32 pid_fsm_save_reg1 : 2 ; t#u32 pid_fsm_save_reg0 : 2 ; } pid_filter_30c_ext_ind_6 ; struct { t#u32 unused : 22 ; t#u32 pass_alltables : 1 ; t#u32 AB_select : 1 ; t#u32 extra_index_reg : 3 ; t#u32 index_reg : 5 ; } index_reg_310 ; struct { t#u32 reserved : 17 ; t#u32 PID_enable_bit : 1 ; t#u32 PID_trans : 1 ; t#u32 PID : 13 ; } pid_n_reg_314 ; struct { t#u32 reserved : 6 ; t#u32 HighAB_bit : 1 ; t#u32 Enable_bit : 1 ; t#u32 A6_byte : 8 ; t#u32 A5_byte : 8 ; t#u32 A4_byte : 8 ; } mac_low_reg_318 ; struct { t#u32 reserved : 8 ; t#u32 A3_byte : 8 ; t#u32 A2_byte : 8 ; t#u32 A1_byte : 8 ; } mac_high_reg_31c ; struct { t#u32 data_Tag_ID : 16 ; t#u32 reserved : 16 ; } data_tag_400 ; struct { t#u32 Card_IDbyte3 : 8 ; t#u32 Card_IDbyte4 : 8 ; t#u32 Card_IDbyte5 : 8 ; t#u32 Card_IDbyte6 : 8 ; } card_id_408 ; struct { t#u32 Card_IDbyte1 : 8 ; t#u32 Card_IDbyte2 : 8 ; } card_id_40c ; struct { t#u32 MAC6 : 8 ; t#u32 MAC3 : 8 ; t#u32 MAC2 : 8 ; t#u32 MAC1 : 8 ; } mac_address_418 ; struct { t#u32 reserved : 16 ; t#u32 MAC8 : 8 ; t#u32 MAC7 : 8 ; } mac_address_41c ; struct { t#u32 reserved : 21 ; t#u32 txbuffempty : 1 ; t#u32 ReceiveByteFrameError : 1 ; t#u32 ReceiveDataReady : 1 ; t#u32 transmitter_data_byte : 8 ; } ci_600 ; struct { t#u32 pi_component_reg : 3 ; t#u32 pi_rw : 1 ; t#u32 pi_ha : 20 ; t#u32 pi_d : 8 ; } pi_604 ; struct { t#u32 pi_busy_n : 1 ; t#u32 pi_wait_n : 1 ; t#u32 pi_timeout_status : 1 ; t#u32 pi_CiMax_IRQ_n : 1 ; t#u32 config_cclk : 1 ; t#u32 config_cs_n : 1 ; t#u32 config_wr_n : 1 ; t#u32 config_Prog_n : 1 ; t#u32 config_Init_stat : 1 ; t#u32 config_Done_stat : 1 ; t#u32 pcmcia_b_mod_pwr_n : 1 ; t#u32 pcmcia_a_mod_pwr_n : 1 ; t#u32 reserved : 3 ; t#u32 Timer_addr : 5 ; t#u32 unused : 1 ; t#u32 timer_data : 7 ; t#u32 Timer_Load_req : 1 ; t#u32 Timer_Read_req : 1 ; t#u32 oncecycle_read : 1 ; t#u32 serialReset : 1 ; } pi_608 ; struct { t#u32 reserved : 6 ; t#u32 rw_flag : 1 ; t#u32 dvb_en : 1 ; t#u32 key_array_row : 5 ; t#u32 key_array_col : 3 ; t#u32 key_code : 2 ; t#u32 key_enable : 1 ; t#u32 PID : 13 ; } dvb_reg_60c ; struct { t#u32 start_sram_ibi : 1 ; t#u32 reserved2 : 1 ; t#u32 ce_pin_reg : 1 ; t#u32 oe_pin_reg : 1 ; t#u32 reserved1 : 3 ; t#u32 sc_xfer_bit : 1 ; t#u32 sram_data : 8 ; t#u32 sram_rw : 1 ; t#u32 sram_addr : 15 ; } sram_ctrl_reg_700 ; struct { t#u32 net_addr_write : 16 ; t#u32 net_addr_read : 16 ; } net_buf_reg_704 ; struct { t#u32 cai_cnt : 4 ; t#u32 reserved2 : 6 ; t#u32 cai_write : 11 ; t#u32 reserved1 : 5 ; t#u32 cai_read : 11 ; } cai_buf_reg_708 ; struct { t#u32 cao_cnt : 4 ; t#u32 reserved2 : 6 ; t#u32 cap_write : 11 ; t#u32 reserved1 : 5 ; t#u32 cao_read : 11 ; } cao_buf_reg_70c ; struct { t#u32 media_cnt : 4 ; t#u32 reserved2 : 6 ; t#u32 media_write : 11 ; t#u32 reserved1 : 5 ; t#u32 media_read : 11 ; } media_buf_reg_710 ; struct { t#u32 reserved : 17 ; t#u32 ctrl_maximumfill : 1 ; t#u32 ctrl_sramdma : 1 ; t#u32 ctrl_usb_wan : 1 ; t#u32 cao_ovflow_error : 1 ; t#u32 cai_ovflow_error : 1 ; t#u32 media_ovflow_error : 1 ; t#u32 net_ovflow_error : 1 ; t#u32 MEDIA_Dest : 2 ; t#u32 CAO_Dest : 2 ; t#u32 CAI_Dest : 2 ; t#u32 NET_Dest : 2 ; } sram_dest_reg_714 ; struct { t#u32 reserved3 : 11 ; t#u32 net_addr_write : 1 ; t#u32 reserved2 : 3 ; t#u32 net_addr_read : 1 ; t#u32 reserved1 : 4 ; t#u32 net_cnt : 12 ; } net_buf_reg_718 ; struct { t#u32 reserved3 : 4 ; t#u32 wan_pkt_frame : 4 ; t#u32 reserved2 : 4 ; t#u32 sram_memmap : 2 ; t#u32 sram_chip : 2 ; t#u32 wan_wait_state : 8 ; t#u32 reserved1 : 6 ; t#u32 wan_speed_sig : 2 ; } wan_ctrl_reg_71c ; } flexcop_ibi_value 
t#flexcop_ibi_register typedef enum { dma1_000 = 0x000 , dma1_004 = 0x004 , dma1_008 = 0x008 , dma1_00c = 0x00c , dma2_010 = 0x010 , dma2_014 = 0x014 , dma2_018 = 0x018 , dma2_01c = 0x01c , tw_sm_c_100 = 0x100 , tw_sm_c_104 = 0x104 , tw_sm_c_108 = 0x108 , tw_sm_c_10c = 0x10c , tw_sm_c_110 = 0x110 , lnb_switch_freq_200 = 0x200 , misc_204 = 0x204 , ctrl_208 = 0x208 , irq_20c = 0x20c , sw_reset_210 = 0x210 , misc_214 = 0x214 , mbox_v8_to_host_218 = 0x218 , mbox_host_to_v8_21c = 0x21c , pid_filter_300 = 0x300 , pid_filter_304 = 0x304 , pid_filter_308 = 0x308 , pid_filter_30c = 0x30c , index_reg_310 = 0x310 , pid_n_reg_314 = 0x314 , mac_low_reg_318 = 0x318 , mac_high_reg_31c = 0x31c , data_tag_400 = 0x400 , card_id_408 = 0x408 , card_id_40c = 0x40c , mac_address_418 = 0x418 , mac_address_41c = 0x41c , ci_600 = 0x600 , pi_604 = 0x604 , pi_608 = 0x608 , dvb_reg_60c = 0x60c , sram_ctrl_reg_700 = 0x700 , net_buf_reg_704 = 0x704 , cai_buf_reg_708 = 0x708 , cao_buf_reg_70c = 0x70c , media_buf_reg_710 = 0x710 , sram_dest_reg_714 = 0x714 , net_buf_reg_718 = 0x718 , wan_ctrl_reg_71c = 0x71c , } flexcop_ibi_register 
t#flexcop_access_op_t typedef enum { FC_WRITE = 0 , FC_READ = 1 , } flexcop_access_op_t 
s#flexcop_device struct flexcop_device { s#device * dev ; int init_state ; int has_32_hw_pid_filter ; t#flexcop_revision_t rev ; t#flexcop_device_type_t dev_type ; t#flexcop_bus_t bus_type ; s#dvb_adapter dvb_adapter ; s#dvb_frontend * fe ; s#dvb_net dvbnet ; s#dvb_demux demux ; s#dmxdev dmxdev ; s#dmx_frontend hw_frontend ; s#dmx_frontend mem_frontend ; int ( * fe_sleep ) ( s#dvb_frontend * ) ; s#flexcop_i2c_adapter fc_i2c_adap [ 3 ] ; s#mutex i2c_mutex ; s#module * owner ; int extra_feedcount ; int feedcount ; int pid_filtering ; int fullts_streaming_state ; t#flexcop_ibi_value ( * read_ibi_reg ) ( s#flexcop_device * , t#flexcop_ibi_register ) ; int ( * write_ibi_reg ) ( s#flexcop_device * , t#flexcop_ibi_register , t#flexcop_ibi_value ) ; int ( * i2c_request ) ( s#flexcop_i2c_adapter * , t#flexcop_access_op_t , t#u8 , t#u8 , t#u8 * , t#u16 ) ; int ( * stream_control ) ( s#flexcop_device * , int ) ; int ( * get_mac_addr ) ( s#flexcop_device * , int ) ; void * bus_specific ; } 
flexcop_pass_dmx_data void flexcop_pass_dmx_data ( s#flexcop_device * , t#u8 * , t#u32 ) 
flexcop_pass_dmx_packets void flexcop_pass_dmx_packets ( s#flexcop_device * , t#u8 * , t#u32 ) 
flexcop_device_kmalloc s#flexcop_device * flexcop_device_kmalloc ( t#size_t ) 
flexcop_device_kfree void flexcop_device_kfree ( s#flexcop_device * ) 
flexcop_device_initialize int flexcop_device_initialize ( s#flexcop_device * ) 
flexcop_device_exit void flexcop_device_exit ( s#flexcop_device * ) 

/* drivers/media/dvb/b2c2/flexcop-dma.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#flexcop_dma struct flexcop_dma { s#pci_dev * pdev ; t#u8 * cpu_addr0 ; t#dma_addr_t dma_addr0 ; t#u8 * cpu_addr1 ; t#dma_addr_t dma_addr1 ; t#u32 size ; } 
flexcop_dma_allocate int flexcop_dma_allocate ( s#pci_dev * , s#flexcop_dma * , t#u32 ) 
flexcop_dma_free void flexcop_dma_free ( s#flexcop_dma * ) 
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
t#flexcop_dma_index_t typedef enum { FC_DMA_1 = 1 , FC_DMA_2 = 2 , } flexcop_dma_index_t 
flexcop_dma_config int flexcop_dma_config ( s#flexcop_device * , s#flexcop_dma * , t#flexcop_dma_index_t ) 
t#flexcop_dma_addr_index_t typedef enum { FC_DMA_SUBADDR_0 = 1 , FC_DMA_SUBADDR_1 = 2 , } flexcop_dma_addr_index_t 
flexcop_dma_xfer_control int flexcop_dma_xfer_control ( s#flexcop_device * , t#flexcop_dma_index_t , t#flexcop_dma_addr_index_t , int ) 
flexcop_dma_control_size_irq int flexcop_dma_control_size_irq ( s#flexcop_device * , t#flexcop_dma_index_t , int ) 
flexcop_dma_control_timer_irq int flexcop_dma_control_timer_irq ( s#flexcop_device * , t#flexcop_dma_index_t , int ) 
flexcop_dma_config_timer int flexcop_dma_config_timer ( s#flexcop_device * , t#flexcop_dma_index_t , t#u8 ) 

/* drivers/media/dvb/b2c2/flexcop-eeprom.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
flexcop_eeprom_check_mac_addr int flexcop_eeprom_check_mac_addr ( s#flexcop_device * , int ) 

/* drivers/media/dvb/b2c2/flexcop-hw-filter.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
flexcop_pid_feed_control int flexcop_pid_feed_control ( s#flexcop_device * , s#dvb_demux_feed * , int ) 

/* drivers/media/dvb/b2c2/flexcop-i2c.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
flexcop_i2c_request int flexcop_i2c_request ( s#flexcop_i2c_adapter * , t#flexcop_access_op_t , t#u8 , t#u8 , t#u8 * , t#u16 ) 

/* drivers/media/dvb/b2c2/flexcop-misc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
flexcop_dump_reg void flexcop_dump_reg ( s#flexcop_device * , t#flexcop_ibi_register , int ) 

/* drivers/media/dvb/b2c2/flexcop-sram.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
t#flexcop_sram_dest_t typedef enum { FC_SRAM_DEST_NET = 1 , FC_SRAM_DEST_CAI = 2 , FC_SRAM_DEST_CAO = 4 , FC_SRAM_DEST_MEDIA = 8 } flexcop_sram_dest_t 
t#flexcop_sram_dest_target_t typedef enum { FC_SRAM_DEST_TARGET_WAN_USB = 0 , FC_SRAM_DEST_TARGET_DMA1 = 1 , FC_SRAM_DEST_TARGET_DMA2 = 2 , FC_SRAM_DEST_TARGET_FC3_CA = 3 } flexcop_sram_dest_target_t 
flexcop_sram_set_dest int flexcop_sram_set_dest ( s#flexcop_device * , t#flexcop_sram_dest_t , t#flexcop_sram_dest_target_t ) 
t#flexcop_wan_speed_t typedef enum { FC_WAN_SPEED_4MBITS = 0 , FC_WAN_SPEED_8MBITS = 1 , FC_WAN_SPEED_12MBITS = 2 , FC_WAN_SPEED_16MBITS = 3 , } flexcop_wan_speed_t 
flexcop_wan_set_speed void flexcop_wan_set_speed ( s#flexcop_device * , t#flexcop_wan_speed_t ) 
flexcop_sram_ctrl void flexcop_sram_ctrl ( s#flexcop_device * , int , int , int ) 

/* drivers/media/dvb/bt8xx/bt878.o */
bt878_num extern int bt878_num 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#bt878 struct bt878 { s#mutex gpio_lock ; unsigned int nr ; unsigned int bttv_nr ; s#i2c_adapter * adapter ; s#pci_dev * dev ; unsigned int id ; unsigned int TS_Size ; unsigned char revision ; unsigned int irq ; unsigned long bt878_adr ; volatile void * bt878_mem ; volatile t#u32 finished_block ; volatile t#u32 last_block ; t#u32 block_count ; t#u32 block_bytes ; t#u32 line_bytes ; t#u32 line_count ; t#u32 buf_size ; t#u8 * buf_cpu ; t#dma_addr_t buf_dma ; t#u32 risc_size ; t#__le32 * risc_cpu ; t#dma_addr_t risc_dma ; t#u32 risc_pos ; s#tasklet_struct tasklet ; int shutdown ; } 
bt878 extern s#bt878 bt878 [ 4 ] 
bt878_start void bt878_start ( s#bt878 * , t#u32 , t#u32 , t#u32 ) 
bt878_stop void bt878_stop ( s#bt878 * ) 
s#dst_gpio_enable struct dst_gpio_enable { t#u32 mask ; t#u32 enable ; } 
s#dst_gpio_output struct dst_gpio_output { t#u32 mask ; t#u32 highvals ; } 
s#dst_gpio_read struct dst_gpio_read { unsigned long value ; } 
u#dst_gpio_packet union dst_gpio_packet { s#dst_gpio_enable enb ; s#dst_gpio_output outp ; s#dst_gpio_read rd ; int psize ; } 
bt878_device_control int bt878_device_control ( s#bt878 * , unsigned int , u#dst_gpio_packet * ) 

/* drivers/media/dvb/bt8xx/dst.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#dst_config struct dst_config { t#u8 demod_address ; } 
s#dst_state struct dst_state { s#i2c_adapter * i2c ; s#bt878 * bt ; const s#dst_config * config ; s#dvb_frontend frontend ; t#u8 tx_tuna [ 10 ] ; t#u8 rx_tuna [ 10 ] ; t#u8 rxbuffer [ 10 ] ; t#u8 diseq_flags ; t#u8 dst_type ; t#u32 type_flags ; t#u32 frequency ; t#fe_spectral_inversion_t inversion ; t#u32 symbol_rate ; t#fe_code_rate_t fec ; t#fe_sec_voltage_t voltage ; t#fe_sec_tone_mode_t tone ; t#u32 decode_freq ; t#u8 decode_lock ; t#u16 decode_strength ; t#u16 decode_snr ; unsigned long cur_jiff ; t#u8 k22 ; t#fe_bandwidth_t bandwidth ; t#u32 dst_hw_cap ; t#u8 dst_fw_version ; t#fe_sec_mini_cmd_t minicmd ; t#fe_modulation_t modulation ; t#u8 messages [ 256 ] ; t#u8 mac_address [ 8 ] ; t#u8 fw_version [ 8 ] ; t#u8 card_info [ 8 ] ; t#u8 vendor [ 8 ] ; t#u8 board_info [ 8 ] ; t#u32 tuner_type ; char * tuner_name ; s#mutex dst_mutex ; t#u8 fw_name [ 8 ] ; s#dvb_device * dst_ca ; } 
rdc_reset_state int rdc_reset_state ( s#dst_state * ) 
dst_pio_disable int dst_pio_disable ( s#dst_state * ) 
dst_wait_dst_ready int dst_wait_dst_ready ( s#dst_state * , t#u8 ) 
dst_error_recovery int dst_error_recovery ( s#dst_state * ) 
dst_error_bailout int dst_error_bailout ( s#dst_state * ) 
dst_comm_init int dst_comm_init ( s#dst_state * ) 
write_dst int write_dst ( s#dst_state * , t#u8 * , t#u8 ) 
read_dst int read_dst ( s#dst_state * , t#u8 * , t#u8 ) 
dst_check_sum t#u8 dst_check_sum ( t#u8 * , t#u32 ) 
dst_attach s#dst_state * dst_attach ( s#dst_state * , s#dvb_adapter * ) 

/* drivers/media/dvb/bt8xx/dst_ca.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
dst_ca_attach s#dvb_device * dst_ca_attach ( s#dst_state * , s#dvb_adapter * ) 

/* drivers/media/dvb/dvb-core/dmxdev.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device
s##dvb_frontend
dvb_dmxdev_init int dvb_dmxdev_init ( s#dmxdev * , s#dvb_adapter * ) 
dvb_dmxdev_release void dvb_dmxdev_release ( s#dmxdev * ) 

/* drivers/media/dvb/dvb-core/dvb_ca_en50221.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#dvb_ca_en50221 struct dvb_ca_en50221 { s#module * owner ; int ( * read_attribute_mem ) ( s#dvb_ca_en50221 * , int , int ) ; int ( * write_attribute_mem ) ( s#dvb_ca_en50221 * , int , int , t#u8 ) ; int ( * read_cam_control ) ( s#dvb_ca_en50221 * , int , t#u8 ) ; int ( * write_cam_control ) ( s#dvb_ca_en50221 * , int , t#u8 , t#u8 ) ; int ( * slot_reset ) ( s#dvb_ca_en50221 * , int ) ; int ( * slot_shutdown ) ( s#dvb_ca_en50221 * , int ) ; int ( * slot_ts_enable ) ( s#dvb_ca_en50221 * , int ) ; int ( * poll_slot_status ) ( s#dvb_ca_en50221 * , int , int ) ; void * data ; void * private ; } 
dvb_ca_en50221_camchange_irq void dvb_ca_en50221_camchange_irq ( s#dvb_ca_en50221 * , int , int ) 
dvb_ca_en50221_camready_irq void dvb_ca_en50221_camready_irq ( s#dvb_ca_en50221 * , int ) 
dvb_ca_en50221_frda_irq void dvb_ca_en50221_frda_irq ( s#dvb_ca_en50221 * , int ) 
s##device
s##dvb_frontend
dvb_ca_en50221_init extern int dvb_ca_en50221_init ( s#dvb_adapter * , s#dvb_ca_en50221 * , int , int ) 
dvb_ca_en50221_release extern void dvb_ca_en50221_release ( s#dvb_ca_en50221 * ) 

/* drivers/media/dvb/dvb-core/dvb_demux.o */
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
dvb_dmx_swfilter_packets void dvb_dmx_swfilter_packets ( s#dvb_demux * , const t#u8 * , t#size_t ) 
dvb_dmx_swfilter void dvb_dmx_swfilter ( s#dvb_demux * , const t#u8 * , t#size_t ) 
dvb_dmx_swfilter_204 void dvb_dmx_swfilter_204 ( s#dvb_demux * , const t#u8 * , t#size_t ) 
dvb_dmx_init int dvb_dmx_init ( s#dvb_demux * ) 
dvb_dmx_release void dvb_dmx_release ( s#dvb_demux * ) 

/* drivers/media/dvb/dvb-core/dvb_filter.o */
s#dvb_audio_info struct dvb_audio_info { int layer ; t#u32 bit_rate ; t#u32 frequency ; t#u32 mode ; t#u32 mode_extension ; t#u32 emphasis ; t#u32 framesize ; t#u32 off ; } 
dvb_filter_get_ac3info int dvb_filter_get_ac3info ( t#u8 * , int , s#dvb_audio_info * , int ) 
t#dvb_filter_pes2ts_cb_t typedef int ( dvb_filter_pes2ts_cb_t ) ( void * , unsigned char * ) 
s#dvb_filter_pes2ts struct dvb_filter_pes2ts { unsigned char buf [ 188 ] ; unsigned char cc ; t#dvb_filter_pes2ts_cb_t * cb ; void * priv ; } 
dvb_filter_pes2ts_init void dvb_filter_pes2ts_init ( s#dvb_filter_pes2ts * , unsigned short , t#dvb_filter_pes2ts_cb_t * , void * ) 
dvb_filter_pes2ts int dvb_filter_pes2ts ( s#dvb_filter_pes2ts * , unsigned char * , int , int ) 

/* drivers/media/dvb/dvb-core/dvb_frontend.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dvb_frontend_reinitialise extern void dvb_frontend_reinitialise ( s#dvb_frontend * ) 
timeval_usec_diff extern t#s32 timeval_usec_diff ( s#timeval , s#timeval ) 
dvb_frontend_sleep_until extern void dvb_frontend_sleep_until ( s#timeval * , t#u32 ) 
dvb_register_frontend extern int dvb_register_frontend ( s#dvb_adapter * , s#dvb_frontend * ) 
dvb_unregister_frontend extern int dvb_unregister_frontend ( s#dvb_frontend * ) 
dvb_frontend_detach extern void dvb_frontend_detach ( s#dvb_frontend * ) 

/* drivers/media/dvb/dvb-core/dvb_math.o */
intlog2 extern unsigned int intlog2 ( t#u32 ) 
intlog10 extern unsigned int intlog10 ( t#u32 ) 

/* drivers/media/dvb/dvb-core/dvb_net.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##dvb_frontend
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
dvb_net_release void dvb_net_release ( s#dvb_net * ) 
dvb_net_init int dvb_net_init ( s#dvb_adapter * , s#dvb_net * , s#dmx_demux * ) 

/* drivers/media/dvb/dvb-core/dvb_ringbuffer.o */
dvb_ringbuffer_flush extern void dvb_ringbuffer_flush ( s#dvb_ringbuffer * ) 
dvb_ringbuffer_init extern void dvb_ringbuffer_init ( s#dvb_ringbuffer * , void * , t#size_t ) 
dvb_ringbuffer_empty extern int dvb_ringbuffer_empty ( s#dvb_ringbuffer * ) 
dvb_ringbuffer_free extern t#ssize_t dvb_ringbuffer_free ( s#dvb_ringbuffer * ) 
dvb_ringbuffer_avail extern t#ssize_t dvb_ringbuffer_avail ( s#dvb_ringbuffer * ) 
dvb_ringbuffer_flush_spinlock_wakeup extern void dvb_ringbuffer_flush_spinlock_wakeup ( s#dvb_ringbuffer * ) 
dvb_ringbuffer_read_user extern t#ssize_t dvb_ringbuffer_read_user ( s#dvb_ringbuffer * , t#u8 * , t#size_t ) 
dvb_ringbuffer_read extern void dvb_ringbuffer_read ( s#dvb_ringbuffer * , t#u8 * , t#size_t ) 
dvb_ringbuffer_write extern t#ssize_t dvb_ringbuffer_write ( s#dvb_ringbuffer * , const t#u8 * , t#size_t ) 

/* drivers/media/dvb/dvb-core/dvbdev.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
dvb_generic_open extern int dvb_generic_open ( s#inode * , s#file * ) 
dvb_generic_release extern int dvb_generic_release ( s#inode * , s#file * ) 
dvb_generic_ioctl extern long dvb_generic_ioctl ( s#file * , unsigned int , unsigned long ) 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##dvb_frontend
dvb_register_device extern int dvb_register_device ( s#dvb_adapter * , s#dvb_device * * , const s#dvb_device * , void * , int ) 
dvb_unregister_device extern void dvb_unregister_device ( s#dvb_device * ) 
dvb_register_adapter extern int dvb_register_adapter ( s#dvb_adapter * , const char * , s#module * , s#device * , short * ) 
dvb_unregister_adapter extern int dvb_unregister_adapter ( s#dvb_adapter * ) 

/* drivers/media/dvb/dvb-usb/af9005-remote.o */
s#rc_map_table struct rc_map_table { t#u32 scancode ; t#u32 keycode ; } 
rc_map_af9005_table extern s#rc_map_table rc_map_af9005_table [ ] 
rc_map_af9005_table_size extern int rc_map_af9005_table_size 
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s#usb_data_stream_properties struct usb_data_stream_properties { int type ; int count ; int endpoint ; union { struct { int buffersize ; } bulk ; struct { int framesperurb ; int framesize ; int interval ; } isoc ; } u ; } 
s#usb_anchor struct usb_anchor { s#list_head urb_list ; t#wait_queue_head_t wait ; t#spinlock_t lock ; unsigned int poisoned : 1 ; } 
t#usb_complete_t typedef void ( * usb_complete_t ) ( s#urb * ) 
s#usb_iso_packet_descriptor struct usb_iso_packet_descriptor { unsigned int offset ; unsigned int length ; unsigned int actual_length ; int status ; } 
s#urb struct urb { s#kref kref ; void * hcpriv ; t#atomic_t use_count ; t#atomic_t reject ; int unlinked ; s#list_head urb_list ; s#list_head anchor_list ; s#usb_anchor * anchor ; s#usb_device * dev ; s#usb_host_endpoint * ep ; unsigned int pipe ; unsigned int stream_id ; int status ; unsigned int transfer_flags ; void * transfer_buffer ; t#dma_addr_t transfer_dma ; s#scatterlist * sg ; int num_mapped_sgs ; int num_sgs ; t#u32 transfer_buffer_length ; t#u32 actual_length ; unsigned char * setup_packet ; t#dma_addr_t setup_dma ; int start_frame ; int number_of_packets ; int interval ; int error_count ; void * context ; t#usb_complete_t complete ; s#usb_iso_packet_descriptor iso_frame_desc [ 0 ] ; void * suse_kabi_padding ; } 
s#usb_data_stream struct usb_data_stream { s#usb_device * udev ; s#usb_data_stream_properties props ; int state ; void ( * complete ) ( s#usb_data_stream * , t#u8 * , t#size_t ) ; s#urb * urb_list [ 10 ] ; int buf_num ; unsigned long buf_size ; t#u8 * buf_list [ 10 ] ; t#dma_addr_t dma_addr [ 10 ] ; int urbs_initialized ; int urbs_submitted ; void * user_priv ; } 
s#dvb_usb_adapter struct dvb_usb_adapter { s#dvb_usb_device * dev ; s#dvb_usb_adapter_properties props ; int state ; t#u8 id ; int feedcount ; int pid_filtering ; s#dvb_adapter dvb_adap ; s#dmxdev dmxdev ; s#dvb_demux demux ; s#dvb_net dvb_net ; s#dvb_frontend * fe ; int max_feed_count ; int ( * fe_init ) ( s#dvb_frontend * ) ; int ( * fe_sleep ) ( s#dvb_frontend * ) ; s#usb_data_stream stream ; void * priv ; } 
s#dvb_usb_adapter_properties struct dvb_usb_adapter_properties { int caps ; int pid_filter_count ; int ( * streaming_ctrl ) ( s#dvb_usb_adapter * , int ) ; int ( * pid_filter_ctrl ) ( s#dvb_usb_adapter * , int ) ; int ( * pid_filter ) ( s#dvb_usb_adapter * , int , t#u16 , int ) ; int ( * frontend_attach ) ( s#dvb_usb_adapter * ) ; int ( * tuner_attach ) ( s#dvb_usb_adapter * ) ; s#usb_data_stream_properties stream ; int size_of_priv ; int ( * fe_ioctl_override ) ( s#dvb_frontend * , unsigned int , void * , unsigned int ) ; } 
s#usb_device_id struct usb_device_id { t#__u16 match_flags ; t#__u16 idVendor ; t#__u16 idProduct ; t#__u16 bcdDevice_lo ; t#__u16 bcdDevice_hi ; t#__u8 bDeviceClass ; t#__u8 bDeviceSubClass ; t#__u8 bDeviceProtocol ; t#__u8 bInterfaceClass ; t#__u8 bInterfaceSubClass ; t#__u8 bInterfaceProtocol ; t#kernel_ulong_t driver_info ; } 
s#dvb_usb_device_description struct dvb_usb_device_description { const char * name ; s#usb_device_id * cold_ids [ 15 ] ; s#usb_device_id * warm_ids [ 15 ] ; } 
e#dvb_usb_mode enum dvb_usb_mode { DVB_RC_LEGACY , DVB_RC_CORE , } 
s#dvb_rc_legacy struct dvb_rc_legacy { s#rc_map_table * rc_map_table ; int rc_map_size ; int ( * rc_query ) ( s#dvb_usb_device * , t#u32 * , int * ) ; int rc_interval ; } 
e#rc_driver_type enum rc_driver_type { RC_DRIVER_SCANCODE = 0 , RC_DRIVER_IR_RAW , } 
s#rc_map struct rc_map { s#rc_map_table * scan ; unsigned int size ; unsigned int len ; unsigned int alloc ; t#u64 rc_type ; const char * name ; t#spinlock_t lock ; } 
s##ir_raw_event_ctrl
s##input_mt_slot
s#rc_dev struct rc_dev { s#device dev ; const char * input_name ; const char * input_phys ; s#input_id input_id ; char * driver_name ; const char * map_name ; s#rc_map rc_map ; s#mutex lock ; unsigned long devno ; s#ir_raw_event_ctrl * raw ; s#input_dev * input_dev ; e#rc_driver_type driver_type ; t#bool idle ; t#u64 allowed_protos ; t#u32 scanmask ; void * priv ; t#spinlock_t keylock ; t#bool keypressed ; unsigned long keyup_jiffies ; s#timer_list timer_keyup ; t#u32 last_keycode ; t#u32 last_scancode ; t#u8 last_toggle ; t#u32 timeout ; t#u32 min_timeout ; t#u32 max_timeout ; t#u32 rx_resolution ; t#u32 tx_resolution ; int ( * change_protocol ) ( s#rc_dev * , t#u64 ) ; int ( * open ) ( s#rc_dev * ) ; void ( * close ) ( s#rc_dev * ) ; int ( * s_tx_mask ) ( s#rc_dev * , t#u32 ) ; int ( * s_tx_carrier ) ( s#rc_dev * , t#u32 ) ; int ( * s_tx_duty_cycle ) ( s#rc_dev * , t#u32 ) ; int ( * s_rx_carrier_range ) ( s#rc_dev * , t#u32 , t#u32 ) ; int ( * tx_ir ) ( s#rc_dev * , int * , t#u32 ) ; void ( * s_idle ) ( s#rc_dev * , t#bool ) ; int ( * s_learning_mode ) ( s#rc_dev * , int ) ; int ( * s_carrier_report ) ( s#rc_dev * , int ) ; } 
s#dvb_rc struct dvb_rc { char * rc_codes ; t#u64 protocol ; t#u64 allowed_protos ; e#rc_driver_type driver_type ; int ( * change_protocol ) ( s#rc_dev * , t#u64 ) ; char * module_name ; int ( * rc_query ) ( s#dvb_usb_device * ) ; int rc_interval ; t#bool bulk_mode ; } 
s#dvb_usb_device_properties struct dvb_usb_device_properties { int caps ; int usb_ctrl ; int ( * download_firmware ) ( s#usb_device * , const s#firmware * ) ; const char * firmware ; int no_reconnect ; int size_of_priv ; int num_adapters ; s#dvb_usb_adapter_properties adapter [ 2 ] ; int ( * power_ctrl ) ( s#dvb_usb_device * , int ) ; int ( * read_mac_address ) ( s#dvb_usb_device * , t#u8 [ ] ) ; int ( * identify_state ) ( s#usb_device * , s#dvb_usb_device_properties * , s#dvb_usb_device_description * * , int * ) ; struct { e#dvb_usb_mode mode ; s#dvb_rc_legacy legacy ; s#dvb_rc core ; } rc ; s#i2c_algorithm * i2c_algo ; int generic_bulk_ctrl_endpoint ; int generic_bulk_ctrl_endpoint_response ; int num_device_descs ; s#dvb_usb_device_description devices [ 12 ] ; } 
s#dvb_usb_device struct dvb_usb_device { s#dvb_usb_device_properties props ; s#dvb_usb_device_description * desc ; s#usb_device * udev ; int state ; int powered ; s#mutex usb_mutex ; s#mutex i2c_mutex ; s#i2c_adapter i2c_adap ; int num_adapters_initialized ; s#dvb_usb_adapter adapter [ 2 ] ; s#rc_dev * rc_dev ; s#input_dev * input_dev ; char rc_phys [ 64 ] ; s#delayed_work rc_query_work ; t#u32 last_event ; int last_state ; s#module * owner ; void * priv ; } 
af9005_rc_decode extern int af9005_rc_decode ( s#dvb_usb_device * , t#u8 * , int , t#u32 * , int * ) 

/* drivers/media/dvb/dvb-usb/dibusb-common.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
s##ir_raw_event_ctrl
s##input_mt_slot
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
dibusb_streaming_ctrl extern int dibusb_streaming_ctrl ( s#dvb_usb_adapter * , int ) 
dibusb_pid_filter extern int dibusb_pid_filter ( s#dvb_usb_adapter * , int , t#u16 , int ) 
dibusb_pid_filter_ctrl extern int dibusb_pid_filter_ctrl ( s#dvb_usb_adapter * , int ) 
dibusb_power_ctrl extern int dibusb_power_ctrl ( s#dvb_usb_device * , int ) 
dibusb2_0_streaming_ctrl extern int dibusb2_0_streaming_ctrl ( s#dvb_usb_adapter * , int ) 
dibusb2_0_power_ctrl extern int dibusb2_0_power_ctrl ( s#dvb_usb_device * , int ) 
dibusb_i2c_algo extern s#i2c_algorithm dibusb_i2c_algo 
dibusb_read_eeprom_byte extern int dibusb_read_eeprom_byte ( s#dvb_usb_device * , t#u8 , t#u8 * ) 
dibusb_dib3000mc_frontend_attach extern int dibusb_dib3000mc_frontend_attach ( s#dvb_usb_adapter * ) 
dibusb_dib3000mc_tuner_attach extern int dibusb_dib3000mc_tuner_attach ( s#dvb_usb_adapter * ) 
rc_map_dibusb_table extern s#rc_map_table rc_map_dibusb_table [ ] 
dibusb_rc_query extern int dibusb_rc_query ( s#dvb_usb_device * , t#u32 * , int * ) 

/* drivers/media/dvb/dvb-usb/dvb-usb-firmware.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
usb_cypress_load_firmware extern int usb_cypress_load_firmware ( s#usb_device * , const s#firmware * , int ) 
s#hexline struct hexline { t#u8 len ; t#u32 addr ; t#u8 type ; t#u8 data [ 255 ] ; t#u8 chk ; } 
dvb_usb_get_hexline extern int dvb_usb_get_hexline ( const s#firmware * , s#hexline * , int * ) 

/* drivers/media/dvb/dvb-usb/dvb-usb-init.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##usb_tt
s##wusb_dev
s##ir_raw_event_ctrl
s##input_mt_slot
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
dvb_usb_device_init extern int dvb_usb_device_init ( s#usb_interface * , s#dvb_usb_device_properties * , s#module * , s#dvb_usb_device * * , short * ) 
dvb_usb_device_exit extern void dvb_usb_device_exit ( s#usb_interface * ) 

/* drivers/media/dvb/dvb-usb/dvb-usb-remote.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##ir_raw_event_ctrl
s##input_mt_slot
dvb_usb_nec_rc_key_to_event extern int dvb_usb_nec_rc_key_to_event ( s#dvb_usb_device * , t#u8 [ ] , t#u32 * , int * ) 

/* drivers/media/dvb/dvb-usb/dvb-usb-urb.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##ir_raw_event_ctrl
s##input_mt_slot
dvb_usb_generic_rw extern int dvb_usb_generic_rw ( s#dvb_usb_device * , t#u8 * , t#u16 , t#u8 * , t#u16 , int ) 
dvb_usb_generic_write extern int dvb_usb_generic_write ( s#dvb_usb_device * , t#u8 * , t#u16 ) 

/* drivers/media/dvb/frontends/af9013.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#af9013_config struct af9013_config { t#u8 demod_address ; t#u32 adc_clock ; t#u8 tuner ; t#u16 tuner_if ; t#u8 output_mode : 2 ; t#u8 rf_spec_inv : 1 ; t#u8 api_version [ 4 ] ; t#u8 gpio [ 4 ] ; } 
af9013_attach extern s#dvb_frontend * af9013_attach ( const s#af9013_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/atbm8830.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#atbm8830_config struct atbm8830_config { t#u8 prod ; t#u8 demod_address ; t#u8 serial_ts ; t#u8 ts_clk_gated ; t#u8 ts_sampling_edge ; t#u32 osc_clk_freq ; t#u32 if_freq ; t#u8 zif_swap_iq ; t#u8 agc_min ; t#u8 agc_max ; t#u8 agc_hold_loop ; } 
atbm8830_attach extern s#dvb_frontend * atbm8830_attach ( const s#atbm8830_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/au8522_dig.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#au8522_led_config struct au8522_led_config { t#u16 vsb8_strong ; t#u16 qam64_strong ; t#u16 qam256_strong ; t#u16 gpio_output ; t#u16 gpio_output_enable ; t#u16 gpio_output_disable ; t#u16 gpio_leds ; t#u8 * led_states ; unsigned int num_led_states ; } 
e#au8522_if_freq enum au8522_if_freq { AU8522_IF_6MHZ = 0 , AU8522_IF_4MHZ , AU8522_IF_3_25MHZ , } 
s#au8522_config struct au8522_config { t#u8 demod_address ; t#u8 status_mode ; s#au8522_led_config * led_cfg ; e#au8522_if_freq vsb_if ; e#au8522_if_freq qam_if ; } 
au8522_attach extern s#dvb_frontend * au8522_attach ( const s#au8522_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/bcm3510.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#bcm3510_config struct bcm3510_config { t#u8 demod_address ; int ( * request_firmware ) ( s#dvb_frontend * , const s#firmware * * , char * ) ; } 
bcm3510_attach extern s#dvb_frontend * bcm3510_attach ( const s#bcm3510_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx22700.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#cx22700_config struct cx22700_config { t#u8 demod_address ; } 
cx22700_attach extern s#dvb_frontend * cx22700_attach ( const s#cx22700_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx22702.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#cx22702_config struct cx22702_config { t#u8 demod_address ; t#u8 output_mode ; } 
cx22702_attach extern s#dvb_frontend * cx22702_attach ( const s#cx22702_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx24110.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#cx24110_config struct cx24110_config { t#u8 demod_address ; } 
cx24110_attach extern s#dvb_frontend * cx24110_attach ( const s#cx24110_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx24113.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
cx24113_agc_callback extern void cx24113_agc_callback ( s#dvb_frontend * ) 
s#cx24113_config struct cx24113_config { t#u8 i2c_addr ; t#u32 xtal_khz ; } 
cx24113_attach extern s#dvb_frontend * cx24113_attach ( s#dvb_frontend * , const s#cx24113_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx24116.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#cx24116_config struct cx24116_config { t#u8 demod_address ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; int ( * reset_device ) ( s#dvb_frontend * ) ; t#u8 mpg_clk_pos_pol : 0x02 ; t#u16 i2c_wr_max ; } 
cx24116_attach extern s#dvb_frontend * cx24116_attach ( const s#cx24116_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cx24123.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
cx24123_get_tuner_i2c_adapter extern s#i2c_adapter * cx24123_get_tuner_i2c_adapter ( s#dvb_frontend * ) 
s#cx24123_config struct cx24123_config { t#u8 demod_address ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; int lnb_polarity ; t#u8 dont_use_pll ; void ( * agc_callback ) ( s#dvb_frontend * ) ; } 
cx24123_attach extern s#dvb_frontend * cx24123_attach ( const s#cx24123_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/cxd2820r_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
cxd2820r_get_tuner_i2c_adapter extern s#i2c_adapter * cxd2820r_get_tuner_i2c_adapter ( s#dvb_frontend * ) 
s#cxd2820r_config struct cxd2820r_config { t#u8 i2c_address ; t#u8 ts_mode ; int if_agc_polarity : 1 ; int spec_inv : 1 ; t#u16 if_dvbt_6 ; t#u16 if_dvbt_7 ; t#u16 if_dvbt_8 ; t#u16 if_dvbt2_5 ; t#u16 if_dvbt2_6 ; t#u16 if_dvbt2_7 ; t#u16 if_dvbt2_8 ; t#u16 if_dvbc ; t#u8 gpio_dvbt [ 3 ] ; t#u8 gpio_dvbt2 [ 3 ] ; t#u8 gpio_dvbc [ 3 ] ; } 
cxd2820r_attach extern s#dvb_frontend * cxd2820r_attach ( const s#cxd2820r_config * , s#i2c_adapter * , s#dvb_frontend * ) 

/* drivers/media/dvb/frontends/dib0070.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib0070_ctrl_agc_filter extern void dib0070_ctrl_agc_filter ( s#dvb_frontend * , t#u8 ) 
dib0070_get_rf_output extern t#u8 dib0070_get_rf_output ( s#dvb_frontend * ) 
dib0070_set_rf_output extern int dib0070_set_rf_output ( s#dvb_frontend * , t#u8 ) 
dib0070_wbd_offset extern t#u16 dib0070_wbd_offset ( s#dvb_frontend * ) 
s#dib0070_wbd_gain_cfg struct dib0070_wbd_gain_cfg { t#u16 freq ; t#u16 wbd_gain_val ; } 
s#dib0070_config struct dib0070_config { t#u8 i2c_address ; int ( * reset ) ( s#dvb_frontend * , int ) ; int ( * sleep ) ( s#dvb_frontend * , int ) ; int freq_offset_khz_uhf ; int freq_offset_khz_vhf ; t#u8 osc_buffer_state ; t#u32 clock_khz ; t#u8 clock_pad_drive ; t#u8 invert_iq ; t#u8 force_crystal_mode ; t#u8 flip_chip ; t#u8 enable_third_order_filter ; t#u8 charge_pump ; const s#dib0070_wbd_gain_cfg * wbd_gain ; t#u8 vga_filter ; } 
dib0070_attach extern s#dvb_frontend * dib0070_attach ( s#dvb_frontend * , s#i2c_adapter * , s#dib0070_config * ) 

/* drivers/media/dvb/frontends/dib0090.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib0090_dcc_freq extern void dib0090_dcc_freq ( s#dvb_frontend * , t#u8 ) 
dib0090_pwm_gain_reset extern void dib0090_pwm_gain_reset ( s#dvb_frontend * ) 
dib0090_gain_control extern int dib0090_gain_control ( s#dvb_frontend * ) 
dib0090_get_current_gain extern void dib0090_get_current_gain ( s#dvb_frontend * , t#u16 * , t#u16 * , t#u16 * , t#u16 * ) 
dib0090_get_wbd_offset extern t#u16 dib0090_get_wbd_offset ( s#dvb_frontend * ) 
e#frontend_tune_state enum frontend_tune_state { CT_TUNER_START = 10 , CT_TUNER_STEP_0 , CT_TUNER_STEP_1 , CT_TUNER_STEP_2 , CT_TUNER_STEP_3 , CT_TUNER_STEP_4 , CT_TUNER_STEP_5 , CT_TUNER_STEP_6 , CT_TUNER_STEP_7 , CT_TUNER_STOP , CT_AGC_START = 20 , CT_AGC_STEP_0 , CT_AGC_STEP_1 , CT_AGC_STEP_2 , CT_AGC_STEP_3 , CT_AGC_STEP_4 , CT_AGC_STOP , CT_DEMOD_START = 30 , CT_DEMOD_STEP_1 , CT_DEMOD_STEP_2 , CT_DEMOD_STEP_3 , CT_DEMOD_STEP_4 , CT_DEMOD_STEP_5 , CT_DEMOD_STEP_6 , CT_DEMOD_STEP_7 , CT_DEMOD_STEP_8 , CT_DEMOD_STEP_9 , CT_DEMOD_STEP_10 , CT_DEMOD_SEARCH_NEXT = 41 , CT_DEMOD_STEP_LOCKED , CT_DEMOD_STOP , CT_DONE = 100 , CT_SHUTDOWN , } 
dib0090_get_tune_state extern e#frontend_tune_state dib0090_get_tune_state ( s#dvb_frontend * ) 
dib0090_set_tune_state extern int dib0090_set_tune_state ( s#dvb_frontend * , e#frontend_tune_state ) 
s#dib0090_io_config struct dib0090_io_config { t#u32 clock_khz ; t#u8 pll_bypass : 1 ; t#u8 pll_range : 1 ; t#u8 pll_prediv : 6 ; t#u8 pll_loopdiv : 6 ; t#u8 adc_clock_ratio ; t#u16 pll_int_loop_filt ; } 
s#dib0090_low_if_offset_table struct dib0090_low_if_offset_table { int std ; t#u32 RF_freq ; t#s32 offset_khz ; } 
s#dib0090_wbd_slope struct dib0090_wbd_slope { t#u16 max_freq ; t#u16 slope_cold ; t#u16 offset_cold ; t#u16 slope_hot ; t#u16 offset_hot ; t#u8 wbd_gain ; } 
s#dib0090_config struct dib0090_config { s#dib0090_io_config io ; int ( * reset ) ( s#dvb_frontend * , int ) ; int ( * sleep ) ( s#dvb_frontend * , int ) ; int freq_offset_khz_uhf ; int freq_offset_khz_vhf ; int ( * get_adc_power ) ( s#dvb_frontend * ) ; t#u8 clkouttobamse : 1 ; t#u8 analog_output ; t#u8 i2c_address ; t#u16 wbd_vhf_offset ; t#u16 wbd_cband_offset ; t#u8 use_pwm_agc ; t#u8 clkoutdrive ; t#u8 ls_cfg_pad_drv ; t#u8 data_tx_drv ; t#u8 in_soc ; const s#dib0090_low_if_offset_table * low_if ; t#u8 fref_clock_ratio ; t#u16 force_cband_input ; s#dib0090_wbd_slope * wbd ; } 
dib0090_register extern s#dvb_frontend * dib0090_register ( s#dvb_frontend * , s#i2c_adapter * , const s#dib0090_config * ) 
dib0090_fw_register extern s#dvb_frontend * dib0090_fw_register ( s#dvb_frontend * , s#i2c_adapter * , const s#dib0090_config * ) 

/* drivers/media/dvb/frontends/dib3000mb.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#dib3000_config struct dib3000_config { t#u8 demod_address ; } 
s#dib_fe_xfer_ops struct dib_fe_xfer_ops { int ( * pid_parse ) ( s#dvb_frontend * , int ) ; int ( * fifo_ctrl ) ( s#dvb_frontend * , int ) ; int ( * pid_ctrl ) ( s#dvb_frontend * , int , int , int ) ; int ( * tuner_pass_ctrl ) ( s#dvb_frontend * , int , t#u8 ) ; } 
dib3000mb_attach extern s#dvb_frontend * dib3000mb_attach ( const s#dib3000_config * , s#i2c_adapter * , s#dib_fe_xfer_ops * ) 

/* drivers/media/dvb/frontends/dib3000mc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib3000mc_get_tuner_i2c_master extern s#i2c_adapter * dib3000mc_get_tuner_i2c_master ( s#dvb_frontend * , int ) 
dib3000mc_pid_control extern int dib3000mc_pid_control ( s#dvb_frontend * , int , int , int ) 
dib3000mc_pid_parse extern int dib3000mc_pid_parse ( s#dvb_frontend * , int ) 
s#dibx000_agc_config struct dibx000_agc_config { t#u8 band_caps ; t#u16 setup ; t#u16 inv_gain ; t#u16 time_stabiliz ; t#u8 alpha_level ; t#u16 thlock ; t#u8 wbd_inv ; t#u16 wbd_ref ; t#u8 wbd_sel ; t#u8 wbd_alpha ; t#u16 agc1_max ; t#u16 agc1_min ; t#u16 agc2_max ; t#u16 agc2_min ; t#u8 agc1_pt1 ; t#u8 agc1_pt2 ; t#u8 agc1_pt3 ; t#u8 agc1_slope1 ; t#u8 agc1_slope2 ; t#u8 agc2_pt1 ; t#u8 agc2_pt2 ; t#u8 agc2_slope1 ; t#u8 agc2_slope2 ; t#u8 alpha_mant ; t#u8 alpha_exp ; t#u8 beta_mant ; t#u8 beta_exp ; t#u8 perform_agc_softsplit ; struct { t#u16 min ; t#u16 max ; t#u16 min_thres ; t#u16 max_thres ; } split ; } 
s#dib3000mc_config struct dib3000mc_config { s#dibx000_agc_config * agc ; t#u8 phase_noise_mode ; t#u8 impulse_noise_mode ; t#u8 pwm3_inversion ; t#u8 use_pwm3 ; t#u16 pwm3_value ; t#u16 max_time ; t#u16 ln_adc_level ; t#u8 agc_command1 : 1 ; t#u8 agc_command2 : 1 ; t#u8 mobile_mode ; t#u8 output_mpeg2_in_188_bytes ; } 
dib3000mc_set_config extern void dib3000mc_set_config ( s#dvb_frontend * , s#dib3000mc_config * ) 
dib3000mc_i2c_enumeration extern int dib3000mc_i2c_enumeration ( s#i2c_adapter * , int , t#u8 , s#dib3000mc_config [ ] ) 
dib3000mc_attach extern s#dvb_frontend * dib3000mc_attach ( s#i2c_adapter * , t#u8 , s#dib3000mc_config * ) 

/* drivers/media/dvb/frontends/dib7000m.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#dibx000_i2c_interface enum dibx000_i2c_interface { DIBX000_I2C_INTERFACE_TUNER = 0 , DIBX000_I2C_INTERFACE_GPIO_1_2 = 1 , DIBX000_I2C_INTERFACE_GPIO_3_4 = 2 , DIBX000_I2C_INTERFACE_GPIO_6_7 = 3 } 
dib7000m_get_i2c_master extern s#i2c_adapter * dib7000m_get_i2c_master ( s#dvb_frontend * , e#dibx000_i2c_interface , int ) 
dib7000m_pid_filter_ctrl extern int dib7000m_pid_filter_ctrl ( s#dvb_frontend * , t#u8 ) 
dib7000m_pid_filter extern int dib7000m_pid_filter ( s#dvb_frontend * , t#u8 , t#u16 , t#u8 ) 
s#dibx000_bandwidth_config struct dibx000_bandwidth_config { t#u32 internal ; t#u32 sampling ; t#u8 pll_prediv ; t#u8 pll_ratio ; t#u8 pll_range ; t#u8 pll_reset ; t#u8 pll_bypass ; t#u8 enable_refdiv ; t#u8 bypclk_div ; t#u8 IO_CLK_en_core ; t#u8 ADClkSrc ; t#u8 modulo ; t#u16 sad_cfg ; t#u32 ifreq ; t#u32 timf ; t#u32 xtal_hz ; } 
s#dib7000m_config struct dib7000m_config { t#u8 dvbt_mode ; t#u8 output_mpeg2_in_188_bytes ; t#u8 hostbus_diversity ; t#u8 tuner_is_baseband ; t#u8 mobile_mode ; int ( * update_lna ) ( s#dvb_frontend * , t#u16 ) ; t#u8 agc_config_count ; s#dibx000_agc_config * agc ; s#dibx000_bandwidth_config * bw ; t#u16 gpio_dir ; t#u16 gpio_val ; t#u16 gpio_pwm_pos ; t#u16 pwm_freq_div ; t#u8 quartz_direct ; t#u8 input_clk_is_div_2 ; int ( * agc_control ) ( s#dvb_frontend * , t#u8 ) ; } 
dib7000m_attach extern s#dvb_frontend * dib7000m_attach ( s#i2c_adapter * , t#u8 , s#dib7000m_config * ) 

/* drivers/media/dvb/frontends/dib7000p.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib7000p_set_wbd_ref extern int dib7000p_set_wbd_ref ( s#dvb_frontend * , t#u16 ) 
dib7000p_update_pll extern int dib7000p_update_pll ( s#dvb_frontend * , s#dibx000_bandwidth_config * ) 
dib7000p_set_gpio extern int dib7000p_set_gpio ( s#dvb_frontend * , t#u8 , t#u8 , t#u8 ) 
dib7000p_ctrl_timf extern t#u32 dib7000p_ctrl_timf ( s#dvb_frontend * , t#u8 , t#u32 ) 
dib7000pc_detection extern int dib7000pc_detection ( s#i2c_adapter * ) 
dib7000p_get_i2c_master extern s#i2c_adapter * dib7000p_get_i2c_master ( s#dvb_frontend * , e#dibx000_i2c_interface , int ) 
dib7000p_pid_filter_ctrl extern int dib7000p_pid_filter_ctrl ( s#dvb_frontend * , t#u8 ) 
dib7000p_pid_filter extern int dib7000p_pid_filter ( s#dvb_frontend * , t#u8 , t#u16 , t#u8 ) 
s#dib7000p_config struct dib7000p_config { t#u8 output_mpeg2_in_188_bytes ; t#u8 hostbus_diversity ; t#u8 tuner_is_baseband ; int ( * update_lna ) ( s#dvb_frontend * , t#u16 ) ; t#u8 agc_config_count ; s#dibx000_agc_config * agc ; s#dibx000_bandwidth_config * bw ; t#u16 gpio_dir ; t#u16 gpio_val ; t#u16 gpio_pwm_pos ; t#u16 pwm_freq_div ; t#u8 quartz_direct ; t#u8 spur_protect ; int ( * agc_control ) ( s#dvb_frontend * , t#u8 ) ; t#u8 output_mode ; t#u8 disable_sample_and_hold : 1 ; t#u8 enable_current_mirror : 1 ; t#u16 diversity_delay ; t#u8 default_i2c_addr ; t#u8 enMpegOutput : 1 ; } 
dib7000p_i2c_enumeration extern int dib7000p_i2c_enumeration ( s#i2c_adapter * , int , t#u8 , s#dib7000p_config [ ] ) 
dib7090_get_i2c_tuner extern s#i2c_adapter * dib7090_get_i2c_tuner ( s#dvb_frontend * ) 
dib7090_tuner_sleep extern int dib7090_tuner_sleep ( s#dvb_frontend * , int ) 
dib7090_agc_restart extern int dib7090_agc_restart ( s#dvb_frontend * , t#u8 ) 
dib7090_get_adc_power extern int dib7090_get_adc_power ( s#dvb_frontend * ) 
dib7090_slave_reset extern int dib7090_slave_reset ( s#dvb_frontend * ) 
dib7000p_attach extern s#dvb_frontend * dib7000p_attach ( s#i2c_adapter * , t#u8 , s#dib7000p_config * ) 

/* drivers/media/dvb/frontends/dib8000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib8000_set_wbd_ref extern int dib8000_set_wbd_ref ( s#dvb_frontend * , t#u16 ) 
dib8000_set_gpio extern int dib8000_set_gpio ( s#dvb_frontend * , t#u8 , t#u8 , t#u8 ) 
dib8000_pwm_agc_reset extern void dib8000_pwm_agc_reset ( s#dvb_frontend * ) 
dib8000_get_adc_power extern t#s32 dib8000_get_adc_power ( s#dvb_frontend * , t#u8 ) 
dib8000_get_tune_state extern e#frontend_tune_state dib8000_get_tune_state ( s#dvb_frontend * ) 
dib8000_set_tune_state extern int dib8000_set_tune_state ( s#dvb_frontend * , e#frontend_tune_state ) 
dib8000_set_slave_frontend extern int dib8000_set_slave_frontend ( s#dvb_frontend * , s#dvb_frontend * ) 
dib8000_remove_slave_frontend extern int dib8000_remove_slave_frontend ( s#dvb_frontend * ) 
dib8000_get_slave_frontend extern s#dvb_frontend * dib8000_get_slave_frontend ( s#dvb_frontend * , int ) 
dib8000_i2c_enumeration extern int dib8000_i2c_enumeration ( s#i2c_adapter * , int , t#u8 , t#u8 ) 
dib8000_get_i2c_master extern s#i2c_adapter * dib8000_get_i2c_master ( s#dvb_frontend * , e#dibx000_i2c_interface , int ) 
dib8000_pid_filter_ctrl extern int dib8000_pid_filter_ctrl ( s#dvb_frontend * , t#u8 ) 
dib8000_pid_filter extern int dib8000_pid_filter ( s#dvb_frontend * , t#u8 , t#u16 , t#u8 ) 
s#dib8000_config struct dib8000_config { t#u8 output_mpeg2_in_188_bytes ; t#u8 hostbus_diversity ; t#u8 tuner_is_baseband ; int ( * update_lna ) ( s#dvb_frontend * , t#u16 ) ; t#u8 agc_config_count ; s#dibx000_agc_config * agc ; s#dibx000_bandwidth_config * pll ; t#u16 gpio_dir ; t#u16 gpio_val ; t#u16 gpio_pwm_pos ; t#u16 pwm_freq_div ; void ( * agc_control ) ( s#dvb_frontend * , t#u8 ) ; t#u16 drives ; t#u16 diversity_delay ; t#u8 div_cfg ; t#u8 output_mode ; t#u8 refclksel ; } 
dib8000_attach extern s#dvb_frontend * dib8000_attach ( s#i2c_adapter * , t#u8 , s#dib8000_config * ) 

/* drivers/media/dvb/frontends/dib9000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dib9000_fw_set_component_bus_speed extern int dib9000_fw_set_component_bus_speed ( s#dvb_frontend * , t#u16 ) 
dib9000_get_tuner_interface extern s#i2c_adapter * dib9000_get_tuner_interface ( s#dvb_frontend * ) 
dib9000_get_component_bus_interface extern s#i2c_adapter * dib9000_get_component_bus_interface ( s#dvb_frontend * ) 
dib9000_get_i2c_master extern s#i2c_adapter * dib9000_get_i2c_master ( s#dvb_frontend * , e#dibx000_i2c_interface , int ) 
dib9000_set_i2c_adapter extern int dib9000_set_i2c_adapter ( s#dvb_frontend * , s#i2c_adapter * ) 
dib9000_set_gpio extern int dib9000_set_gpio ( s#dvb_frontend * , t#u8 , t#u8 , t#u8 ) 
dib9000_fw_pid_filter_ctrl extern int dib9000_fw_pid_filter_ctrl ( s#dvb_frontend * , t#u8 ) 
dib9000_fw_pid_filter extern int dib9000_fw_pid_filter ( s#dvb_frontend * , t#u8 , t#u16 , t#u8 ) 
dib9000_firmware_post_pll_init extern int dib9000_firmware_post_pll_init ( s#dvb_frontend * ) 
dib9000_i2c_enumeration extern int dib9000_i2c_enumeration ( s#i2c_adapter * , int , t#u8 , t#u8 ) 
dib9000_set_slave_frontend extern int dib9000_set_slave_frontend ( s#dvb_frontend * , s#dvb_frontend * ) 
dib9000_remove_slave_frontend extern int dib9000_remove_slave_frontend ( s#dvb_frontend * ) 
dib9000_get_slave_frontend extern s#dvb_frontend * dib9000_get_slave_frontend ( s#dvb_frontend * , int ) 
s#dibGPIOFunction struct dibGPIOFunction { t#u8 component ; t#u8 function ; t#u32 mask ; t#u32 direction ; t#u32 value ; } 
s#dibSubbandSelection struct dibSubbandSelection { t#u8 size ; struct { t#u16 f_mhz ; s#dibGPIOFunction gpio ; } subband [ 8 ] ; } 
s#dib9000_config struct dib9000_config { t#u8 dvbt_mode ; t#u8 output_mpeg2_in_188_bytes ; t#u8 hostbus_diversity ; s#dibx000_bandwidth_config * bw ; t#u16 if_drives ; t#u32 timing_frequency ; t#u32 xtal_clock_khz ; t#u32 vcxo_timer ; t#u32 demod_clock_khz ; const t#u8 * microcode_B_fe_buffer ; t#u32 microcode_B_fe_size ; s#dibGPIOFunction gpio_function [ 2 ] ; s#dibSubbandSelection subband ; t#u8 output_mode ; } 
dib9000_attach extern s#dvb_frontend * dib9000_attach ( s#i2c_adapter * , t#u8 , const s#dib9000_config * ) 

/* drivers/media/dvb/frontends/dibx000_common.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dibx000_i2c_set_speed extern int dibx000_i2c_set_speed ( s#i2c_adapter * , t#u16 ) 
s#dibx000_i2c_master struct dibx000_i2c_master { t#u16 device_rev ; e#dibx000_i2c_interface selected_interface ; s#i2c_adapter gated_tuner_i2c_adap ; s#i2c_adapter master_i2c_adap_gpio12 ; s#i2c_adapter master_i2c_adap_gpio34 ; s#i2c_adapter master_i2c_adap_gpio67 ; s#i2c_adapter * i2c_adap ; t#u8 i2c_addr ; t#u16 base_reg ; s#i2c_msg msg [ 34 ] ; t#u8 i2c_write_buffer [ 8 ] ; t#u8 i2c_read_buffer [ 2 ] ; s#mutex i2c_buffer_lock ; } 
dibx000_get_i2c_adapter extern s#i2c_adapter * dibx000_get_i2c_adapter ( s#dibx000_i2c_master * , e#dibx000_i2c_interface , int ) 
dibx000_reset_i2c_master extern void dibx000_reset_i2c_master ( s#dibx000_i2c_master * ) 
dibx000_init_i2c_master extern int dibx000_init_i2c_master ( s#dibx000_i2c_master * , t#u16 , s#i2c_adapter * , t#u8 ) 
dibx000_exit_i2c_master extern void dibx000_exit_i2c_master ( s#dibx000_i2c_master * ) 
systime extern t#u32 systime ( void ) 

/* drivers/media/dvb/frontends/drxd_hard.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
drxd_config_i2c extern int drxd_config_i2c ( s#dvb_frontend * , int ) 
s#drxd_config struct drxd_config { t#u8 index ; t#u8 pll_address ; t#u8 pll_type ; t#u32 clock ; t#u8 insert_rs_byte ; t#u8 demod_address ; t#u8 demoda_address ; t#u8 demod_revision ; t#u8 disable_i2c_gate_ctrl ; t#u32 IF ; int ( * pll_set ) ( void * , void * , t#u8 , t#u8 , t#s32 * ) ; t#s16 ( * osc_deviation ) ( void * , t#s16 , int ) ; } 
drxd_attach extern s#dvb_frontend * drxd_attach ( const s#drxd_config * , void * , s#i2c_adapter * , s#device * ) 

/* drivers/media/dvb/frontends/ds3000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ds3000_config struct ds3000_config { t#u8 demod_address ; t#u8 ci_mode ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; } 
ds3000_attach extern s#dvb_frontend * ds3000_attach ( const s#ds3000_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/dvb-pll.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
dvb_pll_attach extern s#dvb_frontend * dvb_pll_attach ( s#dvb_frontend * , int , s#i2c_adapter * , unsigned int ) 

/* drivers/media/dvb/frontends/ec100.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ec100_config struct ec100_config { t#u8 demod_address ; } 
ec100_attach extern s#dvb_frontend * ec100_attach ( const s#ec100_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/isl6405.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
isl6405_attach extern s#dvb_frontend * isl6405_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , t#u8 , t#u8 ) 

/* drivers/media/dvb/frontends/isl6421.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
isl6421_attach extern s#dvb_frontend * isl6421_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , t#u8 , t#u8 ) 

/* drivers/media/dvb/frontends/isl6423.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#isl6423_current enum isl6423_current { SEC_CURRENT_275m = 0 , SEC_CURRENT_515m , SEC_CURRENT_635m , SEC_CURRENT_800m , } 
e#isl6423_curlim enum isl6423_curlim { SEC_CURRENT_LIM_ON = 1 , SEC_CURRENT_LIM_OFF } 
s#isl6423_config struct isl6423_config { e#isl6423_current current_max ; e#isl6423_curlim curlim ; t#u8 addr ; t#u8 mod_extern ; } 
isl6423_attach extern s#dvb_frontend * isl6423_attach ( s#dvb_frontend * , s#i2c_adapter * , const s#isl6423_config * ) 

/* drivers/media/dvb/frontends/itd1000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#itd1000_config struct itd1000_config { t#u8 i2c_address ; } 
itd1000_attach extern s#dvb_frontend * itd1000_attach ( s#dvb_frontend * , s#i2c_adapter * , s#itd1000_config * ) 

/* drivers/media/dvb/frontends/ix2505v.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ix2505v_config struct ix2505v_config { t#u8 tuner_address ; t#u8 tuner_gain ; t#u8 tuner_chargepump ; int min_delay_ms ; t#u8 tuner_write_only ; } 
ix2505v_attach extern s#dvb_frontend * ix2505v_attach ( s#dvb_frontend * , const s#ix2505v_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/l64781.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#l64781_config struct l64781_config { t#u8 demod_address ; } 
l64781_attach extern s#dvb_frontend * l64781_attach ( const s#l64781_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/lgdt3305.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#lgdt3305_mpeg_mode enum lgdt3305_mpeg_mode { LGDT3305_MPEG_PARALLEL = 0 , LGDT3305_MPEG_SERIAL = 1 , } 
e#lgdt3305_tp_clock_edge enum lgdt3305_tp_clock_edge { LGDT3305_TPCLK_RISING_EDGE = 0 , LGDT3305_TPCLK_FALLING_EDGE = 1 , } 
e#lgdt3305_tp_valid_polarity enum lgdt3305_tp_valid_polarity { LGDT3305_TP_VALID_LOW = 0 , LGDT3305_TP_VALID_HIGH = 1 , } 
e#lgdt_demod_chip_type enum lgdt_demod_chip_type { LGDT3305 = 0 , LGDT3304 = 1 , } 
s#lgdt3305_config struct lgdt3305_config { t#u8 i2c_addr ; t#u16 qam_if_khz ; t#u16 vsb_if_khz ; t#u16 usref_8vsb ; t#u16 usref_qam64 ; t#u16 usref_qam256 ; unsigned int deny_i2c_rptr : 1 ; unsigned int spectral_inversion : 1 ; unsigned int rf_agc_loop : 1 ; e#lgdt3305_mpeg_mode mpeg_mode ; e#lgdt3305_tp_clock_edge tpclk_edge ; e#lgdt3305_tp_valid_polarity tpvalid_polarity ; e#lgdt_demod_chip_type demod_chip ; } 
lgdt3305_attach extern s#dvb_frontend * lgdt3305_attach ( const s#lgdt3305_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/lgdt330x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#lg_chip_t enum lg_chip_t { UNDEFINED , LGDT3302 , LGDT3303 } 
t#lg_chip_type typedef e#lg_chip_t lg_chip_type 
s#lgdt330x_config struct lgdt330x_config { t#u8 demod_address ; t#lg_chip_type demod_chip ; int serial_mpeg ; int ( * pll_rf_set ) ( s#dvb_frontend * , int ) ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; int clock_polarity_flip ; } 
lgdt330x_attach extern s#dvb_frontend * lgdt330x_attach ( const s#lgdt330x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/lgs8gl5.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#lgs8gl5_config struct lgs8gl5_config { t#u8 demod_address ; } 
lgs8gl5_attach extern s#dvb_frontend * lgs8gl5_attach ( const s#lgs8gl5_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/lgs8gxx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#lgs8gxx_config struct lgs8gxx_config { t#u8 prod ; t#u8 demod_address ; t#u8 serial_ts ; t#u8 ts_clk_pol ; t#u8 ts_clk_gated ; t#u32 if_clk_freq ; t#u32 if_freq ; t#u8 ext_adc ; t#u8 adc_signed ; t#u8 if_neg_edge ; t#u8 if_neg_center ; t#u8 adc_vpp ; t#u8 tuner_address ; } 
lgs8gxx_attach extern s#dvb_frontend * lgs8gxx_attach ( const s#lgs8gxx_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/lnbp21.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
lnbh24_attach extern s#dvb_frontend * lnbh24_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , t#u8 , t#u8 ) 
lnbp21_attach extern s#dvb_frontend * lnbp21_attach ( s#dvb_frontend * , s#i2c_adapter * , t#u8 , t#u8 ) 

/* drivers/media/dvb/frontends/mb86a16.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mb86a16_config struct mb86a16_config { t#u8 demod_address ; int ( * set_voltage ) ( s#dvb_frontend * , t#fe_sec_voltage_t ) ; } 
mb86a16_attach extern s#dvb_frontend * mb86a16_attach ( const s#mb86a16_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/mb86a20s.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mb86a20s_config struct mb86a20s_config { t#u8 demod_address ; t#bool is_serial ; } 
mb86a20s_attach extern s#dvb_frontend * mb86a20s_attach ( const s#mb86a20s_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/mt312.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mt312_config struct mt312_config { t#u8 demod_address ; unsigned int voltage_inverted : 1 ; } 
mt312_attach s#dvb_frontend * mt312_attach ( const s#mt312_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/mt352.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#mt352_config struct mt352_config { t#u8 demod_address ; int adc_clock ; int if2 ; int no_tuner ; int ( * demod_init ) ( s#dvb_frontend * ) ; } 
mt352_attach extern s#dvb_frontend * mt352_attach ( const s#mt352_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/nxt200x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#nxt200x_config struct nxt200x_config { t#u8 demod_address ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; } 
nxt200x_attach extern s#dvb_frontend * nxt200x_attach ( const s#nxt200x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/nxt6000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#nxt6000_config struct nxt6000_config { t#u8 demod_address ; t#u8 clock_inversion : 1 ; } 
nxt6000_attach extern s#dvb_frontend * nxt6000_attach ( const s#nxt6000_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/or51132.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#or51132_config struct or51132_config { t#u8 demod_address ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; } 
or51132_attach extern s#dvb_frontend * or51132_attach ( const s#or51132_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/or51211.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#or51211_config struct or51211_config { t#u8 demod_address ; int ( * request_firmware ) ( s#dvb_frontend * , const s#firmware * * , char * ) ; void ( * setmode ) ( s#dvb_frontend * , int ) ; void ( * reset ) ( s#dvb_frontend * ) ; void ( * sleep ) ( s#dvb_frontend * ) ; } 
or51211_attach extern s#dvb_frontend * or51211_attach ( const s#or51211_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/s5h1409.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#s5h1409_config struct s5h1409_config { t#u8 demod_address ; t#u8 output_mode ; t#u8 gpio ; t#u16 qam_if ; t#u8 inversion ; t#u8 status_mode ; t#u16 mpeg_timing ; t#u8 hvr1600_opt ; } 
s5h1409_attach extern s#dvb_frontend * s5h1409_attach ( const s#s5h1409_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/s5h1411.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#s5h1411_config struct s5h1411_config { t#u8 output_mode ; t#u8 gpio ; t#u16 mpeg_timing ; t#u16 qam_if ; t#u16 vsb_if ; t#u8 inversion ; t#u8 status_mode ; } 
s5h1411_attach extern s#dvb_frontend * s5h1411_attach ( const s#s5h1411_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/s5h1420.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s5h1420_get_tuner_i2c_adapter extern s#i2c_adapter * s5h1420_get_tuner_i2c_adapter ( s#dvb_frontend * ) 
s#s5h1420_config struct s5h1420_config { t#u8 demod_address ; t#u8 invert : 1 ; t#u8 repeated_start_workaround : 1 ; t#u8 cdclk_polarity : 1 ; t#u8 serial_mpeg : 1 ; } 
s5h1420_attach extern s#dvb_frontend * s5h1420_attach ( const s#s5h1420_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/s5h1432.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#s5h1432_config struct s5h1432_config { t#u8 output_mode ; t#u8 gpio ; t#u16 mpeg_timing ; t#u16 qam_if ; t#u16 vsb_if ; t#u8 inversion ; t#u8 status_mode ; } 
s5h1432_attach extern s#dvb_frontend * s5h1432_attach ( const s#s5h1432_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/s921.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#s921_config struct s921_config { t#u8 demod_address ; } 
s921_attach extern s#dvb_frontend * s921_attach ( const s#s921_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/si21xx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#si21xx_config struct si21xx_config { t#u8 demod_address ; int min_delay_ms ; } 
si21xx_attach extern s#dvb_frontend * si21xx_attach ( const s#si21xx_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/sp8870.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#sp8870_config struct sp8870_config { t#u8 demod_address ; int ( * request_firmware ) ( s#dvb_frontend * , const s#firmware * * , char * ) ; } 
sp8870_attach extern s#dvb_frontend * sp8870_attach ( const s#sp8870_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/sp887x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#sp887x_config struct sp887x_config { t#u8 demod_address ; int ( * request_firmware ) ( s#dvb_frontend * , const s#firmware * * , char * ) ; } 
sp887x_attach extern s#dvb_frontend * sp887x_attach ( const s#sp887x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stb0899_drv.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stb0899_s1_reg struct stb0899_s1_reg { t#u16 address ; t#u8 data ; } 
s#stb0899_s2_reg struct stb0899_s2_reg { t#u16 offset ; t#u32 base_address ; t#u32 data ; } 
s#stb0899_postproc struct stb0899_postproc { t#u16 gpio ; t#u8 level ; } 
e#stb0899_inversion enum stb0899_inversion { IQ_SWAP_OFF = 0 , IQ_SWAP_ON , IQ_SWAP_AUTO } 
s#stb0899_config struct stb0899_config { const s#stb0899_s1_reg * init_dev ; const s#stb0899_s2_reg * init_s2_demod ; const s#stb0899_s1_reg * init_s1_demod ; const s#stb0899_s2_reg * init_s2_fec ; const s#stb0899_s1_reg * init_tst ; const s#stb0899_postproc * postproc ; e#stb0899_inversion inversion ; t#u32 xtal_freq ; t#u8 demod_address ; t#u8 ts_output_mode ; t#u8 block_sync_mode ; t#u8 ts_pfbit_toggle ; t#u8 clock_polarity ; t#u8 data_clk_parity ; t#u8 fec_mode ; t#u8 data_output_ctl ; t#u8 data_fifo_mode ; t#u8 out_rate_comp ; t#u8 i2c_repeater ; int lo_clk ; int hi_clk ; t#u32 esno_ave ; t#u32 esno_quant ; t#u32 avframes_coarse ; t#u32 avframes_fine ; t#u32 miss_threshold ; t#u32 uwp_threshold_acq ; t#u32 uwp_threshold_track ; t#u32 uwp_threshold_sof ; t#u32 sof_search_timeout ; t#u32 btr_nco_bits ; t#u32 btr_gain_shift_offset ; t#u32 crl_nco_bits ; t#u32 ldpc_max_iter ; int ( * tuner_set_frequency ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_frequency ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_bandwidth ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_bandwidth ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_rfsiggain ) ( s#dvb_frontend * , t#u32 ) ; } 
stb0899_attach extern s#dvb_frontend * stb0899_attach ( s#stb0899_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stb6000.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
stb6000_attach extern s#dvb_frontend * stb6000_attach ( s#dvb_frontend * , int , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stb6100.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stb6100_config struct stb6100_config { t#u8 tuner_address ; t#u32 refclock ; } 
stb6100_attach extern s#dvb_frontend * stb6100_attach ( s#dvb_frontend * , const s#stb6100_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv0288.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv0288_config struct stv0288_config { t#u8 demod_address ; t#u8 * inittab ; int min_delay_ms ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; } 
stv0288_attach extern s#dvb_frontend * stv0288_attach ( const s#stv0288_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv0297.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv0297_config struct stv0297_config { t#u8 demod_address ; t#u8 * inittab ; t#u8 invert : 1 ; t#u8 stop_during_read : 1 ; } 
stv0297_attach extern s#dvb_frontend * stv0297_attach ( const s#stv0297_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv0299.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv0299_config struct stv0299_config { t#u8 demod_address ; const t#u8 * inittab ; t#u32 mclk ; t#u8 invert : 1 ; t#u8 skip_reinit : 1 ; t#u8 lock_output : 2 ; t#u8 volt13_op0_op1 : 1 ; t#u8 op0_off : 1 ; int min_delay_ms ; int ( * set_symbol_rate ) ( s#dvb_frontend * , t#u32 , t#u32 ) ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; } 
stv0299_attach extern s#dvb_frontend * stv0299_attach ( const s#stv0299_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv0367.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv0367_config struct stv0367_config { t#u8 demod_address ; t#u32 xtal ; t#u32 if_khz ; int if_iq_mode ; int ts_mode ; int clk_pol ; } 
stv0367ter_attach extern s#dvb_frontend * stv0367ter_attach ( const s#stv0367_config * , s#i2c_adapter * ) 
stv0367cab_attach extern s#dvb_frontend * stv0367cab_attach ( const s#stv0367_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv0900_core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv0900_reg struct stv0900_reg { t#u16 addr ; t#u8 val ; } 
s#stv0900_config struct stv0900_config { t#u8 demod_address ; t#u8 demod_mode ; t#u32 xtal ; t#u8 clkmode ; t#u8 diseqc_mode ; t#u8 path1_mode ; t#u8 path2_mode ; s#stv0900_reg * ts_config_regs ; t#u8 tun1_maddress ; t#u8 tun2_maddress ; t#u8 tun1_adc ; t#u8 tun2_adc ; t#u8 tun1_type ; t#u8 tun2_type ; int ( * set_ts_params ) ( s#dvb_frontend * , int ) ; void ( * set_lock_led ) ( s#dvb_frontend * , int ) ; } 
stv0900_attach extern s#dvb_frontend * stv0900_attach ( const s#stv0900_config * , s#i2c_adapter * , int ) 

/* drivers/media/dvb/frontends/stv090x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
stv090x_set_gpio extern int stv090x_set_gpio ( s#dvb_frontend * , t#u8 , t#u8 , t#u8 , t#u8 ) 
e#stv090x_device enum stv090x_device { STV0903 = 0 , STV0900 , } 
e#stv090x_mode enum stv090x_mode { STV090x_DUAL = 0 , STV090x_SINGLE } 
e#stv090x_clkmode enum stv090x_clkmode { STV090x_CLK_INT = 0 , STV090x_CLK_EXT = 2 } 
e#stv090x_i2crpt enum stv090x_i2crpt { STV090x_RPTLEVEL_256 = 0 , STV090x_RPTLEVEL_128 = 1 , STV090x_RPTLEVEL_64 = 2 , STV090x_RPTLEVEL_32 = 3 , STV090x_RPTLEVEL_16 = 4 , STV090x_RPTLEVEL_8 = 5 , STV090x_RPTLEVEL_4 = 6 , STV090x_RPTLEVEL_2 = 7 , } 
e#stv090x_adc_range enum stv090x_adc_range { STV090x_ADC_2Vpp = 0 , STV090x_ADC_1Vpp = 1 } 
e#tuner_mode enum tuner_mode { TUNER_SLEEP = 1 , TUNER_WAKE , } 
s#stv090x_config struct stv090x_config { e#stv090x_device device ; e#stv090x_mode demod_mode ; e#stv090x_clkmode clk_mode ; t#u32 xtal ; t#u8 address ; t#u8 ts1_mode ; t#u8 ts2_mode ; t#u32 ts1_clk ; t#u32 ts2_clk ; t#u8 ts1_tei : 1 ; t#u8 ts2_tei : 1 ; e#stv090x_i2crpt repeater_level ; t#u8 tuner_bbgain ; e#stv090x_adc_range adc1_range ; e#stv090x_adc_range adc2_range ; t#bool diseqc_envelope_mode ; int ( * tuner_init ) ( s#dvb_frontend * ) ; int ( * tuner_sleep ) ( s#dvb_frontend * ) ; int ( * tuner_set_mode ) ( s#dvb_frontend * , e#tuner_mode ) ; int ( * tuner_set_frequency ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_frequency ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_bandwidth ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_bandwidth ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_bbgain ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_bbgain ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_refclk ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_status ) ( s#dvb_frontend * , t#u32 * ) ; void ( * tuner_i2c_lock ) ( s#dvb_frontend * , int ) ; } 
e#stv090x_demodulator enum stv090x_demodulator { STV090x_DEMODULATOR_0 = 1 , STV090x_DEMODULATOR_1 } 
stv090x_attach extern s#dvb_frontend * stv090x_attach ( const s#stv090x_config * , s#i2c_adapter * , e#stv090x_demodulator ) 

/* drivers/media/dvb/frontends/stv6110.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv6110_config struct stv6110_config { t#u8 i2c_address ; t#u32 mclk ; t#u8 gain ; t#u8 clk_div ; } 
stv6110_attach extern s#dvb_frontend * stv6110_attach ( s#dvb_frontend * , const s#stv6110_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/stv6110x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#stv6110x_devctl struct stv6110x_devctl { int ( * tuner_init ) ( s#dvb_frontend * ) ; int ( * tuner_sleep ) ( s#dvb_frontend * ) ; int ( * tuner_set_mode ) ( s#dvb_frontend * , e#tuner_mode ) ; int ( * tuner_set_frequency ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_frequency ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_bandwidth ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_bandwidth ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_bbgain ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_bbgain ) ( s#dvb_frontend * , t#u32 * ) ; int ( * tuner_set_refclk ) ( s#dvb_frontend * , t#u32 ) ; int ( * tuner_get_status ) ( s#dvb_frontend * , t#u32 * ) ; } 
s#stv6110x_config struct stv6110x_config { t#u8 addr ; t#u32 refclk ; t#u8 clk_div ; } 
stv6110x_attach extern s#stv6110x_devctl * stv6110x_attach ( s#dvb_frontend * , const s#stv6110x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda10021.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda1002x_config struct tda1002x_config { t#u8 demod_address ; t#u8 invert ; } 
tda10021_attach extern s#dvb_frontend * tda10021_attach ( const s#tda1002x_config * , s#i2c_adapter * , t#u8 ) 

/* drivers/media/dvb/frontends/tda10023.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda10023_config struct tda10023_config { t#u8 demod_address ; t#u8 invert ; t#u32 xtal ; t#u8 pll_m ; t#u8 pll_p ; t#u8 pll_n ; t#u8 output_mode ; t#u16 deltaf ; } 
tda10023_attach extern s#dvb_frontend * tda10023_attach ( const s#tda10023_config * , s#i2c_adapter * , t#u8 ) 

/* drivers/media/dvb/frontends/tda10048.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda10048_config struct tda10048_config { t#u8 demod_address ; t#u8 output_mode ; t#u8 fwbulkwritelen ; t#u8 inversion ; t#u16 dtv6_if_freq_khz ; t#u16 dtv7_if_freq_khz ; t#u16 dtv8_if_freq_khz ; t#u16 clk_freq_khz ; t#u8 disable_gate_access ; } 
tda10048_attach extern s#dvb_frontend * tda10048_attach ( const s#tda10048_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda1004x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#tda10046_tsout enum tda10046_tsout { TDA10046_TS_PARALLEL = 0x00 , TDA10046_TS_SERIAL = 0x01 , } 
e#tda10046_xtal enum tda10046_xtal { TDA10046_XTAL_4M , TDA10046_XTAL_16M , } 
e#tda10046_if enum tda10046_if { TDA10046_FREQ_3617 , TDA10046_FREQ_3613 , TDA10046_FREQ_045 , TDA10046_FREQ_052 , } 
e#tda10046_agc enum tda10046_agc { TDA10046_AGC_DEFAULT , TDA10046_AGC_IFO_AUTO_NEG , TDA10046_AGC_IFO_AUTO_POS , TDA10046_AGC_TDA827X , } 
e#tda10046_gpio enum tda10046_gpio { TDA10046_GPTRI = 0x00 , TDA10046_GP00 = 0x40 , TDA10046_GP01 = 0x42 , TDA10046_GP10 = 0x48 , TDA10046_GP11 = 0x4a , TDA10046_GP00_I = 0x80 , TDA10046_GP01_I = 0x82 , TDA10046_GP10_I = 0x88 , TDA10046_GP11_I = 0x8a , } 
s#tda1004x_config struct tda1004x_config { t#u8 demod_address ; t#u8 invert ; t#u8 invert_oclk ; e#tda10046_tsout ts_mode ; e#tda10046_xtal xtal_freq ; e#tda10046_if if_freq ; e#tda10046_agc agc_config ; e#tda10046_gpio gpio_config ; t#u8 tuner_address ; t#u8 antenna_switch ; t#u8 i2c_gate ; int ( * request_firmware ) ( s#dvb_frontend * , const s#firmware * * , char * ) ; } 
tda10045_attach extern s#dvb_frontend * tda10045_attach ( const s#tda1004x_config * , s#i2c_adapter * ) 
tda10046_attach extern s#dvb_frontend * tda10046_attach ( const s#tda1004x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda10086.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#tda10086_xtal enum tda10086_xtal { TDA10086_XTAL_16M , TDA10086_XTAL_4M } 
s#tda10086_config struct tda10086_config { t#u8 demod_address ; t#u8 invert ; t#u8 diseqc_tone ; e#tda10086_xtal xtal_freq ; } 
tda10086_attach extern s#dvb_frontend * tda10086_attach ( const s#tda10086_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda665x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda665x_config struct tda665x_config { char name [ 128 ] ; t#u8 addr ; t#u32 frequency_min ; t#u32 frequency_max ; t#u32 frequency_offst ; t#u32 ref_multiplier ; t#u32 ref_divider ; } 
tda665x_attach extern s#dvb_frontend * tda665x_attach ( s#dvb_frontend * , const s#tda665x_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda8083.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tda8083_config struct tda8083_config { t#u8 demod_address ; } 
tda8083_attach extern s#dvb_frontend * tda8083_attach ( const s#tda8083_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda8261.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
e#tda8261_step enum tda8261_step { TDA8261_STEP_2000 = 0 , TDA8261_STEP_1000 , TDA8261_STEP_500 , TDA8261_STEP_250 , TDA8261_STEP_125 } 
s#tda8261_config struct tda8261_config { t#u8 addr ; e#tda8261_step step_size ; } 
tda8261_attach extern s#dvb_frontend * tda8261_attach ( s#dvb_frontend * , const s#tda8261_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/tda826x.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
tda826x_attach extern s#dvb_frontend * tda826x_attach ( s#dvb_frontend * , int , s#i2c_adapter * , int ) 

/* drivers/media/dvb/frontends/tua6100.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
tua6100_attach extern s#dvb_frontend * tua6100_attach ( s#dvb_frontend * , int , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/ves1820.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ves1820_config struct ves1820_config { t#u8 demod_address ; t#u32 xin ; t#u8 invert : 1 ; t#u8 selagc : 1 ; } 
ves1820_attach extern s#dvb_frontend * ves1820_attach ( const s#ves1820_config * , s#i2c_adapter * , t#u8 ) 

/* drivers/media/dvb/frontends/ves1x93.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ves1x93_config struct ves1x93_config { t#u8 demod_address ; t#u32 xin ; t#u8 invert_pwm : 1 ; } 
ves1x93_attach extern s#dvb_frontend * ves1x93_attach ( const s#ves1x93_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/zl10036.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#zl10036_config struct zl10036_config { t#u8 tuner_address ; int rf_loop_enable ; } 
zl10036_attach extern s#dvb_frontend * zl10036_attach ( s#dvb_frontend * , const s#zl10036_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/zl10039.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
zl10039_attach s#dvb_frontend * zl10039_attach ( s#dvb_frontend * , t#u8 , s#i2c_adapter * ) 

/* drivers/media/dvb/frontends/zl10353.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#zl10353_config struct zl10353_config { t#u8 demod_address ; int adc_clock ; int if2 ; int no_tuner ; int parallel_ts ; t#u8 disable_i2c_gate_ctrl : 1 ; t#u8 clock_ctl_1 ; t#u8 pll_0 ; } 
zl10353_attach extern s#dvb_frontend * zl10353_attach ( const s#zl10353_config * , s#i2c_adapter * ) 

/* drivers/media/dvb/mantis/mantis_ca.o */
s##pci_dev
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
e#mantis_baud enum mantis_baud { MANTIS_BAUD_9600 = 0 , MANTIS_BAUD_19200 , MANTIS_BAUD_38400 , MANTIS_BAUD_57600 , MANTIS_BAUD_115200 } 
e#mantis_parity enum mantis_parity { MANTIS_PARITY_NONE = 0 , MANTIS_PARITY_EVEN , MANTIS_PARITY_ODD , } 
e#mantis_i2c_mode enum mantis_i2c_mode { MANTIS_PAGE_MODE = 0 , MANTIS_BYTE_MODE , } 
s#mantis_hwconfig struct mantis_hwconfig { char * model_name ; char * dev_type ; t#u32 ts_size ; e#mantis_baud baud_rate ; e#mantis_parity parity ; t#u32 bytes ; t#irqreturn_t ( * irq_handler ) ( int , void * ) ; int ( * frontend_init ) ( s#mantis_pci * , s#dvb_frontend * ) ; t#u8 power ; t#u8 reset ; e#mantis_i2c_mode i2c_mode ; } 
s#mantis_slot struct mantis_slot { t#u32 timeout ; t#u32 slave_cfg ; t#u32 bar ; } 
e#mantis_sbuf_status enum mantis_sbuf_status { MANTIS_SBUF_DATA_AVAIL = 1 , MANTIS_SBUF_DATA_EMPTY = 2 , MANTIS_SBUF_DATA_OVFLW = 3 } 
e#mantis_slot_state enum mantis_slot_state { MODULE_INSERTED = 3 , MODULE_XTRACTED = 4 } 
s#mantis_ca struct mantis_ca { s#mantis_slot slot [ 4 ] ; s#work_struct hif_evm_work ; t#u32 hif_event ; t#wait_queue_head_t hif_opdone_wq ; t#wait_queue_head_t hif_brrdyw_wq ; t#wait_queue_head_t hif_data_wq ; t#wait_queue_head_t hif_write_wq ; e#mantis_sbuf_status sbuf_status ; e#mantis_slot_state slot_state ; void * ca_priv ; s#dvb_ca_en50221 en50221 ; s#mutex ca_lock ; } 
s##rc_dev
s#mantis_pci struct mantis_pci { unsigned int verbose ; t#u16 vendor_id ; t#u16 device_id ; t#u16 subsystem_vendor ; t#u16 subsystem_device ; t#u8 latency ; s#pci_dev * pdev ; unsigned long mantis_addr ; void * mmio ; t#u8 irq ; t#u8 revision ; unsigned int num ; t#u32 finished_block ; t#u32 last_block ; t#u32 line_bytes ; t#u32 line_count ; t#u32 risc_pos ; t#u8 * buf_cpu ; t#dma_addr_t buf_dma ; t#u32 * risc_cpu ; t#dma_addr_t risc_dma ; s#tasklet_struct tasklet ; s#i2c_adapter adapter ; int i2c_rc ; t#wait_queue_head_t i2c_wq ; s#mutex i2c_lock ; s#dvb_adapter dvb_adapter ; s#dvb_frontend * fe ; s#dvb_demux demux ; s#dmxdev dmxdev ; s#dmx_frontend fe_hw ; s#dmx_frontend fe_mem ; s#dvb_net dvbnet ; t#u8 feeds ; s#mantis_hwconfig * hwconfig ; t#u32 mantis_int_stat ; t#u32 mantis_int_mask ; t#u8 mac_address [ 8 ] ; t#u32 sub_vendor_id ; t#u32 sub_device_id ; t#u32 gpio_status ; t#u32 gpif_status ; s#mantis_ca * mantis_ca ; t#wait_queue_head_t uart_wq ; s#work_struct uart_work ; t#spinlock_t uart_lock ; s#rc_dev * rc ; char input_name [ 80 ] ; char input_phys [ 80 ] ; } 
mantis_ca_init extern int mantis_ca_init ( s#mantis_pci * ) 
mantis_ca_exit extern void mantis_ca_exit ( s#mantis_pci * ) 

/* drivers/media/dvb/mantis/mantis_dma.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
mantis_dma_exit extern int mantis_dma_exit ( s#mantis_pci * ) 
mantis_dma_init extern int mantis_dma_init ( s#mantis_pci * ) 

/* drivers/media/dvb/mantis/mantis_dvb.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
e#mantis_power enum mantis_power { POWER_OFF = 0 , POWER_ON = 1 } 
mantis_frontend_power extern int mantis_frontend_power ( s#mantis_pci * , e#mantis_power ) 
mantis_frontend_soft_reset extern void mantis_frontend_soft_reset ( s#mantis_pci * ) 
mantis_dvb_init extern int mantis_dvb_init ( s#mantis_pci * ) 
mantis_dvb_exit extern int mantis_dvb_exit ( s#mantis_pci * ) 

/* drivers/media/dvb/mantis/mantis_i2c.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
mantis_i2c_init extern int mantis_i2c_init ( s#mantis_pci * ) 
mantis_i2c_exit extern int mantis_i2c_exit ( s#mantis_pci * ) 

/* drivers/media/dvb/mantis/mantis_ioc.o */
s##pci_dev
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
mantis_get_mac extern int mantis_get_mac ( s#mantis_pci * ) 
mantis_gpio_set_bits extern void mantis_gpio_set_bits ( s#mantis_pci * , t#u32 , t#u8 ) 
e#mantis_stream_control enum mantis_stream_control { STREAM_TO_HIF = 0 , STREAM_TO_CAM } 
mantis_stream_control extern int mantis_stream_control ( s#mantis_pci * , e#mantis_stream_control ) 

/* drivers/media/dvb/mantis/mantis_pci.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
mantis_pci_init extern int mantis_pci_init ( s#mantis_pci * ) 
mantis_pci_exit extern void mantis_pci_exit ( s#mantis_pci * ) 

/* drivers/media/dvb/mantis/mantis_uart.o */
s##pci_dev
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##rc_dev
mantis_uart_init extern int mantis_uart_init ( s#mantis_pci * ) 
mantis_uart_exit extern void mantis_uart_exit ( s#mantis_pci * ) 

/* drivers/media/dvb/siano/sms-cards.o */
e#sms_device_type_st enum sms_device_type_st { SMS_STELLAR = 0 , SMS_NOVA_A0 , SMS_NOVA_B0 , SMS_VEGA , SMS_NUM_OF_DEVICE_TYPES } 
E#DEVICE_MODE_MAX ( 0 ) + 9 
s#sms_board_gpio_cfg struct sms_board_gpio_cfg { int lna_vhf_exist ; int lna_vhf_ctrl ; int lna_uhf_exist ; int lna_uhf_ctrl ; int lna_uhf_d_ctrl ; int lna_sband_exist ; int lna_sband_ctrl ; int lna_sband_d_ctrl ; int foreign_lna0_ctrl ; int foreign_lna1_ctrl ; int foreign_lna2_ctrl ; int rf_switch_vhf ; int rf_switch_uhf ; int rf_switch_sband ; int leds_power ; int led0 ; int led1 ; int led2 ; int led3 ; int led4 ; int ir ; int eeprom_wp ; int mrc_sense ; int mrc_pdn_resetn ; int mrc_gp0 ; int mrc_gp1 ; int mrc_gp2 ; int mrc_gp3 ; int mrc_gp4 ; int host_spi_gsp_ts_int ; } 
s#sms_board struct sms_board { e#sms_device_type_st type ; char * name , * fw [ E#DEVICE_MODE_MAX ] ; s#sms_board_gpio_cfg board_cfg ; char * rc_codes ; int led_power , led_hi , led_lo , lna_ctrl , rf_switch ; } 
sms_get_board s#sms_board * sms_get_board ( unsigned ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
t#setmode_t typedef int ( * setmode_t ) ( void * , int ) 
t#detectmode_t typedef void ( * detectmode_t ) ( void * , int * ) 
t#sendrequest_t typedef int ( * sendrequest_t ) ( void * , void * , t#size_t ) 
t#preload_t typedef int ( * preload_t ) ( void * ) 
t#postload_t typedef int ( * postload_t ) ( void * ) 
s##ir_raw_event_ctrl
s##input_mt_slot
s#ir_t struct ir_t { s#rc_dev * dev ; char name [ 40 ] ; char phys [ 32 ] ; char * rc_codes ; t#u64 protocol ; t#u32 timeout ; t#u32 controller ; } 
s#smscore_device_t struct smscore_device_t { s#list_head entry ; s#list_head clients ; s#list_head subclients ; t#spinlock_t clientslock ; s#list_head buffers ; t#spinlock_t bufferslock ; int num_buffers ; void * common_buffer ; int common_buffer_size ; t#dma_addr_t common_buffer_phys ; void * context ; s#device * device ; char devpath [ 32 ] ; unsigned long device_flags ; t#setmode_t setmode_handler ; t#detectmode_t detectmode_handler ; t#sendrequest_t sendrequest_handler ; t#preload_t preload_handler ; t#postload_t postload_handler ; int mode , modes_supported ; s#completion version_ex_done , data_download_done , trigger_done ; s#completion init_device_done , reload_start_done , resume_done ; s#completion gpio_configuration_done , gpio_set_level_done ; s#completion gpio_get_level_done , ir_init_done ; t#wait_queue_head_t buffer_mng_waitq ; int gpio_get_res ; int board_id ; t#u8 * fw_buf ; t#u32 fw_buf_size ; s#ir_t ir ; int led_state ; } 
e#SMS_BOARD_EVENTS enum SMS_BOARD_EVENTS { BOARD_EVENT_POWER_INIT , BOARD_EVENT_POWER_SUSPEND , BOARD_EVENT_POWER_RESUME , BOARD_EVENT_BIND , BOARD_EVENT_SCAN_PROG , BOARD_EVENT_SCAN_COMP , BOARD_EVENT_EMERGENCY_WARNING_SIGNAL , BOARD_EVENT_FE_LOCK , BOARD_EVENT_FE_UNLOCK , BOARD_EVENT_DEMOD_LOCK , BOARD_EVENT_DEMOD_UNLOCK , BOARD_EVENT_RECEPTION_MAX_4 , BOARD_EVENT_RECEPTION_3 , BOARD_EVENT_RECEPTION_2 , BOARD_EVENT_RECEPTION_1 , BOARD_EVENT_RECEPTION_LOST_0 , BOARD_EVENT_MULTIPLEX_OK , BOARD_EVENT_MULTIPLEX_ERRORS } 
sms_board_event int sms_board_event ( s#smscore_device_t * , e#SMS_BOARD_EVENTS ) 
sms_board_setup int sms_board_setup ( s#smscore_device_t * ) 
sms_board_power int sms_board_power ( s#smscore_device_t * , int ) 
sms_board_led_feedback int sms_board_led_feedback ( s#smscore_device_t * , int ) 
sms_board_lna_control int sms_board_lna_control ( s#smscore_device_t * , int ) 
sms_board_load_modules extern int sms_board_load_modules ( int ) 

/* drivers/media/dvb/siano/smscoreapi.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ir_raw_event_ctrl
s##input_mt_slot
smscore_set_board_id void smscore_set_board_id ( s#smscore_device_t * , int ) 
smscore_get_board_id int smscore_get_board_id ( s#smscore_device_t * ) 
smscore_registry_getmode extern int smscore_registry_getmode ( char * ) 
t#hotplug_t typedef int ( * hotplug_t ) ( s#smscore_device_t * , s#device * , int ) 
smscore_register_hotplug extern int smscore_register_hotplug ( t#hotplug_t ) 
smscore_unregister_hotplug extern void smscore_unregister_hotplug ( t#hotplug_t ) 
s#smsdevice_params_t struct smsdevice_params_t { s#device * device ; int buffer_size ; int num_buffers ; char devpath [ 32 ] ; unsigned long flags ; t#setmode_t setmode_handler ; t#detectmode_t detectmode_handler ; t#sendrequest_t sendrequest_handler ; t#preload_t preload_handler ; t#postload_t postload_handler ; void * context ; e#sms_device_type_st device_type ; } 
smscore_register_device extern int smscore_register_device ( s#smsdevice_params_t * , s#smscore_device_t * * ) 
smscore_start_device extern int smscore_start_device ( s#smscore_device_t * ) 
smscore_unregister_device extern void smscore_unregister_device ( s#smscore_device_t * ) 
smscore_get_device_mode extern int smscore_get_device_mode ( s#smscore_device_t * ) 
s#smscore_buffer_t struct smscore_buffer_t { s#list_head entry ; int size ; int offset ; void * p ; t#dma_addr_t phys ; unsigned long offset_in_common ; } 
smscore_onresponse extern void smscore_onresponse ( s#smscore_device_t * , s#smscore_buffer_t * ) 
smscore_getbuffer extern s#smscore_buffer_t * smscore_getbuffer ( s#smscore_device_t * ) 
smscore_putbuffer extern void smscore_putbuffer ( s#smscore_device_t * , s#smscore_buffer_t * ) 
t#onresponse_t typedef int ( * onresponse_t ) ( void * , s#smscore_buffer_t * ) 
t#onremove_t typedef void ( * onremove_t ) ( void * ) 
s#smsclient_params_t struct smsclient_params_t { int initial_id ; int data_type ; t#onresponse_t onresponse_handler ; t#onremove_t onremove_handler ; void * context ; } 
s##smscore_client_t
smscore_register_client extern int smscore_register_client ( s#smscore_device_t * , s#smsclient_params_t * , s#smscore_client_t * * ) 
smscore_unregister_client extern void smscore_unregister_client ( s#smscore_client_t * ) 
smsclient_sendrequest extern int smsclient_sendrequest ( s#smscore_client_t * , void * , t#size_t ) 

/* drivers/media/dvb/siano/smsendian.o */
smsendian_handle_tx_message extern void smsendian_handle_tx_message ( void * ) 
smsendian_handle_rx_message extern void smsendian_handle_rx_message ( void * ) 
smsendian_handle_message_header extern void smsendian_handle_message_header ( void * ) 

/* drivers/media/dvb/ttpci/budget-core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s##v4l2_events
s##tuner_setup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##saa7146_ext_vv
s##saa7146_vv
s#budget_info struct budget_info { char * name ; int type ; } 
s#budget struct budget { s#dvb_device dvb_dev ; s#dvb_net dvb_net ; s#saa7146_dev * dev ; s#i2c_adapter i2c_adap ; s#budget_info * card ; unsigned char * grabbing ; s#saa7146_pgtable pt ; s#tasklet_struct fidb_tasklet ; s#tasklet_struct vpe_tasklet ; s#dmxdev dmxdev ; s#dvb_demux demux ; s#dmx_frontend hw_frontend ; s#dmx_frontend mem_frontend ; int ci_present ; int video_port ; t#u32 buffer_width ; t#u32 buffer_height ; t#u32 buffer_size ; t#u32 buffer_warning_threshold ; t#u32 buffer_warnings ; unsigned long buffer_warning_time ; t#u32 ttbp ; int feeding ; t#spinlock_t feedlock ; t#spinlock_t debilock ; s#dvb_adapter dvb_adapter ; s#dvb_frontend * dvb_frontend ; int ( * read_fe_status ) ( s#dvb_frontend * , t#fe_status_t * ) ; int fe_synced ; void * priv ; } 
ttpci_budget_debiread extern int ttpci_budget_debiread ( s#budget * , t#u32 , int , int , int , int ) 
ttpci_budget_debiwrite extern int ttpci_budget_debiwrite ( s#budget * , t#u32 , int , int , t#u32 , int , int ) 
ttpci_budget_init extern int ttpci_budget_init ( s#budget * , s#saa7146_dev * , s#saa7146_pci_extension_data * , s#module * , short * ) 
ttpci_budget_init_hooks extern void ttpci_budget_init_hooks ( s#budget * ) 
ttpci_budget_deinit extern int ttpci_budget_deinit ( s#budget * ) 
ttpci_budget_irq10_handler extern void ttpci_budget_irq10_handler ( s#saa7146_dev * , t#u32 * ) 
ttpci_budget_set_video_port extern void ttpci_budget_set_video_port ( s#saa7146_dev * , int ) 
budget_debug extern int budget_debug 

/* drivers/media/dvb/ttpci/ttpci-eeprom.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
ttpci_eeprom_parse_mac extern int ttpci_eeprom_parse_mac ( s#i2c_adapter * , t#u8 * ) 

/* drivers/media/dvb/ttusb-dec/ttusbdecfe.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#ttusbdecfe_config struct ttusbdecfe_config { int ( * send_command ) ( s#dvb_frontend * , const t#u8 , int , const t#u8 [ ] , int * , t#u8 [ ] ) ; } 
ttusbdecfe_dvbt_attach extern s#dvb_frontend * ttusbdecfe_dvbt_attach ( const s#ttusbdecfe_config * ) 
ttusbdecfe_dvbs_attach extern s#dvb_frontend * ttusbdecfe_dvbs_attach ( const s#ttusbdecfe_config * ) 

/* drivers/media/rc/ir-raw.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#__kfifo struct __kfifo { unsigned int in ; unsigned int out ; unsigned int mask ; unsigned int esize ; void * data ; } 
s#kfifo struct kfifo { union { s#__kfifo kfifo ; unsigned char * type ; char ( * rectype ) [ 0 ] ; void * ptr ; const void * ptr_const ; } ; unsigned char buf [ 0 ] ; } 
e#raw_event_type enum raw_event_type { IR_SPACE = ( 1 << 0 ) , IR_PULSE = ( 1 << 1 ) , IR_START_EVENT = ( 1 << 2 ) , IR_STOP_EVENT = ( 1 << 3 ) , } 
s#ir_raw_event struct ir_raw_event { union { t#u32 duration ; struct { t#u32 carrier ; t#u8 duty_cycle ; } ; } ; unsigned pulse : 1 ; unsigned reset : 1 ; unsigned timeout : 1 ; unsigned carrier_report : 1 ; } 
s#nec_dec struct nec_dec { int state ; unsigned count ; t#u32 bits ; t#bool is_nec_x ; t#bool necx_repeat ; } 
s#rc5_dec struct rc5_dec { int state ; t#u32 bits ; unsigned count ; unsigned wanted_bits ; } 
s#rc6_dec struct rc6_dec { int state ; t#u8 header ; t#u32 body ; t#bool toggle ; unsigned count ; unsigned wanted_bits ; } 
s#sony_dec struct sony_dec { int state ; t#u32 bits ; unsigned count ; } 
s#jvc_dec struct jvc_dec { int state ; t#u16 bits ; t#u16 old_bits ; unsigned count ; t#bool first ; t#bool toggle ; } 
s#rc5_sz_dec struct rc5_sz_dec { int state ; t#u32 bits ; unsigned count ; unsigned wanted_bits ; } 
s##lirc_driver
s#lirc_codec struct lirc_codec { s#rc_dev * dev ; s#lirc_driver * drv ; int carrier_low ; t#ktime_t gap_start ; t#u64 gap_duration ; t#bool gap ; t#bool send_timeout_reports ; } 
s#ir_raw_event_ctrl struct ir_raw_event_ctrl { s#list_head list ; s#task_struct * thread ; t#spinlock_t lock ; s#kfifo kfifo ; t#ktime_t last_event ; e#raw_event_type last_type ; s#rc_dev * dev ; t#u64 enabled_protocols ; s#ir_raw_event prev_ev ; s#ir_raw_event this_ev ; s#nec_dec nec ; s#rc5_dec rc5 ; s#rc6_dec rc6 ; s#sony_dec sony ; s#jvc_dec jvc ; s#rc5_sz_dec rc5_sz ; s#lirc_codec lirc ; } 
s##input_mt_slot
ir_raw_event_store int ir_raw_event_store ( s#rc_dev * , s#ir_raw_event * ) 
ir_raw_event_store_edge int ir_raw_event_store_edge ( s#rc_dev * , e#raw_event_type ) 
ir_raw_event_store_with_filter int ir_raw_event_store_with_filter ( s#rc_dev * , s#ir_raw_event * ) 
ir_raw_event_set_idle void ir_raw_event_set_idle ( s#rc_dev * , t#bool ) 
ir_raw_event_handle void ir_raw_event_handle ( s#rc_dev * ) 
s#ir_raw_handler struct ir_raw_handler { s#list_head list ; t#u64 protocols ; int ( * decode ) ( s#rc_dev * , s#ir_raw_event ) ; int ( * raw_register ) ( s#rc_dev * ) ; int ( * raw_unregister ) ( s#rc_dev * ) ; } 
ir_raw_handler_register int ir_raw_handler_register ( s#ir_raw_handler * ) 
ir_raw_handler_unregister void ir_raw_handler_unregister ( s#ir_raw_handler * ) 

/* drivers/media/rc/lirc_dev.o */
s#lirc_buffer struct lirc_buffer { t#wait_queue_head_t wait_poll ; t#spinlock_t fifo_lock ; unsigned int chunk_size ; unsigned int size ; s#kfifo fifo ; t#u8 fifo_initialized ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#lirc_driver struct lirc_driver { char name [ 40 ] ; int minor ; t#__u32 code_length ; unsigned int buffer_size ; int sample_rate ; t#__u32 features ; unsigned int chunk_size ; void * data ; int min_timeout ; int max_timeout ; int ( * add_to_buf ) ( void * , s#lirc_buffer * ) ; s#lirc_buffer * rbuf ; int ( * set_use_inc ) ( void * ) ; void ( * set_use_dec ) ( void * ) ; const s#file_operations * fops ; s#device * dev ; s#module * owner ; } 
lirc_register_driver extern int lirc_register_driver ( s#lirc_driver * ) 
lirc_unregister_driver extern int lirc_unregister_driver ( int ) 
lirc_dev_fop_open int lirc_dev_fop_open ( s#inode * , s#file * ) 
lirc_dev_fop_close int lirc_dev_fop_close ( s#inode * , s#file * ) 
lirc_dev_fop_poll unsigned int lirc_dev_fop_poll ( s#file * , t#poll_table * ) 
lirc_dev_fop_ioctl long lirc_dev_fop_ioctl ( s#file * , unsigned int , unsigned long ) 
lirc_dev_fop_read t#ssize_t lirc_dev_fop_read ( s#file * , char * , t#size_t , t#loff_t * ) 
lirc_get_pdata void * lirc_get_pdata ( s#file * ) 
lirc_dev_fop_write t#ssize_t lirc_dev_fop_write ( s#file * , const char * , t#size_t , t#loff_t * ) 

/* drivers/media/rc/rc-main.o */
rc_map_get s#rc_map * rc_map_get ( const char * ) 
s#rc_map_list struct rc_map_list { s#list_head list ; s#rc_map map ; } 
rc_map_register int rc_map_register ( s#rc_map_list * ) 
rc_map_unregister void rc_map_unregister ( s#rc_map_list * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##lirc_driver
s##input_mt_slot
rc_g_keycode_from_table t#u32 rc_g_keycode_from_table ( s#rc_dev * , t#u32 ) 
rc_keyup void rc_keyup ( s#rc_dev * ) 
rc_repeat void rc_repeat ( s#rc_dev * ) 
rc_keydown void rc_keydown ( s#rc_dev * , int , t#u8 ) 
rc_keydown_notimeout void rc_keydown_notimeout ( s#rc_dev * , int , t#u8 ) 
rc_allocate_device s#rc_dev * rc_allocate_device ( void ) 
rc_free_device void rc_free_device ( s#rc_dev * ) 
rc_register_device int rc_register_device ( s#rc_dev * ) 
rc_unregister_device void rc_unregister_device ( s#rc_dev * ) 
rc_core_debug extern int rc_core_debug 

/* drivers/media/video/bt8xx/bttv-gpio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dma_coherent_mem
s##proc_dir_entry
s##subsys_private
s##driver_private
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s##v4l2_events
s#tuner_setup struct tuner_setup { unsigned short addr ; unsigned int type ; unsigned int mode_mask ; unsigned int config ; int ( * tuner_callback ) ( void * , int , int , int ) ; } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#bttv_core struct bttv_core { s#v4l2_device v4l2_dev ; s#pci_dev * pci ; s#i2c_adapter i2c_adap ; s#list_head subs ; unsigned int nr ; unsigned int type ; } 
s#bttv_sub_device struct bttv_sub_device { s#device dev ; s#bttv_core * core ; s#list_head list ; } 
s#bttv_sub_driver struct bttv_sub_driver { s#device_driver drv ; char wanted [ 20 ] ; int ( * probe ) ( s#bttv_sub_device * ) ; void ( * remove ) ( s#bttv_sub_device * ) ; } 
bttv_sub_register int bttv_sub_register ( s#bttv_sub_driver * , char * ) 
bttv_sub_unregister int bttv_sub_unregister ( s#bttv_sub_driver * ) 

/* drivers/media/video/bt8xx/bttv-if.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
bttv_get_pcidev extern s#pci_dev * bttv_get_pcidev ( unsigned int ) 
bttv_gpio_enable extern int bttv_gpio_enable ( unsigned int , unsigned long , unsigned long ) 
bttv_read_gpio extern int bttv_read_gpio ( unsigned int , unsigned long * ) 
bttv_write_gpio extern int bttv_write_gpio ( unsigned int , unsigned long , unsigned long ) 

/* drivers/media/video/btcx-risc.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#btcx_riscmem struct btcx_riscmem { unsigned int size ; t#__le32 * cpu ; t#__le32 * jmp ; t#dma_addr_t dma ; } 
btcx_riscmem_alloc int btcx_riscmem_alloc ( s#pci_dev * , s#btcx_riscmem * , unsigned int ) 
btcx_riscmem_free void btcx_riscmem_free ( s#pci_dev * , s#btcx_riscmem * ) 
btcx_screen_clips int btcx_screen_clips ( int , int , s#v4l2_rect * , s#v4l2_clip * , unsigned int ) 
btcx_align int btcx_align ( s#v4l2_rect * , s#v4l2_clip * , unsigned int , int ) 
btcx_sort_clips void btcx_sort_clips ( s#v4l2_clip * , unsigned int ) 
s#btcx_skiplist struct btcx_skiplist { int start ; int end ; } 
btcx_calc_skips void btcx_calc_skips ( int , int , int * , s#btcx_skiplist * , unsigned int * , const s#v4l2_clip * , unsigned int ) 

/* drivers/media/video/cx18/cx18-driver.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#v4l2_ctrl_ops struct v4l2_ctrl_ops { int ( * g_volatile_ctrl ) ( s#v4l2_ctrl * ) ; int ( * try_ctrl ) ( s#v4l2_ctrl * ) ; int ( * s_ctrl ) ( s#v4l2_ctrl * ) ; } 
s#v4l2_ctrl struct v4l2_ctrl { s#list_head node ; s#v4l2_ctrl_handler * handler ; s#v4l2_ctrl * * cluster ; unsigned ncontrols ; unsigned int done : 1 ; unsigned int is_new : 1 ; unsigned int is_private : 1 ; unsigned int is_volatile : 1 ; const s#v4l2_ctrl_ops * ops ; t#u32 id ; const char * name ; e#v4l2_ctrl_type type ; t#s32 minimum , maximum , default_value ; union { t#u32 step ; t#u32 menu_skip_mask ; } ; const char * const * qmenu ; unsigned long flags ; union { t#s32 val ; t#s64 val64 ; char * string ; } cur ; union { t#s32 val ; t#s64 val64 ; char * string ; } ; void * priv ; } 
s#v4l2_ctrl_ref struct v4l2_ctrl_ref { s#list_head node ; s#v4l2_ctrl_ref * next ; s#v4l2_ctrl * ctrl ; } 
s#v4l2_ctrl_handler struct v4l2_ctrl_handler { s#mutex lock ; s#list_head ctrls ; s#list_head ctrl_refs ; s#v4l2_ctrl_ref * cached ; s#v4l2_ctrl_ref * * buckets ; t#u16 nr_of_buckets ; int error ; } 
s##v4l2_events
s#cx18_card_video_input struct cx18_card_video_input { t#u8 video_type ; t#u8 audio_index ; t#u32 video_input ; } 
s#cx18_card_audio_input struct cx18_card_audio_input { t#u8 audio_type ; t#u32 audio_input ; t#u16 muxer_input ; } 
s#cx18_gpio_init struct cx18_gpio_init { t#u32 direction ; t#u32 initial_value ; } 
s#cx18_gpio_i2c_slave_reset struct cx18_gpio_i2c_slave_reset { t#u32 active_lo_mask ; t#u32 active_hi_mask ; int msecs_asserted ; int msecs_recovery ; t#u32 ir_reset_mask ; } 
s#cx18_gpio_audio_input struct cx18_gpio_audio_input { t#u32 mask ; t#u32 tuner ; t#u32 linein ; t#u32 radio ; } 
s#cx18_card_tuner struct cx18_card_tuner { t#v4l2_std_id std ; int tuner ; } 
s#cx18_card_tuner_i2c struct cx18_card_tuner_i2c { unsigned short radio [ 2 ] ; unsigned short demod [ 3 ] ; unsigned short tv [ 4 ] ; } 
s#cx18_ddr struct cx18_ddr { t#u32 chip_config ; t#u32 refresh ; t#u32 timing1 ; t#u32 timing2 ; t#u32 tune_lane ; t#u32 initial_emrs ; } 
s#cx18_card_pci_info struct cx18_card_pci_info { t#u16 device ; t#u16 subsystem_vendor ; t#u16 subsystem_device ; } 
s#cx18_card struct cx18_card { int type ; char * name ; char * comment ; t#u32 v4l2_capabilities ; t#u32 hw_audio_ctrl ; t#u32 hw_muxer ; t#u32 hw_all ; s#cx18_card_video_input video_inputs [ 6 ] ; s#cx18_card_audio_input audio_inputs [ 3 ] ; s#cx18_card_audio_input radio_input ; t#u8 xceive_pin ; s#cx18_gpio_init gpio_init ; s#cx18_gpio_i2c_slave_reset gpio_i2c_slave_reset ; s#cx18_gpio_audio_input gpio_audio_input ; s#cx18_card_tuner tuners [ 2 ] ; s#cx18_card_tuner_i2c * i2c ; s#cx18_ddr ddr ; const s#cx18_card_pci_info * pci_list ; } 
s#cx18_mailbox struct cx18_mailbox { t#u32 request ; t#u32 ack ; t#u32 reserved [ 6 ] ; t#u32 cmd ; t#u32 args [ 6 ] ; t#u32 error ; } 
s#cx18_mdl_ack struct cx18_mdl_ack { t#u32 id ; t#u32 data_used ; } 
s#cx18_mdl_ent struct cx18_mdl_ent { t#u32 paddr ; t#u32 length ; } 
s#cx18_scb struct cx18_scb { t#u32 ipc_offset ; t#u32 reserved01 [ 7 ] ; t#u32 cpu_code_offset ; t#u32 reserved02 [ 3 ] ; t#u32 apu_code_offset ; t#u32 reserved03 [ 3 ] ; t#u32 hpu_code_offset ; t#u32 reserved04 [ 3 ] ; t#u32 ppu_code_offset ; t#u32 reserved05 [ 3 ] ; t#u32 cpu_state ; t#u32 reserved1 [ 7 ] ; t#u32 apu2cpu_mb_offset ; t#u32 apu2cpu_irq ; t#u32 cpu2apu_irq_ack ; t#u32 reserved2 [ 13 ] ; t#u32 hpu2cpu_mb_offset ; t#u32 hpu2cpu_irq ; t#u32 cpu2hpu_irq_ack ; t#u32 reserved3 [ 13 ] ; t#u32 ppu2cpu_mb_offset ; t#u32 ppu2cpu_irq ; t#u32 cpu2ppu_irq_ack ; t#u32 reserved4 [ 13 ] ; t#u32 epu2cpu_mb_offset ; t#u32 epu2cpu_irq ; t#u32 cpu2epu_irq_ack ; t#u32 reserved5 [ 13 ] ; t#u32 reserved6 [ 8 ] ; t#u32 apu_state ; t#u32 reserved11 [ 7 ] ; t#u32 cpu2apu_mb_offset ; t#u32 cpu2apu_irq ; t#u32 apu2cpu_irq_ack ; t#u32 reserved12 [ 13 ] ; t#u32 hpu2apu_mb_offset ; t#u32 hpu2apu_irq ; t#u32 apu2hpu_irq_ack ; t#u32 reserved13 [ 13 ] ; t#u32 ppu2apu_mb_offset ; t#u32 ppu2apu_irq ; t#u32 apu2ppu_irq_ack ; t#u32 reserved14 [ 13 ] ; t#u32 epu2apu_mb_offset ; t#u32 epu2apu_irq ; t#u32 apu2epu_irq_ack ; t#u32 reserved15 [ 13 ] ; t#u32 reserved16 [ 8 ] ; t#u32 hpu_state ; t#u32 reserved21 [ 7 ] ; t#u32 cpu2hpu_mb_offset ; t#u32 cpu2hpu_irq ; t#u32 hpu2cpu_irq_ack ; t#u32 reserved22 [ 13 ] ; t#u32 apu2hpu_mb_offset ; t#u32 apu2hpu_irq ; t#u32 hpu2apu_irq_ack ; t#u32 reserved23 [ 13 ] ; t#u32 ppu2hpu_mb_offset ; t#u32 ppu2hpu_irq ; t#u32 hpu2ppu_irq_ack ; t#u32 reserved24 [ 13 ] ; t#u32 epu2hpu_mb_offset ; t#u32 epu2hpu_irq ; t#u32 hpu2epu_irq_ack ; t#u32 reserved25 [ 13 ] ; t#u32 reserved26 [ 8 ] ; t#u32 ppu_state ; t#u32 reserved31 [ 7 ] ; t#u32 cpu2ppu_mb_offset ; t#u32 cpu2ppu_irq ; t#u32 ppu2cpu_irq_ack ; t#u32 reserved32 [ 13 ] ; t#u32 apu2ppu_mb_offset ; t#u32 apu2ppu_irq ; t#u32 ppu2apu_irq_ack ; t#u32 reserved33 [ 13 ] ; t#u32 hpu2ppu_mb_offset ; t#u32 hpu2ppu_irq ; t#u32 ppu2hpu_irq_ack ; t#u32 reserved34 [ 13 ] ; t#u32 epu2ppu_mb_offset ; t#u32 epu2ppu_irq ; t#u32 ppu2epu_irq_ack ; t#u32 reserved35 [ 13 ] ; t#u32 reserved36 [ 8 ] ; t#u32 epu_state ; t#u32 reserved41 [ 7 ] ; t#u32 cpu2epu_mb_offset ; t#u32 cpu2epu_irq ; t#u32 epu2cpu_irq_ack ; t#u32 reserved42 [ 13 ] ; t#u32 apu2epu_mb_offset ; t#u32 apu2epu_irq ; t#u32 epu2apu_irq_ack ; t#u32 reserved43 [ 13 ] ; t#u32 hpu2epu_mb_offset ; t#u32 hpu2epu_irq ; t#u32 epu2hpu_irq_ack ; t#u32 reserved44 [ 13 ] ; t#u32 ppu2epu_mb_offset ; t#u32 ppu2epu_irq ; t#u32 epu2ppu_irq_ack ; t#u32 reserved45 [ 13 ] ; t#u32 reserved46 [ 8 ] ; t#u32 semaphores [ 8 ] ; t#u32 reserved50 [ 32 ] ; s#cx18_mailbox apu2cpu_mb ; s#cx18_mailbox hpu2cpu_mb ; s#cx18_mailbox ppu2cpu_mb ; s#cx18_mailbox epu2cpu_mb ; s#cx18_mailbox cpu2apu_mb ; s#cx18_mailbox hpu2apu_mb ; s#cx18_mailbox ppu2apu_mb ; s#cx18_mailbox epu2apu_mb ; s#cx18_mailbox cpu2hpu_mb ; s#cx18_mailbox apu2hpu_mb ; s#cx18_mailbox ppu2hpu_mb ; s#cx18_mailbox epu2hpu_mb ; s#cx18_mailbox cpu2ppu_mb ; s#cx18_mailbox apu2ppu_mb ; s#cx18_mailbox hpu2ppu_mb ; s#cx18_mailbox epu2ppu_mb ; s#cx18_mailbox cpu2epu_mb ; s#cx18_mailbox apu2epu_mb ; s#cx18_mailbox hpu2epu_mb ; s#cx18_mailbox ppu2epu_mb ; s#cx18_mdl_ack cpu_mdl_ack [ 7 ] [ 2 ] ; s#cx18_mdl_ent cpu_mdl [ 1 ] ; } 
e#cx18_av_video_input enum cx18_av_video_input { CX18_AV_COMPOSITE1 = 1 , CX18_AV_COMPOSITE2 , CX18_AV_COMPOSITE3 , CX18_AV_COMPOSITE4 , CX18_AV_COMPOSITE5 , CX18_AV_COMPOSITE6 , CX18_AV_COMPOSITE7 , CX18_AV_COMPOSITE8 , CX18_AV_SVIDEO_LUMA1 = 0x10 , CX18_AV_SVIDEO_LUMA2 = 0x20 , CX18_AV_SVIDEO_LUMA3 = 0x30 , CX18_AV_SVIDEO_LUMA4 = 0x40 , CX18_AV_SVIDEO_LUMA5 = 0x50 , CX18_AV_SVIDEO_LUMA6 = 0x60 , CX18_AV_SVIDEO_LUMA7 = 0x70 , CX18_AV_SVIDEO_LUMA8 = 0x80 , CX18_AV_SVIDEO_CHROMA4 = 0x400 , CX18_AV_SVIDEO_CHROMA5 = 0x500 , CX18_AV_SVIDEO_CHROMA6 = 0x600 , CX18_AV_SVIDEO_CHROMA7 = 0x700 , CX18_AV_SVIDEO_CHROMA8 = 0x800 , CX18_AV_SVIDEO1 = 0x510 , CX18_AV_SVIDEO2 = 0x620 , CX18_AV_SVIDEO3 = 0x730 , CX18_AV_SVIDEO4 = 0x840 , CX18_AV_COMPONENT_LUMA1 = 0x1000 , CX18_AV_COMPONENT_LUMA2 = 0x2000 , CX18_AV_COMPONENT_LUMA3 = 0x3000 , CX18_AV_COMPONENT_LUMA4 = 0x4000 , CX18_AV_COMPONENT_LUMA5 = 0x5000 , CX18_AV_COMPONENT_LUMA6 = 0x6000 , CX18_AV_COMPONENT_LUMA7 = 0x7000 , CX18_AV_COMPONENT_LUMA8 = 0x8000 , CX18_AV_COMPONENT_R_CHROMA4 = 0x40000 , CX18_AV_COMPONENT_R_CHROMA5 = 0x50000 , CX18_AV_COMPONENT_R_CHROMA6 = 0x60000 , CX18_AV_COMPONENT_B_CHROMA7 = 0x700000 , CX18_AV_COMPONENT_B_CHROMA8 = 0x800000 , CX18_AV_COMPONENT1 = 0x861000 , } 
e#cx18_av_audio_input enum cx18_av_audio_input { CX18_AV_AUDIO_SERIAL1 , CX18_AV_AUDIO_SERIAL2 , CX18_AV_AUDIO4 = 4 , CX18_AV_AUDIO5 , CX18_AV_AUDIO6 , CX18_AV_AUDIO7 , CX18_AV_AUDIO8 , } 
s#cx18_av_state struct cx18_av_state { s#v4l2_subdev sd ; s#v4l2_ctrl_handler hdl ; s#v4l2_ctrl * volume ; int radio ; t#v4l2_std_id std ; e#cx18_av_video_input vid_input ; e#cx18_av_audio_input aud_input ; t#u32 audclk_freq ; int audmode ; t#u32 id ; t#u32 rev ; int is_initialized ; int slicer_line_delay ; int slicer_line_offset ; } 
e#cx2341x_port enum cx2341x_port { CX2341X_PORT_MEMORY = 0 , CX2341X_PORT_STREAMING = 1 , CX2341X_PORT_SERIAL = 2 } 
t#cx2341x_mbox_func typedef int ( * cx2341x_mbox_func ) ( void * , t#u32 , int , int , t#u32 [ 16 ] ) 
s#cx2341x_handler_ops struct cx2341x_handler_ops { int ( * s_audio_sampling_freq ) ( s#cx2341x_handler * , t#u32 ) ; int ( * s_audio_mode ) ( s#cx2341x_handler * , t#u32 ) ; int ( * s_video_encoding ) ( s#cx2341x_handler * , t#u32 ) ; int ( * s_stream_vbi_fmt ) ( s#cx2341x_handler * , t#u32 ) ; } 
s#cx2341x_handler struct cx2341x_handler { t#u32 capabilities ; e#cx2341x_port port ; t#u16 width ; t#u16 height ; t#u16 is_50hz ; t#u32 audio_properties ; s#v4l2_ctrl_handler hdl ; void * priv ; t#cx2341x_mbox_func func ; const s#cx2341x_handler_ops * ops ; s#v4l2_ctrl * stream_vbi_fmt ; struct { s#v4l2_ctrl * audio_sampling_freq ; s#v4l2_ctrl * audio_encoding ; s#v4l2_ctrl * audio_l2_bitrate ; s#v4l2_ctrl * audio_mode ; s#v4l2_ctrl * audio_mode_extension ; s#v4l2_ctrl * audio_emphasis ; s#v4l2_ctrl * audio_crc ; s#v4l2_ctrl * audio_ac3_bitrate ; } ; struct { s#v4l2_ctrl * video_b_frames ; s#v4l2_ctrl * video_gop_size ; } ; struct { s#v4l2_ctrl * stream_type ; s#v4l2_ctrl * video_encoding ; s#v4l2_ctrl * video_bitrate_mode ; s#v4l2_ctrl * video_bitrate ; s#v4l2_ctrl * video_bitrate_peak ; } ; struct { s#v4l2_ctrl * video_mute ; s#v4l2_ctrl * video_mute_yuv ; } ; struct { s#v4l2_ctrl * video_spatial_filter_mode ; s#v4l2_ctrl * video_temporal_filter_mode ; s#v4l2_ctrl * video_median_filter_type ; } ; struct { s#v4l2_ctrl * video_luma_spatial_filter_type ; s#v4l2_ctrl * video_chroma_spatial_filter_type ; } ; struct { s#v4l2_ctrl * video_spatial_filter ; s#v4l2_ctrl * video_temporal_filter ; } ; struct { s#v4l2_ctrl * video_luma_median_filter_top ; s#v4l2_ctrl * video_luma_median_filter_bottom ; s#v4l2_ctrl * video_chroma_median_filter_top ; s#v4l2_ctrl * video_chroma_median_filter_bottom ; } ; } 
s#cx18_options struct cx18_options { int megabytes [ 7 ] ; int cardtype ; int tuner ; int radio ; } 
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s#cx18_dvb struct cx18_dvb { s#cx18_stream * stream ; s#dmx_frontend hw_frontend ; s#dmx_frontend mem_frontend ; s#dmxdev dmxdev ; s#dvb_adapter dvb_adapter ; s#dvb_demux demux ; s#dvb_frontend * fe ; s#dvb_net dvbnet ; int enabled ; int feeding ; s#mutex feedlock ; } 
s#cx18_queue struct cx18_queue { s#list_head list ; t#atomic_t depth ; t#u32 bytesused ; t#spinlock_t lock ; } 
s#cx18_stream struct cx18_stream { s#video_device * video_dev ; s#cx18_dvb * dvb ; s#cx18 * cx ; const char * name ; int type ; t#u32 handle ; unsigned int mdl_base_idx ; t#u32 id ; unsigned long s_flags ; int dma ; t#wait_queue_head_t waitq ; s#list_head buf_pool ; t#u32 buffers ; t#u32 buf_size ; t#u32 bufs_per_mdl ; t#u32 mdl_size ; s#cx18_queue q_free ; s#cx18_queue q_busy ; s#cx18_queue q_full ; s#cx18_queue q_idle ; s#work_struct out_work_order ; t#u32 pixelformat ; s#list_head vb_capture ; t#spinlock_t vb_lock ; s#timer_list vb_timeout ; s#videobuf_queue vbuf_q ; t#spinlock_t vbuf_q_lock ; e#v4l2_buf_type vb_type ; } 
s##snd_cx18_card
s#cx18_buffer struct cx18_buffer { s#list_head list ; t#dma_addr_t dma_handle ; char * buf ; t#u32 bytesused ; t#u32 readpos ; } 
s#cx18_mdl struct cx18_mdl { s#list_head list ; t#u32 id ; unsigned int skipped ; unsigned long m_flags ; s#list_head buf_list ; s#cx18_buffer * curr_buf ; t#u32 bytesused ; t#u32 readpos ; } 
s#vbi_info struct vbi_info { s#v4l2_format in ; s#v4l2_sliced_vbi_format * sliced_in ; t#u32 count ; t#u32 start [ 2 ] ; t#u32 frame ; int insert_mpeg ; s#v4l2_sliced_vbi_data sliced_data [ 36 ] ; t#u8 * sliced_mpeg_data [ 32 ] ; t#u32 sliced_mpeg_size [ 32 ] ; t#u32 inserted_frame ; s#cx18_mdl sliced_mpeg_mdl ; s#cx18_buffer sliced_mpeg_buf ; } 
s##workqueue_struct
s#cx18_in_work_order struct cx18_in_work_order { s#work_struct work ; t#atomic_t pending ; s#cx18 * cx ; unsigned long flags ; int rpu ; s#cx18_mailbox mb ; s#cx18_mdl_ack mdl_ack [ 2 ] ; char * str ; } 
s#i2c_algo_bit_data struct i2c_algo_bit_data { void * data ; void ( * setsda ) ( void * , int ) ; void ( * setscl ) ( void * , int ) ; int ( * getsda ) ( void * ) ; int ( * getscl ) ( void * ) ; int ( * pre_xfer ) ( s#i2c_adapter * ) ; void ( * post_xfer ) ( s#i2c_adapter * ) ; int udelay ; int timeout ; } 
s#cx18_i2c_algo_callback_data struct cx18_i2c_algo_callback_data { s#cx18 * cx ; int bus_index ; } 
s##ir_raw_event_ctrl
s##input_mt_slot
s#IR_i2c struct IR_i2c { char * ir_codes ; s#i2c_client * c ; s#rc_dev * rc ; unsigned char old ; t#u32 polling_interval ; s#delayed_work work ; char name [ 32 ] ; char phys [ 32 ] ; int ( * get_key ) ( s#IR_i2c * , t#u32 * , t#u32 * ) ; } 
e#ir_kbd_get_key_fn enum ir_kbd_get_key_fn { IR_KBD_GET_KEY_CUSTOM = 0 , IR_KBD_GET_KEY_PIXELVIEW , IR_KBD_GET_KEY_HAUP , IR_KBD_GET_KEY_KNC1 , IR_KBD_GET_KEY_FUSIONHDTV , IR_KBD_GET_KEY_HAUP_XVR , IR_KBD_GET_KEY_AVERMEDIA_CARDBUS , } 
s#IR_i2c_init_data struct IR_i2c_init_data { char * ir_codes ; const char * name ; t#u64 type ; t#u32 polling_interval ; int ( * get_key ) ( s#IR_i2c * , t#u32 * , t#u32 * ) ; e#ir_kbd_get_key_fn internal_get_key_func ; s#rc_dev * rc_dev ; } 
s#cx18 struct cx18 { int instance ; s#pci_dev * pci_dev ; s#v4l2_device v4l2_dev ; s#v4l2_subdev * sd_av ; s#v4l2_subdev * sd_extmux ; const s#cx18_card * card ; const char * card_name ; const s#cx18_card_tuner_i2c * card_i2c ; t#u8 is_50hz ; t#u8 is_60hz ; t#u8 nof_inputs ; t#u8 nof_audio_inputs ; t#u32 v4l2_cap ; t#u32 hw_flags ; unsigned int free_mdl_idx ; s#cx18_scb * scb ; s#mutex epu2apu_mb_lock ; s#mutex epu2cpu_mb_lock ; s#cx18_av_state av_state ; s#cx2341x_handler cxhdl ; t#u32 filter_mode ; t#u32 temporal_strength ; t#u32 spatial_strength ; unsigned long dualwatch_jiffies ; t#u32 dualwatch_stereo_mode ; s#mutex serialize_lock ; s#cx18_options options ; int stream_buffers [ 7 ] ; int stream_buf_size [ 7 ] ; s#cx18_stream streams [ 7 ] ; s#snd_cx18_card * alsa ; void ( * pcm_announce_callback ) ( s#snd_cx18_card * , t#u8 * , t#size_t ) ; unsigned long i_flags ; t#atomic_t ana_capturing ; t#atomic_t tot_capturing ; int search_pack_header ; int open_id ; t#u32 base_addr ; t#u8 card_rev ; void * enc_mem , * reg_mem ; s#vbi_info vbi ; t#u64 mpg_data_received ; t#u64 vbi_data_inserted ; t#wait_queue_head_t mb_apu_waitq ; t#wait_queue_head_t mb_cpu_waitq ; t#wait_queue_head_t cap_w ; t#wait_queue_head_t dma_waitq ; t#u32 sw1_irq_mask ; t#u32 sw2_irq_mask ; t#u32 hw2_irq_mask ; s#workqueue_struct * in_work_queue ; char in_workq_name [ 11 ] ; s#cx18_in_work_order in_work_order [ ( 63 + 7 ) ] ; char epu_debug_str [ 256 ] ; s#i2c_adapter i2c_adap [ 2 ] ; s#i2c_algo_bit_data i2c_algo [ 2 ] ; s#cx18_i2c_algo_callback_data i2c_algo_cb_data [ 2 ] ; s#IR_i2c_init_data ir_i2c_init_data ; t#u32 gpio_dir ; t#u32 gpio_val ; s#mutex gpio_lock ; s#v4l2_subdev sd_gpiomux ; s#v4l2_subdev sd_resetctrl ; t#u32 audio_input ; t#u32 active_input ; t#v4l2_std_id std ; t#v4l2_std_id tuner_std ; s#work_struct request_module_wk ; } 
cx18_ext_init extern int ( * cx18_ext_init ) ( s#cx18 * ) 

/* drivers/media/video/cx18/cx18-fileops.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_events
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##snd_cx18_card
s##workqueue_struct
s##ir_raw_event_ctrl
s##input_mt_slot
s#cx18_open_id struct cx18_open_id { s#v4l2_fh fh ; t#u32 open_id ; int type ; s#cx18 * cx ; s#videobuf_queue vbuf_q ; t#spinlock_t s_lock ; e#v4l2_buf_type vb_type ; } 
cx18_claim_stream int cx18_claim_stream ( s#cx18_open_id * , int ) 
cx18_release_stream void cx18_release_stream ( s#cx18_stream * ) 

/* drivers/media/video/cx18/cx18-gpio.o */
cx18_reset_ir_gpio void cx18_reset_ir_gpio ( void * ) 

/* drivers/media/video/cx18/cx18-streams.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_events
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##snd_cx18_card
s##workqueue_struct
s##ir_raw_event_ctrl
s##input_mt_slot
cx18_start_v4l2_encode_stream int cx18_start_v4l2_encode_stream ( s#cx18_stream * ) 
cx18_stop_v4l2_encode_stream int cx18_stop_v4l2_encode_stream ( s#cx18_stream * , int ) 

/* drivers/media/video/cx231xx/cx231xx-avcore.o */
s#cx231xx_reg_seq struct cx231xx_reg_seq { unsigned char bit ; unsigned char val ; int sleep ; } 
e#cx231xx_decoder enum cx231xx_decoder { CX231XX_NODECODER , CX231XX_AVDECODER } 
e#cx231xx_itype enum cx231xx_itype { CX231XX_VMUX_COMPOSITE1 = 1 , CX231XX_VMUX_SVIDEO , CX231XX_VMUX_TELEVISION , CX231XX_VMUX_CABLE , CX231XX_RADIO , CX231XX_VMUX_DVB , CX231XX_VMUX_DEBUG } 
e#cx231xx_amux enum cx231xx_amux { CX231XX_AMUX_VIDEO , CX231XX_AMUX_LINE_IN , } 
s#cx231xx_input struct cx231xx_input { e#cx231xx_itype type ; unsigned int vmux ; e#cx231xx_amux amux ; s#cx231xx_reg_seq * gpio ; } 
s#cx231xx_board struct cx231xx_board { char * name ; int vchannels ; int tuner_type ; int tuner_addr ; t#v4l2_std_id norm ; int demod_addr ; t#u8 demod_xfer_mode ; s#cx231xx_reg_seq * dvb_gpio ; s#cx231xx_reg_seq * suspend_gpio ; s#cx231xx_reg_seq * tuner_gpio ; t#s8 tuner_sif_gpio ; t#s8 tuner_scl_gpio ; t#s8 tuner_sda_gpio ; t#u32 ctl_pin_status_mask ; t#u8 agc_analog_digital_select_gpio ; t#u32 gpio_pin_status_mask ; t#u8 tuner_i2c_master ; t#u8 demod_i2c_master ; t#u8 ir_i2c_master ; char * rc_map_name ; unsigned int max_range_640_480 : 1 ; unsigned int has_dvb : 1 ; unsigned int has_417 : 1 ; unsigned int valid : 1 ; unsigned int no_alt_vanc : 1 ; unsigned int external_av : 1 ; unsigned int dont_use_port_3 : 1 ; unsigned char xclk , i2c_speed ; e#cx231xx_decoder decoder ; int output_mode ; s#cx231xx_input input [ 4 ] ; s#cx231xx_input radio ; s#rc_map * ir_codes ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ir_raw_event_ctrl
s##input_mt_slot
s#cx231xx_fmt struct cx231xx_fmt { char * name ; t#u32 fourcc ; int depth ; int reg ; } 
s##v4l2_events
s#cx231xx_i2c struct cx231xx_i2c { s#cx231xx * dev ; int nr ; s#i2c_adapter i2c_adap ; s#i2c_algo_bit_data i2c_algo ; s#i2c_client i2c_client ; t#u32 i2c_rc ; t#u8 i2c_period ; t#u8 i2c_nostop ; t#u8 i2c_reserve ; } 
s##usb_tt
s##ep_device
s##wusb_dev
s##snd_pcm_substream
s##snd_card
s#cx231xx_audio struct cx231xx_audio { char name [ 50 ] ; char * transfer_buffer [ 5 ] ; s#urb * urb [ 5 ] ; s#usb_device * udev ; unsigned int capture_transfer_done ; s#snd_pcm_substream * capture_pcm_substream ; unsigned int hwptr_done_capture ; s#snd_card * sndcard ; int users , shutdown ; t#spinlock_t slock ; int alt ; int max_pkt_size ; int num_alt ; unsigned int * alt_max_pkt_size ; t#u16 end_point_addr ; } 
e#cx231xx_dev_state enum cx231xx_dev_state { DEV_INITIALIZED = 0x01 , DEV_DISCONNECTED = 0x02 , DEV_MISCONFIGURED = 0x04 , } 
e#ps_package_head enum ps_package_head { CX231XX_NEED_ADD_PS_PACKAGE_HEAD = 0 , CX231XX_NONEED_PS_PACKAGE_HEAD } 
s#cx231xx_dmaqueue struct cx231xx_dmaqueue { s#list_head active ; s#list_head queued ; t#wait_queue_head_t wq ; int pos ; t#u8 is_partial_line ; t#u8 partial_buf [ 8 ] ; t#u8 last_sav ; int current_field ; t#u32 bytes_left_in_line ; t#u32 lines_completed ; t#u8 field1_done ; t#u32 lines_per_field ; t#u8 * p_left_data ; t#u32 left_data_count ; t#u8 mpeg_buffer_done ; t#u32 mpeg_buffer_completed ; e#ps_package_head add_ps_package_head ; char ps_head [ 10 ] ; } 
s#cx231xx_buffer struct cx231xx_buffer { s#videobuf_buffer vb ; s#list_head frame ; int top_field ; int receiving ; } 
s#cx231xx_isoc_ctl struct cx231xx_isoc_ctl { int max_pkt_size ; int num_bufs ; s#urb * * urb ; char * * transfer_buffer ; t#u8 cmd ; int pos , size , pktsize ; int field ; t#u32 tmp_buf ; int tmp_buf_len ; s#cx231xx_buffer * buf ; int nfields ; int ( * isoc_copy ) ( s#cx231xx * , s#urb * ) ; } 
s#cx231xx_bulk_ctl struct cx231xx_bulk_ctl { int max_pkt_size ; int num_bufs ; s#urb * * urb ; char * * transfer_buffer ; t#u8 cmd ; int pos , size , pktsize ; int field ; t#u32 tmp_buf ; int tmp_buf_len ; s#cx231xx_buffer * buf ; int nfields ; int ( * bulk_copy ) ( s#cx231xx * , s#urb * ) ; } 
s#cx231xx_video_mode struct cx231xx_video_mode { s#cx231xx_dmaqueue vidq ; s#cx231xx_isoc_ctl isoc_ctl ; s#cx231xx_bulk_ctl bulk_ctl ; t#spinlock_t slock ; int alt ; int max_pkt_size ; int num_alt ; unsigned int * alt_max_pkt_size ; t#u16 end_point_addr ; } 
s#cx231xx_i2c_xfer_data struct cx231xx_i2c_xfer_data { t#u8 dev_addr ; t#u8 direction ; t#u8 saddr_len ; t#u16 saddr_dat ; t#u8 buf_size ; t#u8 * p_buffer ; } 
e#cx231xx_mode enum cx231xx_mode { CX231XX_SUSPEND , CX231XX_ANALOG_MODE , CX231XX_DIGITAL_MODE , } 
s##cx231xx_dvb
s#INTERFACE_INFO struct INTERFACE_INFO { t#u8 interrupt_index ; t#u8 ts1_index ; t#u8 ts2_index ; t#u8 audio_index ; t#u8 video_index ; t#u8 vanc_index ; t#u8 hanc_index ; t#u8 ir_index ; } 
s#CONFIG_INFO struct CONFIG_INFO { t#u8 config_index ; s#INTERFACE_INFO interface_info ; } 
s#pcb_config struct pcb_config { t#u8 index ; t#u8 type ; t#u8 speed ; t#u8 mode ; t#u32 ts1_source ; t#u32 ts2_source ; t#u32 analog_source ; t#u8 digital_index ; t#u8 analog_index ; t#u8 dif_index ; t#u8 external_index ; t#u8 config_num ; s#CONFIG_INFO hs_config_info [ 3 ] ; s#CONFIG_INFO fs_config_info [ 3 ] ; } 
e#AFE_MODE enum AFE_MODE { AFE_MODE_LOW_IF , AFE_MODE_BASEBAND , AFE_MODE_EU_HI_IF , AFE_MODE_US_HI_IF , AFE_MODE_JAPAN_HI_IF } 
e#cx231xx_std_mode enum cx231xx_std_mode { CX231XX_TV_AIR = 0 , CX231XX_TV_CABLE } 
s#cx231xx_tvnorm struct cx231xx_tvnorm { char * name ; t#v4l2_std_id id ; t#u32 cxiformat ; t#u32 cxoformat ; } 
s#videobuf_dvb_frontends struct videobuf_dvb_frontends { s#list_head felist ; s#mutex lock ; s#dvb_adapter adapter ; int active_fe_id ; int gate ; } 
s#cx231xx_tsport struct cx231xx_tsport { s#cx231xx * dev ; int nr ; int sram_chno ; s#videobuf_dvb_frontends frontends ; t#u32 ts_packet_size ; t#u32 ts_packet_count ; int width ; int height ; t#spinlock_t slock ; t#u32 reg_gpcnt ; t#u32 reg_gpcnt_ctl ; t#u32 reg_dma_ctl ; t#u32 reg_lngth ; t#u32 reg_hw_sop_ctrl ; t#u32 reg_gen_ctrl ; t#u32 reg_bd_pkt_status ; t#u32 reg_sop_status ; t#u32 reg_fifo_ovfl_stat ; t#u32 reg_vld_misc ; t#u32 reg_ts_clk_en ; t#u32 reg_ts_int_msk ; t#u32 reg_ts_int_stat ; t#u32 reg_src_sel ; int pci_irqmask ; t#u32 dma_ctl_val ; t#u32 ts_int_msk_val ; t#u32 gen_ctrl_val ; t#u32 ts_clk_en_val ; t#u32 src_sel_val ; t#u32 vld_misc_val ; t#u32 hw_sop_ctrl_val ; t#u32 num_frontends ; void * port_priv ; } 
e#v4l2_mpeg_stream_type enum v4l2_mpeg_stream_type { V4L2_MPEG_STREAM_TYPE_MPEG2_PS = 0 , V4L2_MPEG_STREAM_TYPE_MPEG2_TS = 1 , V4L2_MPEG_STREAM_TYPE_MPEG1_SS = 2 , V4L2_MPEG_STREAM_TYPE_MPEG2_DVD = 3 , V4L2_MPEG_STREAM_TYPE_MPEG1_VCD = 4 , V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD = 5 , } 
e#v4l2_mpeg_stream_vbi_fmt enum v4l2_mpeg_stream_vbi_fmt { V4L2_MPEG_STREAM_VBI_FMT_NONE = 0 , V4L2_MPEG_STREAM_VBI_FMT_IVTV = 1 , } 
e#v4l2_mpeg_audio_sampling_freq enum v4l2_mpeg_audio_sampling_freq { V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100 = 0 , V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000 = 1 , V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000 = 2 , } 
e#v4l2_mpeg_audio_encoding enum v4l2_mpeg_audio_encoding { V4L2_MPEG_AUDIO_ENCODING_LAYER_1 = 0 , V4L2_MPEG_AUDIO_ENCODING_LAYER_2 = 1 , V4L2_MPEG_AUDIO_ENCODING_LAYER_3 = 2 , V4L2_MPEG_AUDIO_ENCODING_AAC = 3 , V4L2_MPEG_AUDIO_ENCODING_AC3 = 4 , } 
e#v4l2_mpeg_audio_l2_bitrate enum v4l2_mpeg_audio_l2_bitrate { V4L2_MPEG_AUDIO_L2_BITRATE_32K = 0 , V4L2_MPEG_AUDIO_L2_BITRATE_48K = 1 , V4L2_MPEG_AUDIO_L2_BITRATE_56K = 2 , V4L2_MPEG_AUDIO_L2_BITRATE_64K = 3 , V4L2_MPEG_AUDIO_L2_BITRATE_80K = 4 , V4L2_MPEG_AUDIO_L2_BITRATE_96K = 5 , V4L2_MPEG_AUDIO_L2_BITRATE_112K = 6 , V4L2_MPEG_AUDIO_L2_BITRATE_128K = 7 , V4L2_MPEG_AUDIO_L2_BITRATE_160K = 8 , V4L2_MPEG_AUDIO_L2_BITRATE_192K = 9 , V4L2_MPEG_AUDIO_L2_BITRATE_224K = 10 , V4L2_MPEG_AUDIO_L2_BITRATE_256K = 11 , V4L2_MPEG_AUDIO_L2_BITRATE_320K = 12 , V4L2_MPEG_AUDIO_L2_BITRATE_384K = 13 , } 
e#v4l2_mpeg_audio_ac3_bitrate enum v4l2_mpeg_audio_ac3_bitrate { V4L2_MPEG_AUDIO_AC3_BITRATE_32K = 0 , V4L2_MPEG_AUDIO_AC3_BITRATE_40K = 1 , V4L2_MPEG_AUDIO_AC3_BITRATE_48K = 2 , V4L2_MPEG_AUDIO_AC3_BITRATE_56K = 3 , V4L2_MPEG_AUDIO_AC3_BITRATE_64K = 4 , V4L2_MPEG_AUDIO_AC3_BITRATE_80K = 5 , V4L2_MPEG_AUDIO_AC3_BITRATE_96K = 6 , V4L2_MPEG_AUDIO_AC3_BITRATE_112K = 7 , V4L2_MPEG_AUDIO_AC3_BITRATE_128K = 8 , V4L2_MPEG_AUDIO_AC3_BITRATE_160K = 9 , V4L2_MPEG_AUDIO_AC3_BITRATE_192K = 10 , V4L2_MPEG_AUDIO_AC3_BITRATE_224K = 11 , V4L2_MPEG_AUDIO_AC3_BITRATE_256K = 12 , V4L2_MPEG_AUDIO_AC3_BITRATE_320K = 13 , V4L2_MPEG_AUDIO_AC3_BITRATE_384K = 14 , V4L2_MPEG_AUDIO_AC3_BITRATE_448K = 15 , V4L2_MPEG_AUDIO_AC3_BITRATE_512K = 16 , V4L2_MPEG_AUDIO_AC3_BITRATE_576K = 17 , V4L2_MPEG_AUDIO_AC3_BITRATE_640K = 18 , } 
e#v4l2_mpeg_audio_mode enum v4l2_mpeg_audio_mode { V4L2_MPEG_AUDIO_MODE_STEREO = 0 , V4L2_MPEG_AUDIO_MODE_JOINT_STEREO = 1 , V4L2_MPEG_AUDIO_MODE_DUAL = 2 , V4L2_MPEG_AUDIO_MODE_MONO = 3 , } 
e#v4l2_mpeg_audio_mode_extension enum v4l2_mpeg_audio_mode_extension { V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4 = 0 , V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8 = 1 , V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12 = 2 , V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16 = 3 , } 
e#v4l2_mpeg_audio_emphasis enum v4l2_mpeg_audio_emphasis { V4L2_MPEG_AUDIO_EMPHASIS_NONE = 0 , V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS = 1 , V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17 = 2 , } 
e#v4l2_mpeg_audio_crc enum v4l2_mpeg_audio_crc { V4L2_MPEG_AUDIO_CRC_NONE = 0 , V4L2_MPEG_AUDIO_CRC_CRC16 = 1 , } 
e#v4l2_mpeg_video_encoding enum v4l2_mpeg_video_encoding { V4L2_MPEG_VIDEO_ENCODING_MPEG_1 = 0 , V4L2_MPEG_VIDEO_ENCODING_MPEG_2 = 1 , V4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC = 2 , } 
e#v4l2_mpeg_video_aspect enum v4l2_mpeg_video_aspect { V4L2_MPEG_VIDEO_ASPECT_1x1 = 0 , V4L2_MPEG_VIDEO_ASPECT_4x3 = 1 , V4L2_MPEG_VIDEO_ASPECT_16x9 = 2 , V4L2_MPEG_VIDEO_ASPECT_221x100 = 3 , } 
e#v4l2_mpeg_video_bitrate_mode enum v4l2_mpeg_video_bitrate_mode { V4L2_MPEG_VIDEO_BITRATE_MODE_VBR = 0 , V4L2_MPEG_VIDEO_BITRATE_MODE_CBR = 1 , } 
e#v4l2_mpeg_cx2341x_video_spatial_filter_mode enum v4l2_mpeg_cx2341x_video_spatial_filter_mode { V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL = 0 , V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO = 1 , } 
e#v4l2_mpeg_cx2341x_video_luma_spatial_filter_type enum v4l2_mpeg_cx2341x_video_luma_spatial_filter_type { V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF = 0 , V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR = 1 , V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT = 2 , V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE = 3 , V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE = 4 , } 
e#v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type enum v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type { V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF = 0 , V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR = 1 , } 
e#v4l2_mpeg_cx2341x_video_temporal_filter_mode enum v4l2_mpeg_cx2341x_video_temporal_filter_mode { V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL = 0 , V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO = 1 , } 
e#v4l2_mpeg_cx2341x_video_median_filter_type enum v4l2_mpeg_cx2341x_video_median_filter_type { V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF = 0 , V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR = 1 , V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT = 2 , V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT = 3 , V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG = 4 , } 
s#cx2341x_mpeg_params struct cx2341x_mpeg_params { t#u32 capabilities ; e#cx2341x_port port ; t#u16 width ; t#u16 height ; t#u16 is_50hz ; e#v4l2_mpeg_stream_type stream_type ; e#v4l2_mpeg_stream_vbi_fmt stream_vbi_fmt ; t#u16 stream_insert_nav_packets ; e#v4l2_mpeg_audio_sampling_freq audio_sampling_freq ; e#v4l2_mpeg_audio_encoding audio_encoding ; e#v4l2_mpeg_audio_l2_bitrate audio_l2_bitrate ; e#v4l2_mpeg_audio_ac3_bitrate audio_ac3_bitrate ; e#v4l2_mpeg_audio_mode audio_mode ; e#v4l2_mpeg_audio_mode_extension audio_mode_extension ; e#v4l2_mpeg_audio_emphasis audio_emphasis ; e#v4l2_mpeg_audio_crc audio_crc ; t#u32 audio_properties ; t#u16 audio_mute ; e#v4l2_mpeg_video_encoding video_encoding ; e#v4l2_mpeg_video_aspect video_aspect ; t#u16 video_b_frames ; t#u16 video_gop_size ; t#u16 video_gop_closure ; e#v4l2_mpeg_video_bitrate_mode video_bitrate_mode ; t#u32 video_bitrate ; t#u32 video_bitrate_peak ; t#u16 video_temporal_decimation ; t#u16 video_mute ; t#u32 video_mute_yuv ; e#v4l2_mpeg_cx2341x_video_spatial_filter_mode video_spatial_filter_mode ; t#u16 video_spatial_filter ; e#v4l2_mpeg_cx2341x_video_luma_spatial_filter_type video_luma_spatial_filter_type ; e#v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type video_chroma_spatial_filter_type ; e#v4l2_mpeg_cx2341x_video_temporal_filter_mode video_temporal_filter_mode ; t#u16 video_temporal_filter ; e#v4l2_mpeg_cx2341x_video_median_filter_type video_median_filter_type ; t#u16 video_luma_median_filter_top ; t#u16 video_luma_median_filter_bottom ; t#u16 video_chroma_median_filter_top ; t#u16 video_chroma_median_filter_bottom ; } 
s#cx231xx struct cx231xx { char name [ 30 ] ; int model ; int devno ; s#cx231xx_board board ; s#IR_i2c_init_data init_data ; unsigned int stream_on : 1 ; unsigned int vbi_stream_on : 1 ; unsigned int has_audio_class : 1 ; unsigned int has_alsa_audio : 1 ; s#cx231xx_fmt * format ; s#v4l2_device v4l2_dev ; s#v4l2_subdev * sd_cx25840 ; s#v4l2_subdev * sd_tuner ; s#work_struct wq_trigger ; t#atomic_t stream_started ; s#list_head devlist ; int tuner_type ; int tuner_addr ; s#cx231xx_i2c i2c_bus [ 3 ] ; unsigned int xc_fw_load_done : 1 ; s#mutex gpio_i2c_lock ; s#mutex i2c_lock ; int users ; s#video_device * vdev ; t#v4l2_std_id norm ; int ctl_freq ; unsigned int ctl_ainput ; int mute ; int volume ; int width ; int height ; int interlaced ; s#cx231xx_audio adev ; e#cx231xx_dev_state state ; s#work_struct request_module_wk ; s#mutex lock ; s#mutex ctrl_urb_lock ; s#list_head inqueue , outqueue ; t#wait_queue_head_t open , wait_frame , wait_stream ; s#video_device * vbi_dev ; s#video_device * radio_dev ; unsigned char eedata [ 256 ] ; s#cx231xx_video_mode video_mode ; s#cx231xx_video_mode vbi_mode ; s#cx231xx_video_mode sliced_cc_mode ; s#cx231xx_video_mode ts1_mode ; t#atomic_t devlist_count ; s#usb_device * udev ; char urb_buf [ 80 ] ; int ( * cx231xx_read_ctrl_reg ) ( s#cx231xx * , t#u8 , t#u16 , char * , int ) ; int ( * cx231xx_write_ctrl_reg ) ( s#cx231xx * , t#u8 , t#u16 , char * , int ) ; int ( * cx231xx_send_usb_command ) ( s#cx231xx_i2c * , s#cx231xx_i2c_xfer_data * ) ; int ( * cx231xx_gpio_i2c_read ) ( s#cx231xx * , t#u8 , t#u8 * , t#u8 ) ; int ( * cx231xx_gpio_i2c_write ) ( s#cx231xx * , t#u8 , t#u8 * , t#u8 ) ; int ( * cx231xx_set_analog_freq ) ( s#cx231xx * , t#u32 ) ; int ( * cx231xx_reset_analog_tuner ) ( s#cx231xx * ) ; e#cx231xx_mode mode ; s#cx231xx_dvb * dvb ; s#pcb_config current_pcb_config ; t#u8 current_scenario_idx ; t#u8 interface_count ; t#u8 max_iad_interface_count ; t#u32 gpio_dir ; t#u32 gpio_val ; int power_mode ; e#AFE_MODE afe_mode ; t#u32 afe_ref_count ; t#u32 video_input ; t#u32 active_mode ; t#u8 vbi_or_sliced_cc_mode ; e#cx231xx_std_mode std_mode ; t#u8 mode_tv ; t#u8 USE_ISO ; s#cx231xx_tvnorm encodernorm ; s#cx231xx_tsport ts1 , ts2 ; s#cx2341x_mpeg_params mpeg_params ; s#video_device * v4l_device ; t#atomic_t v4l_reader_count ; t#u32 freq ; unsigned int input ; t#u32 cx23417_mailbox ; t#u32 * lmmio ; t#u8 * bmmio ; } 
cx231xx_enable656 void cx231xx_enable656 ( s#cx231xx * ) 
cx231xx_disable656 void cx231xx_disable656 ( s#cx231xx * ) 
cx231xx_unmute_audio int cx231xx_unmute_audio ( s#cx231xx * ) 
cx231xx_enable_i2c_port_3 int cx231xx_enable_i2c_port_3 ( s#cx231xx * , t#bool ) 
cx231xx_capture_start int cx231xx_capture_start ( s#cx231xx * , int , t#u8 ) 

/* drivers/media/video/cx231xx/cx231xx-cards.o */
cx231xx_tuner_callback int cx231xx_tuner_callback ( void * , int , int , int ) 

/* drivers/media/video/cx231xx/cx231xx-core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ir_raw_event_ctrl
s##input_mt_slot
s##v4l2_ioctl_ops
s##v4l2_events
s##usb_tt
s##ep_device
s##wusb_dev
s##snd_pcm_substream
s##snd_card
s##cx231xx_dvb
s#cx231xx_ops struct cx231xx_ops { s#list_head next ; char * name ; int id ; int ( * init ) ( s#cx231xx * ) ; int ( * fini ) ( s#cx231xx * ) ; } 
cx231xx_register_extension int cx231xx_register_extension ( s#cx231xx_ops * ) 
cx231xx_unregister_extension void cx231xx_unregister_extension ( s#cx231xx_ops * ) 
cx231xx_send_usb_command int cx231xx_send_usb_command ( s#cx231xx_i2c * , s#cx231xx_i2c_xfer_data * ) 
cx231xx_set_alt_setting int cx231xx_set_alt_setting ( s#cx231xx * , t#u8 , t#u8 ) 
cx231xx_demod_reset int cx231xx_demod_reset ( s#cx231xx * ) 
is_fw_load int is_fw_load ( s#cx231xx * ) 
cx231xx_set_mode int cx231xx_set_mode ( s#cx231xx * , e#cx231xx_mode ) 
cx231xx_uninit_isoc void cx231xx_uninit_isoc ( s#cx231xx * ) 
cx231xx_uninit_bulk void cx231xx_uninit_bulk ( s#cx231xx * ) 
cx231xx_init_isoc int cx231xx_init_isoc ( s#cx231xx * , int , int , int , int ( * ) ( s#cx231xx * , s#urb * ) ) 
cx231xx_init_bulk int cx231xx_init_bulk ( s#cx231xx * , int , int , int , int ( * ) ( s#cx231xx * , s#urb * ) ) 
cx231xx_dev_init int cx231xx_dev_init ( s#cx231xx * ) 
cx231xx_dev_uninit void cx231xx_dev_uninit ( s#cx231xx * ) 
cx231xx_send_gpio_cmd int cx231xx_send_gpio_cmd ( s#cx231xx * , t#u32 , t#u8 * , t#u8 , t#u8 , t#u8 ) 

/* drivers/media/video/cx231xx/cx231xx-vbi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ir_raw_event_ctrl
s##input_mt_slot
s##v4l2_events
s##usb_tt
s##ep_device
s##wusb_dev
s##snd_pcm_substream
s##snd_card
s##cx231xx_dvb
cx231xx_uninit_vbi_isoc void cx231xx_uninit_vbi_isoc ( s#cx231xx * ) 
cx231xx_init_vbi_isoc int cx231xx_init_vbi_isoc ( s#cx231xx * , int , int , int , int ( * ) ( s#cx231xx * , s#urb * ) ) 

/* drivers/media/video/cx2341x.o */
cx2341x_mpeg_ctrls extern const t#u32 cx2341x_mpeg_ctrls [ ] 
cx2341x_ctrl_query int cx2341x_ctrl_query ( const s#cx2341x_mpeg_params * , s#v4l2_queryctrl * ) 
cx2341x_ctrl_get_menu const char * const * cx2341x_ctrl_get_menu ( const s#cx2341x_mpeg_params * , t#u32 ) 
cx2341x_ext_ctrls int cx2341x_ext_ctrls ( s#cx2341x_mpeg_params * , int , s#v4l2_ext_controls * , unsigned int ) 
cx2341x_fill_defaults void cx2341x_fill_defaults ( s#cx2341x_mpeg_params * ) 
cx2341x_update int cx2341x_update ( void * , t#cx2341x_mbox_func , const s#cx2341x_mpeg_params * , const s#cx2341x_mpeg_params * ) 
cx2341x_log_status void cx2341x_log_status ( const s#cx2341x_mpeg_params * , const char * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cx2341x_handler_init int cx2341x_handler_init ( s#cx2341x_handler * , unsigned ) 
cx2341x_handler_set_50hz void cx2341x_handler_set_50hz ( s#cx2341x_handler * , int ) 
cx2341x_handler_setup int cx2341x_handler_setup ( s#cx2341x_handler * ) 
cx2341x_handler_set_busy void cx2341x_handler_set_busy ( s#cx2341x_handler * , int ) 

/* drivers/media/video/cx23885/altera-ci.o */
altera_ci_irq extern int altera_ci_irq ( void * ) 
altera_hw_filt_release void altera_hw_filt_release ( void * , int ) 
altera_ci_release extern void altera_ci_release ( void * , int ) 
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
altera_pid_feed_control int altera_pid_feed_control ( void * , int , s#dvb_demux_feed * , int ) 
s#altera_ci_config struct altera_ci_config { void * dev ; void * adapter ; s#dvb_demux * demux ; int ( * fpga_rw ) ( void * , int , int , int ) ; } 
altera_hw_filt_init int altera_hw_filt_init ( s#altera_ci_config * , int ) 
altera_ci_init extern int altera_ci_init ( s#altera_ci_config * , int ) 
altera_ci_tuner_reset extern int altera_ci_tuner_reset ( void * , int ) 

/* drivers/media/video/em28xx/em28xx-cards.o */
em28xx_tuner_callback int em28xx_tuner_callback ( void * , int , int , int ) 

/* drivers/media/video/em28xx/em28xx-core.o */
e#em28xx_chip_id enum em28xx_chip_id { CHIP_ID_EM2800 = 7 , CHIP_ID_EM2710 = 17 , CHIP_ID_EM2820 = 18 , CHIP_ID_EM2840 = 20 , CHIP_ID_EM2750 = 33 , CHIP_ID_EM2860 = 34 , CHIP_ID_EM2870 = 35 , CHIP_ID_EM2883 = 36 , CHIP_ID_EM2874 = 65 , CHIP_ID_EM28174 = 113 , } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s##v4l2_events
s##tuner_setup
s#em28xx_reg_seq struct em28xx_reg_seq { int reg ; unsigned char val , mask ; int sleep ; } 
e#em28xx_decoder enum em28xx_decoder { EM28XX_NODECODER = 0 , EM28XX_TVP5150 , EM28XX_SAA711X , } 
e#em28xx_adecoder enum em28xx_adecoder { EM28XX_NOADECODER = 0 , EM28XX_TVAUDIO , } 
e#enum28xx_itype enum enum28xx_itype { EM28XX_VMUX_COMPOSITE1 = 1 , EM28XX_VMUX_COMPOSITE2 , EM28XX_VMUX_COMPOSITE3 , EM28XX_VMUX_COMPOSITE4 , EM28XX_VMUX_SVIDEO , EM28XX_VMUX_TELEVISION , EM28XX_VMUX_CABLE , EM28XX_VMUX_DVB , EM28XX_VMUX_DEBUG , EM28XX_RADIO , } 
e#em28xx_amux enum em28xx_amux { EM28XX_AMUX_VIDEO , EM28XX_AMUX_LINE_IN , EM28XX_AMUX_VIDEO2 , EM28XX_AMUX_PHONE , EM28XX_AMUX_MIC , EM28XX_AMUX_CD , EM28XX_AMUX_AUX , EM28XX_AMUX_PCM_OUT , } 
e#em28xx_aout enum em28xx_aout { EM28XX_AOUT_MASTER = 1 << 0 , EM28XX_AOUT_LINE = 1 << 1 , EM28XX_AOUT_MONO = 1 << 2 , EM28XX_AOUT_LFE = 1 << 3 , EM28XX_AOUT_SURR = 1 << 4 , EM28XX_AOUT_PCM_IN = 1 << 7 , EM28XX_AOUT_PCM_MIC_PCM = 0 << 8 , EM28XX_AOUT_PCM_CD = 1 << 8 , EM28XX_AOUT_PCM_VIDEO = 2 << 8 , EM28XX_AOUT_PCM_AUX = 3 << 8 , EM28XX_AOUT_PCM_LINE = 4 << 8 , EM28XX_AOUT_PCM_STEREO = 5 << 8 , EM28XX_AOUT_PCM_MONO = 6 << 8 , EM28XX_AOUT_PCM_PHONE = 7 << 8 , } 
s#em28xx_input struct em28xx_input { e#enum28xx_itype type ; unsigned int vmux ; e#em28xx_amux amux ; e#em28xx_aout aout ; s#em28xx_reg_seq * gpio ; } 
s#em28xx_board struct em28xx_board { char * name ; int vchannels ; int tuner_type ; int tuner_addr ; unsigned int tda9887_conf ; s#em28xx_reg_seq * dvb_gpio ; s#em28xx_reg_seq * suspend_gpio ; s#em28xx_reg_seq * tuner_gpio ; s#em28xx_reg_seq * mute_gpio ; unsigned int is_em2800 : 1 ; unsigned int has_msp34xx : 1 ; unsigned int mts_firmware : 1 ; unsigned int max_range_640_480 : 1 ; unsigned int has_dvb : 1 ; unsigned int has_snapshot_button : 1 ; unsigned int is_webcam : 1 ; unsigned int valid : 1 ; unsigned int has_ir_i2c : 1 ; unsigned char xclk , i2c_speed ; unsigned char radio_addr ; unsigned short tvaudio_addr ; e#em28xx_decoder decoder ; e#em28xx_adecoder adecoder ; s#em28xx_input input [ 4 ] ; s#em28xx_input radio ; char * ir_codes ; } 
e#em28xx_sensor enum em28xx_sensor { EM28XX_NOSENSOR = 0 , EM28XX_MT9V011 , EM28XX_MT9M001 , EM28XX_MT9M111 , } 
s#em28xx_fmt struct em28xx_fmt { char * name ; t#u32 fourcc ; int depth ; int reg ; } 
s##em28xx_IR
e#em28xx_ac97_mode enum em28xx_ac97_mode { EM28XX_NO_AC97 = 0 , EM28XX_AC97_EM202 , EM28XX_AC97_SIGMATEL , EM28XX_AC97_OTHER , } 
s#em28xx_audio_mode struct em28xx_audio_mode { e#em28xx_ac97_mode ac97 ; t#u16 ac97_feat ; t#u32 ac97_vendor_id ; unsigned int has_audio : 1 ; unsigned int i2s_3rates : 1 ; unsigned int i2s_5rates : 1 ; } 
s##usb_tt
s##ep_device
s##wusb_dev
s##snd_pcm_substream
s##snd_card
s#em28xx_audio struct em28xx_audio { char name [ 50 ] ; char * transfer_buffer [ 5 ] ; s#urb * urb [ 5 ] ; s#usb_device * udev ; unsigned int capture_transfer_done ; s#snd_pcm_substream * capture_pcm_substream ; unsigned int hwptr_done_capture ; s#snd_card * sndcard ; int users ; t#spinlock_t slock ; } 
e#em28xx_dev_state enum em28xx_dev_state { DEV_INITIALIZED = 0x01 , DEV_DISCONNECTED = 0x02 , DEV_MISCONFIGURED = 0x04 , } 
e#em28xx_io_method enum em28xx_io_method { IO_NONE , IO_READ , IO_MMAP , } 
s#em28xx_dmaqueue struct em28xx_dmaqueue { s#list_head active ; s#list_head queued ; t#wait_queue_head_t wq ; int pos ; } 
s#em28xx_buffer struct em28xx_buffer { s#videobuf_buffer vb ; s#list_head frame ; int top_field ; int receiving ; } 
s#em28xx_usb_isoc_ctl struct em28xx_usb_isoc_ctl { int max_pkt_size ; int num_bufs ; s#urb * * urb ; char * * transfer_buffer ; t#u8 cmd ; int pos , size , pktsize ; int field ; t#u32 tmp_buf ; int tmp_buf_len ; s#em28xx_buffer * vid_buf ; s#em28xx_buffer * vbi_buf ; int nfields ; int ( * isoc_copy ) ( s#em28xx * , s#urb * ) ; } 
e#em28xx_mode enum em28xx_mode { EM28XX_SUSPEND , EM28XX_ANALOG_MODE , EM28XX_DIGITAL_MODE , } 
s##input_mt_slot
s##em28xx_dvb
s##ir_raw_event_ctrl
s#em28xx struct em28xx { char name [ 30 ] ; int model ; int devno ; e#em28xx_chip_id chip_id ; s#v4l2_device v4l2_dev ; s#em28xx_board board ; e#em28xx_sensor em28xx_sensor ; int sensor_xres , sensor_yres ; int sensor_xtal ; int progressive ; int vinmode , vinctl ; unsigned int has_audio_class : 1 ; unsigned int has_alsa_audio : 1 ; s#work_struct wq_trigger ; t#atomic_t stream_started ; s#em28xx_fmt * format ; s#em28xx_IR * ir ; unsigned int wait_after_write ; s#list_head devlist ; t#u32 i2s_speed ; s#em28xx_audio_mode audio_mode ; int tuner_type ; int tuner_addr ; int tda9887_conf ; s#i2c_adapter i2c_adap ; s#i2c_client i2c_client ; int users ; s#video_device * vdev ; t#v4l2_std_id norm ; int ctl_freq ; unsigned int ctl_input ; unsigned int ctl_ainput ; unsigned int ctl_aoutput ; int mute ; int volume ; int width ; int height ; unsigned hscale ; unsigned vscale ; int interlaced ; unsigned int video_bytesread ; unsigned long hash ; unsigned long i2c_hash ; s#em28xx_audio adev ; e#em28xx_dev_state state ; e#em28xx_io_method io ; int capture_type ; int vbi_read ; unsigned char cur_field ; unsigned int vbi_width ; unsigned int vbi_height ; s#work_struct request_module_wk ; s#mutex lock ; s#mutex ctrl_urb_lock ; s#list_head inqueue , outqueue ; t#wait_queue_head_t open , wait_frame , wait_stream ; s#video_device * vbi_dev ; s#video_device * radio_dev ; unsigned int resources ; unsigned char eedata [ 256 ] ; s#em28xx_dmaqueue vidq ; s#em28xx_dmaqueue vbiq ; s#em28xx_usb_isoc_ctl isoc_ctl ; t#spinlock_t slock ; s#usb_device * udev ; int alt ; int max_pkt_size ; int num_alt ; unsigned int * alt_max_pkt_size ; s#urb * urb [ 5 ] ; char * transfer_buffer [ 5 ] ; char urb_buf [ 80 ] ; int ( * em28xx_write_regs ) ( s#em28xx * , t#u16 , char * , int ) ; int ( * em28xx_read_reg ) ( s#em28xx * , t#u16 ) ; int ( * em28xx_read_reg_req_len ) ( s#em28xx * , t#u8 , t#u16 , char * , int ) ; int ( * em28xx_write_regs_req ) ( s#em28xx * , t#u8 , t#u16 , char * , int ) ; int ( * em28xx_read_reg_req ) ( s#em28xx * , t#u8 , t#u16 ) ; e#em28xx_mode mode ; t#u16 reg_gpo_num , reg_gpio_num ; unsigned char reg_gpo , reg_gpio ; char snapshot_button_path [ 30 ] ; s#input_dev * sbutton_input_dev ; s#delayed_work sbutton_query_work ; s#em28xx_dvb * dvb ; s#IR_i2c_init_data init_data ; } 
em28xx_audio_analog_set int em28xx_audio_analog_set ( s#em28xx * ) 
em28xx_audio_setup int em28xx_audio_setup ( s#em28xx * ) 
em28xx_set_mode int em28xx_set_mode ( s#em28xx * , e#em28xx_mode ) 
em28xx_uninit_isoc void em28xx_uninit_isoc ( s#em28xx * ) 
em28xx_init_isoc int em28xx_init_isoc ( s#em28xx * , int , int , int , int ( * ) ( s#em28xx * , s#urb * ) ) 
em28xx_isoc_dvb_max_packetsize int em28xx_isoc_dvb_max_packetsize ( s#em28xx * ) 
s#em28xx_ops struct em28xx_ops { s#list_head next ; char * name ; int id ; int ( * init ) ( s#em28xx * ) ; int ( * fini ) ( s#em28xx * ) ; } 
em28xx_register_extension int em28xx_register_extension ( s#em28xx_ops * ) 
em28xx_unregister_extension void em28xx_unregister_extension ( s#em28xx_ops * ) 

/* drivers/media/video/gspca/gspca.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##v4l2_device
s##v4l2_ctrl_handler
s##v4l2_fh
s##usb_tt
s##ep_device
s##wusb_dev
s##input_mt_slot
s#framerates struct framerates { const t#u8 * rates ; int nrates ; } 
s#gspca_ctrl struct gspca_ctrl { t#s16 val ; t#s16 def ; t#s16 min , max ; } 
s#cam struct cam { const s#v4l2_pix_format * cam_mode ; const s#framerates * mode_framerates ; s#gspca_ctrl * ctrls ; t#u32 bulk_size ; t#u32 input_flags ; t#u8 nmodes ; t#u8 no_urb_create ; t#u8 bulk_nurbs ; t#u8 bulk ; t#u8 npkt ; t#u8 reverse_alts ; } 
t#cam_v_op typedef void ( * cam_v_op ) ( s#gspca_dev * ) 
s#ctrl struct ctrl { s#v4l2_queryctrl qctrl ; int ( * set ) ( s#gspca_dev * , t#__s32 ) ; int ( * get ) ( s#gspca_dev * , t#__s32 * ) ; t#cam_v_op set_control ; } 
t#cam_cf_op typedef int ( * cam_cf_op ) ( s#gspca_dev * , const s#usb_device_id * ) 
t#cam_op typedef int ( * cam_op ) ( s#gspca_dev * ) 
t#cam_pkt_op typedef void ( * cam_pkt_op ) ( s#gspca_dev * , t#u8 * , int ) 
t#cam_jpg_op typedef int ( * cam_jpg_op ) ( s#gspca_dev * , s#v4l2_jpegcompression * ) 
t#cam_qmnu_op typedef int ( * cam_qmnu_op ) ( s#gspca_dev * , s#v4l2_querymenu * ) 
t#cam_streamparm_op typedef void ( * cam_streamparm_op ) ( s#gspca_dev * , s#v4l2_streamparm * ) 
t#cam_ident_op typedef int ( * cam_ident_op ) ( s#gspca_dev * , s#v4l2_dbg_chip_ident * ) 
t#cam_int_pkt_op typedef int ( * cam_int_pkt_op ) ( s#gspca_dev * , t#u8 * , int ) 
s#sd_desc struct sd_desc { const char * name ; const s#ctrl * ctrls ; int nctrls ; t#cam_cf_op config ; t#cam_op init ; t#cam_op start ; t#cam_pkt_op pkt_scan ; t#cam_op isoc_init ; t#cam_op isoc_nego ; t#cam_v_op stopN ; t#cam_v_op stop0 ; t#cam_v_op dq_callback ; t#cam_jpg_op get_jcomp ; t#cam_jpg_op set_jcomp ; t#cam_qmnu_op querymenu ; t#cam_streamparm_op get_streamparm ; t#cam_streamparm_op set_streamparm ; t#cam_ident_op get_chip_ident ; t#cam_int_pkt_op int_pkt_scan ; t#u8 other_input ; } 
s##scatterlist
s#gspca_frame struct gspca_frame { t#__u8 * data ; int vma_use_count ; s#v4l2_buffer v4l2_buf ; } 
s#gspca_dev struct gspca_dev { s#video_device vdev ; s#module * module ; s#usb_device * dev ; s#file * capt_file ; s#input_dev * input_dev ; char phys [ 64 ] ; s#cam cam ; const s#sd_desc * sd_desc ; unsigned ctrl_dis ; unsigned ctrl_inac ; t#__u8 * usb_buf ; s#urb * urb [ 4 ] ; s#urb * int_urb ; t#__u8 * frbuf ; s#gspca_frame frame [ 16 ] ; t#u8 * image ; t#__u32 frsz ; t#u32 image_len ; t#atomic_t fr_q ; t#atomic_t fr_i ; signed char fr_queue [ 16 ] ; char nframes ; t#u8 fr_o ; t#__u8 last_packet_type ; t#__s8 empty_packet ; t#__u8 streaming ; t#__u8 curr_mode ; t#__u32 pixfmt ; t#__u16 width ; t#__u16 height ; t#__u32 sequence ; t#wait_queue_head_t wq ; s#mutex usb_lock ; s#mutex queue_lock ; int usb_err ; t#u16 pkt_size ; char frozen ; char present ; char nbufread ; char memory ; t#__u8 iface ; t#__u8 alt ; t#__u8 nbalt ; t#u8 audio ; } 
e#gspca_packet_type enum gspca_packet_type { DISCARD_PACKET , FIRST_PACKET , INTER_PACKET , LAST_PACKET } 
gspca_frame_add void gspca_frame_add ( s#gspca_dev * , e#gspca_packet_type , const t#u8 * , int ) 
gspca_dev_probe2 int gspca_dev_probe2 ( s#usb_interface * , const s#usb_device_id * , const s#sd_desc * , int , s#module * ) 
gspca_dev_probe int gspca_dev_probe ( s#usb_interface * , const s#usb_device_id * , const s#sd_desc * , int , s#module * ) 
gspca_disconnect void gspca_disconnect ( s#usb_interface * ) 
gspca_suspend int gspca_suspend ( s#usb_interface * , t#pm_message_t ) 
gspca_resume int gspca_resume ( s#usb_interface * ) 
gspca_auto_gain_n_exposure int gspca_auto_gain_n_exposure ( s#gspca_dev * , int , int , int , int , int ) 

/* drivers/media/video/ivtv/ivtv-driver.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#ivtv_card_video_input struct ivtv_card_video_input { t#u8 video_type ; t#u8 audio_index ; t#u16 video_input ; } 
s#ivtv_card_audio_input struct ivtv_card_audio_input { t#u8 audio_type ; t#u32 audio_input ; t#u16 muxer_input ; } 
s#ivtv_card_output struct ivtv_card_output { t#u8 name [ 32 ] ; t#u16 video_output ; } 
s#ivtv_gpio_init struct ivtv_gpio_init { t#u16 direction ; t#u16 initial_value ; } 
s#ivtv_gpio_video_input struct ivtv_gpio_video_input { t#u16 mask ; t#u16 tuner ; t#u16 composite ; t#u16 svideo ; } 
s#ivtv_gpio_audio_input struct ivtv_gpio_audio_input { t#u16 mask ; t#u16 tuner ; t#u16 linein ; t#u16 radio ; } 
s#ivtv_gpio_audio_mute struct ivtv_gpio_audio_mute { t#u16 mask ; t#u16 mute ; } 
s#ivtv_gpio_audio_mode struct ivtv_gpio_audio_mode { t#u16 mask ; t#u16 mono ; t#u16 stereo ; t#u16 lang1 ; t#u16 lang2 ; t#u16 both ; } 
s#ivtv_gpio_audio_freq struct ivtv_gpio_audio_freq { t#u16 mask ; t#u16 f32000 ; t#u16 f44100 ; t#u16 f48000 ; } 
s#ivtv_gpio_audio_detect struct ivtv_gpio_audio_detect { t#u16 mask ; t#u16 stereo ; } 
s#ivtv_card_tuner struct ivtv_card_tuner { t#v4l2_std_id std ; int tuner ; } 
s#ivtv_card_tuner_i2c struct ivtv_card_tuner_i2c { unsigned short radio [ 2 ] ; unsigned short demod [ 2 ] ; unsigned short tv [ 4 ] ; } 
s#ivtv_card_pci_info struct ivtv_card_pci_info { t#u16 device ; t#u16 subsystem_vendor ; t#u16 subsystem_device ; } 
s#ivtv_card struct ivtv_card { int type ; char * name ; char * comment ; t#u32 v4l2_capabilities ; t#u32 hw_video ; t#u32 hw_audio ; t#u32 hw_audio_ctrl ; t#u32 hw_muxer ; t#u32 hw_all ; s#ivtv_card_video_input video_inputs [ 6 ] ; s#ivtv_card_audio_input audio_inputs [ 3 ] ; s#ivtv_card_audio_input radio_input ; int nof_outputs ; const s#ivtv_card_output * video_outputs ; t#u8 gr_config ; t#u8 xceive_pin ; s#ivtv_gpio_init gpio_init ; s#ivtv_gpio_video_input gpio_video_input ; s#ivtv_gpio_audio_input gpio_audio_input ; s#ivtv_gpio_audio_mute gpio_audio_mute ; s#ivtv_gpio_audio_mode gpio_audio_mode ; s#ivtv_gpio_audio_freq gpio_audio_freq ; s#ivtv_gpio_audio_detect gpio_audio_detect ; s#ivtv_card_tuner tuners [ 3 ] ; s#ivtv_card_tuner_i2c * i2c ; const s#ivtv_card_pci_info * pci_list ; } 
s##v4l2_events
s#ivtv_options struct ivtv_options { int kilobytes [ 9 ] ; int cardtype ; int tuner ; int radio ; int newi2c ; int i2c_clock_period ; } 
s#ivtv_queue struct ivtv_queue { s#list_head list ; t#u32 buffers ; t#u32 length ; t#u32 bytesused ; } 
s#ivtv_sg_host_element struct ivtv_sg_host_element { t#u32 src ; t#u32 dst ; t#u32 size ; } 
s#ivtv_sg_element struct ivtv_sg_element { t#__le32 src ; t#__le32 dst ; t#__le32 size ; } 
s#ivtv_stream struct ivtv_stream { s#video_device * vdev ; s#ivtv * itv ; const char * name ; int type ; t#u32 id ; t#spinlock_t qlock ; unsigned long s_flags ; int dma ; t#u32 pending_offset ; t#u32 pending_backup ; t#u64 pending_pts ; t#u32 dma_offset ; t#u32 dma_backup ; t#u64 dma_pts ; int subtype ; t#wait_queue_head_t waitq ; t#u32 dma_last_offset ; t#u32 buffers ; t#u32 buf_size ; t#u32 buffers_stolen ; s#ivtv_queue q_free ; s#ivtv_queue q_full ; s#ivtv_queue q_io ; s#ivtv_queue q_dma ; s#ivtv_queue q_predma ; t#u16 dma_xfer_cnt ; s#ivtv_sg_host_element * sg_pending ; s#ivtv_sg_host_element * sg_processing ; s#ivtv_sg_element * sg_dma ; t#dma_addr_t sg_handle ; int sg_pending_size ; int sg_processing_size ; int sg_processed ; s#scatterlist * SGlist ; } 
s#kthread_worker struct kthread_worker { t#spinlock_t lock ; s#list_head work_list ; s#task_struct * task ; } 
t#kthread_work_func_t typedef void ( * kthread_work_func_t ) ( s#kthread_work * ) 
s#kthread_work struct kthread_work { s#list_head node ; t#kthread_work_func_t func ; t#wait_queue_head_t done ; t#atomic_t flushing ; int queue_seq ; int done_seq ; } 
s#ivtv_user_dma struct ivtv_user_dma { s#mutex lock ; int page_count ; s#page * map [ ( 2883584 / ( 1UL << 16 ) ) ] ; s#page * bouncemap [ ( 2883584 / ( 1UL << 16 ) ) ] ; s#ivtv_sg_element SGarray [ ( 2883584 / ( 1UL << 16 ) ) ] ; t#dma_addr_t SG_handle ; int SG_length ; s#scatterlist SGlist [ ( 2883584 / ( 1UL << 16 ) ) ] ; } 
s#ivtv_mailbox struct ivtv_mailbox { t#u32 flags ; t#u32 cmd ; t#u32 retval ; t#u32 timeout ; t#u32 data [ 16 ] ; } 
s#ivtv_mailbox_data struct ivtv_mailbox_data { volatile s#ivtv_mailbox * mbox ; unsigned long busy ; t#u8 max_mbox ; } 
s#ivtv_api_cache struct ivtv_api_cache { unsigned long last_jiffies ; t#u32 data [ 16 ] ; } 
s##ir_raw_event_ctrl
s##input_mt_slot
s#vbi_cc struct vbi_cc { t#u8 odd [ 2 ] ; t#u8 even [ 2 ] ; ; } 
s#vbi_vps struct vbi_vps { t#u8 data [ 5 ] ; } 
s#ivtv_buffer struct ivtv_buffer { s#list_head list ; t#dma_addr_t dma_handle ; unsigned short b_flags ; unsigned short dma_xfer_cnt ; char * buf ; t#u32 bytesused ; t#u32 readpos ; } 
s#vbi_info struct vbi_info { t#u32 raw_decoder_line_size ; t#u8 raw_decoder_sav_odd_field ; t#u8 raw_decoder_sav_even_field ; t#u32 sliced_decoder_line_size ; t#u8 sliced_decoder_sav_odd_field ; t#u8 sliced_decoder_sav_even_field ; t#u32 start [ 2 ] ; t#u32 count ; t#u32 raw_size ; t#u32 sliced_size ; t#u32 dec_start ; t#u32 enc_start ; t#u32 enc_size ; int fpi ; s#v4l2_format in ; s#v4l2_sliced_vbi_format * sliced_in ; int insert_mpeg ; t#u32 frame ; s#vbi_cc cc_payload [ 256 ] ; int cc_payload_idx ; t#u8 cc_missing_cnt ; int wss_payload ; t#u8 wss_missing_cnt ; s#vbi_vps vps_payload ; s#v4l2_sliced_vbi_data sliced_data [ 36 ] ; s#v4l2_sliced_vbi_data sliced_dec_data [ 36 ] ; t#u8 * sliced_mpeg_data [ 32 ] ; t#u32 sliced_mpeg_size [ 32 ] ; s#ivtv_buffer sliced_mpeg_buf ; t#u32 inserted_frame ; } 
s#yuv_frame_info struct yuv_frame_info { t#u32 update ; t#s32 src_x ; t#s32 src_y ; t#u32 src_w ; t#u32 src_h ; t#s32 dst_x ; t#s32 dst_y ; t#u32 dst_w ; t#u32 dst_h ; t#s32 pan_x ; t#s32 pan_y ; t#u32 vis_w ; t#u32 vis_h ; t#u32 interlaced_y ; t#u32 interlaced_uv ; t#s32 tru_x ; t#u32 tru_w ; t#u32 tru_h ; t#u32 offset_y ; t#s32 lace_mode ; t#u32 sync_field ; t#u32 delay ; t#u32 interlaced ; } 
s#yuv_playback_info struct yuv_playback_info { t#u32 reg_2834 ; t#u32 reg_2838 ; t#u32 reg_283c ; t#u32 reg_2840 ; t#u32 reg_2844 ; t#u32 reg_2848 ; t#u32 reg_2854 ; t#u32 reg_285c ; t#u32 reg_2864 ; t#u32 reg_2870 ; t#u32 reg_2874 ; t#u32 reg_2890 ; t#u32 reg_2898 ; t#u32 reg_289c ; t#u32 reg_2918 ; t#u32 reg_291c ; t#u32 reg_2920 ; t#u32 reg_2924 ; t#u32 reg_2928 ; t#u32 reg_292c ; t#u32 reg_2930 ; t#u32 reg_2934 ; t#u32 reg_2938 ; t#u32 reg_293c ; t#u32 reg_2940 ; t#u32 reg_2944 ; t#u32 reg_2948 ; t#u32 reg_294c ; t#u32 reg_2950 ; t#u32 reg_2954 ; t#u32 reg_2958 ; t#u32 reg_295c ; t#u32 reg_2960 ; t#u32 reg_2964 ; t#u32 reg_2968 ; t#u32 reg_296c ; t#u32 reg_2970 ; int v_filter_1 ; int v_filter_2 ; int h_filter ; t#u8 track_osd ; t#u32 osd_x_offset ; t#u32 osd_y_offset ; t#u32 osd_x_pan ; t#u32 osd_y_pan ; t#u32 osd_vis_w ; t#u32 osd_vis_h ; t#u32 osd_full_w ; t#u32 osd_full_h ; int decode_height ; int lace_mode ; int lace_threshold ; int lace_sync_field ; t#atomic_t next_dma_frame ; t#atomic_t next_fill_frame ; t#u32 yuv_forced_update ; int update_frame ; t#u8 fields_lapsed ; s#yuv_frame_info new_frame_info [ 8 ] ; s#yuv_frame_info old_frame_info ; s#yuv_frame_info old_frame_info_args ; void * blanking_ptr ; t#dma_addr_t blanking_dmaptr ; int stream_size ; t#u8 draw_frame ; t#u8 max_frames_buffered ; s#v4l2_rect main_rect ; t#u32 v4l2_src_w ; t#u32 v4l2_src_h ; t#u8 running ; } 
s##osd_info
s#ivtv struct ivtv { s#pci_dev * pdev ; const s#ivtv_card * card ; const char * card_name ; const s#ivtv_card_tuner_i2c * card_i2c ; t#u8 has_cx23415 ; t#u8 pvr150_workaround ; t#u8 nof_inputs ; t#u8 nof_audio_inputs ; t#u32 v4l2_cap ; t#u32 hw_flags ; t#v4l2_std_id tuner_std ; s#v4l2_subdev * sd_video ; s#v4l2_subdev * sd_audio ; s#v4l2_subdev * sd_muxer ; t#u32 base_addr ; volatile void * enc_mem ; volatile void * dec_mem ; volatile void * reg_mem ; s#ivtv_options options ; s#v4l2_device v4l2_dev ; s#cx2341x_handler cxhdl ; s#v4l2_ctrl_handler hdl_gpio ; s#v4l2_subdev sd_gpio ; t#u16 instance ; unsigned long i_flags ; t#u8 is_50hz ; t#u8 is_60hz ; t#u8 is_out_50hz ; t#u8 is_out_60hz ; int output_mode ; t#u32 audio_input ; t#u32 active_input ; t#u32 active_output ; t#v4l2_std_id std ; t#v4l2_std_id std_out ; t#u8 audio_stereo_mode ; t#u8 audio_bilingual_mode ; t#spinlock_t lock ; s#mutex serialize_lock ; int stream_buf_size [ 9 ] ; s#ivtv_stream streams [ 9 ] ; t#atomic_t capturing ; t#atomic_t decoding ; t#u32 irqmask ; t#u32 irq_rr_idx ; s#kthread_worker irq_worker ; s#task_struct * irq_worker_task ; s#kthread_work irq_work ; t#spinlock_t dma_reg_lock ; int cur_dma_stream ; int cur_pio_stream ; t#u32 dma_data_req_offset ; t#u32 dma_data_req_size ; int dma_retries ; s#ivtv_user_dma udma ; s#timer_list dma_timer ; t#u32 last_vsync_field ; t#wait_queue_head_t dma_waitq ; t#wait_queue_head_t eos_waitq ; t#wait_queue_head_t event_waitq ; t#wait_queue_head_t vsync_waitq ; s#ivtv_mailbox_data enc_mbox ; s#ivtv_mailbox_data dec_mbox ; s#ivtv_api_cache api_cache [ 256 ] ; s#i2c_adapter i2c_adap ; s#i2c_algo_bit_data i2c_algo ; s#i2c_client i2c_client ; int i2c_state ; s#mutex i2c_bus_lock ; s#IR_i2c_init_data ir_i2c_init_data ; t#u32 pgm_info_offset ; t#u32 pgm_info_num ; t#u32 pgm_info_write_idx ; t#u32 pgm_info_read_idx ; s#v4l2_enc_idx_entry pgm_info [ ( 400 ) ] ; t#u32 open_id ; int search_pack_header ; int speed ; t#u8 speed_mute_audio ; t#u64 mpg_data_received ; t#u64 vbi_data_inserted ; t#u32 last_dec_timing [ 3 ] ; unsigned long dualwatch_jiffies ; t#u32 dualwatch_stereo_mode ; s#vbi_info vbi ; s#yuv_playback_info yuv_info ; unsigned long osd_video_pbase ; int osd_global_alpha_state ; int osd_local_alpha_state ; int osd_chroma_key_state ; t#u8 osd_global_alpha ; t#u32 osd_chroma_key ; s#v4l2_rect osd_rect ; s#v4l2_rect main_rect ; s#osd_info * osd_info ; void ( * ivtvfb_restore ) ( s#ivtv * ) ; } 
ivtv_set_irq_mask void ivtv_set_irq_mask ( s#ivtv * , t#u32 ) 
ivtv_api int ivtv_api ( s#ivtv * , int , int , t#u32 [ ] ) 
ivtv_vapi int ivtv_vapi ( s#ivtv * , int , int , ... ) 
ivtv_vapi_result int ivtv_vapi_result ( s#ivtv * , t#u32 [ 16 ] , int , int , ... ) 
ivtv_clear_irq_mask void ivtv_clear_irq_mask ( s#ivtv * , t#u32 ) 
ivtv_debug extern int ivtv_debug 
ivtv_reset_ir_gpio void ivtv_reset_ir_gpio ( s#ivtv * ) 
ivtv_udma_setup int ivtv_udma_setup ( s#ivtv * , unsigned long , void * , int ) 
ivtv_udma_unmap void ivtv_udma_unmap ( s#ivtv * ) 
ivtv_udma_alloc void ivtv_udma_alloc ( s#ivtv * ) 
ivtv_udma_prepare void ivtv_udma_prepare ( s#ivtv * ) 
ivtv_init_on_first_open int ivtv_init_on_first_open ( s#ivtv * ) 
ivtv_firmware_check int ivtv_firmware_check ( s#ivtv * , char * ) 

/* drivers/media/video/soc_camera.o */
e#soc_mbus_packing enum soc_mbus_packing { SOC_MBUS_PACKING_NONE , SOC_MBUS_PACKING_2X8_PADHI , SOC_MBUS_PACKING_2X8_PADLO , SOC_MBUS_PACKING_EXTEND16 , SOC_MBUS_PACKING_VARIABLE , SOC_MBUS_PACKING_1_5X8 , } 
e#soc_mbus_order enum soc_mbus_order { SOC_MBUS_ORDER_LE , SOC_MBUS_ORDER_BE , } 
s#soc_mbus_pixelfmt struct soc_mbus_pixelfmt { const char * name ; t#u32 fourcc ; e#soc_mbus_packing packing ; e#soc_mbus_order order ; t#u8 bits_per_sample ; } 
s#soc_camera_format_xlate struct soc_camera_format_xlate { e#v4l2_mbus_pixelcode code ; const s#soc_mbus_pixelfmt * host_fmt ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#soc_camera_sense struct soc_camera_sense { unsigned long flags ; unsigned long master_clock ; unsigned long pixel_clock_max ; unsigned long pixel_clock ; } 
s#soc_camera_ops struct soc_camera_ops { int ( * suspend ) ( s#soc_camera_device * , t#pm_message_t ) ; int ( * resume ) ( s#soc_camera_device * ) ; unsigned long ( * query_bus_param ) ( s#soc_camera_device * ) ; int ( * set_bus_param ) ( s#soc_camera_device * , unsigned long ) ; int ( * enum_input ) ( s#soc_camera_device * , s#v4l2_input * ) ; const s#v4l2_queryctrl * controls ; int num_controls ; } 
s##v4l2_events
s##tuner_setup
s##v4l2_ctrl_handler
e#vb2_buffer_state enum vb2_buffer_state { VB2_BUF_STATE_DEQUEUED , VB2_BUF_STATE_QUEUED , VB2_BUF_STATE_ACTIVE , VB2_BUF_STATE_DONE , VB2_BUF_STATE_ERROR , } 
s#vb2_plane struct vb2_plane { void * mem_priv ; int mapped : 1 ; } 
s#vb2_buffer struct vb2_buffer { s#v4l2_buffer v4l2_buf ; s#v4l2_plane v4l2_planes [ 8 ] ; s#vb2_queue * vb2_queue ; unsigned int num_planes ; e#vb2_buffer_state state ; s#list_head queued_entry ; s#list_head done_entry ; s#vb2_plane planes [ 8 ] ; unsigned int num_planes_mapped ; } 
s#vb2_ops struct vb2_ops { int ( * queue_setup ) ( s#vb2_queue * , unsigned int * , unsigned int * , unsigned long [ ] , void * [ ] ) ; void ( * wait_prepare ) ( s#vb2_queue * ) ; void ( * wait_finish ) ( s#vb2_queue * ) ; int ( * buf_init ) ( s#vb2_buffer * ) ; int ( * buf_prepare ) ( s#vb2_buffer * ) ; int ( * buf_finish ) ( s#vb2_buffer * ) ; void ( * buf_cleanup ) ( s#vb2_buffer * ) ; int ( * start_streaming ) ( s#vb2_queue * ) ; int ( * stop_streaming ) ( s#vb2_queue * ) ; void ( * buf_queue ) ( s#vb2_buffer * ) ; } 
s#vb2_mem_ops struct vb2_mem_ops { void * ( * alloc ) ( void * , unsigned long ) ; void ( * put ) ( void * ) ; void * ( * get_userptr ) ( void * , unsigned long , unsigned long , int ) ; void ( * put_userptr ) ( void * ) ; void * ( * vaddr ) ( void * ) ; void * ( * cookie ) ( void * ) ; unsigned int ( * num_users ) ( void * ) ; int ( * mmap ) ( void * , s#vm_area_struct * ) ; } 
s##vb2_fileio_data
s#vb2_queue struct vb2_queue { e#v4l2_buf_type type ; unsigned int io_modes ; unsigned int io_flags ; const s#vb2_ops * ops ; const s#vb2_mem_ops * mem_ops ; void * drv_priv ; unsigned int buf_struct_size ; e#v4l2_memory memory ; s#vb2_buffer * bufs [ 32 ] ; unsigned int num_buffers ; s#list_head queued_list ; t#atomic_t queued_count ; s#list_head done_list ; t#spinlock_t done_lock ; t#wait_queue_head_t done_wq ; void * alloc_ctx [ 8 ] ; unsigned int streaming : 1 ; s#vb2_fileio_data * fileio ; } 
s#soc_camera_device struct soc_camera_device { s#list_head list ; s#device dev ; s#device * pdev ; t#s32 user_width ; t#s32 user_height ; t#u32 bytesperline ; t#u32 sizeimage ; e#v4l2_colorspace colorspace ; unsigned char iface ; unsigned char devnum ; s#soc_camera_sense * sense ; s#soc_camera_ops * ops ; s#video_device * vdev ; const s#soc_camera_format_xlate * current_fmt ; s#soc_camera_format_xlate * user_formats ; int num_user_formats ; e#v4l2_field field ; void * host_priv ; int use_count ; s#mutex video_lock ; s#file * streamer ; union { s#videobuf_queue vb_vidq ; s#vb2_queue vb2_vidq ; } ; } 
soc_camera_xlate_by_fourcc const s#soc_camera_format_xlate * soc_camera_xlate_by_fourcc ( s#soc_camera_device * , unsigned int ) 
s##regulator
s#regulator_bulk_data struct regulator_bulk_data { const char * supply ; s#regulator * consumer ; } 
s#soc_camera_link struct soc_camera_link { int bus_id ; unsigned long flags ; int i2c_adapter_id ; s#i2c_board_info * board_info ; const char * module_name ; void * priv ; s#regulator_bulk_data * regulators ; int num_regulators ; int ( * add_device ) ( s#soc_camera_link * , s#device * ) ; void ( * del_device ) ( s#soc_camera_link * ) ; int ( * power ) ( s#device * , int ) ; int ( * reset ) ( s#device * ) ; int ( * set_bus_param ) ( s#soc_camera_link * , unsigned long ) ; unsigned long ( * query_bus_param ) ( s#soc_camera_link * ) ; void ( * free_bus ) ( s#soc_camera_link * ) ; } 
soc_camera_apply_sensor_flags extern unsigned long soc_camera_apply_sensor_flags ( s#soc_camera_link * , unsigned long ) 
soc_camera_lock void soc_camera_lock ( s#vb2_queue * ) 
soc_camera_unlock void soc_camera_unlock ( s#vb2_queue * ) 
soc_camera_bus_type extern s#bus_type soc_camera_bus_type 
s#soc_camera_host_ops struct soc_camera_host_ops { s#module * owner ; int ( * add ) ( s#soc_camera_device * ) ; void ( * remove ) ( s#soc_camera_device * ) ; int ( * suspend ) ( s#soc_camera_device * , t#pm_message_t ) ; int ( * resume ) ( s#soc_camera_device * ) ; int ( * get_formats ) ( s#soc_camera_device * , unsigned int , s#soc_camera_format_xlate * ) ; void ( * put_formats ) ( s#soc_camera_device * ) ; int ( * cropcap ) ( s#soc_camera_device * , s#v4l2_cropcap * ) ; int ( * get_crop ) ( s#soc_camera_device * , s#v4l2_crop * ) ; int ( * set_crop ) ( s#soc_camera_device * , s#v4l2_crop * ) ; int ( * set_livecrop ) ( s#soc_camera_device * , s#v4l2_crop * ) ; int ( * set_fmt ) ( s#soc_camera_device * , s#v4l2_format * ) ; int ( * try_fmt ) ( s#soc_camera_device * , s#v4l2_format * ) ; void ( * init_videobuf ) ( s#videobuf_queue * , s#soc_camera_device * ) ; int ( * init_videobuf2 ) ( s#vb2_queue * , s#soc_camera_device * ) ; int ( * reqbufs ) ( s#soc_camera_device * , s#v4l2_requestbuffers * ) ; int ( * querycap ) ( s#soc_camera_host * , s#v4l2_capability * ) ; int ( * set_bus_param ) ( s#soc_camera_device * , t#__u32 ) ; int ( * get_ctrl ) ( s#soc_camera_device * , s#v4l2_control * ) ; int ( * set_ctrl ) ( s#soc_camera_device * , s#v4l2_control * ) ; int ( * get_parm ) ( s#soc_camera_device * , s#v4l2_streamparm * ) ; int ( * set_parm ) ( s#soc_camera_device * , s#v4l2_streamparm * ) ; int ( * enum_fsizes ) ( s#soc_camera_device * , s#v4l2_frmsizeenum * ) ; unsigned int ( * poll ) ( s#file * , t#poll_table * ) ; const s#v4l2_queryctrl * controls ; int num_controls ; } 
s#soc_camera_host struct soc_camera_host { s#v4l2_device v4l2_dev ; s#list_head list ; unsigned char nr ; void * priv ; const char * drv_name ; s#soc_camera_host_ops * ops ; } 
soc_camera_host_register int soc_camera_host_register ( s#soc_camera_host * ) 
soc_camera_host_unregister void soc_camera_host_unregister ( s#soc_camera_host * ) 

/* drivers/media/video/soc_mediabus.o */
soc_mbus_samples_per_pixel int soc_mbus_samples_per_pixel ( const s#soc_mbus_pixelfmt * , unsigned int * , unsigned int * ) 
soc_mbus_bytes_per_line t#s32 soc_mbus_bytes_per_line ( t#u32 , const s#soc_mbus_pixelfmt * ) 
s#soc_mbus_lookup struct soc_mbus_lookup { e#v4l2_mbus_pixelcode code ; s#soc_mbus_pixelfmt fmt ; } 
soc_mbus_find_fmtdesc const s#soc_mbus_pixelfmt * soc_mbus_find_fmtdesc ( e#v4l2_mbus_pixelcode , const s#soc_mbus_lookup * , int ) 
soc_mbus_get_fmtdesc const s#soc_mbus_pixelfmt * soc_mbus_get_fmtdesc ( e#v4l2_mbus_pixelcode ) 

/* drivers/media/video/tveeprom.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#tveeprom struct tveeprom { t#u32 has_radio ; t#u32 has_ir ; t#u32 has_MAC_address ; t#u32 tuner_type ; t#u32 tuner_formats ; t#u32 tuner_hauppauge_model ; t#u32 tuner2_type ; t#u32 tuner2_formats ; t#u32 tuner2_hauppauge_model ; t#u32 digitizer ; t#u32 digitizer_formats ; t#u32 audio_processor ; t#u32 decoder_processor ; t#u32 model ; t#u32 revision ; t#u32 serial_number ; char rev_str [ 5 ] ; t#u8 MAC_address [ 6 ] ; } 
tveeprom_hauppauge_analog void tveeprom_hauppauge_analog ( s#i2c_client * , s#tveeprom * , unsigned char * ) 
tveeprom_read int tveeprom_read ( s#i2c_client * , unsigned char * , int ) 

/* drivers/media/video/v4l2-common.o */
v4l2_ctrl_check int v4l2_ctrl_check ( s#v4l2_ext_control * , s#v4l2_queryctrl * , const char * const * ) 
v4l2_ctrl_query_fill int v4l2_ctrl_query_fill ( s#v4l2_queryctrl * , t#s32 , t#s32 , t#s32 , t#s32 ) 
v4l2_ctrl_query_menu int v4l2_ctrl_query_menu ( s#v4l2_querymenu * , s#v4l2_queryctrl * , const char * const * ) 
v4l2_ctrl_query_menu_valid_items int v4l2_ctrl_query_menu_valid_items ( s#v4l2_querymenu * , const t#u32 * ) 
v4l2_ctrl_next t#u32 v4l2_ctrl_next ( const t#u32 * const * , t#u32 ) 
v4l2_chip_match_host int v4l2_chip_match_host ( const s#v4l2_dbg_match * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
v4l2_chip_match_i2c_client int v4l2_chip_match_i2c_client ( s#i2c_client * , const s#v4l2_dbg_match * ) 
v4l2_chip_ident_i2c_client int v4l2_chip_ident_i2c_client ( s#i2c_client * , s#v4l2_dbg_chip_ident * , t#u32 , t#u32 ) 
s##v4l2_ioctl_ops
s##v4l2_events
s##tuner_setup
v4l2_i2c_subdev_init void v4l2_i2c_subdev_init ( s#v4l2_subdev * , s#i2c_client * , const s#v4l2_subdev_ops * ) 
v4l2_i2c_new_subdev_board s#v4l2_subdev * v4l2_i2c_new_subdev_board ( s#v4l2_device * , s#i2c_adapter * , s#i2c_board_info * , const unsigned short * ) 
v4l2_i2c_new_subdev s#v4l2_subdev * v4l2_i2c_new_subdev ( s#v4l2_device * , s#i2c_adapter * , const char * , t#u8 , const unsigned short * ) 
v4l2_i2c_subdev_addr unsigned short v4l2_i2c_subdev_addr ( s#v4l2_subdev * ) 
e#v4l2_i2c_tuner_type enum v4l2_i2c_tuner_type { ADDRS_RADIO , ADDRS_DEMOD , ADDRS_TV , ADDRS_TV_WITH_DEMOD , } 
v4l2_i2c_tuner_addrs const unsigned short * v4l2_i2c_tuner_addrs ( e#v4l2_i2c_tuner_type ) 
s#spi_message struct spi_message { s#list_head transfers ; s#spi_device * spi ; unsigned is_dma_mapped : 1 ; void ( * complete ) ( void * ) ; void * context ; unsigned actual_length ; int status ; s#list_head queue ; void * state ; } 
s#spi_master struct spi_master { s#device dev ; s#list_head list ; t#s16 bus_num ; t#u16 num_chipselect ; t#u16 dma_alignment ; t#u16 mode_bits ; t#u16 flags ; t#spinlock_t bus_lock_spinlock ; s#mutex bus_lock_mutex ; t#bool bus_lock_flag ; int ( * setup ) ( s#spi_device * ) ; int ( * transfer ) ( s#spi_device * , s#spi_message * ) ; void ( * cleanup ) ( s#spi_device * ) ; } 
s#spi_device struct spi_device { s#device dev ; s#spi_master * master ; t#u32 max_speed_hz ; t#u8 chip_select ; t#u8 mode ; t#u8 bits_per_word ; int irq ; void * controller_state ; void * controller_data ; char modalias [ 32 ] ; } 
v4l2_spi_subdev_init void v4l2_spi_subdev_init ( s#v4l2_subdev * , s#spi_device * , const s#v4l2_subdev_ops * ) 
s#spi_board_info struct spi_board_info { char modalias [ 32 ] ; const void * platform_data ; void * controller_data ; int irq ; t#u32 max_speed_hz ; t#u16 bus_num ; t#u16 chip_select ; t#u8 mode ; } 
v4l2_spi_new_subdev s#v4l2_subdev * v4l2_spi_new_subdev ( s#v4l2_device * , s#spi_master * , s#spi_board_info * ) 
v4l_bound_align_image void v4l_bound_align_image ( unsigned int * , unsigned int , unsigned int , unsigned int , unsigned int * , unsigned int , unsigned int , unsigned int , unsigned int ) 
v4l_fill_dv_preset_info int v4l_fill_dv_preset_info ( t#u32 , s#v4l2_dv_enum_preset * ) 
s#v4l2_discrete_probe struct v4l2_discrete_probe { const s#v4l2_frmsize_discrete * sizes ; int num_sizes ; } 
v4l2_find_nearest_format const s#v4l2_frmsize_discrete * v4l2_find_nearest_format ( const s#v4l2_discrete_probe * , t#s32 , t#s32 ) 

/* drivers/media/video/v4l2-compat-ioctl32.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
v4l2_compat_ioctl32 extern long v4l2_compat_ioctl32 ( s#file * , unsigned int , unsigned long ) 

/* drivers/media/video/v4l2-ctrls.o */
v4l2_ctrl_get_menu const char * const * v4l2_ctrl_get_menu ( t#u32 ) 
v4l2_ctrl_get_name const char * v4l2_ctrl_get_name ( t#u32 ) 
v4l2_ctrl_fill void v4l2_ctrl_fill ( t#u32 , const char * * , e#v4l2_ctrl_type * , t#s32 * , t#s32 * , t#s32 * , t#s32 * , t#u32 * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
v4l2_ctrl_handler_init int v4l2_ctrl_handler_init ( s#v4l2_ctrl_handler * , unsigned ) 
v4l2_ctrl_handler_free void v4l2_ctrl_handler_free ( s#v4l2_ctrl_handler * ) 
v4l2_ctrl_find s#v4l2_ctrl * v4l2_ctrl_find ( s#v4l2_ctrl_handler * , t#u32 ) 
s#v4l2_ctrl_config struct v4l2_ctrl_config { const s#v4l2_ctrl_ops * ops ; t#u32 id ; const char * name ; e#v4l2_ctrl_type type ; t#s32 min ; t#s32 max ; t#u32 step ; t#s32 def ; t#u32 flags ; t#u32 menu_skip_mask ; const char * const * qmenu ; unsigned int is_private : 1 ; unsigned int is_volatile : 1 ; } 
v4l2_ctrl_new_custom s#v4l2_ctrl * v4l2_ctrl_new_custom ( s#v4l2_ctrl_handler * , const s#v4l2_ctrl_config * , void * ) 
v4l2_ctrl_new_std s#v4l2_ctrl * v4l2_ctrl_new_std ( s#v4l2_ctrl_handler * , const s#v4l2_ctrl_ops * , t#u32 , t#s32 , t#s32 , t#u32 , t#s32 ) 
v4l2_ctrl_new_std_menu s#v4l2_ctrl * v4l2_ctrl_new_std_menu ( s#v4l2_ctrl_handler * , const s#v4l2_ctrl_ops * , t#u32 , t#s32 , t#s32 , t#s32 ) 
v4l2_ctrl_add_ctrl s#v4l2_ctrl * v4l2_ctrl_add_ctrl ( s#v4l2_ctrl_handler * , s#v4l2_ctrl * ) 
v4l2_ctrl_add_handler int v4l2_ctrl_add_handler ( s#v4l2_ctrl_handler * , s#v4l2_ctrl_handler * ) 
v4l2_ctrl_cluster void v4l2_ctrl_cluster ( unsigned , s#v4l2_ctrl * * ) 
v4l2_ctrl_activate void v4l2_ctrl_activate ( s#v4l2_ctrl * , t#bool ) 
v4l2_ctrl_grab void v4l2_ctrl_grab ( s#v4l2_ctrl * , t#bool ) 
v4l2_ctrl_handler_log_status void v4l2_ctrl_handler_log_status ( s#v4l2_ctrl_handler * , const char * ) 
v4l2_ctrl_handler_setup int v4l2_ctrl_handler_setup ( s#v4l2_ctrl_handler * ) 
v4l2_queryctrl int v4l2_queryctrl ( s#v4l2_ctrl_handler * , s#v4l2_queryctrl * ) 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##v4l2_events
s##tuner_setup
v4l2_subdev_queryctrl int v4l2_subdev_queryctrl ( s#v4l2_subdev * , s#v4l2_queryctrl * ) 
v4l2_querymenu int v4l2_querymenu ( s#v4l2_ctrl_handler * , s#v4l2_querymenu * ) 
v4l2_subdev_querymenu int v4l2_subdev_querymenu ( s#v4l2_subdev * , s#v4l2_querymenu * ) 
v4l2_g_ext_ctrls int v4l2_g_ext_ctrls ( s#v4l2_ctrl_handler * , s#v4l2_ext_controls * ) 
v4l2_subdev_g_ext_ctrls int v4l2_subdev_g_ext_ctrls ( s#v4l2_subdev * , s#v4l2_ext_controls * ) 
v4l2_g_ctrl int v4l2_g_ctrl ( s#v4l2_ctrl_handler * , s#v4l2_control * ) 
v4l2_subdev_g_ctrl int v4l2_subdev_g_ctrl ( s#v4l2_subdev * , s#v4l2_control * ) 
v4l2_ctrl_g_ctrl t#s32 v4l2_ctrl_g_ctrl ( s#v4l2_ctrl * ) 
v4l2_try_ext_ctrls int v4l2_try_ext_ctrls ( s#v4l2_ctrl_handler * , s#v4l2_ext_controls * ) 
v4l2_s_ext_ctrls int v4l2_s_ext_ctrls ( s#v4l2_ctrl_handler * , s#v4l2_ext_controls * ) 
v4l2_subdev_try_ext_ctrls int v4l2_subdev_try_ext_ctrls ( s#v4l2_subdev * , s#v4l2_ext_controls * ) 
v4l2_subdev_s_ext_ctrls int v4l2_subdev_s_ext_ctrls ( s#v4l2_subdev * , s#v4l2_ext_controls * ) 
v4l2_s_ctrl int v4l2_s_ctrl ( s#v4l2_ctrl_handler * , s#v4l2_control * ) 
v4l2_subdev_s_ctrl int v4l2_subdev_s_ctrl ( s#v4l2_subdev * , s#v4l2_control * ) 
v4l2_ctrl_s_ctrl int v4l2_ctrl_s_ctrl ( s#v4l2_ctrl * , t#s32 ) 

/* drivers/media/video/v4l2-dev.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##v4l2_events
s##tuner_setup
s##v4l2_ctrl_handler
video_device_alloc s#video_device * video_device_alloc ( void ) 
video_device_release void video_device_release ( s#video_device * ) 
video_device_release_empty void video_device_release_empty ( s#video_device * ) 
video_devdata s#video_device * video_devdata ( s#file * ) 
v4l2_prio_init void v4l2_prio_init ( s#v4l2_prio_state * ) 
v4l2_prio_change int v4l2_prio_change ( s#v4l2_prio_state * , e#v4l2_priority * , e#v4l2_priority ) 
v4l2_prio_open void v4l2_prio_open ( s#v4l2_prio_state * , e#v4l2_priority * ) 
v4l2_prio_close void v4l2_prio_close ( s#v4l2_prio_state * , e#v4l2_priority ) 
v4l2_prio_max e#v4l2_priority v4l2_prio_max ( s#v4l2_prio_state * ) 
v4l2_prio_check int v4l2_prio_check ( s#v4l2_prio_state * , e#v4l2_priority ) 
__video_register_device int __video_register_device ( s#video_device * , int , int , int , s#module * ) 
video_unregister_device void video_unregister_device ( s#video_device * ) 

/* drivers/media/video/v4l2-device.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##v4l2_ioctl_ops
s##v4l2_events
s##tuner_setup
v4l2_device_register int v4l2_device_register ( s#device * , s#v4l2_device * ) 
v4l2_device_put int v4l2_device_put ( s#v4l2_device * ) 
v4l2_device_set_name int v4l2_device_set_name ( s#v4l2_device * , const char * , t#atomic_t * ) 
v4l2_device_disconnect void v4l2_device_disconnect ( s#v4l2_device * ) 
v4l2_device_unregister void v4l2_device_unregister ( s#v4l2_device * ) 
v4l2_device_register_subdev int v4l2_device_register_subdev ( s#v4l2_device * , s#v4l2_subdev * ) 
v4l2_device_register_subdev_nodes int v4l2_device_register_subdev_nodes ( s#v4l2_device * ) 
v4l2_device_unregister_subdev void v4l2_device_unregister_subdev ( s#v4l2_subdev * ) 

/* drivers/media/video/v4l2-event.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##v4l2_device
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s#v4l2_events struct v4l2_events { t#wait_queue_head_t wait ; s#list_head subscribed ; s#list_head free ; s#list_head available ; unsigned int navailable ; unsigned int nallocated ; t#u32 sequence ; } 
v4l2_event_init int v4l2_event_init ( s#v4l2_fh * ) 
v4l2_event_alloc int v4l2_event_alloc ( s#v4l2_fh * , unsigned int ) 
v4l2_event_free void v4l2_event_free ( s#v4l2_fh * ) 
s#v4l2_event_vsync struct v4l2_event_vsync { t#__u8 field ; } 
s#v4l2_event struct v4l2_event { t#__u32 type ; union { s#v4l2_event_vsync vsync ; t#__u8 data [ 64 ] ; } u ; t#__u32 pending ; t#__u32 sequence ; s#timespec timestamp ; t#__u32 reserved [ 9 ] ; } 
v4l2_event_dequeue int v4l2_event_dequeue ( s#v4l2_fh * , s#v4l2_event * , int ) 
v4l2_event_queue void v4l2_event_queue ( s#video_device * , const s#v4l2_event * ) 
v4l2_event_pending int v4l2_event_pending ( s#v4l2_fh * ) 
v4l2_event_subscribe int v4l2_event_subscribe ( s#v4l2_fh * , s#v4l2_event_subscription * ) 
v4l2_event_unsubscribe int v4l2_event_unsubscribe ( s#v4l2_fh * , s#v4l2_event_subscription * ) 

/* drivers/media/video/v4l2-fh.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##v4l2_device
s##v4l2_ctrl_handler
v4l2_fh_init int v4l2_fh_init ( s#v4l2_fh * , s#video_device * ) 
v4l2_fh_add void v4l2_fh_add ( s#v4l2_fh * ) 
v4l2_fh_open int v4l2_fh_open ( s#file * ) 
v4l2_fh_del void v4l2_fh_del ( s#v4l2_fh * ) 
v4l2_fh_exit void v4l2_fh_exit ( s#v4l2_fh * ) 
v4l2_fh_release int v4l2_fh_release ( s#file * ) 
v4l2_fh_is_singular int v4l2_fh_is_singular ( s#v4l2_fh * ) 

/* drivers/media/video/v4l2-int-device.o */
v4l2_int_device_try_attach_all void v4l2_int_device_try_attach_all ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#v4l2_int_type enum v4l2_int_type { v4l2_int_type_master = 1 , v4l2_int_type_slave } 
s#v4l2_int_master struct v4l2_int_master { int ( * attach ) ( s#v4l2_int_device * ) ; void ( * detach ) ( s#v4l2_int_device * ) ; } 
t#v4l2_int_ioctl_func typedef int ( v4l2_int_ioctl_func ) ( s#v4l2_int_device * ) 
s#v4l2_int_ioctl_desc struct v4l2_int_ioctl_desc { int num ; t#v4l2_int_ioctl_func * func ; } 
s#v4l2_int_slave struct v4l2_int_slave { s#v4l2_int_device * master ; char attach_to [ 32 ] ; int num_ioctls ; s#v4l2_int_ioctl_desc * ioctls ; } 
s#v4l2_int_device struct v4l2_int_device { s#list_head head ; s#module * module ; char name [ 32 ] ; e#v4l2_int_type type ; union { s#v4l2_int_master * master ; s#v4l2_int_slave * slave ; } u ; void * priv ; } 
v4l2_int_device_register int v4l2_int_device_register ( s#v4l2_int_device * ) 
v4l2_int_device_unregister void v4l2_int_device_unregister ( s#v4l2_int_device * ) 
v4l2_int_ioctl_0 int v4l2_int_ioctl_0 ( s#v4l2_int_device * , int ) 
v4l2_int_ioctl_1 int v4l2_int_ioctl_1 ( s#v4l2_int_device * , int , void * ) 

/* drivers/media/video/v4l2-ioctl.o */
v4l2_norm_to_name extern const char * v4l2_norm_to_name ( t#v4l2_std_id ) 
v4l2_video_std_frame_period extern void v4l2_video_std_frame_period ( int , s#v4l2_fract * ) 
s#v4l2_standard struct v4l2_standard { t#__u32 index ; t#v4l2_std_id id ; t#__u8 name [ 24 ] ; s#v4l2_fract frameperiod ; t#__u32 framelines ; t#__u32 reserved [ 4 ] ; } 
v4l2_video_std_construct extern int v4l2_video_std_construct ( s#v4l2_standard * , int , const char * ) 
v4l2_field_names extern const char * v4l2_field_names [ ] 
v4l2_type_names extern const char * v4l2_type_names [ ] 
v4l_printk_ioctl extern void v4l_printk_ioctl ( unsigned int ) 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##posix_acl
t#v4l2_kioctl typedef long ( * v4l2_kioctl ) ( s#file * , unsigned int , void * ) 
video_usercopy extern long video_usercopy ( s#file * , unsigned int , unsigned long , t#v4l2_kioctl ) 
video_ioctl2 extern long video_ioctl2 ( s#file * , unsigned int , unsigned long ) 

/* drivers/media/video/v4l2-mem2mem.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s##anon_vma
s##vm_operations_struct
s##vb2_fileio_data
s##v4l2_m2m_dev
s#v4l2_m2m_queue_ctx struct v4l2_m2m_queue_ctx { s#vb2_queue q ; s#list_head rdy_queue ; t#spinlock_t rdy_spinlock ; t#u8 num_rdy ; } 
s#v4l2_m2m_ctx struct v4l2_m2m_ctx { s#v4l2_m2m_dev * m2m_dev ; s#v4l2_m2m_queue_ctx cap_q_ctx ; s#v4l2_m2m_queue_ctx out_q_ctx ; s#list_head queue ; unsigned long job_flags ; t#wait_queue_head_t finished ; void * priv ; } 
v4l2_m2m_get_vq s#vb2_queue * v4l2_m2m_get_vq ( s#v4l2_m2m_ctx * , e#v4l2_buf_type ) 
v4l2_m2m_next_buf void * v4l2_m2m_next_buf ( s#v4l2_m2m_queue_ctx * ) 
v4l2_m2m_buf_remove void * v4l2_m2m_buf_remove ( s#v4l2_m2m_queue_ctx * ) 
v4l2_m2m_get_curr_priv void * v4l2_m2m_get_curr_priv ( s#v4l2_m2m_dev * ) 
v4l2_m2m_job_finish void v4l2_m2m_job_finish ( s#v4l2_m2m_dev * , s#v4l2_m2m_ctx * ) 
v4l2_m2m_reqbufs int v4l2_m2m_reqbufs ( s#file * , s#v4l2_m2m_ctx * , s#v4l2_requestbuffers * ) 
v4l2_m2m_querybuf int v4l2_m2m_querybuf ( s#file * , s#v4l2_m2m_ctx * , s#v4l2_buffer * ) 
v4l2_m2m_qbuf int v4l2_m2m_qbuf ( s#file * , s#v4l2_m2m_ctx * , s#v4l2_buffer * ) 
v4l2_m2m_dqbuf int v4l2_m2m_dqbuf ( s#file * , s#v4l2_m2m_ctx * , s#v4l2_buffer * ) 
v4l2_m2m_streamon int v4l2_m2m_streamon ( s#file * , s#v4l2_m2m_ctx * , e#v4l2_buf_type ) 
v4l2_m2m_streamoff int v4l2_m2m_streamoff ( s#file * , s#v4l2_m2m_ctx * , e#v4l2_buf_type ) 
v4l2_m2m_poll unsigned int v4l2_m2m_poll ( s#file * , s#v4l2_m2m_ctx * , s#poll_table_struct * ) 
v4l2_m2m_mmap int v4l2_m2m_mmap ( s#file * , s#v4l2_m2m_ctx * , s#vm_area_struct * ) 
s#v4l2_m2m_ops struct v4l2_m2m_ops { void ( * device_run ) ( void * ) ; int ( * job_ready ) ( void * ) ; void ( * job_abort ) ( void * ) ; void ( * lock ) ( void * ) ; void ( * unlock ) ( void * ) ; } 
v4l2_m2m_init s#v4l2_m2m_dev * v4l2_m2m_init ( s#v4l2_m2m_ops * ) 
v4l2_m2m_release void v4l2_m2m_release ( s#v4l2_m2m_dev * ) 
v4l2_m2m_ctx_init s#v4l2_m2m_ctx * v4l2_m2m_ctx_init ( s#v4l2_m2m_dev * , void * , int ( * ) ( void * , s#vb2_queue * , s#vb2_queue * ) ) 
v4l2_m2m_ctx_release void v4l2_m2m_ctx_release ( s#v4l2_m2m_ctx * ) 
v4l2_m2m_buf_queue void v4l2_m2m_buf_queue ( s#v4l2_m2m_ctx * , s#vb2_buffer * ) 

/* drivers/media/video/v4l2-subdev.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##tuner_setup
v4l2_subdev_init void v4l2_subdev_init ( s#v4l2_subdev * , const s#v4l2_subdev_ops * ) 

/* drivers/media/video/videobuf-core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device
videobuf_alloc_vb s#videobuf_buffer * videobuf_alloc_vb ( s#videobuf_queue * ) 
videobuf_waiton int videobuf_waiton ( s#videobuf_queue * , s#videobuf_buffer * , int , int ) 
videobuf_iolock int videobuf_iolock ( s#videobuf_queue * , s#videobuf_buffer * , s#v4l2_framebuffer * ) 
videobuf_queue_to_vaddr void * videobuf_queue_to_vaddr ( s#videobuf_queue * , s#videobuf_buffer * ) 
videobuf_queue_core_init void videobuf_queue_core_init ( s#videobuf_queue * , const s#videobuf_queue_ops * , s#device * , t#spinlock_t * , e#v4l2_buf_type , e#v4l2_field , unsigned int , void * , s#videobuf_qtype_ops * , s#mutex * ) 
videobuf_queue_is_busy int videobuf_queue_is_busy ( s#videobuf_queue * ) 
videobuf_queue_cancel void videobuf_queue_cancel ( s#videobuf_queue * ) 
videobuf_next_field e#v4l2_field videobuf_next_field ( s#videobuf_queue * ) 
videobuf_mmap_free int videobuf_mmap_free ( s#videobuf_queue * ) 
__videobuf_mmap_setup int __videobuf_mmap_setup ( s#videobuf_queue * , unsigned int , unsigned int , e#v4l2_memory ) 
videobuf_mmap_setup int videobuf_mmap_setup ( s#videobuf_queue * , unsigned int , unsigned int , e#v4l2_memory ) 
videobuf_reqbufs int videobuf_reqbufs ( s#videobuf_queue * , s#v4l2_requestbuffers * ) 
videobuf_querybuf int videobuf_querybuf ( s#videobuf_queue * , s#v4l2_buffer * ) 
videobuf_qbuf int videobuf_qbuf ( s#videobuf_queue * , s#v4l2_buffer * ) 
videobuf_dqbuf int videobuf_dqbuf ( s#videobuf_queue * , s#v4l2_buffer * , int ) 
videobuf_streamon int videobuf_streamon ( s#videobuf_queue * ) 
videobuf_streamoff int videobuf_streamoff ( s#videobuf_queue * ) 
videobuf_read_one t#ssize_t videobuf_read_one ( s#videobuf_queue * , char * , t#size_t , t#loff_t * , int ) 
videobuf_read_start int videobuf_read_start ( s#videobuf_queue * ) 
videobuf_read_stop void videobuf_read_stop ( s#videobuf_queue * ) 
videobuf_stop void videobuf_stop ( s#videobuf_queue * ) 
videobuf_read_stream t#ssize_t videobuf_read_stream ( s#videobuf_queue * , char * , t#size_t , t#loff_t * , int , int ) 
videobuf_poll_stream unsigned int videobuf_poll_stream ( s#file * , s#videobuf_queue * , t#poll_table * ) 
videobuf_mmap_mapper int videobuf_mmap_mapper ( s#videobuf_queue * , s#vm_area_struct * ) 

/* drivers/media/video/videobuf-dma-contig.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
videobuf_queue_dma_contig_init void videobuf_queue_dma_contig_init ( s#videobuf_queue * , const s#videobuf_queue_ops * , s#device * , t#spinlock_t * , e#v4l2_buf_type , e#v4l2_field , unsigned int , void * , s#mutex * ) 
videobuf_to_dma_contig t#dma_addr_t videobuf_to_dma_contig ( s#videobuf_buffer * ) 
videobuf_dma_contig_free void videobuf_dma_contig_free ( s#videobuf_queue * , s#videobuf_buffer * ) 

/* drivers/media/video/videobuf-dma-sg.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s#videobuf_dmabuf struct videobuf_dmabuf { t#u32 magic ; int offset ; t#size_t size ; s#page * * pages ; void * vaddr ; t#dma_addr_t bus_addr ; s#scatterlist * sglist ; int sglen ; int nr_pages ; int direction ; } 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
videobuf_to_dma s#videobuf_dmabuf * videobuf_to_dma ( s#videobuf_buffer * ) 
videobuf_dma_init void videobuf_dma_init ( s#videobuf_dmabuf * ) 
videobuf_dma_init_user int videobuf_dma_init_user ( s#videobuf_dmabuf * , int , unsigned long , unsigned long ) 
videobuf_dma_init_kernel int videobuf_dma_init_kernel ( s#videobuf_dmabuf * , int , int ) 
videobuf_dma_init_overlay int videobuf_dma_init_overlay ( s#videobuf_dmabuf * , int , t#dma_addr_t , int ) 
videobuf_dma_map int videobuf_dma_map ( s#device * , s#videobuf_dmabuf * ) 
videobuf_dma_unmap int videobuf_dma_unmap ( s#device * , s#videobuf_dmabuf * ) 
videobuf_dma_free int videobuf_dma_free ( s#videobuf_dmabuf * ) 
videobuf_sg_alloc void * videobuf_sg_alloc ( t#size_t ) 
videobuf_queue_sg_init void videobuf_queue_sg_init ( s#videobuf_queue * , const s#videobuf_queue_ops * , s#device * , t#spinlock_t * , e#v4l2_buf_type , e#v4l2_field , unsigned int , void * , s#mutex * ) 

/* drivers/media/video/videobuf-dvb.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
videobuf_dvb_register_bus int videobuf_dvb_register_bus ( s#videobuf_dvb_frontends * , s#module * , void * , s#device * , short * , int , int ( * ) ( s#dvb_frontend * , unsigned int , void * , unsigned int ) ) 
videobuf_dvb_unregister_bus void videobuf_dvb_unregister_bus ( s#videobuf_dvb_frontends * ) 
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s#videobuf_dvb struct videobuf_dvb { char * name ; s#dvb_frontend * frontend ; s#videobuf_queue dvbq ; s#mutex lock ; s#task_struct * thread ; int nfeeds ; s#dvb_demux demux ; s#dmxdev dmxdev ; s#dmx_frontend fe_hw ; s#dmx_frontend fe_mem ; s#dvb_net net ; } 
s#videobuf_dvb_frontend struct videobuf_dvb_frontend { s#list_head felist ; int id ; s#videobuf_dvb dvb ; } 
videobuf_dvb_get_frontend s#videobuf_dvb_frontend * videobuf_dvb_get_frontend ( s#videobuf_dvb_frontends * , int ) 
videobuf_dvb_find_frontend int videobuf_dvb_find_frontend ( s#videobuf_dvb_frontends * , s#dvb_frontend * ) 
videobuf_dvb_alloc_frontend s#videobuf_dvb_frontend * videobuf_dvb_alloc_frontend ( s#videobuf_dvb_frontends * , int ) 
videobuf_dvb_dealloc_frontends void videobuf_dvb_dealloc_frontends ( s#videobuf_dvb_frontends * ) 

/* drivers/media/video/videobuf-vmalloc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
videobuf_queue_vmalloc_init void videobuf_queue_vmalloc_init ( s#videobuf_queue * , const s#videobuf_queue_ops * , s#device * , t#spinlock_t * , e#v4l2_buf_type , e#v4l2_field , unsigned int , void * , s#mutex * ) 
videobuf_to_vmalloc void * videobuf_to_vmalloc ( s#videobuf_buffer * ) 
videobuf_vmalloc_free void videobuf_vmalloc_free ( s#videobuf_buffer * ) 

/* drivers/media/video/videobuf2-core.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s##anon_vma
s##vb2_fileio_data
vb2_querybuf int vb2_querybuf ( s#vb2_queue * , s#v4l2_buffer * ) 
vb2_reqbufs int vb2_reqbufs ( s#vb2_queue * , s#v4l2_requestbuffers * ) 
vb2_plane_vaddr void * vb2_plane_vaddr ( s#vb2_buffer * , unsigned int ) 
vb2_plane_cookie void * vb2_plane_cookie ( s#vb2_buffer * , unsigned int ) 
vb2_buffer_done void vb2_buffer_done ( s#vb2_buffer * , e#vb2_buffer_state ) 
vb2_qbuf int vb2_qbuf ( s#vb2_queue * , s#v4l2_buffer * ) 
vb2_wait_for_all_buffers int vb2_wait_for_all_buffers ( s#vb2_queue * ) 
vb2_dqbuf int vb2_dqbuf ( s#vb2_queue * , s#v4l2_buffer * , t#bool ) 
vb2_streamon int vb2_streamon ( s#vb2_queue * , e#v4l2_buf_type ) 
vb2_streamoff int vb2_streamoff ( s#vb2_queue * , e#v4l2_buf_type ) 
vb2_mmap int vb2_mmap ( s#vb2_queue * , s#vm_area_struct * ) 
vb2_poll unsigned int vb2_poll ( s#vb2_queue * , s#file * , t#poll_table * ) 
vb2_queue_init int vb2_queue_init ( s#vb2_queue * ) 
vb2_queue_release void vb2_queue_release ( s#vb2_queue * ) 
vb2_read t#size_t vb2_read ( s#vb2_queue * , char * , t#size_t , t#loff_t * , int ) 
vb2_write t#size_t vb2_write ( s#vb2_queue * , char * , t#size_t , t#loff_t * , int ) 

/* drivers/media/video/videobuf2-memops.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s##anon_vma
vb2_put_vma void vb2_put_vma ( s#vm_area_struct * ) 
vb2_get_contig_userptr int vb2_get_contig_userptr ( unsigned long , unsigned long , s#vm_area_struct * * , t#dma_addr_t * ) 
vb2_mmap_pfn_range int vb2_mmap_pfn_range ( s#vm_area_struct * , unsigned long , unsigned long , const s#vm_operations_struct * , void * ) 
vb2_common_vm_ops extern const s#vm_operations_struct vb2_common_vm_ops 

/* drivers/media/video/videobuf2-vmalloc.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s##anon_vma
vb2_vmalloc_memops const s#vb2_mem_ops vb2_vmalloc_memops 

/* drivers/memstick/core/memstick.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#memstick_device_id struct memstick_device_id { unsigned char match_flags ; unsigned char type ; unsigned char category ; unsigned char class ; } 
s#ms_register_addr struct ms_register_addr { unsigned char r_offset ; unsigned char r_length ; unsigned char w_offset ; unsigned char w_length ; } 
s#memstick_request struct memstick_request { unsigned char tpc ; unsigned char data_dir : 1 , need_card_int : 1 , long_data : 1 ; unsigned char int_reg ; int error ; union { s#scatterlist sg ; struct { unsigned char data_len ; unsigned char data [ 15 ] ; } ; } ; } 
s#memstick_dev struct memstick_dev { s#memstick_device_id id ; s#memstick_host * host ; s#ms_register_addr reg_addr ; s#completion mrq_complete ; s#memstick_request current_mrq ; int ( * check ) ( s#memstick_dev * ) ; int ( * next_request ) ( s#memstick_dev * , s#memstick_request * * ) ; void ( * stop ) ( s#memstick_dev * ) ; void ( * start ) ( s#memstick_dev * ) ; s#device dev ; } 
e#memstick_param enum memstick_param { MEMSTICK_POWER = 1 , MEMSTICK_INTERFACE } 
s#memstick_host struct memstick_host { s#mutex lock ; unsigned int id ; unsigned int caps ; s#work_struct media_checker ; s#device dev ; s#memstick_dev * card ; unsigned int retries ; void ( * request ) ( s#memstick_host * ) ; int ( * set_param ) ( s#memstick_host * , e#memstick_param , int ) ; unsigned long private [ 0 ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
memstick_detect_change void memstick_detect_change ( s#memstick_host * ) 
memstick_next_req int memstick_next_req ( s#memstick_host * , s#memstick_request * * ) 
memstick_new_req void memstick_new_req ( s#memstick_host * ) 
memstick_init_req_sg void memstick_init_req_sg ( s#memstick_request * , unsigned char , const s#scatterlist * ) 
memstick_init_req void memstick_init_req ( s#memstick_request * , unsigned char , const void * , t#size_t ) 
memstick_set_rw_addr int memstick_set_rw_addr ( s#memstick_dev * ) 
memstick_alloc_host s#memstick_host * memstick_alloc_host ( unsigned int , s#device * ) 
memstick_add_host int memstick_add_host ( s#memstick_host * ) 
memstick_remove_host void memstick_remove_host ( s#memstick_host * ) 
memstick_free_host void memstick_free_host ( s#memstick_host * ) 
memstick_suspend_host void memstick_suspend_host ( s#memstick_host * ) 
memstick_resume_host void memstick_resume_host ( s#memstick_host * ) 
s#memstick_driver struct memstick_driver { s#memstick_device_id * id_table ; int ( * probe ) ( s#memstick_dev * ) ; void ( * remove ) ( s#memstick_dev * ) ; int ( * suspend ) ( s#memstick_dev * , t#pm_message_t ) ; int ( * resume ) ( s#memstick_dev * ) ; s#device_driver driver ; } 
memstick_register_driver int memstick_register_driver ( s#memstick_driver * ) 
memstick_unregister_driver void memstick_unregister_driver ( s#memstick_driver * ) 

/* drivers/memstick/host/r592.o */
memstick_debug_get_tpc_name const char * memstick_debug_get_tpc_name ( int ) 

/* drivers/message/fusion/mptbase.o */
mpt_debug_level extern int mpt_debug_level 
mpt_fwfault_debug extern int mpt_fwfault_debug 
s#_SYSIF_REGS struct _SYSIF_REGS { t#u32 Doorbell ; t#u32 WriteSequence ; t#u32 Diagnostic ; t#u32 TestBase ; t#u32 DiagRwData ; t#u32 DiagRwAddress ; t#u32 Reserved1 [ 6 ] ; t#u32 IntStatus ; t#u32 IntMask ; t#u32 Reserved2 [ 2 ] ; t#u32 RequestFifo ; t#u32 ReplyFifo ; t#u32 RequestHiPriFifo ; t#u32 Reserved3 ; t#u32 HostIndex ; t#u32 Reserved4 [ 15 ] ; t#u32 Fubar ; t#u32 Reserved5 [ 1050 ] ; t#u32 Reset_1078 ; } 
t#SYSIF_REGS typedef s#_SYSIF_REGS SYSIF_REGS 
t#U8 typedef unsigned char U8 
t#U32 typedef unsigned int U32 
s#_MSG_REQUEST_HEADER struct _MSG_REQUEST_HEADER { t#U8 Reserved [ 2 ] ; t#U8 ChainOffset ; t#U8 Function ; t#U8 Reserved1 [ 3 ] ; t#U8 MsgFlags ; t#U32 MsgContext ; } 
t#MPIHeader_t typedef s#_MSG_REQUEST_HEADER MPIHeader_t 
s#_U64 struct _U64 { t#U32 Low ; t#U32 High ; } 
t#U64 typedef s#_U64 U64 
s#_SGE_SIMPLE_UNION struct _SGE_SIMPLE_UNION { t#U32 FlagsLength ; union { t#U32 Address32 ; t#U64 Address64 ; } u ; } 
t#SGE_SIMPLE_UNION typedef s#_SGE_SIMPLE_UNION SGE_SIMPLE_UNION 
t#U16 typedef unsigned short U16 
s#_SGE_CHAIN_UNION struct _SGE_CHAIN_UNION { t#U16 Length ; t#U8 NextChainOffset ; t#U8 Flags ; union { t#U32 Address32 ; t#U64 Address64 ; } u ; } 
t#SGE_CHAIN_UNION typedef s#_SGE_CHAIN_UNION SGE_CHAIN_UNION 
s#_SGE_IO_UNION struct _SGE_IO_UNION { union { t#SGE_SIMPLE_UNION Simple ; t#SGE_CHAIN_UNION Chain ; } u ; } 
t#SGE_IO_UNION typedef s#_SGE_IO_UNION SGE_IO_UNION 
s#_MSG_SCSI_IO_REQUEST struct _MSG_SCSI_IO_REQUEST { t#U8 TargetID ; t#U8 Bus ; t#U8 ChainOffset ; t#U8 Function ; t#U8 CDBLength ; t#U8 SenseBufferLength ; t#U8 Reserved ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 LUN [ 8 ] ; t#U32 Control ; t#U8 CDB [ 16 ] ; t#U32 DataLength ; t#U32 SenseBufferLowAddr ; t#SGE_IO_UNION SGL ; } 
t#SCSIIORequest_t typedef s#_MSG_SCSI_IO_REQUEST SCSIIORequest_t 
s#_MSG_SCSI_IO_REPLY struct _MSG_SCSI_IO_REPLY { t#U8 TargetID ; t#U8 Bus ; t#U8 MsgLength ; t#U8 Function ; t#U8 CDBLength ; t#U8 SenseBufferLength ; t#U8 Reserved ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 SCSIStatus ; t#U8 SCSIState ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U32 TransferCount ; t#U32 SenseCount ; t#U32 ResponseInfo ; t#U16 TaskTag ; t#U16 Reserved1 ; } 
t#SCSIIOReply_t typedef s#_MSG_SCSI_IO_REPLY SCSIIOReply_t 
s#_CONFIG_PAGE_HEADER struct _CONFIG_PAGE_HEADER { t#U8 PageVersion ; t#U8 PageLength ; t#U8 PageNumber ; t#U8 PageType ; } 
t#CONFIG_PAGE_HEADER typedef s#_CONFIG_PAGE_HEADER CONFIG_PAGE_HEADER 
s#_MSG_CONFIG_REPLY struct _MSG_CONFIG_REPLY { t#U8 Action ; t#U8 Reserved ; t#U8 MsgLength ; t#U8 Function ; t#U16 ExtPageLength ; t#U8 ExtPageType ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#CONFIG_PAGE_HEADER Header ; } 
t#ConfigReply_t typedef s#_MSG_CONFIG_REPLY ConfigReply_t 
s#_MSG_DEFAULT_REPLY struct _MSG_DEFAULT_REPLY { t#U8 Reserved [ 2 ] ; t#U8 MsgLength ; t#U8 Function ; t#U8 Reserved1 [ 3 ] ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; } 
t#MPIDefaultReply_t typedef s#_MSG_DEFAULT_REPLY MPIDefaultReply_t 
u#_MPT_FRAME_TRACKER union _MPT_FRAME_TRACKER { struct { s#list_head list ; t#u32 arg1 ; t#u32 pad ; void * argp1 ; } linkage ; struct { t#u32 __hdr [ 2 ] ; union { t#u32 MsgContext ; struct { t#u16 req_idx ; t#u8 cb_idx ; t#u8 rsvd ; } fld ; } msgctxu ; } hwhdr ; } 
t#MPT_FRAME_TRACKER typedef u#_MPT_FRAME_TRACKER MPT_FRAME_TRACKER 
s#_MPT_FRAME_HDR struct _MPT_FRAME_HDR { union { t#MPIHeader_t hdr ; t#SCSIIORequest_t scsireq ; t#SCSIIOReply_t sreply ; t#ConfigReply_t configreply ; t#MPIDefaultReply_t reply ; t#MPT_FRAME_TRACKER frame ; } u ; } 
t#MPT_FRAME_HDR typedef s#_MPT_FRAME_HDR MPT_FRAME_HDR 
t#MPT_ADD_SGE typedef void ( * MPT_ADD_SGE ) ( void * , t#u32 , t#dma_addr_t ) 
t#MPT_ADD_CHAIN typedef void ( * MPT_ADD_CHAIN ) ( void * , t#u8 , t#u16 , t#dma_addr_t ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##scsi_host_cmd_pool
s##scsi_device
s##scsi_cmnd
s##scsi_target
s##scsi_transport_template
s##workqueue_struct
s#_IOC_4_SEP struct _IOC_4_SEP { t#U8 SEPTargetID ; t#U8 SEPBus ; t#U16 Reserved ; } 
t#IOC_4_SEP typedef s#_IOC_4_SEP IOC_4_SEP 
s#_CONFIG_PAGE_IOC_4 struct _CONFIG_PAGE_IOC_4 { t#CONFIG_PAGE_HEADER Header ; t#U8 ActiveSEP ; t#U8 MaxSEP ; t#U16 Reserved1 ; t#IOC_4_SEP SEP [ ( 1 ) ] ; } 
t#IOCPage4_t typedef s#_CONFIG_PAGE_IOC_4 IOCPage4_t 
s#_SpiCfgData struct _SpiCfgData { t#u32 PortFlags ; int * nvram ; t#IOCPage4_t * pIocPg4 ; t#dma_addr_t IocPg4_dma ; int IocPg4Sz ; t#u8 minSyncFactor ; t#u8 maxSyncOffset ; t#u8 maxBusWidth ; t#u8 busType ; t#u8 sdp1version ; t#u8 sdp1length ; t#u8 sdp0version ; t#u8 sdp0length ; t#u8 dvScheduled ; t#u8 noQas ; t#u8 Saf_Te ; t#u8 bus_reset ; t#u8 rsvd [ 1 ] ; } 
t#SpiCfgData typedef s#_SpiCfgData SpiCfgData 
s#_CONFIG_PAGE_IOC_2_RAID_VOL struct _CONFIG_PAGE_IOC_2_RAID_VOL { t#U8 VolumeID ; t#U8 VolumeBus ; t#U8 VolumeIOC ; t#U8 VolumePageNumber ; t#U8 VolumeType ; t#U8 Flags ; t#U16 Reserved3 ; } 
t#CONFIG_PAGE_IOC_2_RAID_VOL typedef s#_CONFIG_PAGE_IOC_2_RAID_VOL CONFIG_PAGE_IOC_2_RAID_VOL 
s#_CONFIG_PAGE_IOC_2 struct _CONFIG_PAGE_IOC_2 { t#CONFIG_PAGE_HEADER Header ; t#U32 CapabilitiesFlags ; t#U8 NumActiveVolumes ; t#U8 MaxVolumes ; t#U8 NumActivePhysDisks ; t#U8 MaxPhysDisks ; t#CONFIG_PAGE_IOC_2_RAID_VOL RaidVolume [ ( 1 ) ] ; } 
t#IOCPage2_t typedef s#_CONFIG_PAGE_IOC_2 IOCPage2_t 
s#_IOC_3_PHYS_DISK struct _IOC_3_PHYS_DISK { t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U8 PhysDiskIOC ; t#U8 PhysDiskNum ; } 
t#IOC_3_PHYS_DISK typedef s#_IOC_3_PHYS_DISK IOC_3_PHYS_DISK 
s#_CONFIG_PAGE_IOC_3 struct _CONFIG_PAGE_IOC_3 { t#CONFIG_PAGE_HEADER Header ; t#U8 NumPhysDisks ; t#U8 Reserved1 ; t#U16 Reserved2 ; t#IOC_3_PHYS_DISK PhysDisk [ ( 1 ) ] ; } 
t#IOCPage3_t typedef s#_CONFIG_PAGE_IOC_3 IOCPage3_t 
s#_CONFIG_PAGE_IOC_6 struct _CONFIG_PAGE_IOC_6 { t#CONFIG_PAGE_HEADER Header ; t#U32 CapabilitiesFlags ; t#U8 MaxDrivesIS ; t#U8 MaxDrivesIM ; t#U8 MaxDrivesIME ; t#U8 Reserved1 ; t#U8 MinDrivesIS ; t#U8 MinDrivesIM ; t#U8 MinDrivesIME ; t#U8 Reserved2 ; t#U8 MaxGlobalHotSpares ; t#U8 Reserved3 ; t#U16 Reserved4 ; t#U32 Reserved5 ; t#U32 SupportedStripeSizeMapIS ; t#U32 SupportedStripeSizeMapIME ; t#U32 Reserved6 ; t#U8 MetadataSize ; t#U8 Reserved7 ; t#U16 Reserved8 ; t#U16 MaxBadBlockTableEntries ; t#U16 Reserved9 ; t#U16 IRNvsramUsage ; t#U16 Reserved10 ; t#U32 IRNvsramVersion ; t#U32 Reserved11 ; t#U32 Reserved12 ; } 
t#IOCPage6_t typedef s#_CONFIG_PAGE_IOC_6 IOCPage6_t 
s#_RaidCfgData struct _RaidCfgData { t#IOCPage2_t * pIocPg2 ; t#IOCPage3_t * pIocPg3 ; t#IOCPage6_t * pIocPg6 ; s#mutex inactive_list_mutex ; s#list_head inactive_list ; } 
t#RaidCfgData typedef s#_RaidCfgData RaidCfgData 
s#_SasCfgData struct _SasCfgData { t#u8 ptClear ; } 
t#SasCfgData typedef s#_SasCfgData SasCfgData 
s#_CONFIG_PAGE_FC_PORT_1 struct _CONFIG_PAGE_FC_PORT_1 { t#CONFIG_PAGE_HEADER Header ; t#U32 Flags ; t#U64 NoSEEPROMWWNN ; t#U64 NoSEEPROMWWPN ; t#U8 HardALPA ; t#U8 LinkConfig ; t#U8 TopologyConfig ; t#U8 AltConnector ; t#U8 NumRequestedAliases ; t#U8 RR_TOV ; t#U8 InitiatorDeviceTimeout ; t#U8 InitiatorIoPendTimeout ; } 
t#FCPortPage1_t typedef s#_CONFIG_PAGE_FC_PORT_1 FCPortPage1_t 
s#_FcCfgData struct _FcCfgData { struct { t#FCPortPage1_t * data ; t#dma_addr_t dma ; int pg_sz ; } fc_port_page1 [ 2 ] ; } 
t#FcCfgData typedef s#_FcCfgData FcCfgData 
s#_mpt_ioctl_events struct _mpt_ioctl_events { t#u32 event ; t#u32 eventContext ; t#u32 data [ 2 ] ; } 
s#_MPI_FW_VERSION_STRUCT struct _MPI_FW_VERSION_STRUCT { t#U8 Dev ; t#U8 Unit ; t#U8 Minor ; t#U8 Major ; } 
t#MPI_FW_VERSION_STRUCT typedef s#_MPI_FW_VERSION_STRUCT MPI_FW_VERSION_STRUCT 
u#_MPI_FW_VERSION union _MPI_FW_VERSION { t#MPI_FW_VERSION_STRUCT Struct ; t#U32 Word ; } 
t#MPI_FW_VERSION typedef u#_MPI_FW_VERSION MPI_FW_VERSION 
s#_MSG_IOC_FACTS_REPLY struct _MSG_IOC_FACTS_REPLY { t#U16 MsgVersion ; t#U8 MsgLength ; t#U8 Function ; t#U16 HeaderVersion ; t#U8 IOCNumber ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U16 IOCExceptions ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U8 MaxChainDepth ; t#U8 WhoInit ; t#U8 BlockSize ; t#U8 Flags ; t#U16 ReplyQueueDepth ; t#U16 RequestFrameSize ; t#U16 Reserved_0101_FWVersion ; t#U16 ProductID ; t#U32 CurrentHostMfaHighAddr ; t#U16 GlobalCredits ; t#U8 NumberOfPorts ; t#U8 EventState ; t#U32 CurrentSenseBufferHighAddr ; t#U16 CurReplyFrameSize ; t#U8 MaxDevices ; t#U8 MaxBuses ; t#U32 FWImageSize ; t#U32 IOCCapabilities ; t#MPI_FW_VERSION FWVersion ; t#U16 HighPriorityQueueDepth ; t#U16 Reserved2 ; t#SGE_SIMPLE_UNION HostPageBufferSGE ; t#U32 ReplyFifoHostSignalingAddr ; } 
t#IOCFactsReply_t typedef s#_MSG_IOC_FACTS_REPLY IOCFactsReply_t 
s#_MSG_PORT_FACTS_REPLY struct _MSG_PORT_FACTS_REPLY { t#U16 Reserved ; t#U8 MsgLength ; t#U8 Function ; t#U16 Reserved1 ; t#U8 PortNumber ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U16 Reserved2 ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U8 Reserved3 ; t#U8 PortType ; t#U16 MaxDevices ; t#U16 PortSCSIID ; t#U16 ProtocolFlags ; t#U16 MaxPostedCmdBuffers ; t#U16 MaxPersistentIDs ; t#U16 MaxLanBuckets ; t#U8 MaxInitiators ; t#U8 Reserved4 ; t#U32 Reserved5 ; } 
t#PortFactsReply_t typedef s#_MSG_PORT_FACTS_REPLY PortFactsReply_t 
s#_CONFIG_PAGE_FC_PORT_0 struct _CONFIG_PAGE_FC_PORT_0 { t#CONFIG_PAGE_HEADER Header ; t#U32 Flags ; t#U8 MPIPortNumber ; t#U8 LinkType ; t#U8 PortState ; t#U8 Reserved ; t#U32 PortIdentifier ; t#U64 WWNN ; t#U64 WWPN ; t#U32 SupportedServiceClass ; t#U32 SupportedSpeeds ; t#U32 CurrentSpeed ; t#U32 MaxFrameSize ; t#U64 FabricWWNN ; t#U64 FabricWWPN ; t#U32 DiscoveredPortsCount ; t#U32 MaxInitiators ; t#U8 MaxAliasesSupported ; t#U8 MaxHardAliasesSupported ; t#U8 NumCurrentAliases ; t#U8 Reserved1 ; } 
t#FCPortPage0_t typedef s#_CONFIG_PAGE_FC_PORT_0 FCPortPage0_t 
t#ConfigPageHeader_t typedef s#_CONFIG_PAGE_HEADER ConfigPageHeader_t 
s#_CONFIG_PAGE_LAN_0 struct _CONFIG_PAGE_LAN_0 { t#ConfigPageHeader_t Header ; t#U16 TxRxModes ; t#U16 Reserved ; t#U32 PacketPrePad ; } 
t#LANPage0_t typedef s#_CONFIG_PAGE_LAN_0 LANPage0_t 
s#_CONFIG_PAGE_LAN_1 struct _CONFIG_PAGE_LAN_1 { t#ConfigPageHeader_t Header ; t#U16 Reserved ; t#U8 CurrentDeviceState ; t#U8 Reserved1 ; t#U32 MinPacketSize ; t#U32 MaxPacketSize ; t#U32 HardwareAddressLow ; t#U32 HardwareAddressHigh ; t#U32 MaxWireSpeedLow ; t#U32 MaxWireSpeedHigh ; t#U32 BucketsRemaining ; t#U32 MaxReplySize ; t#U32 NegWireSpeedLow ; t#U32 NegWireSpeedHigh ; } 
t#LANPage1_t typedef s#_CONFIG_PAGE_LAN_1 LANPage1_t 
s##net_device
s##mptsas_portinfo
s#_MPT_MGMT struct _MPT_MGMT { s#mutex mutex ; s#completion done ; t#u8 reply [ 128 ] ; t#u8 sense [ 64 ] ; t#u8 status ; int completion_code ; t#u32 msg_context ; } 
t#MPT_MGMT typedef s#_MPT_MGMT MPT_MGMT 
t#MPT_SCHEDULE_TARGET_RESET typedef void ( * MPT_SCHEDULE_TARGET_RESET ) ( void * ) 
t#ushort typedef unsigned short ushort 
s#_MPT_SCSI_HOST struct _MPT_SCSI_HOST { s#_MPT_ADAPTER * ioc ; t#ushort sel_timeout [ 255 ] ; char * info_kbuf ; long last_queue_full ; t#u16 spi_pending ; s#list_head target_reset_list ; } 
t#MPT_SCSI_HOST typedef s#_MPT_SCSI_HOST MPT_SCSI_HOST 
t#MPT_FLUSH_RUNNING_CMDS typedef void ( * MPT_FLUSH_RUNNING_CMDS ) ( t#MPT_SCSI_HOST * ) 
s#_MPT_ADAPTER struct _MPT_ADAPTER { int id ; int pci_irq ; char name [ 32 ] ; const char * prod_name ; char evStr [ 100 ] ; char board_name [ 16 ] ; char board_assembly [ 16 ] ; char board_tracer [ 16 ] ; t#u16 nvdata_version_persistent ; t#u16 nvdata_version_default ; int debug_level ; t#u8 io_missing_delay ; t#u16 device_missing_delay ; t#SYSIF_REGS * chip ; t#SYSIF_REGS * pio_chip ; t#u8 bus_type ; unsigned long mem_phys ; unsigned long pio_mem_phys ; int mem_size ; int number_of_buses ; int devices_per_bus ; int alloc_total ; t#u32 last_state ; int active ; t#u8 * alloc ; t#dma_addr_t alloc_dma ; t#u32 alloc_sz ; t#MPT_FRAME_HDR * reply_frames ; t#u32 reply_frames_low_dma ; int reply_depth ; int reply_sz ; int num_chain ; t#MPT_ADD_SGE add_sge ; t#MPT_ADD_CHAIN add_chain ; int * ReqToChain ; int * RequestNB ; int * ChainToChain ; t#u8 * ChainBuffer ; t#dma_addr_t ChainBufferDMA ; s#list_head FreeChainQ ; t#spinlock_t FreeChainQlock ; t#dma_addr_t req_frames_dma ; t#MPT_FRAME_HDR * req_frames ; t#u32 req_frames_low_dma ; int req_depth ; int req_sz ; t#spinlock_t FreeQlock ; s#list_head FreeQ ; t#u8 * sense_buf_pool ; t#dma_addr_t sense_buf_pool_dma ; t#u32 sense_buf_low_dma ; t#u8 * HostPageBuffer ; t#u32 HostPageBuffer_sz ; t#dma_addr_t HostPageBuffer_dma ; int mtrr_reg ; s#pci_dev * pcidev ; int bars ; int msi_enable ; t#u8 * memmap ; s#Scsi_Host * sh ; t#SpiCfgData spi_data ; t#RaidCfgData raid_data ; t#SasCfgData sas_data ; t#FcCfgData fc_data ; s#proc_dir_entry * ioc_dentry ; s#_MPT_ADAPTER * alt_ioc ; t#u32 biosVersion ; int eventTypes ; int eventContext ; int eventLogSize ; s#_mpt_ioctl_events * events ; t#u8 * cached_fw ; t#dma_addr_t cached_fw_dma ; int hs_reply_idx ; t#u32 pad0 ; t#u32 NB_for_64_byte_frame ; t#u32 hs_req [ 128 / sizeof ( u32 ) ] ; t#u16 hs_reply [ 128 / sizeof ( u16 ) ] ; t#IOCFactsReply_t facts ; t#PortFactsReply_t pfacts [ 2 ] ; t#FCPortPage0_t fc_port_page0 [ 2 ] ; t#LANPage0_t lan_cnfg_page0 ; t#LANPage1_t lan_cnfg_page1 ; t#u32 csmi_change_count ; t#u8 pci_slot_number ; t#u8 ir_firmware ; int errata_flag_1064 ; int aen_event_read_flag ; t#u8 FirstWhoInit ; t#u8 upload_fw ; t#u8 NBShiftFactor ; t#u8 DoneCtx ; t#u8 TaskCtx ; t#u8 InternalCtx ; s#list_head list ; s#net_device * netdev ; s#list_head sas_topology ; s#mutex sas_topology_mutex ; t#u8 disable_hotplug_remove ; s#workqueue_struct * fw_event_q ; s#list_head fw_event_list ; t#spinlock_t fw_event_lock ; t#u8 fw_events_off ; char fw_event_q_name [ 20 ] ; s#mptsas_portinfo * hba_port_info ; t#u64 hba_port_sas_addr ; t#u16 hba_port_num_phy ; s#list_head sas_device_info_list ; s#mutex sas_device_info_mutex ; t#u8 old_sas_discovery_protocal ; t#u8 sas_discovery_quiesce_io ; int sas_index ; t#MPT_MGMT sas_mgmt ; t#MPT_MGMT internal_cmds ; t#MPT_MGMT mptbase_cmds ; t#MPT_MGMT taskmgmt_cmds ; t#MPT_MGMT ioctl_cmds ; t#spinlock_t taskmgmt_lock ; int taskmgmt_in_progress ; t#u8 taskmgmt_quiesce_io ; t#u8 ioc_reset_in_progress ; t#u8 reset_status ; t#u8 wait_on_reset_completion ; t#MPT_SCHEDULE_TARGET_RESET schedule_target_reset ; t#MPT_FLUSH_RUNNING_CMDS schedule_dead_ioc_flush_running_cmds ; t#u8 num_ports ; char reset_work_q_name [ 20 ] ; s#workqueue_struct * reset_work_q ; s#delayed_work fault_reset_work ; s#work_struct fc_setup_reset_work ; s#list_head fc_rports ; s#work_struct fc_lsc_work ; t#u8 fc_link_speed [ 2 ] ; t#spinlock_t fc_rescan_work_lock ; s#work_struct fc_rescan_work ; char fc_rescan_work_q_name [ 20 ] ; s#workqueue_struct * fc_rescan_work_q ; unsigned long hard_resets ; unsigned long soft_resets ; unsigned long timeouts ; s#scsi_cmnd * * ScsiLookup ; t#spinlock_t scsi_lookup_lock ; int sdev_queue_depth ; t#u64 dma_mask ; t#u32 broadcast_aen_busy ; t#u8 * DiagBuffer [ ( 0x03 ) ] ; t#u32 DataSize [ ( 0x03 ) ] ; t#u32 DiagBuffer_sz [ ( 0x03 ) ] ; t#dma_addr_t DiagBuffer_dma [ ( 0x03 ) ] ; t#u8 TraceLevel [ ( 0x03 ) ] ; t#u8 DiagBuffer_Status [ ( 0x03 ) ] ; t#u32 UniqueId [ ( 0x03 ) ] ; t#u32 ExtendedType [ ( 0x03 ) ] ; t#u32 ProductSpecific [ ( 0x03 ) ] [ 4 ] ; t#u8 sg_addr_size ; t#u8 SGE_size ; t#u8 in_rescan ; t#u8 is_fault ; t#u32 ring_buffer_offset ; t#u32 ring_buffer_sz ; } 
t#MPT_ADAPTER typedef s#_MPT_ADAPTER MPT_ADAPTER 
mpt_Soft_Hard_ResetHandler extern int mpt_Soft_Hard_ResetHandler ( t#MPT_ADAPTER * , int ) 
mpt_attach extern int mpt_attach ( s#pci_dev * , const s#pci_device_id * ) 
mpt_detach extern void mpt_detach ( s#pci_dev * ) 
mpt_resume extern int mpt_resume ( s#pci_dev * ) 
mpt_suspend extern int mpt_suspend ( s#pci_dev * , t#pm_message_t ) 
ioc_list extern s#list_head ioc_list 
mpt_proc_root_dir extern s#proc_dir_entry * mpt_proc_root_dir 
t#MPT_CALLBACK typedef int ( * MPT_CALLBACK ) ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
t#MPT_DRIVER_CLASS typedef enum { MPTBASE_DRIVER , MPTCTL_DRIVER , MPTSPI_DRIVER , MPTFC_DRIVER , MPTSAS_DRIVER , MPTLAN_DRIVER , MPTSTM_DRIVER , MPTUNKNOWN_DRIVER } MPT_DRIVER_CLASS 
mpt_register extern t#u8 mpt_register ( t#MPT_CALLBACK , t#MPT_DRIVER_CLASS , char * ) 
mpt_deregister extern void mpt_deregister ( t#u8 ) 
s#_MSG_EVENT_NOTIFY_REPLY struct _MSG_EVENT_NOTIFY_REPLY { t#U16 EventDataLength ; t#U8 MsgLength ; t#U8 Function ; t#U8 Reserved1 [ 2 ] ; t#U8 AckRequired ; t#U8 MsgFlags ; t#U32 MsgContext ; t#U8 Reserved2 [ 2 ] ; t#U16 IOCStatus ; t#U32 IOCLogInfo ; t#U32 Event ; t#U32 EventContext ; t#U32 Data [ 1 ] ; } 
t#EventNotificationReply_t typedef s#_MSG_EVENT_NOTIFY_REPLY EventNotificationReply_t 
t#MPT_EVHANDLER typedef int ( * MPT_EVHANDLER ) ( t#MPT_ADAPTER * , t#EventNotificationReply_t * ) 
mpt_event_register extern int mpt_event_register ( t#u8 , t#MPT_EVHANDLER ) 
mpt_event_deregister extern void mpt_event_deregister ( t#u8 ) 
t#MPT_RESETHANDLER typedef int ( * MPT_RESETHANDLER ) ( t#MPT_ADAPTER * , int ) 
mpt_reset_register extern int mpt_reset_register ( t#u8 , t#MPT_RESETHANDLER ) 
mpt_reset_deregister extern void mpt_reset_deregister ( t#u8 ) 
s#mpt_pci_driver struct mpt_pci_driver { int ( * probe ) ( s#pci_dev * , const s#pci_device_id * ) ; void ( * remove ) ( s#pci_dev * ) ; } 
mpt_device_driver_register extern int mpt_device_driver_register ( s#mpt_pci_driver * , t#u8 ) 
mpt_device_driver_deregister extern void mpt_device_driver_deregister ( t#u8 ) 
mpt_get_msg_frame extern t#MPT_FRAME_HDR * mpt_get_msg_frame ( t#u8 , t#MPT_ADAPTER * ) 
mpt_put_msg_frame extern void mpt_put_msg_frame ( t#u8 , t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_put_msg_frame_hi_pri extern void mpt_put_msg_frame_hi_pri ( t#u8 , t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_free_msg_frame extern void mpt_free_msg_frame ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * ) 
mpt_send_handshake_request extern int mpt_send_handshake_request ( t#u8 , t#MPT_ADAPTER * , int , t#u32 * , int ) 
mpt_verify_adapter extern int mpt_verify_adapter ( int , t#MPT_ADAPTER * * ) 
mpt_GetIocState extern t#u32 mpt_GetIocState ( t#MPT_ADAPTER * , int ) 
mpt_print_ioc_summary extern void mpt_print_ioc_summary ( t#MPT_ADAPTER * , char * , int * , int , int ) 
mpt_HardResetHandler extern int mpt_HardResetHandler ( t#MPT_ADAPTER * , int ) 
s#_CONFIG_EXTENDED_PAGE_HEADER struct _CONFIG_EXTENDED_PAGE_HEADER { t#U8 PageVersion ; t#U8 Reserved1 ; t#U8 PageNumber ; t#U8 PageType ; t#U16 ExtPageLength ; t#U8 ExtPageType ; t#U8 Reserved2 ; } 
t#ConfigExtendedPageHeader_t typedef s#_CONFIG_EXTENDED_PAGE_HEADER ConfigExtendedPageHeader_t 
s#_x_config_parms struct _x_config_parms { union { t#ConfigExtendedPageHeader_t * ehdr ; t#ConfigPageHeader_t * hdr ; } cfghdr ; t#dma_addr_t physAddr ; t#u32 pageAddr ; t#u16 status ; t#u8 action ; t#u8 dir ; t#u8 timeout ; } 
t#CONFIGPARMS typedef s#_x_config_parms CONFIGPARMS 
mpt_config extern int mpt_config ( t#MPT_ADAPTER * , t#CONFIGPARMS * ) 
mpt_findImVolumes extern int mpt_findImVolumes ( t#MPT_ADAPTER * ) 
mpt_alloc_fw_memory extern int mpt_alloc_fw_memory ( t#MPT_ADAPTER * , int ) 
mpt_free_fw_memory extern void mpt_free_fw_memory ( t#MPT_ADAPTER * ) 
mptbase_sas_persist_operation extern int mptbase_sas_persist_operation ( t#MPT_ADAPTER * , t#u8 ) 
s#_RAID_PHYS_DISK0_SETTINGS struct _RAID_PHYS_DISK0_SETTINGS { t#U8 SepID ; t#U8 SepBus ; t#U8 HotSparePool ; t#U8 PhysDiskSettings ; } 
t#RAID_PHYS_DISK0_SETTINGS typedef s#_RAID_PHYS_DISK0_SETTINGS RAID_PHYS_DISK0_SETTINGS 
s#_RAID_PHYS_DISK_INQUIRY_DATA struct _RAID_PHYS_DISK_INQUIRY_DATA { t#U8 VendorID [ 8 ] ; t#U8 ProductID [ 16 ] ; t#U8 ProductRevLevel [ 4 ] ; t#U8 Info [ 32 ] ; } 
t#RAID_PHYS_DISK0_INQUIRY_DATA typedef s#_RAID_PHYS_DISK_INQUIRY_DATA RAID_PHYS_DISK0_INQUIRY_DATA 
s#_RAID_PHYS_DISK0_STATUS struct _RAID_PHYS_DISK0_STATUS { t#U8 Flags ; t#U8 State ; t#U16 Reserved ; } 
t#RAID_PHYS_DISK0_STATUS typedef s#_RAID_PHYS_DISK0_STATUS RAID_PHYS_DISK0_STATUS 
s#_RAID_PHYS_DISK0_ERROR_DATA struct _RAID_PHYS_DISK0_ERROR_DATA { t#U8 ErrorCdbByte ; t#U8 ErrorSenseKey ; t#U16 Reserved ; t#U16 ErrorCount ; t#U8 ErrorASC ; t#U8 ErrorASCQ ; t#U16 SmartCount ; t#U8 SmartASC ; t#U8 SmartASCQ ; } 
t#RAID_PHYS_DISK0_ERROR_DATA typedef s#_RAID_PHYS_DISK0_ERROR_DATA RAID_PHYS_DISK0_ERROR_DATA 
s#_CONFIG_PAGE_RAID_PHYS_DISK_0 struct _CONFIG_PAGE_RAID_PHYS_DISK_0 { t#CONFIG_PAGE_HEADER Header ; t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U8 PhysDiskIOC ; t#U8 PhysDiskNum ; t#RAID_PHYS_DISK0_SETTINGS PhysDiskSettings ; t#U32 Reserved1 ; t#U8 ExtDiskIdentifier [ 8 ] ; t#U8 DiskIdentifier [ 16 ] ; t#RAID_PHYS_DISK0_INQUIRY_DATA InquiryData ; t#RAID_PHYS_DISK0_STATUS PhysDiskStatus ; t#U32 MaxLBA ; t#RAID_PHYS_DISK0_ERROR_DATA ErrorData ; } 
t#pRaidPhysDiskPage0_t typedef s#_CONFIG_PAGE_RAID_PHYS_DISK_0 * pRaidPhysDiskPage0_t 
mpt_raid_phys_disk_pg0 extern int mpt_raid_phys_disk_pg0 ( t#MPT_ADAPTER * , t#u8 , t#pRaidPhysDiskPage0_t ) 
s#_RAID_PHYS_DISK1_PATH struct _RAID_PHYS_DISK1_PATH { t#U8 PhysDiskID ; t#U8 PhysDiskBus ; t#U16 Reserved1 ; t#U64 WWID ; t#U64 OwnerWWID ; t#U8 OwnerIdentifier ; t#U8 Reserved2 ; t#U16 Flags ; } 
t#RAID_PHYS_DISK1_PATH typedef s#_RAID_PHYS_DISK1_PATH RAID_PHYS_DISK1_PATH 
s#_CONFIG_PAGE_RAID_PHYS_DISK_1 struct _CONFIG_PAGE_RAID_PHYS_DISK_1 { t#CONFIG_PAGE_HEADER Header ; t#U8 NumPhysDiskPaths ; t#U8 PhysDiskNum ; t#U16 Reserved2 ; t#U32 Reserved1 ; t#RAID_PHYS_DISK1_PATH Path [ ( 1 ) ] ; } 
t#pRaidPhysDiskPage1_t typedef s#_CONFIG_PAGE_RAID_PHYS_DISK_1 * pRaidPhysDiskPage1_t 
mpt_raid_phys_disk_pg1 extern int mpt_raid_phys_disk_pg1 ( t#MPT_ADAPTER * , t#u8 , t#pRaidPhysDiskPage1_t ) 
mpt_raid_phys_disk_get_num_paths extern int mpt_raid_phys_disk_get_num_paths ( t#MPT_ADAPTER * , t#u8 ) 
mpt_set_taskmgmt_in_progress_flag extern int mpt_set_taskmgmt_in_progress_flag ( t#MPT_ADAPTER * ) 
mpt_clear_taskmgmt_in_progress_flag extern void mpt_clear_taskmgmt_in_progress_flag ( t#MPT_ADAPTER * ) 
mpt_halt_firmware extern void mpt_halt_firmware ( t#MPT_ADAPTER * ) 

/* drivers/message/fusion/mptscsih.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
s##net_device
s##mptsas_portinfo
mptscsih_flush_running_cmds extern void mptscsih_flush_running_cmds ( t#MPT_SCSI_HOST * ) 
mptscsih_is_phys_disk extern int mptscsih_is_phys_disk ( t#MPT_ADAPTER * , t#u8 , t#u8 ) 
mptscsih_raid_id_to_num extern t#u8 mptscsih_raid_id_to_num ( t#MPT_ADAPTER * , t#u8 , t#u8 ) 
mptscsih_host_attrs extern s#device_attribute * mptscsih_host_attrs [ ] 
mptscsih_dev_attrs extern s#device_attribute * mptscsih_dev_attrs [ ] 
mptscsih_remove extern void mptscsih_remove ( s#pci_dev * ) 
mptscsih_shutdown extern void mptscsih_shutdown ( s#pci_dev * ) 
mptscsih_suspend extern int mptscsih_suspend ( s#pci_dev * , t#pm_message_t ) 
mptscsih_resume extern int mptscsih_resume ( s#pci_dev * ) 
mptscsih_proc_info extern int mptscsih_proc_info ( s#Scsi_Host * , char * , char * * , t#off_t , int , int ) 
mptscsih_info extern const char * mptscsih_info ( s#Scsi_Host * ) 
mptscsih_qcmd extern int mptscsih_qcmd ( s#scsi_cmnd * ) 
mptscsih_slave_destroy extern void mptscsih_slave_destroy ( s#scsi_device * ) 
mptscsih_slave_configure extern int mptscsih_slave_configure ( s#scsi_device * ) 
mptscsih_abort extern int mptscsih_abort ( s#scsi_cmnd * ) 
mptscsih_dev_reset extern int mptscsih_dev_reset ( s#scsi_cmnd * ) 
mptscsih_bus_reset extern int mptscsih_bus_reset ( s#scsi_cmnd * ) 
mptscsih_host_reset extern int mptscsih_host_reset ( s#scsi_cmnd * ) 
mptscsih_bios_param extern int mptscsih_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int [ ] ) 
mptscsih_io_done extern int mptscsih_io_done ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_taskmgmt_complete extern int mptscsih_taskmgmt_complete ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_scandv_complete extern int mptscsih_scandv_complete ( t#MPT_ADAPTER * , t#MPT_FRAME_HDR * , t#MPT_FRAME_HDR * ) 
mptscsih_event_process extern int mptscsih_event_process ( t#MPT_ADAPTER * , t#EventNotificationReply_t * ) 
mptscsih_ioc_reset extern int mptscsih_ioc_reset ( t#MPT_ADAPTER * , int ) 
mptscsih_change_queue_depth extern int mptscsih_change_queue_depth ( s#scsi_device * , int , int ) 
mptscsih_IssueTaskMgmt extern int mptscsih_IssueTaskMgmt ( t#MPT_SCSI_HOST * , t#u8 , t#u8 , t#u8 , int , int , t#ulong ) 
s#_internal_cmd struct _internal_cmd { char * data ; t#dma_addr_t data_dma ; int size ; t#u8 cmd ; t#u8 channel ; t#u8 id ; int lun ; t#u8 flags ; t#u8 physDiskNum ; t#u8 rsvd2 ; t#u8 rsvd ; } 
t#INTERNAL_CMD typedef s#_internal_cmd INTERNAL_CMD 
mptscsih_do_cmd extern int mptscsih_do_cmd ( t#MPT_SCSI_HOST * , t#INTERNAL_CMD * ) 
mptscsih_quiesce_raid extern int mptscsih_quiesce_raid ( t#MPT_SCSI_HOST * , int , t#u8 , t#u8 ) 
mptscsih_get_scsi_lookup extern s#scsi_cmnd * mptscsih_get_scsi_lookup ( t#MPT_ADAPTER * , int ) 
mptscsih_taskmgmt_response_code extern void mptscsih_taskmgmt_response_code ( t#MPT_ADAPTER * , t#u8 ) 

/* drivers/mfd/adp5520.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
adp5520_write extern int adp5520_write ( s#device * , int , t#u8 ) 
adp5520_read extern int adp5520_read ( s#device * , int , t#uint8_t * ) 
adp5520_set_bits extern int adp5520_set_bits ( s#device * , int , t#uint8_t ) 
adp5520_clr_bits extern int adp5520_clr_bits ( s#device * , int , t#uint8_t ) 
adp5520_register_notifier extern int adp5520_register_notifier ( s#device * , s#notifier_block * , unsigned int ) 
adp5520_unregister_notifier extern int adp5520_unregister_notifier ( s#device * , s#notifier_block * , unsigned int ) 

/* drivers/mfd/ezx-pcap.o */
s##pcap_chip
ezx_pcap_write int ezx_pcap_write ( s#pcap_chip * , t#u8 , t#u32 ) 
ezx_pcap_read int ezx_pcap_read ( s#pcap_chip * , t#u8 , t#u32 * ) 
ezx_pcap_set_bits int ezx_pcap_set_bits ( s#pcap_chip * , t#u8 , t#u32 , t#u32 ) 
irq_to_pcap int irq_to_pcap ( s#pcap_chip * , int ) 
pcap_to_irq int pcap_to_irq ( s#pcap_chip * , int ) 
pcap_set_ts_bits void pcap_set_ts_bits ( s#pcap_chip * , t#u32 ) 
pcap_adc_async int pcap_adc_async ( s#pcap_chip * , t#u8 , t#u32 , t#u8 [ ] , void * , void * ) 
pcap_adc_sync int pcap_adc_sync ( s#pcap_chip * , t#u8 , t#u32 , t#u8 [ ] , t#u16 [ ] ) 

/* drivers/mfd/htc-pasic3.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
pasic3_write_register extern void pasic3_write_register ( s#device * , t#u32 , t#u8 ) 
pasic3_read_register extern t#u8 pasic3_read_register ( s#device * , t#u32 ) 

/* drivers/mfd/mc13xxx-core.o */
s##mc13xxx
s##mc13783
mc13783_to_mc13xxx s#mc13xxx * mc13783_to_mc13xxx ( s#mc13783 * ) 
mc13xxx_lock void mc13xxx_lock ( s#mc13xxx * ) 
mc13xxx_unlock void mc13xxx_unlock ( s#mc13xxx * ) 
mc13xxx_reg_read int mc13xxx_reg_read ( s#mc13xxx * , unsigned int , t#u32 * ) 
mc13xxx_reg_write int mc13xxx_reg_write ( s#mc13xxx * , unsigned int , t#u32 ) 
mc13xxx_reg_rmw int mc13xxx_reg_rmw ( s#mc13xxx * , unsigned int , t#u32 , t#u32 ) 
mc13xxx_irq_mask int mc13xxx_irq_mask ( s#mc13xxx * , int ) 
mc13xxx_irq_unmask int mc13xxx_irq_unmask ( s#mc13xxx * , int ) 
mc13xxx_irq_status int mc13xxx_irq_status ( s#mc13xxx * , int , int * , int * ) 
mc13xxx_irq_ack int mc13xxx_irq_ack ( s#mc13xxx * , int ) 
mc13xxx_irq_request_nounmask int mc13xxx_irq_request_nounmask ( s#mc13xxx * , int , t#irq_handler_t , const char * , void * ) 
mc13xxx_irq_request int mc13xxx_irq_request ( s#mc13xxx * , int , t#irq_handler_t , const char * , void * ) 
mc13xxx_irq_free int mc13xxx_irq_free ( s#mc13xxx * , int , void * ) 
mc13xxx_get_flags int mc13xxx_get_flags ( s#mc13xxx * ) 
mc13783_adc_do_conversion int mc13783_adc_do_conversion ( s#mc13783 * , unsigned int , unsigned int , unsigned int * ) 

/* drivers/mfd/mfd-core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#mfd_cell struct mfd_cell { const char * name ; int id ; t#atomic_t * usage_count ; int ( * enable ) ( s#platform_device * ) ; int ( * disable ) ( s#platform_device * ) ; int ( * suspend ) ( s#platform_device * ) ; int ( * resume ) ( s#platform_device * ) ; void * platform_data ; t#size_t pdata_size ; int num_resources ; const s#resource * resources ; t#bool ignore_resource_conflicts ; t#bool pm_runtime_no_callbacks ; } 
mfd_cell_enable extern int mfd_cell_enable ( s#platform_device * ) 
mfd_cell_disable extern int mfd_cell_disable ( s#platform_device * ) 
mfd_add_devices extern int mfd_add_devices ( s#device * , int , s#mfd_cell * , int , s#resource * , int ) 
mfd_remove_devices extern void mfd_remove_devices ( s#device * ) 
mfd_clone_cell extern int mfd_clone_cell ( const char * , const char * * , t#size_t ) 

/* drivers/mfd/tps6105x.o */
e#tps6105x_mode enum tps6105x_mode { TPS6105X_MODE_SHUTDOWN , TPS6105X_MODE_TORCH , TPS6105X_MODE_TORCH_FLASH , TPS6105X_MODE_VOLTAGE , } 
s#regulator_state struct regulator_state { int uV ; unsigned int mode ; int enabled ; int disabled ; } 
t#suspend_state_t typedef int suspend_state_t 
s#regulation_constraints struct regulation_constraints { char * name ; int min_uV ; int max_uV ; int uV_offset ; int min_uA ; int max_uA ; unsigned int valid_modes_mask ; unsigned int valid_ops_mask ; int input_uV ; s#regulator_state state_disk ; s#regulator_state state_mem ; s#regulator_state state_standby ; t#suspend_state_t initial_state ; unsigned int initial_mode ; unsigned always_on : 1 ; unsigned boot_on : 1 ; unsigned apply_uV : 1 ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#regulator_consumer_supply struct regulator_consumer_supply { s#device * dev ; const char * dev_name ; const char * supply ; } 
s#regulator_init_data struct regulator_init_data { const char * supply_regulator ; s#regulation_constraints constraints ; int num_consumer_supplies ; s#regulator_consumer_supply * consumer_supplies ; int ( * regulator_init ) ( void * ) ; void * driver_data ; } 
s#tps6105x_platform_data struct tps6105x_platform_data { e#tps6105x_mode mode ; s#regulator_init_data * regulator_data ; } 
s#regulator_ops struct regulator_ops { int ( * list_voltage ) ( s#regulator_dev * , unsigned ) ; int ( * set_voltage ) ( s#regulator_dev * , int , int , unsigned * ) ; int ( * set_voltage_sel ) ( s#regulator_dev * , unsigned ) ; int ( * get_voltage ) ( s#regulator_dev * ) ; int ( * get_voltage_sel ) ( s#regulator_dev * ) ; int ( * set_current_limit ) ( s#regulator_dev * , int , int ) ; int ( * get_current_limit ) ( s#regulator_dev * ) ; int ( * enable ) ( s#regulator_dev * ) ; int ( * disable ) ( s#regulator_dev * ) ; int ( * is_enabled ) ( s#regulator_dev * ) ; int ( * set_mode ) ( s#regulator_dev * , unsigned int ) ; unsigned int ( * get_mode ) ( s#regulator_dev * ) ; int ( * enable_time ) ( s#regulator_dev * ) ; int ( * set_voltage_time_sel ) ( s#regulator_dev * , unsigned int , unsigned int ) ; int ( * get_status ) ( s#regulator_dev * ) ; unsigned int ( * get_optimum_mode ) ( s#regulator_dev * , int , int , int ) ; int ( * set_suspend_voltage ) ( s#regulator_dev * , int ) ; int ( * set_suspend_enable ) ( s#regulator_dev * ) ; int ( * set_suspend_disable ) ( s#regulator_dev * ) ; int ( * set_suspend_mode ) ( s#regulator_dev * , unsigned int ) ; } 
e#regulator_type enum regulator_type { REGULATOR_VOLTAGE , REGULATOR_CURRENT , } 
s#regulator_desc struct regulator_desc { const char * name ; int id ; unsigned n_voltages ; s#regulator_ops * ops ; int irq ; e#regulator_type type ; s#module * owner ; } 
s#regulator_dev struct regulator_dev { s#regulator_desc * desc ; int exclusive ; t#u32 use_count ; t#u32 open_count ; s#list_head list ; s#list_head slist ; s#list_head consumer_list ; s#list_head supply_list ; s#blocking_notifier_head notifier ; s#mutex mutex ; s#module * owner ; s#device dev ; s#regulation_constraints * constraints ; s#regulator_dev * supply ; void * reg_data ; s#dentry * debugfs ; } 
s#tps6105x struct tps6105x { s#tps6105x_platform_data * pdata ; s#mutex lock ; s#i2c_client * client ; s#regulator_dev * regulator ; } 
tps6105x_set extern int tps6105x_set ( s#tps6105x * , t#u8 , t#u8 ) 
tps6105x_get extern int tps6105x_get ( s#tps6105x * , t#u8 , t#u8 * ) 
tps6105x_mask_and_set extern int tps6105x_mask_and_set ( s#tps6105x * , t#u8 , t#u8 , t#u8 ) 

/* drivers/mfd/ucb1400_core.o */
s##snd_card
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##proc_dir_entry
s##pci_dev
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
ucb1400_adc_read unsigned int ucb1400_adc_read ( s#snd_ac97 * , t#u16 , int ) 

/* drivers/misc/ad525x_dpot.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#ad_dpot_bus_ops struct ad_dpot_bus_ops { int ( * read_d8 ) ( void * ) ; int ( * read_r8d8 ) ( void * , t#u8 ) ; int ( * read_r8d16 ) ( void * , t#u8 ) ; int ( * write_d8 ) ( void * , t#u8 ) ; int ( * write_r8d8 ) ( void * , t#u8 , t#u8 ) ; int ( * write_r8d16 ) ( void * , t#u8 , t#u16 ) ; } 
s#ad_dpot_bus_data struct ad_dpot_bus_data { void * client ; const s#ad_dpot_bus_ops * bops ; } 
s#ad_dpot_id struct ad_dpot_id { char * name ; unsigned long devid ; } 
ad_dpot_probe int ad_dpot_probe ( s#device * , s#ad_dpot_bus_data * , const s#ad_dpot_id * ) 
ad_dpot_remove int ad_dpot_remove ( s#device * ) 

/* drivers/misc/cb710/core.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
cb710_pci_update_config_reg void cb710_pci_update_config_reg ( s#pci_dev * , int , t#uint32_t , t#uint32_t ) 
s##mfd_cell
t#cb710_irq_handler_t typedef int ( * cb710_irq_handler_t ) ( s#cb710_slot * ) 
s#cb710_slot struct cb710_slot { s#platform_device pdev ; void * iobase ; t#cb710_irq_handler_t irq_handler ; } 
cb710_set_irq_handler void cb710_set_irq_handler ( s#cb710_slot * , t#cb710_irq_handler_t ) 

/* drivers/misc/cb710/sgbuf2.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#sg_mapping_iter struct sg_mapping_iter { s#page * page ; void * addr ; t#size_t length ; t#size_t consumed ; s#scatterlist * __sg ; unsigned int __nents ; unsigned int __offset ; unsigned int __flags ; } 
cb710_sg_dwiter_read_next_block t#uint32_t cb710_sg_dwiter_read_next_block ( s#sg_mapping_iter * ) 
cb710_sg_dwiter_write_next_block void cb710_sg_dwiter_write_next_block ( s#sg_mapping_iter * , t#uint32_t ) 

/* drivers/misc/eeprom/eeprom_93cx6.o */
s#eeprom_93cx6 struct eeprom_93cx6 { void * data ; void ( * register_read ) ( s#eeprom_93cx6 * ) ; void ( * register_write ) ( s#eeprom_93cx6 * ) ; int width ; char reg_data_in ; char reg_data_out ; char reg_data_clock ; char reg_chip_select ; } 
eeprom_93cx6_read extern void eeprom_93cx6_read ( s#eeprom_93cx6 * , const t#u8 , t#u16 * ) 
eeprom_93cx6_multiread extern void eeprom_93cx6_multiread ( s#eeprom_93cx6 * , const t#u8 , t#__le16 * , const t#u16 ) 

/* drivers/misc/enclosure.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
e#enclosure_component_type enum enclosure_component_type { ENCLOSURE_COMPONENT_DEVICE = 0x01 , ENCLOSURE_COMPONENT_ARRAY_DEVICE = 0x17 , } 
e#enclosure_status enum enclosure_status { ENCLOSURE_STATUS_UNSUPPORTED = 0 , ENCLOSURE_STATUS_OK , ENCLOSURE_STATUS_CRITICAL , ENCLOSURE_STATUS_NON_CRITICAL , ENCLOSURE_STATUS_UNRECOVERABLE , ENCLOSURE_STATUS_NOT_INSTALLED , ENCLOSURE_STATUS_UNKNOWN , ENCLOSURE_STATUS_UNAVAILABLE , ENCLOSURE_STATUS_MAX } 
s#enclosure_component struct enclosure_component { void * scratch ; s#device cdev ; s#device * dev ; e#enclosure_component_type type ; int number ; int fault ; int active ; int locate ; e#enclosure_status status ; } 
e#enclosure_component_setting enum enclosure_component_setting { ENCLOSURE_SETTING_DISABLED = 0 , ENCLOSURE_SETTING_ENABLED = 1 , ENCLOSURE_SETTING_BLINK_A_ON_OFF = 2 , ENCLOSURE_SETTING_BLINK_A_OFF_ON = 3 , ENCLOSURE_SETTING_BLINK_B_ON_OFF = 6 , ENCLOSURE_SETTING_BLINK_B_OFF_ON = 7 , } 
s#enclosure_component_callbacks struct enclosure_component_callbacks { void ( * get_status ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_status ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_status ) ; void ( * get_fault ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_fault ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_active ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_active ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; void ( * get_locate ) ( s#enclosure_device * , s#enclosure_component * ) ; int ( * set_locate ) ( s#enclosure_device * , s#enclosure_component * , e#enclosure_component_setting ) ; } 
s#enclosure_device struct enclosure_device { void * scratch ; s#list_head node ; s#device edev ; s#enclosure_component_callbacks * cb ; int components ; s#enclosure_component component [ 0 ] ; } 
enclosure_find s#enclosure_device * enclosure_find ( s#device * , s#enclosure_device * ) 
enclosure_for_each_device int enclosure_for_each_device ( int ( * ) ( s#enclosure_device * , void * ) , void * ) 
enclosure_register s#enclosure_device * enclosure_register ( s#device * , const char * , int , s#enclosure_component_callbacks * ) 
enclosure_unregister void enclosure_unregister ( s#enclosure_device * ) 
enclosure_component_register s#enclosure_component * enclosure_component_register ( s#enclosure_device * , unsigned int , e#enclosure_component_type , const char * ) 
enclosure_add_device int enclosure_add_device ( s#enclosure_device * , int , s#device * ) 
enclosure_remove_device int enclosure_remove_device ( s#enclosure_device * , s#device * ) 

/* drivers/misc/lis3lv02d/lis3lv02d.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##input_mt_slot
s##mfd_cell
s##regulator
u#axis_conversion union axis_conversion { struct { int x , y , z ; } ; int as_array [ 3 ] ; } 
s#lis3lv02d_platform_data struct lis3lv02d_platform_data { unsigned char click_flags ; unsigned char click_thresh_x ; unsigned char click_thresh_y ; unsigned char click_thresh_z ; unsigned char click_time_limit ; unsigned char click_latency ; unsigned char click_window ; unsigned char irq_cfg ; unsigned char irq_flags1 ; unsigned char irq_flags2 ; unsigned char duration1 ; unsigned char duration2 ; unsigned char wakeup_flags ; unsigned char wakeup_thresh ; unsigned char wakeup_flags2 ; unsigned char wakeup_thresh2 ; unsigned char hipass_ctrl ; t#s8 axis_x ; t#s8 axis_y ; t#s8 axis_z ; t#u16 driver_features ; int default_rate ; int ( * setup_resources ) ( void ) ; int ( * release_resources ) ( void ) ; t#s16 st_min_limits [ 3 ] ; t#s16 st_max_limits [ 3 ] ; int irq2 ; } 
s#lis3lv02d struct lis3lv02d { void * bus_priv ; s#device * pm_dev ; int ( * init ) ( s#lis3lv02d * ) ; int ( * write ) ( s#lis3lv02d * , int , t#u8 ) ; int ( * read ) ( s#lis3lv02d * , int , t#u8 * ) ; int ( * blkread ) ( s#lis3lv02d * , int , int , t#u8 * ) ; int ( * reg_ctrl ) ( s#lis3lv02d * , t#bool ) ; int * odrs ; t#u8 * regs ; int regs_size ; t#u8 * reg_cache ; t#bool regs_stored ; t#u8 odr_mask ; t#u8 whoami ; t#s16 ( * read_data ) ( s#lis3lv02d * , int ) ; int mdps_max_val ; int pwron_delay ; int scale ; s#input_polled_dev * idev ; s#platform_device * pdev ; s#regulator_bulk_data regulators [ 2 ] ; t#atomic_t count ; u#axis_conversion ac ; int mapped_btns [ 3 ] ; t#u32 irq ; s#fasync_struct * async_queue ; t#wait_queue_head_t misc_wait ; unsigned long misc_opened ; int data_ready_count [ 2 ] ; t#atomic_t wake_thread ; unsigned char irq_cfg ; s#lis3lv02d_platform_data * pdata ; s#mutex mutex ; } 
lis3_dev extern s#lis3lv02d lis3_dev 
lis3lv02d_poweroff void lis3lv02d_poweroff ( s#lis3lv02d * ) 
lis3lv02d_poweron int lis3lv02d_poweron ( s#lis3lv02d * ) 
lis3lv02d_joystick_enable int lis3lv02d_joystick_enable ( void ) 
lis3lv02d_joystick_disable void lis3lv02d_joystick_disable ( void ) 
lis3lv02d_remove_fs int lis3lv02d_remove_fs ( s#lis3lv02d * ) 
lis3lv02d_init_device int lis3lv02d_init_device ( s#lis3lv02d * ) 

/* drivers/misc/ti-st/st_core.o */
e#proto_type enum proto_type { ST_BT , ST_FM , ST_GPS , ST_MAX_CHANNELS = 16 , } 
s##sock
s##net_device
s##sec_path
s#st_proto_s struct st_proto_s { e#proto_type type ; long ( * recv ) ( void * , s#sk_buff * ) ; unsigned char ( * match_packet ) ( const unsigned char * ) ; void ( * reg_complete_cb ) ( void * , char ) ; long ( * write ) ( s#sk_buff * ) ; void * priv_data ; unsigned char chnl_id ; unsigned short max_frame_size ; unsigned char hdr_len ; unsigned char offset_len_in_hdr ; unsigned char len_size ; unsigned char reserve ; } 
st_register extern long st_register ( s#st_proto_s * ) 
st_unregister extern long st_unregister ( s#st_proto_s * ) 

/* drivers/misc/tifm_core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s#tifm_dev struct tifm_dev { char * addr ; t#spinlock_t lock ; unsigned char type ; unsigned int socket_id ; void ( * card_event ) ( s#tifm_dev * ) ; void ( * data_event ) ( s#tifm_dev * ) ; s#device dev ; } 
s#tifm_adapter struct tifm_adapter { char * addr ; t#spinlock_t lock ; unsigned int irq_status ; unsigned int socket_change_set ; unsigned int id ; unsigned int num_sockets ; s#completion * finish_me ; s#work_struct media_switcher ; s#device dev ; void ( * eject ) ( s#tifm_adapter * , s#tifm_dev * ) ; int ( * has_ms_pif ) ( s#tifm_adapter * , s#tifm_dev * ) ; s#tifm_dev * sockets [ 0 ] ; } 
tifm_alloc_adapter s#tifm_adapter * tifm_alloc_adapter ( unsigned int , s#device * ) 
tifm_add_adapter int tifm_add_adapter ( s#tifm_adapter * ) 
tifm_remove_adapter void tifm_remove_adapter ( s#tifm_adapter * ) 
tifm_free_adapter void tifm_free_adapter ( s#tifm_adapter * ) 
tifm_free_device void tifm_free_device ( s#device * ) 
tifm_alloc_device s#tifm_dev * tifm_alloc_device ( s#tifm_adapter * , unsigned int , unsigned char ) 
tifm_eject void tifm_eject ( s#tifm_dev * ) 
tifm_has_ms_pif int tifm_has_ms_pif ( s#tifm_dev * ) 
tifm_map_sg int tifm_map_sg ( s#tifm_dev * , s#scatterlist * , int , int ) 
tifm_unmap_sg void tifm_unmap_sg ( s#tifm_dev * , s#scatterlist * , int , int ) 
tifm_queue_work void tifm_queue_work ( s#work_struct * ) 
s#tifm_device_id struct tifm_device_id { unsigned char type ; } 
s#tifm_driver struct tifm_driver { s#tifm_device_id * id_table ; int ( * probe ) ( s#tifm_dev * ) ; void ( * remove ) ( s#tifm_dev * ) ; int ( * suspend ) ( s#tifm_dev * , t#pm_message_t ) ; int ( * resume ) ( s#tifm_dev * ) ; s#device_driver driver ; } 
tifm_register_driver int tifm_register_driver ( s#tifm_driver * ) 
tifm_unregister_driver void tifm_unregister_driver ( s#tifm_driver * ) 

/* drivers/mtd/chips/chipreg.o */
s#nand_oobfree struct nand_oobfree { t#__u32 offset ; t#__u32 length ; } 
s#nand_ecclayout struct nand_ecclayout { t#__u32 eccbytes ; t#__u32 eccpos [ 448 ] ; t#__u32 oobavail ; s#nand_oobfree oobfree [ 32 ] ; } 
s#mtd_erase_region_info struct mtd_erase_region_info { t#uint64_t offset ; t#uint32_t erasesize ; t#uint32_t numblocks ; unsigned long * lockmap ; } 
s#erase_info struct erase_info { s#mtd_info * mtd ; t#uint64_t addr ; t#uint64_t len ; t#uint64_t fail_addr ; t#u_long time ; t#u_long retries ; unsigned dev ; unsigned cell ; void ( * callback ) ( s#erase_info * ) ; t#u_long priv ; t#u_char state ; s#erase_info * next ; } 
s##backing_dev_info
t#mtd_oob_mode_t typedef enum { MTD_OOB_PLACE , MTD_OOB_AUTO , MTD_OOB_RAW , } mtd_oob_mode_t 
s#mtd_oob_ops struct mtd_oob_ops { t#mtd_oob_mode_t mode ; t#size_t len ; t#size_t retlen ; t#size_t ooblen ; t#size_t oobretlen ; t#uint32_t ooboffs ; t#uint8_t * datbuf ; t#uint8_t * oobbuf ; } 
s#otp_info struct otp_info { t#__u32 start ; t#__u32 length ; t#__u32 locked ; } 
s#kvec struct kvec { void * iov_base ; t#size_t iov_len ; } 
s#mtd_ecc_stats struct mtd_ecc_stats { t#__u32 corrected ; t#__u32 failed ; t#__u32 badblocks ; t#__u32 bbtblocks ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#mtd_info struct mtd_info { t#u_char type ; t#uint32_t flags ; t#uint64_t size ; t#uint32_t erasesize ; t#uint32_t writesize ; t#uint32_t writebufsize ; t#uint32_t oobsize ; t#uint32_t oobavail ; unsigned int erasesize_shift ; unsigned int writesize_shift ; unsigned int erasesize_mask ; unsigned int writesize_mask ; const char * name ; int index ; s#nand_ecclayout * ecclayout ; int numeraseregions ; s#mtd_erase_region_info * eraseregions ; int ( * erase ) ( s#mtd_info * , s#erase_info * ) ; int ( * point ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , void * * , t#resource_size_t * ) ; void ( * unpoint ) ( s#mtd_info * , t#loff_t , t#size_t ) ; unsigned long ( * get_unmapped_area ) ( s#mtd_info * , unsigned long , unsigned long , unsigned long ) ; s#backing_dev_info * backing_dev_info ; int ( * read ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * write ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) ; int ( * panic_write ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , const t#u_char * ) ; int ( * read_oob ) ( s#mtd_info * , t#loff_t , s#mtd_oob_ops * ) ; int ( * write_oob ) ( s#mtd_info * , t#loff_t , s#mtd_oob_ops * ) ; int ( * get_fact_prot_info ) ( s#mtd_info * , s#otp_info * , t#size_t ) ; int ( * read_fact_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * get_user_prot_info ) ( s#mtd_info * , s#otp_info * , t#size_t ) ; int ( * read_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * write_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t , t#size_t * , t#u_char * ) ; int ( * lock_user_prot_reg ) ( s#mtd_info * , t#loff_t , t#size_t ) ; int ( * writev ) ( s#mtd_info * , const s#kvec * , unsigned long , t#loff_t , t#size_t * ) ; void ( * sync ) ( s#mtd_info * ) ; int ( * lock ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * unlock ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * is_locked ) ( s#mtd_info * , t#loff_t , t#uint64_t ) ; int ( * suspend ) ( s#mtd_info * ) ; void ( * resume ) ( s#mtd_info * ) ; int ( * block_isbad ) ( s#mtd_info * , t#loff_t ) ; int ( * block_markbad ) ( s#mtd_info * , t#loff_t ) ; s#notifier_block reboot_notifier ; s#mtd_ecc_stats ecc_stats ; int subpage_sft ; void * priv ; s#module * owner ; s#device dev ; int usecount ; int ( * get_device ) ( s#mtd_info * ) ; void ( * put_device ) ( s#mtd_info * ) ; } 
s#map_info struct map_info { const char * name ; unsigned long size ; t#resource_size_t phys ; void * virt ; void * cached ; int bankwidth ; void ( * inval_cache ) ( s#map_info * , unsigned long , t#ssize_t ) ; void ( * set_vpp ) ( s#map_info * , int ) ; unsigned long pfow_base ; unsigned long map_priv_1 ; unsigned long map_priv_2 ; void * fldrv_priv ; s#mtd_chip_driver * fldrv ; } 
s#mtd_chip_driver struct mtd_chip_driver { s#mtd_info * ( * probe ) ( s#map_info * ) ; void ( * destroy ) ( s#mtd_info * ) ; s#module * module ; char * name ; s#list_head list ; } 
register_mtd_chip_driver void register_mtd_chip_driver ( s#mtd_chip_driver * ) 
unregister_mtd_chip_driver void unregister_mtd_chip_driver ( s#mtd_chip_driver * ) 
do_map_probe s#mtd_info * do_map_probe ( const char * , s#map_info * ) 
map_destroy void map_destroy ( s#mtd_info * ) 

/* drivers/mtd/mtd_blkdevs.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#mtd_blktrans_ops struct mtd_blktrans_ops { char * name ; int major ; int part_bits ; int blksize ; int blkshift ; int ( * readsect ) ( s#mtd_blktrans_dev * , unsigned long , char * ) ; int ( * writesect ) ( s#mtd_blktrans_dev * , unsigned long , char * ) ; int ( * discard ) ( s#mtd_blktrans_dev * , unsigned long , unsigned ) ; void ( * background ) ( s#mtd_blktrans_dev * ) ; int ( * getgeo ) ( s#mtd_blktrans_dev * , s#hd_geometry * ) ; int ( * flush ) ( s#mtd_blktrans_dev * ) ; int ( * open ) ( s#mtd_blktrans_dev * ) ; int ( * release ) ( s#mtd_blktrans_dev * ) ; void ( * add_mtd ) ( s#mtd_blktrans_ops * , s#mtd_info * ) ; void ( * remove_dev ) ( s#mtd_blktrans_dev * ) ; s#list_head devs ; s#list_head list ; s#module * owner ; } 
s#mtd_blktrans_dev struct mtd_blktrans_dev { s#mtd_blktrans_ops * tr ; s#list_head list ; s#mtd_info * mtd ; s#mutex lock ; int devnum ; t#bool bg_stop ; unsigned long size ; int readonly ; int open ; s#kref ref ; s#gendisk * disk ; s#attribute_group * disk_attributes ; s#task_struct * thread ; s#request_queue * rq ; t#spinlock_t queue_lock ; void * priv ; } 
mtd_blktrans_cease_background extern int mtd_blktrans_cease_background ( s#mtd_blktrans_dev * ) 
register_mtd_blktrans extern int register_mtd_blktrans ( s#mtd_blktrans_ops * ) 
deregister_mtd_blktrans extern int deregister_mtd_blktrans ( s#mtd_blktrans_ops * ) 
add_mtd_blktrans_dev extern int add_mtd_blktrans_dev ( s#mtd_blktrans_dev * ) 
del_mtd_blktrans_dev extern int del_mtd_blktrans_dev ( s#mtd_blktrans_dev * ) 

/* drivers/mtd/mtdconcat.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
mtd_concat_create s#mtd_info * mtd_concat_create ( s#mtd_info * [ ] , int , const char * ) 
mtd_concat_destroy void mtd_concat_destroy ( s#mtd_info * ) 

/* drivers/mtd/mtdcore.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
mtd_table_mutex extern s#mutex mtd_table_mutex 
__mtd_next_device extern s#mtd_info * __mtd_next_device ( int ) 
s#mtd_partition struct mtd_partition { char * name ; t#uint64_t size ; t#uint64_t offset ; t#uint32_t mask_flags ; s#nand_ecclayout * ecclayout ; } 
mtd_device_register extern int mtd_device_register ( s#mtd_info * , const s#mtd_partition * , int ) 
mtd_device_unregister extern int mtd_device_unregister ( s#mtd_info * ) 
get_mtd_device extern s#mtd_info * get_mtd_device ( s#mtd_info * , int ) 
get_mtd_device_nm extern s#mtd_info * get_mtd_device_nm ( const char * ) 
__get_mtd_device extern int __get_mtd_device ( s#mtd_info * ) 
put_mtd_device extern void put_mtd_device ( s#mtd_info * ) 
__put_mtd_device extern void __put_mtd_device ( s#mtd_info * ) 
s#mtd_notifier struct mtd_notifier { void ( * add ) ( s#mtd_info * ) ; void ( * remove ) ( s#mtd_info * ) ; s#list_head list ; } 
register_mtd_user extern void register_mtd_user ( s#mtd_notifier * ) 
unregister_mtd_user extern int unregister_mtd_user ( s#mtd_notifier * ) 
default_mtd_writev int default_mtd_writev ( s#mtd_info * , const s#kvec * , unsigned long , t#loff_t , t#size_t * ) 
mtd_kmalloc_up_to void * mtd_kmalloc_up_to ( const s#mtd_info * , t#size_t * ) 

/* drivers/mtd/mtdpart.o */
s##backing_dev_info
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
mtd_erase_callback void mtd_erase_callback ( s#erase_info * ) 
mtd_add_partition int mtd_add_partition ( s#mtd_info * , char * , long long , long long ) 
mtd_del_partition int mtd_del_partition ( s#mtd_info * , int ) 
s#mtd_part_parser struct mtd_part_parser { s#list_head list ; s#module * owner ; const char * name ; int ( * parse_fn ) ( s#mtd_info * , s#mtd_partition * * , unsigned long ) ; } 
register_mtd_parser extern int register_mtd_parser ( s#mtd_part_parser * ) 
deregister_mtd_parser extern int deregister_mtd_parser ( s#mtd_part_parser * ) 
parse_mtd_partitions extern int parse_mtd_partitions ( s#mtd_info * , const char * * , s#mtd_partition * * , unsigned long ) 
mtd_is_partition int mtd_is_partition ( s#mtd_info * ) 

/* drivers/mtd/mtdsuper.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mnt_namespace
s##cdev
s##posix_acl
mount_mtd extern s#dentry * mount_mtd ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) ) 
kill_mtd_super extern void kill_mtd_super ( s#super_block * ) 

/* drivers/mtd/ofpart.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
of_mtd_parse_partitions int __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) of_mtd_parse_partitions ( s#device * , s#device_node * , s#mtd_partition * * ) 

/* drivers/net/can/c_can/c_can.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
alloc_c_can_dev s#net_device * alloc_c_can_dev ( void ) 
free_c_can_dev void free_c_can_dev ( s#net_device * ) 
register_c_can_dev int register_c_can_dev ( s#net_device * ) 
unregister_c_can_dev void unregister_c_can_dev ( s#net_device * ) 

/* drivers/net/can/dev.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
can_put_echo_skb void can_put_echo_skb ( s#sk_buff * , s#net_device * , unsigned int ) 
can_get_echo_skb void can_get_echo_skb ( s#net_device * , unsigned int ) 
can_free_echo_skb void can_free_echo_skb ( s#net_device * , unsigned int ) 
can_bus_off void can_bus_off ( s#net_device * ) 
t#canid_t typedef t#__u32 canid_t 
s#can_frame struct can_frame { t#canid_t can_id ; t#__u8 can_dlc ; t#__u8 data [ 8 ] __attribute__ ( ( aligned ( 8 ) ) ) ; } 
alloc_can_skb s#sk_buff * alloc_can_skb ( s#net_device * , s#can_frame * * ) 
alloc_can_err_skb s#sk_buff * alloc_can_err_skb ( s#net_device * , s#can_frame * * ) 
alloc_candev s#net_device * alloc_candev ( int , unsigned int ) 
free_candev void free_candev ( s#net_device * ) 
open_candev int open_candev ( s#net_device * ) 
close_candev void close_candev ( s#net_device * ) 
register_candev int register_candev ( s#net_device * ) 
unregister_candev void unregister_candev ( s#net_device * ) 

/* drivers/net/can/sja1000/sja1000.o */
sja1000_interrupt t#irqreturn_t sja1000_interrupt ( int , void * ) 
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
alloc_sja1000dev s#net_device * alloc_sja1000dev ( int ) 
free_sja1000dev void free_sja1000dev ( s#net_device * ) 
register_sja1000dev int register_sja1000dev ( s#net_device * ) 
unregister_sja1000dev void unregister_sja1000dev ( s#net_device * ) 

/* drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s#napi_struct struct napi_struct { s#list_head poll_list ; unsigned long state ; int weight ; int ( * poll ) ( s#napi_struct * , int ) ; t#spinlock_t poll_lock ; int poll_owner ; unsigned int gro_count ; s#net_device * dev ; s#list_head dev_list ; s#sk_buff * gro_list ; s#sk_buff * skb ; } 
s#hc_status_block_e1x struct hc_status_block_e1x { t#__le16 index_values [ 8 ] ; t#__le16 running_index [ 2 ] ; t#__le32 rsrv [ 11 ] ; } 
s#host_hc_status_block_e1x struct host_hc_status_block_e1x { s#hc_status_block_e1x sb ; } 
s#hc_status_block_e2 struct hc_status_block_e2 { t#__le16 index_values [ 8 ] ; t#__le16 running_index [ 2 ] ; t#__le32 reserved [ 11 ] ; } 
s#host_hc_status_block_e2 struct host_hc_status_block_e2 { s#hc_status_block_e2 sb ; } 
u#host_hc_status_block union host_hc_status_block { s#host_hc_status_block_e1x * e1x_sb ; s#host_hc_status_block_e2 * e2_sb ; } 
e#bnx2x_tpa_mode_t enum bnx2x_tpa_mode_t { TPA_MODE_LRO , TPA_MODE_GRO } 
s#sw_tx_bd struct sw_tx_bd { s#sk_buff * skb ; t#u16 first_bd ; t#u8 flags ; } 
s#eth_tx_bd_flags struct eth_tx_bd_flags { t#u8 as_bitfield ; } 
s#eth_tx_start_bd struct eth_tx_start_bd { t#__le32 addr_lo ; t#__le32 addr_hi ; t#__le16 nbd ; t#__le16 nbytes ; t#__le16 vlan_or_ethertype ; s#eth_tx_bd_flags bd_flags ; t#u8 general_data ; } 
s#eth_tx_bd struct eth_tx_bd { t#__le32 addr_lo ; t#__le32 addr_hi ; t#__le16 total_pkt_bytes ; t#__le16 nbytes ; t#u8 reserved [ 4 ] ; } 
s#eth_tx_parse_bd_e1x struct eth_tx_parse_bd_e1x { t#__le16 global_data ; t#u8 tcp_flags ; t#u8 ip_hlen_w ; t#__le16 total_hlen_w ; t#__le16 tcp_pseudo_csum ; t#__le16 lso_mss ; t#__le16 ip_id ; t#__le32 tcp_send_seq ; } 
s#eth_mac_addresses struct eth_mac_addresses { t#__le16 dst_mid ; t#__le16 dst_lo ; t#__le16 src_lo ; t#__le16 dst_hi ; t#__le16 src_hi ; t#__le16 src_mid ; } 
s#eth_tunnel_data struct eth_tunnel_data { t#__le16 dst_lo ; t#__le16 dst_mid ; t#__le16 dst_hi ; t#__le16 fw_ip_hdr_csum ; t#__le16 pseudo_csum ; t#u8 ip_hdr_start_inner_w ; t#u8 flags ; } 
u#eth_mac_addr_or_tunnel_data union eth_mac_addr_or_tunnel_data { s#eth_mac_addresses mac_addr ; s#eth_tunnel_data tunnel_data ; } 
s#eth_tx_parse_bd_e2 struct eth_tx_parse_bd_e2 { u#eth_mac_addr_or_tunnel_data data ; t#__le32 parsing_data ; } 
s#eth_tx_parse_2nd_bd struct eth_tx_parse_2nd_bd { t#__le16 global_data ; t#u8 bd_type ; t#u8 reserved3 ; t#u8 tcp_flags ; t#u8 reserved4 ; t#u8 tunnel_udp_hdr_start_w ; t#u8 fw_ip_hdr_to_payload_w ; t#__le16 fw_ip_csum_wo_len_flags_frag ; t#__le16 hw_ip_id ; t#__le32 tcp_send_seq ; } 
s#eth_tx_next_bd struct eth_tx_next_bd { t#__le32 addr_lo ; t#__le32 addr_hi ; t#u8 reserved [ 8 ] ; } 
u#eth_tx_bd_types union eth_tx_bd_types { s#eth_tx_start_bd start_bd ; s#eth_tx_bd reg_bd ; s#eth_tx_parse_bd_e1x parse_bd_e1x ; s#eth_tx_parse_bd_e2 parse_bd_e2 ; s#eth_tx_parse_2nd_bd parse_2nd_bd ; s#eth_tx_next_bd next_bd ; } 
s#doorbell_hdr struct doorbell_hdr { t#u8 header ; } 
s#doorbell_set_prod struct doorbell_set_prod { t#u16 prod ; t#u8 zero_fill1 ; s#doorbell_hdr header ; } 
u#db_prod union db_prod { s#doorbell_set_prod data ; t#u32 raw ; } 
s#bnx2x_fp_txdata struct bnx2x_fp_txdata { s#sw_tx_bd * tx_buf_ring ; u#eth_tx_bd_types * tx_desc_ring ; t#dma_addr_t tx_desc_mapping ; t#u32 cid ; u#db_prod tx_db ; t#u16 tx_pkt_prod ; t#u16 tx_pkt_cons ; t#u16 tx_bd_prod ; t#u16 tx_bd_cons ; unsigned long tx_pkt ; t#__le16 * tx_cons_sb ; int txq_index ; s#bnx2x_fastpath * parent_fp ; int tx_ring_size ; } 
s#sw_rx_bd struct sw_rx_bd { s#sk_buff * skb ; t#dma_addr_t mapping ; } 
s#sw_rx_page struct sw_rx_page { s#page * page ; t#dma_addr_t mapping ; unsigned int offset ; } 
s#eth_rx_bd struct eth_rx_bd { t#__le32 addr_lo ; t#__le32 addr_hi ; } 
s#parsing_flags struct parsing_flags { t#__le16 flags ; } 
u#eth_sgl_or_raw_data union eth_sgl_or_raw_data { t#__le16 sgl [ 8 ] ; t#u32 raw_data [ 4 ] ; } 
s#eth_fast_path_rx_cqe struct eth_fast_path_rx_cqe { t#u8 type_error_flags ; t#u8 status_flags ; t#u8 queue_index ; t#u8 placement_offset ; t#__le32 rss_hash_result ; t#__le16 vlan_tag ; t#__le16 pkt_len_or_gro_seg_len ; t#__le16 len_on_bd ; s#parsing_flags pars_flags ; u#eth_sgl_or_raw_data sgl_or_raw_data ; t#__le32 reserved1 [ 8 ] ; } 
s#ramrod_data struct ramrod_data { t#__le32 data_lo ; t#__le32 data_hi ; } 
s#common_ramrod_eth_rx_cqe struct common_ramrod_eth_rx_cqe { t#u8 ramrod_type ; t#u8 conn_type ; t#__le16 reserved1 ; t#__le32 conn_and_cmd_data ; s#ramrod_data protocol_data ; t#__le32 echo ; t#__le32 reserved2 [ 11 ] ; } 
s#eth_rx_cqe_next_page struct eth_rx_cqe_next_page { t#__le32 addr_lo ; t#__le32 addr_hi ; t#__le32 reserved [ 14 ] ; } 
s#eth_end_agg_rx_cqe struct eth_end_agg_rx_cqe { t#u8 type_error_flags ; t#u8 reserved1 ; t#u8 queue_index ; t#u8 reserved2 ; t#__le32 timestamp_delta ; t#__le16 num_of_coalesced_segs ; t#__le16 pkt_len ; t#u8 pure_ack_count ; t#u8 reserved3 ; t#__le16 reserved4 ; u#eth_sgl_or_raw_data sgl_or_raw_data ; t#__le32 reserved5 [ 8 ] ; } 
u#eth_rx_cqe union eth_rx_cqe { s#eth_fast_path_rx_cqe fast_path_cqe ; s#common_ramrod_eth_rx_cqe ramrod_cqe ; s#eth_rx_cqe_next_page next_page_cqe ; s#eth_end_agg_rx_cqe end_agg_cqe ; } 
s#eth_rx_sge struct eth_rx_sge { t#__le32 addr_lo ; t#__le32 addr_hi ; } 
s#bnx2x_agg_info struct bnx2x_agg_info { s#sw_rx_bd first_buf ; t#u8 tpa_state ; t#u8 placement_offset ; t#u16 parsing_flags ; t#u16 vlan_tag ; t#u16 len_on_bd ; t#u16 gro_size ; t#u16 full_page ; } 
s#bnx2x_alloc_pool struct bnx2x_alloc_pool { s#page * page ; unsigned int offset ; } 
s#bnx2x_fastpath struct bnx2x_fastpath { s#bnx2x * bp ; s#napi_struct napi ; u#host_hc_status_block status_blk ; t#__le16 * sb_index_values ; t#__le16 * sb_running_index ; t#u32 ustorm_rx_prods_offset ; t#u32 rx_buf_size ; t#dma_addr_t status_blk_mapping ; e#bnx2x_tpa_mode_t mode ; t#u8 max_cos ; s#bnx2x_fp_txdata * txdata_ptr [ 3 ] ; s#sw_rx_bd * rx_buf_ring ; s#sw_rx_page * rx_page_ring ; s#eth_rx_bd * rx_desc_ring ; t#dma_addr_t rx_desc_mapping ; u#eth_rx_cqe * rx_comp_ring ; t#dma_addr_t rx_comp_mapping ; s#eth_rx_sge * rx_sge_ring ; t#dma_addr_t rx_sge_mapping ; t#u64 sge_mask [ ( ( ( ( 1 << 12 ) / sizeof ( struct eth_rx_sge ) ) * 2 ) / 64 ) ] ; t#u32 cid ; t#__le16 fp_hc_idx ; t#u8 index ; t#u8 rx_queue ; t#u8 cl_id ; t#u8 cl_qzone_id ; t#u8 fw_sb_id ; t#u8 igu_sb_id ; t#u16 rx_bd_prod ; t#u16 rx_bd_cons ; t#u16 rx_comp_prod ; t#u16 rx_comp_cons ; t#u16 rx_sge_prod ; t#u16 last_max_sge ; t#__le16 * rx_cons_sb ; unsigned long rx_pkt , rx_calls ; s#bnx2x_agg_info * tpa_info ; t#u8 disable_tpa ; char name [ ( sizeof ( ( ( struct net_device * ) 0 ) -> name ) + 8 ) ] ; s#bnx2x_alloc_pool page_pool ; } 
t#bnx2x_obj_type typedef enum { BNX2X_OBJ_TYPE_RX , BNX2X_OBJ_TYPE_TX , BNX2X_OBJ_TYPE_RX_TX , } bnx2x_obj_type 
s#bnx2x_raw_obj struct bnx2x_raw_obj { t#u8 func_id ; t#u8 cl_id ; t#u32 cid ; void * rdata ; t#dma_addr_t rdata_mapping ; int state ; unsigned long * pstate ; t#bnx2x_obj_type obj_type ; int ( * wait_comp ) ( s#bnx2x * , s#bnx2x_raw_obj * ) ; t#bool ( * check_pending ) ( s#bnx2x_raw_obj * ) ; void ( * clear_pending ) ( s#bnx2x_raw_obj * ) ; void ( * set_pending ) ( s#bnx2x_raw_obj * ) ; } 
u#bnx2x_qable_obj union bnx2x_qable_obj { s#bnx2x_vlan_mac_obj vlan_mac ; } 
e#bnx2x_vlan_mac_cmd enum bnx2x_vlan_mac_cmd { BNX2X_VLAN_MAC_ADD , BNX2X_VLAN_MAC_DEL , BNX2X_VLAN_MAC_MOVE , } 
s#bnx2x_mac_ramrod_data struct bnx2x_mac_ramrod_data { t#u8 mac [ 6 ] ; t#u8 is_inner_mac ; } 
s#bnx2x_vlan_ramrod_data struct bnx2x_vlan_ramrod_data { t#u16 vlan ; } 
s#bnx2x_vlan_mac_ramrod_data struct bnx2x_vlan_mac_ramrod_data { t#u8 mac [ 6 ] ; t#u8 is_inner_mac ; t#u16 vlan ; } 
u#bnx2x_classification_ramrod_data union bnx2x_classification_ramrod_data { s#bnx2x_mac_ramrod_data mac ; s#bnx2x_vlan_ramrod_data vlan ; s#bnx2x_vlan_mac_ramrod_data vlan_mac ; } 
s#bnx2x_vlan_mac_data struct bnx2x_vlan_mac_data { e#bnx2x_vlan_mac_cmd cmd ; unsigned long vlan_mac_flags ; s#bnx2x_vlan_mac_obj * target_obj ; u#bnx2x_classification_ramrod_data u ; } 
u#bnx2x_exe_queue_cmd_data union bnx2x_exe_queue_cmd_data { s#bnx2x_vlan_mac_data vlan_mac ; struct { } mcast ; } 
s#bnx2x_exeq_elem struct bnx2x_exeq_elem { s#list_head link ; int cmd_len ; u#bnx2x_exe_queue_cmd_data cmd_data ; } 
t#exe_q_validate typedef int ( * exe_q_validate ) ( s#bnx2x * , u#bnx2x_qable_obj * , s#bnx2x_exeq_elem * ) 
t#exe_q_remove typedef int ( * exe_q_remove ) ( s#bnx2x * , u#bnx2x_qable_obj * , s#bnx2x_exeq_elem * ) 
t#exe_q_optimize typedef int ( * exe_q_optimize ) ( s#bnx2x * , u#bnx2x_qable_obj * , s#bnx2x_exeq_elem * ) 
t#exe_q_execute typedef int ( * exe_q_execute ) ( s#bnx2x * , u#bnx2x_qable_obj * , s#list_head * , unsigned long * ) 
t#exe_q_get typedef s#bnx2x_exeq_elem * ( * exe_q_get ) ( s#bnx2x_exe_queue_obj * , s#bnx2x_exeq_elem * ) 
s#bnx2x_exe_queue_obj struct bnx2x_exe_queue_obj { s#list_head exe_queue ; s#list_head pending_comp ; t#spinlock_t lock ; int exe_chunk_len ; u#bnx2x_qable_obj * owner ; t#exe_q_validate validate ; t#exe_q_remove remove ; t#exe_q_optimize optimize ; t#exe_q_execute execute ; t#exe_q_get get ; } 
s#bnx2x_credit_pool_obj struct bnx2x_credit_pool_obj { t#atomic_t credit ; int pool_sz ; t#u64 pool_mirror [ ( 272 / 64 ) ] ; int base_pool_offset ; t#bool ( * get_entry ) ( s#bnx2x_credit_pool_obj * , int * ) ; t#bool ( * put_entry ) ( s#bnx2x_credit_pool_obj * , int ) ; t#bool ( * get ) ( s#bnx2x_credit_pool_obj * , int ) ; t#bool ( * put ) ( s#bnx2x_credit_pool_obj * , int ) ; int ( * check ) ( s#bnx2x_credit_pool_obj * ) ; } 
s#bnx2x_vlan_mac_registry_elem struct bnx2x_vlan_mac_registry_elem { s#list_head link ; int cam_offset ; unsigned long vlan_mac_flags ; u#bnx2x_classification_ramrod_data u ; } 
s#bnx2x_vlan_mac_ramrod_params struct bnx2x_vlan_mac_ramrod_params { s#bnx2x_vlan_mac_obj * vlan_mac_obj ; unsigned long ramrod_flags ; s#bnx2x_vlan_mac_data user_req ; } 
s#vf_pf_event_data struct vf_pf_event_data { t#u8 vf_id ; t#u8 reserved0 ; t#u16 reserved1 ; t#u32 msg_addr_lo ; t#u32 msg_addr_hi ; } 
s#eth_event_data struct eth_event_data { t#u32 echo ; t#u32 reserved0 ; t#u32 reserved1 ; } 
s#cfc_del_event_data struct cfc_del_event_data { t#u32 cid ; t#u32 reserved0 ; t#u32 reserved1 ; } 
s#vf_flr_event_data struct vf_flr_event_data { t#u8 vf_id ; t#u8 reserved0 ; t#u16 reserved1 ; t#u32 reserved2 ; t#u32 reserved3 ; } 
s#malicious_vf_event_data struct malicious_vf_event_data { t#u8 vf_id ; t#u8 err_id ; t#u16 reserved1 ; t#u32 reserved2 ; t#u32 reserved3 ; } 
s#vif_list_event_data struct vif_list_event_data { t#u8 func_bit_map ; t#u8 echo ; t#__le16 reserved0 ; t#__le32 reserved1 ; t#__le32 reserved2 ; } 
s#function_update_event_data struct function_update_event_data { t#u8 echo ; t#u8 reserved ; t#__le16 reserved0 ; t#__le32 reserved1 ; t#__le32 reserved2 ; } 
u#event_data union event_data { s#vf_pf_event_data vf_pf_event ; s#eth_event_data eth_event ; s#cfc_del_event_data cfc_del_event ; s#vf_flr_event_data vf_flr_event ; s#malicious_vf_event_data malicious_vf_event ; s#vif_list_event_data vif_list_event ; s#function_update_event_data function_update_event ; } 
s#event_ring_msg struct event_ring_msg { t#u8 opcode ; t#u8 error ; t#u16 reserved1 ; u#event_data data ; } 
s#regpair struct regpair { t#__le32 lo ; t#__le32 hi ; } 
s#event_ring_next struct event_ring_next { s#regpair addr ; t#u32 reserved [ 2 ] ; } 
u#event_ring_elem union event_ring_elem { s#event_ring_msg message ; s#event_ring_next next_page ; } 
s#bnx2x_vlan_mac_obj struct bnx2x_vlan_mac_obj { s#bnx2x_raw_obj raw ; s#list_head head ; t#u8 head_reader ; t#bool head_exe_request ; unsigned long saved_ramrod_flags ; s#bnx2x_exe_queue_obj exe_queue ; s#bnx2x_credit_pool_obj * macs_pool ; s#bnx2x_credit_pool_obj * vlans_pool ; int ramrod_cmd ; int ( * get_n_elements ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , int , t#u8 * , t#u8 , t#u8 ) ; int ( * check_add ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , u#bnx2x_classification_ramrod_data * ) ; s#bnx2x_vlan_mac_registry_elem * ( * check_del ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , u#bnx2x_classification_ramrod_data * ) ; t#bool ( * check_move ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , s#bnx2x_vlan_mac_obj * , u#bnx2x_classification_ramrod_data * ) ; t#bool ( * get_credit ) ( s#bnx2x_vlan_mac_obj * ) ; t#bool ( * put_credit ) ( s#bnx2x_vlan_mac_obj * ) ; t#bool ( * get_cam_offset ) ( s#bnx2x_vlan_mac_obj * , int * ) ; t#bool ( * put_cam_offset ) ( s#bnx2x_vlan_mac_obj * , int ) ; void ( * set_one_rule ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , s#bnx2x_exeq_elem * , int , int ) ; int ( * delete_all ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , unsigned long * , unsigned long * ) ; int ( * restore ) ( s#bnx2x * , s#bnx2x_vlan_mac_ramrod_params * , s#bnx2x_vlan_mac_registry_elem * * ) ; int ( * complete ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * , u#event_ring_elem * , unsigned long * ) ; int ( * wait ) ( s#bnx2x * , s#bnx2x_vlan_mac_obj * ) ; } 
e#bnx2x_q_state enum bnx2x_q_state { BNX2X_Q_STATE_RESET , BNX2X_Q_STATE_INITIALIZED , BNX2X_Q_STATE_ACTIVE , BNX2X_Q_STATE_MULTI_COS , BNX2X_Q_STATE_MCOS_TERMINATED , BNX2X_Q_STATE_INACTIVE , BNX2X_Q_STATE_STOPPED , BNX2X_Q_STATE_TERMINATED , BNX2X_Q_STATE_FLRED , BNX2X_Q_STATE_MAX , } 
e#bnx2x_queue_cmd enum bnx2x_queue_cmd { BNX2X_Q_CMD_INIT , BNX2X_Q_CMD_SETUP , BNX2X_Q_CMD_SETUP_TX_ONLY , BNX2X_Q_CMD_DEACTIVATE , BNX2X_Q_CMD_ACTIVATE , BNX2X_Q_CMD_UPDATE , BNX2X_Q_CMD_UPDATE_TPA , BNX2X_Q_CMD_HALT , BNX2X_Q_CMD_CFC_DEL , BNX2X_Q_CMD_TERMINATE , BNX2X_Q_CMD_EMPTY , BNX2X_Q_CMD_MAX , } 
s#bnx2x_queue_update_params struct bnx2x_queue_update_params { unsigned long update_flags ; t#u16 def_vlan ; t#u16 silent_removal_value ; t#u16 silent_removal_mask ; t#u8 cid_index ; } 
s#bnx2x_queue_update_tpa_params struct bnx2x_queue_update_tpa_params { t#dma_addr_t sge_map ; t#u8 update_ipv4 ; t#u8 update_ipv6 ; t#u8 max_tpa_queues ; t#u8 max_sges_pkt ; t#u8 complete_on_both_clients ; t#u8 dont_verify_thr ; t#u8 tpa_mode ; t#u8 _pad ; t#u16 sge_buff_sz ; t#u16 max_agg_sz ; t#u16 sge_pause_thr_low ; t#u16 sge_pause_thr_high ; } 
s#bnx2x_general_setup_params struct bnx2x_general_setup_params { t#u8 stat_id ; t#u8 spcl_id ; t#u16 mtu ; t#u8 cos ; } 
s#bnx2x_txq_setup_params struct bnx2x_txq_setup_params { t#dma_addr_t dscr_map ; t#u8 fw_sb_id ; t#u8 sb_cq_index ; t#u8 cos ; t#u16 traffic_type ; t#u8 tss_leading_cl_id ; t#u16 default_vlan ; } 
s#bnx2x_rxq_setup_params struct bnx2x_rxq_setup_params { t#dma_addr_t dscr_map ; t#dma_addr_t sge_map ; t#dma_addr_t rcq_map ; t#dma_addr_t rcq_np_map ; t#u16 drop_flags ; t#u16 buf_sz ; t#u8 fw_sb_id ; t#u8 cl_qzone_id ; t#u16 tpa_agg_sz ; t#u16 sge_buf_sz ; t#u8 max_sges_pkt ; t#u8 max_tpa_queues ; t#u8 rss_engine_id ; t#u8 mcast_engine_id ; t#u8 cache_line_log ; t#u8 sb_cq_index ; t#u16 silent_removal_value ; t#u16 silent_removal_mask ; } 
s#rxq_pause_params struct rxq_pause_params { t#u16 bd_th_lo ; t#u16 bd_th_hi ; t#u16 rcq_th_lo ; t#u16 rcq_th_hi ; t#u16 sge_th_lo ; t#u16 sge_th_hi ; t#u16 pri_map ; } 
s#bnx2x_queue_setup_params struct bnx2x_queue_setup_params { s#bnx2x_general_setup_params gen_params ; s#bnx2x_txq_setup_params txq_params ; s#bnx2x_rxq_setup_params rxq_params ; s#rxq_pause_params pause_params ; unsigned long flags ; } 
s#ustorm_eth_st_context struct ustorm_eth_st_context { t#u32 reserved0 [ 52 ] ; } 
s#tstorm_eth_st_context struct tstorm_eth_st_context { t#u32 __reserved0 [ 28 ] ; } 
s#xstorm_eth_ag_context struct xstorm_eth_ag_context { t#u32 reserved0 ; t#u8 cdu_reserved ; t#u8 reserved2 ; t#u16 reserved1 ; t#u32 reserved3 [ 30 ] ; } 
s#tstorm_eth_ag_context struct tstorm_eth_ag_context { t#u32 __reserved0 [ 14 ] ; } 
s#cstorm_eth_ag_context struct cstorm_eth_ag_context { t#u32 __reserved0 [ 10 ] ; } 
s#ustorm_eth_ag_context struct ustorm_eth_ag_context { t#u32 __reserved0 ; t#u8 cdu_usage ; t#u8 __reserved2 ; t#u16 __reserved1 ; t#u32 __reserved3 [ 6 ] ; } 
s#timers_block_context struct timers_block_context { t#u32 __reserved_0 ; t#u32 __reserved_1 ; t#u32 __reserved_2 ; t#u32 flags ; } 
s#xstorm_eth_st_context struct xstorm_eth_st_context { t#u32 reserved0 [ 60 ] ; } 
s#cstorm_eth_st_context struct cstorm_eth_st_context { t#u32 __reserved0 [ 4 ] ; } 
s#eth_context struct eth_context { s#ustorm_eth_st_context ustorm_st_context ; s#tstorm_eth_st_context tstorm_st_context ; s#xstorm_eth_ag_context xstorm_ag_context ; s#tstorm_eth_ag_context tstorm_ag_context ; s#cstorm_eth_ag_context cstorm_ag_context ; s#ustorm_eth_ag_context ustorm_ag_context ; s#timers_block_context timers_context ; s#xstorm_eth_st_context xstorm_st_context ; s#cstorm_eth_st_context cstorm_st_context ; } 
s#bnx2x_queue_init_params struct bnx2x_queue_init_params { struct { unsigned long flags ; t#u16 hc_rate ; t#u8 fw_sb_id ; t#u8 sb_cq_index ; } tx ; struct { unsigned long flags ; t#u16 hc_rate ; t#u8 fw_sb_id ; t#u8 sb_cq_index ; } rx ; s#eth_context * cxts [ 3 ] ; t#u8 max_cos ; } 
s#bnx2x_queue_setup_tx_only_params struct bnx2x_queue_setup_tx_only_params { s#bnx2x_general_setup_params gen_params ; s#bnx2x_txq_setup_params txq_params ; unsigned long flags ; t#u8 cid_index ; } 
s#bnx2x_queue_terminate_params struct bnx2x_queue_terminate_params { t#u8 cid_index ; } 
s#bnx2x_queue_cfc_del_params struct bnx2x_queue_cfc_del_params { t#u8 cid_index ; } 
s#bnx2x_queue_state_params struct bnx2x_queue_state_params { s#bnx2x_queue_sp_obj * q_obj ; e#bnx2x_queue_cmd cmd ; unsigned long ramrod_flags ; union { s#bnx2x_queue_update_params update ; s#bnx2x_queue_update_tpa_params update_tpa ; s#bnx2x_queue_setup_params setup ; s#bnx2x_queue_init_params init ; s#bnx2x_queue_setup_tx_only_params tx_only ; s#bnx2x_queue_terminate_params terminate ; s#bnx2x_queue_cfc_del_params cfc_del ; } params ; } 
s#bnx2x_queue_sp_obj struct bnx2x_queue_sp_obj { t#u32 cids [ 3 ] ; t#u8 cl_id ; t#u8 func_id ; t#u8 max_cos ; t#u8 num_tx_only , next_tx_only ; e#bnx2x_q_state state , next_state ; unsigned long type ; unsigned long pending ; void * rdata ; t#dma_addr_t rdata_mapping ; int ( * send_cmd ) ( s#bnx2x * , s#bnx2x_queue_state_params * ) ; int ( * set_pending ) ( s#bnx2x_queue_sp_obj * , s#bnx2x_queue_state_params * ) ; int ( * check_transition ) ( s#bnx2x * , s#bnx2x_queue_sp_obj * , s#bnx2x_queue_state_params * ) ; int ( * complete_cmd ) ( s#bnx2x * , s#bnx2x_queue_sp_obj * , e#bnx2x_queue_cmd ) ; int ( * wait_comp ) ( s#bnx2x * , s#bnx2x_queue_sp_obj * , e#bnx2x_queue_cmd ) ; } 
s#bnx2x_sp_objs struct bnx2x_sp_objs { s#bnx2x_vlan_mac_obj mac_obj ; s#bnx2x_queue_sp_obj q_obj ; } 
s#tstorm_per_queue_stats struct tstorm_per_queue_stats { s#regpair rcv_ucast_bytes ; t#__le32 rcv_ucast_pkts ; t#__le32 checksum_discard ; s#regpair rcv_bcast_bytes ; t#__le32 rcv_bcast_pkts ; t#__le32 pkts_too_big_discard ; s#regpair rcv_mcast_bytes ; t#__le32 rcv_mcast_pkts ; t#__le32 ttl0_discard ; t#__le16 no_buff_discard ; t#__le16 reserved0 ; t#__le32 reserved1 ; } 
s#ustorm_per_queue_stats struct ustorm_per_queue_stats { s#regpair ucast_no_buff_bytes ; s#regpair mcast_no_buff_bytes ; s#regpair bcast_no_buff_bytes ; t#__le32 ucast_no_buff_pkts ; t#__le32 mcast_no_buff_pkts ; t#__le32 bcast_no_buff_pkts ; t#__le32 coalesced_pkts ; s#regpair coalesced_bytes ; t#__le32 coalesced_events ; t#__le32 coalesced_aborts ; } 
s#xstorm_per_queue_stats struct xstorm_per_queue_stats { s#regpair ucast_bytes_sent ; s#regpair mcast_bytes_sent ; s#regpair bcast_bytes_sent ; t#__le32 ucast_pkts_sent ; t#__le32 mcast_pkts_sent ; t#__le32 bcast_pkts_sent ; t#__le32 error_drop_pkts ; } 
s#bnx2x_eth_q_stats struct bnx2x_eth_q_stats { t#u32 total_unicast_bytes_received_hi ; t#u32 total_unicast_bytes_received_lo ; t#u32 total_broadcast_bytes_received_hi ; t#u32 total_broadcast_bytes_received_lo ; t#u32 total_multicast_bytes_received_hi ; t#u32 total_multicast_bytes_received_lo ; t#u32 total_bytes_received_hi ; t#u32 total_bytes_received_lo ; t#u32 total_unicast_bytes_transmitted_hi ; t#u32 total_unicast_bytes_transmitted_lo ; t#u32 total_broadcast_bytes_transmitted_hi ; t#u32 total_broadcast_bytes_transmitted_lo ; t#u32 total_multicast_bytes_transmitted_hi ; t#u32 total_multicast_bytes_transmitted_lo ; t#u32 total_bytes_transmitted_hi ; t#u32 total_bytes_transmitted_lo ; t#u32 total_unicast_packets_received_hi ; t#u32 total_unicast_packets_received_lo ; t#u32 total_multicast_packets_received_hi ; t#u32 total_multicast_packets_received_lo ; t#u32 total_broadcast_packets_received_hi ; t#u32 total_broadcast_packets_received_lo ; t#u32 total_unicast_packets_transmitted_hi ; t#u32 total_unicast_packets_transmitted_lo ; t#u32 total_multicast_packets_transmitted_hi ; t#u32 total_multicast_packets_transmitted_lo ; t#u32 total_broadcast_packets_transmitted_hi ; t#u32 total_broadcast_packets_transmitted_lo ; t#u32 valid_bytes_received_hi ; t#u32 valid_bytes_received_lo ; t#u32 etherstatsoverrsizepkts_hi ; t#u32 etherstatsoverrsizepkts_lo ; t#u32 no_buff_discard_hi ; t#u32 no_buff_discard_lo ; t#u32 driver_xoff ; t#u32 rx_err_discard_pkt ; t#u32 rx_skb_alloc_failed ; t#u32 hw_csum_err ; t#u32 total_packets_received_checksum_discarded_hi ; t#u32 total_packets_received_checksum_discarded_lo ; t#u32 total_packets_received_ttl0_discarded_hi ; t#u32 total_packets_received_ttl0_discarded_lo ; t#u32 total_transmitted_dropped_packets_error_hi ; t#u32 total_transmitted_dropped_packets_error_lo ; t#u32 total_tpa_aggregations_hi ; t#u32 total_tpa_aggregations_lo ; t#u32 total_tpa_aggregated_frames_hi ; t#u32 total_tpa_aggregated_frames_lo ; t#u32 total_tpa_bytes_hi ; t#u32 total_tpa_bytes_lo ; t#u32 driver_filtered_tx_pkt ; } 
s#bnx2x_eth_q_stats_old struct bnx2x_eth_q_stats_old { t#u32 total_unicast_bytes_received_hi ; t#u32 total_unicast_bytes_received_lo ; t#u32 total_broadcast_bytes_received_hi ; t#u32 total_broadcast_bytes_received_lo ; t#u32 total_multicast_bytes_received_hi ; t#u32 total_multicast_bytes_received_lo ; t#u32 total_unicast_bytes_transmitted_hi ; t#u32 total_unicast_bytes_transmitted_lo ; t#u32 total_broadcast_bytes_transmitted_hi ; t#u32 total_broadcast_bytes_transmitted_lo ; t#u32 total_multicast_bytes_transmitted_hi ; t#u32 total_multicast_bytes_transmitted_lo ; t#u32 total_tpa_bytes_hi ; t#u32 total_tpa_bytes_lo ; t#u32 total_bytes_received_hi ; t#u32 total_bytes_received_lo ; t#u32 total_bytes_transmitted_hi ; t#u32 total_bytes_transmitted_lo ; t#u32 total_unicast_packets_received_hi ; t#u32 total_unicast_packets_received_lo ; t#u32 total_multicast_packets_received_hi ; t#u32 total_multicast_packets_received_lo ; t#u32 total_broadcast_packets_received_hi ; t#u32 total_broadcast_packets_received_lo ; t#u32 total_unicast_packets_transmitted_hi ; t#u32 total_unicast_packets_transmitted_lo ; t#u32 total_multicast_packets_transmitted_hi ; t#u32 total_multicast_packets_transmitted_lo ; t#u32 total_broadcast_packets_transmitted_hi ; t#u32 total_broadcast_packets_transmitted_lo ; t#u32 valid_bytes_received_hi ; t#u32 valid_bytes_received_lo ; t#u32 total_tpa_bytes_hi_old ; t#u32 total_tpa_bytes_lo_old ; t#u32 driver_xoff_old ; t#u32 rx_err_discard_pkt_old ; t#u32 rx_skb_alloc_failed_old ; t#u32 hw_csum_err_old ; t#u32 driver_filtered_tx_pkt_old ; } 
s#bnx2x_fp_stats struct bnx2x_fp_stats { s#tstorm_per_queue_stats old_tclient ; s#ustorm_per_queue_stats old_uclient ; s#xstorm_per_queue_stats old_xclient ; s#bnx2x_eth_q_stats eth_q_stats ; s#bnx2x_eth_q_stats_old eth_q_stats_old ; } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#iro struct iro { t#u32 base ; t#u16 m1 ; t#u16 m2 ; t#u16 m3 ; t#u16 size ; } 
e#bnx2x_recovery_state enum bnx2x_recovery_state { BNX2X_RECOVERY_DONE , BNX2X_RECOVERY_INIT , BNX2X_RECOVERY_WAIT , BNX2X_RECOVERY_FAILED , BNX2X_RECOVERY_NIC_LOADING } 
s#msix_entry struct msix_entry { t#u32 vector ; t#u16 entry ; } 
s#atten_sp_status_block struct atten_sp_status_block { t#__le32 attn_bits ; t#__le32 attn_bits_ack ; t#u8 status_block_id ; t#u8 reserved0 ; t#__le16 attn_bits_index ; t#__le32 reserved1 ; } 
s#hc_sp_status_block struct hc_sp_status_block { t#__le16 index_values [ 16 ] ; t#__le16 running_index ; t#__le16 rsrv ; t#u32 rsrv1 ; } 
s#host_sp_status_block struct host_sp_status_block { s#atten_sp_status_block atten_status_block ; s#hc_sp_status_block sp_sb ; } 
s#attn_route struct attn_route { t#u32 sig [ 5 ] ; } 
s#spe_hdr struct spe_hdr { t#__le32 conn_and_cmd_data ; t#__le16 type ; t#__le16 reserved1 ; } 
s#eth_halt_ramrod_data struct eth_halt_ramrod_data { t#__le32 client_id ; t#__le32 reserved0 ; } 
s#eth_common_ramrod_data struct eth_common_ramrod_data { t#__le32 client_id ; t#__le32 reserved1 ; } 
u#eth_specific_data union eth_specific_data { t#u8 protocol_data [ 8 ] ; s#regpair client_update_ramrod_data ; s#regpair client_init_ramrod_init_data ; s#eth_halt_ramrod_data halt_ramrod_data ; s#regpair update_data_addr ; s#eth_common_ramrod_data common_ramrod_data ; s#regpair classify_cfg_addr ; s#regpair filter_cfg_addr ; s#regpair mcast_cfg_addr ; } 
s#eth_spe struct eth_spe { s#spe_hdr hdr ; u#eth_specific_data data ; } 
s#cnic_irq struct cnic_irq { unsigned int vector ; void * status_blk ; t#u32 status_blk_num ; t#u32 status_blk_num2 ; t#u32 irq_flags ; } 
s#cnic_ctl_completion struct cnic_ctl_completion { t#u32 cid ; t#u8 opcode ; t#u8 error ; } 
s#cnic_ctl_info struct cnic_ctl_info { int cmd ; union { s#cnic_ctl_completion comp ; char bytes [ 64 ] ; } data ; } 
s#cnic_ops struct cnic_ops { s#module * cnic_owner ; int ( * cnic_handler ) ( void * , void * ) ; int ( * cnic_ctl ) ( void * , s#cnic_ctl_info * ) ; } 
s#kwqe struct kwqe { t#u32 kwqe_op_flag ; t#u32 kwqe_info0 ; t#u32 kwqe_info1 ; t#u32 kwqe_info2 ; t#u32 kwqe_info3 ; t#u32 kwqe_info4 ; t#u32 kwqe_info5 ; t#u32 kwqe_info6 ; } 
s#kwqe_16 struct kwqe_16 { t#u32 kwqe_info0 ; t#u32 kwqe_info1 ; t#u32 kwqe_info2 ; t#u32 kwqe_info3 ; } 
s#drv_ctl_spq_credit struct drv_ctl_spq_credit { t#u32 credit_count ; } 
s#drv_ctl_io struct drv_ctl_io { t#u32 cid_addr ; t#u32 offset ; t#u32 data ; t#dma_addr_t dma_addr ; } 
s#drv_ctl_l2_ring struct drv_ctl_l2_ring { t#u32 client_id ; t#u32 cid ; } 
s#fcoe_capabilities struct fcoe_capabilities { t#u32 capability1 ; t#u32 capability2 ; t#u32 capability3 ; t#u32 capability4 ; } 
s#drv_ctl_register_data struct drv_ctl_register_data { int ulp_type ; s#fcoe_capabilities fcoe_features ; } 
s#drv_ctl_info struct drv_ctl_info { int cmd ; union { s#drv_ctl_spq_credit credit ; s#drv_ctl_io io ; s#drv_ctl_l2_ring ring ; int ulp_type ; s#drv_ctl_register_data register_data ; char bytes [ 64 ] ; } data ; } 
s#eth_stats_info struct eth_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u8 mac_add2 [ 8 ] ; t#u32 mtu_size ; t#u32 feature_flags ; t#u32 lso_max_size ; t#u32 lso_min_seg_cnt ; t#u32 ipv4_ofld_cnt ; t#u32 ipv6_ofld_cnt ; t#u32 promiscuous_mode ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 iov_offload ; t#u32 netq_cnt ; t#u32 vf_cnt ; } 
s#fcoe_stats_info struct fcoe_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u8 mac_add2 [ 8 ] ; t#u32 qos_priority ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 rx_frames_lo ; t#u32 rx_frames_hi ; t#u32 rx_bytes_lo ; t#u32 rx_bytes_hi ; t#u32 tx_frames_lo ; t#u32 tx_frames_hi ; t#u32 tx_bytes_lo ; t#u32 tx_bytes_hi ; } 
s#iscsi_stats_info struct iscsi_stats_info { t#u8 version [ 12 ] ; t#u8 mac_local [ 8 ] ; t#u8 mac_add1 [ 8 ] ; t#u32 qos_priority ; t#u8 initiator_name [ 64 ] ; t#u8 ww_port_name [ 64 ] ; t#u8 boot_target_name [ 64 ] ; t#u8 boot_target_ip [ 16 ] ; t#u32 boot_target_portal ; t#u8 boot_init_ip [ 16 ] ; t#u32 max_frame_size ; t#u32 txq_size ; t#u32 rxq_size ; t#u32 txq_avg_depth ; t#u32 rxq_avg_depth ; t#u32 rx_pdus_lo ; t#u32 rx_pdus_hi ; t#u32 rx_bytes_lo ; t#u32 rx_bytes_hi ; t#u32 tx_pdus_lo ; t#u32 tx_pdus_hi ; t#u32 tx_bytes_lo ; t#u32 tx_bytes_hi ; t#u32 pcp_prior_map_tbl ; } 
u#drv_info_to_mcp union drv_info_to_mcp { s#eth_stats_info ether_stat ; s#fcoe_stats_info fcoe_stat ; s#iscsi_stats_info iscsi_stat ; } 
s#cnic_eth_dev struct cnic_eth_dev { s#module * drv_owner ; t#u32 drv_state ; t#u32 chip_id ; t#u32 max_kwqe_pending ; s#pci_dev * pdev ; void * io_base ; void * io_base2 ; const void * iro_arr ; t#u32 ctx_tbl_offset ; t#u32 ctx_tbl_len ; int ctx_blk_size ; t#u32 starting_cid ; t#u32 max_iscsi_conn ; t#u32 max_fcoe_conn ; t#u32 max_rdma_conn ; t#u32 fcoe_init_cid ; t#u32 max_fcoe_exchanges ; t#u32 fcoe_wwn_port_name_hi ; t#u32 fcoe_wwn_port_name_lo ; t#u32 fcoe_wwn_node_name_hi ; t#u32 fcoe_wwn_node_name_lo ; t#u16 iscsi_l2_client_id ; t#u16 iscsi_l2_cid ; t#u8 iscsi_mac [ 6 ] ; int num_irq ; s#cnic_irq irq_arr [ 8 ] ; int ( * drv_register_cnic ) ( s#net_device * , s#cnic_ops * , void * ) ; int ( * drv_unregister_cnic ) ( s#net_device * ) ; int ( * drv_submit_kwqes_32 ) ( s#net_device * , s#kwqe * [ ] , t#u32 ) ; int ( * drv_submit_kwqes_16 ) ( s#net_device * , s#kwqe_16 * [ ] , t#u32 ) ; int ( * drv_ctl ) ( s#net_device * , s#drv_ctl_info * ) ; unsigned long reserved1 [ 2 ] ; u#drv_info_to_mcp * addr_drv_info_to_mcp ; } 
s#link_vars struct link_vars { t#u8 phy_flags ; t#u8 mac_type ; t#u8 phy_link_up ; t#u8 link_up ; t#u16 line_speed ; t#u16 duplex ; t#u16 flow_ctrl ; t#u16 ieee_fc ; t#u32 link_status ; t#u32 eee_status ; t#u8 fault_detected ; t#u8 check_kr2_recovery_cnt ; t#u16 periodic_flags ; t#u32 aeu_int_mask ; t#u8 rx_tx_asic_rst ; t#u8 turn_to_run_wc_rt ; t#u16 rsrv2 ; t#u32 link_attr_sync ; } 
t#config_init_t typedef t#u8 ( * config_init_t ) ( s#bnx2x_phy * , s#link_params * , s#link_vars * ) 
t#read_status_t typedef t#u8 ( * read_status_t ) ( s#bnx2x_phy * , s#link_params * , s#link_vars * ) 
t#link_reset_t typedef void ( * link_reset_t ) ( s#bnx2x_phy * , s#link_params * ) 
t#config_loopback_t typedef void ( * config_loopback_t ) ( s#bnx2x_phy * , s#link_params * ) 
t#format_fw_ver_t typedef t#u8 ( * format_fw_ver_t ) ( t#u32 , t#u8 * , t#u16 * ) 
t#hw_reset_t typedef void ( * hw_reset_t ) ( s#bnx2x_phy * , s#link_params * ) 
t#set_link_led_t typedef void ( * set_link_led_t ) ( s#bnx2x_phy * , s#link_params * , t#u8 ) 
t#phy_specific_func_t typedef void ( * phy_specific_func_t ) ( s#bnx2x_phy * , s#link_params * , t#u32 ) 
s#bnx2x_phy struct bnx2x_phy { t#u32 type ; t#u8 addr ; t#u8 def_md_devad ; t#u16 flags ; t#u16 rx_preemphasis [ 4 ] ; t#u16 tx_preemphasis [ 4 ] ; t#u32 mdio_ctrl ; t#u32 supported ; t#u32 media_type ; t#u32 ver_addr ; t#u16 req_flow_ctrl ; t#u16 req_line_speed ; t#u32 speed_cap_mask ; t#u16 req_duplex ; t#u16 rsrv ; t#config_init_t config_init ; t#read_status_t read_status ; t#link_reset_t link_reset ; t#config_loopback_t config_loopback ; t#format_fw_ver_t format_fw_ver ; t#hw_reset_t hw_reset ; t#set_link_led_t set_link_led ; t#phy_specific_func_t phy_specific_func ; } 
s#link_params struct link_params { t#u8 port ; t#u8 loopback_mode ; t#u8 mac_addr [ 6 ] ; t#u16 req_duplex [ ( 3 - 1 ) ] ; t#u16 req_flow_ctrl [ ( 3 - 1 ) ] ; t#u16 req_line_speed [ ( 3 - 1 ) ] ; t#u32 shmem_base ; t#u32 shmem2_base ; t#u32 speed_cap_mask [ ( 3 - 1 ) ] ; t#u32 switch_cfg ; t#u32 lane_config ; t#u32 chip_id ; t#u32 feature_config_flags ; s#bnx2x_phy phy [ 3 ] ; t#u8 num_phys ; t#u8 rsrv ; t#u32 eee_mode ; t#u16 hw_led_mode ; t#u32 multi_phy_config ; s#bnx2x * bp ; t#u16 req_fc_auto_adv ; t#u16 link_flags ; t#u32 lfa_base ; } 
s#bnx2x_link_report_data struct bnx2x_link_report_data { t#u16 line_speed ; unsigned long link_report_flags ; } 
s#mdio_if_info struct mdio_if_info { int prtad ; t#u32 mmds ; unsigned mode_support ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int , t#u16 ) ; int ( * mdio_write ) ( s#net_device * , int , int , t#u16 , t#u16 ) ; } 
s#bnx2x_common struct bnx2x_common { t#u32 chip_id ; int flash_size ; t#u32 shmem_base ; t#u32 shmem2_base ; t#u32 mf_cfg_base ; t#u32 mf2_cfg_base ; t#u32 hw_config ; t#u32 bc_ver ; t#u8 int_block ; t#u8 chip_port_mode ; t#u32 boot_mode ; } 
s#nig_stats struct nig_stats { t#u32 brb_discard ; t#u32 brb_packet ; t#u32 brb_truncate ; t#u32 flow_ctrl_discard ; t#u32 flow_ctrl_octets ; t#u32 flow_ctrl_packet ; t#u32 mng_discard ; t#u32 mng_octet_inp ; t#u32 mng_octet_out ; t#u32 mng_packet_inp ; t#u32 mng_packet_out ; t#u32 pbf_octets ; t#u32 pbf_packet ; t#u32 safc_inp ; t#u32 egress_mac_pkt0_lo ; t#u32 egress_mac_pkt0_hi ; t#u32 egress_mac_pkt1_lo ; t#u32 egress_mac_pkt1_hi ; } 
s#bnx2x_port struct bnx2x_port { t#u32 pmf ; t#u32 link_config [ ( 3 - 1 ) ] ; t#u32 supported [ ( 3 - 1 ) ] ; t#u32 advertising [ ( 3 - 1 ) ] ; t#u32 phy_addr ; s#mutex phy_mutex ; t#u32 port_stx ; s#nig_stats old_nig_stats ; } 
s#rate_shaping_vars_per_port struct rate_shaping_vars_per_port { t#u32 rs_periodic_timeout ; t#u32 rs_threshold ; } 
s#fairness_vars_per_port struct fairness_vars_per_port { t#u32 upper_bound ; t#u32 fair_threshold ; t#u32 fairness_timeout ; t#u32 reserved0 ; } 
s#safc_struct_per_port struct safc_struct_per_port { t#u16 __reserved1 ; t#u8 __reserved0 ; t#u8 safc_timeout_usec ; t#u8 cos_to_traffic_types [ 4 ] ; t#u16 cos_to_pause_mask [ 16 ] ; } 
s#cmng_flags_per_port struct cmng_flags_per_port { t#u32 cmng_enables ; t#u32 __reserved1 ; } 
s#cmng_struct_per_port struct cmng_struct_per_port { s#rate_shaping_vars_per_port rs_vars ; s#fairness_vars_per_port fair_vars ; s#safc_struct_per_port safc_vars ; s#cmng_flags_per_port flags ; } 
s#rate_shaping_counter struct rate_shaping_counter { t#u32 quota ; t#u16 __reserved0 ; t#u16 rate ; } 
s#rate_shaping_vars_per_vn struct rate_shaping_vars_per_vn { s#rate_shaping_counter vn_counter ; } 
s#fairness_vars_per_vn struct fairness_vars_per_vn { t#u32 cos_credit_delta [ 4 ] ; t#u32 vn_credit_delta ; t#u32 __reserved0 ; } 
s#cmng_vnic struct cmng_vnic { s#rate_shaping_vars_per_vn vnic_max_rate [ 4 ] ; s#fairness_vars_per_vn vnic_min_rate [ 4 ] ; } 
s#cmng_init struct cmng_init { s#cmng_struct_per_port port ; s#cmng_vnic vnic ; } 
s#mac_configuration_hdr struct mac_configuration_hdr { t#u8 length ; t#u8 offset ; t#__le16 client_id ; t#__le32 echo ; } 
s#mac_configuration_entry struct mac_configuration_entry { t#__le16 lsb_mac_addr ; t#__le16 middle_mac_addr ; t#__le16 msb_mac_addr ; t#__le16 vlan_id ; t#u8 pf_id ; t#u8 flags ; t#__le16 reserved0 ; t#__le32 clients_bit_vector ; } 
s#mac_configuration_cmd struct mac_configuration_cmd { s#mac_configuration_hdr hdr ; s#mac_configuration_entry config_table [ 64 ] ; } 
s#eth_classify_header struct eth_classify_header { t#u8 rule_cnt ; t#u8 reserved0 ; t#__le16 reserved1 ; t#__le32 echo ; } 
s#eth_classify_cmd_header struct eth_classify_cmd_header { t#u8 cmd_general_data ; t#u8 func_id ; t#u8 client_id ; t#u8 reserved1 ; } 
s#eth_classify_mac_cmd struct eth_classify_mac_cmd { s#eth_classify_cmd_header header ; t#__le16 reserved0 ; t#__le16 inner_mac ; t#__le16 mac_lsb ; t#__le16 mac_mid ; t#__le16 mac_msb ; t#__le16 reserved1 ; } 
s#eth_classify_vlan_cmd struct eth_classify_vlan_cmd { s#eth_classify_cmd_header header ; t#__le32 reserved0 ; t#__le32 reserved1 ; t#__le16 reserved2 ; t#__le16 vlan ; } 
s#eth_classify_pair_cmd struct eth_classify_pair_cmd { s#eth_classify_cmd_header header ; t#__le16 reserved0 ; t#__le16 inner_mac ; t#__le16 mac_lsb ; t#__le16 mac_mid ; t#__le16 mac_msb ; t#__le16 vlan ; } 
s#eth_classify_vxlan_cmd struct eth_classify_vxlan_cmd { s#eth_classify_cmd_header header ; t#__le32 vni ; t#__le16 inner_mac_lsb ; t#__le16 inner_mac_mid ; t#__le16 inner_mac_msb ; t#__le16 reserved1 ; } 
u#eth_classify_rule_cmd union eth_classify_rule_cmd { s#eth_classify_mac_cmd mac ; s#eth_classify_vlan_cmd vlan ; s#eth_classify_pair_cmd pair ; s#eth_classify_vxlan_cmd vxlan ; } 
s#eth_classify_rules_ramrod_data struct eth_classify_rules_ramrod_data { s#eth_classify_header header ; u#eth_classify_rule_cmd rules [ 16 ] ; } 
s#tstorm_eth_mac_filter_config struct tstorm_eth_mac_filter_config { t#u32 ucast_drop_all ; t#u32 ucast_accept_all ; t#u32 mcast_drop_all ; t#u32 mcast_accept_all ; t#u32 bcast_accept_all ; t#u32 vlan_filter [ 2 ] ; t#u32 unmatched_unicast ; } 
s#eth_filter_rules_cmd struct eth_filter_rules_cmd { t#u8 cmd_general_data ; t#u8 func_id ; t#u8 client_id ; t#u8 reserved1 ; t#__le16 state ; t#__le16 reserved3 ; s#regpair reserved4 ; } 
s#eth_filter_rules_ramrod_data struct eth_filter_rules_ramrod_data { s#eth_classify_header header ; s#eth_filter_rules_cmd rules [ 16 ] ; } 
s#eth_multicast_rules_cmd struct eth_multicast_rules_cmd { t#u8 cmd_general_data ; t#u8 func_id ; t#u8 bin_id ; t#u8 engine_id ; t#__le32 reserved2 ; s#regpair reserved3 ; } 
s#eth_multicast_rules_ramrod_data struct eth_multicast_rules_ramrod_data { s#eth_classify_header header ; s#eth_multicast_rules_cmd rules [ 16 ] ; } 
s#eth_rss_update_ramrod_data struct eth_rss_update_ramrod_data { t#u8 rss_engine_id ; t#u8 rss_mode ; t#__le16 capabilities ; t#u8 rss_result_mask ; t#u8 reserved3 ; t#__le16 reserved4 ; t#u8 indirection_table [ 128 ] ; t#__le32 rss_key [ 10 ] ; t#__le32 echo ; t#__le32 reserved5 ; } 
s#client_init_general_data struct client_init_general_data { t#u8 client_id ; t#u8 statistics_counter_id ; t#u8 statistics_en_flg ; t#u8 is_fcoe_flg ; t#u8 activate_flg ; t#u8 sp_client_id ; t#__le16 mtu ; t#u8 statistics_zero_flg ; t#u8 func_id ; t#u8 cos ; t#u8 traffic_type ; t#u8 fp_hsi_ver ; t#u8 reserved0 [ 3 ] ; } 
s#client_init_rx_data struct client_init_rx_data { t#u8 tpa_en ; t#u8 vmqueue_mode_en_flg ; t#u8 extra_data_over_sgl_en_flg ; t#u8 cache_line_alignment_log_size ; t#u8 enable_dynamic_hc ; t#u8 max_sges_for_packet ; t#u8 client_qzone_id ; t#u8 drop_ip_cs_err_flg ; t#u8 drop_tcp_cs_err_flg ; t#u8 drop_ttl0_flg ; t#u8 drop_udp_cs_err_flg ; t#u8 inner_vlan_removal_enable_flg ; t#u8 outer_vlan_removal_enable_flg ; t#u8 status_block_id ; t#u8 rx_sb_index_number ; t#u8 dont_verify_rings_pause_thr_flg ; t#u8 max_tpa_queues ; t#u8 silent_vlan_removal_flg ; t#__le16 max_bytes_on_bd ; t#__le16 sge_buff_size ; t#u8 approx_mcast_engine_id ; t#u8 rss_engine_id ; s#regpair bd_page_base ; s#regpair sge_page_base ; s#regpair cqe_page_base ; t#u8 is_leading_rss ; t#u8 is_approx_mcast ; t#__le16 max_agg_size ; t#__le16 state ; t#__le16 cqe_pause_thr_low ; t#__le16 cqe_pause_thr_high ; t#__le16 bd_pause_thr_low ; t#__le16 bd_pause_thr_high ; t#__le16 sge_pause_thr_low ; t#__le16 sge_pause_thr_high ; t#__le16 rx_cos_mask ; t#__le16 silent_vlan_value ; t#__le16 silent_vlan_mask ; t#u8 handle_ptp_pkts_flg ; t#u8 reserved6 [ 3 ] ; t#__le32 reserved7 ; } 
s#client_init_tx_data struct client_init_tx_data { t#u8 enforce_security_flg ; t#u8 tx_status_block_id ; t#u8 tx_sb_index_number ; t#u8 tss_leading_client_id ; t#u8 tx_switching_flg ; t#u8 anti_spoofing_flg ; t#__le16 default_vlan ; s#regpair tx_bd_page_base ; t#__le16 state ; t#u8 default_vlan_flg ; t#u8 force_default_pri_flg ; t#u8 tunnel_lso_inc_ip_id ; t#u8 refuse_outband_vlan_flg ; t#u8 tunnel_non_lso_pcsum_location ; t#u8 tunnel_non_lso_outer_ip_csum_location ; } 
s#client_init_ramrod_data struct client_init_ramrod_data { s#client_init_general_data general ; s#client_init_rx_data rx ; s#client_init_tx_data tx ; } 
s#client_update_ramrod_data struct client_update_ramrod_data { t#u8 client_id ; t#u8 func_id ; t#u8 inner_vlan_removal_enable_flg ; t#u8 inner_vlan_removal_change_flg ; t#u8 outer_vlan_removal_enable_flg ; t#u8 outer_vlan_removal_change_flg ; t#u8 anti_spoofing_enable_flg ; t#u8 anti_spoofing_change_flg ; t#u8 activate_flg ; t#u8 activate_change_flg ; t#__le16 default_vlan ; t#u8 default_vlan_enable_flg ; t#u8 default_vlan_change_flg ; t#__le16 silent_vlan_value ; t#__le16 silent_vlan_mask ; t#u8 silent_vlan_removal_flg ; t#u8 silent_vlan_change_flg ; t#u8 refuse_outband_vlan_flg ; t#u8 refuse_outband_vlan_change_flg ; t#u8 tx_switching_flg ; t#u8 tx_switching_change_flg ; t#u8 handle_ptp_pkts_flg ; t#u8 handle_ptp_pkts_change_flg ; t#__le16 reserved1 ; t#__le32 echo ; } 
s#tpa_update_ramrod_data struct tpa_update_ramrod_data { t#u8 update_ipv4 ; t#u8 update_ipv6 ; t#u8 client_id ; t#u8 max_tpa_queues ; t#u8 max_sges_for_packet ; t#u8 complete_on_both_clients ; t#u8 dont_verify_rings_pause_thr_flg ; t#u8 tpa_mode ; t#__le16 sge_buff_size ; t#__le16 max_agg_size ; t#__le32 sge_page_base_lo ; t#__le32 sge_page_base_hi ; t#__le16 sge_pause_thr_low ; t#__le16 sge_pause_thr_high ; } 
s#function_start_data struct function_start_data { t#u8 function_mode ; t#u8 allow_npar_tx_switching ; t#__le16 sd_vlan_tag ; t#__le16 vif_id ; t#u8 path_id ; t#u8 network_cos_mode ; t#u8 dmae_cmd_id ; t#u8 tunnel_mode ; t#u8 gre_tunnel_type ; t#u8 tunn_clss_en ; t#u8 inner_gre_rss_en ; t#u8 sd_accept_mf_clss_fail ; t#__le16 vxlan_dst_port ; t#__le16 sd_accept_mf_clss_fail_ethtype ; t#__le16 sd_vlan_eth_type ; t#u8 sd_vlan_force_pri_flg ; t#u8 sd_vlan_force_pri_val ; t#u8 sd_accept_mf_clss_fail_match_ethtype ; t#u8 no_added_tags ; } 
s#priority_cos struct priority_cos { t#u8 priority ; t#u8 cos ; t#__le16 reserved1 ; } 
s#flow_control_configuration struct flow_control_configuration { s#priority_cos traffic_type_to_priority_cos [ 8 ] ; t#u8 dcb_enabled ; t#u8 dcb_version ; t#u8 dont_add_pri_0_en ; t#u8 reserved1 ; t#__le32 reserved2 ; } 
s#afex_vif_list_ramrod_data struct afex_vif_list_ramrod_data { t#u8 afex_vif_list_command ; t#u8 func_bit_map ; t#__le16 vif_list_index ; t#u8 func_to_clear ; t#u8 echo ; t#__le16 reserved1 ; } 
s#function_update_data struct function_update_data { t#u8 vif_id_change_flg ; t#u8 afex_default_vlan_change_flg ; t#u8 allowed_priorities_change_flg ; t#u8 network_cos_mode_change_flg ; t#__le16 vif_id ; t#__le16 afex_default_vlan ; t#u8 allowed_priorities ; t#u8 network_cos_mode ; t#u8 lb_mode_en_change_flg ; t#u8 lb_mode_en ; t#u8 tx_switch_suspend_change_flg ; t#u8 tx_switch_suspend ; t#u8 echo ; t#u8 update_tunn_cfg_flg ; t#u8 tunnel_mode ; t#u8 gre_tunnel_type ; t#u8 tunn_clss_en ; t#u8 inner_gre_rss_en ; t#__le16 vxlan_dst_port ; t#u8 sd_vlan_force_pri_change_flg ; t#u8 sd_vlan_force_pri_flg ; t#u8 sd_vlan_force_pri_val ; t#u8 sd_vlan_tag_change_flg ; t#u8 sd_vlan_eth_type_change_flg ; t#u8 reserved1 ; t#__le16 sd_vlan_tag ; t#__le16 sd_vlan_eth_type ; } 
s#dmae_command struct dmae_command { t#u32 opcode ; t#u32 src_addr_lo ; t#u32 src_addr_hi ; t#u32 dst_addr_lo ; t#u32 dst_addr_hi ; t#u16 opcode_iov ; t#u16 len ; t#u32 comp_addr_lo ; t#u32 comp_addr_hi ; t#u32 comp_val ; t#u32 crc32 ; t#u32 crc32_c ; t#u16 crc16_c ; t#u16 crc16 ; t#u16 reserved3 ; t#u16 crc_t10 ; t#u16 xsum8 ; t#u16 xsum16 ; } 
s#emac_stats struct emac_stats { t#u32 rx_stat_ifhcinoctets ; t#u32 rx_stat_ifhcinbadoctets ; t#u32 rx_stat_etherstatsfragments ; t#u32 rx_stat_ifhcinucastpkts ; t#u32 rx_stat_ifhcinmulticastpkts ; t#u32 rx_stat_ifhcinbroadcastpkts ; t#u32 rx_stat_dot3statsfcserrors ; t#u32 rx_stat_dot3statsalignmenterrors ; t#u32 rx_stat_dot3statscarriersenseerrors ; t#u32 rx_stat_xonpauseframesreceived ; t#u32 rx_stat_xoffpauseframesreceived ; t#u32 rx_stat_maccontrolframesreceived ; t#u32 rx_stat_xoffstateentered ; t#u32 rx_stat_dot3statsframestoolong ; t#u32 rx_stat_etherstatsjabbers ; t#u32 rx_stat_etherstatsundersizepkts ; t#u32 rx_stat_etherstatspkts64octets ; t#u32 rx_stat_etherstatspkts65octetsto127octets ; t#u32 rx_stat_etherstatspkts128octetsto255octets ; t#u32 rx_stat_etherstatspkts256octetsto511octets ; t#u32 rx_stat_etherstatspkts512octetsto1023octets ; t#u32 rx_stat_etherstatspkts1024octetsto1522octets ; t#u32 rx_stat_etherstatspktsover1522octets ; t#u32 rx_stat_falsecarriererrors ; t#u32 tx_stat_ifhcoutoctets ; t#u32 tx_stat_ifhcoutbadoctets ; t#u32 tx_stat_etherstatscollisions ; t#u32 tx_stat_outxonsent ; t#u32 tx_stat_outxoffsent ; t#u32 tx_stat_flowcontroldone ; t#u32 tx_stat_dot3statssinglecollisionframes ; t#u32 tx_stat_dot3statsmultiplecollisionframes ; t#u32 tx_stat_dot3statsdeferredtransmissions ; t#u32 tx_stat_dot3statsexcessivecollisions ; t#u32 tx_stat_dot3statslatecollisions ; t#u32 tx_stat_ifhcoutucastpkts ; t#u32 tx_stat_ifhcoutmulticastpkts ; t#u32 tx_stat_ifhcoutbroadcastpkts ; t#u32 tx_stat_etherstatspkts64octets ; t#u32 tx_stat_etherstatspkts65octetsto127octets ; t#u32 tx_stat_etherstatspkts128octetsto255octets ; t#u32 tx_stat_etherstatspkts256octetsto511octets ; t#u32 tx_stat_etherstatspkts512octetsto1023octets ; t#u32 tx_stat_etherstatspkts1024octetsto1522octets ; t#u32 tx_stat_etherstatspktsover1522octets ; t#u32 tx_stat_dot3statsinternalmactransmiterrors ; } 
s#bmac1_stats struct bmac1_stats { t#u32 tx_stat_gtpkt_lo ; t#u32 tx_stat_gtpkt_hi ; t#u32 tx_stat_gtxpf_lo ; t#u32 tx_stat_gtxpf_hi ; t#u32 tx_stat_gtfcs_lo ; t#u32 tx_stat_gtfcs_hi ; t#u32 tx_stat_gtmca_lo ; t#u32 tx_stat_gtmca_hi ; t#u32 tx_stat_gtbca_lo ; t#u32 tx_stat_gtbca_hi ; t#u32 tx_stat_gtfrg_lo ; t#u32 tx_stat_gtfrg_hi ; t#u32 tx_stat_gtovr_lo ; t#u32 tx_stat_gtovr_hi ; t#u32 tx_stat_gt64_lo ; t#u32 tx_stat_gt64_hi ; t#u32 tx_stat_gt127_lo ; t#u32 tx_stat_gt127_hi ; t#u32 tx_stat_gt255_lo ; t#u32 tx_stat_gt255_hi ; t#u32 tx_stat_gt511_lo ; t#u32 tx_stat_gt511_hi ; t#u32 tx_stat_gt1023_lo ; t#u32 tx_stat_gt1023_hi ; t#u32 tx_stat_gt1518_lo ; t#u32 tx_stat_gt1518_hi ; t#u32 tx_stat_gt2047_lo ; t#u32 tx_stat_gt2047_hi ; t#u32 tx_stat_gt4095_lo ; t#u32 tx_stat_gt4095_hi ; t#u32 tx_stat_gt9216_lo ; t#u32 tx_stat_gt9216_hi ; t#u32 tx_stat_gt16383_lo ; t#u32 tx_stat_gt16383_hi ; t#u32 tx_stat_gtmax_lo ; t#u32 tx_stat_gtmax_hi ; t#u32 tx_stat_gtufl_lo ; t#u32 tx_stat_gtufl_hi ; t#u32 tx_stat_gterr_lo ; t#u32 tx_stat_gterr_hi ; t#u32 tx_stat_gtbyt_lo ; t#u32 tx_stat_gtbyt_hi ; t#u32 rx_stat_gr64_lo ; t#u32 rx_stat_gr64_hi ; t#u32 rx_stat_gr127_lo ; t#u32 rx_stat_gr127_hi ; t#u32 rx_stat_gr255_lo ; t#u32 rx_stat_gr255_hi ; t#u32 rx_stat_gr511_lo ; t#u32 rx_stat_gr511_hi ; t#u32 rx_stat_gr1023_lo ; t#u32 rx_stat_gr1023_hi ; t#u32 rx_stat_gr1518_lo ; t#u32 rx_stat_gr1518_hi ; t#u32 rx_stat_gr2047_lo ; t#u32 rx_stat_gr2047_hi ; t#u32 rx_stat_gr4095_lo ; t#u32 rx_stat_gr4095_hi ; t#u32 rx_stat_gr9216_lo ; t#u32 rx_stat_gr9216_hi ; t#u32 rx_stat_gr16383_lo ; t#u32 rx_stat_gr16383_hi ; t#u32 rx_stat_grmax_lo ; t#u32 rx_stat_grmax_hi ; t#u32 rx_stat_grpkt_lo ; t#u32 rx_stat_grpkt_hi ; t#u32 rx_stat_grfcs_lo ; t#u32 rx_stat_grfcs_hi ; t#u32 rx_stat_grmca_lo ; t#u32 rx_stat_grmca_hi ; t#u32 rx_stat_grbca_lo ; t#u32 rx_stat_grbca_hi ; t#u32 rx_stat_grxcf_lo ; t#u32 rx_stat_grxcf_hi ; t#u32 rx_stat_grxpf_lo ; t#u32 rx_stat_grxpf_hi ; t#u32 rx_stat_grxuo_lo ; t#u32 rx_stat_grxuo_hi ; t#u32 rx_stat_grjbr_lo ; t#u32 rx_stat_grjbr_hi ; t#u32 rx_stat_grovr_lo ; t#u32 rx_stat_grovr_hi ; t#u32 rx_stat_grflr_lo ; t#u32 rx_stat_grflr_hi ; t#u32 rx_stat_grmeg_lo ; t#u32 rx_stat_grmeg_hi ; t#u32 rx_stat_grmeb_lo ; t#u32 rx_stat_grmeb_hi ; t#u32 rx_stat_grbyt_lo ; t#u32 rx_stat_grbyt_hi ; t#u32 rx_stat_grund_lo ; t#u32 rx_stat_grund_hi ; t#u32 rx_stat_grfrg_lo ; t#u32 rx_stat_grfrg_hi ; t#u32 rx_stat_grerb_lo ; t#u32 rx_stat_grerb_hi ; t#u32 rx_stat_grfre_lo ; t#u32 rx_stat_grfre_hi ; t#u32 rx_stat_gripj_lo ; t#u32 rx_stat_gripj_hi ; } 
s#bmac2_stats struct bmac2_stats { t#u32 tx_stat_gtpk_lo ; t#u32 tx_stat_gtpk_hi ; t#u32 tx_stat_gtxpf_lo ; t#u32 tx_stat_gtxpf_hi ; t#u32 tx_stat_gtpp_lo ; t#u32 tx_stat_gtpp_hi ; t#u32 tx_stat_gtfcs_lo ; t#u32 tx_stat_gtfcs_hi ; t#u32 tx_stat_gtuca_lo ; t#u32 tx_stat_gtuca_hi ; t#u32 tx_stat_gtmca_lo ; t#u32 tx_stat_gtmca_hi ; t#u32 tx_stat_gtbca_lo ; t#u32 tx_stat_gtbca_hi ; t#u32 tx_stat_gtovr_lo ; t#u32 tx_stat_gtovr_hi ; t#u32 tx_stat_gtfrg_lo ; t#u32 tx_stat_gtfrg_hi ; t#u32 tx_stat_gtpkt1_lo ; t#u32 tx_stat_gtpkt1_hi ; t#u32 tx_stat_gt64_lo ; t#u32 tx_stat_gt64_hi ; t#u32 tx_stat_gt127_lo ; t#u32 tx_stat_gt127_hi ; t#u32 tx_stat_gt255_lo ; t#u32 tx_stat_gt255_hi ; t#u32 tx_stat_gt511_lo ; t#u32 tx_stat_gt511_hi ; t#u32 tx_stat_gt1023_lo ; t#u32 tx_stat_gt1023_hi ; t#u32 tx_stat_gt1518_lo ; t#u32 tx_stat_gt1518_hi ; t#u32 tx_stat_gt2047_lo ; t#u32 tx_stat_gt2047_hi ; t#u32 tx_stat_gt4095_lo ; t#u32 tx_stat_gt4095_hi ; t#u32 tx_stat_gt9216_lo ; t#u32 tx_stat_gt9216_hi ; t#u32 tx_stat_gt16383_lo ; t#u32 tx_stat_gt16383_hi ; t#u32 tx_stat_gtmax_lo ; t#u32 tx_stat_gtmax_hi ; t#u32 tx_stat_gtufl_lo ; t#u32 tx_stat_gtufl_hi ; t#u32 tx_stat_gterr_lo ; t#u32 tx_stat_gterr_hi ; t#u32 tx_stat_gtbyt_lo ; t#u32 tx_stat_gtbyt_hi ; t#u32 rx_stat_gr64_lo ; t#u32 rx_stat_gr64_hi ; t#u32 rx_stat_gr127_lo ; t#u32 rx_stat_gr127_hi ; t#u32 rx_stat_gr255_lo ; t#u32 rx_stat_gr255_hi ; t#u32 rx_stat_gr511_lo ; t#u32 rx_stat_gr511_hi ; t#u32 rx_stat_gr1023_lo ; t#u32 rx_stat_gr1023_hi ; t#u32 rx_stat_gr1518_lo ; t#u32 rx_stat_gr1518_hi ; t#u32 rx_stat_gr2047_lo ; t#u32 rx_stat_gr2047_hi ; t#u32 rx_stat_gr4095_lo ; t#u32 rx_stat_gr4095_hi ; t#u32 rx_stat_gr9216_lo ; t#u32 rx_stat_gr9216_hi ; t#u32 rx_stat_gr16383_lo ; t#u32 rx_stat_gr16383_hi ; t#u32 rx_stat_grmax_lo ; t#u32 rx_stat_grmax_hi ; t#u32 rx_stat_grpkt_lo ; t#u32 rx_stat_grpkt_hi ; t#u32 rx_stat_grfcs_lo ; t#u32 rx_stat_grfcs_hi ; t#u32 rx_stat_gruca_lo ; t#u32 rx_stat_gruca_hi ; t#u32 rx_stat_grmca_lo ; t#u32 rx_stat_grmca_hi ; t#u32 rx_stat_grbca_lo ; t#u32 rx_stat_grbca_hi ; t#u32 rx_stat_grxpf_lo ; t#u32 rx_stat_grxpf_hi ; t#u32 rx_stat_grpp_lo ; t#u32 rx_stat_grpp_hi ; t#u32 rx_stat_grxuo_lo ; t#u32 rx_stat_grxuo_hi ; t#u32 rx_stat_grjbr_lo ; t#u32 rx_stat_grjbr_hi ; t#u32 rx_stat_grovr_lo ; t#u32 rx_stat_grovr_hi ; t#u32 rx_stat_grxcf_lo ; t#u32 rx_stat_grxcf_hi ; t#u32 rx_stat_grflr_lo ; t#u32 rx_stat_grflr_hi ; t#u32 rx_stat_grpok_lo ; t#u32 rx_stat_grpok_hi ; t#u32 rx_stat_grmeg_lo ; t#u32 rx_stat_grmeg_hi ; t#u32 rx_stat_grmeb_lo ; t#u32 rx_stat_grmeb_hi ; t#u32 rx_stat_grbyt_lo ; t#u32 rx_stat_grbyt_hi ; t#u32 rx_stat_grund_lo ; t#u32 rx_stat_grund_hi ; t#u32 rx_stat_grfrg_lo ; t#u32 rx_stat_grfrg_hi ; t#u32 rx_stat_grerb_lo ; t#u32 rx_stat_grerb_hi ; t#u32 rx_stat_grfre_lo ; t#u32 rx_stat_grfre_hi ; t#u32 rx_stat_gripj_lo ; t#u32 rx_stat_gripj_hi ; } 
s#mstat_stats struct mstat_stats { struct { t#u32 tx_gtxpok_lo ; t#u32 tx_gtxpok_hi ; t#u32 tx_gtxpf_lo ; t#u32 tx_gtxpf_hi ; t#u32 tx_gtxpp_lo ; t#u32 tx_gtxpp_hi ; t#u32 tx_gtfcs_lo ; t#u32 tx_gtfcs_hi ; t#u32 tx_gtuca_lo ; t#u32 tx_gtuca_hi ; t#u32 tx_gtmca_lo ; t#u32 tx_gtmca_hi ; t#u32 tx_gtgca_lo ; t#u32 tx_gtgca_hi ; t#u32 tx_gtpkt_lo ; t#u32 tx_gtpkt_hi ; t#u32 tx_gt64_lo ; t#u32 tx_gt64_hi ; t#u32 tx_gt127_lo ; t#u32 tx_gt127_hi ; t#u32 tx_gt255_lo ; t#u32 tx_gt255_hi ; t#u32 tx_gt511_lo ; t#u32 tx_gt511_hi ; t#u32 tx_gt1023_lo ; t#u32 tx_gt1023_hi ; t#u32 tx_gt1518_lo ; t#u32 tx_gt1518_hi ; t#u32 tx_gt2047_lo ; t#u32 tx_gt2047_hi ; t#u32 tx_gt4095_lo ; t#u32 tx_gt4095_hi ; t#u32 tx_gt9216_lo ; t#u32 tx_gt9216_hi ; t#u32 tx_gt16383_lo ; t#u32 tx_gt16383_hi ; t#u32 tx_gtufl_lo ; t#u32 tx_gtufl_hi ; t#u32 tx_gterr_lo ; t#u32 tx_gterr_hi ; t#u32 tx_gtbyt_lo ; t#u32 tx_gtbyt_hi ; t#u32 tx_collisions_lo ; t#u32 tx_collisions_hi ; t#u32 tx_singlecollision_lo ; t#u32 tx_singlecollision_hi ; t#u32 tx_multiplecollisions_lo ; t#u32 tx_multiplecollisions_hi ; t#u32 tx_deferred_lo ; t#u32 tx_deferred_hi ; t#u32 tx_excessivecollisions_lo ; t#u32 tx_excessivecollisions_hi ; t#u32 tx_latecollisions_lo ; t#u32 tx_latecollisions_hi ; } stats_tx ; struct { t#u32 rx_gr64_lo ; t#u32 rx_gr64_hi ; t#u32 rx_gr127_lo ; t#u32 rx_gr127_hi ; t#u32 rx_gr255_lo ; t#u32 rx_gr255_hi ; t#u32 rx_gr511_lo ; t#u32 rx_gr511_hi ; t#u32 rx_gr1023_lo ; t#u32 rx_gr1023_hi ; t#u32 rx_gr1518_lo ; t#u32 rx_gr1518_hi ; t#u32 rx_gr2047_lo ; t#u32 rx_gr2047_hi ; t#u32 rx_gr4095_lo ; t#u32 rx_gr4095_hi ; t#u32 rx_gr9216_lo ; t#u32 rx_gr9216_hi ; t#u32 rx_gr16383_lo ; t#u32 rx_gr16383_hi ; t#u32 rx_grpkt_lo ; t#u32 rx_grpkt_hi ; t#u32 rx_grfcs_lo ; t#u32 rx_grfcs_hi ; t#u32 rx_gruca_lo ; t#u32 rx_gruca_hi ; t#u32 rx_grmca_lo ; t#u32 rx_grmca_hi ; t#u32 rx_grbca_lo ; t#u32 rx_grbca_hi ; t#u32 rx_grxpf_lo ; t#u32 rx_grxpf_hi ; t#u32 rx_grxpp_lo ; t#u32 rx_grxpp_hi ; t#u32 rx_grxuo_lo ; t#u32 rx_grxuo_hi ; t#u32 rx_grovr_lo ; t#u32 rx_grovr_hi ; t#u32 rx_grxcf_lo ; t#u32 rx_grxcf_hi ; t#u32 rx_grflr_lo ; t#u32 rx_grflr_hi ; t#u32 rx_grpok_lo ; t#u32 rx_grpok_hi ; t#u32 rx_grbyt_lo ; t#u32 rx_grbyt_hi ; t#u32 rx_grund_lo ; t#u32 rx_grund_hi ; t#u32 rx_grfrg_lo ; t#u32 rx_grfrg_hi ; t#u32 rx_grerb_lo ; t#u32 rx_grerb_hi ; t#u32 rx_grfre_lo ; t#u32 rx_grfre_hi ; t#u32 rx_alignmenterrors_lo ; t#u32 rx_alignmenterrors_hi ; t#u32 rx_falsecarrier_lo ; t#u32 rx_falsecarrier_hi ; t#u32 rx_llfcmsgcnt_lo ; t#u32 rx_llfcmsgcnt_hi ; } stats_rx ; } 
u#mac_stats union mac_stats { s#emac_stats emac_stats ; s#bmac1_stats bmac1_stats ; s#bmac2_stats bmac2_stats ; s#mstat_stats mstat_stats ; } 
s#mac_stx struct mac_stx { t#u32 rx_stat_ifhcinbadoctets_hi ; t#u32 rx_stat_ifhcinbadoctets_lo ; t#u32 tx_stat_ifhcoutbadoctets_hi ; t#u32 tx_stat_ifhcoutbadoctets_lo ; t#u32 rx_stat_dot3statsfcserrors_hi ; t#u32 rx_stat_dot3statsfcserrors_lo ; t#u32 rx_stat_dot3statsalignmenterrors_hi ; t#u32 rx_stat_dot3statsalignmenterrors_lo ; t#u32 rx_stat_dot3statscarriersenseerrors_hi ; t#u32 rx_stat_dot3statscarriersenseerrors_lo ; t#u32 rx_stat_falsecarriererrors_hi ; t#u32 rx_stat_falsecarriererrors_lo ; t#u32 rx_stat_etherstatsundersizepkts_hi ; t#u32 rx_stat_etherstatsundersizepkts_lo ; t#u32 rx_stat_dot3statsframestoolong_hi ; t#u32 rx_stat_dot3statsframestoolong_lo ; t#u32 rx_stat_etherstatsfragments_hi ; t#u32 rx_stat_etherstatsfragments_lo ; t#u32 rx_stat_etherstatsjabbers_hi ; t#u32 rx_stat_etherstatsjabbers_lo ; t#u32 rx_stat_maccontrolframesreceived_hi ; t#u32 rx_stat_maccontrolframesreceived_lo ; t#u32 rx_stat_mac_xpf_hi ; t#u32 rx_stat_mac_xpf_lo ; t#u32 rx_stat_mac_xcf_hi ; t#u32 rx_stat_mac_xcf_lo ; t#u32 rx_stat_xoffstateentered_hi ; t#u32 rx_stat_xoffstateentered_lo ; t#u32 rx_stat_xonpauseframesreceived_hi ; t#u32 rx_stat_xonpauseframesreceived_lo ; t#u32 rx_stat_xoffpauseframesreceived_hi ; t#u32 rx_stat_xoffpauseframesreceived_lo ; t#u32 tx_stat_outxonsent_hi ; t#u32 tx_stat_outxonsent_lo ; t#u32 tx_stat_outxoffsent_hi ; t#u32 tx_stat_outxoffsent_lo ; t#u32 tx_stat_flowcontroldone_hi ; t#u32 tx_stat_flowcontroldone_lo ; t#u32 tx_stat_etherstatscollisions_hi ; t#u32 tx_stat_etherstatscollisions_lo ; t#u32 tx_stat_dot3statssinglecollisionframes_hi ; t#u32 tx_stat_dot3statssinglecollisionframes_lo ; t#u32 tx_stat_dot3statsmultiplecollisionframes_hi ; t#u32 tx_stat_dot3statsmultiplecollisionframes_lo ; t#u32 tx_stat_dot3statsdeferredtransmissions_hi ; t#u32 tx_stat_dot3statsdeferredtransmissions_lo ; t#u32 tx_stat_dot3statsexcessivecollisions_hi ; t#u32 tx_stat_dot3statsexcessivecollisions_lo ; t#u32 tx_stat_dot3statslatecollisions_hi ; t#u32 tx_stat_dot3statslatecollisions_lo ; t#u32 tx_stat_etherstatspkts64octets_hi ; t#u32 tx_stat_etherstatspkts64octets_lo ; t#u32 tx_stat_etherstatspkts65octetsto127octets_hi ; t#u32 tx_stat_etherstatspkts65octetsto127octets_lo ; t#u32 tx_stat_etherstatspkts128octetsto255octets_hi ; t#u32 tx_stat_etherstatspkts128octetsto255octets_lo ; t#u32 tx_stat_etherstatspkts256octetsto511octets_hi ; t#u32 tx_stat_etherstatspkts256octetsto511octets_lo ; t#u32 tx_stat_etherstatspkts512octetsto1023octets_hi ; t#u32 tx_stat_etherstatspkts512octetsto1023octets_lo ; t#u32 tx_stat_etherstatspkts1024octetsto1522octets_hi ; t#u32 tx_stat_etherstatspkts1024octetsto1522octets_lo ; t#u32 tx_stat_etherstatspktsover1522octets_hi ; t#u32 tx_stat_etherstatspktsover1522octets_lo ; t#u32 tx_stat_mac_2047_hi ; t#u32 tx_stat_mac_2047_lo ; t#u32 tx_stat_mac_4095_hi ; t#u32 tx_stat_mac_4095_lo ; t#u32 tx_stat_mac_9216_hi ; t#u32 tx_stat_mac_9216_lo ; t#u32 tx_stat_mac_16383_hi ; t#u32 tx_stat_mac_16383_lo ; t#u32 tx_stat_dot3statsinternalmactransmiterrors_hi ; t#u32 tx_stat_dot3statsinternalmactransmiterrors_lo ; t#u32 tx_stat_mac_ufl_hi ; t#u32 tx_stat_mac_ufl_lo ; } 
s#host_port_stats struct host_port_stats { t#u32 host_port_stats_counter ; s#mac_stx mac_stx [ 2 ] ; t#u32 brb_drop_hi ; t#u32 brb_drop_lo ; t#u32 not_used ; t#u32 pfc_frames_tx_hi ; t#u32 pfc_frames_tx_lo ; t#u32 pfc_frames_rx_hi ; t#u32 pfc_frames_rx_lo ; t#u32 eee_lpi_count_hi ; t#u32 eee_lpi_count_lo ; } 
s#host_func_stats struct host_func_stats { t#u32 host_func_stats_start ; t#u32 total_bytes_received_hi ; t#u32 total_bytes_received_lo ; t#u32 total_bytes_transmitted_hi ; t#u32 total_bytes_transmitted_lo ; t#u32 total_unicast_packets_received_hi ; t#u32 total_unicast_packets_received_lo ; t#u32 total_multicast_packets_received_hi ; t#u32 total_multicast_packets_received_lo ; t#u32 total_broadcast_packets_received_hi ; t#u32 total_broadcast_packets_received_lo ; t#u32 total_unicast_packets_transmitted_hi ; t#u32 total_unicast_packets_transmitted_lo ; t#u32 total_multicast_packets_transmitted_hi ; t#u32 total_multicast_packets_transmitted_lo ; t#u32 total_broadcast_packets_transmitted_hi ; t#u32 total_broadcast_packets_transmitted_lo ; t#u32 valid_bytes_received_hi ; t#u32 valid_bytes_received_lo ; t#u32 host_func_stats_end ; } 
s#bnx2x_slowpath struct bnx2x_slowpath { union { s#mac_configuration_cmd e1x ; s#eth_classify_rules_ramrod_data e2 ; } mac_rdata ; union { s#tstorm_eth_mac_filter_config e1x ; s#eth_filter_rules_ramrod_data e2 ; } rx_mode_rdata ; union { s#mac_configuration_cmd e1 ; s#eth_multicast_rules_ramrod_data e2 ; } mcast_rdata ; s#eth_rss_update_ramrod_data rss_rdata ; union { s#client_init_ramrod_data init_data ; s#client_update_ramrod_data update_data ; s#tpa_update_ramrod_data tpa_data ; } q_rdata ; union { s#function_start_data func_start ; s#flow_control_configuration pfc_config ; } func_rdata ; union { s#afex_vif_list_ramrod_data viflist_data ; s#function_update_data func_update ; } func_afex_rdata ; s#dmae_command dmae [ 8 ] ; t#u32 stats_comp ; u#mac_stats mac_stats ; s#nig_stats nig_stats ; s#host_port_stats port_stats ; s#host_func_stats func_stats ; t#u32 wb_comp ; t#u32 wb_data [ 4 ] ; u#drv_info_to_mcp drv_info_to_mcp ; } 
s#stats_query_header struct stats_query_header { t#u8 cmd_num ; t#u8 reserved0 ; t#__le16 drv_stats_counter ; t#__le32 reserved1 ; s#regpair stats_counters_addrs ; } 
s#stats_query_entry struct stats_query_entry { t#u8 kind ; t#u8 index ; t#__le16 funcID ; t#__le32 reserved ; s#regpair address ; } 
E#BNX2X_FIRST_QUEUE_QUERY_IDX 3 
s#bnx2x_fw_stats_req struct bnx2x_fw_stats_req { s#stats_query_header hdr ; s#stats_query_entry query [ 16 + E#BNX2X_FIRST_QUEUE_QUERY_IDX ] ; } 
s#stats_counter struct stats_counter { t#__le16 xstats_counter ; t#__le16 reserved0 ; t#__le32 reserved1 ; t#__le16 tstats_counter ; t#__le16 reserved2 ; t#__le32 reserved3 ; t#__le16 ustats_counter ; t#__le16 reserved4 ; t#__le32 reserved5 ; t#__le16 cstats_counter ; t#__le16 reserved6 ; t#__le32 reserved7 ; } 
s#tstorm_per_port_stats struct tstorm_per_port_stats { t#__le32 mac_discard ; t#__le32 mac_filter_discard ; t#__le32 brb_truncate_discard ; t#__le32 mf_tag_discard ; t#__le32 packet_drop ; t#__le32 reserved ; } 
s#per_port_stats struct per_port_stats { s#tstorm_per_port_stats tstorm_port_statistics ; } 
s#tstorm_per_pf_stats struct tstorm_per_pf_stats { s#regpair rcv_error_bytes ; } 
s#per_pf_stats struct per_pf_stats { s#tstorm_per_pf_stats tstorm_pf_statistics ; } 
s#fcoe_tx_stat_params struct fcoe_tx_stat_params { t#__le32 fcoe_tx_pkt_cnt ; t#__le32 fcoe_tx_byte_cnt ; t#__le32 fcp_tx_pkt_cnt ; t#__le32 reserved0 ; } 
s#fcoe_rx_stat_params_section0 struct fcoe_rx_stat_params_section0 { t#__le32 fcoe_rx_pkt_cnt ; t#__le32 fcoe_rx_byte_cnt ; } 
s#fcoe_rx_stat_params_section1 struct fcoe_rx_stat_params_section1 { t#__le32 fcoe_ver_cnt ; t#__le32 fcoe_rx_drop_pkt_cnt ; } 
s#fcoe_rx_stat_params_section2 struct fcoe_rx_stat_params_section2 { t#__le32 fc_crc_cnt ; t#__le32 eofa_del_cnt ; t#__le32 miss_frame_cnt ; t#__le32 seq_timeout_cnt ; t#__le32 drop_seq_cnt ; t#__le32 fcoe_rx_drop_pkt_cnt ; t#__le32 fcp_rx_pkt_cnt ; t#__le32 reserved0 ; } 
s#fcoe_statistics_params struct fcoe_statistics_params { s#fcoe_tx_stat_params tx_stat ; s#fcoe_rx_stat_params_section0 rx_stat0 ; s#fcoe_rx_stat_params_section1 rx_stat1 ; s#fcoe_rx_stat_params_section2 rx_stat2 ; } 
s#per_queue_stats struct per_queue_stats { s#tstorm_per_queue_stats tstorm_queue_statistics ; s#ustorm_per_queue_stats ustorm_queue_statistics ; s#xstorm_per_queue_stats xstorm_queue_statistics ; } 
s#bnx2x_fw_stats_data struct bnx2x_fw_stats_data { s#stats_counter storm_counters ; s#per_port_stats port ; s#per_pf_stats pf ; s#fcoe_statistics_params fcoe ; s#per_queue_stats queue_stats [ 1 ] ; } 
u#cdu_context union cdu_context { s#eth_context eth ; char pad [ 1024 ] ; } 
s#hw_context struct hw_context { u#cdu_context * vcxt ; t#dma_addr_t cxt_mapping ; t#size_t size ; } 
s#ilt_line struct ilt_line { t#dma_addr_t page_mapping ; void * page ; t#u32 size ; } 
s#ilt_client_info struct ilt_client_info { t#u32 page_size ; t#u16 start ; t#u16 end ; t#u16 client_num ; t#u16 flags ; } 
s#bnx2x_ilt struct bnx2x_ilt { t#u32 start_line ; s#ilt_line * lines ; s#ilt_client_info clients [ 4 ] ; } 
s#bnx2x_eth_stats struct bnx2x_eth_stats { t#u32 total_bytes_received_hi ; t#u32 total_bytes_received_lo ; t#u32 total_bytes_transmitted_hi ; t#u32 total_bytes_transmitted_lo ; t#u32 total_unicast_packets_received_hi ; t#u32 total_unicast_packets_received_lo ; t#u32 total_multicast_packets_received_hi ; t#u32 total_multicast_packets_received_lo ; t#u32 total_broadcast_packets_received_hi ; t#u32 total_broadcast_packets_received_lo ; t#u32 total_unicast_packets_transmitted_hi ; t#u32 total_unicast_packets_transmitted_lo ; t#u32 total_multicast_packets_transmitted_hi ; t#u32 total_multicast_packets_transmitted_lo ; t#u32 total_broadcast_packets_transmitted_hi ; t#u32 total_broadcast_packets_transmitted_lo ; t#u32 valid_bytes_received_hi ; t#u32 valid_bytes_received_lo ; t#u32 error_bytes_received_hi ; t#u32 error_bytes_received_lo ; t#u32 etherstatsoverrsizepkts_hi ; t#u32 etherstatsoverrsizepkts_lo ; t#u32 no_buff_discard_hi ; t#u32 no_buff_discard_lo ; t#u32 rx_stat_ifhcinbadoctets_hi ; t#u32 rx_stat_ifhcinbadoctets_lo ; t#u32 tx_stat_ifhcoutbadoctets_hi ; t#u32 tx_stat_ifhcoutbadoctets_lo ; t#u32 rx_stat_dot3statsfcserrors_hi ; t#u32 rx_stat_dot3statsfcserrors_lo ; t#u32 rx_stat_dot3statsalignmenterrors_hi ; t#u32 rx_stat_dot3statsalignmenterrors_lo ; t#u32 rx_stat_dot3statscarriersenseerrors_hi ; t#u32 rx_stat_dot3statscarriersenseerrors_lo ; t#u32 rx_stat_falsecarriererrors_hi ; t#u32 rx_stat_falsecarriererrors_lo ; t#u32 rx_stat_etherstatsundersizepkts_hi ; t#u32 rx_stat_etherstatsundersizepkts_lo ; t#u32 rx_stat_dot3statsframestoolong_hi ; t#u32 rx_stat_dot3statsframestoolong_lo ; t#u32 rx_stat_etherstatsfragments_hi ; t#u32 rx_stat_etherstatsfragments_lo ; t#u32 rx_stat_etherstatsjabbers_hi ; t#u32 rx_stat_etherstatsjabbers_lo ; t#u32 rx_stat_maccontrolframesreceived_hi ; t#u32 rx_stat_maccontrolframesreceived_lo ; t#u32 rx_stat_bmac_xpf_hi ; t#u32 rx_stat_bmac_xpf_lo ; t#u32 rx_stat_bmac_xcf_hi ; t#u32 rx_stat_bmac_xcf_lo ; t#u32 rx_stat_xoffstateentered_hi ; t#u32 rx_stat_xoffstateentered_lo ; t#u32 rx_stat_xonpauseframesreceived_hi ; t#u32 rx_stat_xonpauseframesreceived_lo ; t#u32 rx_stat_xoffpauseframesreceived_hi ; t#u32 rx_stat_xoffpauseframesreceived_lo ; t#u32 tx_stat_outxonsent_hi ; t#u32 tx_stat_outxonsent_lo ; t#u32 tx_stat_outxoffsent_hi ; t#u32 tx_stat_outxoffsent_lo ; t#u32 tx_stat_flowcontroldone_hi ; t#u32 tx_stat_flowcontroldone_lo ; t#u32 tx_stat_etherstatscollisions_hi ; t#u32 tx_stat_etherstatscollisions_lo ; t#u32 tx_stat_dot3statssinglecollisionframes_hi ; t#u32 tx_stat_dot3statssinglecollisionframes_lo ; t#u32 tx_stat_dot3statsmultiplecollisionframes_hi ; t#u32 tx_stat_dot3statsmultiplecollisionframes_lo ; t#u32 tx_stat_dot3statsdeferredtransmissions_hi ; t#u32 tx_stat_dot3statsdeferredtransmissions_lo ; t#u32 tx_stat_dot3statsexcessivecollisions_hi ; t#u32 tx_stat_dot3statsexcessivecollisions_lo ; t#u32 tx_stat_dot3statslatecollisions_hi ; t#u32 tx_stat_dot3statslatecollisions_lo ; t#u32 tx_stat_etherstatspkts64octets_hi ; t#u32 tx_stat_etherstatspkts64octets_lo ; t#u32 tx_stat_etherstatspkts65octetsto127octets_hi ; t#u32 tx_stat_etherstatspkts65octetsto127octets_lo ; t#u32 tx_stat_etherstatspkts128octetsto255octets_hi ; t#u32 tx_stat_etherstatspkts128octetsto255octets_lo ; t#u32 tx_stat_etherstatspkts256octetsto511octets_hi ; t#u32 tx_stat_etherstatspkts256octetsto511octets_lo ; t#u32 tx_stat_etherstatspkts512octetsto1023octets_hi ; t#u32 tx_stat_etherstatspkts512octetsto1023octets_lo ; t#u32 tx_stat_etherstatspkts1024octetsto1522octets_hi ; t#u32 tx_stat_etherstatspkts1024octetsto1522octets_lo ; t#u32 tx_stat_etherstatspktsover1522octets_hi ; t#u32 tx_stat_etherstatspktsover1522octets_lo ; t#u32 tx_stat_bmac_2047_hi ; t#u32 tx_stat_bmac_2047_lo ; t#u32 tx_stat_bmac_4095_hi ; t#u32 tx_stat_bmac_4095_lo ; t#u32 tx_stat_bmac_9216_hi ; t#u32 tx_stat_bmac_9216_lo ; t#u32 tx_stat_bmac_16383_hi ; t#u32 tx_stat_bmac_16383_lo ; t#u32 tx_stat_dot3statsinternalmactransmiterrors_hi ; t#u32 tx_stat_dot3statsinternalmactransmiterrors_lo ; t#u32 tx_stat_bmac_ufl_hi ; t#u32 tx_stat_bmac_ufl_lo ; t#u32 pause_frames_received_hi ; t#u32 pause_frames_received_lo ; t#u32 pause_frames_sent_hi ; t#u32 pause_frames_sent_lo ; t#u32 etherstatspkts1024octetsto1522octets_hi ; t#u32 etherstatspkts1024octetsto1522octets_lo ; t#u32 etherstatspktsover1522octets_hi ; t#u32 etherstatspktsover1522octets_lo ; t#u32 brb_drop_hi ; t#u32 brb_drop_lo ; t#u32 brb_truncate_hi ; t#u32 brb_truncate_lo ; t#u32 mac_filter_discard ; t#u32 mf_tag_discard ; t#u32 brb_truncate_discard ; t#u32 mac_discard ; t#u32 driver_xoff ; t#u32 rx_err_discard_pkt ; t#u32 rx_skb_alloc_failed ; t#u32 hw_csum_err ; t#u32 nig_timer_max ; t#u32 total_tpa_aggregations_hi ; t#u32 total_tpa_aggregations_lo ; t#u32 total_tpa_aggregated_frames_hi ; t#u32 total_tpa_aggregated_frames_lo ; t#u32 total_tpa_bytes_hi ; t#u32 total_tpa_bytes_lo ; t#u32 pfc_frames_received_hi ; t#u32 pfc_frames_received_lo ; t#u32 pfc_frames_sent_hi ; t#u32 pfc_frames_sent_lo ; t#u32 recoverable_error ; t#u32 unrecoverable_error ; t#u32 driver_filtered_tx_pkt ; t#u32 eee_tx_lpi ; } 
s#bnx2x_eth_stats_old struct bnx2x_eth_stats_old { t#u32 rx_stat_dot3statsframestoolong_hi ; t#u32 rx_stat_dot3statsframestoolong_lo ; } 
s#bnx2x_net_stats_old struct bnx2x_net_stats_old { t#u32 rx_dropped ; } 
s#bnx2x_fw_port_stats_old struct bnx2x_fw_port_stats_old { t#u32 mac_filter_discard ; t#u32 mf_tag_discard ; t#u32 brb_truncate_discard ; t#u32 mac_discard ; } 
s##z_stream_s
s#raw_op struct raw_op { t#u32 op : 8 ; t#u32 offset : 24 ; t#u32 raw_data ; } 
s##firmware
s##bnx2x_vfdb
s#bnx2x_admin_priority_app_table struct bnx2x_admin_priority_app_table { t#u32 valid ; t#u32 priority ; t#u32 traffic_type ; t#u32 app_id ; } 
s#bnx2x_config_dcbx_params struct bnx2x_config_dcbx_params { t#u32 overwrite_settings ; t#u32 admin_dcbx_version ; t#u32 admin_ets_enable ; t#u32 admin_pfc_enable ; t#u32 admin_tc_supported_tx_enable ; t#u32 admin_ets_configuration_tx_enable ; t#u32 admin_ets_recommendation_tx_enable ; t#u32 admin_pfc_tx_enable ; t#u32 admin_application_priority_tx_enable ; t#u32 admin_ets_willing ; t#u32 admin_ets_reco_valid ; t#u32 admin_pfc_willing ; t#u32 admin_app_priority_willing ; t#u32 admin_configuration_bw_precentage [ 8 ] ; t#u32 admin_configuration_ets_pg [ 8 ] ; t#u32 admin_recommendation_bw_precentage [ 8 ] ; t#u32 admin_recommendation_ets_pg [ 8 ] ; t#u32 admin_pfc_bitmap ; s#bnx2x_admin_priority_app_table admin_priority_app_table [ 4 ] ; t#u32 admin_default_priority ; } 
s#bnx2x_dcbx_pfc_params struct bnx2x_dcbx_pfc_params { t#u32 enabled ; t#u32 priority_non_pauseable_mask ; } 
s#bnx2x_dcbx_cos_params struct bnx2x_dcbx_cos_params { t#u32 bw_tbl ; t#u32 pri_bitmask ; t#u8 strict ; t#u8 pauseable ; } 
s#bnx2x_dcbx_pg_params struct bnx2x_dcbx_pg_params { t#u32 enabled ; t#u8 num_of_cos ; s#bnx2x_dcbx_cos_params cos_params [ 3 ] ; } 
s#bnx2x_dcbx_app_params struct bnx2x_dcbx_app_params { t#u32 enabled ; t#u32 traffic_type_priority [ 3 ] ; } 
s#bnx2x_dcbx_port_params struct bnx2x_dcbx_port_params { s#bnx2x_dcbx_pfc_params pfc ; s#bnx2x_dcbx_pg_params ets ; s#bnx2x_dcbx_app_params app ; } 
s#bnx2x_rx_mode_ramrod_params struct bnx2x_rx_mode_ramrod_params { s#bnx2x_rx_mode_obj * rx_mode_obj ; unsigned long * pstate ; int state ; t#u8 cl_id ; t#u32 cid ; t#u8 func_id ; unsigned long ramrod_flags ; unsigned long rx_mode_flags ; void * rdata ; t#dma_addr_t rdata_mapping ; unsigned long rx_accept_flags ; unsigned long tx_accept_flags ; } 
s#bnx2x_rx_mode_obj struct bnx2x_rx_mode_obj { int ( * config_rx_mode ) ( s#bnx2x * , s#bnx2x_rx_mode_ramrod_params * ) ; int ( * wait_comp ) ( s#bnx2x * , s#bnx2x_rx_mode_ramrod_params * ) ; } 
s#bnx2x_mcast_ramrod_params struct bnx2x_mcast_ramrod_params { s#bnx2x_mcast_obj * mcast_obj ; unsigned long ramrod_flags ; s#list_head mcast_list ; int mcast_list_len ; } 
e#bnx2x_mcast_cmd enum bnx2x_mcast_cmd { BNX2X_MCAST_CMD_ADD , BNX2X_MCAST_CMD_CONT , BNX2X_MCAST_CMD_DEL , BNX2X_MCAST_CMD_RESTORE , } 
u#bnx2x_mcast_config_data union bnx2x_mcast_config_data { t#u8 * mac ; t#u8 bin ; } 
s#bnx2x_mcast_obj struct bnx2x_mcast_obj { s#bnx2x_raw_obj raw ; union { struct { t#u64 vec [ ( 256 / 64 ) ] ; int num_bins_set ; } aprox_match ; struct { s#list_head macs ; int num_macs_set ; } exact_match ; } registry ; s#list_head pending_cmds_head ; int sched_state ; int max_cmd_len ; int total_pending_num ; t#u8 engine_id ; int ( * config_mcast ) ( s#bnx2x * , s#bnx2x_mcast_ramrod_params * , e#bnx2x_mcast_cmd ) ; int ( * hdl_restore ) ( s#bnx2x * , s#bnx2x_mcast_obj * , int , int * ) ; int ( * enqueue_cmd ) ( s#bnx2x * , s#bnx2x_mcast_obj * , s#bnx2x_mcast_ramrod_params * , e#bnx2x_mcast_cmd ) ; void ( * set_one_rule ) ( s#bnx2x * , s#bnx2x_mcast_obj * , int , u#bnx2x_mcast_config_data * , e#bnx2x_mcast_cmd ) ; t#bool ( * check_pending ) ( s#bnx2x_mcast_obj * ) ; void ( * set_sched ) ( s#bnx2x_mcast_obj * ) ; void ( * clear_sched ) ( s#bnx2x_mcast_obj * ) ; t#bool ( * check_sched ) ( s#bnx2x_mcast_obj * ) ; int ( * wait_comp ) ( s#bnx2x * , s#bnx2x_mcast_obj * ) ; int ( * validate ) ( s#bnx2x * , s#bnx2x_mcast_ramrod_params * , e#bnx2x_mcast_cmd ) ; void ( * revert ) ( s#bnx2x * , s#bnx2x_mcast_ramrod_params * , int ) ; int ( * get_registry_size ) ( s#bnx2x_mcast_obj * ) ; void ( * set_registry_size ) ( s#bnx2x_mcast_obj * , int ) ; } 
s#bnx2x_config_rss_params struct bnx2x_config_rss_params { s#bnx2x_rss_config_obj * rss_obj ; unsigned long ramrod_flags ; unsigned long rss_flags ; t#u8 rss_result_mask ; t#u8 ind_table [ 128 ] ; t#u32 rss_key [ 10 ] ; t#u16 toe_rss_bitmap ; } 
s#bnx2x_rss_config_obj struct bnx2x_rss_config_obj { s#bnx2x_raw_obj raw ; t#u8 engine_id ; t#u8 ind_table [ 128 ] ; t#u8 udp_rss_v4 ; t#u8 udp_rss_v6 ; int ( * config_rss ) ( s#bnx2x * , s#bnx2x_config_rss_params * ) ; } 
e#bnx2x_func_state enum bnx2x_func_state { BNX2X_F_STATE_RESET , BNX2X_F_STATE_INITIALIZED , BNX2X_F_STATE_STARTED , BNX2X_F_STATE_TX_STOPPED , BNX2X_F_STATE_MAX , } 
s#bnx2x_func_sp_drv_ops struct bnx2x_func_sp_drv_ops { int ( * init_hw_cmn_chip ) ( s#bnx2x * ) ; int ( * init_hw_cmn ) ( s#bnx2x * ) ; int ( * init_hw_port ) ( s#bnx2x * ) ; int ( * init_hw_func ) ( s#bnx2x * ) ; void ( * reset_hw_cmn ) ( s#bnx2x * ) ; void ( * reset_hw_port ) ( s#bnx2x * ) ; void ( * reset_hw_func ) ( s#bnx2x * ) ; int ( * gunzip_init ) ( s#bnx2x * ) ; void ( * gunzip_end ) ( s#bnx2x * ) ; int ( * init_fw ) ( s#bnx2x * ) ; void ( * release_fw ) ( s#bnx2x * ) ; } 
e#bnx2x_func_cmd enum bnx2x_func_cmd { BNX2X_F_CMD_HW_INIT , BNX2X_F_CMD_START , BNX2X_F_CMD_STOP , BNX2X_F_CMD_HW_RESET , BNX2X_F_CMD_AFEX_UPDATE , BNX2X_F_CMD_AFEX_VIFLISTS , BNX2X_F_CMD_TX_STOP , BNX2X_F_CMD_TX_START , BNX2X_F_CMD_SWITCH_UPDATE , BNX2X_F_CMD_SET_TIMESYNC , BNX2X_F_CMD_MAX , } 
s#bnx2x_func_hw_init_params struct bnx2x_func_hw_init_params { t#u32 load_phase ; } 
s#bnx2x_func_hw_reset_params struct bnx2x_func_hw_reset_params { t#u32 reset_phase ; } 
s#bnx2x_func_start_params struct bnx2x_func_start_params { t#u16 mf_mode ; t#u16 sd_vlan_tag ; t#u8 network_cos_mode ; t#u8 tunnel_mode ; t#u8 tunn_clss_en ; t#u8 gre_tunnel_type ; t#u8 inner_gre_rss_en ; } 
s#bnx2x_func_switch_update_params struct bnx2x_func_switch_update_params { unsigned long changes ; t#u8 tunnel_mode ; t#u8 gre_tunnel_type ; } 
s#bnx2x_func_afex_update_params struct bnx2x_func_afex_update_params { t#u16 vif_id ; t#u16 afex_default_vlan ; t#u8 allowed_priorities ; } 
s#bnx2x_func_afex_viflists_params struct bnx2x_func_afex_viflists_params { t#u16 vif_list_index ; t#u8 func_bit_map ; t#u8 afex_vif_list_command ; t#u8 func_to_clear ; } 
s#bnx2x_func_tx_start_params struct bnx2x_func_tx_start_params { s#priority_cos traffic_type_to_priority_cos [ 8 ] ; t#u8 dcb_enabled ; t#u8 dcb_version ; t#u8 dont_add_pri_0_en ; } 
s#bnx2x_func_set_timesync_params struct bnx2x_func_set_timesync_params { t#u8 drift_adjust_cmd ; t#u8 offset_cmd ; t#u8 add_sub_drift_adjust_value ; t#u8 drift_adjust_value ; t#u32 drift_adjust_period ; t#u64 offset_delta ; } 
s#bnx2x_func_state_params struct bnx2x_func_state_params { s#bnx2x_func_sp_obj * f_obj ; e#bnx2x_func_cmd cmd ; unsigned long ramrod_flags ; union { s#bnx2x_func_hw_init_params hw_init ; s#bnx2x_func_hw_reset_params hw_reset ; s#bnx2x_func_start_params start ; s#bnx2x_func_switch_update_params switch_update ; s#bnx2x_func_afex_update_params afex_update ; s#bnx2x_func_afex_viflists_params afex_viflists ; s#bnx2x_func_tx_start_params tx_start ; s#bnx2x_func_set_timesync_params set_timesync ; } params ; } 
s#bnx2x_func_sp_obj struct bnx2x_func_sp_obj { e#bnx2x_func_state state , next_state ; unsigned long pending ; void * rdata ; t#dma_addr_t rdata_mapping ; void * afex_rdata ; t#dma_addr_t afex_rdata_mapping ; s#mutex one_pending_mutex ; s#bnx2x_func_sp_drv_ops * drv ; int ( * send_cmd ) ( s#bnx2x * , s#bnx2x_func_state_params * ) ; int ( * check_transition ) ( s#bnx2x * , s#bnx2x_func_sp_obj * , s#bnx2x_func_state_params * ) ; int ( * complete_cmd ) ( s#bnx2x * , s#bnx2x_func_sp_obj * , e#bnx2x_func_cmd ) ; int ( * wait_comp ) ( s#bnx2x * , s#bnx2x_func_sp_obj * , e#bnx2x_func_cmd ) ; } 
s#dcbx_ets_feature struct dcbx_ets_feature { t#u32 enabled ; t#u32 pg_bw_tbl [ 2 ] ; t#u32 pri_pg_tbl [ 1 ] ; } 
s#dcbx_pfc_feature struct dcbx_pfc_feature { t#u8 pri_en_bitmap ; t#u8 pfc_caps ; t#u8 reserved ; t#u8 enabled ; } 
s#dcbx_app_priority_entry struct dcbx_app_priority_entry { t#u16 app_id ; t#u8 pri_bitmap ; t#u8 appBitfield ; } 
s#dcbx_app_priority_feature struct dcbx_app_priority_feature { t#u8 reserved ; t#u8 default_pri ; t#u8 tc_supported ; t#u8 enabled ; s#dcbx_app_priority_entry app_pri_tbl [ 16 ] ; } 
s#dcbx_features struct dcbx_features { s#dcbx_ets_feature ets ; s#dcbx_pfc_feature pfc ; s#dcbx_app_priority_feature app ; } 
e#mf_cfg_afex_vlan_mode enum mf_cfg_afex_vlan_mode { FUNC_MF_CFG_AFEX_VLAN_TRUNK_MODE = 0 , FUNC_MF_CFG_AFEX_VLAN_ACCESS_MODE , FUNC_MF_CFG_AFEX_VLAN_TRUNK_TAG_NATIVE_MODE } 
s#semaphore struct semaphore { t#spinlock_t lock ; unsigned int count ; s#list_head wait_list ; } 
s##ptp_clock
s#ptp_extts_request struct ptp_extts_request { unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#ptp_clock_time struct ptp_clock_time { t#__s64 sec ; t#__u32 nsec ; t#__u32 reserved ; } 
s#ptp_perout_request struct ptp_perout_request { s#ptp_clock_time start ; s#ptp_clock_time period ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 4 ] ; } 
s#ptp_clock_request struct ptp_clock_request { enum { PTP_CLK_REQ_EXTTS , PTP_CLK_REQ_PEROUT , PTP_CLK_REQ_PPS , } type ; union { s#ptp_extts_request extts ; s#ptp_perout_request perout ; } ; } 
s#ptp_clock_info struct ptp_clock_info { s#module * owner ; char name [ 16 ] ; t#s32 max_adj ; int n_alarm ; int n_ext_ts ; int n_per_out ; int pps ; int ( * adjfreq ) ( s#ptp_clock_info * , t#s32 ) ; int ( * adjtime ) ( s#ptp_clock_info * , t#s64 ) ; int ( * gettime ) ( s#ptp_clock_info * , s#timespec * ) ; int ( * settime ) ( s#ptp_clock_info * , const s#timespec * ) ; int ( * enable ) ( s#ptp_clock_info * , s#ptp_clock_request * , int ) ; } 
t#cycle_t typedef t#u64 cycle_t 
s#cyclecounter struct cyclecounter { t#cycle_t ( * read ) ( const s#cyclecounter * ) ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; } 
s#timecounter struct timecounter { const s#cyclecounter * cc ; t#cycle_t cycle_last ; t#u64 nsec ; } 
s#bnx2x struct bnx2x { s#bnx2x_fastpath * fp ; s#bnx2x_sp_objs * sp_objs ; s#bnx2x_fp_stats * fp_stats ; s#bnx2x_fp_txdata * bnx2x_txq ; void * regview ; void * doorbells ; t#u16 db_size ; t#u8 pf_num ; t#u8 pfid ; int base_fw_ndsb ; s#net_device * dev ; s#pci_dev * pdev ; const s#iro * iro_arr ; e#bnx2x_recovery_state recovery_state ; int is_leader ; s#msix_entry * msix_table ; int tx_ring_size ; s#host_sp_status_block * def_status_blk ; t#__le16 def_idx ; t#__le16 def_att_idx ; t#u32 attn_state ; s#attn_route attn_group [ 8 ] ; s#eth_spe * spq ; t#dma_addr_t spq_mapping ; t#u16 spq_prod_idx ; s#eth_spe * spq_prod_bd ; s#eth_spe * spq_last_bd ; t#__le16 * dsb_sp_prod ; t#atomic_t cq_spq_left ; t#spinlock_t spq_lock ; u#event_ring_elem * eq_ring ; t#dma_addr_t eq_mapping ; t#u16 eq_prod ; t#u16 eq_cons ; t#__le16 * eq_cons_sb ; t#atomic_t eq_spq_left ; t#u16 stats_pending ; t#u16 stats_comp ; int panic ; int msg_enable ; t#u32 flags ; t#u8 cnic_support ; t#bool cnic_enabled ; t#bool cnic_loaded ; s#cnic_eth_dev * ( * cnic_probe ) ( s#net_device * ) ; t#bool fcoe_init ; int mrrs ; s#delayed_work sp_task ; s#delayed_work iov_task ; t#atomic_t interrupt_occurred ; s#delayed_work sp_rtnl_task ; s#delayed_work period_task ; s#timer_list timer ; int current_interval ; t#u16 fw_seq ; t#u16 fw_drv_pulse_wr_seq ; t#u32 func_stx ; s#link_params link_params ; s#link_vars link_vars ; t#u32 link_cnt ; s#bnx2x_link_report_data last_reported_link ; s#mdio_if_info mdio ; s#bnx2x_common common ; s#bnx2x_port port ; s#cmng_init cmng ; t#u32 mf_config [ 4 ] ; t#u32 mf_ext_config ; t#u32 path_has_ovlan ; t#u16 mf_ov ; t#u8 mf_mode ; t#u8 wol ; int rx_ring_size ; t#u16 tx_quick_cons_trip_int ; t#u16 tx_quick_cons_trip ; t#u16 tx_ticks_int ; t#u16 tx_ticks ; t#u16 rx_quick_cons_trip_int ; t#u16 rx_quick_cons_trip ; t#u16 rx_ticks_int ; t#u16 rx_ticks ; t#u32 lin_cnt ; t#u16 state ; int num_queues ; t#uint num_ethernet_queues ; t#uint num_cnic_queues ; int disable_tpa ; t#u32 rx_mode ; t#u8 igu_dsb_id ; t#u8 igu_base_sb ; t#u8 igu_sb_cnt ; t#u8 min_msix_vec_cnt ; t#u32 igu_base_addr ; t#dma_addr_t def_status_blk_mapping ; s#bnx2x_slowpath * slowpath ; t#dma_addr_t slowpath_mapping ; s#mutex drv_info_mutex ; t#bool drv_info_mng_owner ; t#u8 fw_stats_num ; void * fw_stats ; t#dma_addr_t fw_stats_mapping ; s#bnx2x_fw_stats_req * fw_stats_req ; t#dma_addr_t fw_stats_req_mapping ; int fw_stats_req_sz ; s#bnx2x_fw_stats_data * fw_stats_data ; t#dma_addr_t fw_stats_data_mapping ; int fw_stats_data_sz ; s#hw_context context [ 32 ] ; s#bnx2x_ilt * ilt ; int qm_cid_count ; t#bool dropless_fc ; void * t2 ; t#dma_addr_t t2_mapping ; s#cnic_ops * cnic_ops ; void * cnic_data ; t#u32 cnic_tag ; s#cnic_eth_dev cnic_eth_dev ; u#host_hc_status_block cnic_sb ; t#dma_addr_t cnic_sb_mapping ; s#eth_spe * cnic_kwq ; s#eth_spe * cnic_kwq_prod ; s#eth_spe * cnic_kwq_cons ; s#eth_spe * cnic_kwq_last ; t#u16 cnic_kwq_pending ; t#u16 cnic_spq_pending ; t#u8 fip_mac [ 6 ] ; s#mutex cnic_mutex ; s#bnx2x_vlan_mac_obj iscsi_l2_mac_obj ; t#u8 cnic_base_cl_id ; int dmae_ready ; t#spinlock_t dmae_lock ; s#mutex fw_mb_mutex ; int stats_state ; t#spinlock_t stats_lock ; s#dmae_command stats_dmae ; int executer_idx ; t#u16 stats_counter ; s#bnx2x_eth_stats eth_stats ; s#host_func_stats func_stats ; s#bnx2x_eth_stats_old eth_stats_old ; s#bnx2x_net_stats_old net_stats_old ; s#bnx2x_fw_port_stats_old fw_stats_old ; t#bool stats_init ; s#z_stream_s * strm ; void * gunzip_buf ; t#dma_addr_t gunzip_mapping ; int gunzip_outlen ; s#raw_op * init_ops ; t#u16 * init_ops_offsets ; t#u32 * init_data ; t#u32 init_mode_flags ; const t#u8 * tsem_int_table_data ; const t#u8 * tsem_pram_data ; const t#u8 * usem_int_table_data ; const t#u8 * usem_pram_data ; const t#u8 * xsem_int_table_data ; const t#u8 * xsem_pram_data ; const t#u8 * csem_int_table_data ; const t#u8 * csem_pram_data ; char fw_ver [ 32 ] ; const s#firmware * firmware ; s#bnx2x_vfdb * vfdb ; t#u16 dcb_state ; int dcbx_enabled ; t#bool dcbx_mode_uset ; s#bnx2x_config_dcbx_params dcbx_config_params ; s#bnx2x_dcbx_port_params dcbx_port_params ; int dcb_version ; s#bnx2x_credit_pool_obj vlans_pool ; s#bnx2x_credit_pool_obj macs_pool ; s#bnx2x_rx_mode_obj rx_mode_obj ; s#bnx2x_mcast_obj mcast_obj ; s#bnx2x_rss_config_obj rss_conf_obj ; s#bnx2x_func_sp_obj func_obj ; unsigned long sp_state ; unsigned long sp_rtnl_state ; unsigned long iov_task_state ; s#dcbx_features dcbx_local_feat ; t#u32 dcbx_error ; int afex_def_vlan_tag ; e#mf_cfg_afex_vlan_mode afex_vlan_mode ; t#u32 pending_max ; t#u8 max_cos ; t#u8 prio_to_cos [ 8 ] ; int fp_array_size ; t#u32 dump_preset_idx ; t#bool stats_started ; s#semaphore stats_sema ; t#u8 phys_port_id [ 6 ] ; s#bnx2x_link_report_data vf_link_vars ; s#ptp_clock * ptp_clock ; s#ptp_clock_info ptp_clock_info ; s#work_struct ptp_task ; s#cyclecounter cyclecounter ; s#timecounter timecounter ; t#bool timecounter_init_done ; s#sk_buff * ptp_tx_skb ; unsigned long ptp_tx_start ; t#bool hwtstamp_ioctl_called ; t#u16 tx_type ; t#u16 rx_filter ; } 
e#sp_rtnl_flag enum sp_rtnl_flag { BNX2X_SP_RTNL_SETUP_TC , BNX2X_SP_RTNL_TX_TIMEOUT , BNX2X_SP_RTNL_FAN_FAILURE , BNX2X_SP_RTNL_AFEX_F_UPDATE , BNX2X_SP_RTNL_ENABLE_SRIOV , BNX2X_SP_RTNL_VFPF_MCAST , BNX2X_SP_RTNL_VFPF_CHANNEL_DOWN , BNX2X_SP_RTNL_RX_MODE , BNX2X_SP_RTNL_HYPERVISOR_VLAN , BNX2X_SP_RTNL_TX_STOP , BNX2X_SP_RTNL_GET_DRV_VERSION , } 
bnx2x_schedule_sp_rtnl void bnx2x_schedule_sp_rtnl ( s#bnx2x * , e#sp_rtnl_flag , t#u32 ) 

/* drivers/net/ethernet/broadcom/cnic.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#cnic_sock struct cnic_sock { s#cnic_dev * dev ; void * context ; t#u32 src_ip [ 4 ] ; t#u32 dst_ip [ 4 ] ; t#u16 src_port ; t#u16 dst_port ; t#u16 vlan_id ; unsigned char old_ha [ 6 ] ; unsigned char ha [ 6 ] ; t#u32 mtu ; t#u32 cid ; t#u32 l5_cid ; t#u32 pg_cid ; int ulp_type ; t#u32 ka_timeout ; t#u32 ka_interval ; t#u8 ka_max_probe_count ; t#u8 tos ; t#u8 ttl ; t#u8 snd_seq_scale ; t#u32 rcv_buf ; t#u32 snd_buf ; t#u32 seed ; unsigned long tcp_flags ; unsigned long flags ; t#atomic_t ref_count ; t#u32 state ; s#kwqe kwqe1 ; s#kwqe kwqe2 ; s#kwqe kwqe3 ; } 
s#sockaddr_in6 struct sockaddr_in6 { unsigned short int sin6_family ; t#__be16 sin6_port ; t#__be32 sin6_flowinfo ; s#in6_addr sin6_addr ; t#__u32 sin6_scope_id ; } 
s#cnic_sockaddr struct cnic_sockaddr { union { s#sockaddr_in v4 ; s#sockaddr_in6 v6 ; } local ; union { s#sockaddr_in v4 ; s#sockaddr_in6 v6 ; } remote ; } 
s#cnic_dev struct cnic_dev { s#net_device * netdev ; s#pci_dev * pcidev ; void * regview ; s#list_head list ; int ( * register_device ) ( s#cnic_dev * , int , void * ) ; int ( * unregister_device ) ( s#cnic_dev * , int ) ; int ( * submit_kwqes ) ( s#cnic_dev * , s#kwqe * [ ] , t#u32 ) ; int ( * submit_kwqes_16 ) ( s#cnic_dev * , s#kwqe_16 * [ ] , t#u32 ) ; int ( * cm_create ) ( s#cnic_dev * , int , t#u32 , t#u32 , s#cnic_sock * * , void * ) ; int ( * cm_destroy ) ( s#cnic_sock * ) ; int ( * cm_connect ) ( s#cnic_sock * , s#cnic_sockaddr * ) ; int ( * cm_abort ) ( s#cnic_sock * ) ; int ( * cm_close ) ( s#cnic_sock * ) ; s#cnic_dev * ( * cm_select_dev ) ( s#sockaddr_in * , int ) ; int ( * iscsi_nl_msg_recv ) ( s#cnic_dev * , t#u32 , char * , t#u16 ) ; unsigned long flags ; t#atomic_t ref_count ; t#u8 mac_addr [ 6 ] ; int max_iscsi_conn ; int max_fcoe_conn ; int max_rdma_conn ; int max_fcoe_exchanges ; u#drv_info_to_mcp * stats_addr ; s#fcoe_capabilities * fcoe_cap ; void * cnic_priv ; } 
s#kcqe struct kcqe { t#u32 kcqe_info0 ; t#u32 kcqe_info1 ; t#u32 kcqe_info2 ; t#u32 kcqe_info3 ; t#u32 kcqe_info4 ; t#u32 kcqe_info5 ; t#u32 kcqe_info6 ; t#u32 kcqe_op_flag ; } 
s#cnic_ulp_ops struct cnic_ulp_ops { void ( * cnic_init ) ( s#cnic_dev * ) ; void ( * cnic_exit ) ( s#cnic_dev * ) ; void ( * cnic_start ) ( void * ) ; void ( * cnic_stop ) ( void * ) ; void ( * indicate_kcqes ) ( void * , s#kcqe * [ ] , t#u32 ) ; void ( * indicate_netevent ) ( void * , unsigned long , t#u16 ) ; void ( * cm_connect_complete ) ( s#cnic_sock * ) ; void ( * cm_close_complete ) ( s#cnic_sock * ) ; void ( * cm_abort_complete ) ( s#cnic_sock * ) ; void ( * cm_remote_close ) ( s#cnic_sock * ) ; void ( * cm_remote_abort ) ( s#cnic_sock * ) ; int ( * iscsi_nl_send_msg ) ( void * , t#u32 , char * , t#u16 ) ; int ( * cnic_get_stats ) ( void * ) ; s#module * owner ; t#atomic_t ref_count ; } 
cnic_register_driver int cnic_register_driver ( int , s#cnic_ulp_ops * ) 
cnic_unregister_driver int cnic_unregister_driver ( int ) 

/* drivers/net/ethernet/chelsio/cxgb3/cxgb3_offload.o */
e#t3ctype enum t3ctype { T3A = 0 , T3B , T3C , } 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s#t3cdev struct t3cdev { char name [ 16 ] ; e#t3ctype type ; s#list_head ofld_dev_list ; s#net_device * lldev ; s#proc_dir_entry * proc_dir ; int ( * send ) ( s#t3cdev * , s#sk_buff * ) ; int ( * recv ) ( s#t3cdev * , s#sk_buff * * , int ) ; int ( * ctl ) ( s#t3cdev * , unsigned int , void * ) ; void ( * neigh_update ) ( s#t3cdev * , s#neighbour * ) ; void * priv ; void * l2opt ; void * l3opt ; void * l4opt ; void * ulp ; void * ulp_iscsi ; } 
t#cxgb3_cpl_handler_func typedef int ( * cxgb3_cpl_handler_func ) ( s#t3cdev * , s#sk_buff * , void * ) 
s#l2t_entry struct l2t_entry { t#u16 state ; t#u16 idx ; t#u32 addr ; int ifindex ; t#u16 smt_idx ; t#u16 vlan ; s#neighbour * neigh ; s#l2t_entry * first ; s#l2t_entry * next ; s#sk_buff_head arpq ; t#spinlock_t lock ; t#atomic_t refcnt ; t#u8 dmac [ 6 ] ; } 
s#cxgb3_client struct cxgb3_client { char * name ; void ( * add ) ( s#t3cdev * ) ; void ( * remove ) ( s#t3cdev * ) ; t#cxgb3_cpl_handler_func * handlers ; int ( * redirect ) ( void * , s#dst_entry * , s#dst_entry * , s#l2t_entry * ) ; s#list_head client_list ; void ( * event_handler ) ( s#t3cdev * , t#u32 , t#u32 ) ; } 
cxgb3_register_client void cxgb3_register_client ( s#cxgb3_client * ) 
cxgb3_unregister_client void cxgb3_unregister_client ( s#cxgb3_client * ) 
cxgb3_free_atid void * cxgb3_free_atid ( s#t3cdev * , int ) 
cxgb3_free_stid void cxgb3_free_stid ( s#t3cdev * , int ) 
cxgb3_insert_tid void cxgb3_insert_tid ( s#t3cdev * , s#cxgb3_client * , void * , unsigned int ) 
cxgb3_queue_tid_release void cxgb3_queue_tid_release ( s#t3cdev * , unsigned int ) 
cxgb3_remove_tid void cxgb3_remove_tid ( s#t3cdev * , void * , unsigned int ) 
cxgb3_alloc_atid int cxgb3_alloc_atid ( s#t3cdev * , s#cxgb3_client * , void * ) 
cxgb3_alloc_stid int cxgb3_alloc_stid ( s#t3cdev * , s#cxgb3_client * , void * ) 
dev2t3cdev s#t3cdev * dev2t3cdev ( s#net_device * ) 
t#cpl_handler_func typedef int ( * cpl_handler_func ) ( s#t3cdev * , s#sk_buff * ) 
t3_register_cpl_handler void t3_register_cpl_handler ( unsigned int , t#cpl_handler_func ) 
cxgb3_ofld_send int cxgb3_ofld_send ( s#t3cdev * , s#sk_buff * ) 

/* drivers/net/ethernet/chelsio/cxgb3/l2t.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
t3_l2t_send_slow int t3_l2t_send_slow ( s#t3cdev * , s#sk_buff * , s#l2t_entry * ) 
t3_l2t_send_event void t3_l2t_send_event ( s#t3cdev * , s#l2t_entry * ) 
s#l2t_data struct l2t_data { unsigned int nentries ; s#l2t_entry * rover ; t#atomic_t nfree ; t#rwlock_t lock ; s#l2t_entry l2tab [ 0 ] ; s#rcu_head rcu_head ; } 
t3_l2e_free void t3_l2e_free ( s#l2t_data * , s#l2t_entry * ) 
t3_l2t_get s#l2t_entry * t3_l2t_get ( s#t3cdev * , s#dst_entry * , s#net_device * ) 

/* drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#netpoll struct netpoll { s#net_device * dev ; char dev_name [ 16 ] ; const char * name ; void ( * rx_hook ) ( s#netpoll * , int , char * , int ) ; t#__be32 local_ip , remote_ip ; t#u16 local_port , remote_port ; t#u8 remote_mac [ 6 ] ; s#list_head rx ; } 
s#netpoll_info struct netpoll_info { t#atomic_t refcnt ; int rx_flags ; t#spinlock_t rx_lock ; s#list_head rx_np ; s#sk_buff_head arp_tx ; s#sk_buff_head txq ; s#delayed_work tx_work ; s#netpoll * netpoll ; } 
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
cxgb4_dcb_enabled int cxgb4_dcb_enabled ( const s#net_device * ) 
s#serv_entry struct serv_entry { void * data ; } 
u#aopen_entry union aopen_entry { void * data ; u#aopen_entry * next ; } 
s##filter_entry
s#tid_info struct tid_info { void * * tid_tab ; unsigned int ntids ; s#serv_entry * stid_tab ; unsigned long * stid_bmap ; unsigned int nstids ; unsigned int stid_base ; u#aopen_entry * atid_tab ; unsigned int natids ; unsigned int atid_base ; s#filter_entry * ftid_tab ; unsigned int nftids ; unsigned int ftid_base ; unsigned int aftid_base ; unsigned int aftid_end ; unsigned int sftid_base ; unsigned int nsftids ; t#spinlock_t atid_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; u#aopen_entry * afree ; unsigned int atids_in_use ; t#spinlock_t stid_lock ; unsigned int stids_in_use ; t#atomic_t tids_in_use ; } 
cxgb4_alloc_atid int cxgb4_alloc_atid ( s#tid_info * , void * ) 
cxgb4_free_atid void cxgb4_free_atid ( s#tid_info * , unsigned int ) 
cxgb4_alloc_stid int cxgb4_alloc_stid ( s#tid_info * , int , void * ) 
cxgb4_alloc_sftid int cxgb4_alloc_sftid ( s#tid_info * , int , void * ) 
cxgb4_free_stid void cxgb4_free_stid ( s#tid_info * , unsigned int , int ) 
cxgb4_remove_tid void cxgb4_remove_tid ( s#tid_info * , unsigned int , unsigned int ) 
cxgb4_clip_get int cxgb4_clip_get ( const s#net_device * , const s#in6_addr * ) 
cxgb4_clip_release int cxgb4_clip_release ( const s#net_device * , const s#in6_addr * ) 
cxgb4_create_server int cxgb4_create_server ( const s#net_device * , unsigned int , t#__be32 , t#__be16 , t#__be16 , unsigned int ) 
cxgb4_create_server6 int cxgb4_create_server6 ( const s#net_device * , unsigned int , const s#in6_addr * , t#__be16 , unsigned int ) 
cxgb4_remove_server int cxgb4_remove_server ( const s#net_device * , unsigned int , unsigned int , t#bool ) 
cxgb4_best_mtu unsigned int cxgb4_best_mtu ( const unsigned short * , unsigned short , unsigned int * ) 
cxgb4_port_chan unsigned int cxgb4_port_chan ( const s#net_device * ) 
cxgb4_dbfifo_count unsigned int cxgb4_dbfifo_count ( const s#net_device * , int ) 
cxgb4_port_viid unsigned int cxgb4_port_viid ( const s#net_device * ) 
cxgb4_port_idx unsigned int cxgb4_port_idx ( const s#net_device * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#tp_tcp_stats struct tp_tcp_stats { t#u32 tcpOutRsts ; t#u64 tcpInSegs ; t#u64 tcpOutSegs ; t#u64 tcpRetransSegs ; } 
cxgb4_get_tcp_stats void cxgb4_get_tcp_stats ( s#pci_dev * , s#tp_tcp_stats * , s#tp_tcp_stats * ) 
cxgb4_iscsi_init void cxgb4_iscsi_init ( s#net_device * , unsigned int , const unsigned int * ) 
cxgb4_flush_eq_cache int cxgb4_flush_eq_cache ( s#net_device * ) 
cxgb4_sync_txq_pidx int cxgb4_sync_txq_pidx ( s#net_device * , t#u16 , t#u16 , t#u16 ) 
cxgb4_disable_db_coalescing void cxgb4_disable_db_coalescing ( s#net_device * ) 
cxgb4_enable_db_coalescing void cxgb4_enable_db_coalescing ( s#net_device * ) 
cxgb4_read_tpte int cxgb4_read_tpte ( s#net_device * , t#u32 , t#__be32 * ) 
cxgb4_read_sge_timestamp t#u64 cxgb4_read_sge_timestamp ( s#net_device * ) 
e#cxgb4_uld enum cxgb4_uld { CXGB4_ULD_RDMA , CXGB4_ULD_ISCSI , CXGB4_ULD_MAX } 
s##l2t_data
s#cxgb4_range struct cxgb4_range { unsigned int start ; unsigned int size ; } 
s#cxgb4_virt_res struct cxgb4_virt_res { s#cxgb4_range ddp ; s#cxgb4_range iscsi ; s#cxgb4_range stag ; s#cxgb4_range rq ; s#cxgb4_range pbl ; s#cxgb4_range qp ; s#cxgb4_range cq ; s#cxgb4_range ocq ; } 
E#NCHAN 4 
s#cxgb4_lld_info struct cxgb4_lld_info { s#pci_dev * pdev ; s#l2t_data * l2t ; s#tid_info * tids ; s#net_device * * ports ; const s#cxgb4_virt_res * vr ; const unsigned short * mtus ; const unsigned short * rxq_ids ; const unsigned short * ciq_ids ; unsigned short nrxq ; unsigned short ntxq ; unsigned short nciq ; unsigned char nchan : 4 ; unsigned char nports : 4 ; unsigned char wr_cred ; unsigned char adapter_type ; unsigned char fw_api_ver ; unsigned int fw_vers ; unsigned int iscsi_iolen ; unsigned int cclk_ps ; unsigned short udb_density ; unsigned short ucq_density ; unsigned short filt_mode ; unsigned short tx_modq [ E#NCHAN ] ; void * gts_reg ; void * db_reg ; int dbfifo_int_thresh ; unsigned int sge_ingpadboundary ; unsigned int sge_egrstatuspagesize ; unsigned int sge_pktshift ; unsigned int pf ; t#bool enable_fw_ofld_conn ; unsigned int max_ordird_qp ; unsigned int max_ird_adapter ; t#bool ulptx_memwrite_dsgl ; } 
s#page_frag struct page_frag { s#page * page ; t#__u32 offset ; t#__u32 size ; } 
s#pkt_gl struct pkt_gl { s#page_frag frags [ 16UL ] ; void * va ; unsigned int nfrags ; unsigned int tot_len ; } 
e#cxgb4_state enum cxgb4_state { CXGB4_STATE_UP , CXGB4_STATE_START_RECOVERY , CXGB4_STATE_DOWN , CXGB4_STATE_DETACH } 
e#cxgb4_control enum cxgb4_control { CXGB4_CONTROL_DB_FULL , CXGB4_CONTROL_DB_EMPTY , CXGB4_CONTROL_DB_DROP , } 
s#cxgb4_uld_info struct cxgb4_uld_info { const char * name ; void * ( * add ) ( const s#cxgb4_lld_info * ) ; int ( * rx_handler ) ( void * , const t#__be64 * , const s#pkt_gl * ) ; int ( * state_change ) ( void * , e#cxgb4_state ) ; int ( * control ) ( void * , e#cxgb4_control , ... ) ; } 
cxgb4_register_uld int cxgb4_register_uld ( e#cxgb4_uld , const s#cxgb4_uld_info * ) 
cxgb4_unregister_uld int cxgb4_unregister_uld ( e#cxgb4_uld ) 
cxgb4_create_server_filter int cxgb4_create_server_filter ( const s#net_device * , unsigned int , t#__be32 , t#__be16 , t#__be16 , unsigned int , unsigned char , unsigned char ) 
cxgb4_remove_server_filter int cxgb4_remove_server_filter ( const s#net_device * , unsigned int , unsigned int , t#bool ) 

/* drivers/net/ethernet/chelsio/cxgb4/l2t.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s#l2t_entry struct l2t_entry { t#u16 state ; t#u16 idx ; t#u32 addr [ 4 ] ; int ifindex ; s#neighbour * neigh ; s#l2t_entry * first ; s#l2t_entry * next ; s#sk_buff * arpq_head ; s#sk_buff * arpq_tail ; t#spinlock_t lock ; t#atomic_t refcnt ; t#u16 hash ; t#u16 vlan ; t#u8 v6 ; t#u8 lport ; t#u8 dmac [ 6 ] ; } 
cxgb4_l2t_send int cxgb4_l2t_send ( s#net_device * , s#sk_buff * , s#l2t_entry * ) 
cxgb4_l2t_release void cxgb4_l2t_release ( s#l2t_entry * ) 
s##l2t_data
cxgb4_l2t_get s#l2t_entry * cxgb4_l2t_get ( s#l2t_data * , s#neighbour * , const s#net_device * , unsigned int ) 
cxgb4_select_ntuple t#u64 cxgb4_select_ntuple ( s#net_device * , const s#l2t_entry * ) 

/* drivers/net/ethernet/chelsio/cxgb4/sge.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
cxgb4_ofld_send int cxgb4_ofld_send ( s#net_device * , s#sk_buff * ) 
cxgb4_pktgl_to_skb s#sk_buff * cxgb4_pktgl_to_skb ( const s#pkt_gl * , unsigned int , unsigned int ) 

/* drivers/net/ethernet/cisco/enic/enic_api.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##rtnl_link_ops
s##phy_device
e#vnic_devcmd_cmd enum vnic_devcmd_cmd { CMD_NONE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 0U ) << ( 0 + 14 ) ) | ( ( 0 ) << 0 ) ) , CMD_MCPU_FW_INFO_OLD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 1 ) << 0 ) ) , CMD_MCPU_FW_INFO = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 1 ) << 0 ) ) , CMD_DEV_SPEC = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 2 ) << 0 ) ) , CMD_STATS_CLEAR = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 3 ) << 0 ) ) , CMD_STATS_DUMP = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 4 ) << 0 ) ) , CMD_PACKET_FILTER = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 7 ) << 0 ) ) , CMD_PACKET_FILTER_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 7 ) << 0 ) ) , CMD_HANG_NOTIFY = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 8 ) << 0 ) ) , CMD_GET_MAC_ADDR = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 9 ) << 0 ) ) , CMD_ADDR_ADD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 12 ) << 0 ) ) , CMD_ADDR_DEL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U | 2U ) << ( 0 + 14 ) ) | ( ( 13 ) << 0 ) ) , CMD_VLAN_ADD = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 14 ) << 0 ) ) , CMD_VLAN_DEL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 15 ) << 0 ) ) , CMD_NIC_CFG = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 16 ) << 0 ) ) , CMD_RSS_KEY = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 17 ) << 0 ) ) , CMD_RSS_CPU = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 18 ) << 0 ) ) , CMD_SOFT_RESET = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 19 ) << 0 ) ) , CMD_SOFT_RESET_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 20 ) << 0 ) ) , CMD_NOTIFY = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 21 ) << 0 ) ) , CMD_UNDI = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 22 ) << 0 ) ) , CMD_OPEN = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 23 ) << 0 ) ) , CMD_OPEN_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 24 ) << 0 ) ) , CMD_CLOSE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 25 ) << 0 ) ) , CMD_INIT_v1 = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 26 ) << 0 ) ) , CMD_INIT_PROV_INFO = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 27 ) << 0 ) ) , CMD_ENABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 28 ) << 0 ) ) , CMD_ENABLE_WAIT = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 28 ) << 0 ) ) , CMD_DISABLE = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 29 ) << 0 ) ) , CMD_STATS_DUMP_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 30 ) << 0 ) ) , CMD_INIT_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 31 ) << 0 ) ) , CMD_INT13 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 2U ) << ( 0 + 14 ) ) | ( ( 32 ) << 0 ) ) , CMD_LOGICAL_UPLINK = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 33 ) << 0 ) ) , CMD_DEINIT = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 34 ) << 0 ) ) , CMD_INIT = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 35 ) << 0 ) ) , CMD_CAPABILITY = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 36 ) << 0 ) ) , CMD_PERBI = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 2U ) << ( 0 + 14 ) ) | ( ( 37 ) << 0 ) ) , CMD_IAR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 1U ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 38 ) << 0 ) ) , CMD_HANG_RESET = ( ( ( 0U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 39 ) << 0 ) ) , CMD_HANG_RESET_STATUS = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 40 ) << 0 ) ) , CMD_IG_VLAN_REWRITE_MODE = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 41 ) << 0 ) ) , CMD_PROXY_BY_BDF = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 42 ) << 0 ) ) , CMD_PROXY_BY_INDEX = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 43 ) << 0 ) ) , CMD_CONFIG_INFO_GET = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 44 ) << 0 ) ) , CMD_INT13_ALL = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 45 ) << 0 ) ) , CMD_SET_DEFAULT_VLAN = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 46 ) << 0 ) ) , CMD_INIT_PROV_INFO2 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 47 ) << 0 ) ) , CMD_ENABLE2 = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 48 ) << 0 ) ) , CMD_STATUS = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 49 ) << 0 ) ) , CMD_INTR_COAL_CONVERT = ( ( ( 2U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( ( 1U | 2U | 4U ) ) << ( 0 + 14 ) ) | ( ( 50 ) << 0 ) ) , CMD_SET_MAC_ADDR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 55 ) << 0 ) ) , CMD_PROV_INFO_UPDATE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 56 ) << 0 ) ) , CMD_ADD_FILTER = ( ( ( ( 1U | 2U ) ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 58 ) << 0 ) ) , CMD_DEL_FILTER = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 59 ) << 0 ) ) , CMD_QP_ENABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 60 ) << 0 ) ) , CMD_QP_DISABLE = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 61 ) << 0 ) ) , CMD_QP_STATS_DUMP = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 62 ) << 0 ) ) , CMD_QP_STATS_CLEAR = ( ( ( 1U ) << ( ( ( 0 + 14 ) + 10 ) + 6 ) ) | ( ( 0 ) << ( ( 0 + 14 ) + 10 ) ) | ( ( 1U ) << ( 0 + 14 ) ) | ( ( 63 ) << 0 ) ) , } 
enic_api_devcmd_proxy_by_index int enic_api_devcmd_proxy_by_index ( s#net_device * , int , e#vnic_devcmd_cmd , t#u64 * , t#u64 * , int ) 

/* drivers/net/ethernet/cisco/enic/vnic_dev.o */
s##vnic_dev
e#vnic_res_type enum vnic_res_type { RES_TYPE_EOL , RES_TYPE_WQ , RES_TYPE_RQ , RES_TYPE_CQ , RES_TYPE_RSVD1 , RES_TYPE_NIC_CFG , RES_TYPE_RSVD2 , RES_TYPE_RSVD3 , RES_TYPE_RSVD4 , RES_TYPE_RSVD5 , RES_TYPE_INTR_CTRL , RES_TYPE_INTR_TABLE , RES_TYPE_INTR_PBA , RES_TYPE_INTR_PBA_LEGACY , RES_TYPE_RSVD6 , RES_TYPE_RSVD7 , RES_TYPE_DEVCMD , RES_TYPE_PASS_THRU_PAGE , RES_TYPE_MAX , } 
vnic_dev_get_res_count unsigned int vnic_dev_get_res_count ( s#vnic_dev * , e#vnic_res_type ) 
vnic_dev_get_res void * vnic_dev_get_res ( s#vnic_dev * , e#vnic_res_type , unsigned int ) 
vnic_dev_unregister void vnic_dev_unregister ( s#vnic_dev * ) 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#vnic_dev_bar struct vnic_dev_bar { void * vaddr ; t#dma_addr_t bus_addr ; unsigned long len ; } 
vnic_dev_register s#vnic_dev * vnic_dev_register ( s#vnic_dev * , void * , s#pci_dev * , s#vnic_dev_bar * , unsigned int ) 
vnic_dev_get_pdev s#pci_dev * vnic_dev_get_pdev ( s#vnic_dev * ) 

/* drivers/net/ethernet/emulex/benet/be_cmds.o */
be_roce_mcc_cmd int be_roce_mcc_cmd ( void * , void * , int , t#u16 * , t#u16 * ) 

/* drivers/net/ethernet/emulex/benet/be_roce.o */
s##ocrdma_dev
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
e#be_interrupt_mode enum be_interrupt_mode { BE_INTERRUPT_MODE_MSIX = 0 , BE_INTERRUPT_MODE_INTX = 1 , BE_INTERRUPT_MODE_MSI = 2 , } 
s#be_dev_info struct be_dev_info { t#u8 * db ; t#u64 unmapped_db ; t#u32 db_page_size ; t#u32 db_total_size ; t#u64 dpp_unmapped_addr ; t#u32 dpp_unmapped_len ; s#pci_dev * pdev ; s#net_device * netdev ; t#u8 mac_addr [ 6 ] ; t#u32 dev_family ; e#be_interrupt_mode intr_mode ; struct { int num_vectors ; int start_vector ; t#u32 vector_list [ 32 ] ; } msix ; } 
s#ocrdma_driver struct ocrdma_driver { unsigned char name [ 32 ] ; t#u32 be_abi_version ; s#ocrdma_dev * ( * add ) ( s#be_dev_info * ) ; void ( * remove ) ( s#ocrdma_dev * ) ; void ( * state_change_handler ) ( s#ocrdma_dev * , t#u32 ) ; } 
be_roce_register_driver int be_roce_register_driver ( s#ocrdma_driver * ) 
be_roce_unregister_driver void be_roce_unregister_driver ( s#ocrdma_driver * ) 

/* drivers/net/ethernet/mellanox/mlx4/alloc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
E#MLX4_MAX_PORTS 2 
e#mlx4_port_type enum mlx4_port_type { MLX4_PORT_TYPE_NONE = 0 , MLX4_PORT_TYPE_IB = 1 , MLX4_PORT_TYPE_ETH = 2 , MLX4_PORT_TYPE_AUTO = 3 } 
s##workqueue_struct
s#mlx4_dev_persistent struct mlx4_dev_persistent { s#pci_dev * pdev ; s#mlx4_dev * dev ; int nvfs [ E#MLX4_MAX_PORTS + 1 ] ; int num_vfs ; e#mlx4_port_type curr_port_type [ E#MLX4_MAX_PORTS + 1 ] ; e#mlx4_port_type curr_port_poss_type [ E#MLX4_MAX_PORTS + 1 ] ; s#work_struct catas_work ; s#workqueue_struct * catas_wq ; s#mutex device_state_mutex ; t#u8 state ; s#mutex interface_state_mutex ; t#u8 interface_state ; } 
E#MLX4_NUM_QP_REGION ( 0 ) + 4 
s#mlx4_caps struct mlx4_caps { t#u64 fw_ver ; t#u32 function ; int num_ports ; int vl_cap [ E#MLX4_MAX_PORTS + 1 ] ; int ib_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#__be32 ib_port_def_cap [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 def_mac [ E#MLX4_MAX_PORTS + 1 ] ; int eth_mtu_cap [ E#MLX4_MAX_PORTS + 1 ] ; int gid_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int pkey_table_len [ E#MLX4_MAX_PORTS + 1 ] ; int trans_type [ E#MLX4_MAX_PORTS + 1 ] ; int vendor_oui [ E#MLX4_MAX_PORTS + 1 ] ; int wavelength [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 trans_code [ E#MLX4_MAX_PORTS + 1 ] ; int local_ca_ack_delay ; int num_uars ; t#u32 uar_page_size ; int bf_reg_size ; int bf_regs_per_page ; int max_sq_sg ; int max_rq_sg ; int num_qps ; int max_wqes ; int max_sq_desc_sz ; int max_rq_desc_sz ; int max_qp_init_rdma ; int max_qp_dest_rdma ; t#u32 * qp0_proxy ; t#u32 * qp1_proxy ; t#u32 * qp0_tunnel ; t#u32 * qp1_tunnel ; int num_srqs ; int max_srq_wqes ; int max_srq_sge ; int reserved_srqs ; int num_cqs ; int max_cqes ; int reserved_cqs ; int num_eqs ; int reserved_eqs ; int num_comp_vectors ; int comp_pool ; int num_mpts ; int max_fmr_maps ; int num_mtts ; int fmr_reserved_mtts ; int reserved_mtts ; int reserved_mrws ; int reserved_uars ; int num_mgms ; int num_amgms ; int reserved_mcgs ; int num_qp_per_mgm ; int steering_mode ; int fs_log_max_ucast_qp_range_size ; int num_pds ; int reserved_pds ; int mtt_entry_sz ; int reserved_xrcds ; int max_xrcds ; t#u32 max_msg_sz ; t#u32 page_size_cap ; t#u64 flags ; t#u64 flags2 ; t#u32 bmme_flags ; t#u32 reserved_lkey ; t#u16 stat_rate_support ; t#u8 port_width_cap [ E#MLX4_MAX_PORTS + 1 ] ; int max_gso_sz ; int max_rss_tbl_sz ; int reserved_qps_cnt [ E#MLX4_NUM_QP_REGION ] ; int reserved_qps ; int reserved_qps_base [ E#MLX4_NUM_QP_REGION ] ; int log_num_macs ; int log_num_vlans ; e#mlx4_port_type port_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 supported_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 suggested_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u8 default_sense [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 port_mask [ E#MLX4_MAX_PORTS + 1 ] ; e#mlx4_port_type possible_type [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 max_counters ; t#u8 port_ib_mtu [ E#MLX4_MAX_PORTS + 1 ] ; t#u16 sqp_demux ; t#u32 eqe_size ; t#u32 cqe_size ; t#u8 eqe_factor ; t#u32 userspace_caps ; t#u32 function_caps ; t#u16 hca_core_clock ; t#u64 phys_port_id [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 vf_caps ; } 
s#mlx4_phys_caps struct mlx4_phys_caps { t#u32 gid_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 pkey_phys_table_len [ E#MLX4_MAX_PORTS + 1 ] ; t#u32 num_phys_eqs ; t#u32 base_sqpn ; t#u32 base_proxy_sqpn ; t#u32 base_tunnel_sqpn ; } 
s#mlx4_quotas struct mlx4_quotas { int qp ; int cq ; int srq ; int mpt ; int mtt ; int counter ; int xrcd ; } 
E#MLX4_BOARD_ID_LEN 64 
s#mlx4_vf_dev struct mlx4_vf_dev { t#u8 min_port ; t#u8 n_ports ; } 
s#mlx4_dev struct mlx4_dev { s#mlx4_dev_persistent * persist ; unsigned long flags ; unsigned long num_slaves ; s#mlx4_caps caps ; s#mlx4_phys_caps phys_caps ; s#mlx4_quotas quotas ; s#radix_tree_root qp_table_tree ; s#radix_tree_root srq_table_tree ; t#u8 rev_id ; char board_id [ E#MLX4_BOARD_ID_LEN ] ; int numa_node ; int oper_log_mgm_entry_size ; t#u64 regid_promisc_array [ E#MLX4_MAX_PORTS + 1 ] ; t#u64 regid_allmulti_array [ E#MLX4_MAX_PORTS + 1 ] ; s#mlx4_vf_dev * dev_vfs ; } 
s#mlx4_buf_list struct mlx4_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx4_buf struct mlx4_buf { s#mlx4_buf_list direct ; s#mlx4_buf_list * page_list ; int nbufs ; int npages ; int page_shift ; } 
mlx4_buf_alloc int mlx4_buf_alloc ( s#mlx4_dev * , int , int , s#mlx4_buf * , int ) 
mlx4_buf_free void mlx4_buf_free ( s#mlx4_dev * , int , s#mlx4_buf * ) 
E#MLX4_DB_PER_PAGE ( 1UL << 16 ) / 4 
s#mlx4_db_pgdir struct mlx4_db_pgdir { s#list_head list ; unsigned long order0 [ ( ( ( E#MLX4_DB_PER_PAGE ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long order1 [ ( ( ( E#MLX4_DB_PER_PAGE / 2 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long * bits [ 2 ] ; t#__be32 * db_page ; t#dma_addr_t db_dma ; } 
s##mlx4_ib_user_db_page
s#mlx4_db struct mlx4_db { t#__be32 * db ; union { s#mlx4_db_pgdir * pgdir ; s#mlx4_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; int order ; } 
mlx4_db_alloc int mlx4_db_alloc ( s#mlx4_dev * , s#mlx4_db * , int , int ) 
mlx4_db_free void mlx4_db_free ( s#mlx4_dev * , s#mlx4_db * ) 
s#mlx4_mtt struct mlx4_mtt { t#u32 offset ; int order ; int page_shift ; } 
s#mlx4_hwq_resources struct mlx4_hwq_resources { s#mlx4_db db ; s#mlx4_mtt mtt ; s#mlx4_buf buf ; } 
mlx4_alloc_hwq_res int mlx4_alloc_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int , int ) 
mlx4_free_hwq_res void mlx4_free_hwq_res ( s#mlx4_dev * , s#mlx4_hwq_resources * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/cmd.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
__mlx4_cmd int __mlx4_cmd ( s#mlx4_dev * , t#u64 , t#u64 * , int , t#u32 , t#u8 , t#u16 , unsigned long , int ) 
s#mlx4_cmd_mailbox struct mlx4_cmd_mailbox { void * buf ; t#dma_addr_t dma ; } 
mlx4_alloc_cmd_mailbox s#mlx4_cmd_mailbox * mlx4_alloc_cmd_mailbox ( s#mlx4_dev * ) 
mlx4_free_cmd_mailbox void mlx4_free_cmd_mailbox ( s#mlx4_dev * , s#mlx4_cmd_mailbox * ) 
s#mlx4_active_ports struct mlx4_active_ports { unsigned long ports [ ( ( ( E#MLX4_MAX_PORTS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
mlx4_get_active_ports s#mlx4_active_ports mlx4_get_active_ports ( s#mlx4_dev * , int ) 
mlx4_slave_convert_port int mlx4_slave_convert_port ( s#mlx4_dev * , int , int ) 
mlx4_phys_to_slave_port int mlx4_phys_to_slave_port ( s#mlx4_dev * , int , int ) 
E#MLX4_MFUNC_MAX 80 
s#mlx4_slaves_pport struct mlx4_slaves_pport { unsigned long slaves [ ( ( ( E#MLX4_MFUNC_MAX ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
mlx4_phys_to_slaves_pport s#mlx4_slaves_pport mlx4_phys_to_slaves_pport ( s#mlx4_dev * , int ) 
mlx4_phys_to_slaves_pport_actv s#mlx4_slaves_pport mlx4_phys_to_slaves_pport_actv ( s#mlx4_dev * , const s#mlx4_active_ports * ) 
mlx4_set_vf_mac int mlx4_set_vf_mac ( s#mlx4_dev * , int , int , t#u64 ) 
mlx4_set_vf_vlan int mlx4_set_vf_vlan ( s#mlx4_dev * , int , int , t#u16 , t#u8 ) 
mlx4_set_vf_spoofchk int mlx4_set_vf_spoofchk ( s#mlx4_dev * , int , int , t#bool ) 
mlx4_get_vf_config int mlx4_get_vf_config ( s#mlx4_dev * , int , int , s#ifla_vf_info * ) 

/* drivers/net/ethernet/mellanox/mlx4/cq.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
e#mlx4_event enum mlx4_event { MLX4_EVENT_TYPE_COMP = 0x00 , MLX4_EVENT_TYPE_PATH_MIG = 0x01 , MLX4_EVENT_TYPE_COMM_EST = 0x02 , MLX4_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX4_EVENT_TYPE_SRQ_QP_LAST_WQE = 0x13 , MLX4_EVENT_TYPE_SRQ_LIMIT = 0x14 , MLX4_EVENT_TYPE_CQ_ERROR = 0x04 , MLX4_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX4_EVENT_TYPE_EEC_CATAS_ERROR = 0x06 , MLX4_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX4_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX4_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX4_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX4_EVENT_TYPE_LOCAL_CATAS_ERROR = 0x08 , MLX4_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX4_EVENT_TYPE_EQ_OVERFLOW = 0x0f , MLX4_EVENT_TYPE_ECC_DETECT = 0x0e , MLX4_EVENT_TYPE_CMD = 0x0a , MLX4_EVENT_TYPE_VEP_UPDATE = 0x19 , MLX4_EVENT_TYPE_COMM_CHANNEL = 0x18 , MLX4_EVENT_TYPE_OP_REQUIRED = 0x1a , MLX4_EVENT_TYPE_FATAL_WARNING = 0x1b , MLX4_EVENT_TYPE_FLR_EVENT = 0x1c , MLX4_EVENT_TYPE_PORT_MNG_CHG_EVENT = 0x1d , MLX4_EVENT_TYPE_NONE = 0xff , } 
s#mlx4_uar struct mlx4_uar { unsigned long pfn ; int index ; s#list_head bf_list ; unsigned free_bf_bmap ; void * map ; void * bf_map ; } 
s#mlx4_cq struct mlx4_cq { void ( * comp ) ( s#mlx4_cq * ) ; void ( * event ) ( s#mlx4_cq * , e#mlx4_event ) ; s#mlx4_uar * uar ; t#u32 cons_index ; t#u16 irq ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; int arm_sn ; int cqn ; unsigned vector ; t#atomic_t refcount ; s#completion free ; } 
mlx4_cq_modify int mlx4_cq_modify ( s#mlx4_dev * , s#mlx4_cq * , t#u16 , t#u16 ) 
mlx4_cq_resize int mlx4_cq_resize ( s#mlx4_dev * , s#mlx4_cq * , int , s#mlx4_mtt * ) 
mlx4_cq_alloc int mlx4_cq_alloc ( s#mlx4_dev * , int , s#mlx4_mtt * , s#mlx4_uar * , t#u64 , s#mlx4_cq * , unsigned , int , int ) 
mlx4_cq_free void mlx4_cq_free ( s#mlx4_dev * , s#mlx4_cq * ) 

/* drivers/net/ethernet/mellanox/mlx4/eq.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
mlx4_gen_pkey_eqe int mlx4_gen_pkey_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_guid_change_eqe int mlx4_gen_guid_change_eqe ( s#mlx4_dev * , int , t#u8 ) 
mlx4_gen_port_state_change_eqe int mlx4_gen_port_state_change_eqe ( s#mlx4_dev * , int , t#u8 , t#u8 ) 
e#slave_port_state enum slave_port_state { SLAVE_PORT_DOWN = 0 , SLAVE_PENDING_UP , SLAVE_PORT_UP , } 
mlx4_get_slave_port_state e#slave_port_state mlx4_get_slave_port_state ( s#mlx4_dev * , int , t#u8 ) 
e#slave_port_gen_event enum slave_port_gen_event { SLAVE_PORT_GEN_EVENT_DOWN = 0 , SLAVE_PORT_GEN_EVENT_UP , SLAVE_PORT_GEN_EVENT_NONE , } 
set_and_calc_slave_port_state int set_and_calc_slave_port_state ( s#mlx4_dev * , int , t#u8 , int , e#slave_port_gen_event * ) 
mlx4_gen_slaves_port_mgt_ev int mlx4_gen_slaves_port_mgt_ev ( s#mlx4_dev * , t#u8 , int ) 
mlx4_test_interrupts int mlx4_test_interrupts ( s#mlx4_dev * ) 
s#cpu_rmap struct cpu_rmap { s#kref refcount ; t#u16 size , used ; void * * obj ; struct { t#u16 index ; t#u16 dist ; } near [ 0 ] ; } 
mlx4_assign_eq int mlx4_assign_eq ( s#mlx4_dev * , char * , s#cpu_rmap * , int * ) 
mlx4_eq_get_irq int mlx4_eq_get_irq ( s#mlx4_dev * , int ) 
mlx4_release_eq void mlx4_release_eq ( s#mlx4_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx4/fw.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
mlx4_get_slave_pkey_gid_tbl_len int mlx4_get_slave_pkey_gid_tbl_len ( s#mlx4_dev * , t#u8 , int * , int * ) 
mlx4_INIT_PORT int mlx4_INIT_PORT ( s#mlx4_dev * , int ) 
mlx4_CLOSE_PORT int mlx4_CLOSE_PORT ( s#mlx4_dev * , int ) 
mlx4_config_vxlan_port int mlx4_config_vxlan_port ( s#mlx4_dev * , t#__be16 ) 
mlx4_wol_read int mlx4_wol_read ( s#mlx4_dev * , t#u64 * , int ) 
mlx4_wol_write int mlx4_wol_write ( s#mlx4_dev * , t#u64 , int ) 
e#mlx4_access_reg_method enum mlx4_access_reg_method { MLX4_ACCESS_REG_QUERY = 0x1 , MLX4_ACCESS_REG_WRITE = 0x2 , } 
s#mlx4_ptys_reg struct mlx4_ptys_reg { t#u8 resrvd1 ; t#u8 local_port ; t#u8 resrvd2 ; t#u8 proto_mask ; t#__be32 resrvd3 [ 2 ] ; t#__be32 eth_proto_cap ; t#__be16 ib_width_cap ; t#__be16 ib_speed_cap ; t#__be32 resrvd4 ; t#__be32 eth_proto_admin ; t#__be16 ib_width_admin ; t#__be16 ib_speed_admin ; t#__be32 resrvd5 ; t#__be32 eth_proto_oper ; t#__be16 ib_width_oper ; t#__be16 ib_speed_oper ; t#__be32 resrvd6 ; t#__be32 eth_proto_lp_adv ; } 
mlx4_ACCESS_PTYS_REG int mlx4_ACCESS_PTYS_REG ( s#mlx4_dev * , e#mlx4_access_reg_method , s#mlx4_ptys_reg * ) 

/* drivers/net/ethernet/mellanox/mlx4/intf.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
e#mlx4_dev_event enum mlx4_dev_event { MLX4_DEV_EVENT_CATASTROPHIC_ERROR , MLX4_DEV_EVENT_PORT_UP , MLX4_DEV_EVENT_PORT_DOWN , MLX4_DEV_EVENT_PORT_REINIT , MLX4_DEV_EVENT_PORT_MGMT_CHANGE , MLX4_DEV_EVENT_SLAVE_INIT , MLX4_DEV_EVENT_SLAVE_SHUTDOWN , } 
e#mlx4_protocol enum mlx4_protocol { MLX4_PROT_IB_IPV6 = 0 , MLX4_PROT_ETH , MLX4_PROT_IB_IPV4 , MLX4_PROT_FCOE } 
s#mlx4_interface struct mlx4_interface { void * ( * add ) ( s#mlx4_dev * ) ; void ( * remove ) ( s#mlx4_dev * , void * ) ; void ( * event ) ( s#mlx4_dev * , void * , e#mlx4_dev_event , unsigned long ) ; void * ( * get_dev ) ( s#mlx4_dev * , void * , t#u8 ) ; s#list_head list ; e#mlx4_protocol protocol ; } 
mlx4_register_interface int mlx4_register_interface ( s#mlx4_interface * ) 
mlx4_unregister_interface void mlx4_unregister_interface ( s#mlx4_interface * ) 
mlx4_get_protocol_dev void * mlx4_get_protocol_dev ( s#mlx4_dev * , e#mlx4_protocol , int ) 

/* drivers/net/ethernet/mellanox/mlx4/main.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
mlx4_get_parav_qkey int mlx4_get_parav_qkey ( s#mlx4_dev * , t#u32 , t#u32 * ) 
mlx4_sync_pkey_table void mlx4_sync_pkey_table ( s#mlx4_dev * , int , int , int , int ) 
mlx4_put_slave_node_guid void mlx4_put_slave_node_guid ( s#mlx4_dev * , int , t#__be64 ) 
mlx4_get_slave_node_guid t#__be64 mlx4_get_slave_node_guid ( s#mlx4_dev * , int ) 
mlx4_is_slave_active int mlx4_is_slave_active ( s#mlx4_dev * , int ) 
mlx4_read_clock t#cycle_t mlx4_read_clock ( s#mlx4_dev * ) 
mlx4_counter_alloc int mlx4_counter_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_counter_free void mlx4_counter_free ( s#mlx4_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx4/mcg.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
e#mlx4_net_trans_promisc_mode enum mlx4_net_trans_promisc_mode { MLX4_FS_REGULAR = 1 , MLX4_FS_ALL_DEFAULT , MLX4_FS_MC_DEFAULT , MLX4_FS_UC_SNIFFER , MLX4_FS_MC_SNIFFER , MLX4_FS_MODE_NUM , } 
mlx4_map_sw_to_hw_steering_mode int mlx4_map_sw_to_hw_steering_mode ( s#mlx4_dev * , e#mlx4_net_trans_promisc_mode ) 
e#mlx4_net_trans_rule_id enum mlx4_net_trans_rule_id { MLX4_NET_TRANS_RULE_ID_ETH = 0 , MLX4_NET_TRANS_RULE_ID_IB , MLX4_NET_TRANS_RULE_ID_IPV6 , MLX4_NET_TRANS_RULE_ID_IPV4 , MLX4_NET_TRANS_RULE_ID_TCP , MLX4_NET_TRANS_RULE_ID_UDP , MLX4_NET_TRANS_RULE_NUM , } 
mlx4_map_sw_to_hw_steering_id int mlx4_map_sw_to_hw_steering_id ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
mlx4_hw_rule_sz int mlx4_hw_rule_sz ( s#mlx4_dev * , e#mlx4_net_trans_rule_id ) 
e#mlx4_net_trans_hw_rule_queue enum mlx4_net_trans_hw_rule_queue { MLX4_NET_TRANS_Q_FIFO , MLX4_NET_TRANS_Q_LIFO , } 
s#mlx4_net_trans_rule struct mlx4_net_trans_rule { s#list_head list ; e#mlx4_net_trans_hw_rule_queue queue_mode ; t#bool exclusive ; t#bool allow_loopback ; e#mlx4_net_trans_promisc_mode promisc_mode ; t#u8 port ; t#u16 priority ; t#u32 qpn ; } 
mlx4_flow_attach int mlx4_flow_attach ( s#mlx4_dev * , s#mlx4_net_trans_rule * , t#u64 * ) 
mlx4_flow_detach int mlx4_flow_detach ( s#mlx4_dev * , t#u64 ) 
s#mlx4_qp struct mlx4_qp { void ( * event ) ( s#mlx4_qp * , e#mlx4_event ) ; int qpn ; t#atomic_t refcount ; s#completion free ; } 
mlx4_multicast_attach int mlx4_multicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , t#u8 , int , e#mlx4_protocol , t#u64 * ) 
mlx4_multicast_detach int mlx4_multicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol , t#u64 ) 
mlx4_flow_steer_promisc_add int mlx4_flow_steer_promisc_add ( s#mlx4_dev * , t#u8 , t#u32 , e#mlx4_net_trans_promisc_mode ) 
mlx4_flow_steer_promisc_remove int mlx4_flow_steer_promisc_remove ( s#mlx4_dev * , t#u8 , e#mlx4_net_trans_promisc_mode ) 
mlx4_unicast_attach int mlx4_unicast_attach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , int , e#mlx4_protocol ) 
mlx4_unicast_detach int mlx4_unicast_detach ( s#mlx4_dev * , s#mlx4_qp * , t#u8 [ 16 ] , e#mlx4_protocol ) 
mlx4_multicast_promisc_add int mlx4_multicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_multicast_promisc_remove int mlx4_multicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_add int mlx4_unicast_promisc_add ( s#mlx4_dev * , t#u32 , t#u8 ) 
mlx4_unicast_promisc_remove int mlx4_unicast_promisc_remove ( s#mlx4_dev * , t#u32 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx4/mr.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
mlx4_mtt_init int mlx4_mtt_init ( s#mlx4_dev * , int , int , s#mlx4_mtt * ) 
mlx4_mtt_cleanup void mlx4_mtt_cleanup ( s#mlx4_dev * , s#mlx4_mtt * ) 
mlx4_mtt_addr t#u64 mlx4_mtt_addr ( s#mlx4_dev * , s#mlx4_mtt * ) 
s#mlx4_mr struct mlx4_mr { s#mlx4_mtt mtt ; t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; t#u32 access ; int enabled ; } 
mlx4_mr_alloc int mlx4_mr_alloc ( s#mlx4_dev * , t#u32 , t#u64 , t#u64 , t#u32 , int , int , s#mlx4_mr * ) 
mlx4_mr_free int mlx4_mr_free ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_mr_enable int mlx4_mr_enable ( s#mlx4_dev * , s#mlx4_mr * ) 
mlx4_write_mtt int mlx4_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , int , int , t#u64 * ) 
mlx4_buf_write_mtt int mlx4_buf_write_mtt ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_buf * , int ) 
s#mlx4_mpt_entry struct mlx4_mpt_entry { t#__be32 flags ; t#__be32 qpn ; t#__be32 key ; t#__be32 pd_flags ; t#__be64 start ; t#__be64 length ; t#__be32 lkey ; t#__be32 win_cnt ; t#u8 reserved1 [ 3 ] ; t#u8 mtt_rep ; t#__be64 mtt_addr ; t#__be32 mtt_sz ; t#__be32 entity_size ; t#__be32 first_byte_offset ; } 
s#mlx4_fmr struct mlx4_fmr { s#mlx4_mr mr ; s#mlx4_mpt_entry * mpt ; t#__be64 * mtts ; t#dma_addr_t dma_handle ; int max_pages ; int max_maps ; int maps ; t#u8 page_shift ; } 
mlx4_map_phys_fmr int mlx4_map_phys_fmr ( s#mlx4_dev * , s#mlx4_fmr * , t#u64 * , int , t#u64 , t#u32 * , t#u32 * ) 
mlx4_fmr_alloc int mlx4_fmr_alloc ( s#mlx4_dev * , t#u32 , t#u32 , int , int , t#u8 , s#mlx4_fmr * ) 
mlx4_fmr_enable int mlx4_fmr_enable ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_fmr_unmap void mlx4_fmr_unmap ( s#mlx4_dev * , s#mlx4_fmr * , t#u32 * , t#u32 * ) 
mlx4_fmr_free int mlx4_fmr_free ( s#mlx4_dev * , s#mlx4_fmr * ) 
mlx4_SYNC_TPT int mlx4_SYNC_TPT ( s#mlx4_dev * ) 

/* drivers/net/ethernet/mellanox/mlx4/pd.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
mlx4_pd_alloc int mlx4_pd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_pd_free void mlx4_pd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_xrcd_alloc int mlx4_xrcd_alloc ( s#mlx4_dev * , t#u32 * ) 
mlx4_xrcd_free void mlx4_xrcd_free ( s#mlx4_dev * , t#u32 ) 
mlx4_uar_alloc int mlx4_uar_alloc ( s#mlx4_dev * , s#mlx4_uar * ) 
mlx4_uar_free void mlx4_uar_free ( s#mlx4_dev * , s#mlx4_uar * ) 
s#mlx4_bf struct mlx4_bf { unsigned int offset ; int buf_size ; s#mlx4_uar * uar ; void * reg ; } 
mlx4_bf_alloc int mlx4_bf_alloc ( s#mlx4_dev * , s#mlx4_bf * , int ) 
mlx4_bf_free void mlx4_bf_free ( s#mlx4_dev * , s#mlx4_bf * ) 

/* drivers/net/ethernet/mellanox/mlx4/port.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
__mlx4_register_mac int __mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_register_mac int mlx4_register_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_get_base_qpn int mlx4_get_base_qpn ( s#mlx4_dev * , t#u8 ) 
__mlx4_unregister_mac void __mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
mlx4_unregister_mac void mlx4_unregister_mac ( s#mlx4_dev * , t#u8 , t#u64 ) 
__mlx4_replace_mac int __mlx4_replace_mac ( s#mlx4_dev * , t#u8 , int , t#u64 ) 
mlx4_find_cached_vlan int mlx4_find_cached_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_register_vlan int mlx4_register_vlan ( s#mlx4_dev * , t#u8 , t#u16 , int * ) 
mlx4_unregister_vlan void mlx4_unregister_vlan ( s#mlx4_dev * , t#u8 , t#u16 ) 
mlx4_SET_PORT_general int mlx4_SET_PORT_general ( s#mlx4_dev * , t#u8 , int , t#u8 , t#u8 , t#u8 , t#u8 ) 
mlx4_SET_PORT_qpn_calc int mlx4_SET_PORT_qpn_calc ( s#mlx4_dev * , t#u8 , t#u32 , t#u8 ) 
mlx4_SET_PORT_PRIO2TC int mlx4_SET_PORT_PRIO2TC ( s#mlx4_dev * , t#u8 , t#u8 * ) 
mlx4_SET_PORT_SCHEDULER int mlx4_SET_PORT_SCHEDULER ( s#mlx4_dev * , t#u8 , t#u8 * , t#u8 * , t#u16 * ) 
mlx4_SET_MCAST_FLTR int mlx4_SET_MCAST_FLTR ( s#mlx4_dev * , t#u8 , t#u64 , t#u64 , t#u8 ) 
mlx4_set_stats_bitmap void mlx4_set_stats_bitmap ( s#mlx4_dev * , t#u64 * ) 

/* drivers/net/ethernet/mellanox/mlx4/qp.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
e#mlx4_qp_state enum mlx4_qp_state { MLX4_QP_STATE_RST = 0 , MLX4_QP_STATE_INIT = 1 , MLX4_QP_STATE_RTR = 2 , MLX4_QP_STATE_RTS = 3 , MLX4_QP_STATE_SQER = 4 , MLX4_QP_STATE_SQD = 5 , MLX4_QP_STATE_ERR = 6 , MLX4_QP_STATE_SQ_DRAINING = 7 , MLX4_QP_NUM_STATE } 
s#mlx4_qp_path struct mlx4_qp_path { t#u8 fl ; t#u8 vlan_control ; t#u8 disable_pkey_check ; t#u8 pkey_index ; t#u8 counter_index ; t#u8 grh_mylmc ; t#__be16 rlid ; t#u8 ackto ; t#u8 mgid_index ; t#u8 static_rate ; t#u8 hop_limit ; t#__be32 tclass_flowlabel ; t#u8 rgid [ 16 ] ; t#u8 sched_queue ; t#u8 vlan_index ; t#u8 feup ; t#u8 fvl_rx ; t#u8 reserved4 [ 2 ] ; t#u8 dmac [ 6 ] ; } 
s#mlx4_qp_context struct mlx4_qp_context { t#__be32 flags ; t#__be32 pd ; t#u8 mtu_msgmax ; t#u8 rq_size_stride ; t#u8 sq_size_stride ; t#u8 rlkey ; t#__be32 usr_page ; t#__be32 local_qpn ; t#__be32 remote_qpn ; s#mlx4_qp_path pri_path ; s#mlx4_qp_path alt_path ; t#__be32 params1 ; t#u32 reserved1 ; t#__be32 next_send_psn ; t#__be32 cqn_send ; t#u32 reserved2 [ 2 ] ; t#__be32 last_acked_psn ; t#__be32 ssn ; t#__be32 params2 ; t#__be32 rnr_nextrecvpsn ; t#__be32 xrcd ; t#__be32 cqn_recv ; t#__be64 db_rec_addr ; t#__be32 qkey ; t#__be32 srqn ; t#__be32 msn ; t#__be16 rq_wqe_counter ; t#__be16 sq_wqe_counter ; t#u32 reserved3 [ 2 ] ; t#__be32 param3 ; t#__be32 nummmcpeers_basemkey ; t#u8 log_page_size ; t#u8 reserved4 [ 2 ] ; t#u8 mtt_base_addr_h ; t#__be32 mtt_base_addr_l ; t#u32 reserved5 [ 10 ] ; } 
e#mlx4_qp_optpar enum mlx4_qp_optpar { MLX4_QP_OPTPAR_ALT_ADDR_PATH = 1 << 0 , MLX4_QP_OPTPAR_RRE = 1 << 1 , MLX4_QP_OPTPAR_RAE = 1 << 2 , MLX4_QP_OPTPAR_RWE = 1 << 3 , MLX4_QP_OPTPAR_PKEY_INDEX = 1 << 4 , MLX4_QP_OPTPAR_Q_KEY = 1 << 5 , MLX4_QP_OPTPAR_RNR_TIMEOUT = 1 << 6 , MLX4_QP_OPTPAR_PRIMARY_ADDR_PATH = 1 << 7 , MLX4_QP_OPTPAR_SRA_MAX = 1 << 8 , MLX4_QP_OPTPAR_RRA_MAX = 1 << 9 , MLX4_QP_OPTPAR_PM_STATE = 1 << 10 , MLX4_QP_OPTPAR_RETRY_COUNT = 1 << 12 , MLX4_QP_OPTPAR_RNR_RETRY = 1 << 13 , MLX4_QP_OPTPAR_ACK_TIMEOUT = 1 << 14 , MLX4_QP_OPTPAR_SCHED_QUEUE = 1 << 16 , MLX4_QP_OPTPAR_COUNTER_INDEX = 1 << 20 } 
mlx4_qp_modify int mlx4_qp_modify ( s#mlx4_dev * , s#mlx4_mtt * , e#mlx4_qp_state , e#mlx4_qp_state , s#mlx4_qp_context * , e#mlx4_qp_optpar , int , s#mlx4_qp * ) 
mlx4_qp_reserve_range int mlx4_qp_reserve_range ( s#mlx4_dev * , int , int , int * ) 
mlx4_qp_release_range void mlx4_qp_release_range ( s#mlx4_dev * , int , int ) 
mlx4_qp_alloc int mlx4_qp_alloc ( s#mlx4_dev * , int , s#mlx4_qp * , int ) 
mlx4_qp_lookup_lock s#mlx4_qp * mlx4_qp_lookup_lock ( s#mlx4_dev * , t#u32 ) 
mlx4_qp_remove void mlx4_qp_remove ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_free void mlx4_qp_free ( s#mlx4_dev * , s#mlx4_qp * ) 
mlx4_qp_query int mlx4_qp_query ( s#mlx4_dev * , s#mlx4_qp * , s#mlx4_qp_context * ) 
mlx4_qp_to_ready int mlx4_qp_to_ready ( s#mlx4_dev * , s#mlx4_mtt * , s#mlx4_qp_context * , s#mlx4_qp * , e#mlx4_qp_state * ) 

/* drivers/net/ethernet/mellanox/mlx4/srq.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s#mlx4_srq struct mlx4_srq { void ( * event ) ( s#mlx4_srq * , e#mlx4_event ) ; int srqn ; int max ; int max_gs ; int wqe_shift ; t#atomic_t refcount ; s#completion free ; } 
mlx4_srq_alloc int mlx4_srq_alloc ( s#mlx4_dev * , t#u32 , t#u32 , t#u16 , s#mlx4_mtt * , t#u64 , s#mlx4_srq * ) 
mlx4_srq_invalidate void mlx4_srq_invalidate ( s#mlx4_dev * , s#mlx4_srq * ) 
mlx4_srq_remove void mlx4_srq_remove ( s#mlx4_dev * , s#mlx4_srq * ) 
mlx4_srq_free void mlx4_srq_free ( s#mlx4_dev * , s#mlx4_srq * ) 
mlx4_srq_arm int mlx4_srq_arm ( s#mlx4_dev * , s#mlx4_srq * , int ) 
mlx4_srq_query int mlx4_srq_query ( s#mlx4_dev * , s#mlx4_srq * , int * ) 

/* drivers/net/ethernet/mellanox/mlx4/xrcd.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
__mlx4_xrcd_alloc int __mlx4_xrcd_alloc ( s#mlx4_dev * , t#u32 * ) 
__mlx4_xrcd_free void __mlx4_xrcd_free ( s#mlx4_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/alloc.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
E#MLX5_BOARD_ID_LEN 64 
E#MLX5_CMD_WQ_MAX_NAME 32 
s##workqueue_struct
s#cache_ent struct cache_ent { t#spinlock_t lock ; s#list_head head ; } 
s#mlx5_cmd_first struct mlx5_cmd_first { t#__be32 data [ 4 ] ; } 
s#mlx5_cmd_mailbox struct mlx5_cmd_mailbox { void * buf ; t#dma_addr_t dma ; s#mlx5_cmd_mailbox * next ; } 
s#mlx5_cmd_msg struct mlx5_cmd_msg { s#list_head list ; s#cache_ent * cache ; t#u32 len ; s#mlx5_cmd_first first ; s#mlx5_cmd_mailbox * next ; } 
t#mlx5_cmd_cbk_t typedef void ( * mlx5_cmd_cbk_t ) ( int , void * ) 
s#mlx5_cmd_layout struct mlx5_cmd_layout { t#u8 type ; t#u8 rsvd0 [ 3 ] ; t#__be32 inlen ; t#__be64 in_ptr ; t#__be32 in [ 4 ] ; t#__be32 out [ 4 ] ; t#__be64 out_ptr ; t#__be32 outlen ; t#u8 token ; t#u8 sig ; t#u8 rsvd1 ; t#u8 status_own ; } 
s#mlx5_cmd_work_ent struct mlx5_cmd_work_ent { s#mlx5_cmd_msg * in ; s#mlx5_cmd_msg * out ; void * uout ; int uout_size ; t#mlx5_cmd_cbk_t callback ; void * context ; int idx ; s#completion done ; s#mlx5_cmd * cmd ; s#work_struct work ; s#mlx5_cmd_layout * lay ; int ret ; int page_queue ; t#u8 status ; t#u8 token ; s#timespec ts1 ; s#timespec ts2 ; t#u16 op ; } 
E#MLX5_MAX_COMMANDS 32 
s##dma_pool
s##dentry
s#mlx5_cmd_debug struct mlx5_cmd_debug { s#dentry * dbg_root ; s#dentry * dbg_in ; s#dentry * dbg_out ; s#dentry * dbg_outlen ; s#dentry * dbg_status ; s#dentry * dbg_run ; void * in_msg ; void * out_msg ; t#u8 status ; t#u16 inlen ; t#u16 outlen ; } 
s#cmd_msg_cache struct cmd_msg_cache { s#cache_ent large ; s#cache_ent med ; } 
s#mlx5_cmd_stats struct mlx5_cmd_stats { t#u64 sum ; t#u64 n ; s#dentry * root ; s#dentry * avg ; s#dentry * count ; t#spinlock_t lock ; } 
E#MLX5_CMD_OP_MAX 0x911 
s#mlx5_cmd struct mlx5_cmd { void * cmd_buf ; t#dma_addr_t dma ; t#u16 cmdif_rev ; t#u8 log_sz ; t#u8 log_stride ; int max_reg_cmds ; int events ; t#u32 * vector ; t#spinlock_t alloc_lock ; t#spinlock_t token_lock ; t#u8 token ; unsigned long bitmask ; char wq_name [ E#MLX5_CMD_WQ_MAX_NAME ] ; s#workqueue_struct * wq ; s#semaphore sem ; s#semaphore pages_sem ; int mode ; s#mlx5_cmd_work_ent * ent_arr [ E#MLX5_MAX_COMMANDS ] ; s#dma_pool * pool ; s#mlx5_cmd_debug dbg ; s#cmd_msg_cache cache ; int checksum_disabled ; s#mlx5_cmd_stats stats [ E#MLX5_CMD_OP_MAX ] ; } 
s#mlx5_port_caps struct mlx5_port_caps { int gid_table_len ; int pkey_table_len ; } 
E#MLX5_MAX_PORTS 2 
s#mlx5_general_caps struct mlx5_general_caps { t#u8 log_max_eq ; t#u8 log_max_cq ; t#u8 log_max_qp ; t#u8 log_max_mkey ; t#u8 log_max_pd ; t#u8 log_max_srq ; t#u8 log_max_strq ; t#u8 log_max_mrw_sz ; t#u8 log_max_bsf_list_size ; t#u8 log_max_klm_list_size ; t#u32 max_cqes ; int max_wqes ; t#u32 max_eqes ; t#u32 max_indirection ; int max_sq_desc_sz ; int max_rq_desc_sz ; int max_dc_sq_desc_sz ; t#u64 flags ; t#u16 stat_rate_support ; int log_max_msg ; int num_ports ; t#u8 log_max_ra_res_qp ; t#u8 log_max_ra_req_qp ; int max_srq_wqes ; int bf_reg_size ; int bf_regs_per_page ; s#mlx5_port_caps port [ E#MLX5_MAX_PORTS ] ; t#u8 ext_port_cap [ E#MLX5_MAX_PORTS ] ; int max_vf ; t#u32 reserved_lkey ; t#u8 local_ca_ack_delay ; t#u8 log_max_mcg ; t#u32 max_qp_mcg ; int min_page_sz ; int pd_cap ; t#u32 max_qp_counters ; t#u32 pkey_table_size ; t#u8 log_max_ra_req_dc ; t#u8 log_max_ra_res_dc ; t#u32 uar_sz ; t#u8 min_log_pg_sz ; t#u8 log_max_xrcd ; t#u16 log_uar_page_sz ; } 
s#mlx5_caps struct mlx5_caps { s#mlx5_general_caps gen ; } 
s#health_buffer struct health_buffer { t#__be32 assert_var [ 5 ] ; t#__be32 rsvd0 [ 3 ] ; t#__be32 assert_exit_ptr ; t#__be32 assert_callra ; t#__be32 rsvd1 [ 2 ] ; t#__be32 fw_ver ; t#__be32 hw_id ; t#__be32 rsvd2 ; t#u8 irisc_index ; t#u8 synd ; t#__be16 ext_sync ; } 
s#mlx5_init_seg struct mlx5_init_seg { t#__be32 fw_rev ; t#__be32 cmdif_rev_fw_sub ; t#__be32 rsvd0 [ 2 ] ; t#__be32 cmdq_addr_h ; t#__be32 cmdq_addr_l_sz ; t#__be32 cmd_dbell ; t#__be32 rsvd1 [ 121 ] ; s#health_buffer health ; t#__be32 rsvd2 [ 884 ] ; t#__be32 health_counter ; t#__be32 rsvd3 [ 1019 ] ; t#__be64 ieee1588_clk ; t#__be32 ieee1588_clk_type ; t#__be32 clr_intx ; } 
e#mlx5_dev_event enum mlx5_dev_event { MLX5_DEV_EVENT_SYS_ERROR , MLX5_DEV_EVENT_PORT_UP , MLX5_DEV_EVENT_PORT_DOWN , MLX5_DEV_EVENT_PORT_INITIALIZED , MLX5_DEV_EVENT_LID_CHANGE , MLX5_DEV_EVENT_PKEY_CHANGE , MLX5_DEV_EVENT_GUID_CHANGE , MLX5_DEV_EVENT_CLIENT_REREG , } 
E#MLX5_MAX_NAME_LEN 16 
s#mlx5_buf_list struct mlx5_buf_list { void * buf ; t#dma_addr_t map ; } 
s#mlx5_buf struct mlx5_buf { s#mlx5_buf_list direct ; s#mlx5_buf_list * page_list ; int nbufs ; int npages ; int size ; t#u8 page_shift ; } 
E#MLX5_MAX_EQ_NAME 32 
e#dbg_rsc_type enum dbg_rsc_type { MLX5_DBG_RSC_QP , MLX5_DBG_RSC_EQ , MLX5_DBG_RSC_CQ , } 
s#mlx5_field_desc struct mlx5_field_desc { s#dentry * dent ; int i ; } 
s#mlx5_rsc_debug struct mlx5_rsc_debug { s#mlx5_core_dev * dev ; void * object ; e#dbg_rsc_type type ; s#dentry * root ; s#mlx5_field_desc fields [ 0 ] ; } 
s#mlx5_eq struct mlx5_eq { s#mlx5_core_dev * dev ; t#__be32 * doorbell ; t#u32 cons_index ; s#mlx5_buf buf ; int size ; t#u8 irqn ; t#u8 eqn ; int nent ; t#u64 mask ; char name [ E#MLX5_MAX_EQ_NAME ] ; s#list_head list ; int index ; s#mlx5_rsc_debug * dbg ; } 
s#mlx5_eq_table struct mlx5_eq_table { void * update_ci ; void * update_arm_ci ; s#list_head * comp_eq_head ; s#mlx5_eq pages_eq ; s#mlx5_eq async_eq ; s#mlx5_eq cmd_eq ; s#msix_entry * msix_arr ; int num_comp_vectors ; t#spinlock_t lock ; } 
s#mlx5_uar struct mlx5_uar { t#u32 index ; s#list_head bf_list ; unsigned free_bf_bmap ; void * wc_map ; void * map ; } 
s#mlx5_bf struct mlx5_bf { void * reg ; void * regreg ; int buf_size ; s#mlx5_uar * uar ; unsigned long offset ; int need_lock ; t#spinlock_t lock ; t#spinlock_t lock32 ; int uuarn ; } 
s#mlx5_uuar_info struct mlx5_uuar_info { s#mlx5_uar * uars ; int num_uars ; int num_low_latency_uuars ; unsigned long * bitmap ; unsigned int * count ; s#mlx5_bf * bfs ; s#mutex lock ; t#u32 ver ; } 
s#mlx5_core_health struct mlx5_core_health { s#health_buffer * health ; t#__be32 * health_counter ; s#timer_list timer ; s#list_head list ; t#u32 prev ; int miss_counter ; } 
s##radix_tree_node
s#mlx5_srq_table struct mlx5_srq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_qp_table struct mlx5_qp_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_cq_table struct mlx5_cq_table { t#spinlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_mr_table struct mlx5_mr_table { t#rwlock_t lock ; s#radix_tree_root tree ; } 
s#mlx5_priv struct mlx5_priv { char name [ E#MLX5_MAX_NAME_LEN ] ; s#mlx5_eq_table eq_table ; s#mlx5_uuar_info uuari ; ; s#workqueue_struct * pg_wq ; s#rb_root page_root ; int fw_pages ; int reg_pages ; s#list_head free_list ; s#mlx5_core_health health ; s#mlx5_srq_table srq_table ; s#mlx5_qp_table qp_table ; s#dentry * qp_debugfs ; s#dentry * eq_debugfs ; s#dentry * cq_debugfs ; s#dentry * cmdif_debugfs ; s#mlx5_cq_table cq_table ; s#mlx5_mr_table mr_table ; s#mutex pgdir_mutex ; s#list_head pgdir_list ; s#dentry * dbg_root ; t#spinlock_t mkey_lock ; t#u8 mkey_key ; s#list_head dev_list ; s#list_head ctx_list ; t#spinlock_t ctx_lock ; } 
E#MAX_MR_CACHE_ENTRIES 16 
s#mlx5_profile struct mlx5_profile { t#u64 mask ; t#u8 log_max_qp ; struct { int size ; int limit ; } mr_cache [ E#MAX_MR_CACHE_ENTRIES ] ; } 
s#mlx5_core_dev struct mlx5_core_dev { s#pci_dev * pdev ; t#u8 rev_id ; char board_id [ E#MLX5_BOARD_ID_LEN ] ; s#mlx5_cmd cmd ; s#mlx5_caps caps ; t#phys_addr_t iseg_base ; s#mlx5_init_seg * iseg ; void ( * event ) ( s#mlx5_core_dev * , e#mlx5_dev_event , unsigned long ) ; s#mlx5_priv priv ; s#mlx5_profile * profile ; t#atomic_t num_qps ; } 
mlx5_buf_alloc int mlx5_buf_alloc ( s#mlx5_core_dev * , int , int , s#mlx5_buf * ) 
mlx5_buf_free void mlx5_buf_free ( s#mlx5_core_dev * , s#mlx5_buf * ) 
E#MLX5_DB_PER_PAGE ( 1UL << 16 ) / ( 1 << 7 ) 
s#mlx5_db_pgdir struct mlx5_db_pgdir { s#list_head list ; unsigned long bitmap [ ( ( ( E#MLX5_DB_PER_PAGE ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#__be32 * db_page ; t#dma_addr_t db_dma ; } 
s##mlx5_ib_user_db_page
s#mlx5_db struct mlx5_db { t#__be32 * db ; union { s#mlx5_db_pgdir * pgdir ; s#mlx5_ib_user_db_page * user_page ; } u ; t#dma_addr_t dma ; int index ; } 
mlx5_db_alloc int mlx5_db_alloc ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_db_free void mlx5_db_free ( s#mlx5_core_dev * , s#mlx5_db * ) 
mlx5_fill_page_array void mlx5_fill_page_array ( s#mlx5_buf * , t#__be64 * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cmd.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
mlx5_cmd_comp_handler void mlx5_cmd_comp_handler ( s#mlx5_core_dev * , unsigned long ) 
mlx5_cmd_exec int mlx5_cmd_exec ( s#mlx5_core_dev * , void * , int , void * , int ) 
mlx5_cmd_exec_cb int mlx5_cmd_exec_cb ( s#mlx5_core_dev * , void * , int , void * , int , t#mlx5_cmd_cbk_t , void * ) 
mlx5_cmd_init int mlx5_cmd_init ( s#mlx5_core_dev * ) 
mlx5_cmd_cleanup void mlx5_cmd_cleanup ( s#mlx5_core_dev * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/cq.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
e#mlx5_event enum mlx5_event { MLX5_EVENT_TYPE_COMP = 0x0 , MLX5_EVENT_TYPE_PATH_MIG = 0x01 , MLX5_EVENT_TYPE_COMM_EST = 0x02 , MLX5_EVENT_TYPE_SQ_DRAINED = 0x03 , MLX5_EVENT_TYPE_SRQ_LAST_WQE = 0x13 , MLX5_EVENT_TYPE_SRQ_RQ_LIMIT = 0x14 , MLX5_EVENT_TYPE_CQ_ERROR = 0x04 , MLX5_EVENT_TYPE_WQ_CATAS_ERROR = 0x05 , MLX5_EVENT_TYPE_PATH_MIG_FAILED = 0x07 , MLX5_EVENT_TYPE_WQ_INVAL_REQ_ERROR = 0x10 , MLX5_EVENT_TYPE_WQ_ACCESS_ERROR = 0x11 , MLX5_EVENT_TYPE_SRQ_CATAS_ERROR = 0x12 , MLX5_EVENT_TYPE_INTERNAL_ERROR = 0x08 , MLX5_EVENT_TYPE_PORT_CHANGE = 0x09 , MLX5_EVENT_TYPE_GPIO_EVENT = 0x15 , MLX5_EVENT_TYPE_REMOTE_CONFIG = 0x19 , MLX5_EVENT_TYPE_DB_BF_CONGESTION = 0x1a , MLX5_EVENT_TYPE_STALL_EVENT = 0x1b , MLX5_EVENT_TYPE_CMD = 0x0a , MLX5_EVENT_TYPE_PAGE_REQUEST = 0xb , } 
s#mlx5_core_cq struct mlx5_core_cq { t#u32 cqn ; int cqe_sz ; t#__be32 * set_ci_db ; t#__be32 * arm_db ; t#atomic_t refcount ; s#completion free ; unsigned vector ; int irqn ; void ( * comp ) ( s#mlx5_core_cq * ) ; void ( * event ) ( s#mlx5_core_cq * , e#mlx5_event ) ; s#mlx5_uar * uar ; t#u32 cons_index ; unsigned arm_sn ; s#mlx5_rsc_debug * dbg ; int pid ; } 
s#mlx5_inbox_hdr struct mlx5_inbox_hdr { t#__be16 opcode ; t#u8 rsvd [ 4 ] ; t#__be16 opmod ; } 
s#mlx5_cq_context struct mlx5_cq_context { t#u8 status ; t#u8 cqe_sz_flags ; t#u8 st ; t#u8 rsvd3 ; t#u8 rsvd4 [ 6 ] ; t#__be16 page_offset ; t#__be32 log_sz_usr_page ; t#__be16 cq_period ; t#__be16 cq_max_count ; t#__be16 rsvd20 ; t#__be16 c_eqn ; t#u8 log_pg_sz ; t#u8 rsvd25 [ 7 ] ; t#__be32 last_notified_index ; t#__be32 solicit_producer_index ; t#__be32 consumer_counter ; t#__be32 producer_counter ; t#u8 rsvd48 [ 8 ] ; t#__be64 db_record_addr ; } 
s#mlx5_create_cq_mbox_in struct mlx5_create_cq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_cqn ; t#u8 rsvdx [ 4 ] ; s#mlx5_cq_context ctx ; t#u8 rsvd6 [ 192 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_cq int mlx5_core_create_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_create_cq_mbox_in * , int ) 
mlx5_core_destroy_cq int mlx5_core_destroy_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * ) 
s#mlx5_outbox_hdr struct mlx5_outbox_hdr { t#u8 status ; t#u8 rsvd [ 3 ] ; t#__be32 syndrome ; } 
s#mlx5_query_cq_mbox_out struct mlx5_query_cq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd0 [ 8 ] ; s#mlx5_cq_context ctx ; t#u8 rsvd6 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_cq int mlx5_core_query_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_query_cq_mbox_out * ) 
s#mlx5_modify_cq_mbox_in struct mlx5_modify_cq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 cqn ; t#__be32 field_select ; s#mlx5_cq_context ctx ; t#u8 rsvd [ 192 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_modify_cq int mlx5_core_modify_cq ( s#mlx5_core_dev * , s#mlx5_core_cq * , s#mlx5_modify_cq_mbox_in * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/debugfs.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
mlx5_debugfs_root extern s#dentry * mlx5_debugfs_root 

/* drivers/net/ethernet/mellanox/mlx5/core/eq.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_create_map_eq int mlx5_create_map_eq ( s#mlx5_core_dev * , s#mlx5_eq * , t#u8 , int , t#u64 , const char * , s#mlx5_uar * ) 
mlx5_destroy_unmap_eq int mlx5_destroy_unmap_eq ( s#mlx5_core_dev * , s#mlx5_eq * ) 
s#mlx5_eq_context struct mlx5_eq_context { t#u8 status ; t#u8 ec_oi ; t#u8 st ; t#u8 rsvd2 [ 7 ] ; t#__be16 page_pffset ; t#__be32 log_sz_usr_page ; t#u8 rsvd3 [ 7 ] ; t#u8 intr ; t#u8 log_page_size ; t#u8 rsvd4 [ 15 ] ; t#__be32 consumer_counter ; t#__be32 produser_counter ; t#u8 rsvd5 [ 16 ] ; } 
s#mlx5_query_eq_mbox_out struct mlx5_query_eq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd [ 8 ] ; s#mlx5_eq_context ctx ; } 
mlx5_core_eq_query int mlx5_core_eq_query ( s#mlx5_core_dev * , s#mlx5_eq * , s#mlx5_query_eq_mbox_out * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mad.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_mad_ifc int mlx5_core_mad_ifc ( s#mlx5_core_dev * , void * , void * , t#u16 , t#u8 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/main.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
mlx5_dev_init int mlx5_dev_init ( s#mlx5_core_dev * , s#pci_dev * ) 
s#mlx5_interface struct mlx5_interface { void * ( * add ) ( s#mlx5_core_dev * ) ; void ( * remove ) ( s#mlx5_core_dev * , void * ) ; void ( * event ) ( s#mlx5_core_dev * , void * , e#mlx5_dev_event , unsigned long ) ; s#list_head list ; } 
mlx5_register_interface int mlx5_register_interface ( s#mlx5_interface * ) 
mlx5_unregister_interface void mlx5_unregister_interface ( s#mlx5_interface * ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mcg.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_attach_mcg int mlx5_core_attach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 
mlx5_core_detach_mcg int mlx5_core_detach_mcg ( s#mlx5_core_dev * , u#ib_gid * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/mr.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
s#mlx5_core_mr struct mlx5_core_mr { t#u64 iova ; t#u64 size ; t#u32 key ; t#u32 pd ; } 
s#mlx5_mkey_seg struct mlx5_mkey_seg { t#u8 status ; t#u8 pcie_control ; t#u8 flags ; t#u8 version ; t#__be32 qpn_mkey7_0 ; t#u8 rsvd1 [ 4 ] ; t#__be32 flags_pd ; t#__be64 start_addr ; t#__be64 len ; t#__be32 bsfs_octo_size ; t#u8 rsvd2 [ 16 ] ; t#__be32 xlt_oct_size ; t#u8 rsvd3 [ 3 ] ; t#u8 log2_page_size ; t#u8 rsvd4 [ 4 ] ; } 
s#mlx5_create_mkey_mbox_in struct mlx5_create_mkey_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_mkey_index ; t#u8 rsvd0 [ 4 ] ; s#mlx5_mkey_seg seg ; t#u8 rsvd1 [ 16 ] ; t#__be32 xlat_oct_act_size ; t#__be32 rsvd2 ; t#u8 rsvd3 [ 168 ] ; t#__be64 pas [ 0 ] ; } 
s#mlx5_create_mkey_mbox_out struct mlx5_create_mkey_mbox_out { s#mlx5_outbox_hdr hdr ; t#__be32 mkey ; t#u8 rsvd [ 4 ] ; } 
mlx5_core_create_mkey int mlx5_core_create_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , s#mlx5_create_mkey_mbox_in * , int , t#mlx5_cmd_cbk_t , void * , s#mlx5_create_mkey_mbox_out * ) 
mlx5_core_destroy_mkey int mlx5_core_destroy_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * ) 
s#mlx5_query_mkey_mbox_out struct mlx5_query_mkey_mbox_out { s#mlx5_outbox_hdr hdr ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_mkey int mlx5_core_query_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , s#mlx5_query_mkey_mbox_out * , int ) 
mlx5_core_dump_fill_mkey int mlx5_core_dump_fill_mkey ( s#mlx5_core_dev * , s#mlx5_core_mr * , t#u32 * ) 
mlx5_core_create_psv int mlx5_core_create_psv ( s#mlx5_core_dev * , t#u32 , int , t#u32 * ) 
mlx5_core_destroy_psv int mlx5_core_destroy_psv ( s#mlx5_core_dev * , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/pd.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_alloc_pd int mlx5_core_alloc_pd ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_dealloc_pd int mlx5_core_dealloc_pd ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/port.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_access_reg int mlx5_core_access_reg ( s#mlx5_core_dev * , void * , int , void * , int , t#u16 , int , int ) 
mlx5_set_port_caps int mlx5_set_port_caps ( s#mlx5_core_dev * , t#u8 , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/qp.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
e#mlx5_res_type enum mlx5_res_type { MLX5_RES_QP , } 
s#mlx5_core_rsc_common struct mlx5_core_rsc_common { e#mlx5_res_type res ; t#atomic_t refcount ; s#completion free ; } 
s#mlx5_core_qp struct mlx5_core_qp { s#mlx5_core_rsc_common common ; void ( * event ) ( s#mlx5_core_qp * , int ) ; int qpn ; s#mlx5_rsc_debug * dbg ; int pid ; } 
s#mlx5_qp_path struct mlx5_qp_path { t#u8 fl ; t#u8 rsvd3 ; t#u8 free_ar ; t#u8 pkey_index ; t#u8 rsvd0 ; t#u8 grh_mlid ; t#__be16 rlid ; t#u8 ackto_lt ; t#u8 mgid_index ; t#u8 static_rate ; t#u8 hop_limit ; t#__be32 tclass_flowlabel ; t#u8 rgid [ 16 ] ; t#u8 rsvd1 [ 4 ] ; t#u8 sl ; t#u8 port ; t#u8 rsvd2 [ 6 ] ; } 
s#mlx5_qp_context struct mlx5_qp_context { t#__be32 flags ; t#__be32 flags_pd ; t#u8 mtu_msgmax ; t#u8 rq_size_stride ; t#__be16 sq_crq_size ; t#__be32 qp_counter_set_usr_page ; t#__be32 wire_qpn ; t#__be32 log_pg_sz_remote_qpn ; s#mlx5_qp_path pri_path ; s#mlx5_qp_path alt_path ; t#__be32 params1 ; t#u8 reserved2 [ 4 ] ; t#__be32 next_send_psn ; t#__be32 cqn_send ; t#u8 reserved3 [ 8 ] ; t#__be32 last_acked_psn ; t#__be32 ssn ; t#__be32 params2 ; t#__be32 rnr_nextrecvpsn ; t#__be32 xrcd ; t#__be32 cqn_recv ; t#__be64 db_rec_addr ; t#__be32 qkey ; t#__be32 rq_type_srqn ; t#__be32 rmsn ; t#__be16 hw_sq_wqe_counter ; t#__be16 sw_sq_wqe_counter ; t#__be16 hw_rcyclic_byte_counter ; t#__be16 hw_rq_counter ; t#__be16 sw_rcyclic_byte_counter ; t#__be16 sw_rq_counter ; t#u8 rsvd0 [ 5 ] ; t#u8 cgs ; t#u8 cs_req ; t#u8 cs_res ; t#__be64 dc_access_key ; t#u8 rsvd1 [ 24 ] ; } 
s#mlx5_create_qp_mbox_in struct mlx5_create_qp_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_qpn ; t#u8 rsvd0 [ 4 ] ; t#__be32 opt_param_mask ; t#u8 rsvd1 [ 4 ] ; s#mlx5_qp_context ctx ; t#u8 rsvd3 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_qp int mlx5_core_create_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * , s#mlx5_create_qp_mbox_in * , int ) 
mlx5_core_destroy_qp int mlx5_core_destroy_qp ( s#mlx5_core_dev * , s#mlx5_core_qp * ) 
e#mlx5_qp_state enum mlx5_qp_state { MLX5_QP_STATE_RST = 0 , MLX5_QP_STATE_INIT = 1 , MLX5_QP_STATE_RTR = 2 , MLX5_QP_STATE_RTS = 3 , MLX5_QP_STATE_SQER = 4 , MLX5_QP_STATE_SQD = 5 , MLX5_QP_STATE_ERR = 6 , MLX5_QP_STATE_SQ_DRAINING = 7 , MLX5_QP_STATE_SUSPENDED = 9 , MLX5_QP_NUM_STATE } 
s#mlx5_modify_qp_mbox_in struct mlx5_modify_qp_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 qpn ; t#u8 rsvd1 [ 4 ] ; t#__be32 optparam ; t#u8 rsvd0 [ 4 ] ; s#mlx5_qp_context ctx ; } 
mlx5_core_qp_modify int mlx5_core_qp_modify ( s#mlx5_core_dev * , e#mlx5_qp_state , e#mlx5_qp_state , s#mlx5_modify_qp_mbox_in * , int , s#mlx5_core_qp * ) 
s#mlx5_query_qp_mbox_out struct mlx5_query_qp_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd1 [ 8 ] ; t#__be32 optparam ; t#u8 rsvd0 [ 4 ] ; s#mlx5_qp_context ctx ; t#u8 rsvd2 [ 16 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_qp_query int mlx5_core_qp_query ( s#mlx5_core_dev * , s#mlx5_core_qp * , s#mlx5_query_qp_mbox_out * , int ) 
mlx5_core_xrcd_alloc int mlx5_core_xrcd_alloc ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_core_xrcd_dealloc int mlx5_core_xrcd_dealloc ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/ethernet/mellanox/mlx5/core/srq.o */
s#mlx5_core_srq struct mlx5_core_srq { t#u32 srqn ; int max ; int max_gs ; int max_avail_gather ; int wqe_shift ; void ( * event ) ( s#mlx5_core_srq * , e#mlx5_event ) ; t#atomic_t refcount ; s#completion free ; } 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_core_get_srq s#mlx5_core_srq * mlx5_core_get_srq ( s#mlx5_core_dev * , t#u32 ) 
s#mlx5_srq_ctx struct mlx5_srq_ctx { t#u8 state_log_sz ; t#u8 rsvd0 [ 3 ] ; t#__be32 flags_xrcd ; t#__be32 pgoff_cqn ; t#u8 rsvd1 [ 4 ] ; t#u8 log_pg_sz ; t#u8 rsvd2 [ 7 ] ; t#__be32 pd ; t#__be16 lwm ; t#__be16 wqe_cnt ; t#u8 rsvd3 [ 8 ] ; t#__be64 db_record ; } 
s#mlx5_create_srq_mbox_in struct mlx5_create_srq_mbox_in { s#mlx5_inbox_hdr hdr ; t#__be32 input_srqn ; t#u8 rsvd0 [ 4 ] ; s#mlx5_srq_ctx ctx ; t#u8 rsvd1 [ 208 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_create_srq int mlx5_core_create_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_create_srq_mbox_in * , int ) 
mlx5_core_destroy_srq int mlx5_core_destroy_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * ) 
s#mlx5_query_srq_mbox_out struct mlx5_query_srq_mbox_out { s#mlx5_outbox_hdr hdr ; t#u8 rsvd0 [ 8 ] ; s#mlx5_srq_ctx ctx ; t#u8 rsvd1 [ 32 ] ; t#__be64 pas [ 0 ] ; } 
mlx5_core_query_srq int mlx5_core_query_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , s#mlx5_query_srq_mbox_out * ) 
mlx5_core_arm_srq int mlx5_core_arm_srq ( s#mlx5_core_dev * , s#mlx5_core_srq * , t#u16 , int ) 

/* drivers/net/ethernet/mellanox/mlx5/core/uar.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
s##dma_pool
s##dentry
s##radix_tree_node
mlx5_cmd_alloc_uar int mlx5_cmd_alloc_uar ( s#mlx5_core_dev * , t#u32 * ) 
mlx5_cmd_free_uar int mlx5_cmd_free_uar ( s#mlx5_core_dev * , t#u32 ) 

/* drivers/net/macvlan.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
t#xfrm_address_t typedef union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; } xfrm_address_t 
s#xfrm_id struct xfrm_id { t#xfrm_address_t daddr ; t#__be32 spi ; t#__u8 proto ; } 
s#xfrm_selector struct xfrm_selector { t#xfrm_address_t daddr ; t#xfrm_address_t saddr ; t#__be16 dport ; t#__be16 dport_mask ; t#__be16 sport ; t#__be16 sport_mask ; t#__u16 family ; t#__u8 prefixlen_d ; t#__u8 prefixlen_s ; t#__u8 proto ; int ifindex ; t#__kernel_uid32_t user ; } 
s#xfrm_mark struct xfrm_mark { t#__u32 v ; t#__u32 m ; } 
s#xfrm_state_walk struct xfrm_state_walk { s#list_head all ; t#u8 state ; union { t#u8 dying ; t#u8 proto ; } ; t#u32 seq ; } 
s#xfrm_lifetime_cfg struct xfrm_lifetime_cfg { t#__u64 soft_byte_limit ; t#__u64 hard_byte_limit ; t#__u64 soft_packet_limit ; t#__u64 hard_packet_limit ; t#__u64 soft_add_expires_seconds ; t#__u64 hard_add_expires_seconds ; t#__u64 soft_use_expires_seconds ; t#__u64 hard_use_expires_seconds ; } 
s#xfrm_algo_auth struct xfrm_algo_auth { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_trunc_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo struct xfrm_algo { char alg_name [ 64 ] ; unsigned int alg_key_len ; char alg_key [ 0 ] ; } 
s#xfrm_algo_aead struct xfrm_algo_aead { char alg_name [ 64 ] ; unsigned int alg_key_len ; unsigned int alg_icv_len ; char alg_key [ 0 ] ; } 
s#xfrm_encap_tmpl struct xfrm_encap_tmpl { t#__u16 encap_type ; t#__be16 encap_sport ; t#__be16 encap_dport ; t#xfrm_address_t encap_oa ; } 
s#xfrm_replay_state struct xfrm_replay_state { t#__u32 oseq ; t#__u32 seq ; t#__u32 bitmap ; } 
s#xfrm_replay_state_esn struct xfrm_replay_state_esn { unsigned int bmp_len ; t#__u32 oseq ; t#__u32 seq ; t#__u32 oseq_hi ; t#__u32 seq_hi ; t#__u32 replay_window ; t#__u32 bmp [ 0 ] ; } 
s#xfrm_replay struct xfrm_replay { void ( * advance ) ( s#xfrm_state * , t#__be32 ) ; int ( * check ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; int ( * recheck ) ( s#xfrm_state * , s#sk_buff * , t#__be32 ) ; void ( * notify ) ( s#xfrm_state * , int ) ; int ( * overflow ) ( s#xfrm_state * , s#sk_buff * ) ; } 
s#xfrm_stats struct xfrm_stats { t#__u32 replay_window ; t#__u32 replay ; t#__u32 integrity_failed ; } 
s#xfrm_lifetime_cur struct xfrm_lifetime_cur { t#__u64 bytes ; t#__u64 packets ; t#__u64 add_time ; t#__u64 use_time ; } 
s#tasklet_hrtimer struct tasklet_hrtimer { s#hrtimer timer ; s#tasklet_struct tasklet ; e#hrtimer_restart ( * function ) ( s#hrtimer * ) ; } 
s#flowi_common struct flowi_common { int flowic_oif ; int flowic_iif ; t#__u32 flowic_mark ; t#__u8 flowic_tos ; t#__u8 flowic_scope ; t#__u8 flowic_proto ; t#__u8 flowic_flags ; t#__u32 flowic_secid ; } 
u#flowi_uli union flowi_uli { struct { t#__be16 dport ; t#__be16 sport ; } ports ; struct { t#__u8 type ; t#__u8 code ; } icmpt ; struct { t#__le16 dport ; t#__le16 sport ; } dnports ; t#__be32 spi ; t#__be32 gre_key ; struct { t#__u8 type ; } mht ; } 
s#flowi4 struct flowi4 { s#flowi_common __fl_common ; t#__be32 daddr ; t#__be32 saddr ; u#flowi_uli uli ; } 
s#flowi6 struct flowi6 { s#flowi_common __fl_common ; s#in6_addr daddr ; s#in6_addr saddr ; t#__be32 flowlabel ; u#flowi_uli uli ; } 
s#flowidn struct flowidn { s#flowi_common __fl_common ; t#__le16 daddr ; t#__le16 saddr ; u#flowi_uli uli ; } 
s#flowi struct flowi { union { s#flowi_common __fl_common ; s#flowi4 ip4 ; s#flowi6 ip6 ; s#flowidn dn ; } u ; } 
s#xfrm_type struct xfrm_type { char * description ; s#module * owner ; t#u8 proto ; t#u8 flags ; int ( * init_state ) ( s#xfrm_state * ) ; void ( * destructor ) ( s#xfrm_state * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * reject ) ( s#xfrm_state * , s#sk_buff * , const s#flowi * ) ; int ( * hdr_offset ) ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) ; t#u32 ( * get_mtu ) ( s#xfrm_state * , int ) ; } 
E#IPPROTO_MAX ( 255 ) + 1 
s#xfrm_tmpl struct xfrm_tmpl { s#xfrm_id id ; t#xfrm_address_t saddr ; unsigned short encap_family ; t#u32 reqid ; t#u8 mode ; t#u8 share ; t#u8 optional ; t#u8 allalgs ; t#u32 aalgos ; t#u32 ealgos ; t#u32 calgos ; } 
s#xfrm_state_afinfo struct xfrm_state_afinfo { unsigned int family ; unsigned int proto ; t#__be16 eth_proto ; s#module * owner ; const s#xfrm_type * type_map [ E#IPPROTO_MAX ] ; s#xfrm_mode * mode_map [ 5 ] ; int ( * init_flags ) ( s#xfrm_state * ) ; void ( * init_tempsel ) ( s#xfrm_selector * , const s#flowi * ) ; void ( * init_temprop ) ( s#xfrm_state * , const s#xfrm_tmpl * , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * tmpl_sort ) ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int ) ; int ( * state_sort ) ( s#xfrm_state * * , s#xfrm_state * * , int ) ; int ( * output ) ( s#sk_buff * ) ; int ( * output_finish ) ( s#sk_buff * ) ; int ( * extract_input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * extract_output ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * transport_finish ) ( s#sk_buff * , int ) ; } 
s#xfrm_mode struct xfrm_mode { int ( * input2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * input ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output2 ) ( s#xfrm_state * , s#sk_buff * ) ; int ( * output ) ( s#xfrm_state * , s#sk_buff * ) ; s#xfrm_state_afinfo * afinfo ; s#module * owner ; unsigned int encap ; int flags ; } 
s#xfrm_sec_ctx struct xfrm_sec_ctx { t#__u8 ctx_doi ; t#__u8 ctx_alg ; t#__u16 ctx_len ; t#__u32 ctx_sid ; char ctx_str [ 0 ] ; } 
s#xfrm_state struct xfrm_state { s#net * xs_net ; union { s#hlist_node gclist ; s#hlist_node bydst ; } ; s#hlist_node bysrc ; s#hlist_node byspi ; t#atomic_t refcnt ; t#spinlock_t lock ; s#xfrm_id id ; s#xfrm_selector sel ; s#xfrm_mark mark ; t#u32 tfcpad ; t#u32 genid ; s#xfrm_state_walk km ; struct { t#u32 reqid ; t#u8 mode ; t#u8 replay_window ; t#u8 aalgo , ealgo , calgo ; t#u8 flags ; t#u16 family ; t#xfrm_address_t saddr ; int header_len ; int trailer_len ; } props ; s#xfrm_lifetime_cfg lft ; s#xfrm_algo_auth * aalg ; s#xfrm_algo * ealg ; s#xfrm_algo * calg ; s#xfrm_algo_aead * aead ; s#xfrm_encap_tmpl * encap ; t#xfrm_address_t * coaddr ; s#xfrm_state * tunnel ; t#atomic_t tunnel_users ; s#xfrm_replay_state replay ; s#xfrm_replay_state_esn * replay_esn ; s#xfrm_replay_state preplay ; s#xfrm_replay_state_esn * preplay_esn ; s#xfrm_replay * repl ; t#u32 xflags ; t#u32 replay_maxage ; t#u32 replay_maxdiff ; s#timer_list rtimer ; s#xfrm_stats stats ; s#xfrm_lifetime_cur curlft ; s#tasklet_hrtimer mtimer ; unsigned long lastused ; const s#xfrm_type * type ; s#xfrm_mode * inner_mode ; s#xfrm_mode * inner_mode_iaf ; s#xfrm_mode * outer_mode ; s#xfrm_sec_ctx * security ; void * data ; } 
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#flow_cache_ops struct flow_cache_ops { s#flow_cache_object * ( * get ) ( s#flow_cache_object * ) ; int ( * check ) ( s#flow_cache_object * ) ; void ( * delete ) ( s#flow_cache_object * ) ; } 
s#flow_cache_object struct flow_cache_object { const s#flow_cache_ops * ops ; } 
s#xfrm_policy_walk_entry struct xfrm_policy_walk_entry { s#list_head all ; t#u8 dead ; } 
s#xfrm_policy struct xfrm_policy { s#net * xp_net ; s#hlist_node bydst ; s#hlist_node byidx ; t#rwlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; s#flow_cache_object flo ; t#atomic_t genid ; t#u32 priority ; t#u32 index ; s#xfrm_mark mark ; s#xfrm_selector selector ; s#xfrm_lifetime_cfg lft ; s#xfrm_lifetime_cur curlft ; s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u8 action ; t#u8 flags ; t#u8 xfrm_nr ; t#u16 family ; s#xfrm_sec_ctx * security ; s#xfrm_tmpl xfrm_vec [ 6 ] ; } 
s#sec_path struct sec_path { t#atomic_t refcnt ; int len ; s#xfrm_state * xvec [ 6 ] ; } 
macvlan_start_xmit extern t#netdev_tx_t macvlan_start_xmit ( s#sk_buff * , s#net_device * ) 
macvlan_common_setup extern void macvlan_common_setup ( s#net_device * ) 
macvlan_common_newlink extern int macvlan_common_newlink ( s#net * , s#net_device * , s#nlattr * [ ] , s#nlattr * [ ] , int ( * ) ( s#sk_buff * ) , int ( * ) ( s#net_device * , s#sk_buff * ) ) 
macvlan_dellink extern void macvlan_dellink ( s#net_device * , s#list_head * ) 
macvlan_link_register extern int macvlan_link_register ( s#rtnl_link_ops * ) 

/* drivers/net/macvtap.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
macvtap_get_socket s#socket * macvtap_get_socket ( s#file * ) 

/* drivers/net/mdio.o */
s##net_device
mdio45_probe extern int mdio45_probe ( s#mdio_if_info * , int ) 
mdio_set_flag extern int mdio_set_flag ( const s#mdio_if_info * , int , int , t#u16 , int , t#bool ) 
mdio45_links_ok extern int mdio45_links_ok ( const s#mdio_if_info * , t#u32 ) 
mdio45_nway_restart extern int mdio45_nway_restart ( const s#mdio_if_info * ) 
mdio45_ethtool_gset_npage extern void mdio45_ethtool_gset_npage ( const s#mdio_if_info * , s#ethtool_cmd * , t#u32 , t#u32 ) 
mdio45_ethtool_spauseparam_an extern void mdio45_ethtool_spauseparam_an ( const s#mdio_if_info * , const s#ethtool_pauseparam * ) 
s#mii_ioctl_data struct mii_ioctl_data { t#__u16 phy_id ; t#__u16 reg_num ; t#__u16 val_in ; t#__u16 val_out ; } 
mdio_mii_ioctl extern int mdio_mii_ioctl ( const s#mdio_if_info * , s#mii_ioctl_data * , int ) 

/* drivers/net/mii.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s#mii_if_info struct mii_if_info { int phy_id ; int advertising ; int phy_id_mask ; int reg_num_mask ; unsigned int full_duplex : 1 ; unsigned int force_media : 1 ; unsigned int supports_gmii : 1 ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int ) ; void ( * mdio_write ) ( s#net_device * , int , int , int ) ; } 
mii_link_ok extern int mii_link_ok ( s#mii_if_info * ) 
mii_nway_restart extern int mii_nway_restart ( s#mii_if_info * ) 
mii_ethtool_gset extern int mii_ethtool_gset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_ethtool_sset extern int mii_ethtool_sset ( s#mii_if_info * , s#ethtool_cmd * ) 
mii_check_link extern void mii_check_link ( s#mii_if_info * ) 
mii_check_media extern unsigned int mii_check_media ( s#mii_if_info * , unsigned int , unsigned int ) 
mii_check_gmii_support extern int mii_check_gmii_support ( s#mii_if_info * ) 
generic_mii_ioctl extern int generic_mii_ioctl ( s#mii_if_info * , s#mii_ioctl_data * , int , unsigned int * ) 

/* drivers/net/phy/mdio-bitbang.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##net_device
s##sec_path
s#phy_driver struct phy_driver { t#u32 phy_id ; char * name ; unsigned int phy_id_mask ; t#u32 features ; t#u32 flags ; int ( * config_init ) ( s#phy_device * ) ; int ( * probe ) ( s#phy_device * ) ; int ( * suspend ) ( s#phy_device * ) ; int ( * resume ) ( s#phy_device * ) ; int ( * config_aneg ) ( s#phy_device * ) ; int ( * read_status ) ( s#phy_device * ) ; int ( * ack_interrupt ) ( s#phy_device * ) ; int ( * config_intr ) ( s#phy_device * ) ; int ( * did_interrupt ) ( s#phy_device * ) ; void ( * remove ) ( s#phy_device * ) ; int ( * ts_info ) ( s#phy_device * , s#ethtool_ts_info * ) ; int ( * hwtstamp ) ( s#phy_device * , s#ifreq * ) ; t#bool ( * rxtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; void ( * txtstamp ) ( s#phy_device * , s#sk_buff * , int ) ; s#device_driver driver ; } 
e#phy_state enum phy_state { PHY_DOWN = 0 , PHY_STARTING , PHY_READY , PHY_PENDING , PHY_UP , PHY_AN , PHY_RUNNING , PHY_NOLINK , PHY_FORCING , PHY_CHANGELINK , PHY_HALTED , PHY_RESUMING } 
t#phy_interface_t typedef enum { PHY_INTERFACE_MODE_MII , PHY_INTERFACE_MODE_GMII , PHY_INTERFACE_MODE_SGMII , PHY_INTERFACE_MODE_TBI , PHY_INTERFACE_MODE_RMII , PHY_INTERFACE_MODE_RGMII , PHY_INTERFACE_MODE_RGMII_ID , PHY_INTERFACE_MODE_RGMII_RXID , PHY_INTERFACE_MODE_RGMII_TXID , PHY_INTERFACE_MODE_RTBI } phy_interface_t 
s#phy_device struct phy_device { s#phy_driver * drv ; s#mii_bus * bus ; s#device dev ; t#u32 phy_id ; e#phy_state state ; t#u32 dev_flags ; t#phy_interface_t interface ; int addr ; int speed ; int duplex ; int pause ; int asym_pause ; int link ; t#u32 interrupts ; t#u32 supported ; t#u32 advertising ; int autoneg ; int link_timeout ; int irq ; void * priv ; s#work_struct phy_queue ; s#delayed_work state_queue ; t#atomic_t irq_disable ; s#mutex lock ; s#net_device * attached_dev ; void ( * adjust_link ) ( s#net_device * ) ; void ( * adjust_state ) ( s#net_device * ) ; } 
s#mii_bus struct mii_bus { const char * name ; char id [ ( 20 - 3 ) ] ; void * priv ; int ( * read ) ( s#mii_bus * , int , int ) ; int ( * write ) ( s#mii_bus * , int , int , t#u16 ) ; int ( * reset ) ( s#mii_bus * ) ; s#mutex mdio_lock ; s#device * parent ; enum { MDIOBUS_ALLOCATED = 1 , MDIOBUS_REGISTERED , MDIOBUS_UNREGISTERED , MDIOBUS_RELEASED , } state ; s#device dev ; s#phy_device * phy_map [ 32 ] ; t#u32 phy_mask ; int * irq ; } 
s#mdiobb_ops struct mdiobb_ops { s#module * owner ; void ( * set_mdc ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_dir ) ( s#mdiobb_ctrl * , int ) ; void ( * set_mdio_data ) ( s#mdiobb_ctrl * , int ) ; int ( * get_mdio_data ) ( s#mdiobb_ctrl * ) ; } 
s#mdiobb_ctrl struct mdiobb_ctrl { const s#mdiobb_ops * ops ; } 
alloc_mdio_bitbang s#mii_bus * alloc_mdio_bitbang ( s#mdiobb_ctrl * ) 
free_mdio_bitbang void free_mdio_bitbang ( s#mii_bus * ) 

/* drivers/net/phy/mdio_bus.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##sec_path
mdiobus_alloc s#mii_bus * mdiobus_alloc ( void ) 
mdiobus_register int mdiobus_register ( s#mii_bus * ) 
mdiobus_unregister void mdiobus_unregister ( s#mii_bus * ) 
mdiobus_free void mdiobus_free ( s#mii_bus * ) 
mdiobus_scan s#phy_device * mdiobus_scan ( s#mii_bus * , int ) 
mdiobus_read int mdiobus_read ( s#mii_bus * , int , t#u32 ) 
mdiobus_write int mdiobus_write ( s#mii_bus * , int , t#u32 , t#u16 ) 
mdio_bus_type extern s#bus_type mdio_bus_type 

/* drivers/net/phy/phy.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##sec_path
phy_print_status void phy_print_status ( s#phy_device * ) 
phy_ethtool_sset int phy_ethtool_sset ( s#phy_device * , s#ethtool_cmd * ) 
phy_ethtool_gset int phy_ethtool_gset ( s#phy_device * , s#ethtool_cmd * ) 
phy_mii_ioctl int phy_mii_ioctl ( s#phy_device * , s#ifreq * , int ) 
phy_start_aneg int phy_start_aneg ( s#phy_device * ) 
phy_start_interrupts int phy_start_interrupts ( s#phy_device * ) 
phy_stop_interrupts int phy_stop_interrupts ( s#phy_device * ) 
phy_stop void phy_stop ( s#phy_device * ) 
phy_start void phy_start ( s#phy_device * ) 

/* drivers/net/phy/phy_device.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##sec_path
phy_device_free void phy_device_free ( s#phy_device * ) 
phy_register_fixup int phy_register_fixup ( const char * , t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_uid int phy_register_fixup_for_uid ( t#u32 , t#u32 , int ( * ) ( s#phy_device * ) ) 
phy_register_fixup_for_id int phy_register_fixup_for_id ( const char * , int ( * ) ( s#phy_device * ) ) 
phy_scan_fixups int phy_scan_fixups ( s#phy_device * ) 
get_phy_id int get_phy_id ( s#mii_bus * , int , t#u32 * ) 
get_phy_device s#phy_device * get_phy_device ( s#mii_bus * , int ) 
phy_device_register int phy_device_register ( s#phy_device * ) 
phy_find_first s#phy_device * phy_find_first ( s#mii_bus * ) 
phy_connect_direct int phy_connect_direct ( s#net_device * , s#phy_device * , void ( * ) ( s#net_device * ) , t#u32 , t#phy_interface_t ) 
phy_connect s#phy_device * phy_connect ( s#net_device * , const char * , void ( * ) ( s#net_device * ) , t#u32 , t#phy_interface_t ) 
phy_disconnect void phy_disconnect ( s#phy_device * ) 
phy_attach s#phy_device * phy_attach ( s#net_device * , const char * , t#u32 , t#phy_interface_t ) 
phy_detach void phy_detach ( s#phy_device * ) 
genphy_restart_aneg int genphy_restart_aneg ( s#phy_device * ) 
genphy_config_aneg int genphy_config_aneg ( s#phy_device * ) 
genphy_update_link int genphy_update_link ( s#phy_device * ) 
genphy_read_status int genphy_read_status ( s#phy_device * ) 
genphy_suspend int genphy_suspend ( s#phy_device * ) 
genphy_resume int genphy_resume ( s#phy_device * ) 
phy_driver_register int phy_driver_register ( s#phy_driver * ) 
phy_driver_unregister void phy_driver_unregister ( s#phy_driver * ) 

/* drivers/net/ppp_generic.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s#net_generic struct net_generic { unsigned int len ; s#rcu_head rcu ; void * ptr [ 0 ] ; } 
s##netns_ipvs
s#ppp_channel_ops struct ppp_channel_ops { int ( * start_xmit ) ( s#ppp_channel * , s#sk_buff * ) ; int ( * ioctl ) ( s#ppp_channel * , unsigned int , unsigned long ) ; } 
s#ppp_channel struct ppp_channel { void * private ; const s#ppp_channel_ops * ops ; int mtu ; int hdrlen ; void * ppp ; int speed ; int latency ; } 
ppp_register_net_channel extern int ppp_register_net_channel ( s#net * , s#ppp_channel * ) 
ppp_register_channel extern int ppp_register_channel ( s#ppp_channel * ) 
ppp_unregister_channel extern void ppp_unregister_channel ( s#ppp_channel * ) 
ppp_channel_index extern int ppp_channel_index ( s#ppp_channel * ) 
ppp_unit_number extern int ppp_unit_number ( s#ppp_channel * ) 
ppp_dev_name extern char * ppp_dev_name ( s#ppp_channel * ) 
ppp_input extern void ppp_input ( s#ppp_channel * , s#sk_buff * ) 
ppp_input_error extern void ppp_input_error ( s#ppp_channel * , int ) 
ppp_output_wakeup extern void ppp_output_wakeup ( s#ppp_channel * ) 
s#compressor struct compressor { int compress_proto ; void * ( * comp_alloc ) ( unsigned char * , int ) ; void ( * comp_free ) ( void * ) ; int ( * comp_init ) ( void * , unsigned char * , int , int , int , int ) ; void ( * comp_reset ) ( void * ) ; int ( * compress ) ( void * , unsigned char * , unsigned char * , int , int ) ; void ( * comp_stat ) ( void * , s#compstat * ) ; void * ( * decomp_alloc ) ( unsigned char * , int ) ; void ( * decomp_free ) ( void * ) ; int ( * decomp_init ) ( void * , unsigned char * , int , int , int , int , int ) ; void ( * decomp_reset ) ( void * ) ; int ( * decompress ) ( void * , unsigned char * , int , unsigned char * , int ) ; void ( * incomp ) ( void * , unsigned char * , int ) ; void ( * decomp_stat ) ( void * , s#compstat * ) ; s#module * owner ; unsigned int comp_extra ; } 
ppp_register_compressor extern int ppp_register_compressor ( s#compressor * ) 
ppp_unregister_compressor extern void ppp_unregister_compressor ( s#compressor * ) 

/* drivers/net/pppox.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#pppox_proto struct pppox_proto { int ( * create ) ( s#net * , s#socket * ) ; int ( * ioctl ) ( s#socket * , unsigned int , unsigned long ) ; s#module * owner ; } 
register_pppox_proto extern int register_pppox_proto ( int , const s#pppox_proto * ) 
unregister_pppox_proto extern void unregister_pppox_proto ( int ) 
pppox_unbind_sock extern void pppox_unbind_sock ( s#sock * ) 
pppox_ioctl extern int pppox_ioctl ( s#socket * , unsigned int , unsigned long ) 

/* drivers/net/slhc.o */
t#byte_t typedef t#__u8 byte_t 
s#iphdr struct iphdr { t#__u8 version : 4 , ihl : 4 ; t#__u8 tos ; t#__be16 tot_len ; t#__be16 id ; t#__be16 frag_off ; t#__u8 ttl ; t#__u8 protocol ; t#__sum16 check ; t#__be32 saddr ; t#__be32 daddr ; } 
s#tcphdr struct tcphdr { t#__be16 source ; t#__be16 dest ; t#__be32 seq ; t#__be32 ack_seq ; t#__u16 doff : 4 , res1 : 4 , cwr : 1 , ece : 1 , urg : 1 , ack : 1 , psh : 1 , rst : 1 , syn : 1 , fin : 1 ; t#__be16 window ; t#__sum16 check ; t#__be16 urg_ptr ; } 
s#cstate struct cstate { t#byte_t cs_this ; s#cstate * next ; s#iphdr cs_ip ; s#tcphdr cs_tcp ; unsigned char cs_ipopt [ 64 ] ; unsigned char cs_tcpopt [ 64 ] ; int cs_hsize ; } 
t#int32 typedef t#__u32 int32 
s#slcompress struct slcompress { s#cstate * tstate ; s#cstate * rstate ; t#byte_t tslot_limit ; t#byte_t rslot_limit ; t#byte_t xmit_oldest ; t#byte_t xmit_current ; t#byte_t recv_current ; t#byte_t flags ; t#int32 sls_o_nontcp ; t#int32 sls_o_tcp ; t#int32 sls_o_uncompressed ; t#int32 sls_o_compressed ; t#int32 sls_o_searches ; t#int32 sls_o_misses ; t#int32 sls_i_uncompressed ; t#int32 sls_i_compressed ; t#int32 sls_i_error ; t#int32 sls_i_tossed ; t#int32 sls_i_runt ; t#int32 sls_i_badcheck ; } 
slhc_init s#slcompress * slhc_init ( int , int ) 
slhc_free void slhc_free ( s#slcompress * ) 
slhc_remember int slhc_remember ( s#slcompress * , unsigned char * , int ) 
slhc_compress int slhc_compress ( s#slcompress * , unsigned char * , int , unsigned char * , unsigned char * * , int ) 
slhc_uncompress int slhc_uncompress ( s#slcompress * , unsigned char * , int ) 
slhc_toss int slhc_toss ( s#slcompress * ) 

/* drivers/net/sungem_phy.o */
s#mii_phy_ops struct mii_phy_ops { int ( * init ) ( s#mii_phy * ) ; int ( * suspend ) ( s#mii_phy * ) ; int ( * setup_aneg ) ( s#mii_phy * , t#u32 ) ; int ( * setup_forced ) ( s#mii_phy * , int , int ) ; int ( * poll_link ) ( s#mii_phy * ) ; int ( * read_link ) ( s#mii_phy * ) ; int ( * enable_fiber ) ( s#mii_phy * , int ) ; } 
s#mii_phy_def struct mii_phy_def { t#u32 phy_id ; t#u32 phy_id_mask ; t#u32 features ; int magic_aneg ; const char * name ; const s#mii_phy_ops * ops ; } 
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##rtnl_link_ops
s##phy_device
s#mii_phy struct mii_phy { s#mii_phy_def * def ; t#u32 advertising ; int mii_id ; int autoneg ; int speed ; int duplex ; int pause ; s#net_device * dev ; int ( * mdio_read ) ( s#net_device * , int , int ) ; void ( * mdio_write ) ( s#net_device * , int , int , int ) ; void * platform_data ; } 
mii_phy_probe extern int mii_phy_probe ( s#mii_phy * , int ) 

/* drivers/net/tun.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
tun_get_socket s#socket * tun_get_socket ( s#file * ) 

/* drivers/net/usb/cdc_ether.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s#driver_info struct driver_info { char * description ; int flags ; int ( * bind ) ( s#usbnet * , s#usb_interface * ) ; void ( * unbind ) ( s#usbnet * , s#usb_interface * ) ; int ( * reset ) ( s#usbnet * ) ; int ( * stop ) ( s#usbnet * ) ; int ( * check_connect ) ( s#usbnet * ) ; int ( * manage_power ) ( s#usbnet * , int ) ; void ( * status ) ( s#usbnet * , s#urb * ) ; int ( * link_reset ) ( s#usbnet * ) ; int ( * rx_fixup ) ( s#usbnet * , s#sk_buff * ) ; s#sk_buff * ( * tx_fixup ) ( s#usbnet * , s#sk_buff * , t#gfp_t ) ; int ( * early_init ) ( s#usbnet * ) ; void ( * indication ) ( s#usbnet * , void * , int ) ; int in ; int out ; unsigned long data ; void * suse_kabi_padding ; } 
s#usbnet struct usbnet { s#usb_device * udev ; s#usb_interface * intf ; s#driver_info * driver_info ; const char * driver_name ; void * driver_priv ; t#wait_queue_head_t * wait ; s#mutex phy_mutex ; unsigned char suspend_count ; unsigned in , out ; s#usb_host_endpoint * status ; unsigned maxpacket ; s#timer_list delay ; s#net_device * net ; int msg_enable ; unsigned long data [ 5 ] ; t#u32 xid ; t#u32 hard_mtu ; t#size_t rx_urb_size ; s#mii_if_info mii ; s#sk_buff_head rxq ; s#sk_buff_head txq ; s#sk_buff_head done ; s#sk_buff_head rxq_pause ; s#urb * interrupt ; s#usb_anchor deferred ; s#tasklet_struct bh ; s#work_struct kevent ; unsigned long flags ; void * suse_kabi_padding ; } 
usbnet_generic_cdc_bind extern int usbnet_generic_cdc_bind ( s#usbnet * , s#usb_interface * ) 
usbnet_cdc_unbind extern void usbnet_cdc_unbind ( s#usbnet * , s#usb_interface * ) 
usbnet_cdc_status extern void usbnet_cdc_status ( s#usbnet * , s#urb * ) 
usbnet_cdc_bind extern int usbnet_cdc_bind ( s#usbnet * , s#usb_interface * ) 

/* drivers/net/usb/rndis_host.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
rndis_status extern void rndis_status ( s#usbnet * , s#urb * ) 
s#rndis_msg_hdr struct rndis_msg_hdr { t#__le32 msg_type ; t#__le32 msg_len ; t#__le32 request_id ; t#__le32 status ; } 
rndis_command extern int rndis_command ( s#usbnet * , s#rndis_msg_hdr * , int ) 
generic_rndis_bind extern int generic_rndis_bind ( s#usbnet * , s#usb_interface * , int ) 
rndis_unbind extern void rndis_unbind ( s#usbnet * , s#usb_interface * ) 
rndis_rx_fixup extern int rndis_rx_fixup ( s#usbnet * , s#sk_buff * ) 
rndis_tx_fixup extern s#sk_buff * rndis_tx_fixup ( s#usbnet * , s#sk_buff * , t#gfp_t ) 

/* drivers/net/usb/usbnet.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ep_device
s##wusb_dev
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
usbnet_get_endpoints extern int usbnet_get_endpoints ( s#usbnet * , s#usb_interface * ) 
usbnet_get_ethernet_addr extern int usbnet_get_ethernet_addr ( s#usbnet * , int ) 
usbnet_skb_return extern void usbnet_skb_return ( s#usbnet * , s#sk_buff * ) 
usbnet_change_mtu extern int usbnet_change_mtu ( s#net_device * , int ) 
usbnet_defer_kevent extern void usbnet_defer_kevent ( s#usbnet * , int ) 
usbnet_pause_rx extern void usbnet_pause_rx ( s#usbnet * ) 
usbnet_resume_rx extern void usbnet_resume_rx ( s#usbnet * ) 
usbnet_purge_paused_rxq extern void usbnet_purge_paused_rxq ( s#usbnet * ) 
usbnet_unlink_rx_urbs extern void usbnet_unlink_rx_urbs ( s#usbnet * ) 
usbnet_stop extern int usbnet_stop ( s#net_device * ) 
usbnet_open extern int usbnet_open ( s#net_device * ) 
usbnet_get_settings extern int usbnet_get_settings ( s#net_device * , s#ethtool_cmd * ) 
usbnet_set_settings extern int usbnet_set_settings ( s#net_device * , s#ethtool_cmd * ) 
usbnet_get_link extern t#u32 usbnet_get_link ( s#net_device * ) 
usbnet_nway_reset extern int usbnet_nway_reset ( s#net_device * ) 
usbnet_get_drvinfo extern void usbnet_get_drvinfo ( s#net_device * , s#ethtool_drvinfo * ) 
usbnet_get_msglevel extern t#u32 usbnet_get_msglevel ( s#net_device * ) 
usbnet_set_msglevel extern void usbnet_set_msglevel ( s#net_device * , t#u32 ) 
usbnet_tx_timeout extern void usbnet_tx_timeout ( s#net_device * ) 
usbnet_start_xmit extern t#netdev_tx_t usbnet_start_xmit ( s#sk_buff * , s#net_device * ) 
usbnet_disconnect extern void usbnet_disconnect ( s#usb_interface * ) 
usbnet_probe extern int usbnet_probe ( s#usb_interface * , const s#usb_device_id * ) 
usbnet_suspend extern int usbnet_suspend ( s#usb_interface * , t#pm_message_t ) 
usbnet_resume extern int usbnet_resume ( s#usb_interface * ) 

/* drivers/net/wireless/ath/ath9k/ani.o */
s#ath_ops struct ath_ops { unsigned int ( * read ) ( void * , t#u32 ) ; void ( * multi_read ) ( void * , t#u32 * , t#u32 * , t#u16 ) ; void ( * write ) ( void * , t#u32 , t#u32 ) ; void ( * enable_write_buffer ) ( void * ) ; void ( * write_flush ) ( void * ) ; t#u32 ( * rmw ) ( void * , t#u32 , t#u32 , t#u32 ) ; } 
E#NL80211_BAND_2GHZ 0 
E#NL80211_BAND_5GHZ 1 
e#ieee80211_band enum ieee80211_band { IEEE80211_BAND_2GHZ = E#NL80211_BAND_2GHZ , IEEE80211_BAND_5GHZ = E#NL80211_BAND_5GHZ , IEEE80211_NUM_BANDS } 
s#ieee80211_channel struct ieee80211_channel { e#ieee80211_band band ; t#u16 center_freq ; t#u16 hw_value ; t#u32 flags ; int max_antenna_gain ; int max_power ; t#bool beacon_found ; t#u32 orig_flags ; int orig_mag , orig_mpwr ; } 
e#nl80211_channel_type enum nl80211_channel_type { NL80211_CHAN_NO_HT , NL80211_CHAN_HT20 , NL80211_CHAN_HT40MINUS , NL80211_CHAN_HT40PLUS } 
e#ieee80211_smps_mode enum ieee80211_smps_mode { IEEE80211_SMPS_AUTOMATIC , IEEE80211_SMPS_OFF , IEEE80211_SMPS_STATIC , IEEE80211_SMPS_DYNAMIC , IEEE80211_SMPS_NUM_MODES , } 
s#ieee80211_conf struct ieee80211_conf { t#u32 flags ; int power_level , dynamic_ps_timeout ; int max_sleep_period ; t#u16 listen_interval ; t#u8 ps_dtim_period ; t#u8 long_frame_max_tx_count , short_frame_max_tx_count ; s#ieee80211_channel * channel ; e#nl80211_channel_type channel_type ; e#ieee80211_smps_mode smps_mode ; } 
s#mac_address struct mac_address { t#u8 addr [ 6 ] ; } 
s#ieee80211_txrx_stypes struct ieee80211_txrx_stypes { t#u16 tx , rx ; } 
s#ieee80211_iface_limit struct ieee80211_iface_limit { t#u16 max ; t#u16 types ; } 
s#ieee80211_iface_combination struct ieee80211_iface_combination { const s#ieee80211_iface_limit * limits ; t#u32 num_different_channels ; t#u16 max_interfaces ; t#u8 n_limits ; t#bool beacon_int_infra_match ; } 
e#cfg80211_signal_type enum cfg80211_signal_type { CFG80211_SIGNAL_TYPE_NONE , CFG80211_SIGNAL_TYPE_MBM , CFG80211_SIGNAL_TYPE_UNSPEC , } 
s#wiphy_wowlan_support struct wiphy_wowlan_support { t#u32 flags ; int n_patterns ; int pattern_max_len ; int pattern_min_len ; } 
s#ieee80211_rate struct ieee80211_rate { t#u32 flags ; t#u16 bitrate ; t#u16 hw_value , hw_value_short ; } 
s#ieee80211_mcs_info struct ieee80211_mcs_info { t#u8 rx_mask [ 10 ] ; t#__le16 rx_highest ; t#u8 tx_params ; t#u8 reserved [ 3 ] ; } 
s#ieee80211_sta_ht_cap struct ieee80211_sta_ht_cap { t#u16 cap ; t#bool ht_supported ; t#u8 ampdu_factor ; t#u8 ampdu_density ; s#ieee80211_mcs_info mcs ; } 
s#ieee80211_supported_band struct ieee80211_supported_band { s#ieee80211_channel * channels ; s#ieee80211_rate * bitrates ; e#ieee80211_band band ; int n_channels ; int n_bitrates ; s#ieee80211_sta_ht_cap ht_cap ; } 
E#IEEE80211_NUM_BANDS ( E#NL80211_BAND_5GHZ ) + 1 
e#nl80211_reg_initiator enum nl80211_reg_initiator { NL80211_REGDOM_SET_BY_CORE , NL80211_REGDOM_SET_BY_USER , NL80211_REGDOM_SET_BY_DRIVER , NL80211_REGDOM_SET_BY_COUNTRY_IE , } 
e#environment_cap enum environment_cap { ENVIRON_ANY , ENVIRON_INDOOR , ENVIRON_OUTDOOR , } 
s#regulatory_request struct regulatory_request { int wiphy_idx ; e#nl80211_reg_initiator initiator ; char alpha2 [ 2 ] ; t#bool intersect ; t#bool processed ; e#environment_cap country_ie_env ; s#list_head list ; } 
s#ieee80211_freq_range struct ieee80211_freq_range { t#u32 start_freq_khz ; t#u32 end_freq_khz ; t#u32 max_bandwidth_khz ; } 
s#ieee80211_power_rule struct ieee80211_power_rule { t#u32 max_antenna_gain ; t#u32 max_eirp ; } 
s#ieee80211_reg_rule struct ieee80211_reg_rule { s#ieee80211_freq_range freq_range ; s#ieee80211_power_rule power_rule ; t#u32 flags ; } 
s#ieee80211_regdomain struct ieee80211_regdomain { t#u32 n_reg_rules ; char alpha2 [ 2 ] ; s#ieee80211_reg_rule reg_rules [ ] ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#iw_request_info struct iw_request_info { t#__u16 cmd ; t#__u16 flags ; } 
s#iw_point struct iw_point { void * pointer ; t#__u16 length ; t#__u16 flags ; } 
s#iw_param struct iw_param { t#__s32 value ; t#__u8 fixed ; t#__u8 disabled ; t#__u16 flags ; } 
s#iw_freq struct iw_freq { t#__s32 m ; t#__s16 e ; t#__u8 i ; t#__u8 flags ; } 
s#iw_quality struct iw_quality { t#__u8 qual ; t#__u8 level ; t#__u8 noise ; t#__u8 updated ; } 
u#iwreq_data union iwreq_data { char name [ 16 ] ; s#iw_point essid ; s#iw_param nwid ; s#iw_freq freq ; s#iw_param sens ; s#iw_param bitrate ; s#iw_param txpower ; s#iw_param rts ; s#iw_param frag ; t#__u32 mode ; s#iw_param retry ; s#iw_point encoding ; s#iw_param power ; s#iw_quality qual ; s#sockaddr ap_addr ; s#sockaddr addr ; s#iw_param param ; s#iw_point data ; } 
t#iw_handler typedef int ( * iw_handler ) ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
s#iw_priv_args struct iw_priv_args { t#__u32 cmd ; t#__u16 set_args ; t#__u16 get_args ; char name [ 16 ] ; } 
s#iw_discarded struct iw_discarded { t#__u32 nwid ; t#__u32 code ; t#__u32 fragment ; t#__u32 retries ; t#__u32 misc ; } 
s#iw_missed struct iw_missed { t#__u32 beacon ; } 
s#iw_statistics struct iw_statistics { t#__u16 status ; s#iw_quality qual ; s#iw_discarded discard ; s#iw_missed miss ; } 
s#iw_handler_def struct iw_handler_def { const t#iw_handler * standard ; t#__u16 num_standard ; t#__u16 num_private ; t#__u16 num_private_args ; const t#iw_handler * private ; const s#iw_priv_args * private_args ; s#iw_statistics * ( * get_wireless_stats ) ( s#net_device * ) ; } 
s#iw_spy_data struct iw_spy_data { int spy_number ; t#u_char spy_address [ 8 ] [ 6 ] ; s#iw_quality spy_stat [ 8 ] ; s#iw_quality spy_thr_low ; s#iw_quality spy_thr_high ; t#u_char spy_thr_under [ 8 ] ; } 
s##libipw_device
s#iw_public_data struct iw_public_data { s#iw_spy_data * spy_data ; s#libipw_device * libipw ; } 
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
E#NUM_NL80211_IFTYPES 10 
e#nl80211_iftype enum nl80211_iftype { NL80211_IFTYPE_UNSPECIFIED , NL80211_IFTYPE_ADHOC , NL80211_IFTYPE_STATION , NL80211_IFTYPE_AP , NL80211_IFTYPE_AP_VLAN , NL80211_IFTYPE_WDS , NL80211_IFTYPE_MONITOR , NL80211_IFTYPE_MESH_POINT , NL80211_IFTYPE_P2P_CLIENT , NL80211_IFTYPE_P2P_GO , NUM_NL80211_IFTYPES , NL80211_IFTYPE_MAX = E#NUM_NL80211_IFTYPES - 1 } 
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s#cfg80211_ibss_params struct cfg80211_ibss_params { t#u8 * ssid ; t#u8 * bssid ; s#ieee80211_channel * channel ; t#u8 * ie ; t#u8 ssid_len , ie_len ; t#u16 beacon_interval ; t#u32 basic_rates ; t#bool channel_fixed ; t#bool privacy ; int mcast_rate [ E#IEEE80211_NUM_BANDS ] ; } 
E#__NL80211_AUTHTYPE_NUM 4 
e#nl80211_auth_type enum nl80211_auth_type { NL80211_AUTHTYPE_OPEN_SYSTEM , NL80211_AUTHTYPE_SHARED_KEY , NL80211_AUTHTYPE_FT , NL80211_AUTHTYPE_NETWORK_EAP , __NL80211_AUTHTYPE_NUM , NL80211_AUTHTYPE_MAX = E#__NL80211_AUTHTYPE_NUM - 1 , NL80211_AUTHTYPE_AUTOMATIC } 
s#cfg80211_crypto_settings struct cfg80211_crypto_settings { t#u32 wpa_versions ; t#u32 cipher_group ; int n_ciphers_pairwise ; t#u32 ciphers_pairwise [ 5 ] ; int n_akm_suites ; t#u32 akm_suites [ 2 ] ; t#bool control_port ; t#__be16 control_port_ethertype ; t#bool control_port_no_encrypt ; } 
s#cfg80211_connect_params struct cfg80211_connect_params { s#ieee80211_channel * channel ; t#u8 * bssid ; t#u8 * ssid ; t#size_t ssid_len ; e#nl80211_auth_type auth_type ; t#u8 * ie ; t#size_t ie_len ; t#bool privacy ; s#cfg80211_crypto_settings crypto ; const t#u8 * key ; t#u8 key_len , key_idx ; } 
s#wireless_dev struct wireless_dev { s#wiphy * wiphy ; e#nl80211_iftype iftype ; s#list_head list ; s#net_device * netdev ; s#list_head mgmt_registrations ; t#spinlock_t mgmt_registrations_lock ; s#mutex mtx ; s#work_struct cleanup_work ; t#bool use_4addr ; t#u8 ssid [ 32 ] ; t#u8 ssid_len , mesh_id_len , mesh_id_up_len ; enum { CFG80211_SME_IDLE , CFG80211_SME_CONNECTING , CFG80211_SME_CONNECTED , } sme_state ; s#cfg80211_conn * conn ; s#cfg80211_cached_keys * connect_keys ; s#list_head event_list ; t#spinlock_t event_lock ; s#cfg80211_internal_bss * authtry_bsses [ 4 ] ; s#cfg80211_internal_bss * auth_bsses [ 4 ] ; s#cfg80211_internal_bss * current_bss ; s#ieee80211_channel * channel ; t#bool ps ; int ps_timeout ; int beacon_interval ; struct { s#cfg80211_ibss_params ibss ; s#cfg80211_connect_params connect ; s#cfg80211_cached_keys * keys ; t#u8 * ie ; t#size_t ie_len ; t#u8 bssid [ 6 ] , prev_bssid [ 6 ] ; t#u8 ssid [ 32 ] ; t#s8 default_key , default_mgmt_key ; t#bool prev_bssid_valid ; } wext ; } 
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#wiphy struct wiphy { t#u8 perm_addr [ 6 ] ; t#u8 addr_mask [ 6 ] ; s#mac_address * addresses ; const s#ieee80211_txrx_stypes * mgmt_stypes ; const s#ieee80211_iface_combination * iface_combinations ; int n_iface_combinations ; t#u16 software_iftypes ; t#u16 n_addresses ; t#u16 interface_modes ; t#u32 flags ; e#cfg80211_signal_type signal_type ; int bss_priv_size ; t#u8 max_scan_ssids ; t#u16 max_scan_ie_len ; int n_cipher_suites ; const t#u32 * cipher_suites ; t#u8 retry_short ; t#u8 retry_long ; t#u32 frag_threshold ; t#u32 rts_threshold ; t#u8 coverage_class ; char fw_version [ 32 ] ; t#u32 hw_version ; s#wiphy_wowlan_support wowlan ; t#u16 max_remain_on_channel_duration ; t#u8 max_num_pmkids ; t#u32 available_antennas_tx ; t#u32 available_antennas_rx ; const void * privid ; s#ieee80211_supported_band * bands [ E#IEEE80211_NUM_BANDS ] ; int ( * reg_notifier ) ( s#wiphy * , s#regulatory_request * ) ; const s#ieee80211_regdomain * regd ; s#device dev ; s#dentry * debugfsdir ; s#net * _net ; const s#iw_handler_def * wext ; char priv [ 0 ] __attribute__ ( ( __aligned__ ( 32 ) ) ) ; } 
s#ieee80211_hw struct ieee80211_hw { s#ieee80211_conf conf ; s#wiphy * wiphy ; const char * rate_control_algorithm ; void * priv ; t#u32 flags ; unsigned int extra_tx_headroom ; int channel_change_time ; int vif_data_size ; int sta_data_size ; int napi_weight ; t#u16 queues ; t#u16 max_listen_interval ; t#s8 max_signal ; t#u8 max_rates ; t#u8 max_report_rates ; t#u8 max_rate_tries ; t#u8 max_rx_aggregation_subframes ; t#u8 max_tx_aggregation_subframes ; } 
e#ath_device_state enum ath_device_state { ATH_HW_UNAVAILABLE , ATH_HW_INITIALIZED , } 
s#ath_ani struct ath_ani { t#bool caldone ; unsigned int longcal_timer ; unsigned int shortcal_timer ; unsigned int resetcal_timer ; unsigned int checkani_timer ; s#timer_list timer ; } 
e#ath_crypt_caps enum ath_crypt_caps { ATH_CRYPT_CAP_CIPHER_AESCCM = ( 1UL << ( 0 ) ) , ATH_CRYPT_CAP_MIC_COMBINED = ( 1UL << ( 1 ) ) , } 
s#ath_cycle_counters struct ath_cycle_counters { t#u32 cycles ; t#u32 rx_busy ; t#u32 rx_frame ; t#u32 tx_frame ; } 
t#int16_t typedef t#__s16 int16_t 
s#reg_dmn_pair_mapping struct reg_dmn_pair_mapping { t#u16 regDmnEnum ; t#u16 reg_5ghz_ctl ; t#u16 reg_2ghz_ctl ; } 
s#ath_regulatory struct ath_regulatory { char alpha2 [ 2 ] ; t#u16 country_code ; t#u16 max_power_level ; t#u32 tp_scale ; t#u16 current_rd ; t#u16 current_rd_ext ; t#int16_t power_limit ; s#reg_dmn_pair_mapping * regpair ; } 
e#ath_bus_type enum ath_bus_type { ATH_PCI , ATH_AHB , ATH_USB , } 
s#ath_bus_ops struct ath_bus_ops { e#ath_bus_type ath_bus_type ; void ( * read_cachesize ) ( s#ath_common * , int * ) ; t#bool ( * eeprom_read ) ( s#ath_common * , t#u32 , t#u16 * ) ; void ( * bt_coex_prep ) ( s#ath_common * ) ; void ( * extn_synch_en ) ( s#ath_common * ) ; void ( * aspm_init ) ( s#ath_common * ) ; } 
s#ath_common struct ath_common { void * ah ; void * priv ; s#ieee80211_hw * hw ; int debug_mask ; e#ath_device_state state ; s#ath_ani ani ; t#u16 cachelsz ; t#u16 curaid ; t#u8 macaddr [ 6 ] ; t#u8 curbssid [ 6 ] ; t#u8 bssidmask [ 6 ] ; t#u8 tx_chainmask ; t#u8 rx_chainmask ; t#u32 rx_bufsize ; t#u32 keymax ; unsigned long keymap [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long tkip_keymap [ ( ( ( 128 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; e#ath_crypt_caps crypt_caps ; unsigned int clockrate ; t#spinlock_t cc_lock ; s#ath_cycle_counters cc_ani ; s#ath_cycle_counters cc_survey ; s#ath_regulatory regulatory ; const s#ath_ops * ops ; const s#ath_bus_ops * bus_ops ; t#bool btcoex_enabled ; } 
e#ath_usb_dev enum ath_usb_dev { AR9280_USB = 1 , AR9287_USB = 2 , STORAGE_DEVICE = 3 , } 
s#ath9k_hw_version struct ath9k_hw_version { t#u32 magic ; t#u16 devid ; t#u16 subvendorid ; t#u32 macVersion ; t#u16 macRev ; t#u16 phyRev ; t#u16 analog5GhzRev ; t#u16 analog2GhzRev ; t#u16 subsysid ; e#ath_usb_dev usbdev ; } 
s#ath9k_ops_config struct ath9k_ops_config { int dma_beacon_response_time ; int sw_beacon_response_time ; int additional_swba_backoff ; int ack_6mb ; t#u32 cwm_ignore_extcca ; t#bool pcieSerDesWrite ; t#u8 pcie_clock_req ; t#u32 pcie_waen ; t#u8 analog_shiftreg ; t#u8 paprd_disable ; t#u32 ofdm_trig_low ; t#u32 ofdm_trig_high ; t#u32 cck_trig_high ; t#u32 cck_trig_low ; t#u32 enable_ani ; int serialize_regmode ; t#bool rx_intr_mitigation ; t#bool tx_intr_mitigation ; int spurmode ; t#u16 spurchans [ 5 ] [ 2 ] ; t#u8 max_txtrig_level ; t#u16 ani_poll_interval ; } 
s#ath9k_hw_capabilities struct ath9k_hw_capabilities { t#u32 hw_caps ; t#u16 rts_aggr_limit ; t#u8 tx_chainmask ; t#u8 rx_chainmask ; t#u8 max_txchains ; t#u8 max_rxchains ; t#u8 num_gpio_pins ; t#u8 rx_hp_qdepth ; t#u8 rx_lp_qdepth ; t#u8 rx_status_len ; t#u8 tx_desc_len ; t#u8 txs_len ; t#u16 pcie_lcr_offset ; t#bool pcie_lcr_extsync_en ; } 
s#ath9k_ani_default struct ath9k_ani_default { t#u16 m1ThreshLow ; t#u16 m2ThreshLow ; t#u16 m1Thresh ; t#u16 m2Thresh ; t#u16 m2CountThr ; t#u16 m2CountThrLow ; t#u16 m1ThreshLowExt ; t#u16 m2ThreshLowExt ; t#u16 m1ThreshExt ; t#u16 m2ThreshExt ; t#u16 firstep ; t#u16 firstepLow ; t#u16 cycpwrThr1 ; t#u16 cycpwrThr1Ext ; } 
s#ar5416AniState struct ar5416AniState { s#ath9k_channel * c ; t#u8 noiseImmunityLevel ; t#u8 ofdmNoiseImmunityLevel ; t#u8 cckNoiseImmunityLevel ; t#bool ofdmsTurn ; t#u8 mrcCCKOff ; t#u8 spurImmunityLevel ; t#u8 firstepLevel ; t#u8 ofdmWeakSigDetectOff ; t#u8 cckWeakSigThreshold ; t#u32 listenTime ; t#int32_t rssiThrLow ; t#int32_t rssiThrHigh ; t#u32 noiseFloor ; t#u32 ofdmPhyErrCount ; t#u32 cckPhyErrCount ; t#int16_t pktRssi [ 2 ] ; t#int16_t ofdmErrRssi [ 2 ] ; t#int16_t cckErrRssi [ 2 ] ; s#ath9k_ani_default iniDef ; } 
s#ath9k_channel struct ath9k_channel { s#ieee80211_channel * chan ; s#ar5416AniState ani ; t#u16 channel ; t#u32 channelFlags ; t#u32 chanmode ; t#s16 noisefloor ; } 
s#base_eep_header struct base_eep_header { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 pwdclkind ; t#u8 fastClk5g ; t#u8 divChain ; t#u8 rxGainType ; t#u8 dacHiPwrMode_5G ; t#u8 openLoopPwrCntl ; t#u8 dacLpMode ; t#u8 txGainType ; t#u8 rcChainMask ; t#u8 desiredScaleCCK ; t#u8 pwr_table_offset ; t#u8 frac_n_5g ; t#u8 futureBase_3 [ 21 ] ; } 
s#spur_chan struct spur_chan { t#u16 spurChan ; t#u8 spurRangeLow ; t#u8 spurRangeHigh ; } 
s#modal_eep_header struct modal_eep_header { t#u32 antCtrlChain [ 3 ] ; t#u32 antCtrlCommon ; t#u8 antennaGainCh [ 3 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 3 ] ; t#u8 rxTxMarginCh [ 3 ] ; t#u8 adcDesiredSize ; t#u8 pgaDesiredSize ; t#u8 xlnaGainCh [ 3 ] ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#u8 noiseFloorThreshCh [ 3 ] ; t#u8 xpdGain ; t#u8 xpd ; t#u8 iqCalICh [ 3 ] ; t#u8 iqCalQCh [ 3 ] ; t#u8 pdGainOverlap ; t#u8 ob ; t#u8 db ; t#u8 xpaBiasLvl ; t#u8 pwrDecreaseFor2Chain ; t#u8 pwrDecreaseFor3Chain ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 3 ] ; t#u8 bswMargin [ 3 ] ; t#u8 swSettleHt40 ; t#u8 xatten2Db [ 3 ] ; t#u8 xatten2Margin [ 3 ] ; t#u8 ob_ch1 ; t#u8 db_ch1 ; t#u8 lna_ctl ; t#u8 miscBits ; t#u16 xpaBiasLvlFreq [ 3 ] ; t#u8 futureModal [ 6 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_per_freq struct cal_data_per_freq { t#u8 pwrPdg [ 4 ] [ 5 ] ; t#u8 vpdPdg [ 4 ] [ 5 ] ; } 
s#cal_target_power_leg struct cal_target_power_leg { t#u8 bChannel ; t#u8 tPow2x [ 4 ] ; } 
s#cal_target_power_ht struct cal_target_power_ht { t#u8 bChannel ; t#u8 tPow2x [ 8 ] ; } 
s#cal_ctl_edges struct cal_ctl_edges { t#u8 bChannel ; t#u8 ctl ; } 
s#cal_ctl_data struct cal_ctl_data { s#cal_ctl_edges ctlEdges [ 3 ] [ 8 ] ; } 
s#ar5416_eeprom_def struct ar5416_eeprom_def { s#base_eep_header baseEepHeader ; t#u8 custData [ 64 ] ; s#modal_eep_header modalHeader [ 2 ] ; t#u8 calFreqPier5G [ 8 ] ; t#u8 calFreqPier2G [ 4 ] ; s#cal_data_per_freq calPierData5G [ 3 ] [ 8 ] ; s#cal_data_per_freq calPierData2G [ 3 ] [ 4 ] ; s#cal_target_power_leg calTargetPower5G [ 8 ] ; s#cal_target_power_ht calTargetPower5GHT20 [ 8 ] ; s#cal_target_power_ht calTargetPower5GHT40 [ 8 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 4 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 4 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 4 ] ; t#u8 ctlIndex [ 24 ] ; s#cal_ctl_data ctlData [ 24 ] ; t#u8 padding ; } 
s#base_eep_header_4k struct base_eep_header_4k { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 txGainType ; } 
s#modal_eep_4k_header struct modal_eep_4k_header { t#u32 antCtrlChain [ 1 ] ; t#u32 antCtrlCommon ; t#u8 antennaGainCh [ 1 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 1 ] ; t#u8 rxTxMarginCh [ 1 ] ; t#u8 adcDesiredSize ; t#u8 pgaDesiredSize ; t#u8 xlnaGainCh [ 1 ] ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#u8 noiseFloorThreshCh [ 1 ] ; t#u8 xpdGain ; t#u8 xpd ; t#u8 iqCalICh [ 1 ] ; t#u8 iqCalQCh [ 1 ] ; t#u8 pdGainOverlap ; t#u8 ob_1 : 4 , ob_0 : 4 ; t#u8 db1_1 : 4 , db1_0 : 4 ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 1 ] ; t#u8 bswMargin [ 1 ] ; t#u8 swSettleHt40 ; t#u8 xatten2Db [ 1 ] ; t#u8 xatten2Margin [ 1 ] ; t#u8 db2_1 : 4 , db2_0 : 4 ; t#u8 version ; t#u8 ob_3 : 4 , ob_2 : 4 ; t#u8 antdiv_ctl1 : 4 , ob_4 : 4 ; t#u8 db1_3 : 4 , db1_2 : 4 ; t#u8 antdiv_ctl2 : 4 , db1_4 : 4 ; t#u8 db2_2 : 4 , db2_3 : 4 ; t#u8 reserved : 4 , db2_4 : 4 ; t#u8 tx_diversity ; t#u8 flc_pwr_thresh ; t#u8 bb_scale_smrt_antenna ; t#u8 futureModal [ 1 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_per_freq_4k struct cal_data_per_freq_4k { t#u8 pwrPdg [ 2 ] [ 5 ] ; t#u8 vpdPdg [ 2 ] [ 5 ] ; } 
s#cal_ctl_data_4k struct cal_ctl_data_4k { s#cal_ctl_edges ctlEdges [ 1 ] [ 4 ] ; } 
s#ar5416_eeprom_4k struct ar5416_eeprom_4k { s#base_eep_header_4k baseEepHeader ; t#u8 custData [ 20 ] ; s#modal_eep_4k_header modalHeader ; t#u8 calFreqPier2G [ 3 ] ; s#cal_data_per_freq_4k calPierData2G [ 1 ] [ 3 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex [ 12 ] ; s#cal_ctl_data_4k ctlData [ 12 ] ; t#u8 padding ; } 
t#int8_t typedef t#__s8 int8_t 
s#base_eep_ar9287_header struct base_eep_ar9287_header { t#u16 length ; t#u16 checksum ; t#u16 version ; t#u8 opCapFlags ; t#u8 eepMisc ; t#u16 regDmn [ 2 ] ; t#u8 macAddr [ 6 ] ; t#u8 rxMask ; t#u8 txMask ; t#u16 rfSilent ; t#u16 blueToothOptions ; t#u16 deviceCap ; t#u32 binBuildNumber ; t#u8 deviceType ; t#u8 openLoopPwrCntl ; t#int8_t pwrTableOffset ; t#int8_t tempSensSlope ; t#int8_t tempSensSlopePalOn ; t#u8 futureBase [ 29 ] ; } 
s#modal_eep_ar9287_header struct modal_eep_ar9287_header { t#u32 antCtrlChain [ 2 ] ; t#u32 antCtrlCommon ; t#int8_t antennaGainCh [ 2 ] ; t#u8 switchSettling ; t#u8 txRxAttenCh [ 2 ] ; t#u8 rxTxMarginCh [ 2 ] ; t#int8_t adcDesiredSize ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#int8_t noiseFloorThreshCh [ 2 ] ; t#u8 xpdGain ; t#u8 xpd ; t#int8_t iqCalICh [ 2 ] ; t#int8_t iqCalQCh [ 2 ] ; t#u8 pdGainOverlap ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 ht40PowerIncForPdadc ; t#u8 bswAtten [ 2 ] ; t#u8 bswMargin [ 2 ] ; t#u8 swSettleHt40 ; t#u8 version ; t#u8 db1 ; t#u8 db2 ; t#u8 ob_cck ; t#u8 ob_psk ; t#u8 ob_qam ; t#u8 ob_pal_off ; t#u8 futureModal [ 30 ] ; s#spur_chan spurChans [ 5 ] ; } 
s#cal_data_op_loop_ar9287 struct cal_data_op_loop_ar9287 { t#u8 pwrPdg [ 2 ] [ 5 ] ; t#u8 vpdPdg [ 2 ] [ 5 ] ; t#u8 pcdac [ 2 ] [ 5 ] ; t#u8 empty [ 2 ] [ 5 ] ; } 
s#cal_data_per_freq_ar9287 struct cal_data_per_freq_ar9287 { t#u8 pwrPdg [ 4 ] [ 1 ] ; t#u8 vpdPdg [ 4 ] [ 1 ] ; } 
u#cal_data_per_freq_ar9287_u union cal_data_per_freq_ar9287_u { s#cal_data_op_loop_ar9287 calDataOpen ; s#cal_data_per_freq_ar9287 calDataClose ; } 
s#cal_ctl_data_ar9287 struct cal_ctl_data_ar9287 { s#cal_ctl_edges ctlEdges [ 2 ] [ 4 ] ; } 
s#ar9287_eeprom struct ar9287_eeprom { s#base_eep_ar9287_header baseEepHeader ; t#u8 custData [ 32 ] ; s#modal_eep_ar9287_header modalHeader ; t#u8 calFreqPier2G [ 3 ] ; u#cal_data_per_freq_ar9287_u calPierData2G [ 2 ] [ 3 ] ; s#cal_target_power_leg calTargetPowerCck [ 3 ] ; s#cal_target_power_leg calTargetPower2G [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT20 [ 3 ] ; s#cal_target_power_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex [ 12 ] ; s#cal_ctl_data_ar9287 ctlData [ 12 ] ; t#u8 padding ; } 
s#eepFlags struct eepFlags { t#u8 opFlags ; t#u8 eepMisc ; } 
s#ar9300_base_eep_hdr struct ar9300_base_eep_hdr { t#__le16 regDmn [ 2 ] ; t#u8 txrxMask ; s#eepFlags opCapFlags ; t#u8 rfSilent ; t#u8 blueToothOptions ; t#u8 deviceCap ; t#u8 deviceType ; t#int8_t pwrTableOffset ; t#u8 params_for_tuning_caps [ 2 ] ; t#u8 featureEnable ; t#u8 miscConfiguration ; t#u8 eepromWriteEnableGpio ; t#u8 wlanDisableGpio ; t#u8 wlanLedGpio ; t#u8 rxBandSelectGpio ; t#u8 txrxgain ; t#__le32 swreg ; } 
s#ar9300_modal_eep_header struct ar9300_modal_eep_header { t#__le32 antCtrlCommon ; t#__le32 antCtrlCommon2 ; t#__le16 antCtrlChain [ 3 ] ; t#u8 xatten1DB [ 3 ] ; t#u8 xatten1Margin [ 3 ] ; t#int8_t tempSlope ; t#int8_t voltSlope ; t#u8 spurChans [ 5 ] ; t#int8_t noiseFloorThreshCh [ 3 ] ; t#u8 ob [ 3 ] ; t#u8 db_stage2 [ 3 ] ; t#u8 db_stage3 [ 3 ] ; t#u8 db_stage4 [ 3 ] ; t#u8 xpaBiasLvl ; t#u8 txFrameToDataStart ; t#u8 txFrameToPaOn ; t#u8 txClip ; t#int8_t antennaGain ; t#u8 switchSettling ; t#int8_t adcDesiredSize ; t#u8 txEndToXpaOff ; t#u8 txEndToRxOn ; t#u8 txFrameToXpaOn ; t#u8 thresh62 ; t#__le32 papdRateMaskHt20 ; t#__le32 papdRateMaskHt40 ; t#u8 futureModal [ 10 ] ; } 
s#ar9300_BaseExtension_1 struct ar9300_BaseExtension_1 { t#u8 ant_div_control ; t#u8 future [ 13 ] ; } 
s#ar9300_cal_data_per_freq_op_loop struct ar9300_cal_data_per_freq_op_loop { t#int8_t refPower ; t#u8 voltMeas ; t#u8 tempMeas ; t#int8_t rxNoisefloorCal ; t#int8_t rxNoisefloorPower ; t#u8 rxTempMeas ; } 
s#cal_tgt_pow_legacy struct cal_tgt_pow_legacy { t#u8 tPow2x [ 4 ] ; } 
s#cal_tgt_pow_ht struct cal_tgt_pow_ht { t#u8 tPow2x [ 14 ] ; } 
s#cal_ctl_data_2g struct cal_ctl_data_2g { t#u8 ctlEdges [ 4 ] ; } 
s#ar9300_BaseExtension_2 struct ar9300_BaseExtension_2 { t#int8_t tempSlopeLow ; t#int8_t tempSlopeHigh ; t#u8 xatten1DBLow [ 3 ] ; t#u8 xatten1MarginLow [ 3 ] ; t#u8 xatten1DBHigh [ 3 ] ; t#u8 xatten1MarginHigh [ 3 ] ; } 
s#cal_ctl_data_5g struct cal_ctl_data_5g { t#u8 ctlEdges [ 8 ] ; } 
s#ar9300_eeprom struct ar9300_eeprom { t#u8 eepromVersion ; t#u8 templateVersion ; t#u8 macAddr [ 6 ] ; t#u8 custData [ 20 ] ; s#ar9300_base_eep_hdr baseEepHeader ; s#ar9300_modal_eep_header modalHeader2G ; s#ar9300_BaseExtension_1 base_ext1 ; t#u8 calFreqPier2G [ 3 ] ; s#ar9300_cal_data_per_freq_op_loop calPierData2G [ 3 ] [ 3 ] ; t#u8 calTarget_freqbin_Cck [ 2 ] ; t#u8 calTarget_freqbin_2G [ 3 ] ; t#u8 calTarget_freqbin_2GHT20 [ 3 ] ; t#u8 calTarget_freqbin_2GHT40 [ 3 ] ; s#cal_tgt_pow_legacy calTargetPowerCck [ 2 ] ; s#cal_tgt_pow_legacy calTargetPower2G [ 3 ] ; s#cal_tgt_pow_ht calTargetPower2GHT20 [ 3 ] ; s#cal_tgt_pow_ht calTargetPower2GHT40 [ 3 ] ; t#u8 ctlIndex_2G [ 12 ] ; t#u8 ctl_freqbin_2G [ 12 ] [ 4 ] ; s#cal_ctl_data_2g ctlPowerData_2G [ 12 ] ; s#ar9300_modal_eep_header modalHeader5G ; s#ar9300_BaseExtension_2 base_ext2 ; t#u8 calFreqPier5G [ 8 ] ; s#ar9300_cal_data_per_freq_op_loop calPierData5G [ 3 ] [ 8 ] ; t#u8 calTarget_freqbin_5G [ 8 ] ; t#u8 calTarget_freqbin_5GHT20 [ 8 ] ; t#u8 calTarget_freqbin_5GHT40 [ 8 ] ; s#cal_tgt_pow_legacy calTargetPower5G [ 8 ] ; s#cal_tgt_pow_ht calTargetPower5GHT20 [ 8 ] ; s#cal_tgt_pow_ht calTargetPower5GHT40 [ 8 ] ; t#u8 ctlIndex_5G [ 9 ] ; t#u8 ctl_freqbin_5G [ 9 ] [ 8 ] ; s#cal_ctl_data_5g ctlPowerData_5G [ 9 ] ; } 
e#eeprom_param enum eeprom_param { EEP_NFTHRESH_5 , EEP_NFTHRESH_2 , EEP_MAC_MSW , EEP_MAC_MID , EEP_MAC_LSW , EEP_REG_0 , EEP_REG_1 , EEP_OP_CAP , EEP_OP_MODE , EEP_RF_SILENT , EEP_OB_5 , EEP_DB_5 , EEP_OB_2 , EEP_DB_2 , EEP_MINOR_REV , EEP_TX_MASK , EEP_RX_MASK , EEP_FSTCLK_5G , EEP_RXGAIN_TYPE , EEP_OL_PWRCTRL , EEP_TXGAIN_TYPE , EEP_RC_CHAIN_MASK , EEP_DAC_HPWR_5G , EEP_FRAC_N_5G , EEP_DEV_TYPE , EEP_TEMPSENSE_SLOPE , EEP_TEMPSENSE_SLOPE_PAL_ON , EEP_PWR_TABLE_OFFSET , EEP_DRIVE_STRENGTH , EEP_INTERNAL_REGULATOR , EEP_SWREG , EEP_PAPRD , EEP_MODAL_VER , EEP_ANT_DIV_CTL1 , EEP_CHAIN_MASK_REDUCE } 
s#eeprom_ops struct eeprom_ops { int ( * check_eeprom ) ( s#ath_hw * ) ; t#u32 ( * get_eeprom ) ( s#ath_hw * , e#eeprom_param ) ; t#bool ( * fill_eeprom ) ( s#ath_hw * ) ; int ( * get_eeprom_ver ) ( s#ath_hw * ) ; int ( * get_eeprom_rev ) ( s#ath_hw * ) ; void ( * set_board_values ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * set_addac ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * set_txpower ) ( s#ath_hw * , s#ath9k_channel * , t#u16 , t#u8 , t#u8 , t#u8 , t#bool ) ; t#u16 ( * get_spur_channel ) ( s#ath_hw * , t#u16 , t#bool ) ; } 
s#ath_nf_limits struct ath_nf_limits { t#s16 max ; t#s16 min ; t#s16 nominal ; } 
e#ath9k_power_mode enum ath9k_power_mode { ATH9K_PM_AWAKE = 0 , ATH9K_PM_FULL_SLEEP , ATH9K_PM_NETWORK_SLEEP , ATH9K_PM_UNDEFINED } 
s#ath9k_nfcal_hist struct ath9k_nfcal_hist { t#int16_t nfCalBuffer [ 5 ] ; t#u8 currIndex ; t#int16_t privNF ; t#u8 invalidNFcount ; } 
s#ath9k_hw_cal_data struct ath9k_hw_cal_data { t#u16 channel ; t#u32 channelFlags ; t#int32_t CalValid ; t#int8_t iCoff ; t#int8_t qCoff ; t#bool paprd_done ; t#bool nfcal_pending ; t#bool nfcal_interference ; t#u16 small_signal_gain [ 3 ] ; t#u32 pa_table [ 3 ] [ 24 ] ; s#ath9k_nfcal_hist nfCalHist [ 6 ] ; } 
s#ath9k_pacal_info struct ath9k_pacal_info { t#int32_t prev_offset ; t#int8_t max_skipcount ; t#int8_t skipcount ; } 
s#ath9k_mib_stats struct ath9k_mib_stats { t#u32 ackrcv_bad ; t#u32 rts_bad ; t#u32 rts_good ; t#u32 fcs_bad ; t#u32 beacons ; } 
s#ar5416Stats struct ar5416Stats { t#u32 ast_ani_niup ; t#u32 ast_ani_nidown ; t#u32 ast_ani_spurup ; t#u32 ast_ani_spurdown ; t#u32 ast_ani_ofdmon ; t#u32 ast_ani_ofdmoff ; t#u32 ast_ani_cckhigh ; t#u32 ast_ani_ccklow ; t#u32 ast_ani_stepup ; t#u32 ast_ani_stepdown ; t#u32 ast_ani_ofdmerrs ; t#u32 ast_ani_cckerrs ; t#u32 ast_ani_reset ; t#u32 ast_ani_lzero ; t#u32 ast_ani_lneg ; t#u32 avgbrssi ; s#ath9k_mib_stats ast_mibstats ; } 
e#ath9k_tx_queue enum ath9k_tx_queue { ATH9K_TX_QUEUE_INACTIVE = 0 , ATH9K_TX_QUEUE_DATA , ATH9K_TX_QUEUE_BEACON , ATH9K_TX_QUEUE_CAB , ATH9K_TX_QUEUE_UAPSD , ATH9K_TX_QUEUE_PSPOLL } 
e#ath9k_tx_queue_flags enum ath9k_tx_queue_flags { TXQ_FLAG_TXOKINT_ENABLE = 0x0001 , TXQ_FLAG_TXERRINT_ENABLE = 0x0001 , TXQ_FLAG_TXDESCINT_ENABLE = 0x0002 , TXQ_FLAG_TXEOLINT_ENABLE = 0x0004 , TXQ_FLAG_TXURNINT_ENABLE = 0x0008 , TXQ_FLAG_BACKOFF_DISABLE = 0x0010 , TXQ_FLAG_COMPRESSION_ENABLE = 0x0020 , TXQ_FLAG_RDYTIME_EXP_POLICY_ENABLE = 0x0040 , TXQ_FLAG_FRAG_BURST_BACKOFF_ENABLE = 0x0080 , } 
s#ath9k_tx_queue_info struct ath9k_tx_queue_info { t#u32 tqi_ver ; e#ath9k_tx_queue tqi_type ; int tqi_subtype ; e#ath9k_tx_queue_flags tqi_qflags ; t#u32 tqi_priority ; t#u32 tqi_aifs ; t#u32 tqi_cwmin ; t#u32 tqi_cwmax ; t#u16 tqi_shretry ; t#u16 tqi_lgretry ; t#u32 tqi_cbrPeriod ; t#u32 tqi_cbrOverflowLimit ; t#u32 tqi_burstTime ; t#u32 tqi_readyTime ; t#u32 tqi_physCompBuf ; t#u32 tqi_intFlags ; } 
E#ATH9K_INT_TIM 0x00200000 
E#ATH9K_INT_DTIM 0x00400000 
E#ATH9K_INT_DTIMSYNC 0x00800000 
E#ATH9K_INT_TSFOOR 0x04000000 
E#ATH9K_INT_CABEND 0x02000000 
E#ATH9K_INT_RXNOFRM 0x00000008 
E#ATH9K_INT_RXDESC 0x00000002 
E#ATH9K_INT_RXEOL 0x00000010 
E#ATH9K_INT_RXORN 0x00000020 
E#ATH9K_INT_TXURN 0x00000800 
E#ATH9K_INT_TXDESC 0x00000080 
E#ATH9K_INT_MIB 0x00001000 
E#ATH9K_INT_RXPHY 0x00004000 
E#ATH9K_INT_RXKCM 0x00008000 
E#ATH9K_INT_SWBA 0x00010000 
E#ATH9K_INT_BMISS 0x00040000 
E#ATH9K_INT_GPIO 0x01000000 
e#ath9k_int enum ath9k_int { ATH9K_INT_RX = 0x00000001 , ATH9K_INT_RXDESC = 0x00000002 , ATH9K_INT_RXHP = 0x00000001 , ATH9K_INT_RXLP = 0x00000002 , ATH9K_INT_RXNOFRM = 0x00000008 , ATH9K_INT_RXEOL = 0x00000010 , ATH9K_INT_RXORN = 0x00000020 , ATH9K_INT_TX = 0x00000040 , ATH9K_INT_TXDESC = 0x00000080 , ATH9K_INT_TIM_TIMER = 0x00000100 , ATH9K_INT_BB_WATCHDOG = 0x00000400 , ATH9K_INT_TXURN = 0x00000800 , ATH9K_INT_MIB = 0x00001000 , ATH9K_INT_RXPHY = 0x00004000 , ATH9K_INT_RXKCM = 0x00008000 , ATH9K_INT_SWBA = 0x00010000 , ATH9K_INT_BMISS = 0x00040000 , ATH9K_INT_BNR = 0x00100000 , ATH9K_INT_TIM = 0x00200000 , ATH9K_INT_DTIM = 0x00400000 , ATH9K_INT_DTIMSYNC = 0x00800000 , ATH9K_INT_GPIO = 0x01000000 , ATH9K_INT_CABEND = 0x02000000 , ATH9K_INT_TSFOOR = 0x04000000 , ATH9K_INT_GENTIMER = 0x08000000 , ATH9K_INT_CST = 0x10000000 , ATH9K_INT_GTT = 0x20000000 , ATH9K_INT_FATAL = 0x40000000 , ATH9K_INT_GLOBAL = 0x80000000 , ATH9K_INT_BMISC = E#ATH9K_INT_TIM | E#ATH9K_INT_DTIM | E#ATH9K_INT_DTIMSYNC | E#ATH9K_INT_TSFOOR | E#ATH9K_INT_CABEND , ATH9K_INT_COMMON = E#ATH9K_INT_RXNOFRM | E#ATH9K_INT_RXDESC | E#ATH9K_INT_RXEOL | E#ATH9K_INT_RXORN | E#ATH9K_INT_TXURN | E#ATH9K_INT_TXDESC | E#ATH9K_INT_MIB | E#ATH9K_INT_RXPHY | E#ATH9K_INT_RXKCM | E#ATH9K_INT_SWBA | E#ATH9K_INT_BMISS | E#ATH9K_INT_GPIO , ATH9K_INT_NOCARD = 0xffffffff } 
s#ath9k_percal_data struct ath9k_percal_data { t#u32 calType ; t#u32 calNumSamples ; t#u32 calCountMax ; void ( * calCollect ) ( s#ath_hw * ) ; void ( * calPostProc ) ( s#ath_hw * , t#u8 ) ; } 
e#ath9k_cal_state enum ath9k_cal_state { CAL_INACTIVE , CAL_WAITING , CAL_RUNNING , CAL_DONE } 
s#ath9k_cal_list struct ath9k_cal_list { const s#ath9k_percal_data * calData ; e#ath9k_cal_state calState ; s#ath9k_cal_list * calNext ; } 
e#ath9k_ani_cmd enum ath9k_ani_cmd { ATH9K_ANI_PRESENT = 0x1 , ATH9K_ANI_NOISE_IMMUNITY_LEVEL = 0x2 , ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION = 0x4 , ATH9K_ANI_CCK_WEAK_SIGNAL_THR = 0x8 , ATH9K_ANI_FIRSTEP_LEVEL = 0x10 , ATH9K_ANI_SPUR_IMMUNITY_LEVEL = 0x20 , ATH9K_ANI_MODE = 0x40 , ATH9K_ANI_PHYERR_RESET = 0x80 , ATH9K_ANI_MRC_CCK = 0x100 , ATH9K_ANI_ALL = 0xfff } 
s#ath_hw_radar_conf struct ath_hw_radar_conf { unsigned int pulse_inband ; unsigned int pulse_inband_step ; unsigned int pulse_height ; unsigned int pulse_rssi ; unsigned int pulse_maxlen ; unsigned int radar_rssi ; unsigned int radar_inband ; int fir_power ; t#bool ext_channel ; } 
s#ath_hw_private_ops struct ath_hw_private_ops { void ( * init_cal_settings ) ( s#ath_hw * ) ; t#bool ( * init_cal ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * init_mode_regs ) ( s#ath_hw * ) ; void ( * init_mode_gain_regs ) ( s#ath_hw * ) ; void ( * setup_calibration ) ( s#ath_hw * , s#ath9k_cal_list * ) ; int ( * rf_set_freq ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * spur_mitigate_freq ) ( s#ath_hw * , s#ath9k_channel * ) ; int ( * rf_alloc_ext_banks ) ( s#ath_hw * ) ; void ( * rf_free_ext_banks ) ( s#ath_hw * ) ; t#bool ( * set_rf_regs ) ( s#ath_hw * , s#ath9k_channel * , t#u16 ) ; void ( * set_channel_regs ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * init_bb ) ( s#ath_hw * , s#ath9k_channel * ) ; int ( * process_ini ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * olc_init ) ( s#ath_hw * ) ; void ( * set_rfmode ) ( s#ath_hw * , s#ath9k_channel * ) ; void ( * mark_phy_inactive ) ( s#ath_hw * ) ; void ( * set_delta_slope ) ( s#ath_hw * , s#ath9k_channel * ) ; t#bool ( * rfbus_req ) ( s#ath_hw * ) ; void ( * rfbus_done ) ( s#ath_hw * ) ; void ( * restore_chainmask ) ( s#ath_hw * ) ; void ( * set_diversity ) ( s#ath_hw * , t#bool ) ; t#u32 ( * compute_pll_control ) ( s#ath_hw * , s#ath9k_channel * ) ; t#bool ( * ani_control ) ( s#ath_hw * , e#ath9k_ani_cmd , int ) ; void ( * do_getnf ) ( s#ath_hw * , t#int16_t [ 6 ] ) ; void ( * set_radar_params ) ( s#ath_hw * , s#ath_hw_radar_conf * ) ; void ( * ani_cache_ini_regs ) ( s#ath_hw * ) ; } 
s#ath_tx_status struct ath_tx_status { t#u32 ts_tstamp ; t#u16 ts_seqnum ; t#u8 ts_status ; t#u8 ts_rateindex ; t#int8_t ts_rssi ; t#u8 ts_shortretry ; t#u8 ts_longretry ; t#u8 ts_virtcol ; t#u8 ts_flags ; t#int8_t ts_rssi_ctl0 ; t#int8_t ts_rssi_ctl1 ; t#int8_t ts_rssi_ctl2 ; t#int8_t ts_rssi_ext0 ; t#int8_t ts_rssi_ext1 ; t#int8_t ts_rssi_ext2 ; t#u8 qid ; t#u16 desc_id ; t#u8 tid ; t#u32 ba_low ; t#u32 ba_high ; t#u32 evm0 ; t#u32 evm1 ; t#u32 evm2 ; } 
e#ath9k_pkt_type enum ath9k_pkt_type { ATH9K_PKT_TYPE_NORMAL = 0 , ATH9K_PKT_TYPE_ATIM , ATH9K_PKT_TYPE_PSPOLL , ATH9K_PKT_TYPE_BEACON , ATH9K_PKT_TYPE_PROBE_RESP , ATH9K_PKT_TYPE_CHIRP , ATH9K_PKT_TYPE_GRP_POLL , } 
e#ath9k_key_type enum ath9k_key_type { ATH9K_KEY_TYPE_CLEAR , ATH9K_KEY_TYPE_WEP , ATH9K_KEY_TYPE_AES , ATH9K_KEY_TYPE_TKIP , } 
s#ath9k_11n_rate_series struct ath9k_11n_rate_series { t#u32 Tries ; t#u32 Rate ; t#u32 PktDuration ; t#u32 ChSel ; t#u32 RateFlags ; } 
s#ath_hw_antcomb_conf struct ath_hw_antcomb_conf { t#u8 main_lna_conf ; t#u8 alt_lna_conf ; t#u8 fast_div_bias ; t#u8 main_gaintb ; t#u8 alt_gaintb ; int lna1_lna2_delta ; t#u8 div_group ; } 
s#ath_hw_ops struct ath_hw_ops { void ( * config_pci_powersave ) ( s#ath_hw * , int , int ) ; void ( * rx_enable ) ( s#ath_hw * ) ; void ( * set_desc_link ) ( void * , t#u32 ) ; void ( * get_desc_link ) ( void * , t#u32 * * ) ; t#bool ( * calibrate ) ( s#ath_hw * , s#ath9k_channel * , t#u8 , t#bool ) ; t#bool ( * get_isr ) ( s#ath_hw * , e#ath9k_int * ) ; void ( * fill_txdesc ) ( s#ath_hw * , void * , t#u32 , t#bool , t#bool , const void * , t#dma_addr_t , unsigned int ) ; int ( * proc_txdesc ) ( s#ath_hw * , void * , s#ath_tx_status * ) ; void ( * set11n_txdesc ) ( s#ath_hw * , void * , t#u32 , e#ath9k_pkt_type , t#u32 , t#u32 , e#ath9k_key_type , t#u32 ) ; void ( * set11n_ratescenario ) ( s#ath_hw * , void * , void * , t#u32 , t#u32 , t#u32 , s#ath9k_11n_rate_series [ ] , t#u32 , t#u32 ) ; void ( * set11n_aggr_first ) ( s#ath_hw * , void * , t#u32 ) ; void ( * set11n_aggr_middle ) ( s#ath_hw * , void * , t#u32 ) ; void ( * set11n_aggr_last ) ( s#ath_hw * , void * ) ; void ( * clr11n_aggr ) ( s#ath_hw * , void * ) ; void ( * set_clrdmask ) ( s#ath_hw * , void * , t#bool ) ; void ( * antdiv_comb_conf_get ) ( s#ath_hw * , s#ath_hw_antcomb_conf * ) ; void ( * antdiv_comb_conf_set ) ( s#ath_hw * , s#ath_hw_antcomb_conf * ) ; } 
e#ath_btcoex_scheme enum ath_btcoex_scheme { ATH_BTCOEX_CFG_NONE , ATH_BTCOEX_CFG_2WIRE , ATH_BTCOEX_CFG_3WIRE , } 
s#ath_btcoex_hw struct ath_btcoex_hw { e#ath_btcoex_scheme scheme ; t#bool enabled ; t#u8 wlanactive_gpio ; t#u8 btactive_gpio ; t#u8 btpriority_gpio ; t#u32 bt_coex_mode ; t#u32 bt_coex_weights ; t#u32 bt_coex_mode2 ; } 
s#ar5416IniArray struct ar5416IniArray { t#u32 * ia_array ; t#u32 ia_rows ; t#u32 ia_columns ; } 
E#ATH_INI_NUM_SPLIT ( 0 ) + 3 
s#ath_gen_timer struct ath_gen_timer { void ( * trigger ) ( void * ) ; void ( * overflow ) ( void * ) ; void * arg ; t#u8 index ; } 
s#ath_gen_timer_table struct ath_gen_timer_table { t#u32 gen_timer_index [ 32 ] ; s#ath_gen_timer * timers [ 16 ] ; union { unsigned long timer_bits ; t#u16 val ; } timer_mask ; } 
s##ar9003_txs
s#ath_hw struct ath_hw { s#ath_ops reg_ops ; s#ieee80211_hw * hw ; s#ath_common common ; s#ath9k_hw_version hw_version ; s#ath9k_ops_config config ; s#ath9k_hw_capabilities caps ; s#ath9k_channel channels [ 38 ] ; s#ath9k_channel * curchan ; union { s#ar5416_eeprom_def def ; s#ar5416_eeprom_4k map4k ; s#ar9287_eeprom map9287 ; s#ar9300_eeprom ar9300_eep ; } eeprom ; const s#eeprom_ops * eep_ops ; t#bool sw_mgmt_crypto ; t#bool is_pciexpress ; t#bool aspm_enabled ; t#bool is_monitoring ; t#bool need_an_top2_fixup ; t#u16 tx_trig_level ; t#u32 nf_regs [ 6 ] ; s#ath_nf_limits nf_2g ; s#ath_nf_limits nf_5g ; t#u16 rfsilent ; t#u32 rfkill_gpio ; t#u32 rfkill_polarity ; t#u32 ah_flags ; t#bool htc_reset_init ; e#nl80211_iftype opmode ; e#ath9k_power_mode power_mode ; s#ath9k_hw_cal_data * caldata ; s#ath9k_pacal_info pacal_info ; s#ar5416Stats stats ; s#ath9k_tx_queue_info txq [ 10 ] ; t#int16_t curchan_rad_index ; e#ath9k_int imask ; t#u32 imrs2_reg ; t#u32 txok_interrupt_mask ; t#u32 txerr_interrupt_mask ; t#u32 txdesc_interrupt_mask ; t#u32 txeol_interrupt_mask ; t#u32 txurn_interrupt_mask ; t#bool chip_fullsleep ; t#u32 atim_window ; t#u32 supp_cals ; s#ath9k_cal_list iq_caldata ; s#ath9k_cal_list adcgain_caldata ; s#ath9k_cal_list adcdc_caldata ; s#ath9k_cal_list tempCompCalData ; s#ath9k_cal_list * cal_list ; s#ath9k_cal_list * cal_list_last ; s#ath9k_cal_list * cal_list_curr ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas0 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas1 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas2 ; union { t#u32 unsign [ 3 ] ; t#int32_t sign [ 3 ] ; } meas3 ; t#u16 cal_samples ; t#u32 sta_id1_defaults ; t#u32 misc_mode ; enum { AUTO_32KHZ , USE_32KHZ , DONT_USE_32KHZ , } enable_32kHz_clock ; s#ath_hw_private_ops private_ops ; s#ath_hw_ops ops ; t#u32 * analogBank0Data ; t#u32 * analogBank1Data ; t#u32 * analogBank2Data ; t#u32 * analogBank3Data ; t#u32 * analogBank6Data ; t#u32 * analogBank6TPCData ; t#u32 * analogBank7Data ; t#u32 * bank6Temp ; t#u8 txpower_limit ; int coverage_class ; t#u32 slottime ; t#u32 globaltxtimeout ; t#u32 proc_phyerr ; t#u32 aniperiod ; int totalSizeDesired [ 5 ] ; int coarse_high [ 5 ] ; int coarse_low [ 5 ] ; int firpwr [ 5 ] ; e#ath9k_ani_cmd ani_function ; s#ath_btcoex_hw btcoex_hw ; t#u32 bt_coex_bt_weight [ 4 ] ; t#u32 bt_coex_wlan_weight [ 4 ] ; t#u32 intr_txqs ; t#u8 txchainmask ; t#u8 rxchainmask ; s#ath_hw_radar_conf radar_conf ; t#u32 originalGain [ 22 ] ; int initPDADC ; int PDADCdelta ; int led_pin ; t#u32 gpio_mask ; t#u32 gpio_val ; s#ar5416IniArray iniModes ; s#ar5416IniArray iniCommon ; s#ar5416IniArray iniBank0 ; s#ar5416IniArray iniBB_RfGain ; s#ar5416IniArray iniBank1 ; s#ar5416IniArray iniBank2 ; s#ar5416IniArray iniBank3 ; s#ar5416IniArray iniBank6 ; s#ar5416IniArray iniBank6TPC ; s#ar5416IniArray iniBank7 ; s#ar5416IniArray iniAddac ; s#ar5416IniArray iniPcieSerdes ; s#ar5416IniArray iniPcieSerdesLowPower ; s#ar5416IniArray iniModesAdditional ; s#ar5416IniArray iniModesAdditional_40M ; s#ar5416IniArray iniModesRxGain ; s#ar5416IniArray iniModesTxGain ; s#ar5416IniArray iniModes_9271_1_0_only ; s#ar5416IniArray iniCckfirNormal ; s#ar5416IniArray iniCckfirJapan2484 ; s#ar5416IniArray iniCommon_normal_cck_fir_coeff_9271 ; s#ar5416IniArray iniCommon_japan_2484_cck_fir_coeff_9271 ; s#ar5416IniArray iniModes_9271_ANI_reg ; s#ar5416IniArray iniModes_high_power_tx_gain_9271 ; s#ar5416IniArray iniModes_normal_power_tx_gain_9271 ; s#ar5416IniArray iniMac [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniBB [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniRadio [ E#ATH_INI_NUM_SPLIT ] ; s#ar5416IniArray iniSOC [ E#ATH_INI_NUM_SPLIT ] ; t#u32 intr_gen_timer_trigger ; t#u32 intr_gen_timer_thresh ; s#ath_gen_timer_table hw_gen_timers ; s#ar9003_txs * ts_ring ; void * ts_start ; t#u32 ts_paddr_start ; t#u32 ts_paddr_end ; t#u16 ts_tail ; t#u8 ts_size ; t#u32 bb_watchdog_last_status ; t#u32 bb_watchdog_timeout_ms ; t#u8 bb_hang_rx_ofdm ; unsigned int paprd_target_power ; unsigned int paprd_training_power ; unsigned int paprd_ratemask ; unsigned int paprd_ratemask_ht40 ; t#bool paprd_table_write_done ; t#u32 paprd_gain_table_entries [ 32 ] ; t#u8 paprd_gain_table_index [ 32 ] ; t#u32 WARegVal ; t#u32 ent_mode ; t#bool is_clk_25mhz ; } 
ath9k_hw_ani_monitor void ath9k_hw_ani_monitor ( s#ath_hw * , s#ath9k_channel * ) 
ath9k_hw_disable_mib_counters void ath9k_hw_disable_mib_counters ( s#ath_hw * ) 
ath9k_hw_proc_mib_event void ath9k_hw_proc_mib_event ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/ar9002_mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
s#ath_desc struct ath_desc { t#u32 ds_link ; t#u32 ds_data ; t#u32 ds_ctl0 ; t#u32 ds_ctl1 ; t#u32 ds_hw [ 20 ] ; void * ds_vdata ; } 
ath9k_hw_setuprxdesc void ath9k_hw_setuprxdesc ( s#ath_hw * , s#ath_desc * , t#u32 , t#u32 ) 

/* drivers/net/wireless/ath/ath9k/ar9003_mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#ar9003_txs struct ar9003_txs { t#u32 ds_info ; t#u32 status1 ; t#u32 status2 ; t#u32 status3 ; t#u32 status4 ; t#u32 status5 ; t#u32 status6 ; t#u32 status7 ; t#u32 status8 ; } 
ar9003_hw_set_paprd_txdesc void ar9003_hw_set_paprd_txdesc ( s#ath_hw * , void * , t#u8 ) 
ath9k_hw_set_rx_bufsize void ath9k_hw_set_rx_bufsize ( s#ath_hw * , t#u16 ) 
e#ath9k_rx_qtype enum ath9k_rx_qtype { ATH9K_RX_QUEUE_HP , ATH9K_RX_QUEUE_LP , ATH9K_RX_QUEUE_MAX , } 
ath9k_hw_addrxbuf_edma void ath9k_hw_addrxbuf_edma ( s#ath_hw * , t#u32 , e#ath9k_rx_qtype ) 
s#ath_rx_status struct ath_rx_status { t#u32 rs_tstamp ; t#u16 rs_datalen ; t#u8 rs_status ; t#u8 rs_phyerr ; t#int8_t rs_rssi ; t#u8 rs_keyix ; t#u8 rs_rate ; t#u8 rs_antenna ; t#u8 rs_more ; t#int8_t rs_rssi_ctl0 ; t#int8_t rs_rssi_ctl1 ; t#int8_t rs_rssi_ctl2 ; t#int8_t rs_rssi_ext0 ; t#int8_t rs_rssi_ext1 ; t#int8_t rs_rssi_ext2 ; t#u8 rs_isaggr ; t#u8 rs_moreaggr ; t#u8 rs_num_delims ; t#u8 rs_flags ; t#u32 evm0 ; t#u32 evm1 ; t#u32 evm2 ; t#u32 evm3 ; t#u32 evm4 ; } 
ath9k_hw_process_rxdesc_edma int ath9k_hw_process_rxdesc_edma ( s#ath_hw * , s#ath_rx_status * , void * ) 
ath9k_hw_setup_statusring void ath9k_hw_setup_statusring ( s#ath_hw * , void * , t#u32 , t#u8 ) 

/* drivers/net/wireless/ath/ath9k/ar9003_paprd.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
ar9003_paprd_enable void ar9003_paprd_enable ( s#ath_hw * , t#bool ) 
ar9003_paprd_populate_single_table void ar9003_paprd_populate_single_table ( s#ath_hw * , s#ath9k_hw_cal_data * , int ) 
ar9003_paprd_setup_gain_table int ar9003_paprd_setup_gain_table ( s#ath_hw * , int ) 
ar9003_paprd_create_curve int ar9003_paprd_create_curve ( s#ath_hw * , s#ath9k_hw_cal_data * , int ) 
ar9003_paprd_init_table int ar9003_paprd_init_table ( s#ath_hw * ) 
ar9003_paprd_is_done t#bool ar9003_paprd_is_done ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/ar9003_phy.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
ar9003_hw_bb_watchdog_dbg_info void ar9003_hw_bb_watchdog_dbg_info ( s#ath_hw * ) 
ar9003_hw_disable_phy_restart void ar9003_hw_disable_phy_restart ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/btcoex.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
ath9k_hw_init_btcoex_hw void ath9k_hw_init_btcoex_hw ( s#ath_hw * , int ) 
ath9k_hw_btcoex_init_2wire void ath9k_hw_btcoex_init_2wire ( s#ath_hw * ) 
ath9k_hw_btcoex_init_3wire void ath9k_hw_btcoex_init_3wire ( s#ath_hw * ) 
ath9k_hw_btcoex_set_weight void ath9k_hw_btcoex_set_weight ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_btcoex_enable void ath9k_hw_btcoex_enable ( s#ath_hw * ) 
ath9k_hw_btcoex_disable void ath9k_hw_btcoex_disable ( s#ath_hw * ) 
e#ath_stomp_type enum ath_stomp_type { ATH_BTCOEX_NO_STOMP , ATH_BTCOEX_STOMP_ALL , ATH_BTCOEX_STOMP_LOW , ATH_BTCOEX_STOMP_NONE } 
ath9k_hw_btcoex_bt_stomp void ath9k_hw_btcoex_bt_stomp ( s#ath_hw * , e#ath_stomp_type ) 

/* drivers/net/wireless/ath/ath9k/calib.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
ath9k_hw_reset_calvalid t#bool ath9k_hw_reset_calvalid ( s#ath_hw * ) 
ath9k_hw_bstuck_nfcal void ath9k_hw_bstuck_nfcal ( s#ath_hw * ) 

/* drivers/net/wireless/ath/ath9k/common.o */
ath9k_cmn_padpos int ath9k_cmn_padpos ( t#__le16 ) 
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
ath9k_cmn_get_hw_crypto_keytype int ath9k_cmn_get_hw_crypto_keytype ( s#sk_buff * ) 
ath9k_cmn_update_ichannel void ath9k_cmn_update_ichannel ( s#ath9k_channel * , s#ieee80211_channel * , e#nl80211_channel_type ) 
s##ar9003_txs
ath9k_cmn_get_curchannel s#ath9k_channel * ath9k_cmn_get_curchannel ( s#ieee80211_hw * , s#ath_hw * ) 
ath9k_cmn_count_streams int ath9k_cmn_count_streams ( unsigned int , int ) 
ath9k_cmn_update_txpow void ath9k_cmn_update_txpow ( s#ath_hw * , t#u16 , t#u16 , t#u16 * ) 

/* drivers/net/wireless/ath/ath9k/hw.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ath9k_hw_wait t#bool ath9k_hw_wait ( s#ath_hw * , t#u32 , t#u32 , t#u32 , t#u32 ) 
ath9k_hw_computetxtime t#u16 ath9k_hw_computetxtime ( s#ath_hw * , t#u8 , int , t#u32 , t#u16 , t#bool ) 
ath9k_hw_init int ath9k_hw_init ( s#ath_hw * ) 
ar9003_get_pll_sqsum_dvc t#u32 ar9003_get_pll_sqsum_dvc ( s#ath_hw * ) 
ath9k_hw_init_global_settings void ath9k_hw_init_global_settings ( s#ath_hw * ) 
ath9k_hw_deinit void ath9k_hw_deinit ( s#ath_hw * ) 
ath9k_hw_check_alive t#bool ath9k_hw_check_alive ( s#ath_hw * ) 
ath9k_hw_reset int ath9k_hw_reset ( s#ath_hw * , s#ath9k_channel * , s#ath9k_hw_cal_data * , t#bool ) 
ath9k_hw_setpower t#bool ath9k_hw_setpower ( s#ath_hw * , e#ath9k_power_mode ) 
ath9k_hw_beaconinit void ath9k_hw_beaconinit ( s#ath_hw * , t#u32 , t#u32 ) 
s#ath9k_beacon_state struct ath9k_beacon_state { t#u32 bs_nexttbtt ; t#u32 bs_nextdtim ; t#u32 bs_intval ; t#u32 bs_dtimperiod ; t#u16 bs_cfpperiod ; t#u16 bs_cfpmaxduration ; t#u32 bs_cfpnext ; t#u16 bs_timoffset ; t#u16 bs_bmissthreshold ; t#u32 bs_sleepduration ; t#u32 bs_tsfoor_threshold ; } 
ath9k_hw_set_sta_beacon_timers void ath9k_hw_set_sta_beacon_timers ( s#ath_hw * , const s#ath9k_beacon_state * ) 
ath9k_hw_cfg_gpio_input void ath9k_hw_cfg_gpio_input ( s#ath_hw * , t#u32 ) 
ath9k_hw_gpio_get t#u32 ath9k_hw_gpio_get ( s#ath_hw * , t#u32 ) 
ath9k_hw_cfg_output void ath9k_hw_cfg_output ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_set_gpio void ath9k_hw_set_gpio ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_getdefantenna t#u32 ath9k_hw_getdefantenna ( s#ath_hw * ) 
ath9k_hw_setantenna void ath9k_hw_setantenna ( s#ath_hw * , t#u32 ) 
ath9k_hw_getrxfilter t#u32 ath9k_hw_getrxfilter ( s#ath_hw * ) 
ath9k_hw_setrxfilter void ath9k_hw_setrxfilter ( s#ath_hw * , t#u32 ) 
ath9k_hw_phy_disable t#bool ath9k_hw_phy_disable ( s#ath_hw * ) 
ath9k_hw_disable t#bool ath9k_hw_disable ( s#ath_hw * ) 
ath9k_hw_set_txpowerlimit void ath9k_hw_set_txpowerlimit ( s#ath_hw * , t#u32 , t#bool ) 
ath9k_hw_setopmode void ath9k_hw_setopmode ( s#ath_hw * ) 
ath9k_hw_setmcastfilter void ath9k_hw_setmcastfilter ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_write_associd void ath9k_hw_write_associd ( s#ath_hw * ) 
ath9k_hw_gettsf64 t#u64 ath9k_hw_gettsf64 ( s#ath_hw * ) 
ath9k_hw_settsf64 void ath9k_hw_settsf64 ( s#ath_hw * , t#u64 ) 
ath9k_hw_reset_tsf void ath9k_hw_reset_tsf ( s#ath_hw * ) 
ath9k_hw_set_tsfadjust void ath9k_hw_set_tsfadjust ( s#ath_hw * , t#u32 ) 
ath9k_hw_gettsf32 t#u32 ath9k_hw_gettsf32 ( s#ath_hw * ) 
ath_gen_timer_alloc s#ath_gen_timer * ath_gen_timer_alloc ( s#ath_hw * , void ( * ) ( void * ) , void ( * ) ( void * ) , void * , t#u8 ) 
ath9k_hw_gen_timer_start void ath9k_hw_gen_timer_start ( s#ath_hw * , s#ath_gen_timer * , t#u32 , t#u32 ) 
ath9k_hw_gen_timer_stop void ath9k_hw_gen_timer_stop ( s#ath_hw * , s#ath_gen_timer * ) 
ath_gen_timer_free void ath_gen_timer_free ( s#ath_hw * , s#ath_gen_timer * ) 
ath_gen_timer_isr void ath_gen_timer_isr ( s#ath_hw * ) 
ath9k_hw_htc_resetinit void ath9k_hw_htc_resetinit ( s#ath_hw * ) 
ath9k_hw_name void ath9k_hw_name ( s#ath_hw * , char * , t#size_t ) 

/* drivers/net/wireless/ath/ath9k/mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ar9003_txs
ath9k_hw_gettxbuf t#u32 ath9k_hw_gettxbuf ( s#ath_hw * , t#u32 ) 
ath9k_hw_puttxbuf void ath9k_hw_puttxbuf ( s#ath_hw * , t#u32 , t#u32 ) 
ath9k_hw_txstart void ath9k_hw_txstart ( s#ath_hw * , t#u32 ) 
ath9k_hw_cleartxdesc void ath9k_hw_cleartxdesc ( s#ath_hw * , void * ) 
ath9k_hw_numtxpending t#u32 ath9k_hw_numtxpending ( s#ath_hw * , t#u32 ) 
ath9k_hw_updatetxtriglevel t#bool ath9k_hw_updatetxtriglevel ( s#ath_hw * , t#bool ) 
ath9k_hw_abort_tx_dma void ath9k_hw_abort_tx_dma ( s#ath_hw * ) 
ath9k_hw_stop_dma_queue t#bool ath9k_hw_stop_dma_queue ( s#ath_hw * , t#u32 ) 
ath9k_hw_gettxintrtxqs void ath9k_hw_gettxintrtxqs ( s#ath_hw * , t#u32 * ) 
ath9k_hw_set_txq_props t#bool ath9k_hw_set_txq_props ( s#ath_hw * , int , const s#ath9k_tx_queue_info * ) 
ath9k_hw_get_txq_props t#bool ath9k_hw_get_txq_props ( s#ath_hw * , int , s#ath9k_tx_queue_info * ) 
ath9k_hw_setuptxqueue int ath9k_hw_setuptxqueue ( s#ath_hw * , e#ath9k_tx_queue , const s#ath9k_tx_queue_info * ) 
ath9k_hw_releasetxqueue t#bool ath9k_hw_releasetxqueue ( s#ath_hw * , t#u32 ) 
ath9k_hw_resettxqueue t#bool ath9k_hw_resettxqueue ( s#ath_hw * , t#u32 ) 
ath9k_hw_rxprocdesc int ath9k_hw_rxprocdesc ( s#ath_hw * , s#ath_desc * , s#ath_rx_status * , t#u64 ) 
ath9k_hw_setrxabort t#bool ath9k_hw_setrxabort ( s#ath_hw * , t#bool ) 
ath9k_hw_putrxbuf void ath9k_hw_putrxbuf ( s#ath_hw * , t#u32 ) 
ath9k_hw_startpcureceive void ath9k_hw_startpcureceive ( s#ath_hw * , t#bool ) 
ath9k_hw_abortpcurecv void ath9k_hw_abortpcurecv ( s#ath_hw * ) 
ath9k_hw_stopdmarecv t#bool ath9k_hw_stopdmarecv ( s#ath_hw * , t#bool * ) 
ath9k_hw_beaconq_setup int ath9k_hw_beaconq_setup ( s#ath_hw * ) 
ath9k_hw_intrpend t#bool ath9k_hw_intrpend ( s#ath_hw * ) 
ath9k_hw_disable_interrupts void ath9k_hw_disable_interrupts ( s#ath_hw * ) 
ath9k_hw_enable_interrupts void ath9k_hw_enable_interrupts ( s#ath_hw * ) 
ath9k_hw_set_interrupts void ath9k_hw_set_interrupts ( s#ath_hw * , e#ath9k_int ) 

/* drivers/net/wireless/ath/hw.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ath_bus_ops
ath_hw_setbssidmask void ath_hw_setbssidmask ( s#ath_common * ) 
ath_hw_cycle_counters_update void ath_hw_cycle_counters_update ( s#ath_common * ) 
ath_hw_get_listen_time t#int32_t ath_hw_get_listen_time ( s#ath_common * ) 

/* drivers/net/wireless/ath/key.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##ath_bus_ops
ath_hw_keyreset t#bool ath_hw_keyreset ( s#ath_common * , t#u16 ) 
s#ieee80211_bss_conf struct ieee80211_bss_conf { const t#u8 * bssid ; t#bool assoc , ibss_joined ; t#u16 aid ; t#bool use_cts_prot ; t#bool use_short_preamble ; t#bool use_short_slot ; t#bool enable_beacon ; t#u8 dtim_period ; t#u16 beacon_int ; t#u16 assoc_capability ; t#u64 timestamp ; t#u32 basic_rates ; int mcast_rate [ E#IEEE80211_NUM_BANDS ] ; t#u16 ht_operation_mode ; t#s32 cqm_rssi_thold ; t#u32 cqm_rssi_hyst ; e#nl80211_channel_type channel_type ; t#__be32 arp_addr_list [ 4 ] ; t#u8 arp_addr_cnt ; t#bool arp_filter_enabled ; t#bool qos ; t#bool idle ; } 
s#ieee80211_vif struct ieee80211_vif { e#nl80211_iftype type ; s#ieee80211_bss_conf bss_conf ; t#u8 addr [ 6 ] ; t#bool p2p ; t#u8 drv_priv [ 0 ] __attribute__ ( ( __aligned__ ( sizeof ( void * ) ) ) ) ; } 
s#ieee80211_sta struct ieee80211_sta { t#u32 supp_rates [ E#IEEE80211_NUM_BANDS ] ; t#u8 addr [ 6 ] ; t#u16 aid ; s#ieee80211_sta_ht_cap ht_cap ; t#u8 drv_priv [ 0 ] __attribute__ ( ( __aligned__ ( sizeof ( void * ) ) ) ) ; } 
s#ieee80211_key_conf struct ieee80211_key_conf { t#u32 cipher ; t#u8 icv_len ; t#u8 iv_len ; t#u8 hw_key_idx ; t#u8 flags ; t#s8 keyidx ; t#u8 keylen ; t#u8 key [ 0 ] ; } 
ath_key_config int ath_key_config ( s#ath_common * , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) 
ath_key_delete void ath_key_delete ( s#ath_common * , s#ieee80211_key_conf * ) 

/* drivers/net/wireless/ath/main.o */
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##ath_bus_ops
ath_rxbuf_alloc s#sk_buff * ath_rxbuf_alloc ( s#ath_common * , t#u32 , t#gfp_t ) 
ath_printk extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) int ath_printk ( const char * , s#ath_common * , const char * , ... ) 

/* drivers/net/wireless/ath/regd.o */
ath_is_world_regd t#bool ath_is_world_regd ( s#ath_regulatory * ) 
ath_is_49ghz_allowed t#bool ath_is_49ghz_allowed ( t#u16 ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ath_reg_notifier_apply int ath_reg_notifier_apply ( s#wiphy * , s#regulatory_request * , s#ath_regulatory * ) 
ath_regd_init int ath_regd_init ( s#ath_regulatory * , s#wiphy * , int ( * ) ( s#wiphy * , s#regulatory_request * ) ) 
ath_regd_get_band_ctl t#u32 ath_regd_get_band_ctl ( s#ath_regulatory * , e#ieee80211_band ) 

/* drivers/net/wireless/iwlegacy/iwl-core.o */
iwlegacy_debug_level extern t#u32 iwlegacy_debug_level 
iwlegacy_bcast_addr extern const t#u8 iwlegacy_bcast_addr [ 6 ] 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
E#REPLY_MAX 0xff 
s#iwl_rx_mem_buffer struct iwl_rx_mem_buffer { t#dma_addr_t page_dma ; s#page * page ; s#list_head list ; } 
s#iwl_measurement_histogram struct iwl_measurement_histogram { t#__le32 ofdm [ 8 ] ; t#__le32 cck [ 8 ] ; } 
s#iwl_spectrum_notification struct iwl_spectrum_notification { t#u8 id ; t#u8 token ; t#u8 channel_index ; t#u8 state ; t#__le32 start_time ; t#u8 band ; t#u8 channel ; t#u8 type ; t#u8 reserved1 ; t#__le32 cca_ofdm ; t#__le32 cca_cck ; t#__le32 cca_time ; t#u8 basic_type ; t#u8 reserved2 [ 3 ] ; s#iwl_measurement_histogram histogram ; t#__le32 stop_time ; t#__le32 status ; } 
s#iwl_force_reset struct iwl_force_reset { int reset_request_count ; int reset_success_count ; int reset_reject_count ; unsigned long reset_duration ; unsigned long last_force_reset_jiffies ; } 
E#IWL_MAX_FORCE_RESET ( 0 ) + 2 
s#iwl4965_channel_tgd_info struct iwl4965_channel_tgd_info { t#u8 type ; t#s8 max_power ; } 
s#iwl4965_channel_tgh_info struct iwl4965_channel_tgh_info { t#s64 last_radar_time ; } 
s#iwl_eeprom_channel struct iwl_eeprom_channel { t#u8 flags ; t#s8 max_power_avg ; } 
s#iwl3945_tx_power struct iwl3945_tx_power { t#u8 tx_gain ; t#u8 dsp_atten ; } 
s#iwl3945_channel_power_info struct iwl3945_channel_power_info { s#iwl3945_tx_power tpc ; t#s8 power_table_index ; t#s8 base_power_index ; t#s8 requested_power ; } 
s#iwl3945_scan_power_info struct iwl3945_scan_power_info { s#iwl3945_tx_power tpc ; t#s8 power_table_index ; t#s8 requested_power ; } 
s#iwl_channel_info struct iwl_channel_info { s#iwl4965_channel_tgd_info tgd ; s#iwl4965_channel_tgh_info tgh ; s#iwl_eeprom_channel eeprom ; s#iwl_eeprom_channel ht40_eeprom ; t#u8 channel ; t#u8 flags ; t#s8 max_power_avg ; t#s8 curr_txpow ; t#s8 min_power ; t#s8 scan_power ; t#u8 group_index ; t#u8 band_index ; e#ieee80211_band band ; t#s8 ht40_max_power_avg ; t#u8 ht40_flags ; t#u8 ht40_extension_channel ; s#iwl3945_channel_power_info power_info [ ( 33 ) ] ; s#iwl3945_scan_power_info scan_pwr_info [ ( 2 ) ] ; } 
s#iwl_calib_result struct iwl_calib_result { void * buf ; t#size_t buf_len ; } 
E#IWL_CALIB_MAX 0 
s#cfg80211_ssid struct cfg80211_ssid { t#u8 ssid [ 32 ] ; t#u8 ssid_len ; } 
s#cfg80211_scan_request struct cfg80211_scan_request { s#cfg80211_ssid * ssids ; int n_ssids ; t#u32 n_channels ; const t#u8 * ie ; t#size_t ie_len ; s#wiphy * wiphy ; s#net_device * dev ; t#bool aborted ; s#ieee80211_channel * channels [ 0 ] ; } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#fw_desc struct fw_desc { void * v_addr ; t#dma_addr_t p_addr ; t#u32 len ; } 
e#ucode_type enum ucode_type { UCODE_NONE = 0 , UCODE_INIT , UCODE_RT } 
e#iwl_rxon_context_id enum iwl_rxon_context_id { IWL_RXON_CTX_BSS , NUM_IWL_RXON_CTX } 
s#iwl_legacy_rxon_cmd struct iwl_legacy_rxon_cmd { t#u8 node_addr [ 6 ] ; t#__le16 reserved1 ; t#u8 bssid_addr [ 6 ] ; t#__le16 reserved2 ; t#u8 wlap_bssid_addr [ 6 ] ; t#__le16 reserved3 ; t#u8 dev_type ; t#u8 air_propagation ; t#__le16 rx_chain ; t#u8 ofdm_basic_rates ; t#u8 cck_basic_rates ; t#__le16 assoc_id ; t#__le32 flags ; t#__le32 filter_flags ; t#__le16 channel ; t#u8 ofdm_ht_single_stream_basic_rates ; t#u8 ofdm_ht_dual_stream_basic_rates ; t#u8 reserved4 ; t#u8 reserved5 ; } 
t#__le64 typedef t#__u64 __le64 
s#iwl_rxon_time_cmd struct iwl_rxon_time_cmd { t#__le64 timestamp ; t#__le16 beacon_interval ; t#__le16 atim_window ; t#__le32 beacon_init_val ; t#__le16 listen_interval ; t#u8 dtim_period ; t#u8 delta_cp_bss_tbtts ; } 
s#iwl_ac_qos struct iwl_ac_qos { t#__le16 cw_min ; t#__le16 cw_max ; t#u8 aifsn ; t#u8 reserved1 ; t#__le16 edca_txop ; } 
s#iwl_qosparam_cmd struct iwl_qosparam_cmd { t#__le32 qos_flags ; s#iwl_ac_qos ac [ 4 ] ; } 
s#iwl_qos_info struct iwl_qos_info { int qos_active ; s#iwl_qosparam_cmd def_qos_parm ; } 
s#iwl_wep_key struct iwl_wep_key { t#u8 key_index ; t#u8 key_offset ; t#u8 reserved1 [ 2 ] ; t#u8 key_size ; t#u8 reserved2 [ 3 ] ; t#u8 key [ 16 ] ; } 
s#iwl_rxon_context struct iwl_rxon_context { s#ieee80211_vif * vif ; const t#u8 * ac_to_fifo ; const t#u8 * ac_to_queue ; t#u8 mcast_queue ; t#bool always_active , is_active ; t#bool ht_need_multiple_chains ; e#iwl_rxon_context_id ctxid ; t#u32 interface_modes , exclusive_interface_modes ; t#u8 unused_devtype , ap_devtype , ibss_devtype , station_devtype ; const s#iwl_legacy_rxon_cmd active ; s#iwl_legacy_rxon_cmd staging ; s#iwl_rxon_time_cmd timing ; s#iwl_qos_info qos_data ; t#u8 bcast_sta_id , ap_sta_id ; t#u8 rxon_cmd , rxon_assoc_cmd , rxon_timing_cmd ; t#u8 qos_cmd ; t#u8 wep_key_cmd ; s#iwl_wep_key wep_keys [ 4 ] ; t#u8 key_mapping_keys ; t#__le32 station_flags ; struct { t#bool non_gf_sta_present ; t#u8 protection ; t#bool enabled , is_40mhz ; t#u8 extension_chan_offset ; } ht ; } 
E#NUM_IWL_RXON_CTX 1 
s#iwl_init_alive_resp struct iwl_init_alive_resp { t#u8 ucode_minor ; t#u8 ucode_major ; t#__le16 reserved1 ; t#u8 sw_rev [ 8 ] ; t#u8 ver_type ; t#u8 ver_subtype ; t#__le16 reserved2 ; t#__le32 log_event_table_ptr ; t#__le32 error_event_table_ptr ; t#__le32 timestamp ; t#__le32 is_valid ; t#__le32 voltage ; t#__le32 therm_r1 [ 2 ] ; t#__le32 therm_r2 [ 2 ] ; t#__le32 therm_r3 [ 2 ] ; t#__le32 therm_r4 [ 2 ] ; t#__le32 tx_atten [ 5 ] [ 2 ] ; } 
s#iwl_alive_resp struct iwl_alive_resp { t#u8 ucode_minor ; t#u8 ucode_major ; t#__le16 reserved1 ; t#u8 sw_rev [ 8 ] ; t#u8 ver_type ; t#u8 ver_subtype ; t#__le16 reserved2 ; t#__le32 log_event_table_ptr ; t#__le32 error_event_table_ptr ; t#__le32 timestamp ; t#__le32 is_valid ; } 
s#iwl_sensitivity_data struct iwl_sensitivity_data { t#u32 auto_corr_ofdm ; t#u32 auto_corr_ofdm_mrc ; t#u32 auto_corr_ofdm_x1 ; t#u32 auto_corr_ofdm_mrc_x1 ; t#u32 auto_corr_cck ; t#u32 auto_corr_cck_mrc ; t#u32 last_bad_plcp_cnt_ofdm ; t#u32 last_fa_cnt_ofdm ; t#u32 last_bad_plcp_cnt_cck ; t#u32 last_fa_cnt_cck ; t#u32 nrg_curr_state ; t#u32 nrg_prev_state ; t#u32 nrg_value [ 10 ] ; t#u8 nrg_silence_rssi [ 20 ] ; t#u32 nrg_silence_ref ; t#u32 nrg_energy_idx ; t#u32 nrg_silence_idx ; t#u32 nrg_th_cck ; t#s32 nrg_auto_corr_silence_diff ; t#u32 num_in_cck_no_fa ; t#u32 nrg_th_ofdm ; t#u16 barker_corr_th_min ; t#u16 barker_corr_th_min_mrc ; t#u16 nrg_th_cca ; } 
s#iwl_chain_noise_data struct iwl_chain_noise_data { t#u32 active_chains ; t#u32 chain_noise_a ; t#u32 chain_noise_b ; t#u32 chain_noise_c ; t#u32 chain_signal_a ; t#u32 chain_signal_b ; t#u32 chain_signal_c ; t#u16 beacon_count ; t#u8 disconn_array [ 3 ] ; t#u8 delta_gain_code [ 3 ] ; t#u8 radio_write ; t#u8 state ; } 
s#iwl_ht_config struct iwl_ht_config { t#bool single_chain_sufficient ; e#ieee80211_smps_mode smps ; } 
s#iwl_rb_status struct iwl_rb_status { t#__le16 closed_rb_num ; t#__le16 closed_fr_num ; t#__le16 finished_rb_num ; t#__le16 finished_fr_nam ; t#__le32 __unused ; } 
s#iwl_rx_queue struct iwl_rx_queue { t#__le32 * bd ; t#dma_addr_t bd_dma ; s#iwl_rx_mem_buffer pool [ 256 + 64 ] ; s#iwl_rx_mem_buffer * queue [ 256 ] ; t#u32 read ; t#u32 write ; t#u32 free_count ; t#u32 write_actual ; s#list_head rx_free ; s#list_head rx_used ; int need_update ; s#iwl_rb_status * rb_stts ; t#dma_addr_t rb_stts_dma ; t#spinlock_t lock ; } 
s#iwl_queue struct iwl_queue { int n_bd ; int write_ptr ; int read_ptr ; t#dma_addr_t dma_addr ; int n_window ; t#u32 id ; int low_mark ; int high_mark ; } 
s#iwl_cmd_header struct iwl_cmd_header { t#u8 cmd ; t#u8 flags ; t#__le16 sequence ; t#u8 data [ 0 ] ; } 
s#iwl_dram_scratch struct iwl_dram_scratch { t#u8 try_cnt ; t#u8 bt_kill_cnt ; t#__le16 reserved ; } 
s#ieee80211_hdr struct ieee80211_hdr { t#__le16 frame_control ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctrl ; t#u8 addr4 [ 6 ] ; } 
s#iwl_tx_cmd struct iwl_tx_cmd { t#__le16 len ; t#__le16 next_frame_len ; t#__le32 tx_flags ; s#iwl_dram_scratch scratch ; t#__le32 rate_n_flags ; t#u8 sta_id ; t#u8 sec_ctl ; t#u8 initial_rate_index ; t#u8 reserved ; t#u8 key [ 16 ] ; t#__le16 next_frame_flags ; t#__le16 reserved2 ; union { t#__le32 life_time ; t#__le32 attempt ; } stop_time ; t#__le32 dram_lsb_ptr ; t#u8 dram_msb_ptr ; t#u8 rts_retry_limit ; t#u8 data_retry_limit ; t#u8 tid_tspec ; union { t#__le16 pm_frame_timeout ; t#__le16 attempt_duration ; } timeout ; t#__le16 driver_txop ; t#u8 payload [ 0 ] ; s#ieee80211_hdr hdr [ 0 ] ; } 
s#iwl_device_cmd struct iwl_device_cmd { s#iwl_cmd_header hdr ; union { t#u32 flags ; t#u8 val8 ; t#u16 val16 ; t#u32 val32 ; s#iwl_tx_cmd tx ; t#u8 payload [ 320 ] ; } __attribute__ ( ( packed ) ) cmd ; } 
s#iwl3945_rx_frame_stats struct iwl3945_rx_frame_stats { t#u8 phy_count ; t#u8 id ; t#u8 rssi ; t#u8 agc ; t#__le16 sig_avg ; t#__le16 noise_diff ; t#u8 payload [ 0 ] ; } 
s#iwl3945_rx_frame_hdr struct iwl3945_rx_frame_hdr { t#__le16 channel ; t#__le16 phy_flags ; t#u8 reserved1 ; t#u8 rate ; t#__le16 len ; t#u8 payload [ 0 ] ; } 
s#iwl3945_rx_frame_end struct iwl3945_rx_frame_end { t#__le32 status ; t#__le64 timestamp ; t#__le32 beacon_timestamp ; } 
s#iwl3945_rx_frame struct iwl3945_rx_frame { s#iwl3945_rx_frame_stats stats ; s#iwl3945_rx_frame_hdr hdr ; s#iwl3945_rx_frame_end end ; } 
s#iwl3945_tx_resp struct iwl3945_tx_resp { t#u8 failure_rts ; t#u8 failure_frame ; t#u8 bt_kill_count ; t#u8 rate ; t#__le32 wireless_media_time ; t#__le32 status ; } 
s#iwl3945_beacon_notif struct iwl3945_beacon_notif { s#iwl3945_tx_resp beacon_notify_hdr ; t#__le32 low_tsf ; t#__le32 high_tsf ; t#__le32 ibss_mgr_status ; } 
s#iwl_csa_notification struct iwl_csa_notification { t#__le16 band ; t#__le16 channel ; t#__le32 status ; } 
s#iwl_error_resp struct iwl_error_resp { t#__le32 error_type ; t#u8 cmd_id ; t#u8 reserved1 ; t#__le16 bad_cmd_seq_num ; t#__le32 error_info ; t#__le64 timestamp ; } 
s#iwl_card_state_notif struct iwl_card_state_notif { t#__le32 flags ; } 
s#iwl_add_sta_resp struct iwl_add_sta_resp { t#u8 status ; } 
s#iwl_rem_sta_resp struct iwl_rem_sta_resp { t#u8 status ; } 
s#iwl_sleep_notification struct iwl_sleep_notification { t#u8 pm_sleep_mode ; t#u8 pm_wakeup_src ; t#__le16 reserved ; t#__le32 sleep_time ; t#__le32 tsf_low ; t#__le32 bcon_timer ; } 
s#iwl_spectrum_resp struct iwl_spectrum_resp { t#u8 token ; t#u8 id ; t#__le16 status ; } 
s#statistics_rx_phy struct statistics_rx_phy { t#__le32 ina_cnt ; t#__le32 fina_cnt ; t#__le32 plcp_err ; t#__le32 crc32_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 false_alarm_cnt ; t#__le32 fina_sync_err_cnt ; t#__le32 sfd_timeout ; t#__le32 fina_timeout ; t#__le32 unresponded_rts ; t#__le32 rxe_frame_limit_overrun ; t#__le32 sent_ack_cnt ; t#__le32 sent_cts_cnt ; t#__le32 sent_ba_rsp_cnt ; t#__le32 dsp_self_kill ; t#__le32 mh_format_err ; t#__le32 re_acq_main_rssi_sum ; t#__le32 reserved3 ; } 
s#statistics_rx_non_phy struct statistics_rx_non_phy { t#__le32 bogus_cts ; t#__le32 bogus_ack ; t#__le32 non_bssid_frames ; t#__le32 filtered_frames ; t#__le32 non_channel_beacons ; t#__le32 channel_beacons ; t#__le32 num_missed_bcon ; t#__le32 adc_rx_saturation_time ; t#__le32 ina_detection_search_time ; t#__le32 beacon_silence_rssi_a ; t#__le32 beacon_silence_rssi_b ; t#__le32 beacon_silence_rssi_c ; t#__le32 interference_data_flag ; t#__le32 channel_load ; t#__le32 dsp_false_alarms ; t#__le32 beacon_rssi_a ; t#__le32 beacon_rssi_b ; t#__le32 beacon_rssi_c ; t#__le32 beacon_energy_a ; t#__le32 beacon_energy_b ; t#__le32 beacon_energy_c ; } 
s#statistics_rx_ht_phy struct statistics_rx_ht_phy { t#__le32 plcp_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 crc32_err ; t#__le32 mh_format_err ; t#__le32 agg_crc32_good ; t#__le32 agg_mpdu_cnt ; t#__le32 agg_cnt ; t#__le32 unsupport_mcs ; } 
s#statistics_rx struct statistics_rx { s#statistics_rx_phy ofdm ; s#statistics_rx_phy cck ; s#statistics_rx_non_phy general ; s#statistics_rx_ht_phy ofdm_ht ; } 
s#statistics_tx_non_phy_agg struct statistics_tx_non_phy_agg { t#__le32 ba_timeout ; t#__le32 ba_reschedule_frames ; t#__le32 scd_query_agg_frame_cnt ; t#__le32 scd_query_no_agg ; t#__le32 scd_query_agg ; t#__le32 scd_query_mismatch ; t#__le32 frame_not_ready ; t#__le32 underrun ; t#__le32 bt_prio_kill ; t#__le32 rx_ba_rsp_cnt ; } 
s#statistics_tx struct statistics_tx { t#__le32 preamble_cnt ; t#__le32 rx_detected_cnt ; t#__le32 bt_prio_defer_cnt ; t#__le32 bt_prio_kill_cnt ; t#__le32 few_bytes_cnt ; t#__le32 cts_timeout ; t#__le32 ack_timeout ; t#__le32 expected_ack_cnt ; t#__le32 actual_ack_cnt ; t#__le32 dump_msdu_cnt ; t#__le32 burst_abort_next_frame_mismatch_cnt ; t#__le32 burst_abort_missing_next_frame_cnt ; t#__le32 cts_timeout_collision ; t#__le32 ack_or_ba_timeout_collision ; s#statistics_tx_non_phy_agg agg ; t#__le32 reserved1 ; } 
s#statistics_dbg struct statistics_dbg { t#__le32 burst_check ; t#__le32 burst_count ; t#__le32 wait_for_silence_timeout_cnt ; t#__le32 reserved [ 3 ] ; } 
s#statistics_div struct statistics_div { t#__le32 tx_on_a ; t#__le32 tx_on_b ; t#__le32 exec_time ; t#__le32 probe_time ; t#__le32 reserved1 ; t#__le32 reserved2 ; } 
s#statistics_general_common struct statistics_general_common { t#__le32 temperature ; s#statistics_dbg dbg ; t#__le32 sleep_time ; t#__le32 slots_out ; t#__le32 slots_idle ; t#__le32 ttl_timestamp ; s#statistics_div div ; t#__le32 rx_enable_counter ; t#__le32 num_of_sos_states ; } 
s#statistics_general struct statistics_general { s#statistics_general_common common ; t#__le32 reserved2 ; t#__le32 reserved3 ; } 
s#iwl_notif_statistics struct iwl_notif_statistics { t#__le32 flag ; s#statistics_rx rx ; s#statistics_tx tx ; s#statistics_general general ; } 
s#iwl_compressed_ba_resp struct iwl_compressed_ba_resp { t#__le32 sta_addr_lo32 ; t#__le16 sta_addr_hi16 ; t#__le16 reserved ; t#u8 sta_id ; t#u8 tid ; t#__le16 seq_ctl ; t#__le64 bitmap ; t#__le16 scd_flow ; t#__le16 scd_ssn ; } 
s#iwl_missed_beacon_notif struct iwl_missed_beacon_notif { t#__le32 consecutive_missed_beacons ; t#__le32 total_missed_becons ; t#__le32 num_expected_beacons ; t#__le32 num_recvd_beacons ; } 
s#iwl_rx_packet struct iwl_rx_packet { t#__le32 len_n_flags ; s#iwl_cmd_header hdr ; union { s#iwl3945_rx_frame rx_frame ; s#iwl3945_tx_resp tx_resp ; s#iwl3945_beacon_notif beacon_status ; s#iwl_alive_resp alive_frame ; s#iwl_spectrum_notification spectrum_notif ; s#iwl_csa_notification csa_notif ; s#iwl_error_resp err_resp ; s#iwl_card_state_notif card_state_notif ; s#iwl_add_sta_resp add_sta ; s#iwl_rem_sta_resp rem_sta ; s#iwl_sleep_notification sleep_notif ; s#iwl_spectrum_resp spectrum ; s#iwl_notif_statistics stats ; s#iwl_compressed_ba_resp compressed_ba ; s#iwl_missed_beacon_notif missed_beacon ; t#__le32 status ; t#u8 raw [ 0 ] ; } u ; } 
s#iwl_host_cmd struct iwl_host_cmd { const void * data ; unsigned long reply_page ; void ( * callback ) ( s#iwl_priv * , s#iwl_device_cmd * , s#iwl_rx_packet * ) ; t#u32 flags ; t#u16 len ; t#u8 id ; } 
s#iwl_cmd_meta struct iwl_cmd_meta { s#iwl_host_cmd * source ; void ( * callback ) ( s#iwl_priv * , s#iwl_device_cmd * , s#iwl_rx_packet * ) ; t#u32 flags ; t#dma_addr_t mapping ; t#__u32 len ; } 
s#iwl_tx_info struct iwl_tx_info { s#sk_buff * skb ; s#iwl_rxon_context * ctx ; } 
s#iwl_tx_queue struct iwl_tx_queue { s#iwl_queue q ; void * tfds ; s#iwl_device_cmd * * cmd ; s#iwl_cmd_meta * meta ; s#iwl_tx_info * txb ; unsigned long time_stamp ; t#u8 need_update ; t#u8 sched_retry ; t#u8 active ; t#u8 swq_id ; } 
s#iwl_dma_ptr struct iwl_dma_ptr { t#dma_addr_t dma ; void * addr ; t#size_t size ; } 
s#traffic_stats struct traffic_stats { } 
s#isr_statistics struct isr_statistics { t#u32 hw ; t#u32 sw ; t#u32 err_code ; t#u32 sch ; t#u32 alive ; t#u32 rfkill ; t#u32 ctkill ; t#u32 wakeup ; t#u32 rx ; t#u32 rx_handlers [ E#REPLY_MAX ] ; t#u32 tx ; t#u32 unhandled ; } 
s#iwl_powertable_cmd struct iwl_powertable_cmd { t#__le16 flags ; t#u8 keep_alive_seconds ; t#u8 debug_flags ; t#__le32 rx_data_timeout ; t#__le32 tx_data_timeout ; t#__le32 sleep_interval [ 5 ] ; t#__le32 keep_alive_beacons ; } 
s#iwl_power_mgr struct iwl_power_mgr { s#iwl_powertable_cmd sleep_cmd ; s#iwl_powertable_cmd sleep_cmd_next ; int debug_sleep_level_override ; t#bool pci_pm ; } 
s#sta_id_modify struct sta_id_modify { t#u8 addr [ 6 ] ; t#__le16 reserved1 ; t#u8 sta_id ; t#u8 modify_mask ; t#__le16 reserved2 ; } 
s#iwl4965_keyinfo struct iwl4965_keyinfo { t#__le16 key_flags ; t#u8 tkip_rx_tsc_byte2 ; t#u8 reserved1 ; t#__le16 tkip_rx_ttak [ 5 ] ; t#u8 key_offset ; t#u8 reserved2 ; t#u8 key [ 16 ] ; } 
s#iwl_legacy_addsta_cmd struct iwl_legacy_addsta_cmd { t#u8 mode ; t#u8 reserved [ 3 ] ; s#sta_id_modify sta ; s#iwl4965_keyinfo key ; t#__le32 station_flags ; t#__le32 station_flags_msk ; t#__le16 tid_disable_tx ; t#__le16 rate_n_flags ; t#u8 add_immediate_ba_tid ; t#u8 remove_immediate_ba_tid ; t#__le16 add_immediate_ba_ssn ; t#__le16 sleep_tx_count ; t#__le16 reserved2 ; } 
s#iwl_ht_agg struct iwl_ht_agg { t#u16 txq_id ; t#u16 frame_count ; t#u16 wait_for_ba ; t#u16 start_idx ; t#u64 bitmap ; t#u32 rate_n_flags ; t#u8 state ; } 
s#iwl_tid_data struct iwl_tid_data { t#u16 seq_number ; t#u16 tfds_in_queue ; s#iwl_ht_agg agg ; } 
s#iwl_hw_key struct iwl_hw_key { t#u32 cipher ; int keylen ; t#u8 keyidx ; t#u8 key [ 32 ] ; } 
s#iwl_link_qual_general_params struct iwl_link_qual_general_params { t#u8 flags ; t#u8 mimo_delimiter ; t#u8 single_stream_ant_msk ; t#u8 dual_stream_ant_msk ; t#u8 start_rate_index [ 4 ] ; } 
s#iwl_link_qual_agg_params struct iwl_link_qual_agg_params { t#__le16 agg_time_limit ; t#u8 agg_dis_start_th ; t#u8 agg_frame_cnt_limit ; t#__le32 reserved ; } 
s#iwl_link_quality_cmd struct iwl_link_quality_cmd { t#u8 sta_id ; t#u8 reserved1 ; t#__le16 control ; s#iwl_link_qual_general_params general_params ; s#iwl_link_qual_agg_params agg_params ; struct { t#__le32 rate_n_flags ; } rs_table [ 16 ] ; t#__le32 reserved2 ; } 
s#iwl_station_entry struct iwl_station_entry { s#iwl_legacy_addsta_cmd sta ; s#iwl_tid_data tid [ 9 ] ; t#u8 used , ctxid ; s#iwl_hw_key keyinfo ; s#iwl_link_quality_cmd * lq ; } 
s#iwl_eeprom_calib_measure struct iwl_eeprom_calib_measure { t#u8 temperature ; t#u8 gain_idx ; t#u8 actual_pow ; t#s8 pa_det ; } 
s#iwl_eeprom_calib_ch_info struct iwl_eeprom_calib_ch_info { t#u8 ch_num ; s#iwl_eeprom_calib_measure measurements [ ( 2 ) ] [ ( 3 ) ] ; } 
s#iwl_eeprom_calib_subband_info struct iwl_eeprom_calib_subband_info { t#u8 ch_from ; t#u8 ch_to ; s#iwl_eeprom_calib_ch_info ch1 ; s#iwl_eeprom_calib_ch_info ch2 ; } 
s#iwl_eeprom_calib_info struct iwl_eeprom_calib_info { t#u8 saturation_power24 ; t#u8 saturation_power52 ; t#__le16 voltage ; s#iwl_eeprom_calib_subband_info band_info [ ( 8 ) ] ; } 
s#iwl39_statistics_rx_phy struct iwl39_statistics_rx_phy { t#__le32 ina_cnt ; t#__le32 fina_cnt ; t#__le32 plcp_err ; t#__le32 crc32_err ; t#__le32 overrun_err ; t#__le32 early_overrun_err ; t#__le32 crc32_good ; t#__le32 false_alarm_cnt ; t#__le32 fina_sync_err_cnt ; t#__le32 sfd_timeout ; t#__le32 fina_timeout ; t#__le32 unresponded_rts ; t#__le32 rxe_frame_limit_overrun ; t#__le32 sent_ack_cnt ; t#__le32 sent_cts_cnt ; } 
s#iwl39_statistics_rx_non_phy struct iwl39_statistics_rx_non_phy { t#__le32 bogus_cts ; t#__le32 bogus_ack ; t#__le32 non_bssid_frames ; t#__le32 filtered_frames ; t#__le32 non_channel_beacons ; } 
s#iwl39_statistics_rx struct iwl39_statistics_rx { s#iwl39_statistics_rx_phy ofdm ; s#iwl39_statistics_rx_phy cck ; s#iwl39_statistics_rx_non_phy general ; } 
s#iwl39_statistics_tx struct iwl39_statistics_tx { t#__le32 preamble_cnt ; t#__le32 rx_detected_cnt ; t#__le32 bt_prio_defer_cnt ; t#__le32 bt_prio_kill_cnt ; t#__le32 few_bytes_cnt ; t#__le32 cts_timeout ; t#__le32 ack_timeout ; t#__le32 expected_ack_cnt ; t#__le32 actual_ack_cnt ; } 
s#iwl39_statistics_div struct iwl39_statistics_div { t#__le32 tx_on_a ; t#__le32 tx_on_b ; t#__le32 exec_time ; t#__le32 probe_time ; } 
s#iwl39_statistics_general struct iwl39_statistics_general { t#__le32 temperature ; s#statistics_dbg dbg ; t#__le32 sleep_time ; t#__le32 slots_out ; t#__le32 slots_idle ; t#__le32 ttl_timestamp ; s#iwl39_statistics_div div ; } 
s#iwl3945_notif_statistics struct iwl3945_notif_statistics { t#__le32 flag ; s#iwl39_statistics_rx rx ; s#iwl39_statistics_tx tx ; s#iwl39_statistics_general general ; } 
s#iwl3945_clip_group struct iwl3945_clip_group { const t#s8 clip_powers [ ( 4 + 8 ) ] ; } 
s#iwl_rx_phy_res struct iwl_rx_phy_res { t#u8 non_cfg_phy_cnt ; t#u8 cfg_phy_cnt ; t#u8 stat_id ; t#u8 reserved1 ; t#__le64 timestamp ; t#__le32 beacon_time_stamp ; t#__le16 phy_flags ; t#__le16 channel ; t#u8 non_cfg_phy_buf [ 32 ] ; t#__le32 rate_n_flags ; t#__le16 byte_count ; t#__le16 frame_time ; } 
s#iwl_sensitivity_ranges struct iwl_sensitivity_ranges { t#u16 min_nrg_cck ; t#u16 max_nrg_cck ; t#u16 nrg_th_cck ; t#u16 nrg_th_ofdm ; t#u16 auto_corr_min_ofdm ; t#u16 auto_corr_min_ofdm_mrc ; t#u16 auto_corr_min_ofdm_x1 ; t#u16 auto_corr_min_ofdm_mrc_x1 ; t#u16 auto_corr_max_ofdm ; t#u16 auto_corr_max_ofdm_mrc ; t#u16 auto_corr_max_ofdm_x1 ; t#u16 auto_corr_max_ofdm_mrc_x1 ; t#u16 auto_corr_max_cck ; t#u16 auto_corr_max_cck_mrc ; t#u16 auto_corr_min_cck ; t#u16 auto_corr_min_cck_mrc ; t#u16 barker_corr_th_min ; t#u16 barker_corr_th_min_mrc ; t#u16 nrg_th_cca ; } 
s#iwl_hw_params struct iwl_hw_params { t#u8 max_txq_num ; t#u8 dma_chnl_num ; t#u16 scd_bc_tbls_size ; t#u32 tfd_size ; t#u8 tx_chains_num ; t#u8 rx_chains_num ; t#u8 valid_tx_ant ; t#u8 valid_rx_ant ; t#u16 max_rxq_size ; t#u16 max_rxq_log ; t#u32 rx_page_order ; t#u32 rx_wrt_ptr_reg ; t#u8 max_stations ; t#u8 ht40_channel ; t#u8 max_beacon_itrvl ; t#u32 max_inst_size ; t#u32 max_data_size ; t#u32 max_bsm_size ; t#u32 ct_kill_threshold ; t#u16 beacon_time_tsf_bits ; const s#iwl_sensitivity_ranges * sens ; } 
s##workqueue_struct
s#iwl_event_log struct iwl_event_log { t#bool ucode_trace ; t#u32 num_wraps ; t#u32 next_entry ; int non_wraps_count ; int wraps_once_count ; int wraps_more_count ; } 
s#iwl_priv struct iwl_priv { s#ieee80211_hw * hw ; s#ieee80211_channel * ieee_channels ; s#ieee80211_rate * ieee_rates ; s#iwl_cfg * cfg ; s#list_head free_frames ; int frames_count ; e#ieee80211_band band ; int alloc_rxb_page ; void ( * rx_handlers [ E#REPLY_MAX ] ) ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; s#iwl_spectrum_notification measure_report ; t#u8 measurement_status ; t#u32 ucode_beacon_time ; int missed_beacon_threshold ; t#u32 ibss_manager ; unsigned long plcp_jiffies ; s#iwl_force_reset force_reset [ E#IWL_MAX_FORCE_RESET ] ; s#iwl_channel_info * channel_info ; t#u8 channel_count ; t#s32 temperature ; t#s32 last_temperature ; s#iwl_calib_result calib_results [ E#IWL_CALIB_MAX ] ; unsigned long scan_start ; unsigned long scan_start_tsf ; void * scan_cmd ; e#ieee80211_band scan_band ; s#cfg80211_scan_request * scan_request ; s#ieee80211_vif * scan_vif ; t#bool is_internal_short_scan ; t#u8 scan_tx_ant [ E#IEEE80211_NUM_BANDS ] ; t#u8 mgmt_tx_ant ; t#spinlock_t lock ; t#spinlock_t hcmd_lock ; t#spinlock_t reg_lock ; s#mutex mutex ; s#pci_dev * pci_dev ; void * hw_base ; t#u32 hw_rev ; t#u32 hw_wa_rev ; t#u8 rev_id ; t#u8 valid_contexts ; t#u8 cmd_queue ; t#u8 sta_key_max_num ; s#mac_address addresses [ 1 ] ; int fw_index ; t#u32 ucode_ver ; s#fw_desc ucode_code ; s#fw_desc ucode_data ; s#fw_desc ucode_data_backup ; s#fw_desc ucode_init ; s#fw_desc ucode_init_data ; s#fw_desc ucode_boot ; e#ucode_type ucode_type ; t#u8 ucode_write_complete ; char firmware_name [ 25 ] ; s#iwl_rxon_context contexts [ E#NUM_IWL_RXON_CTX ] ; t#__le16 switch_channel ; s#iwl_init_alive_resp card_alive_init ; s#iwl_alive_resp card_alive ; t#u16 active_rate ; t#u8 start_calib ; s#iwl_sensitivity_data sensitivity_data ; s#iwl_chain_noise_data chain_noise_data ; t#__le16 sensitivity_tbl [ ( 11 ) ] ; s#iwl_ht_config current_ht_config ; t#u8 retry_rate ; t#wait_queue_head_t wait_command_queue ; int activity_timer_active ; s#iwl_rx_queue rxq ; s#iwl_tx_queue * txq ; unsigned long txq_ctx_active_msk ; s#iwl_dma_ptr kw ; s#iwl_dma_ptr scd_bc_tbls ; t#u32 scd_base_addr ; unsigned long status ; s#traffic_stats tx_stats ; s#traffic_stats rx_stats ; s#isr_statistics isr_stats ; s#iwl_power_mgr power_data ; t#u8 bssid [ 6 ] ; t#spinlock_t sta_lock ; int num_stations ; s#iwl_station_entry stations [ 32 ] ; unsigned long ucode_key_table ; unsigned long queue_stopped [ ( ( ( 32 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#atomic_t queue_stop_count [ 4 ] ; t#u8 is_open ; t#u8 mac80211_registered ; t#u8 * eeprom ; s#iwl_eeprom_calib_info * calib_info ; e#nl80211_iftype iw_mode ; t#u64 timestamp ; union { struct { void * shared_virt ; t#dma_addr_t shared_phys ; s#delayed_work thermal_periodic ; s#delayed_work rfkill_poll ; s#iwl3945_notif_statistics statistics ; t#u32 sta_supp_rates ; int last_rx_rssi ; t#u32 last_beacon_time ; t#u64 last_tsf ; const s#iwl3945_clip_group clip_groups [ 5 ] ; } _3945 ; struct { t#u8 agg_tids_count ; s#iwl_rx_phy_res last_phy_res ; t#bool last_phy_res_valid ; s#completion firmware_loading_complete ; t#u8 phy_calib_chain_noise_reset_cmd ; t#u8 phy_calib_chain_noise_gain_cmd ; s#iwl_notif_statistics statistics ; } _4965 ; } ; s#iwl_hw_params hw_params ; t#u32 inta_mask ; s#workqueue_struct * workqueue ; s#work_struct restart ; s#work_struct scan_completed ; s#work_struct rx_replenish ; s#work_struct abort_scan ; s#iwl_rxon_context * beacon_ctx ; s#sk_buff * beacon_skb ; s#work_struct start_internal_scan ; s#work_struct tx_flush ; s#tasklet_struct irq_tasklet ; s#delayed_work init_alive_start ; s#delayed_work alive_start ; s#delayed_work scan_check ; t#s8 tx_power_user_lmt ; t#s8 tx_power_device_lmt ; t#s8 tx_power_next ; t#u32 debug_level ; s#work_struct txpower_work ; t#u32 disable_sens_cal ; t#u32 disable_chain_noise_cal ; t#u32 disable_tx_power_cal ; s#work_struct run_time_calib_work ; s#timer_list statistics_periodic ; s#timer_list ucode_trace ; s#timer_list watchdog ; t#bool hw_ready ; s#iwl_event_log event_log ; s#led_classdev led ; unsigned long blink_on , blink_off ; t#bool led_registered ; } 
s#ieee80211_channel_switch struct ieee80211_channel_switch { t#u64 timestamp ; t#bool block_tx ; s#ieee80211_channel * channel ; t#u8 count ; } 
s#iwl_apm_ops struct iwl_apm_ops { int ( * init ) ( s#iwl_priv * ) ; void ( * config ) ( s#iwl_priv * ) ; } 
s#iwl_eeprom_ops struct iwl_eeprom_ops { const t#u32 regulatory_bands [ 7 ] ; int ( * acquire_semaphore ) ( s#iwl_priv * ) ; void ( * release_semaphore ) ( s#iwl_priv * ) ; } 
s#iwl_temp_ops struct iwl_temp_ops { void ( * temperature ) ( s#iwl_priv * ) ; } 
s#iwl_debugfs_ops struct iwl_debugfs_ops { t#ssize_t ( * rx_stats_read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * tx_stats_read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * general_stats_read ) ( s#file * , char * , t#size_t , t#loff_t * ) ; } 
s#iwl_lib_ops struct iwl_lib_ops { int ( * set_hw_params ) ( s#iwl_priv * ) ; void ( * txq_update_byte_cnt_tbl ) ( s#iwl_priv * , s#iwl_tx_queue * , t#u16 ) ; int ( * txq_attach_buf_to_tfd ) ( s#iwl_priv * , s#iwl_tx_queue * , t#dma_addr_t , t#u16 , t#u8 , t#u8 ) ; void ( * txq_free_tfd ) ( s#iwl_priv * , s#iwl_tx_queue * ) ; int ( * txq_init ) ( s#iwl_priv * , s#iwl_tx_queue * ) ; void ( * rx_handler_setup ) ( s#iwl_priv * ) ; void ( * init_alive_start ) ( s#iwl_priv * ) ; int ( * is_valid_rtc_data_addr ) ( t#u32 ) ; int ( * load_ucode ) ( s#iwl_priv * ) ; int ( * dump_nic_event_log ) ( s#iwl_priv * , t#bool , char * * , t#bool ) ; void ( * dump_nic_error_log ) ( s#iwl_priv * ) ; int ( * dump_fh ) ( s#iwl_priv * , char * * , t#bool ) ; int ( * set_channel_switch ) ( s#iwl_priv * , s#ieee80211_channel_switch * ) ; s#iwl_apm_ops apm_ops ; int ( * send_tx_power ) ( s#iwl_priv * ) ; void ( * update_chain_flags ) ( s#iwl_priv * ) ; s#iwl_eeprom_ops eeprom_ops ; s#iwl_temp_ops temp_ops ; t#bool ( * check_plcp_health ) ( s#iwl_priv * , s#iwl_rx_packet * ) ; s#iwl_debugfs_ops debugfs_ops ; } 
s#iwl_hcmd_ops struct iwl_hcmd_ops { int ( * rxon_assoc ) ( s#iwl_priv * , s#iwl_rxon_context * ) ; int ( * commit_rxon ) ( s#iwl_priv * , s#iwl_rxon_context * ) ; void ( * set_rxon_chain ) ( s#iwl_priv * , s#iwl_rxon_context * ) ; } 
s#iwl_hcmd_utils_ops struct iwl_hcmd_utils_ops { t#u16 ( * get_hcmd_size ) ( t#u8 , t#u16 ) ; t#u16 ( * build_addsta_hcmd ) ( const s#iwl_legacy_addsta_cmd * , t#u8 * ) ; int ( * request_scan ) ( s#iwl_priv * , s#ieee80211_vif * ) ; void ( * post_scan ) ( s#iwl_priv * ) ; } 
s#iwl_led_cmd struct iwl_led_cmd { t#__le32 interval ; t#u8 id ; t#u8 off ; t#u8 on ; t#u8 reserved ; } 
s#iwl_led_ops struct iwl_led_ops { int ( * cmd ) ( s#iwl_priv * , s#iwl_led_cmd * ) ; } 
s##iwl_nic_ops
s#iwl_legacy_ops struct iwl_legacy_ops { void ( * post_associate ) ( s#iwl_priv * ) ; void ( * config_ap ) ( s#iwl_priv * ) ; int ( * update_bcast_stations ) ( s#iwl_priv * ) ; int ( * manage_ibss_station ) ( s#iwl_priv * , s#ieee80211_vif * , t#bool ) ; } 
s#cfg80211_wowlan_trig_pkt_pattern struct cfg80211_wowlan_trig_pkt_pattern { t#u8 * mask , * pattern ; int pattern_len ; } 
s#cfg80211_wowlan struct cfg80211_wowlan { t#bool any , disconnect , magic_pkt ; s#cfg80211_wowlan_trig_pkt_pattern * patterns ; int n_patterns ; } 
e#set_key_cmd enum set_key_cmd { SET_KEY , DISABLE_KEY , } 
s#cfg80211_sched_scan_request struct cfg80211_sched_scan_request { s#cfg80211_ssid * ssids ; int n_ssids ; t#u32 n_channels ; t#u32 interval ; const t#u8 * ie ; t#size_t ie_len ; s#wiphy * wiphy ; s#net_device * dev ; s#ieee80211_channel * channels [ 0 ] ; } 
s#ieee80211_sched_scan_ies struct ieee80211_sched_scan_ies { t#u8 * ie [ E#IEEE80211_NUM_BANDS ] ; t#size_t len [ E#IEEE80211_NUM_BANDS ] ; } 
s#ieee80211_low_level_stats struct ieee80211_low_level_stats { unsigned int dot11ACKFailureCount ; unsigned int dot11RTSFailureCount ; unsigned int dot11FCSErrorCount ; unsigned int dot11RTSSuccessCount ; } 
e#sta_notify_cmd enum sta_notify_cmd { STA_NOTIFY_SLEEP , STA_NOTIFY_AWAKE , } 
s#ieee80211_tx_queue_params struct ieee80211_tx_queue_params { t#u16 txop ; t#u16 cw_min ; t#u16 cw_max ; t#u8 aifs ; t#bool uapsd ; } 
e#ieee80211_ampdu_mlme_action enum ieee80211_ampdu_mlme_action { IEEE80211_AMPDU_RX_START , IEEE80211_AMPDU_RX_STOP , IEEE80211_AMPDU_TX_START , IEEE80211_AMPDU_TX_STOP , IEEE80211_AMPDU_TX_OPERATIONAL , } 
s#survey_info struct survey_info { s#ieee80211_channel * channel ; t#u64 channel_time ; t#u64 channel_time_busy ; t#u64 channel_time_ext_busy ; t#u64 channel_time_rx ; t#u64 channel_time_tx ; t#u32 filled ; t#s8 noise ; } 
s#cfg80211_bitrate_mask struct cfg80211_bitrate_mask { struct { t#u32 legacy ; } control [ E#IEEE80211_NUM_BANDS ] ; } 
s#ieee80211_ops struct ieee80211_ops { void ( * tx ) ( s#ieee80211_hw * , s#sk_buff * ) ; int ( * start ) ( s#ieee80211_hw * ) ; void ( * stop ) ( s#ieee80211_hw * ) ; int ( * suspend ) ( s#ieee80211_hw * , s#cfg80211_wowlan * ) ; int ( * resume ) ( s#ieee80211_hw * ) ; int ( * add_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * change_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#nl80211_iftype , t#bool ) ; void ( * remove_interface ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; int ( * config ) ( s#ieee80211_hw * , t#u32 ) ; void ( * bss_info_changed ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) ; t#u64 ( * prepare_multicast ) ( s#ieee80211_hw * , s#netdev_hw_addr_list * ) ; void ( * configure_filter ) ( s#ieee80211_hw * , unsigned int , unsigned int * , t#u64 ) ; int ( * set_tim ) ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) ; int ( * set_key ) ( s#ieee80211_hw * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) ; void ( * update_tkip_key ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_key_conf * , s#ieee80211_sta * , t#u32 , t#u16 * ) ; int ( * hw_scan ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_scan_request * ) ; int ( * sched_scan_start ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_sched_scan_request * , s#ieee80211_sched_scan_ies * ) ; void ( * sched_scan_stop ) ( s#ieee80211_hw * , s#ieee80211_vif * ) ; void ( * sw_scan_start ) ( s#ieee80211_hw * ) ; void ( * sw_scan_complete ) ( s#ieee80211_hw * ) ; int ( * get_stats ) ( s#ieee80211_hw * , s#ieee80211_low_level_stats * ) ; void ( * get_tkip_seq ) ( s#ieee80211_hw * , t#u8 , t#u32 * , t#u16 * ) ; int ( * set_frag_threshold ) ( s#ieee80211_hw * , t#u32 ) ; int ( * set_rts_threshold ) ( s#ieee80211_hw * , t#u32 ) ; int ( * sta_add ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) ; int ( * sta_remove ) ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) ; void ( * sta_notify ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#sta_notify_cmd , s#ieee80211_sta * ) ; int ( * conf_tx ) ( s#ieee80211_hw * , t#u16 , const s#ieee80211_tx_queue_params * ) ; t#u64 ( * get_tsf ) ( s#ieee80211_hw * ) ; void ( * set_tsf ) ( s#ieee80211_hw * , t#u64 ) ; void ( * reset_tsf ) ( s#ieee80211_hw * ) ; int ( * tx_last_beacon ) ( s#ieee80211_hw * ) ; int ( * ampdu_action ) ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_ampdu_mlme_action , s#ieee80211_sta * , t#u16 , t#u16 * , t#u8 ) ; int ( * get_survey ) ( s#ieee80211_hw * , int , s#survey_info * ) ; void ( * rfkill_poll ) ( s#ieee80211_hw * ) ; void ( * set_coverage_class ) ( s#ieee80211_hw * , t#u8 ) ; void ( * flush ) ( s#ieee80211_hw * , t#bool ) ; void ( * channel_switch ) ( s#ieee80211_hw * , s#ieee80211_channel_switch * ) ; int ( * napi_poll ) ( s#ieee80211_hw * , int ) ; int ( * set_antenna ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; int ( * get_antenna ) ( s#ieee80211_hw * , t#u32 * , t#u32 * ) ; int ( * remain_on_channel ) ( s#ieee80211_hw * , s#ieee80211_channel * , e#nl80211_channel_type , int ) ; int ( * cancel_remain_on_channel ) ( s#ieee80211_hw * ) ; int ( * offchannel_tx ) ( s#ieee80211_hw * , s#sk_buff * , s#ieee80211_channel * , e#nl80211_channel_type , unsigned int ) ; int ( * offchannel_tx_cancel_wait ) ( s#ieee80211_hw * ) ; int ( * set_ringparam ) ( s#ieee80211_hw * , t#u32 , t#u32 ) ; void ( * get_ringparam ) ( s#ieee80211_hw * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) ; t#bool ( * tx_frames_pending ) ( s#ieee80211_hw * ) ; int ( * set_bitrate_mask ) ( s#ieee80211_hw * , s#ieee80211_vif * , const s#cfg80211_bitrate_mask * ) ; } 
s#iwl_ops struct iwl_ops { const s#iwl_lib_ops * lib ; const s#iwl_hcmd_ops * hcmd ; const s#iwl_hcmd_utils_ops * utils ; const s#iwl_led_ops * led ; const s#iwl_nic_ops * nic ; const s#iwl_legacy_ops * legacy ; const s#ieee80211_ops * ieee80211_ops ; } 
s#iwl_mod_params struct iwl_mod_params { int sw_crypto ; int disable_hw_scan ; int num_of_queues ; int disable_11n ; int amsdu_size_8K ; int antenna ; int restart_fw ; } 
s#iwl_base_params struct iwl_base_params { int eeprom_size ; int num_of_queues ; int num_of_ampdu_queues ; t#u32 pll_cfg_val ; t#bool set_l0s ; t#bool use_bsm ; t#u16 led_compensation ; int chain_noise_num_beacons ; t#u8 plcp_delta_threshold ; unsigned int wd_timeout ; t#bool temperature_kelvin ; t#u32 max_event_log_size ; const t#bool ucode_tracing ; const t#bool sensitivity_calib_by_driver ; const t#bool chain_noise_calib_by_driver ; } 
e#iwl_led_mode enum iwl_led_mode { IWL_LED_DEFAULT , IWL_LED_RF_STATE , IWL_LED_BLINK , } 
s#iwl_cfg struct iwl_cfg { const char * name ; const char * fw_name_pre ; const unsigned int ucode_api_max ; const unsigned int ucode_api_min ; t#u8 valid_tx_ant ; t#u8 valid_rx_ant ; unsigned int sku ; t#u16 eeprom_ver ; t#u16 eeprom_calib_ver ; const s#iwl_ops * ops ; const s#iwl_mod_params * mod_params ; s#iwl_base_params * base_params ; t#u8 scan_rx_antennas [ E#IEEE80211_NUM_BANDS ] ; e#iwl_led_mode led_mode ; } 
iwl_legacy_alloc_all s#ieee80211_hw * iwl_legacy_alloc_all ( s#iwl_cfg * ) 
iwl_legacy_init_geos int iwl_legacy_init_geos ( s#iwl_priv * ) 
iwl_legacy_free_geos void iwl_legacy_free_geos ( s#iwl_priv * ) 
iwl_legacy_is_ht40_tx_allowed t#bool iwl_legacy_is_ht40_tx_allowed ( s#iwl_priv * , s#iwl_rxon_context * , s#ieee80211_sta_ht_cap * ) 
iwl_legacy_send_rxon_timing int iwl_legacy_send_rxon_timing ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_set_rxon_hwcrypto void iwl_legacy_set_rxon_hwcrypto ( s#iwl_priv * , s#iwl_rxon_context * , int ) 
iwl_legacy_check_rxon_cmd int iwl_legacy_check_rxon_cmd ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_full_rxon_required int iwl_legacy_full_rxon_required ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_get_lowest_plcp t#u8 iwl_legacy_get_lowest_plcp ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_set_rxon_ht void iwl_legacy_set_rxon_ht ( s#iwl_priv * , s#iwl_ht_config * ) 
iwl_legacy_get_single_channel_number t#u8 iwl_legacy_get_single_channel_number ( s#iwl_priv * , e#ieee80211_band ) 
iwl_legacy_set_rxon_channel int iwl_legacy_set_rxon_channel ( s#iwl_priv * , s#ieee80211_channel * , s#iwl_rxon_context * ) 
iwl_legacy_set_flags_for_band void iwl_legacy_set_flags_for_band ( s#iwl_priv * , s#iwl_rxon_context * , e#ieee80211_band , s#ieee80211_vif * ) 
iwl_legacy_connection_init_rx_config void iwl_legacy_connection_init_rx_config ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_set_rate void iwl_legacy_set_rate ( s#iwl_priv * ) 
iwl_legacy_chswitch_done void iwl_legacy_chswitch_done ( s#iwl_priv * , t#bool ) 
iwl_legacy_rx_csa void iwl_legacy_rx_csa ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 
iwl_legacy_print_rx_config_cmd void iwl_legacy_print_rx_config_cmd ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_irq_handle_error void iwl_legacy_irq_handle_error ( s#iwl_priv * ) 
iwl_legacy_apm_stop void iwl_legacy_apm_stop ( s#iwl_priv * ) 
iwl_legacy_apm_init int iwl_legacy_apm_init ( s#iwl_priv * ) 
iwl_legacy_set_tx_power int iwl_legacy_set_tx_power ( s#iwl_priv * , t#s8 , t#bool ) 
iwl_legacy_send_bt_config extern void iwl_legacy_send_bt_config ( s#iwl_priv * ) 
iwl_legacy_send_statistics_request extern int iwl_legacy_send_statistics_request ( s#iwl_priv * , t#u8 , t#bool ) 
iwl_legacy_rx_pm_sleep_notif void iwl_legacy_rx_pm_sleep_notif ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 
iwl_legacy_rx_pm_debug_statistics_notif void iwl_legacy_rx_pm_debug_statistics_notif ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 
iwl_legacy_rx_reply_error void iwl_legacy_rx_reply_error ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 
iwl_legacy_mac_conf_tx int iwl_legacy_mac_conf_tx ( s#ieee80211_hw * , t#u16 , const s#ieee80211_tx_queue_params * ) 
iwl_legacy_mac_tx_last_beacon int iwl_legacy_mac_tx_last_beacon ( s#ieee80211_hw * ) 
iwl_legacy_mac_add_interface int iwl_legacy_mac_add_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
iwl_legacy_mac_remove_interface void iwl_legacy_mac_remove_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
iwl_legacy_alloc_txq_mem int iwl_legacy_alloc_txq_mem ( s#iwl_priv * ) 
iwl_legacy_txq_mem void iwl_legacy_txq_mem ( s#iwl_priv * ) 
iwl_legacy_mac_change_interface int iwl_legacy_mac_change_interface ( s#ieee80211_hw * , s#ieee80211_vif * , e#nl80211_iftype , t#bool ) 
iwl_legacy_bg_watchdog void iwl_legacy_bg_watchdog ( unsigned long ) 
iwl_legacy_setup_watchdog void iwl_legacy_setup_watchdog ( s#iwl_priv * ) 
iwl_legacy_usecs_to_beacons t#u32 iwl_legacy_usecs_to_beacons ( s#iwl_priv * , t#u32 , t#u32 ) 
iwl_legacy_add_beacon_time t#__le32 iwl_legacy_add_beacon_time ( s#iwl_priv * , t#u32 , t#u32 , t#u32 ) 
iwl_legacy_pci_suspend int iwl_legacy_pci_suspend ( s#device * ) 
iwl_legacy_pci_resume int iwl_legacy_pci_resume ( s#device * ) 
iwl_legacy_pm_ops extern const s#dev_pm_ops iwl_legacy_pm_ops 
iwl_legacy_mac_config int iwl_legacy_mac_config ( s#ieee80211_hw * , t#u32 ) 
iwl_legacy_mac_reset_tsf void iwl_legacy_mac_reset_tsf ( s#ieee80211_hw * ) 
iwl_legacy_mac_bss_info_changed void iwl_legacy_mac_bss_info_changed ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) 
iwl_legacy_isr t#irqreturn_t iwl_legacy_isr ( int , void * ) 
s#ieee80211_tx_rate struct ieee80211_tx_rate { t#s8 idx ; t#u8 count ; t#u8 flags ; } 
s#ieee80211_tx_info struct ieee80211_tx_info { t#u32 flags ; t#u8 band ; t#u8 antenna_sel_tx ; t#u8 pad [ 2 ] ; union { struct { union { struct { s#ieee80211_tx_rate rates [ 5 ] ; t#s8 rts_cts_rate_idx ; } ; unsigned long jiffies ; } ; s#ieee80211_vif * vif ; s#ieee80211_key_conf * hw_key ; s#ieee80211_sta * sta ; } control ; struct { s#ieee80211_tx_rate rates [ 5 ] ; t#u8 ampdu_ack_len ; int ack_signal ; t#u8 ampdu_len ; } status ; struct { s#ieee80211_tx_rate driver_rates [ 5 ] ; void * rate_driver_data [ 24 / sizeof ( void * ) ] ; } ; void * driver_data [ 40 / sizeof ( void * ) ] ; } ; } 
iwl_legacy_tx_cmd_protection void iwl_legacy_tx_cmd_protection ( s#iwl_priv * , s#ieee80211_tx_info * , t#__le16 , t#__le32 * ) 

/* drivers/net/wireless/iwlegacy/iwl-eeprom.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_eeprom_query_addr const t#u8 * iwl_legacy_eeprom_query_addr ( const s#iwl_priv * , t#size_t ) 
iwl_legacy_eeprom_query16 t#u16 iwl_legacy_eeprom_query16 ( const s#iwl_priv * , t#size_t ) 
iwl_legacy_eeprom_init int iwl_legacy_eeprom_init ( s#iwl_priv * ) 
iwl_legacy_eeprom_free void iwl_legacy_eeprom_free ( s#iwl_priv * ) 
iwl_legacy_init_channel_map int iwl_legacy_init_channel_map ( s#iwl_priv * ) 
iwl_legacy_free_channel_map void iwl_legacy_free_channel_map ( s#iwl_priv * ) 
iwl_legacy_get_channel_info const s#iwl_channel_info * iwl_legacy_get_channel_info ( const s#iwl_priv * , e#ieee80211_band , t#u16 ) 

/* drivers/net/wireless/iwlegacy/iwl-hcmd.o */
iwl_legacy_get_cmd_string const char * iwl_legacy_get_cmd_string ( t#u8 ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_send_cmd_sync int iwl_legacy_send_cmd_sync ( s#iwl_priv * , s#iwl_host_cmd * ) 
iwl_legacy_send_cmd int iwl_legacy_send_cmd ( s#iwl_priv * , s#iwl_host_cmd * ) 
iwl_legacy_send_cmd_pdu int iwl_legacy_send_cmd_pdu ( s#iwl_priv * , t#u8 , t#u16 , const void * ) 
iwl_legacy_send_cmd_pdu_async int iwl_legacy_send_cmd_pdu_async ( s#iwl_priv * , t#u8 , t#u16 , const void * , void ( * ) ( s#iwl_priv * , s#iwl_device_cmd * , s#iwl_rx_packet * ) ) 

/* drivers/net/wireless/iwlegacy/iwl-led.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_leds_init void iwl_legacy_leds_init ( s#iwl_priv * ) 
iwl_legacy_leds_exit void iwl_legacy_leds_exit ( s#iwl_priv * ) 

/* drivers/net/wireless/iwlegacy/iwl-power.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_power_update_mode int iwl_legacy_power_update_mode ( s#iwl_priv * , t#bool ) 
iwl_legacy_power_initialize void iwl_legacy_power_initialize ( s#iwl_priv * ) 

/* drivers/net/wireless/iwlegacy/iwl-rx.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
iwl_legacy_rx_queue_space int iwl_legacy_rx_queue_space ( const s#iwl_rx_queue * ) 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_rx_queue_update_write_ptr void iwl_legacy_rx_queue_update_write_ptr ( s#iwl_priv * , s#iwl_rx_queue * ) 
iwl_legacy_rx_queue_alloc int iwl_legacy_rx_queue_alloc ( s#iwl_priv * ) 
iwl_legacy_rx_spectrum_measure_notif void iwl_legacy_rx_spectrum_measure_notif ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 
iwl_legacy_recover_from_statistics void iwl_legacy_recover_from_statistics ( s#iwl_priv * , s#iwl_rx_packet * ) 
s#ieee80211_rx_status struct ieee80211_rx_status { t#u64 mactime ; e#ieee80211_band band ; int freq ; int signal ; int antenna ; int rate_idx ; int flag ; unsigned int rx_flags ; } 
iwl_legacy_set_decrypted_flag int iwl_legacy_set_decrypted_flag ( s#iwl_priv * , s#ieee80211_hdr * , t#u32 , s#ieee80211_rx_status * ) 

/* drivers/net/wireless/iwlegacy/iwl-scan.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_scan_cancel int iwl_legacy_scan_cancel ( s#iwl_priv * ) 
iwl_legacy_scan_cancel_timeout int iwl_legacy_scan_cancel_timeout ( s#iwl_priv * , unsigned long ) 
iwl_legacy_setup_rx_scan_handlers void iwl_legacy_setup_rx_scan_handlers ( s#iwl_priv * ) 
iwl_legacy_get_active_dwell_time t#u16 iwl_legacy_get_active_dwell_time ( s#iwl_priv * , e#ieee80211_band , t#u8 ) 
iwl_legacy_get_passive_dwell_time t#u16 iwl_legacy_get_passive_dwell_time ( s#iwl_priv * , e#ieee80211_band , s#ieee80211_vif * ) 
iwl_legacy_init_scan_params void iwl_legacy_init_scan_params ( s#iwl_priv * ) 
iwl_legacy_mac_hw_scan int iwl_legacy_mac_hw_scan ( s#ieee80211_hw * , s#ieee80211_vif * , s#cfg80211_scan_request * ) 
s#ieee80211_channel_sw_ie struct ieee80211_channel_sw_ie { t#u8 mode ; t#u8 new_ch_num ; t#u8 count ; } 
s#ieee80211_msrment_ie struct ieee80211_msrment_ie { t#u8 token ; t#u8 mode ; t#u8 type ; t#u8 request [ 0 ] ; } 
s#ieee80211_mgmt struct ieee80211_mgmt { t#__le16 frame_control ; t#__le16 duration ; t#u8 da [ 6 ] ; t#u8 sa [ 6 ] ; t#u8 bssid [ 6 ] ; t#__le16 seq_ctrl ; union { struct { t#__le16 auth_alg ; t#__le16 auth_transaction ; t#__le16 status_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) auth ; struct { t#__le16 reason_code ; } __attribute__ ( ( packed ) ) deauth ; struct { t#__le16 capab_info ; t#__le16 listen_interval ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) assoc_req ; struct { t#__le16 capab_info ; t#__le16 status_code ; t#__le16 aid ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) assoc_resp , reassoc_resp ; struct { t#__le16 capab_info ; t#__le16 listen_interval ; t#u8 current_ap [ 6 ] ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) reassoc_req ; struct { t#__le16 reason_code ; } __attribute__ ( ( packed ) ) disassoc ; struct { t#__le64 timestamp ; t#__le16 beacon_int ; t#__le16 capab_info ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) beacon ; struct { t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) probe_req ; struct { t#__le64 timestamp ; t#__le16 beacon_int ; t#__le16 capab_info ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) probe_resp ; struct { t#u8 category ; union { struct { t#u8 action_code ; t#u8 dialog_token ; t#u8 status_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) wme_action ; struct { t#u8 action_code ; t#u8 element_id ; t#u8 length ; s#ieee80211_channel_sw_ie sw_elem ; } __attribute__ ( ( packed ) ) chan_switch ; struct { t#u8 action_code ; t#u8 dialog_token ; t#u8 element_id ; t#u8 length ; s#ieee80211_msrment_ie msr_elem ; } __attribute__ ( ( packed ) ) measurement ; struct { t#u8 action_code ; t#u8 dialog_token ; t#__le16 capab ; t#__le16 timeout ; t#__le16 start_seq_num ; } __attribute__ ( ( packed ) ) addba_req ; struct { t#u8 action_code ; t#u8 dialog_token ; t#__le16 status ; t#__le16 capab ; t#__le16 timeout ; } __attribute__ ( ( packed ) ) addba_resp ; struct { t#u8 action_code ; t#__le16 params ; t#__le16 reason_code ; } __attribute__ ( ( packed ) ) delba ; struct { t#u8 action_code ; t#__le16 aux ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) plink_action ; struct { t#u8 action_code ; t#u8 variable [ 0 ] ; } __attribute__ ( ( packed ) ) mesh_action ; struct { t#u8 action ; t#u8 trans_id [ 2 ] ; } __attribute__ ( ( packed ) ) sa_query ; struct { t#u8 action ; t#u8 smps_control ; } __attribute__ ( ( packed ) ) ht_smps ; } u ; } __attribute__ ( ( packed ) ) action ; } u ; } 
iwl_legacy_fill_probe_req t#u16 iwl_legacy_fill_probe_req ( s#iwl_priv * , s#ieee80211_mgmt * , const t#u8 * , const t#u8 * , int , int ) 
iwl_legacy_setup_scan_deferred_work void iwl_legacy_setup_scan_deferred_work ( s#iwl_priv * ) 
iwl_legacy_cancel_scan_deferred_work void iwl_legacy_cancel_scan_deferred_work ( s#iwl_priv * ) 

/* drivers/net/wireless/iwlegacy/iwl-sta.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_send_add_sta int iwl_legacy_send_add_sta ( s#iwl_priv * , s#iwl_legacy_addsta_cmd * , t#u8 ) 
iwl_legacy_prep_station t#u8 iwl_legacy_prep_station ( s#iwl_priv * , s#iwl_rxon_context * , const t#u8 * , t#bool , s#ieee80211_sta * ) 
iwl_legacy_add_station_common int iwl_legacy_add_station_common ( s#iwl_priv * , s#iwl_rxon_context * , const t#u8 * , t#bool , s#ieee80211_sta * , t#u8 * ) 
iwl_legacy_remove_station int iwl_legacy_remove_station ( s#iwl_priv * , const t#u8 , const t#u8 * ) 
iwl_legacy_clear_ucode_stations void iwl_legacy_clear_ucode_stations ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_restore_stations void iwl_legacy_restore_stations ( s#iwl_priv * , s#iwl_rxon_context * ) 
iwl_legacy_get_free_ucode_key_index int iwl_legacy_get_free_ucode_key_index ( s#iwl_priv * ) 
iwl_legacy_dealloc_bcast_stations void iwl_legacy_dealloc_bcast_stations ( s#iwl_priv * ) 
iwl_legacy_send_lq_cmd int iwl_legacy_send_lq_cmd ( s#iwl_priv * , s#iwl_rxon_context * , s#iwl_link_quality_cmd * , t#u8 , t#bool ) 
iwl_legacy_mac_sta_remove int iwl_legacy_mac_sta_remove ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 

/* drivers/net/wireless/iwlegacy/iwl-tx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##iwl_nic_ops
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##workqueue_struct
iwl_legacy_txq_update_write_ptr void iwl_legacy_txq_update_write_ptr ( s#iwl_priv * , s#iwl_tx_queue * ) 
iwl_legacy_tx_queue_unmap void iwl_legacy_tx_queue_unmap ( s#iwl_priv * , int ) 
iwl_legacy_tx_queue_free void iwl_legacy_tx_queue_free ( s#iwl_priv * , int ) 
iwl_legacy_cmd_queue_unmap void iwl_legacy_cmd_queue_unmap ( s#iwl_priv * ) 
iwl_legacy_cmd_queue_free void iwl_legacy_cmd_queue_free ( s#iwl_priv * ) 
iwl_legacy_queue_space extern int iwl_legacy_queue_space ( const s#iwl_queue * ) 
iwl_legacy_tx_queue_init int iwl_legacy_tx_queue_init ( s#iwl_priv * , s#iwl_tx_queue * , int , t#u32 ) 
iwl_legacy_tx_queue_reset void iwl_legacy_tx_queue_reset ( s#iwl_priv * , s#iwl_tx_queue * , int , t#u32 ) 
iwl_legacy_tx_cmd_complete void iwl_legacy_tx_cmd_complete ( s#iwl_priv * , s#iwl_rx_mem_buffer * ) 

/* drivers/net/wireless/libertas/cmd.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s#lbs_mesh_stats struct lbs_mesh_stats { t#u32 fwd_bcast_cnt ; t#u32 fwd_unicast_cnt ; t#u32 fwd_drop_ttl ; t#u32 fwd_drop_rbt ; t#u32 fwd_drop_noroute ; t#u32 fwd_drop_nobuf ; t#u32 drop_blind ; t#u32 tx_failed_cnt ; } 
s#cmd_header struct cmd_header { t#__le16 command ; t#__le16 size ; t#__le16 seqnum ; t#__le16 result ; } 
s#cmd_ctrl_node struct cmd_ctrl_node { s#list_head list ; int result ; int ( * callback ) ( s#lbs_private * , unsigned long , s#cmd_header * ) ; unsigned long callback_arg ; s#cmd_header * cmdbuf ; t#u16 cmdwaitqwoken ; t#wait_queue_head_t cmdwait_q ; } 
s##workqueue_struct
E#WLAN_KEY_LEN_WEP104 13 
s#lbs_private struct lbs_private { s#net_device * dev ; t#u32 connect_status ; s#work_struct mcast_work ; t#u32 nr_of_multicastmacaddr ; t#u8 multicastlist [ 32 ] [ 6 ] ; s#wireless_dev * wdev ; t#bool wiphy_registered ; t#bool stopping ; s#cfg80211_scan_request * scan_req ; t#u8 assoc_bss [ 6 ] ; t#u8 disassoc_reason ; s#net_device * mesh_dev ; t#u32 mesh_connect_status ; s#lbs_mesh_stats mstats ; int mesh_open ; t#uint16_t mesh_tlv ; t#u8 mesh_ssid [ 32 + 1 ] ; t#u8 mesh_ssid_len ; s#dentry * debugfs_dir ; s#dentry * debugfs_debug ; s#dentry * debugfs_files [ 6 ] ; s#dentry * events_dir ; s#dentry * debugfs_events_files [ 6 ] ; s#dentry * regs_dir ; s#dentry * debugfs_regs_files [ 6 ] ; t#u32 mac_offset ; t#u32 bbp_offset ; t#u32 rf_offset ; t#u16 psmode ; t#u32 psstate ; t#u8 needtowakeup ; int is_deep_sleep ; int deep_sleep_required ; int is_auto_deep_sleep_enabled ; int wakeup_dev_required ; int is_activity_detected ; int auto_deep_sleep_timeout ; t#wait_queue_head_t ds_awake_q ; s#timer_list auto_deepsleep_timer ; int is_host_sleep_configured ; int is_host_sleep_activated ; t#wait_queue_head_t host_sleep_q ; void * card ; t#u8 fw_ready ; t#u8 surpriseremoved ; t#u8 setup_fw_on_resume ; int ( * hw_host_to_card ) ( s#lbs_private * , t#u8 , t#u8 * , t#u16 ) ; void ( * reset_card ) ( s#lbs_private * ) ; int ( * enter_deep_sleep ) ( s#lbs_private * ) ; int ( * exit_deep_sleep ) ( s#lbs_private * ) ; int ( * reset_deep_sleep_wakeup ) ( s#lbs_private * ) ; t#u32 fwrelease ; t#u32 fwcapinfo ; t#u16 regioncode ; t#u8 current_addr [ 6 ] ; t#u8 copied_hwaddr ; t#u8 dnld_sent ; t#u16 seqnum ; s#cmd_ctrl_node * cmd_array ; s#cmd_ctrl_node * cur_cmd ; s#list_head cmdfreeq ; s#list_head cmdpendingq ; s#timer_list command_timer ; int cmd_timed_out ; t#u8 resp_idx ; t#u8 resp_buf [ 2 ] [ 2312 ] ; t#u32 resp_len [ 2 ] ; s#kfifo event_fifo ; s#task_struct * main_thread ; t#wait_queue_head_t waitq ; s#workqueue_struct * work_thread ; t#u8 authtype_auto ; t#u8 wep_tx_key ; t#u8 wep_key [ 4 ] [ E#WLAN_KEY_LEN_WEP104 ] ; t#u8 wep_key_len [ 4 ] ; t#uint32_t wol_criteria ; t#uint8_t wol_gpio ; t#uint8_t wol_gap ; t#bool ehs_remove_supported ; int tx_pending_len ; t#u8 tx_pending_buf [ 2312 ] ; t#u8 txretrycount ; s#sk_buff * currenttxskb ; s#mutex lock ; t#spinlock_t driver_lock ; t#u16 mac_control ; t#u8 radio_on ; t#u8 cur_rate ; t#u8 channel ; t#s16 txpower_cur ; t#s16 txpower_min ; t#s16 txpower_max ; s#delayed_work scan_work ; int scan_channel ; t#wait_queue_head_t scan_q ; t#bool internal_scan ; unsigned long last_scan ; } 
lbs_cmd_copyback int lbs_cmd_copyback ( s#lbs_private * , unsigned long , s#cmd_header * ) 
s#host_wol_rule struct host_wol_rule { t#uint8_t rule_no ; t#uint8_t rule_ops ; t#__le16 sig_offset ; t#__le16 sig_length ; t#__le16 reserve ; t#__be32 sig_mask ; t#__be32 signature ; } 
s#wol_config struct wol_config { t#uint8_t action ; t#uint8_t pattern ; t#uint8_t no_rules_in_cmd ; t#uint8_t result ; s#host_wol_rule rule [ 16 ] ; } 
lbs_host_sleep_cfg int lbs_host_sleep_cfg ( s#lbs_private * , t#uint32_t , s#wol_config * ) 
__lbs_cmd int __lbs_cmd ( s#lbs_private * , t#uint16_t , s#cmd_header * , int , int ( * ) ( s#lbs_private * , unsigned long , s#cmd_header * ) , unsigned long ) 

/* drivers/net/wireless/libertas/main.o */
lbs_debug extern unsigned int lbs_debug 
lbs_disablemesh unsigned int lbs_disablemesh 
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
lbs_host_to_card_done void lbs_host_to_card_done ( s#lbs_private * ) 
lbs_suspend int lbs_suspend ( s#lbs_private * ) 
lbs_resume int lbs_resume ( s#lbs_private * ) 
lbs_add_card s#lbs_private * lbs_add_card ( void * , s#device * ) 
lbs_remove_card void lbs_remove_card ( s#lbs_private * ) 
lbs_start_card int lbs_start_card ( s#lbs_private * ) 
lbs_stop_card void lbs_stop_card ( s#lbs_private * ) 
lbs_queue_event void lbs_queue_event ( s#lbs_private * , t#u32 ) 
lbs_notify_command_response void lbs_notify_command_response ( s#lbs_private * , t#u8 ) 
s#lbs_fw_table struct lbs_fw_table { int model ; const char * helper ; const char * fwname ; } 
lbs_get_firmware int lbs_get_firmware ( s#device * , const char * , const char * , t#u32 , const s#lbs_fw_table * , const s#firmware * * , const s#firmware * * ) 

/* drivers/net/wireless/libertas/rx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##cmd_ctrl_node
s##workqueue_struct
lbs_process_rxed_packet int lbs_process_rxed_packet ( s#lbs_private * , s#sk_buff * ) 

/* drivers/net/wireless/libertas/tx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##cmd_ctrl_node
s##workqueue_struct
lbs_send_tx_feedback void lbs_send_tx_feedback ( s#lbs_private * , t#u32 ) 

/* drivers/net/wireless/mwifiex/cmdevt.o */
s##libipw_device
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s#mwifiex_802_11_ssid struct mwifiex_802_11_ssid { t#u32 ssid_len ; t#u8 ssid [ 32 ] ; } 
s#ieee_types_fh_param_set struct ieee_types_fh_param_set { t#u8 element_id ; t#u8 len ; t#__le16 dwell_time ; t#u8 hop_set ; t#u8 hop_pattern ; t#u8 hop_index ; } 
s#ieee_types_ds_param_set struct ieee_types_ds_param_set { t#u8 element_id ; t#u8 len ; t#u8 current_chan ; } 
u#ieee_types_phy_param_set union ieee_types_phy_param_set { s#ieee_types_fh_param_set fh_param_set ; s#ieee_types_ds_param_set ds_param_set ; } 
s#ieee_types_cf_param_set struct ieee_types_cf_param_set { t#u8 element_id ; t#u8 len ; t#u8 cfp_cnt ; t#u8 cfp_period ; t#u16 cfp_max_duration ; t#u16 cfp_duration_remaining ; } 
s#ieee_types_ibss_param_set struct ieee_types_ibss_param_set { t#u8 element_id ; t#u8 len ; t#__le16 atim_window ; } 
u#ieee_types_ss_param_set union ieee_types_ss_param_set { s#ieee_types_cf_param_set cf_param_set ; s#ieee_types_ibss_param_set ibss_param_set ; } 
s#ieee_types_vendor_header struct ieee_types_vendor_header { t#u8 element_id ; t#u8 len ; t#u8 oui [ 3 ] ; t#u8 oui_type ; t#u8 oui_subtype ; t#u8 version ; } 
s#ieee_types_wmm_ac_parameters struct ieee_types_wmm_ac_parameters { t#u8 aci_aifsn_bitmap ; t#u8 ecw_bitmap ; t#__le16 tx_op_limit ; } 
E#IEEE80211_MAX_QUEUES 4 
s#ieee_types_wmm_parameter struct ieee_types_wmm_parameter { s#ieee_types_vendor_header vend_hdr ; t#u8 qos_info_bitmap ; t#u8 reserved ; s#ieee_types_wmm_ac_parameters ac_params [ E#IEEE80211_MAX_QUEUES ] ; } 
s#ieee80211_ht_cap struct ieee80211_ht_cap { t#__le16 cap_info ; t#u8 ampdu_params_info ; s#ieee80211_mcs_info mcs ; t#__le16 extended_ht_cap_info ; t#__le32 tx_BF_cap_info ; t#u8 antenna_selection_info ; } 
s#ieee80211_ht_info struct ieee80211_ht_info { t#u8 control_chan ; t#u8 ht_param ; t#__le16 operation_mode ; t#__le16 stbc_param ; t#u8 basic_set [ 16 ] ; } 
s#ieee_types_header struct ieee_types_header { t#u8 element_id ; t#u8 len ; } 
s#ieee_obss_scan_param struct ieee_obss_scan_param { t#u16 obss_scan_passive_dwell ; t#u16 obss_scan_active_dwell ; t#u16 bss_chan_width_trigger_scan_int ; t#u16 obss_scan_passive_total ; t#u16 obss_scan_active_total ; t#u16 bss_width_chan_trans_delay ; t#u16 obss_scan_active_threshold ; } 
s#ieee_types_obss_scan_param struct ieee_types_obss_scan_param { s#ieee_types_header ieee_hdr ; s#ieee_obss_scan_param obss_scan ; } 
s#ieee_types_vendor_specific struct ieee_types_vendor_specific { s#ieee_types_vendor_header vend_hdr ; t#u8 data [ 256 - sizeof ( struct ieee_types_vendor_header ) ] ; } 
s#ieee_types_generic struct ieee_types_generic { s#ieee_types_header ieee_hdr ; t#u8 data [ 256 - sizeof ( struct ieee_types_header ) ] ; } 
s#mwifiex_bssdescriptor struct mwifiex_bssdescriptor { t#u8 mac_address [ 6 ] ; s#mwifiex_802_11_ssid ssid ; t#u32 privacy ; t#s32 rssi ; t#u32 channel ; t#u32 freq ; t#u16 beacon_period ; t#u8 erp_flags ; t#u32 bss_mode ; t#u8 supported_rates [ 14 ] ; t#u8 data_rates [ 14 ] ; t#u16 bss_band ; t#u64 network_tsf ; t#u8 time_stamp [ 8 ] ; u#ieee_types_phy_param_set phy_param_set ; u#ieee_types_ss_param_set ss_param_set ; t#u16 cap_info_bitmap ; s#ieee_types_wmm_parameter wmm_ie ; t#u8 disable_11n ; s#ieee80211_ht_cap * bcn_ht_cap ; t#u16 ht_cap_offset ; s#ieee80211_ht_info * bcn_ht_info ; t#u16 ht_info_offset ; t#u8 * bcn_bss_co_2040 ; t#u16 bss_co_2040_offset ; t#u8 * bcn_ext_cap ; t#u16 ext_cap_offset ; s#ieee_types_obss_scan_param * bcn_obss_scan ; t#u16 overlap_bss_offset ; s#ieee_types_vendor_specific * bcn_wpa_ie ; t#u16 wpa_offset ; s#ieee_types_generic * bcn_rsn_ie ; t#u16 rsn_offset ; s#ieee_types_generic * bcn_wapi_ie ; t#u16 wapi_offset ; t#u8 * beacon_buf ; t#u32 beacon_buf_size ; t#u32 beacon_buf_size_max ; } 
s#mwifiex_current_bss_params struct mwifiex_current_bss_params { s#mwifiex_bssdescriptor bss_descriptor ; t#u8 wmm_enabled ; t#u8 wmm_uapsd_enabled ; t#u8 band ; t#u32 num_of_rates ; t#u8 data_rates [ 14 ] ; } 
e#MWIFIEX_802_11_WEP_STATUS enum MWIFIEX_802_11_WEP_STATUS { MWIFIEX_802_11_WEP_ENABLED , MWIFIEX_802_11_WEP_DISABLED , } 
s#mwifiex_802_11_security struct mwifiex_802_11_security { t#u8 wpa_enabled ; t#u8 wpa2_enabled ; t#u8 wapi_enabled ; t#u8 wapi_key_on ; e#MWIFIEX_802_11_WEP_STATUS wep_status ; t#u32 authentication_mode ; t#u32 encryption_mode ; } 
s#mwifiex_wep_key struct mwifiex_wep_key { t#u32 length ; t#u32 key_index ; t#u32 key_length ; t#u8 key_material [ 16 ] ; } 
s#mwifiex_ie_type_key_param_set struct mwifiex_ie_type_key_param_set { t#__le16 type ; t#__le16 length ; t#__le16 key_type_id ; t#__le16 key_info ; t#__le16 key_len ; t#u8 key [ 50 ] ; } 
s#host_cmd_ds_802_11_key_material struct host_cmd_ds_802_11_key_material { t#__le16 action ; s#mwifiex_ie_type_key_param_set key_param_set ; } 
s#mwifiex_ra_list_tbl struct mwifiex_ra_list_tbl { s#list_head list ; s#sk_buff_head skb_head ; t#u8 ra [ 6 ] ; t#u32 total_pkts_size ; t#u32 is_11n_enabled ; } 
s#mwifiex_tid_tbl struct mwifiex_tid_tbl { s#list_head ra_list ; t#spinlock_t tid_tbl_lock ; s#mwifiex_ra_list_tbl * ra_list_curr ; } 
s#mwifiex_wmm_ac_status struct mwifiex_wmm_ac_status { t#u8 disabled ; t#u8 flow_required ; t#u8 flow_created ; } 
e#mwifiex_wmm_ac_e enum mwifiex_wmm_ac_e { WMM_AC_BK , WMM_AC_BE , WMM_AC_VI , WMM_AC_VO } 
s#mwifiex_wmm_desc struct mwifiex_wmm_desc { s#mwifiex_tid_tbl tid_tbl_ptr [ 8 ] ; t#u32 packets_out [ 8 ] ; t#spinlock_t ra_list_spinlock ; s#mwifiex_wmm_ac_status ac_status [ E#IEEE80211_MAX_QUEUES ] ; e#mwifiex_wmm_ac_e ac_down_graded_vals [ E#IEEE80211_MAX_QUEUES ] ; t#u32 drv_pkt_delay_max ; t#u8 queue_priority [ E#IEEE80211_MAX_QUEUES ] ; t#u32 user_pri_pkt_tx_ctrl [ 7 + 1 ] ; t#atomic_t tx_pkts_queued ; t#atomic_t highest_queued_prio ; } 
s#mwifiex_tx_aggr struct mwifiex_tx_aggr { t#u8 ampdu_user ; t#u8 ampdu_ap ; t#u8 amsdu ; } 
s#mwifiex_add_ba_param struct mwifiex_add_ba_param { t#u32 tx_win_size ; t#u32 rx_win_size ; t#u32 timeout ; } 
s#mwifiex_vendor_spec_cfg_ie struct mwifiex_vendor_spec_cfg_ie { t#u16 mask ; t#u16 flag ; t#u8 ie [ ( 256 ) ] ; } 
s#mwifiex_chan_freq_power struct mwifiex_chan_freq_power { t#u16 channel ; t#u32 freq ; t#u16 max_tx_power ; t#u8 unsupported ; } 
s##workqueue_struct
s#wps struct wps { t#u8 session_enable ; } 
s#mwifiex_private struct mwifiex_private { s#mwifiex_adapter * adapter ; t#u8 bss_index ; t#u8 bss_type ; t#u8 bss_role ; t#u8 bss_priority ; t#u8 bss_num ; t#u8 frame_type ; t#u8 curr_addr [ 6 ] ; t#u8 media_connected ; t#u32 num_tx_timeout ; s#net_device * netdev ; s#net_device_stats stats ; t#u16 curr_pkt_filter ; t#u32 bss_mode ; t#u32 pkt_tx_ctrl ; t#u16 tx_power_level ; t#u8 max_tx_power_level ; t#u8 min_tx_power_level ; t#u8 tx_rate ; t#u8 tx_htinfo ; t#u8 rxpd_htinfo ; t#u8 rxpd_rate ; t#u16 rate_bitmap ; t#u16 bitmap_rates [ 10 ] ; t#u32 data_rate ; t#u8 is_data_rate_auto ; t#u16 bcn_avg_factor ; t#u16 data_avg_factor ; t#s16 data_rssi_last ; t#s16 data_nf_last ; t#s16 data_rssi_avg ; t#s16 data_nf_avg ; t#s16 bcn_rssi_last ; t#s16 bcn_nf_last ; t#s16 bcn_rssi_avg ; t#s16 bcn_nf_avg ; s#mwifiex_bssdescriptor * attempted_bss_desc ; s#mwifiex_802_11_ssid prev_ssid ; t#u8 prev_bssid [ 6 ] ; s#mwifiex_current_bss_params curr_bss_params ; t#u16 beacon_period ; t#u16 listen_interval ; t#u16 atim_window ; t#u8 adhoc_channel ; t#u8 adhoc_is_link_sensed ; t#u8 adhoc_state ; s#mwifiex_802_11_security sec_info ; s#mwifiex_wep_key wep_key [ 4 ] ; t#u16 wep_key_curr_index ; t#u8 wpa_ie [ 256 ] ; t#u8 wpa_ie_len ; t#u8 wpa_is_gtk_set ; s#host_cmd_ds_802_11_key_material aes_key ; t#u8 wapi_ie [ 256 ] ; t#u8 wapi_ie_len ; t#u8 wmm_required ; t#u8 wmm_enabled ; t#u8 wmm_qosinfo ; s#mwifiex_wmm_desc wmm ; s#list_head tx_ba_stream_tbl_ptr ; t#spinlock_t tx_ba_stream_tbl_lock ; s#mwifiex_tx_aggr aggr_prio_tbl [ 8 ] ; s#mwifiex_add_ba_param add_ba_param ; t#u16 rx_seq [ 8 ] ; s#list_head rx_reorder_tbl_ptr ; t#spinlock_t rx_reorder_tbl_lock ; t#spinlock_t rx_pkt_lock ; t#u8 assoc_rsp_buf [ 500 ] ; t#u32 assoc_rsp_size ; t#u8 gen_ie_buf [ 256 ] ; t#u8 gen_ie_buf_len ; s#mwifiex_vendor_spec_cfg_ie vs_ie [ ( 8 ) ] ; t#u8 assoc_tlv_buf [ 256 ] ; t#u8 assoc_tlv_buf_len ; t#u8 * curr_bcn_buf ; t#u32 curr_bcn_size ; t#spinlock_t curr_bcn_buf_lock ; s#wireless_dev * wdev ; s#mwifiex_chan_freq_power cfp ; char version_str [ 128 ] ; s#dentry * dfs_dev_dir ; t#u8 nick_name [ 16 ] ; s#iw_statistics w_stats ; t#u16 current_key_index ; s#semaphore async_sem ; t#u8 scan_pending_on_block ; t#u8 report_scan_result ; s#cfg80211_scan_request * scan_request ; int scan_result_status ; int assoc_request ; t#u16 assoc_result ; int ibss_join_request ; t#u16 ibss_join_result ; t#bool disconnect ; t#u8 cfg_bssid [ 6 ] ; s#workqueue_struct * workqueue ; s#work_struct cfg_workqueue ; t#u8 country_code [ 3 ] ; s#wps wps ; t#u8 scan_block ; } 
s#mwifiex_bss_attr struct mwifiex_bss_attr { t#u8 bss_type ; t#u8 frame_type ; t#u8 active ; t#u8 bss_priority ; t#u8 bss_num ; } 
s#mwifiex_drv_mode struct mwifiex_drv_mode { t#u16 drv_mode ; t#u16 intf_num ; s#mwifiex_bss_attr * bss_attr ; } 
s#mwifiex_fw_image struct mwifiex_fw_image { t#u8 * helper_buf ; t#u32 helper_len ; t#u8 * fw_buf ; t#u32 fw_len ; } 
s#mwifiex_tx_param struct mwifiex_tx_param { t#u32 next_pkt_len ; } 
s#mwifiex_if_ops struct mwifiex_if_ops { int ( * init_if ) ( s#mwifiex_adapter * ) ; void ( * cleanup_if ) ( s#mwifiex_adapter * ) ; int ( * check_fw_status ) ( s#mwifiex_adapter * , t#u32 , int * ) ; int ( * prog_fw ) ( s#mwifiex_adapter * , s#mwifiex_fw_image * ) ; int ( * register_dev ) ( s#mwifiex_adapter * ) ; void ( * unregister_dev ) ( s#mwifiex_adapter * ) ; int ( * enable_int ) ( s#mwifiex_adapter * ) ; int ( * process_int_status ) ( s#mwifiex_adapter * ) ; int ( * host_to_card ) ( s#mwifiex_adapter * , t#u8 , t#u8 * , t#u32 , s#mwifiex_tx_param * ) ; int ( * wakeup ) ( s#mwifiex_adapter * ) ; int ( * wakeup_complete ) ( s#mwifiex_adapter * ) ; void ( * update_mp_end_port ) ( s#mwifiex_adapter * , t#u16 ) ; void ( * cleanup_mpa_buf ) ( s#mwifiex_adapter * ) ; } 
s#mwifiex_bss_prio_node struct mwifiex_bss_prio_node { s#list_head list ; s#mwifiex_private * priv ; } 
s#mwifiex_bss_prio_tbl struct mwifiex_bss_prio_tbl { s#list_head bss_prio_head ; t#spinlock_t bss_prio_lock ; s#mwifiex_bss_prio_node * bss_prio_cur ; } 
e#MWIFIEX_HARDWARE_STATUS enum MWIFIEX_HARDWARE_STATUS { MWIFIEX_HW_STATUS_READY , MWIFIEX_HW_STATUS_INITIALIZING , MWIFIEX_HW_STATUS_FW_READY , MWIFIEX_HW_STATUS_INIT_DONE , MWIFIEX_HW_STATUS_RESET , MWIFIEX_HW_STATUS_CLOSING , MWIFIEX_HW_STATUS_NOT_READY } 
s#cmd_ctrl_node struct cmd_ctrl_node { s#list_head list ; s#mwifiex_private * priv ; t#u32 cmd_oid ; t#u32 cmd_flag ; s#sk_buff * cmd_skb ; s#sk_buff * resp_skb ; void * data_buf ; t#u32 wait_q_enabled ; s#sk_buff * skb ; } 
s#ieee80211_country_ie_triplet struct ieee80211_country_ie_triplet { union { struct { t#u8 first_channel ; t#u8 num_channels ; t#s8 max_power ; } __attribute__ ( ( packed ) ) chans ; struct { t#u8 reg_extension_id ; t#u8 reg_class ; t#u8 coverage_class ; } __attribute__ ( ( packed ) ) ext ; } ; } 
s#mwifiex_802_11d_domain_reg struct mwifiex_802_11d_domain_reg { t#u8 country_code [ 3 ] ; t#u8 no_of_triplet ; s#ieee80211_country_ie_triplet triplet [ 83 ] ; } 
s#mwifiex_chan_scan_param_set struct mwifiex_chan_scan_param_set { t#u8 radio_type ; t#u8 chan_number ; t#u8 chan_scan_mode_bitmap ; t#__le16 min_scan_time ; t#__le16 max_scan_time ; } 
s#mwifiex_sleep_params struct mwifiex_sleep_params { t#u16 sp_error ; t#u16 sp_offset ; t#u16 sp_stable_time ; t#u8 sp_cal_control ; t#u8 sp_ext_sleep_clk ; t#u16 sp_reserved ; } 
s#mwifiex_sleep_period struct mwifiex_sleep_period { t#u16 period ; t#u16 reserved ; } 
s#mwifiex_hs_config_param struct mwifiex_hs_config_param { t#__le32 conditions ; t#u8 gpio ; t#u8 gap ; } 
s#mwifiex_dbg struct mwifiex_dbg { t#u32 num_cmd_host_to_card_failure ; t#u32 num_cmd_sleep_cfm_host_to_card_failure ; t#u32 num_tx_host_to_card_failure ; t#u32 num_event_deauth ; t#u32 num_event_disassoc ; t#u32 num_event_link_lost ; t#u32 num_cmd_deauth ; t#u32 num_cmd_assoc_success ; t#u32 num_cmd_assoc_failure ; t#u32 num_tx_timeout ; t#u32 num_cmd_timeout ; t#u16 timeout_cmd_id ; t#u16 timeout_cmd_act ; t#u16 last_cmd_id [ 5 ] ; t#u16 last_cmd_act [ 5 ] ; t#u16 last_cmd_index ; t#u16 last_cmd_resp_id [ 5 ] ; t#u16 last_cmd_resp_index ; t#u16 last_event [ 5 ] ; t#u16 last_event_index ; } 
s#mwifiex_wait_queue struct mwifiex_wait_queue { t#wait_queue_head_t wait ; t#u16 condition ; int status ; } 
s#mwifiex_adapter struct mwifiex_adapter { s#mwifiex_private * priv [ ( 1 ) ] ; t#u8 priv_num ; s#mwifiex_drv_mode * drv_mode ; const s#firmware * firmware ; s#device * dev ; t#bool surprise_removed ; t#u32 fw_release_number ; t#u32 revision_id ; t#u16 init_wait_q_woken ; t#wait_queue_head_t init_wait_q ; void * card ; s#mwifiex_if_ops if_ops ; t#atomic_t rx_pending ; t#atomic_t tx_pending ; t#atomic_t cmd_pending ; s#workqueue_struct * workqueue ; s#work_struct main_work ; s#mwifiex_bss_prio_tbl bss_prio_tbl [ ( 1 ) ] ; t#spinlock_t mwifiex_lock ; t#spinlock_t main_proc_lock ; t#u32 mwifiex_processing ; t#u16 max_tx_buf_size ; t#u16 tx_buf_size ; t#u16 curr_tx_buf_size ; t#u32 ioport ; e#MWIFIEX_HARDWARE_STATUS hw_status ; t#u16 number_of_antenna ; t#u32 fw_cap_info ; t#spinlock_t int_lock ; t#u8 int_status ; t#u32 event_cause ; s#sk_buff * event_skb ; t#u8 upld_buf [ ( 2312 ) ] ; t#u8 data_sent ; t#u8 cmd_sent ; t#u8 cmd_resp_received ; t#u8 event_received ; t#u8 data_received ; t#u16 seq_num ; s#cmd_ctrl_node * cmd_pool ; s#cmd_ctrl_node * curr_cmd ; t#spinlock_t mwifiex_cmd_lock ; t#u32 num_cmd_timeout ; t#u16 last_init_cmd ; s#timer_list cmd_timer ; s#list_head cmd_free_q ; t#spinlock_t cmd_free_q_lock ; s#list_head cmd_pending_q ; t#spinlock_t cmd_pending_q_lock ; s#list_head scan_pending_q ; t#spinlock_t scan_pending_q_lock ; t#u32 scan_processing ; t#u16 region_code ; s#mwifiex_802_11d_domain_reg domain_reg ; s#mwifiex_bssdescriptor * scan_table ; t#u32 num_in_scan_table ; t#u16 scan_probes ; t#u32 scan_mode ; t#u16 specific_scan_time ; t#u16 active_scan_time ; t#u16 passive_scan_time ; t#u8 bcn_buf [ 8000 ] ; t#u8 * bcn_buf_end ; t#u8 fw_bands ; t#u8 adhoc_start_band ; t#u8 config_bands ; s#mwifiex_chan_scan_param_set * scan_channels ; t#u8 tx_lock_flag ; s#mwifiex_sleep_params sleep_params ; s#mwifiex_sleep_period sleep_period ; t#u16 ps_mode ; t#u32 ps_state ; t#u8 need_to_wakeup ; t#u16 multiple_dtim ; t#u16 local_listen_interval ; t#u16 null_pkt_interval ; s#sk_buff * sleep_cfm ; t#u16 bcn_miss_time_out ; t#u16 adhoc_awake_period ; t#u8 is_deep_sleep ; t#u8 delay_null_pkt ; t#u16 delay_to_ps ; t#u16 enhanced_ps_mode ; t#u8 pm_wakeup_card_req ; t#u16 gen_null_pkt ; t#u16 pps_uapsd_mode ; t#u32 pm_wakeup_fw_try ; t#u8 is_hs_configured ; s#mwifiex_hs_config_param hs_cfg ; t#u8 hs_activated ; t#u16 hs_activate_wait_q_woken ; t#wait_queue_head_t hs_activate_wait_q ; t#bool is_suspended ; t#u8 event_body [ 1024 ] ; t#u32 hw_dot_11n_dev_cap ; t#u8 hw_dev_mcs_support ; t#u8 adhoc_11n_enabled ; t#u8 chan_offset ; s#mwifiex_dbg dbg ; t#u8 arp_filter [ 68 ] ; t#u32 arp_filter_size ; t#u16 cmd_wait_q_required ; s#mwifiex_wait_queue cmd_wait_q ; } 
mwifiex_process_sleep_confirm_resp void mwifiex_process_sleep_confirm_resp ( s#mwifiex_adapter * , t#u8 * , t#u32 ) 

/* drivers/net/wireless/mwifiex/join.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##libipw_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##workqueue_struct
mwifiex_deauthenticate int mwifiex_deauthenticate ( s#mwifiex_private * , t#u8 * ) 

/* drivers/net/wireless/mwifiex/main.o */
s##libipw_device
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##workqueue_struct
g_adapter extern s#mwifiex_adapter * g_adapter 
mwifiex_add_card int mwifiex_add_card ( void * , s#semaphore * , s#mwifiex_if_ops * ) 
mwifiex_remove_card int mwifiex_remove_card ( s#mwifiex_adapter * , s#semaphore * ) 

/* drivers/net/wireless/mwifiex/sta_ioctl.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##libipw_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##workqueue_struct
mwifiex_cancel_hs int mwifiex_cancel_hs ( s#mwifiex_private * , int ) 
mwifiex_enable_hs int mwifiex_enable_hs ( s#mwifiex_adapter * ) 

/* drivers/net/wireless/mwifiex/txrx.o */
s##libipw_device
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##workqueue_struct
mwifiex_handle_rx_packet int mwifiex_handle_rx_packet ( s#mwifiex_adapter * , s#sk_buff * ) 

/* drivers/net/wireless/mwifiex/util.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##libipw_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##workqueue_struct
mwifiex_init_shutdown_fw int mwifiex_init_shutdown_fw ( s#mwifiex_private * , t#u32 ) 

/* drivers/net/wireless/orinoco/hermes.o */
s#hermes_response struct hermes_response { t#u16 status , resp0 , resp1 , resp2 ; } 
s#hermes_ops struct hermes_ops { int ( * init ) ( s#hermes * ) ; int ( * cmd_wait ) ( s#hermes * , t#u16 , t#u16 , s#hermes_response * ) ; int ( * init_cmd_wait ) ( s#hermes * , t#u16 , t#u16 , t#u16 , t#u16 , s#hermes_response * ) ; int ( * allocate ) ( s#hermes * , t#u16 , t#u16 * ) ; int ( * read_ltv ) ( s#hermes * , int , t#u16 , unsigned , t#u16 * , void * ) ; int ( * write_ltv ) ( s#hermes * , int , t#u16 , t#u16 , const void * ) ; int ( * bap_pread ) ( s#hermes * , int , void * , int , t#u16 , t#u16 ) ; int ( * bap_pwrite ) ( s#hermes * , int , const void * , int , t#u16 , t#u16 ) ; int ( * read_pda ) ( s#hermes * , t#__le16 * , t#u32 , t#u16 ) ; int ( * program_init ) ( s#hermes * , t#u32 ) ; int ( * program_end ) ( s#hermes * ) ; int ( * program ) ( s#hermes * , const char * , t#u32 , t#u32 ) ; void ( * lock_irqsave ) ( t#spinlock_t * , unsigned long * ) ; void ( * unlock_irqrestore ) ( t#spinlock_t * , unsigned long * ) ; void ( * lock_irq ) ( t#spinlock_t * ) ; void ( * unlock_irq ) ( t#spinlock_t * ) ; } 
s#hermes struct hermes { void * iobase ; int reg_spacing ; t#u16 inten ; t#bool eeprom_pda ; const s#hermes_ops * ops ; void * priv ; } 
t#hermes_t typedef s#hermes hermes_t 
hermes_struct_init void hermes_struct_init ( t#hermes_t * , void * , int ) 

/* drivers/net/wireless/orinoco/main.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
orinoco_open int orinoco_open ( s#net_device * ) 
orinoco_stop int orinoco_stop ( s#net_device * ) 
orinoco_get_stats s#net_device_stats * orinoco_get_stats ( s#net_device * ) 
orinoco_set_multicast_list void orinoco_set_multicast_list ( s#net_device * ) 
orinoco_change_mtu int orinoco_change_mtu ( s#net_device * , int ) 
t#fwtype_t typedef enum { FIRMWARE_TYPE_AGERE , FIRMWARE_TYPE_INTERSIL , FIRMWARE_TYPE_SYMBOL } fwtype_t 
e#orinoco_alg enum orinoco_alg { ORINOCO_ALG_NONE , ORINOCO_ALG_WEP , ORINOCO_ALG_TKIP } 
s#key_params struct key_params { t#u8 * key ; t#u8 * seq ; int key_len ; int seq_len ; t#u32 cipher ; } 
s##crypto_hash
s##firmware
s#orinoco_private struct orinoco_private { void * card ; s#device * dev ; int ( * hard_reset ) ( s#orinoco_private * ) ; int ( * stop_fw ) ( s#orinoco_private * , int ) ; s#ieee80211_supported_band band ; s#ieee80211_channel channels [ 14 ] ; t#u32 cipher_suites [ 3 ] ; t#spinlock_t lock ; int hw_unavailable ; s#work_struct reset_work ; s#tasklet_struct rx_tasklet ; s#list_head rx_list ; int open ; t#u16 last_linkstatus ; s#work_struct join_work ; s#work_struct wevent_work ; s#net_device * ndev ; s#net_device_stats stats ; s#iw_statistics wstats ; t#hermes_t hw ; t#u16 txfid ; t#fwtype_t firmware_type ; int ibss_port ; int nicbuf_size ; t#u16 channel_mask ; unsigned int has_ibss : 1 ; unsigned int has_port3 : 1 ; unsigned int has_wep : 1 ; unsigned int has_big_wep : 1 ; unsigned int has_mwo : 1 ; unsigned int has_pm : 1 ; unsigned int has_preamble : 1 ; unsigned int has_sensitivity : 1 ; unsigned int has_hostscan : 1 ; unsigned int has_alt_txcntl : 1 ; unsigned int has_ext_scan : 1 ; unsigned int has_wpa : 1 ; unsigned int do_fw_download : 1 ; unsigned int broken_disableport : 1 ; unsigned int broken_monitor : 1 ; unsigned int prefer_port3 : 1 ; e#nl80211_iftype iw_mode ; e#orinoco_alg encode_alg ; t#u16 wep_restrict , tx_key ; s#key_params keys [ 4 ] ; int bitratemode ; char nick [ 32 + 1 ] ; char desired_essid [ 32 + 1 ] ; char desired_bssid [ 6 ] ; int bssid_fixed ; t#u16 frag_thresh , mwo_robust ; t#u16 channel ; t#u16 ap_density , rts_thresh ; t#u16 pm_on , pm_mcast , pm_period , pm_timeout ; t#u16 preamble ; t#u16 short_retry_limit , long_retry_limit ; t#u16 retry_lifetime ; s#iw_spy_data spy_data ; s#iw_public_data wireless_data ; int port_type , createibss ; int promiscuous , mc_count ; s#cfg80211_scan_request * scan_request ; s#work_struct process_scan ; s#list_head scan_list ; t#spinlock_t scan_lock ; t#u8 * wpa_ie ; int wpa_ie_len ; s#crypto_hash * rx_tfm_mic ; s#crypto_hash * tx_tfm_mic ; unsigned int wpa_enabled : 1 ; unsigned int tkip_cm_active : 1 ; unsigned int key_mgmt : 3 ; const s#firmware * cached_pri_fw ; const s#firmware * cached_fw ; s#notifier_block pm_notifier ; } 
orinoco_process_xmit_skb int orinoco_process_xmit_skb ( s#sk_buff * , s#net_device * , s#orinoco_private * , int * , t#u8 * ) 
orinoco_tx_timeout void orinoco_tx_timeout ( s#net_device * ) 
__orinoco_ev_rx extern void __orinoco_ev_rx ( s#net_device * , t#hermes_t * ) 
__orinoco_ev_info extern void __orinoco_ev_info ( s#net_device * , t#hermes_t * ) 
orinoco_interrupt extern t#irqreturn_t orinoco_interrupt ( int , void * ) 
orinoco_init extern int orinoco_init ( s#orinoco_private * ) 
alloc_orinocodev extern s#orinoco_private * alloc_orinocodev ( int , s#device * , int ( * ) ( s#orinoco_private * ) , int ( * ) ( s#orinoco_private * , int ) ) 
orinoco_if_add extern int orinoco_if_add ( s#orinoco_private * , unsigned long , unsigned int , const s#net_device_ops * ) 
orinoco_if_del extern void orinoco_if_del ( s#orinoco_private * ) 
free_orinocodev extern void free_orinocodev ( s#orinoco_private * ) 
orinoco_up extern int orinoco_up ( s#orinoco_private * ) 
orinoco_down extern void orinoco_down ( s#orinoco_private * ) 

/* drivers/net/wireless/p54/eeprom.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
p54_parse_eeprom int p54_parse_eeprom ( s#ieee80211_hw * , void * , int ) 
p54_read_eeprom int p54_read_eeprom ( s#ieee80211_hw * ) 

/* drivers/net/wireless/p54/fwio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
p54_parse_firmware int p54_parse_firmware ( s#ieee80211_hw * , const s#firmware * ) 

/* drivers/net/wireless/p54/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
p54_init_common s#ieee80211_hw * p54_init_common ( t#size_t ) 
p54_register_common int p54_register_common ( s#ieee80211_hw * , s#device * ) 
p54_free_common void p54_free_common ( s#ieee80211_hw * ) 
p54_unregister_common void p54_unregister_common ( s#ieee80211_hw * ) 

/* drivers/net/wireless/p54/txrx.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
p54_free_skb void p54_free_skb ( s#ieee80211_hw * , s#sk_buff * ) 
p54_rx int p54_rx ( s#ieee80211_hw * , s#sk_buff * ) 

/* drivers/net/wireless/rt2x00/rt2800lib.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#data_queue_desc struct data_queue_desc { unsigned short entry_num ; unsigned short data_size ; unsigned short desc_size ; unsigned short priv_size ; } 
e#data_queue_qid enum data_queue_qid { QID_AC_VO = 0 , QID_AC_VI = 1 , QID_AC_BE = 2 , QID_AC_BK = 3 , QID_HCCA = 4 , QID_MGMT = 13 , QID_RX = 14 , QID_OTHER = 15 , QID_BEACON , QID_ATIM , } 
E#Q_INDEX_MAX 3 
s#data_queue struct data_queue { s#rt2x00_dev * rt2x00dev ; s#queue_entry * entries ; e#data_queue_qid qid ; unsigned long flags ; s#mutex status_lock ; t#spinlock_t tx_lock ; t#spinlock_t index_lock ; unsigned int count ; unsigned short limit ; unsigned short threshold ; unsigned short length ; unsigned short index [ E#Q_INDEX_MAX ] ; unsigned short txop ; unsigned short aifs ; unsigned short cw_min ; unsigned short cw_max ; unsigned short data_size ; unsigned short desc_size ; unsigned short usb_endpoint ; unsigned short usb_maxpacket ; } 
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s#queue_entry struct queue_entry { unsigned long flags ; unsigned long last_action ; s#data_queue * queue ; s#sk_buff * skb ; unsigned int entry_idx ; void * priv_data ; } 
e#dev_state enum dev_state { STATE_DEEP_SLEEP = 0 , STATE_SLEEP = 1 , STATE_STANDBY = 2 , STATE_AWAKE = 3 , STATE_RADIO_ON , STATE_RADIO_OFF , STATE_RADIO_IRQ_ON , STATE_RADIO_IRQ_OFF , } 
s#link_qual struct link_qual { int rssi ; int false_cca ; t#u8 vgc_level ; t#u8 vgc_level_reg ; int rx_success ; int rx_failed ; int tx_success ; int tx_failed ; } 
e#ifs enum ifs { IFS_BACKOFF = 0 , IFS_SIFS = 1 , IFS_NEW_BACKOFF = 2 , IFS_NONE = 3 , } 
e#txop enum txop { TXOP_HTTXOP = 0 , TXOP_PIFS = 1 , TXOP_SIFS = 2 , TXOP_BACKOFF = 3 , } 
e#rate_modulation enum rate_modulation { RATE_MODE_CCK = 0 , RATE_MODE_OFDM = 1 , RATE_MODE_HT_MIX = 2 , RATE_MODE_HT_GREENFIELD = 3 , } 
e#cipher enum cipher { CIPHER_NONE = 0 , CIPHER_WEP64 = 1 , CIPHER_WEP128 = 2 , CIPHER_TKIP = 3 , CIPHER_AES = 4 , CIPHER_CKIP64 = 5 , CIPHER_CKIP128 = 6 , CIPHER_TKIP_NO_MIC = 7 , CIPHER_MAX = 4 , } 
s#txentry_desc struct txentry_desc { unsigned long flags ; t#u16 length ; t#u16 header_length ; union { struct { t#u16 length_high ; t#u16 length_low ; t#u16 signal ; t#u16 service ; e#ifs ifs ; } plcp ; struct { t#u16 mcs ; t#u8 stbc ; t#u8 ba_size ; t#u8 mpdu_density ; e#txop txop ; int wcid ; } ht ; } u ; e#rate_modulation rate_mode ; short retry_limit ; e#cipher cipher ; t#u16 key_idx ; t#u16 iv_offset ; t#u16 iv_len ; } 
s#rxdone_entry_desc struct rxdone_entry_desc { t#u64 timestamp ; int signal ; int rssi ; int size ; int flags ; int dev_flags ; t#u16 rate_mode ; t#u8 cipher ; t#u8 cipher_status ; t#__le32 iv [ 2 ] ; t#__le32 icv ; } 
s#rt2x00lib_crypto struct rt2x00lib_crypto { e#cipher cipher ; e#set_key_cmd cmd ; const t#u8 * address ; t#u32 bssidx ; t#u8 key [ 16 ] ; t#u8 tx_mic [ 8 ] ; t#u8 rx_mic [ 8 ] ; int wcid ; } 
s#rt2x00_intf struct rt2x00_intf { s#mutex beacon_skb_mutex ; s#queue_entry * beacon ; t#bool enable_beacon ; unsigned long delayed_flags ; t#spinlock_t seqlock ; t#u16 seqno ; } 
e#tsf_sync enum tsf_sync { TSF_SYNC_NONE = 0 , TSF_SYNC_INFRA = 1 , TSF_SYNC_ADHOC = 2 , TSF_SYNC_AP_NONE = 3 , } 
s#rt2x00intf_conf struct rt2x00intf_conf { e#nl80211_iftype type ; e#tsf_sync sync ; t#__le32 mac [ 2 ] ; t#__le32 bssid [ 2 ] ; } 
s#rt2x00lib_erp struct rt2x00lib_erp { int short_preamble ; int cts_protection ; t#u32 basic_rates ; int slot_time ; short sifs ; short pifs ; short difs ; short eifs ; t#u16 beacon_int ; t#u16 ht_opmode ; } 
e#antenna enum antenna { ANTENNA_SW_DIVERSITY = 0 , ANTENNA_A = 1 , ANTENNA_B = 2 , ANTENNA_HW_DIVERSITY = 3 , } 
s#antenna_setup struct antenna_setup { e#antenna rx ; e#antenna tx ; t#u8 rx_chain_num ; t#u8 tx_chain_num ; } 
s#rf_channel struct rf_channel { int channel ; t#u32 rf1 ; t#u32 rf2 ; t#u32 rf3 ; t#u32 rf4 ; } 
s#channel_info struct channel_info { unsigned int flags ; short max_power ; short default_power1 ; short default_power2 ; } 
s#rt2x00lib_conf struct rt2x00lib_conf { s#ieee80211_conf * conf ; s#rf_channel rf ; s#channel_info channel ; } 
s#rt2x00lib_ops struct rt2x00lib_ops { t#irq_handler_t irq_handler ; void ( * txstatus_tasklet ) ( unsigned long ) ; void ( * pretbtt_tasklet ) ( unsigned long ) ; void ( * tbtt_tasklet ) ( unsigned long ) ; void ( * rxdone_tasklet ) ( unsigned long ) ; void ( * autowake_tasklet ) ( unsigned long ) ; int ( * probe_hw ) ( s#rt2x00_dev * ) ; char * ( * get_firmware_name ) ( s#rt2x00_dev * ) ; int ( * check_firmware ) ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) ; int ( * load_firmware ) ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) ; int ( * initialize ) ( s#rt2x00_dev * ) ; void ( * uninitialize ) ( s#rt2x00_dev * ) ; t#bool ( * get_entry_state ) ( s#queue_entry * ) ; void ( * clear_entry ) ( s#queue_entry * ) ; int ( * set_device_state ) ( s#rt2x00_dev * , e#dev_state ) ; int ( * rfkill_poll ) ( s#rt2x00_dev * ) ; void ( * link_stats ) ( s#rt2x00_dev * , s#link_qual * ) ; void ( * reset_tuner ) ( s#rt2x00_dev * , s#link_qual * ) ; void ( * link_tuner ) ( s#rt2x00_dev * , s#link_qual * , const t#u32 ) ; void ( * gain_calibration ) ( s#rt2x00_dev * ) ; void ( * vco_calibration ) ( s#rt2x00_dev * ) ; void ( * watchdog ) ( s#rt2x00_dev * ) ; void ( * start_queue ) ( s#data_queue * ) ; void ( * kick_queue ) ( s#data_queue * ) ; void ( * stop_queue ) ( s#data_queue * ) ; void ( * flush_queue ) ( s#data_queue * , t#bool ) ; void ( * tx_dma_done ) ( s#queue_entry * ) ; void ( * write_tx_desc ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * write_tx_data ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * write_beacon ) ( s#queue_entry * , s#txentry_desc * ) ; void ( * clear_beacon ) ( s#queue_entry * ) ; int ( * get_tx_data_len ) ( s#queue_entry * ) ; void ( * fill_rxdone ) ( s#queue_entry * , s#rxdone_entry_desc * ) ; int ( * config_shared_key ) ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) ; int ( * config_pairwise_key ) ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) ; void ( * config_filter ) ( s#rt2x00_dev * , const unsigned int ) ; void ( * config_intf ) ( s#rt2x00_dev * , s#rt2x00_intf * , s#rt2x00intf_conf * , const unsigned int ) ; void ( * config_erp ) ( s#rt2x00_dev * , s#rt2x00lib_erp * , t#u32 ) ; void ( * config_ant ) ( s#rt2x00_dev * , s#antenna_setup * ) ; void ( * config ) ( s#rt2x00_dev * , s#rt2x00lib_conf * , const unsigned int ) ; int ( * sta_add ) ( s#rt2x00_dev * , s#ieee80211_vif * , s#ieee80211_sta * ) ; int ( * sta_remove ) ( s#rt2x00_dev * , int ) ; } 
s#rt2x00_ops struct rt2x00_ops { const char * name ; const unsigned int drv_data_size ; const unsigned int max_sta_intf ; const unsigned int max_ap_intf ; const unsigned int eeprom_size ; const unsigned int rf_size ; const unsigned int tx_queues ; const unsigned int extra_tx_headroom ; const s#data_queue_desc * rx ; const s#data_queue_desc * tx ; const s#data_queue_desc * bcn ; const s#data_queue_desc * atim ; const s#rt2x00lib_ops * lib ; const void * drv ; const s#ieee80211_ops * hw ; } 
e#led_type enum led_type { LED_TYPE_RADIO , LED_TYPE_ASSOC , LED_TYPE_ACTIVITY , LED_TYPE_QUALITY , } 
s#rt2x00_led struct rt2x00_led { s#rt2x00_dev * rt2x00dev ; s#led_classdev led_dev ; e#led_type type ; unsigned int flags ; } 
e#rt2x00_chip_intf enum rt2x00_chip_intf { RT2X00_CHIP_INTF_PCI , RT2X00_CHIP_INTF_PCIE , RT2X00_CHIP_INTF_USB , RT2X00_CHIP_INTF_SOC , } 
s#rt2x00_chip struct rt2x00_chip { t#u16 rt ; t#u16 rf ; t#u16 rev ; e#rt2x00_chip_intf intf ; } 
s#hw_mode_spec struct hw_mode_spec { unsigned int supported_bands ; unsigned int supported_rates ; unsigned int num_channels ; const s#rf_channel * channels ; const s#channel_info * channels_info ; s#ieee80211_sta_ht_cap ht ; } 
u#csr union csr { void * base ; void * cache ; } 
s#avg_val struct avg_val { int avg ; int avg_weight ; } 
s#link_ant struct link_ant { unsigned int flags ; s#antenna_setup active ; int rssi_history ; s#avg_val rssi_ant ; } 
s#link struct link { t#u32 count ; s#link_qual qual ; s#link_ant ant ; s#avg_val avg_rssi ; s#delayed_work work ; s#delayed_work watchdog_work ; s#delayed_work agc_work ; s#delayed_work vco_work ; } 
s##workqueue_struct
s#rt2x00_dev struct rt2x00_dev { s#device * dev ; const s#rt2x00_ops * ops ; void * drv_data ; s#ieee80211_hw * hw ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; e#ieee80211_band curr_band ; int curr_freq ; s#rt2x00_led led_radio ; s#rt2x00_led led_assoc ; s#rt2x00_led led_qual ; t#u16 led_mcu_reg ; unsigned long flags ; unsigned long cap_flags ; int irq ; const char * name ; s#rt2x00_chip chip ; s#hw_mode_spec spec ; s#antenna_setup default_ant ; u#csr csr ; s#mutex csr_mutex ; unsigned int packet_filter ; unsigned int intf_ap_count ; unsigned int intf_sta_count ; unsigned int intf_associated ; unsigned int intf_beaconing ; s#link link ; t#__le16 * eeprom ; t#u32 * rf ; short lna_gain ; t#u16 tx_power ; t#u8 short_retry ; t#u8 long_retry ; t#u8 rssi_offset ; t#u8 freq_offset ; t#u16 aid ; t#u16 beacon_int ; unsigned long last_beacon ; s#ieee80211_low_level_stats low_level_stats ; s#workqueue_struct * workqueue ; s#work_struct intf_work ; s#work_struct rxdone_work ; s#work_struct txdone_work ; s#delayed_work autowakeup_work ; s#work_struct sleep_work ; unsigned int data_queues ; s#data_queue * rx ; s#data_queue * tx ; s#data_queue * bcn ; s#data_queue * atim ; const s#firmware * fw ; struct { union { s#__kfifo kfifo ; t#u32 * type ; char ( * rectype ) [ 0 ] ; t#u32 * ptr ; const t#u32 * ptr_const ; } ; t#u32 buf [ 0 ] ; } txstatus_fifo ; s#timer_list txstatus_timer ; s#tasklet_struct txstatus_tasklet ; s#tasklet_struct pretbtt_tasklet ; s#tasklet_struct tbtt_tasklet ; s#tasklet_struct rxdone_tasklet ; s#tasklet_struct autowake_tasklet ; int rf_channel ; t#spinlock_t irqmask_lock ; } 
rt2800_mcu_request void rt2800_mcu_request ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u8 , const t#u8 ) 
rt2800_wait_csr_ready int rt2800_wait_csr_ready ( s#rt2x00_dev * ) 
rt2800_wait_wpdma_ready int rt2800_wait_wpdma_ready ( s#rt2x00_dev * ) 
rt2800_disable_wpdma void rt2800_disable_wpdma ( s#rt2x00_dev * ) 
rt2800_check_firmware int rt2800_check_firmware ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) 
rt2800_load_firmware int rt2800_load_firmware ( s#rt2x00_dev * , const t#u8 * , const t#size_t ) 
rt2800_write_tx_data void rt2800_write_tx_data ( s#queue_entry * , s#txentry_desc * ) 
rt2800_process_rxwi void rt2800_process_rxwi ( s#queue_entry * , s#rxdone_entry_desc * ) 
rt2800_txdone_entry void rt2800_txdone_entry ( s#queue_entry * , t#u32 ) 
rt2800_txdone void rt2800_txdone ( s#rt2x00_dev * ) 
rt2800_write_beacon void rt2800_write_beacon ( s#queue_entry * , s#txentry_desc * ) 
rt2800_clear_beacon void rt2800_clear_beacon ( s#queue_entry * ) 
rt2800_rfkill_poll int rt2800_rfkill_poll ( s#rt2x00_dev * ) 
rt2800_config_shared_key int rt2800_config_shared_key ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) 
rt2800_config_pairwise_key int rt2800_config_pairwise_key ( s#rt2x00_dev * , s#rt2x00lib_crypto * , s#ieee80211_key_conf * ) 
rt2800_sta_add int rt2800_sta_add ( s#rt2x00_dev * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2800_sta_remove int rt2800_sta_remove ( s#rt2x00_dev * , int ) 
rt2800_config_filter void rt2800_config_filter ( s#rt2x00_dev * , const unsigned int ) 
rt2800_config_intf void rt2800_config_intf ( s#rt2x00_dev * , s#rt2x00_intf * , s#rt2x00intf_conf * , const unsigned int ) 
rt2800_config_erp void rt2800_config_erp ( s#rt2x00_dev * , s#rt2x00lib_erp * , t#u32 ) 
rt2800_config_ant void rt2800_config_ant ( s#rt2x00_dev * , s#antenna_setup * ) 
rt2800_gain_calibration void rt2800_gain_calibration ( s#rt2x00_dev * ) 
rt2800_vco_calibration void rt2800_vco_calibration ( s#rt2x00_dev * ) 
rt2800_config void rt2800_config ( s#rt2x00_dev * , s#rt2x00lib_conf * , const unsigned int ) 
rt2800_link_stats void rt2800_link_stats ( s#rt2x00_dev * , s#link_qual * ) 
rt2800_reset_tuner void rt2800_reset_tuner ( s#rt2x00_dev * , s#link_qual * ) 
rt2800_link_tuner void rt2800_link_tuner ( s#rt2x00_dev * , s#link_qual * , const t#u32 ) 
rt2800_enable_radio int rt2800_enable_radio ( s#rt2x00_dev * ) 
rt2800_disable_radio void rt2800_disable_radio ( s#rt2x00_dev * ) 
rt2800_efuse_detect int rt2800_efuse_detect ( s#rt2x00_dev * ) 
rt2800_read_eeprom_efuse void rt2800_read_eeprom_efuse ( s#rt2x00_dev * ) 
rt2800_validate_eeprom int rt2800_validate_eeprom ( s#rt2x00_dev * ) 
rt2800_init_eeprom int rt2800_init_eeprom ( s#rt2x00_dev * ) 
rt2800_probe_hw_mode int rt2800_probe_hw_mode ( s#rt2x00_dev * ) 
rt2800_get_tkip_seq void rt2800_get_tkip_seq ( s#ieee80211_hw * , t#u8 , t#u32 * , t#u16 * ) 
rt2800_set_rts_threshold int rt2800_set_rts_threshold ( s#ieee80211_hw * , t#u32 ) 
rt2800_conf_tx int rt2800_conf_tx ( s#ieee80211_hw * , t#u16 , const s#ieee80211_tx_queue_params * ) 
rt2800_get_tsf t#u64 rt2800_get_tsf ( s#ieee80211_hw * ) 
rt2800_ampdu_action int rt2800_ampdu_action ( s#ieee80211_hw * , s#ieee80211_vif * , e#ieee80211_ampdu_mlme_action , s#ieee80211_sta * , t#u16 , t#u16 * , t#u8 ) 
rt2800_get_survey int rt2800_get_survey ( s#ieee80211_hw * , int , s#survey_info * ) 
rt2800_enable_wlan_rt3290 int rt2800_enable_wlan_rt3290 ( s#rt2x00_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00dev.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##workqueue_struct
rt2x00lib_get_bssidx t#u32 rt2x00lib_get_bssidx ( s#rt2x00_dev * , s#ieee80211_vif * ) 
rt2x00lib_beacondone void rt2x00lib_beacondone ( s#rt2x00_dev * ) 
rt2x00lib_pretbtt void rt2x00lib_pretbtt ( s#rt2x00_dev * ) 
rt2x00lib_dmastart void rt2x00lib_dmastart ( s#queue_entry * ) 
rt2x00lib_dmadone void rt2x00lib_dmadone ( s#queue_entry * ) 
s#txdone_entry_desc struct txdone_entry_desc { unsigned long flags ; int retry ; } 
rt2x00lib_txdone void rt2x00lib_txdone ( s#queue_entry * , s#txdone_entry_desc * ) 
rt2x00lib_txdone_noinfo void rt2x00lib_txdone_noinfo ( s#queue_entry * , t#u32 ) 
rt2x00lib_rxdone void rt2x00lib_rxdone ( s#queue_entry * ) 
rt2x00lib_probe_dev int rt2x00lib_probe_dev ( s#rt2x00_dev * ) 
rt2x00lib_remove_dev void rt2x00lib_remove_dev ( s#rt2x00_dev * ) 
rt2x00lib_suspend int rt2x00lib_suspend ( s#rt2x00_dev * , t#pm_message_t ) 
rt2x00lib_resume int rt2x00lib_resume ( s#rt2x00_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00mac.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rt2x00mac_tx void rt2x00mac_tx ( s#ieee80211_hw * , s#sk_buff * ) 
rt2x00mac_start int rt2x00mac_start ( s#ieee80211_hw * ) 
rt2x00mac_stop void rt2x00mac_stop ( s#ieee80211_hw * ) 
rt2x00mac_add_interface int rt2x00mac_add_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
rt2x00mac_remove_interface void rt2x00mac_remove_interface ( s#ieee80211_hw * , s#ieee80211_vif * ) 
rt2x00mac_config int rt2x00mac_config ( s#ieee80211_hw * , t#u32 ) 
rt2x00mac_configure_filter void rt2x00mac_configure_filter ( s#ieee80211_hw * , unsigned int , unsigned int * , t#u64 ) 
rt2x00mac_set_tim int rt2x00mac_set_tim ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) 
rt2x00mac_set_key int rt2x00mac_set_key ( s#ieee80211_hw * , e#set_key_cmd , s#ieee80211_vif * , s#ieee80211_sta * , s#ieee80211_key_conf * ) 
rt2x00mac_sta_add int rt2x00mac_sta_add ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2x00mac_sta_remove int rt2x00mac_sta_remove ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_sta * ) 
rt2x00mac_sw_scan_start void rt2x00mac_sw_scan_start ( s#ieee80211_hw * ) 
rt2x00mac_sw_scan_complete void rt2x00mac_sw_scan_complete ( s#ieee80211_hw * ) 
rt2x00mac_get_stats int rt2x00mac_get_stats ( s#ieee80211_hw * , s#ieee80211_low_level_stats * ) 
rt2x00mac_bss_info_changed void rt2x00mac_bss_info_changed ( s#ieee80211_hw * , s#ieee80211_vif * , s#ieee80211_bss_conf * , t#u32 ) 
rt2x00mac_conf_tx int rt2x00mac_conf_tx ( s#ieee80211_hw * , t#u16 , const s#ieee80211_tx_queue_params * ) 
rt2x00mac_rfkill_poll void rt2x00mac_rfkill_poll ( s#ieee80211_hw * ) 
rt2x00mac_flush void rt2x00mac_flush ( s#ieee80211_hw * , t#bool ) 
rt2x00mac_set_antenna int rt2x00mac_set_antenna ( s#ieee80211_hw * , t#u32 , t#u32 ) 
rt2x00mac_get_antenna int rt2x00mac_get_antenna ( s#ieee80211_hw * , t#u32 * , t#u32 * ) 
rt2x00mac_get_ringparam void rt2x00mac_get_ringparam ( s#ieee80211_hw * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) 
rt2x00mac_tx_frames_pending t#bool rt2x00mac_tx_frames_pending ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rt2x00/rt2x00pci.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##workqueue_struct
s#rt2x00_field32 struct rt2x00_field32 { t#u32 bit_offset ; t#u32 bit_mask ; } 
rt2x00pci_regbusy_read int rt2x00pci_regbusy_read ( s#rt2x00_dev * , const unsigned int , const s#rt2x00_field32 , t#u32 * ) 
rt2x00pci_rxdone t#bool rt2x00pci_rxdone ( s#rt2x00_dev * ) 
rt2x00pci_flush_queue void rt2x00pci_flush_queue ( s#data_queue * , t#bool ) 
rt2x00pci_initialize int rt2x00pci_initialize ( s#rt2x00_dev * ) 
rt2x00pci_uninitialize void rt2x00pci_uninitialize ( s#rt2x00_dev * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
rt2x00pci_probe int rt2x00pci_probe ( s#pci_dev * , const s#rt2x00_ops * ) 
rt2x00pci_remove void rt2x00pci_remove ( s#pci_dev * ) 
rt2x00pci_suspend int rt2x00pci_suspend ( s#pci_dev * , t#pm_message_t ) 
rt2x00pci_resume int rt2x00pci_resume ( s#pci_dev * ) 

/* drivers/net/wireless/rt2x00/rt2x00queue.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##workqueue_struct
rt2x00queue_map_txskb void rt2x00queue_map_txskb ( s#queue_entry * ) 
rt2x00queue_unmap_skb void rt2x00queue_unmap_skb ( s#queue_entry * ) 
e#queue_index enum queue_index { Q_INDEX , Q_INDEX_DMA_DONE , Q_INDEX_DONE , Q_INDEX_MAX , } 
rt2x00queue_for_each_entry t#bool rt2x00queue_for_each_entry ( s#data_queue * , e#queue_index , e#queue_index , void * , t#bool ( * ) ( s#queue_entry * , void * ) ) 
rt2x00queue_get_entry s#queue_entry * rt2x00queue_get_entry ( s#data_queue * , e#queue_index ) 
rt2x00queue_pause_queue void rt2x00queue_pause_queue ( s#data_queue * ) 
rt2x00queue_unpause_queue void rt2x00queue_unpause_queue ( s#data_queue * ) 
rt2x00queue_start_queue void rt2x00queue_start_queue ( s#data_queue * ) 
rt2x00queue_stop_queue void rt2x00queue_stop_queue ( s#data_queue * ) 
rt2x00queue_flush_queue void rt2x00queue_flush_queue ( s#data_queue * , t#bool ) 
rt2x00queue_start_queues void rt2x00queue_start_queues ( s#rt2x00_dev * ) 
rt2x00queue_stop_queues void rt2x00queue_stop_queues ( s#rt2x00_dev * ) 
rt2x00queue_flush_queues void rt2x00queue_flush_queues ( s#rt2x00_dev * , t#bool ) 

/* drivers/net/wireless/rt2x00/rt2x00usb.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
s##workqueue_struct
rt2x00usb_vendor_request int rt2x00usb_vendor_request ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_vendor_req_buff_lock int rt2x00usb_vendor_req_buff_lock ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_vendor_request_buff int rt2x00usb_vendor_request_buff ( s#rt2x00_dev * , const t#u8 , const t#u8 , const t#u16 , void * , const t#u16 , const int ) 
rt2x00usb_regbusy_read int rt2x00usb_regbusy_read ( s#rt2x00_dev * , const unsigned int , const s#rt2x00_field32 , t#u32 * ) 
rt2x00usb_register_read_async void rt2x00usb_register_read_async ( s#rt2x00_dev * , const unsigned int , t#bool ( * ) ( s#rt2x00_dev * , int , t#u32 ) ) 
rt2x00usb_kick_queue void rt2x00usb_kick_queue ( s#data_queue * ) 
rt2x00usb_flush_queue void rt2x00usb_flush_queue ( s#data_queue * , t#bool ) 
rt2x00usb_watchdog void rt2x00usb_watchdog ( s#rt2x00_dev * ) 
rt2x00usb_disable_radio void rt2x00usb_disable_radio ( s#rt2x00_dev * ) 
rt2x00usb_clear_entry void rt2x00usb_clear_entry ( s#queue_entry * ) 
rt2x00usb_initialize int rt2x00usb_initialize ( s#rt2x00_dev * ) 
rt2x00usb_uninitialize void rt2x00usb_uninitialize ( s#rt2x00_dev * ) 
s##ep_device
rt2x00usb_probe int rt2x00usb_probe ( s#usb_interface * , const s#rt2x00_ops * ) 
rt2x00usb_disconnect void rt2x00usb_disconnect ( s#usb_interface * ) 
rt2x00usb_suspend int rt2x00usb_suspend ( s#usb_interface * , t#pm_message_t ) 
rt2x00usb_resume int rt2x00usb_resume ( s#usb_interface * ) 

/* drivers/net/wireless/rtlwifi/base.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#rtl_tcb_desc struct rtl_tcb_desc { t#u8 packet_bw : 1 ; t#u8 multicast : 1 ; t#u8 broadcast : 1 ; t#u8 rts_stbc : 1 ; t#u8 rts_enable : 1 ; t#u8 cts_enable : 1 ; t#u8 rts_use_shortpreamble : 1 ; t#u8 rts_use_shortgi : 1 ; t#u8 rts_sc : 1 ; t#u8 rts_bw : 1 ; t#u8 rts_rate ; t#u8 use_shortgi : 1 ; t#u8 use_shortpreamble : 1 ; t#u8 use_driver_rate : 1 ; t#u8 disable_ratefallback : 1 ; t#u8 ratr_index ; t#u8 mac_id ; t#u8 hw_rate ; t#u8 last_inipkt : 1 ; t#u8 cmd_or_init : 1 ; t#u8 queue_index ; t#u8 empkt_num ; t#u32 empkt_len [ 5 ] ; } 
rtl_get_tcb_desc void rtl_get_tcb_desc ( s#ieee80211_hw * , s#ieee80211_tx_info * , s#ieee80211_sta * , s#sk_buff * , s#rtl_tcb_desc * ) 

/* drivers/net/wireless/rtlwifi/cam.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rtl_cam_add_one_entry extern t#u8 rtl_cam_add_one_entry ( s#ieee80211_hw * , t#u8 * , t#u32 , t#u32 , t#u32 , t#u32 , t#u8 * ) 
rtl_cam_delete_one_entry int rtl_cam_delete_one_entry ( s#ieee80211_hw * , t#u8 * , t#u32 ) 
rtl_cam_reset_all_entry extern void rtl_cam_reset_all_entry ( s#ieee80211_hw * ) 
rtl_cam_mark_invalid void rtl_cam_mark_invalid ( s#ieee80211_hw * , t#u8 ) 
rtl_cam_empty_entry void rtl_cam_empty_entry ( s#ieee80211_hw * , t#u8 ) 
rtl_cam_get_free_entry t#u8 rtl_cam_get_free_entry ( s#ieee80211_hw * , t#u8 * ) 
rtl_cam_del_entry void rtl_cam_del_entry ( s#ieee80211_hw * , t#u8 * ) 

/* drivers/net/wireless/rtlwifi/efuse.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
efuse_read_1byte extern t#u8 efuse_read_1byte ( s#ieee80211_hw * , t#u16 ) 
rtl_efuse_shadow_map_update extern void rtl_efuse_shadow_map_update ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/pci.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
rtl_pci_probe int __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rtl_pci_probe ( s#pci_dev * , const s#pci_device_id * ) 
rtl_pci_disconnect void rtl_pci_disconnect ( s#pci_dev * ) 
rtl_pci_suspend int rtl_pci_suspend ( s#pci_dev * , t#pm_message_t ) 
rtl_pci_resume int rtl_pci_resume ( s#pci_dev * ) 

/* drivers/net/wireless/rtlwifi/ps.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rtl_ps_enable_nic t#bool rtl_ps_enable_nic ( s#ieee80211_hw * ) 
rtl_ps_disable_nic t#bool rtl_ps_disable_nic ( s#ieee80211_hw * ) 
e#rf_pwrstate enum rf_pwrstate { ERFON , ERFSLEEP , ERFOFF } 
rtl_ps_set_rf_state t#bool rtl_ps_set_rf_state ( s#ieee80211_hw * , e#rf_pwrstate , t#u32 , t#bool ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/dm_common.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rtl92c_dm_write_dig void rtl92c_dm_write_dig ( s#ieee80211_hw * ) 
rtl92c_dm_init_edca_turbo void rtl92c_dm_init_edca_turbo ( s#ieee80211_hw * ) 
rtl92c_dm_check_txpower_tracking void rtl92c_dm_check_txpower_tracking ( s#ieee80211_hw * ) 
rtl92c_dm_init_rate_adaptive_mask void rtl92c_dm_init_rate_adaptive_mask ( s#ieee80211_hw * ) 
rtl92c_dm_rf_saving void rtl92c_dm_rf_saving ( s#ieee80211_hw * , t#u8 ) 
rtl92c_dm_init void rtl92c_dm_init ( s#ieee80211_hw * ) 
rtl92c_dm_watchdog void rtl92c_dm_watchdog ( s#ieee80211_hw * ) 
rtl92c_bt_rssi_state_change t#u8 rtl92c_bt_rssi_state_change ( s#ieee80211_hw * ) 
rtl92c_dm_bt_coexist void rtl92c_dm_bt_coexist ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/fw_common.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rtl92c_download_fw int rtl92c_download_fw ( s#ieee80211_hw * ) 
rtl92c_fill_h2c_cmd void rtl92c_fill_h2c_cmd ( s#ieee80211_hw * , t#u8 , t#u32 , t#u8 * ) 
rtl92c_firmware_selfreset void rtl92c_firmware_selfreset ( s#ieee80211_hw * ) 
rtl92c_set_fw_pwrmode_cmd void rtl92c_set_fw_pwrmode_cmd ( s#ieee80211_hw * , t#u8 ) 
rtl92c_set_fw_rsvdpagepkt void rtl92c_set_fw_rsvdpagepkt ( s#ieee80211_hw * , t#bool ) 
rtl92c_set_fw_joinbss_report_cmd void rtl92c_set_fw_joinbss_report_cmd ( s#ieee80211_hw * , t#u8 ) 

/* drivers/net/wireless/rtlwifi/rtl8192c/phy_common.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
rtl92c_phy_query_bb_reg t#u32 rtl92c_phy_query_bb_reg ( s#ieee80211_hw * , t#u32 , t#u32 ) 
rtl92c_phy_set_bb_reg void rtl92c_phy_set_bb_reg ( s#ieee80211_hw * , t#u32 , t#u32 , t#u32 ) 
e#radio_path enum radio_path { RF90_PATH_A = 0 , RF90_PATH_B = 1 , RF90_PATH_C = 2 , RF90_PATH_D = 3 , } 
_rtl92c_phy_fw_rf_serial_read t#u32 _rtl92c_phy_fw_rf_serial_read ( s#ieee80211_hw * , e#radio_path , t#u32 ) 
_rtl92c_phy_fw_rf_serial_write void _rtl92c_phy_fw_rf_serial_write ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 ) 
_rtl92c_phy_rf_serial_read t#u32 _rtl92c_phy_rf_serial_read ( s#ieee80211_hw * , e#radio_path , t#u32 ) 
_rtl92c_phy_rf_serial_write void _rtl92c_phy_rf_serial_write ( s#ieee80211_hw * , e#radio_path , t#u32 , t#u32 ) 
_rtl92c_phy_calculate_bit_shift t#u32 _rtl92c_phy_calculate_bit_shift ( t#u32 ) 
rtl92c_phy_rf_config t#bool rtl92c_phy_rf_config ( s#ieee80211_hw * ) 
_rtl92c_phy_bb8192c_config_parafile t#bool _rtl92c_phy_bb8192c_config_parafile ( s#ieee80211_hw * ) 
_rtl92c_store_pwrIndex_diffrate_offset void _rtl92c_store_pwrIndex_diffrate_offset ( s#ieee80211_hw * , t#u32 , t#u32 , t#u32 ) 
_rtl92c_phy_init_bb_rf_register_definition void _rtl92c_phy_init_bb_rf_register_definition ( s#ieee80211_hw * ) 
rtl92c_phy_set_txpower_level void rtl92c_phy_set_txpower_level ( s#ieee80211_hw * , t#u8 ) 
rtl92c_phy_update_txpower_dbm t#bool rtl92c_phy_update_txpower_dbm ( s#ieee80211_hw * , long ) 
e#wireless_mode enum wireless_mode { WIRELESS_MODE_UNKNOWN = 0x00 , WIRELESS_MODE_A = 0x01 , WIRELESS_MODE_B = 0x02 , WIRELESS_MODE_G = 0x04 , WIRELESS_MODE_AUTO = 0x08 , WIRELESS_MODE_N_24G = 0x10 , WIRELESS_MODE_N_5G = 0x20 } 
_rtl92c_phy_dbm_to_txpwr_Idx t#u8 _rtl92c_phy_dbm_to_txpwr_Idx ( s#ieee80211_hw * , e#wireless_mode , long ) 
_rtl92c_phy_txpwr_idx_to_dbm long _rtl92c_phy_txpwr_idx_to_dbm ( s#ieee80211_hw * , e#wireless_mode , t#u8 ) 
rtl92c_phy_scan_operation_backup void rtl92c_phy_scan_operation_backup ( s#ieee80211_hw * , t#u8 ) 
rtl92c_phy_set_bw_mode void rtl92c_phy_set_bw_mode ( s#ieee80211_hw * , e#nl80211_channel_type ) 
rtl92c_phy_sw_chnl_callback void rtl92c_phy_sw_chnl_callback ( s#ieee80211_hw * ) 
rtl92c_phy_sw_chnl t#u8 rtl92c_phy_sw_chnl ( s#ieee80211_hw * ) 
rtl8192_phy_check_is_legal_rfpath t#bool rtl8192_phy_check_is_legal_rfpath ( s#ieee80211_hw * , t#u32 ) 
rtl92c_phy_iq_calibrate void rtl92c_phy_iq_calibrate ( s#ieee80211_hw * , t#bool ) 
rtl92c_phy_lc_calibrate void rtl92c_phy_lc_calibrate ( s#ieee80211_hw * ) 
rtl92c_phy_ap_calibrate void rtl92c_phy_ap_calibrate ( s#ieee80211_hw * , char ) 
rtl92c_phy_set_rfpath_switch void rtl92c_phy_set_rfpath_switch ( s#ieee80211_hw * , t#bool ) 
e#io_type enum io_type { IO_CMD_PAUSE_DM_BY_SCAN = 0 , IO_CMD_RESUME_DM_BY_SCAN = 1 , } 
rtl92c_phy_set_io_cmd t#bool rtl92c_phy_set_io_cmd ( s#ieee80211_hw * , e#io_type ) 
rtl92c_phy_set_io void rtl92c_phy_set_io ( s#ieee80211_hw * ) 
rtl92ce_phy_set_rf_on void rtl92ce_phy_set_rf_on ( s#ieee80211_hw * ) 
_rtl92c_phy_set_rf_sleep void _rtl92c_phy_set_rf_sleep ( s#ieee80211_hw * ) 

/* drivers/net/wireless/rtlwifi/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
rtl_usb_probe int __attribute__ ( ( __section__ ( ".devinit.text" ) ) ) __attribute__ ( ( __cold__ ) ) __attribute__ ( ( no_instrument_function ) ) rtl_usb_probe ( s#usb_interface * , const s#usb_device_id * ) 
rtl_usb_disconnect void rtl_usb_disconnect ( s#usb_interface * ) 
rtl_usb_suspend int rtl_usb_suspend ( s#usb_interface * , t#pm_message_t ) 
rtl_usb_resume int rtl_usb_resume ( s#usb_interface * ) 

/* drivers/net/wireless/wl1251/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#wl1251_if_operations struct wl1251_if_operations { void ( * read ) ( s#wl1251 * , int , void * , t#size_t ) ; void ( * write ) ( s#wl1251 * , int , void * , t#size_t ) ; void ( * read_elp ) ( s#wl1251 * , int , t#u32 * ) ; void ( * write_elp ) ( s#wl1251 * , int , t#u32 ) ; int ( * power ) ( s#wl1251 * , t#bool ) ; void ( * reset ) ( s#wl1251 * ) ; void ( * enable_irq ) ( s#wl1251 * ) ; void ( * disable_irq ) ( s#wl1251 * ) ; } 
e#wl1251_state enum wl1251_state { WL1251_STATE_OFF , WL1251_STATE_ON , WL1251_STATE_PLT , } 
s#boot_attr struct boot_attr { t#u32 radio_type ; t#u8 mac_clock ; t#u8 arm_clock ; int firmware_debug ; t#u32 minor ; t#u32 major ; t#u32 bugfix ; } 
s#wl1251_cmd_header struct wl1251_cmd_header { t#u16 id ; t#u16 status ; t#u8 data [ 0 ] ; } 
s#acx_header struct acx_header { s#wl1251_cmd_header cmd ; t#u16 id ; t#u16 len ; } 
s#acx_data_path_params_resp struct acx_data_path_params_resp { s#acx_header header ; t#u16 rx_packet_ring_chunk_size ; t#u16 tx_packet_ring_chunk_size ; t#u8 rx_packet_ring_chunk_num ; t#u8 tx_packet_ring_chunk_num ; t#u8 pad [ 2 ] ; t#u32 rx_packet_ring_addr ; t#u32 tx_packet_ring_addr ; t#u32 rx_control_addr ; t#u32 tx_control_addr ; t#u32 tx_complete_addr ; } 
e#wl1251_station_mode enum wl1251_station_mode { STATION_ACTIVE_MODE , STATION_POWER_SAVE_MODE , STATION_IDLE , } 
s#acx_tx_statistics struct acx_tx_statistics { t#u32 internal_desc_overflow ; } 
s#acx_rx_statistics struct acx_rx_statistics { t#u32 out_of_mem ; t#u32 hdr_overflow ; t#u32 hw_stuck ; t#u32 dropped ; t#u32 fcs_err ; t#u32 xfr_hint_trig ; t#u32 path_reset ; t#u32 reset_counter ; } 
s#acx_dma_statistics struct acx_dma_statistics { t#u32 rx_requested ; t#u32 rx_errors ; t#u32 tx_requested ; t#u32 tx_errors ; } 
s#acx_isr_statistics struct acx_isr_statistics { t#u32 cmd_cmplt ; t#u32 fiqs ; t#u32 rx_headers ; t#u32 rx_completes ; t#u32 rx_mem_overflow ; t#u32 rx_rdys ; t#u32 irqs ; t#u32 tx_procs ; t#u32 decrypt_done ; t#u32 dma0_done ; t#u32 dma1_done ; t#u32 tx_exch_complete ; t#u32 commands ; t#u32 rx_procs ; t#u32 hw_pm_mode_changes ; t#u32 host_acknowledges ; t#u32 pci_pm ; t#u32 wakeups ; t#u32 low_rssi ; } 
s#acx_wep_statistics struct acx_wep_statistics { t#u32 addr_key_count ; t#u32 default_key_count ; t#u32 reserved ; t#u32 key_not_found ; t#u32 decrypt_fail ; t#u32 packets ; t#u32 interrupt ; } 
s#acx_pwr_statistics struct acx_pwr_statistics { t#u32 ps_enter ; t#u32 elp_enter ; t#u32 missing_bcns ; t#u32 wake_on_host ; t#u32 wake_on_timer_exp ; t#u32 tx_with_ps ; t#u32 tx_without_ps ; t#u32 rcvd_beacons ; t#u32 power_save_off ; t#u16 enable_ps ; t#u16 disable_ps ; t#u32 fix_tsf_ps ; t#u32 cont_miss_bcns_spread [ 10 ] ; t#u32 rcvd_awake_beacons ; } 
s#acx_aes_statistics struct acx_aes_statistics { t#u32 encrypt_fail ; t#u32 decrypt_fail ; t#u32 encrypt_packets ; t#u32 decrypt_packets ; t#u32 encrypt_interrupt ; t#u32 decrypt_interrupt ; } 
s#acx_mic_statistics struct acx_mic_statistics { t#u32 rx_pkts ; t#u32 calc_failure ; } 
s#acx_event_statistics struct acx_event_statistics { t#u32 heart_beat ; t#u32 calibration ; t#u32 rx_mismatch ; t#u32 rx_mem_empty ; t#u32 rx_pool ; t#u32 oom_late ; t#u32 phy_transmit_error ; t#u32 tx_stuck ; } 
s#acx_ps_statistics struct acx_ps_statistics { t#u32 pspoll_timeouts ; t#u32 upsd_timeouts ; t#u32 upsd_max_sptime ; t#u32 upsd_max_apturn ; t#u32 pspoll_max_apturn ; t#u32 pspoll_utilization ; t#u32 upsd_utilization ; } 
s#acx_rxpipe_statistics struct acx_rxpipe_statistics { t#u32 rx_prep_beacon_drop ; t#u32 descr_host_int_trig_rx_data ; t#u32 beacon_buffer_thres_host_int_trig_rx_data ; t#u32 missed_beacon_host_int_trig_rx_data ; t#u32 tx_xfr_host_int_trig_rx_data ; } 
s#acx_statistics struct acx_statistics { s#acx_header header ; s#acx_tx_statistics tx ; s#acx_rx_statistics rx ; s#acx_dma_statistics dma ; s#acx_isr_statistics isr ; s#acx_wep_statistics wep ; s#acx_pwr_statistics pwr ; s#acx_aes_statistics aes ; s#acx_mic_statistics mic ; s#acx_event_statistics event ; s#acx_ps_statistics ps ; s#acx_rxpipe_statistics rxpipe ; } 
s#wl1251_stats struct wl1251_stats { s#acx_statistics * fw_stats ; unsigned long fw_stats_update ; unsigned int retry_count ; unsigned int excessive_retries ; } 
s#wl1251_debugfs struct wl1251_debugfs { s#dentry * rootdir ; s#dentry * fw_statistics ; s#dentry * tx_internal_desc_overflow ; s#dentry * rx_out_of_mem ; s#dentry * rx_hdr_overflow ; s#dentry * rx_hw_stuck ; s#dentry * rx_dropped ; s#dentry * rx_fcs_err ; s#dentry * rx_xfr_hint_trig ; s#dentry * rx_path_reset ; s#dentry * rx_reset_counter ; s#dentry * dma_rx_requested ; s#dentry * dma_rx_errors ; s#dentry * dma_tx_requested ; s#dentry * dma_tx_errors ; s#dentry * isr_cmd_cmplt ; s#dentry * isr_fiqs ; s#dentry * isr_rx_headers ; s#dentry * isr_rx_mem_overflow ; s#dentry * isr_rx_rdys ; s#dentry * isr_irqs ; s#dentry * isr_tx_procs ; s#dentry * isr_decrypt_done ; s#dentry * isr_dma0_done ; s#dentry * isr_dma1_done ; s#dentry * isr_tx_exch_complete ; s#dentry * isr_commands ; s#dentry * isr_rx_procs ; s#dentry * isr_hw_pm_mode_changes ; s#dentry * isr_host_acknowledges ; s#dentry * isr_pci_pm ; s#dentry * isr_wakeups ; s#dentry * isr_low_rssi ; s#dentry * wep_addr_key_count ; s#dentry * wep_default_key_count ; s#dentry * wep_key_not_found ; s#dentry * wep_decrypt_fail ; s#dentry * wep_packets ; s#dentry * wep_interrupt ; s#dentry * pwr_ps_enter ; s#dentry * pwr_elp_enter ; s#dentry * pwr_missing_bcns ; s#dentry * pwr_wake_on_host ; s#dentry * pwr_wake_on_timer_exp ; s#dentry * pwr_tx_with_ps ; s#dentry * pwr_tx_without_ps ; s#dentry * pwr_rcvd_beacons ; s#dentry * pwr_power_save_off ; s#dentry * pwr_enable_ps ; s#dentry * pwr_disable_ps ; s#dentry * pwr_fix_tsf_ps ; s#dentry * pwr_rcvd_awake_beacons ; s#dentry * mic_rx_pkts ; s#dentry * mic_calc_failure ; s#dentry * aes_encrypt_fail ; s#dentry * aes_decrypt_fail ; s#dentry * aes_encrypt_packets ; s#dentry * aes_decrypt_packets ; s#dentry * aes_encrypt_interrupt ; s#dentry * aes_decrypt_interrupt ; s#dentry * event_heart_beat ; s#dentry * event_calibration ; s#dentry * event_rx_mismatch ; s#dentry * event_rx_mem_empty ; s#dentry * event_rx_pool ; s#dentry * event_oom_late ; s#dentry * event_phy_transmit_error ; s#dentry * event_tx_stuck ; s#dentry * ps_pspoll_timeouts ; s#dentry * ps_upsd_timeouts ; s#dentry * ps_upsd_max_sptime ; s#dentry * ps_upsd_max_apturn ; s#dentry * ps_pspoll_max_apturn ; s#dentry * ps_pspoll_utilization ; s#dentry * ps_upsd_utilization ; s#dentry * rxpipe_rx_prep_beacon_drop ; s#dentry * rxpipe_descr_host_int_trig_rx_data ; s#dentry * rxpipe_beacon_buffer_thres_host_int_trig_rx_data ; s#dentry * rxpipe_missed_beacon_host_int_trig_rx_data ; s#dentry * rxpipe_tx_xfr_host_int_trig_rx_data ; s#dentry * tx_queue_len ; s#dentry * tx_queue_status ; s#dentry * retry_count ; s#dentry * excessive_retries ; } 
s#wl1251_rx_descriptor struct wl1251_rx_descriptor { t#u32 timestamp ; t#u16 length ; t#u16 flags ; t#u8 type ; t#u8 rate ; t#u8 mod_pre ; t#u8 channel ; t#u8 band ; t#s8 rssi ; t#u8 rcpi ; t#u8 snr ; } 
s#wl1251 struct wl1251 { s#ieee80211_hw * hw ; t#bool mac80211_registered ; void * if_priv ; const s#wl1251_if_operations * if_ops ; void ( * set_power ) ( t#bool ) ; int irq ; t#bool use_eeprom ; t#spinlock_t wl_lock ; e#wl1251_state state ; s#mutex mutex ; int physical_mem_addr ; int physical_reg_addr ; int virtual_mem_addr ; int virtual_reg_addr ; int cmd_box_addr ; int event_box_addr ; s#boot_attr boot_attr ; t#u8 * fw ; t#size_t fw_len ; t#u8 * nvs ; t#size_t nvs_len ; t#u8 bssid [ 6 ] ; t#u8 mac_addr [ 6 ] ; t#u8 bss_type ; t#u8 listen_int ; int channel ; void * target_mem_map ; s#acx_data_path_params_resp * data_path ; t#u32 data_in_count ; s#sk_buff_head tx_queue ; t#bool tx_queue_stopped ; s#work_struct tx_work ; s#work_struct filter_work ; s#sk_buff * tx_frames [ 16 ] ; t#u32 next_tx_complete ; t#u32 rx_counter ; t#u32 rx_handled ; t#u32 rx_current_buffer ; t#u32 rx_last_id ; t#u32 intr_mask ; s#work_struct irq_work ; t#u32 event_mask ; t#u32 mbox_ptr [ 2 ] ; t#bool scanning ; t#u32 default_key ; unsigned int tx_mgmt_frm_rate ; unsigned int tx_mgmt_frm_mod ; unsigned int rx_config ; unsigned int rx_filter ; t#bool elp ; s#delayed_work elp_work ; e#wl1251_station_mode station_mode ; t#bool psm_requested ; t#u16 beacon_int ; t#u8 dtim_period ; int power_level ; int rssi_thold ; s#wl1251_stats stats ; s#wl1251_debugfs debugfs ; t#u32 buffer_32 ; t#u32 buffer_cmd ; t#u8 buffer_busyword [ 8 ] ; s#wl1251_rx_descriptor * rx_descriptor ; s#ieee80211_vif * vif ; t#u32 chip_id ; char fw_ver [ 21 ] ; t#s8 noise ; } 
wl1251_init_ieee80211 int wl1251_init_ieee80211 ( s#wl1251 * ) 
wl1251_alloc_hw s#ieee80211_hw * wl1251_alloc_hw ( void ) 
wl1251_free_hw int wl1251_free_hw ( s#wl1251 * ) 

/* drivers/net/wireless/wl12xx/boot.o */
s##platform_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#wl1271_if_operations struct wl1271_if_operations { void ( * read ) ( s#wl1271 * , int , void * , t#size_t , t#bool ) ; void ( * write ) ( s#wl1271 * , int , void * , t#size_t , t#bool ) ; void ( * reset ) ( s#wl1271 * ) ; void ( * init ) ( s#wl1271 * ) ; int ( * power ) ( s#wl1271 * , t#bool ) ; s#device * ( * dev ) ( s#wl1271 * ) ; void ( * enable_irq ) ( s#wl1271 * ) ; void ( * disable_irq ) ( s#wl1271 * ) ; void ( * set_block_size ) ( s#wl1271 * , unsigned int ) ; } 
e#wl1271_state enum wl1271_state { WL1271_STATE_OFF , WL1271_STATE_ON , WL1271_STATE_PLT , } 
s#wl1271_partition struct wl1271_partition { t#u32 size ; t#u32 start ; } 
s#wl1271_partition_set struct wl1271_partition_set { s#wl1271_partition mem ; s#wl1271_partition reg ; s#wl1271_partition mem2 ; s#wl1271_partition mem3 ; } 
E#NUM_FW_VER 5 
s#wl1271_chip struct wl1271_chip { t#u32 id ; char fw_ver_str [ 32 ] ; unsigned int fw_ver [ E#NUM_FW_VER ] ; } 
s#wl1271_cmd_header struct wl1271_cmd_header { t#__le16 id ; t#__le16 status ; t#u8 data [ 0 ] ; } 
s#acx_header struct acx_header { s#wl1271_cmd_header cmd ; t#__le16 id ; t#__le16 len ; } 
s#wl1271_acx_mem_map struct wl1271_acx_mem_map { s#acx_header header ; t#__le32 code_start ; t#__le32 code_end ; t#__le32 wep_defkey_start ; t#__le32 wep_defkey_end ; t#__le32 sta_table_start ; t#__le32 sta_table_end ; t#__le32 packet_template_start ; t#__le32 packet_template_end ; t#__le32 tx_result ; t#__le32 tx_result_queue_start ; t#__le32 queue_memory_start ; t#__le32 queue_memory_end ; t#__le32 packet_memory_pool_start ; t#__le32 packet_memory_pool_end ; t#__le32 debug_buffer1_start ; t#__le32 debug_buffer1_end ; t#__le32 debug_buffer2_start ; t#__le32 debug_buffer2_end ; t#__le32 num_tx_mem_blocks ; t#__le32 num_rx_mem_blocks ; t#u8 * tx_cbuf ; t#u8 * rx_cbuf ; t#__le32 rx_ctrl ; t#__le32 tx_ctrl ; } 
s#wl1271_rx_mem_pool_addr struct wl1271_rx_mem_pool_addr { t#u32 addr ; t#u32 addr_extra ; } 
s#wl1271_scan struct wl1271_scan { s#cfg80211_scan_request * req ; unsigned long scanned_ch [ ( ( ( 64 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#bool failed ; t#u8 state ; t#u8 ssid [ 32 + 1 ] ; t#size_t ssid_len ; } 
s#acx_tx_statistics struct acx_tx_statistics { t#__le32 internal_desc_overflow ; } 
s#acx_rx_statistics struct acx_rx_statistics { t#__le32 out_of_mem ; t#__le32 hdr_overflow ; t#__le32 hw_stuck ; t#__le32 dropped ; t#__le32 fcs_err ; t#__le32 xfr_hint_trig ; t#__le32 path_reset ; t#__le32 reset_counter ; } 
s#acx_dma_statistics struct acx_dma_statistics { t#__le32 rx_requested ; t#__le32 rx_errors ; t#__le32 tx_requested ; t#__le32 tx_errors ; } 
s#acx_isr_statistics struct acx_isr_statistics { t#__le32 cmd_cmplt ; t#__le32 fiqs ; t#__le32 rx_headers ; t#__le32 rx_completes ; t#__le32 rx_mem_overflow ; t#__le32 rx_rdys ; t#__le32 irqs ; t#__le32 tx_procs ; t#__le32 decrypt_done ; t#__le32 dma0_done ; t#__le32 dma1_done ; t#__le32 tx_exch_complete ; t#__le32 commands ; t#__le32 rx_procs ; t#__le32 hw_pm_mode_changes ; t#__le32 host_acknowledges ; t#__le32 pci_pm ; t#__le32 wakeups ; t#__le32 low_rssi ; } 
s#acx_wep_statistics struct acx_wep_statistics { t#__le32 addr_key_count ; t#__le32 default_key_count ; t#__le32 reserved ; t#__le32 key_not_found ; t#__le32 decrypt_fail ; t#__le32 packets ; t#__le32 interrupt ; } 
s#acx_pwr_statistics struct acx_pwr_statistics { t#__le32 ps_enter ; t#__le32 elp_enter ; t#__le32 missing_bcns ; t#__le32 wake_on_host ; t#__le32 wake_on_timer_exp ; t#__le32 tx_with_ps ; t#__le32 tx_without_ps ; t#__le32 rcvd_beacons ; t#__le32 power_save_off ; t#__le16 enable_ps ; t#__le16 disable_ps ; t#__le32 fix_tsf_ps ; t#__le32 cont_miss_bcns_spread [ 10 ] ; t#__le32 rcvd_awake_beacons ; } 
s#acx_aes_statistics struct acx_aes_statistics { t#__le32 encrypt_fail ; t#__le32 decrypt_fail ; t#__le32 encrypt_packets ; t#__le32 decrypt_packets ; t#__le32 encrypt_interrupt ; t#__le32 decrypt_interrupt ; } 
s#acx_mic_statistics struct acx_mic_statistics { t#__le32 rx_pkts ; t#__le32 calc_failure ; } 
s#acx_event_statistics struct acx_event_statistics { t#__le32 heart_beat ; t#__le32 calibration ; t#__le32 rx_mismatch ; t#__le32 rx_mem_empty ; t#__le32 rx_pool ; t#__le32 oom_late ; t#__le32 phy_transmit_error ; t#__le32 tx_stuck ; } 
s#acx_ps_statistics struct acx_ps_statistics { t#__le32 pspoll_timeouts ; t#__le32 upsd_timeouts ; t#__le32 upsd_max_sptime ; t#__le32 upsd_max_apturn ; t#__le32 pspoll_max_apturn ; t#__le32 pspoll_utilization ; t#__le32 upsd_utilization ; } 
s#acx_rxpipe_statistics struct acx_rxpipe_statistics { t#__le32 rx_prep_beacon_drop ; t#__le32 descr_host_int_trig_rx_data ; t#__le32 beacon_buffer_thres_host_int_trig_rx_data ; t#__le32 missed_beacon_host_int_trig_rx_data ; t#__le32 tx_xfr_host_int_trig_rx_data ; } 
s#wl1271_stats struct wl1271_stats { s#acx_statistics * fw_stats ; unsigned long fw_stats_update ; unsigned int retry_count ; unsigned int excessive_retries ; } 
s#wl1271_fw_common_status struct wl1271_fw_common_status { t#__le32 intr ; t#u8 fw_rx_counter ; t#u8 drv_rx_counter ; t#u8 reserved ; t#u8 tx_results_counter ; t#__le32 rx_pkt_descs [ 8 ] ; t#__le32 tx_released_blks [ 4 ] ; t#__le32 fw_localtime ; } 
s#wl1271_fw_sta_status struct wl1271_fw_sta_status { s#wl1271_fw_common_status common ; t#u8 tx_total ; t#u8 reserved1 ; t#__le16 reserved2 ; t#u32 padding ; } 
s#wl1271_fw_ap_status struct wl1271_fw_ap_status { s#wl1271_fw_common_status common ; t#__le32 link_ps_bitmap ; t#u8 tx_lnk_free_blks [ ( 5 + 2 ) ] ; t#u8 padding_1 [ 1 ] ; } 
s#wl1271_fw_full_status struct wl1271_fw_full_status { union { s#wl1271_fw_common_status common ; s#wl1271_fw_sta_status sta ; s#wl1271_fw_ap_status ap ; } ; } 
s##wl1271_tx_hw_res_if
E#CONF_SG_TEMP_PARAM_5 ( 0 ) + 48 
E#CONF_SG_STA_PARAMS_MAX E#CONF_SG_TEMP_PARAM_5 + 1 
E#CONF_SG_TEMP_PARAM_10 ( 0 ) + 56 
E#CONF_SG_AP_PARAMS_MAX E#CONF_SG_TEMP_PARAM_10 + 1 
s#conf_sg_settings struct conf_sg_settings { t#u32 sta_params [ E#CONF_SG_STA_PARAMS_MAX ] ; t#u32 ap_params [ E#CONF_SG_AP_PARAMS_MAX ] ; t#u8 state ; } 
s#conf_rx_settings struct conf_rx_settings { t#u32 rx_msdu_life_time ; t#u32 packet_detection_threshold ; t#u16 ps_poll_timeout ; t#u16 upsd_timeout ; t#u16 rts_threshold ; t#u16 rx_cca_threshold ; t#u16 irq_blk_threshold ; t#u16 irq_pkt_threshold ; t#u16 irq_timeout ; t#u8 queue_type ; } 
s#conf_tx_rate_class struct conf_tx_rate_class { t#u32 enabled_rates ; t#u8 short_retry_limit ; t#u8 long_retry_limit ; t#u8 aflags ; } 
s#conf_tx_ac_category struct conf_tx_ac_category { t#u8 ac ; t#u8 cw_min ; t#u16 cw_max ; t#u8 aifsn ; t#u16 tx_op_limit ; } 
s#conf_tx_tid struct conf_tx_tid { t#u8 queue_id ; t#u8 channel_type ; t#u8 tsid ; t#u8 ps_scheme ; t#u8 ack_policy ; t#u32 apsd_conf [ 2 ] ; } 
s#conf_tx_settings struct conf_tx_settings { t#u8 tx_energy_detection ; s#conf_tx_rate_class sta_rc_conf ; t#u8 ac_conf_count ; s#conf_tx_ac_category ac_conf [ 4 ] ; t#u16 ap_max_tx_retries ; t#u8 tid_conf_count ; s#conf_tx_tid tid_conf [ 8 ] ; t#u16 frag_threshold ; t#u16 tx_compl_timeout ; t#u16 tx_compl_threshold ; t#u32 basic_rate ; t#u32 basic_rate_5 ; t#u8 tmpl_short_retry_limit ; t#u8 tmpl_long_retry_limit ; } 
e#conf_bcn_filt_mode enum conf_bcn_filt_mode { CONF_BCN_FILT_MODE_DISABLED = 0 , CONF_BCN_FILT_MODE_ENABLED = 1 } 
s#conf_bcn_filt_rule struct conf_bcn_filt_rule { t#u8 ie ; t#u8 rule ; t#u8 oui [ 3 ] ; t#u8 type ; t#u8 version [ 2 ] ; } 
s#conf_sig_weights struct conf_sig_weights { t#u8 rssi_bcn_avg_weight ; t#u8 rssi_pkt_avg_weight ; t#u8 snr_bcn_avg_weight ; t#u8 snr_pkt_avg_weight ; } 
s#conf_conn_settings struct conf_conn_settings { t#u8 wake_up_event ; t#u8 listen_interval ; e#conf_bcn_filt_mode bcn_filt_mode ; t#u8 bcn_filt_ie_count ; s#conf_bcn_filt_rule bcn_filt_ie [ 32 ] ; t#u32 synch_fail_thold ; t#u32 bss_lose_timeout ; t#u32 beacon_rx_timeout ; t#u32 broadcast_timeout ; t#u8 rx_broadcast_in_ps ; t#u8 ps_poll_threshold ; t#u32 ps_poll_recovery_period ; s#conf_sig_weights sig_weights ; t#u8 bet_enable ; t#u8 bet_max_consecutive ; t#u8 psm_entry_retries ; t#u8 psm_exit_retries ; t#u8 psm_entry_nullfunc_retries ; t#u8 psm_entry_hangover_period ; t#u32 keep_alive_interval ; t#u8 max_listen_interval ; } 
s#conf_itrim_settings struct conf_itrim_settings { t#u8 enable ; t#u32 timeout ; } 
s#conf_pm_config_settings struct conf_pm_config_settings { t#u32 host_clk_settling_time ; t#bool host_fast_wakeup_support ; } 
s#conf_roam_trigger_settings struct conf_roam_trigger_settings { t#u16 trigger_pacing ; t#u8 avg_weight_rssi_beacon ; t#u8 avg_weight_rssi_data ; t#u8 avg_weight_snr_beacon ; t#u8 avg_weight_snr_data ; } 
s#conf_scan_settings struct conf_scan_settings { t#u32 min_dwell_time_active ; t#u32 max_dwell_time_active ; t#u32 min_dwell_time_passive ; t#u32 max_dwell_time_passive ; t#u16 num_probe_reqs ; } 
s#conf_sched_scan_settings struct conf_sched_scan_settings { t#u16 min_dwell_time_active ; t#u16 max_dwell_time_active ; t#u32 dwell_time_passive ; t#u32 dwell_time_dfs ; t#u8 num_probe_reqs ; t#s8 rssi_threshold ; t#s8 snr_threshold ; } 
s#conf_rf_settings struct conf_rf_settings { t#u8 tx_per_channel_power_compensation_2 [ 7 ] ; t#u8 tx_per_channel_power_compensation_5 [ 18 ] ; } 
s#conf_ht_setting struct conf_ht_setting { t#u16 tx_ba_win_size ; t#u16 inactivity_timeout ; } 
s#conf_memory_settings struct conf_memory_settings { t#u8 num_stations ; t#u8 ssid_profiles ; t#u8 rx_block_num ; t#u8 tx_min_block_num ; t#u8 dynamic_memory ; t#u8 min_req_tx_blocks ; t#u8 min_req_rx_blocks ; t#u8 tx_min ; } 
s#conf_fm_coex struct conf_fm_coex { t#u8 enable ; t#u8 swallow_period ; t#u8 n_divider_fref_set_1 ; t#u8 n_divider_fref_set_2 ; t#u16 m_divider_fref_set_1 ; t#u16 m_divider_fref_set_2 ; t#u32 coex_pll_stabilization_time ; t#u16 ldo_stabilization_time ; t#u8 fm_disturbed_band_margin ; t#u8 swallow_clk_diff ; } 
s#conf_drv_settings struct conf_drv_settings { s#conf_sg_settings sg ; s#conf_rx_settings rx ; s#conf_tx_settings tx ; s#conf_conn_settings conn ; s#conf_itrim_settings itrim ; s#conf_pm_config_settings pm_config ; s#conf_roam_trigger_settings roam_trigger ; s#conf_scan_settings scan ; s#conf_sched_scan_settings sched_scan ; s#conf_rf_settings rf ; s#conf_ht_setting ht ; s#conf_memory_settings mem_wl127x ; s#conf_memory_settings mem_wl128x ; s#conf_fm_coex fm_coex ; t#u8 hci_io_ds ; } 
s#wl1271_ap_key struct wl1271_ap_key { t#u8 id ; t#u8 key_type ; t#u8 key_size ; t#u8 key [ 32 ] ; t#u8 hlid ; t#u32 tx_seq_32 ; t#u16 tx_seq_16 ; } 
s#wl1271_link struct wl1271_link { s#sk_buff_head tx_queue [ 4 ] ; t#u8 allocated_blks ; t#u8 prev_freed_blks ; t#u8 addr [ 6 ] ; } 
s#wl1271 struct wl1271 { s#platform_device * plat_dev ; s#ieee80211_hw * hw ; t#bool mac80211_registered ; void * if_priv ; s#wl1271_if_operations * if_ops ; void ( * set_power ) ( t#bool ) ; int irq ; int ref_clock ; t#spinlock_t wl_lock ; e#wl1271_state state ; s#mutex mutex ; unsigned long flags ; s#wl1271_partition_set part ; s#wl1271_chip chip ; int cmd_box_addr ; int event_box_addr ; t#u8 * fw ; t#size_t fw_len ; t#u8 fw_bss_type ; void * nvs ; t#size_t nvs_len ; t#s8 hw_pg_ver ; t#u8 bssid [ 6 ] ; t#u8 mac_addr [ 6 ] ; t#u8 bss_type ; t#u8 set_bss_type ; t#u8 ssid [ 32 + 1 ] ; t#u8 ssid_len ; int channel ; s#wl1271_acx_mem_map * target_mem_map ; t#u32 tx_blocks_freed [ 4 ] ; t#u32 tx_blocks_available ; t#u32 tx_allocated_blocks ; t#u32 tx_results_count ; t#u32 tx_packets_count ; t#s64 time_offset ; int session_counter ; s#sk_buff_head tx_queue [ 4 ] ; int tx_queue_count ; s#sk_buff_head deferred_rx_queue ; s#sk_buff_head deferred_tx_queue ; s#work_struct tx_work ; unsigned long tx_frames_map [ ( ( ( 32 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#sk_buff * tx_frames [ 32 ] ; int tx_frames_cnt ; t#u8 tx_security_last_seq ; t#s64 tx_security_seq ; t#u32 rx_counter ; s#wl1271_rx_mem_pool_addr rx_mem_pool_addr ; t#u8 * aggr_buf ; s#sk_buff * dummy_packet ; s#work_struct netstack_work ; s#work_struct recovery_work ; t#u32 event_mask ; t#u32 mbox_ptr [ 2 ] ; s#wl1271_scan scan ; s#delayed_work scan_complete_work ; t#bool sched_scanning ; s#sk_buff * probereq ; t#u16 aid ; t#u32 basic_rate_set ; t#u32 basic_rate ; t#u32 rate_set ; e#ieee80211_band band ; t#u32 beacon_int ; t#u32 default_key ; unsigned int filters ; unsigned int rx_config ; unsigned int rx_filter ; s#completion * elp_compl ; s#completion * ps_compl ; s#delayed_work elp_work ; s#delayed_work pspoll_work ; int ps_poll_failures ; t#u8 psm_entry_retry ; int power_level ; int rssi_thold ; int last_rssi_event ; s#wl1271_stats stats ; t#__le32 buffer_32 ; t#u32 buffer_cmd ; t#u32 buffer_busyword [ 1 ] ; s#wl1271_fw_full_status * fw_status ; s#wl1271_tx_hw_res_if * tx_res_if ; s#ieee80211_vif * vif ; s#conf_drv_settings conf ; t#bool sg_enabled ; t#bool enable_11a ; s#list_head list ; t#s8 noise ; unsigned long ap_hlid_map [ ( ( ( 5 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#wl1271_ap_key * recorded_ap_keys [ 14 ] ; s#ieee80211_supported_band bands [ E#IEEE80211_NUM_BANDS ] ; t#bool ba_support ; t#u8 ba_rx_bitmap ; int tcxo_clock ; t#bool wow_enabled ; s#wl1271_link links [ ( 5 + 2 ) ] ; int last_tx_hlid ; t#u32 ap_fw_ps_map ; unsigned long ap_ps_map ; unsigned int quirks ; unsigned int platform_quirks ; } 
wl1271_load_firmware int wl1271_load_firmware ( s#wl1271 * ) 

/* drivers/net/wireless/wl12xx/io.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##mfd_cell
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##wl1271_acx_mem_map
s##acx_statistics
s#wl1271_tx_hw_res_descr struct wl1271_tx_hw_res_descr { t#u8 id ; t#u8 status ; t#__le16 medium_usage ; t#__le32 fw_handling_time ; t#__le32 medium_delay ; t#u8 lsb_security_sequence_number ; t#u8 ack_failures ; t#u8 rate_class_index ; t#u8 spare ; } 
s#wl1271_tx_hw_res_if struct wl1271_tx_hw_res_if { t#__le32 tx_result_fw_counter ; t#__le32 tx_result_host_counter ; s#wl1271_tx_hw_res_descr tx_results_queue [ 16 ] ; } 
wl1271_set_partition int wl1271_set_partition ( s#wl1271 * , s#wl1271_partition_set * ) 

/* drivers/net/wireless/wl12xx/main.o */
wl1271_irq t#irqreturn_t wl1271_irq ( int , void * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##mfd_cell
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
wl1271_register_hw int wl1271_register_hw ( s#wl1271 * ) 
wl1271_unregister_hw void wl1271_unregister_hw ( s#wl1271 * ) 
wl1271_init_ieee80211 int wl1271_init_ieee80211 ( s#wl1271 * ) 
wl1271_alloc_hw s#ieee80211_hw * wl1271_alloc_hw ( void ) 
wl1271_free_hw int wl1271_free_hw ( s#wl1271 * ) 
wl12xx_debug_level extern t#u32 wl12xx_debug_level 

/* drivers/of/address.o */
s##proc_dir_entry
of_get_pci_address extern const t#__be32 * of_get_pci_address ( s#device_node * , int , t#u64 * , unsigned int * ) 
of_pci_address_to_resource extern int of_pci_address_to_resource ( s#device_node * , int , s#resource * ) 
of_translate_address extern t#u64 of_translate_address ( s#device_node * , const t#__be32 * ) 
of_translate_dma_address extern t#u64 of_translate_dma_address ( s#device_node * , const t#__be32 * ) 
of_get_address extern const t#u32 * of_get_address ( s#device_node * , int , t#u64 * , unsigned int * ) 
of_address_to_resource extern int of_address_to_resource ( s#device_node * , int , s#resource * ) 
of_iomap extern void * of_iomap ( s#device_node * , int ) 

/* drivers/of/base.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
of_n_addr_cells extern int of_n_addr_cells ( s#device_node * ) 
of_n_size_cells extern int of_n_size_cells ( s#device_node * ) 
of_node_get extern s#device_node * of_node_get ( s#device_node * ) 
of_node_put extern void of_node_put ( s#device_node * ) 
of_find_property extern s#property * of_find_property ( const s#device_node * , const char * , int * ) 
of_find_all_nodes extern s#device_node * of_find_all_nodes ( s#device_node * ) 
of_get_property extern const void * of_get_property ( const s#device_node * , const char * , int * ) 
of_device_is_compatible extern int of_device_is_compatible ( const s#device_node * , const char * ) 
of_machine_is_compatible extern int of_machine_is_compatible ( const char * ) 
of_device_is_available extern int of_device_is_available ( const s#device_node * ) 
of_get_parent extern s#device_node * of_get_parent ( const s#device_node * ) 
of_get_next_child extern s#device_node * of_get_next_child ( const s#device_node * , s#device_node * ) 
of_find_node_by_path extern s#device_node * of_find_node_by_path ( const char * ) 
of_find_node_by_name extern s#device_node * of_find_node_by_name ( s#device_node * , const char * ) 
of_find_node_by_type extern s#device_node * of_find_node_by_type ( s#device_node * , const char * ) 
of_find_compatible_node extern s#device_node * of_find_compatible_node ( s#device_node * , const char * , const char * ) 
of_find_node_with_property extern s#device_node * of_find_node_with_property ( s#device_node * , const char * ) 
of_match_node extern const s#of_device_id * of_match_node ( const s#of_device_id * , const s#device_node * ) 
of_find_matching_node extern s#device_node * of_find_matching_node ( s#device_node * , const s#of_device_id * ) 
of_modalias_node extern int of_modalias_node ( s#device_node * , char * , int ) 
of_find_node_by_phandle extern s#device_node * of_find_node_by_phandle ( t#phandle ) 
of_parse_phandle extern s#device_node * of_parse_phandle ( s#device_node * , const char * , int ) 
of_parse_phandles_with_args extern int of_parse_phandles_with_args ( s#device_node * , const char * , const char * , int , s#device_node * * , const void * * ) 

/* drivers/of/device.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
of_match_device extern const s#of_device_id * of_match_device ( const s#of_device_id * , const s#device * ) 
s##mfd_cell
of_dev_get extern s#platform_device * of_dev_get ( s#platform_device * ) 
of_dev_put extern void of_dev_put ( s#platform_device * ) 
of_device_register extern int of_device_register ( s#platform_device * ) 
of_device_unregister extern void of_device_unregister ( s#platform_device * ) 

/* drivers/of/fdt.o */
s##proc_dir_entry
of_fdt_unflatten_tree extern void of_fdt_unflatten_tree ( unsigned long * , s#device_node * * ) 

/* drivers/of/gpio.o */
s##proc_dir_entry
e#of_gpio_flags enum of_gpio_flags { OF_GPIO_ACTIVE_LOW = 0x1 , } 
of_get_gpio_flags extern int of_get_gpio_flags ( s#device_node * , int , e#of_gpio_flags * ) 
of_gpio_count extern unsigned int of_gpio_count ( s#device_node * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##seq_file
s#of_mm_gpio_chip struct of_mm_gpio_chip { s#gpio_chip gc ; void ( * save_regs ) ( s#of_mm_gpio_chip * ) ; void * regs ; } 
of_mm_gpiochip_add extern int of_mm_gpiochip_add ( s#device_node * , s#of_mm_gpio_chip * ) 

/* drivers/of/irq.o */
s##proc_dir_entry
irq_of_parse_and_map extern unsigned int irq_of_parse_and_map ( s#device_node * , int ) 
s#of_irq struct of_irq { s#device_node * controller ; t#u32 size ; t#u32 specifier [ 4 ] ; } 
of_irq_map_raw extern int of_irq_map_raw ( s#device_node * , const t#u32 * , t#u32 , const t#u32 * , s#of_irq * ) 
of_irq_map_one extern int of_irq_map_one ( s#device_node * , int , s#of_irq * ) 
of_irq_to_resource extern int of_irq_to_resource ( s#device_node * , int , s#resource * ) 

/* drivers/of/of_i2c.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
of_i2c_register_devices extern void of_i2c_register_devices ( s#i2c_adapter * ) 
of_find_i2c_device_by_node extern s#i2c_client * of_find_i2c_device_by_node ( s#device_node * ) 

/* drivers/of/of_mdio.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##sec_path
of_mdiobus_register extern int of_mdiobus_register ( s#mii_bus * , s#device_node * ) 
of_phy_find_device extern s#phy_device * of_phy_find_device ( s#device_node * ) 
of_phy_connect extern s#phy_device * of_phy_connect ( s#net_device * , s#device_node * , void ( * ) ( s#net_device * ) , t#u32 , t#phy_interface_t ) 
of_phy_connect_fixed_link extern s#phy_device * of_phy_connect_fixed_link ( s#net_device * , void ( * ) ( s#net_device * ) , t#phy_interface_t ) 

/* drivers/of/of_net.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
of_get_mac_address extern const void * of_get_mac_address ( s#device_node * ) 

/* drivers/of/of_pci.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
of_irq_map_pci int of_irq_map_pci ( s#pci_dev * , s#of_irq * ) 

/* drivers/of/of_spi.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
of_register_spi_devices extern void of_register_spi_devices ( s#spi_master * ) 

/* drivers/of/platform.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##mfd_cell
of_find_device_by_node extern s#platform_device * of_find_device_by_node ( s#device_node * ) 
of_device_alloc extern s#platform_device * of_device_alloc ( s#device_node * , const char * , s#device * ) 
of_platform_device_create extern s#platform_device * of_platform_device_create ( s#device_node * , const char * , s#device * ) 
of_platform_bus_probe extern int of_platform_bus_probe ( s#device_node * , const s#of_device_id * , s#device * ) 

/* drivers/parport/ieee1284.o */
s##device
s#pc_parport_state struct pc_parport_state { unsigned int ctr ; unsigned int ecr ; } 
s#ax_parport_state struct ax_parport_state { unsigned int ctr ; unsigned int ecr ; unsigned int dcsr ; } 
s#amiga_parport_state struct amiga_parport_state { unsigned char data ; unsigned char datadir ; unsigned char status ; unsigned char statusdir ; } 
s#ax88796_parport_state struct ax88796_parport_state { unsigned char cpr ; } 
s#ip32_parport_state struct ip32_parport_state { unsigned int dcr ; unsigned int ecr ; } 
s#parport_state struct parport_state { union { s#pc_parport_state pc ; s#ax_parport_state ax ; s#amiga_parport_state amiga ; s#ax88796_parport_state ax88796 ; s#ip32_parport_state ip32 ; void * misc ; } u ; } 
s#pardevice struct pardevice { const char * name ; s#parport * port ; int daisy ; int ( * preempt ) ( void * ) ; void ( * wakeup ) ( void * ) ; void * private ; void ( * irq_func ) ( void * ) ; unsigned int flags ; s#pardevice * next ; s#pardevice * prev ; s#parport_state * state ; t#wait_queue_head_t wait_q ; unsigned long int time ; unsigned long int timeslice ; volatile long int timeout ; unsigned long waiting ; s#pardevice * waitprev ; s#pardevice * waitnext ; void * sysctl_table ; } 
t#parport_device_class typedef enum { PARPORT_CLASS_LEGACY = 0 , PARPORT_CLASS_PRINTER , PARPORT_CLASS_MODEM , PARPORT_CLASS_NET , PARPORT_CLASS_HDC , PARPORT_CLASS_PCMCIA , PARPORT_CLASS_MEDIA , PARPORT_CLASS_FDC , PARPORT_CLASS_PORTS , PARPORT_CLASS_SCANNER , PARPORT_CLASS_DIGCAM , PARPORT_CLASS_OTHER , PARPORT_CLASS_UNSPEC , PARPORT_CLASS_SCSIADAPTER } parport_device_class 
s#parport_device_info struct parport_device_info { t#parport_device_class class ; const char * class_name ; const char * mfr ; const char * model ; const char * cmdset ; const char * description ; } 
e#ieee1284_phase enum ieee1284_phase { IEEE1284_PH_FWD_DATA , IEEE1284_PH_FWD_IDLE , IEEE1284_PH_TERMINATE , IEEE1284_PH_NEGOTIATION , IEEE1284_PH_HBUSY_DNA , IEEE1284_PH_REV_IDLE , IEEE1284_PH_HBUSY_DAVAIL , IEEE1284_PH_REV_DATA , IEEE1284_PH_ECP_SETUP , IEEE1284_PH_ECP_FWD_TO_REV , IEEE1284_PH_ECP_REV_TO_FWD , IEEE1284_PH_ECP_DIR_UNKNOWN , } 
s#ieee1284_info struct ieee1284_info { int mode ; volatile e#ieee1284_phase phase ; s#semaphore irq ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#parport_operations struct parport_operations { void ( * write_data ) ( s#parport * , unsigned char ) ; unsigned char ( * read_data ) ( s#parport * ) ; void ( * write_control ) ( s#parport * , unsigned char ) ; unsigned char ( * read_control ) ( s#parport * ) ; unsigned char ( * frob_control ) ( s#parport * , unsigned char , unsigned char ) ; unsigned char ( * read_status ) ( s#parport * ) ; void ( * enable_irq ) ( s#parport * ) ; void ( * disable_irq ) ( s#parport * ) ; void ( * data_forward ) ( s#parport * ) ; void ( * data_reverse ) ( s#parport * ) ; void ( * init_state ) ( s#pardevice * , s#parport_state * ) ; void ( * save_state ) ( s#parport * , s#parport_state * ) ; void ( * restore_state ) ( s#parport * , s#parport_state * ) ; t#size_t ( * epp_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * epp_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * epp_write_addr ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * epp_read_addr ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * ecp_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * ecp_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * ecp_write_addr ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * compat_write_data ) ( s#parport * , const void * , t#size_t , int ) ; t#size_t ( * nibble_read_data ) ( s#parport * , void * , t#size_t , int ) ; t#size_t ( * byte_read_data ) ( s#parport * , void * , t#size_t , int ) ; s#module * owner ; } 
s#parport struct parport { unsigned long base ; unsigned long base_hi ; unsigned int size ; const char * name ; unsigned int modes ; int irq ; int dma ; int muxport ; int portnum ; s#device * dev ; s#parport * physport ; s#pardevice * devices ; s#pardevice * cad ; int daisy ; int muxsel ; s#pardevice * waithead ; s#pardevice * waittail ; s#list_head list ; unsigned int flags ; void * sysctl_table ; s#parport_device_info probe_info [ 5 ] ; s#ieee1284_info ieee1284 ; s#parport_operations * ops ; void * private_data ; int number ; t#spinlock_t pardevice_lock ; t#spinlock_t waitlist_lock ; t#rwlock_t cad_lock ; int spintime ; t#atomic_t ref_count ; unsigned long devflags ; s#pardevice * proc_device ; s#list_head full_list ; s#parport * slaves [ 3 ] ; } 
parport_negotiate extern int parport_negotiate ( s#parport * , int ) 
parport_write extern t#ssize_t parport_write ( s#parport * , const void * , t#size_t ) 
parport_read extern t#ssize_t parport_read ( s#parport * , void * , t#size_t ) 
parport_wait_peripheral extern int parport_wait_peripheral ( s#parport * , unsigned char , unsigned char ) 
parport_wait_event extern int parport_wait_event ( s#parport * , long ) 
parport_set_timeout extern long parport_set_timeout ( s#pardevice * , long ) 
parport_ieee1284_interrupt extern void parport_ieee1284_interrupt ( void * ) 

/* drivers/parport/ieee1284_ops.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
parport_ieee1284_ecp_write_data extern t#size_t parport_ieee1284_ecp_write_data ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_ecp_read_data extern t#size_t parport_ieee1284_ecp_read_data ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_ecp_write_addr extern t#size_t parport_ieee1284_ecp_write_addr ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_write_compat extern t#size_t parport_ieee1284_write_compat ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_read_nibble extern t#size_t parport_ieee1284_read_nibble ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_read_byte extern t#size_t parport_ieee1284_read_byte ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_epp_write_data extern t#size_t parport_ieee1284_epp_write_data ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_epp_read_data extern t#size_t parport_ieee1284_epp_read_data ( s#parport * , void * , t#size_t , int ) 
parport_ieee1284_epp_write_addr extern t#size_t parport_ieee1284_epp_write_addr ( s#parport * , const void * , t#size_t , int ) 
parport_ieee1284_epp_read_addr extern t#size_t parport_ieee1284_epp_read_addr ( s#parport * , void * , t#size_t , int ) 

/* drivers/parport/parport_pc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
parport_pc_probe_port extern s#parport * parport_pc_probe_port ( unsigned long , unsigned long , int , int , s#device * , int ) 
parport_pc_unregister_port extern void parport_pc_unregister_port ( s#parport * ) 

/* drivers/parport/share.o */
s##device
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
parport_claim extern int parport_claim ( s#pardevice * ) 
parport_claim_or_block extern int parport_claim_or_block ( s#pardevice * ) 
parport_release extern void parport_release ( s#pardevice * ) 
parport_register_port s#parport * parport_register_port ( unsigned long , int , int , s#parport_operations * ) 
parport_announce_port void parport_announce_port ( s#parport * ) 
parport_remove_port extern void parport_remove_port ( s#parport * ) 
s#parport_driver struct parport_driver { const char * name ; void ( * attach ) ( s#parport * ) ; void ( * detach ) ( s#parport * ) ; s#list_head list ; } 
parport_register_driver extern int parport_register_driver ( s#parport_driver * ) 
parport_unregister_driver extern void parport_unregister_driver ( s#parport_driver * ) 
parport_register_device s#pardevice * parport_register_device ( s#parport * , const char * , int ( * ) ( void * ) , void ( * ) ( void * ) , void ( * ) ( void * ) , int , void * ) 
parport_unregister_device extern void parport_unregister_device ( s#pardevice * ) 
parport_get_port extern s#parport * parport_get_port ( s#parport * ) 
parport_put_port extern void parport_put_port ( s#parport * ) 
parport_find_number extern s#parport * parport_find_number ( int ) 
parport_find_base extern s#parport * parport_find_base ( unsigned long ) 
parport_irq_handler extern t#irqreturn_t parport_irq_handler ( int , void * ) 

/* drivers/pci/access.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
s#pci_vpd_ops struct pci_vpd_ops { t#ssize_t ( * read ) ( s#pci_dev * , t#loff_t , t#size_t , void * ) ; t#ssize_t ( * write ) ( s#pci_dev * , t#loff_t , t#size_t , const void * ) ; void ( * release ) ( s#pci_dev * ) ; } 
s#pci_vpd struct pci_vpd { unsigned int len ; const s#pci_vpd_ops * ops ; s#bin_attribute * attr ; } 
pci_bus_read_config_byte int pci_bus_read_config_byte ( s#pci_bus * , unsigned int , int , t#u8 * ) 
pci_bus_read_config_word int pci_bus_read_config_word ( s#pci_bus * , unsigned int , int , t#u16 * ) 
pci_bus_read_config_dword int pci_bus_read_config_dword ( s#pci_bus * , unsigned int , int , t#u32 * ) 
pci_bus_write_config_byte int pci_bus_write_config_byte ( s#pci_bus * , unsigned int , int , t#u8 ) 
pci_bus_write_config_word int pci_bus_write_config_word ( s#pci_bus * , unsigned int , int , t#u16 ) 
pci_bus_write_config_dword int pci_bus_write_config_dword ( s#pci_bus * , unsigned int , int , t#u32 ) 
pci_bus_set_ops s#pci_ops * pci_bus_set_ops ( s#pci_bus * , s#pci_ops * ) 
pci_read_vpd t#ssize_t pci_read_vpd ( s#pci_dev * , t#loff_t , t#size_t , void * ) 
pci_write_vpd t#ssize_t pci_write_vpd ( s#pci_dev * , t#loff_t , t#size_t , const void * ) 
pci_set_vpd_size int pci_set_vpd_size ( s#pci_dev * , t#size_t ) 
pci_vpd_truncate int pci_vpd_truncate ( s#pci_dev * , t#size_t ) 
pci_block_user_cfg_access extern void pci_block_user_cfg_access ( s#pci_dev * ) 
pci_unblock_user_cfg_access extern void pci_unblock_user_cfg_access ( s#pci_dev * ) 
pcie_capability_read_word int pcie_capability_read_word ( s#pci_dev * , int , t#u16 * ) 
pcie_capability_read_dword int pcie_capability_read_dword ( s#pci_dev * , int , t#u32 * ) 
pcie_capability_write_word int pcie_capability_write_word ( s#pci_dev * , int , t#u16 ) 
pcie_capability_write_dword int pcie_capability_write_dword ( s#pci_dev * , int , t#u32 ) 
pcie_capability_clear_and_set_word int pcie_capability_clear_and_set_word ( s#pci_dev * , int , t#u16 , t#u16 ) 
pcie_capability_clear_and_set_dword int pcie_capability_clear_and_set_dword ( s#pci_dev * , int , t#u32 , t#u32 ) 

/* drivers/pci/bus.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##hotplug_slot
s##device_private
s##dma_coherent_mem
s##subsys_private
s##driver_private
s##pcie_link_state
pci_bus_resource_n s#resource * pci_bus_resource_n ( const s#pci_bus * , int ) 
pci_walk_bus void pci_walk_bus ( s#pci_bus * , int ( * ) ( s#pci_dev * , void * ) , void * ) 
pci_bus_alloc_resource int pci_bus_alloc_resource ( s#pci_bus * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , unsigned int , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
pci_bus_add_device int pci_bus_add_device ( s#pci_dev * ) 
pci_bus_add_devices void pci_bus_add_devices ( const s#pci_bus * ) 
pci_enable_bridges void pci_enable_bridges ( s#pci_bus * ) 

/* drivers/pci/hotplug-pci.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
pci_do_scan_bus extern unsigned int pci_do_scan_bus ( s#pci_bus * ) 

/* drivers/pci/hotplug/pci_hotplug_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#hotplug_slot_ops struct hotplug_slot_ops { s#module * owner ; const char * mod_name ; int ( * enable_slot ) ( s#hotplug_slot * ) ; int ( * disable_slot ) ( s#hotplug_slot * ) ; int ( * set_attention_status ) ( s#hotplug_slot * , t#u8 ) ; int ( * hardware_test ) ( s#hotplug_slot * , t#u32 ) ; int ( * get_power_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_attention_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_latch_status ) ( s#hotplug_slot * , t#u8 * ) ; int ( * get_adapter_status ) ( s#hotplug_slot * , t#u8 * ) ; } 
s#hotplug_slot_info struct hotplug_slot_info { t#u8 power_status ; t#u8 attention_status ; t#u8 latch_status ; t#u8 adapter_status ; } 
s##proc_dir_entry
s##device_private
s##dma_coherent_mem
s##subsys_private
s##driver_private
s##pcie_link_state
s#hotplug_slot struct hotplug_slot { s#hotplug_slot_ops * ops ; s#hotplug_slot_info * info ; void ( * release ) ( s#hotplug_slot * ) ; void * private ; s#list_head slot_list ; s#pci_slot * pci_slot ; } 
__pci_hp_register extern int __pci_hp_register ( s#hotplug_slot * , s#pci_bus * , int , const char * , s#module * , const char * ) 
pci_hp_deregister extern int pci_hp_deregister ( s#hotplug_slot * ) 
pci_hp_change_slot_info extern int pci_hp_change_slot_info ( s#hotplug_slot * , s#hotplug_slot_info * ) 

/* drivers/pci/hotplug/pcihp_slot.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##pcie_link_state
s##pci_vpd
pci_configure_slot void pci_configure_slot ( s#pci_dev * ) 

/* drivers/pci/hotplug/rpaphp_core.o */
s##proc_dir_entry
rpaphp_add_slot extern int rpaphp_add_slot ( s#device_node * ) 
rpaphp_slot_head extern s#list_head rpaphp_slot_head 
rpaphp_get_drc_props extern int rpaphp_get_drc_props ( s#device_node * , int * , char * * , char * * , int * ) 

/* drivers/pci/hotplug/rpaphp_slot.o */
s##proc_dir_entry
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##tvec_base
s##dma_coherent_mem
s##subsys_private
s##driver_private
s##pcie_link_state
s##pci_vpd
s#slot struct slot { s#list_head rpaphp_slot_list ; int state ; t#u32 index ; t#u32 type ; t#u32 power_domain ; char * name ; s#device_node * dn ; s#pci_bus * bus ; s#list_head * pci_devs ; s#hotplug_slot * hotplug_slot ; } 
rpaphp_deregister_slot extern int rpaphp_deregister_slot ( s#slot * ) 

/* drivers/pci/irq.o */
e#pci_lost_interrupt_reason enum pci_lost_interrupt_reason { PCI_LOST_IRQ_NO_INFORMATION = 0 , PCI_LOST_IRQ_DISABLE_MSI , PCI_LOST_IRQ_DISABLE_MSIX , PCI_LOST_IRQ_DISABLE_ACPI , } 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pci_lost_interrupt e#pci_lost_interrupt_reason pci_lost_interrupt ( s#pci_dev * ) 

/* drivers/pci/msi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_restore_msi_state extern void pci_restore_msi_state ( s#pci_dev * ) 
pci_enable_msi_block extern int pci_enable_msi_block ( s#pci_dev * , unsigned int ) 
pci_disable_msi extern void pci_disable_msi ( s#pci_dev * ) 
pci_enable_msix extern int pci_enable_msix ( s#pci_dev * , s#msix_entry * , int ) 
pci_disable_msix extern void pci_disable_msix ( s#pci_dev * ) 
pci_msi_enabled extern int pci_msi_enabled ( void ) 
pci_enable_msi_range int pci_enable_msi_range ( s#pci_dev * , int , int ) 
pci_enable_msix_range int pci_enable_msix_range ( s#pci_dev * , s#msix_entry * , int , int ) 

/* drivers/pci/pci.o */
pci_power_names extern const char * pci_power_names [ ] 
isa_dma_bridge_buggy extern int isa_dma_bridge_buggy 
pci_pci_problems extern int pci_pci_problems 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
pci_bus_max_busnr unsigned char pci_bus_max_busnr ( s#pci_bus * ) 
pci_ioremap_bar void * pci_ioremap_bar ( s#pci_dev * , int ) 
pci_find_next_capability int pci_find_next_capability ( s#pci_dev * , t#u8 , int ) 
pci_find_ext_capability int pci_find_ext_capability ( s#pci_dev * , int ) 
pci_find_next_ht_capability int pci_find_next_ht_capability ( s#pci_dev * , int , int ) 
pci_find_ht_capability int pci_find_ht_capability ( s#pci_dev * , int ) 
__pci_complete_power_transition int __pci_complete_power_transition ( s#pci_dev * , t#pci_power_t ) 
pci_choose_state t#pci_power_t pci_choose_state ( s#pci_dev * , t#pm_message_t ) 
s##pci_saved_state
pci_store_saved_state s#pci_saved_state * pci_store_saved_state ( s#pci_dev * ) 
pci_load_saved_state int pci_load_saved_state ( s#pci_dev * , s#pci_saved_state * ) 
pci_load_and_free_saved_state int pci_load_and_free_saved_state ( s#pci_dev * , s#pci_saved_state * * ) 
__pci_enable_wake int __pci_enable_wake ( s#pci_dev * , t#pci_power_t , t#bool , t#bool ) 
pci_dev_run_wake t#bool pci_dev_run_wake ( s#pci_dev * ) 
pci_enable_ido void pci_enable_ido ( s#pci_dev * , unsigned long ) 
pci_disable_ido void pci_disable_ido ( s#pci_dev * , unsigned long ) 
e#pci_obff_signal_type enum pci_obff_signal_type { PCI_EXP_OBFF_SIGNAL_L0 , PCI_EXP_OBFF_SIGNAL_ALWAYS , } 
pci_enable_obff int pci_enable_obff ( s#pci_dev * , e#pci_obff_signal_type ) 
pci_disable_obff void pci_disable_obff ( s#pci_dev * ) 
pci_ltr_supported t#bool pci_ltr_supported ( s#pci_dev * ) 
pci_enable_ltr int pci_enable_ltr ( s#pci_dev * ) 
pci_disable_ltr void pci_disable_ltr ( s#pci_dev * ) 
pci_set_ltr int pci_set_ltr ( s#pci_dev * , int , int ) 
pci_set_cacheline_size int pci_set_cacheline_size ( s#pci_dev * ) 
pci_msi_off void pci_msi_off ( s#pci_dev * ) 
pci_set_dma_max_seg_size int pci_set_dma_max_seg_size ( s#pci_dev * , unsigned int ) 
pci_set_dma_seg_boundary int pci_set_dma_seg_boundary ( s#pci_dev * , unsigned long ) 
__pci_reset_function int __pci_reset_function ( s#pci_dev * ) 
pci_reset_function int pci_reset_function ( s#pci_dev * ) 
pcix_get_max_mmrbc int pcix_get_max_mmrbc ( s#pci_dev * ) 
pcix_get_mmrbc int pcix_get_mmrbc ( s#pci_dev * ) 
pcix_set_mmrbc int pcix_set_mmrbc ( s#pci_dev * , int ) 
pcie_get_readrq int pcie_get_readrq ( s#pci_dev * ) 
pcie_set_readrq int pcie_set_readrq ( s#pci_dev * , int ) 
e#pci_bus_speed enum pci_bus_speed { PCI_SPEED_33MHz = 0x00 , PCI_SPEED_66MHz = 0x01 , PCI_SPEED_66MHz_PCIX = 0x02 , PCI_SPEED_100MHz_PCIX = 0x03 , PCI_SPEED_133MHz_PCIX = 0x04 , PCI_SPEED_66MHz_PCIX_ECC = 0x05 , PCI_SPEED_100MHz_PCIX_ECC = 0x06 , PCI_SPEED_133MHz_PCIX_ECC = 0x07 , PCI_SPEED_66MHz_PCIX_266 = 0x09 , PCI_SPEED_100MHz_PCIX_266 = 0x0a , PCI_SPEED_133MHz_PCIX_266 = 0x0b , AGP_UNKNOWN = 0x0c , AGP_1X = 0x0d , AGP_2X = 0x0e , AGP_4X = 0x0f , AGP_8X = 0x10 , PCI_SPEED_66MHz_PCIX_533 = 0x11 , PCI_SPEED_100MHz_PCIX_533 = 0x12 , PCI_SPEED_133MHz_PCIX_533 = 0x13 , PCIE_SPEED_2_5GT = 0x14 , PCIE_SPEED_5_0GT = 0x15 , PCIE_SPEED_8_0GT = 0x16 , PCI_SPEED_UNKNOWN = 0xff , } 
e#pcie_link_width enum pcie_link_width { PCIE_LNK_WIDTH_RESRV = 0x00 , PCIE_LNK_X1 = 0x01 , PCIE_LNK_X2 = 0x02 , PCIE_LNK_X4 = 0x04 , PCIE_LNK_X8 = 0x08 , PCIE_LNK_X12 = 0x0C , PCIE_LNK_X16 = 0x10 , PCIE_LNK_X32 = 0x20 , PCIE_LNK_WIDTH_UNKNOWN = 0xFF , } 
pcie_get_minimum_link int pcie_get_minimum_link ( s#pci_dev * , e#pci_bus_speed * , e#pcie_link_width * ) 
pci_device_is_present t#bool pci_device_is_present ( s#pci_dev * ) 
pci_fixup_cardbus void pci_fixup_cardbus ( s#pci_bus * ) 
pci_reenable_device int pci_reenable_device ( s#pci_dev * ) 
pci_enable_device_io int pci_enable_device_io ( s#pci_dev * ) 
pci_enable_device_mem int pci_enable_device_mem ( s#pci_dev * ) 
pci_enable_device int pci_enable_device ( s#pci_dev * ) 
pcim_enable_device int pcim_enable_device ( s#pci_dev * ) 
pcim_pin_device void pcim_pin_device ( s#pci_dev * ) 
pci_disable_device void pci_disable_device ( s#pci_dev * ) 
pci_find_capability int pci_find_capability ( s#pci_dev * , int ) 
pci_bus_find_capability int pci_bus_find_capability ( s#pci_bus * , unsigned int , int ) 
pci_release_regions void pci_release_regions ( s#pci_dev * ) 
pci_request_regions int pci_request_regions ( s#pci_dev * , const char * ) 
pci_request_regions_exclusive int pci_request_regions_exclusive ( s#pci_dev * , const char * ) 
pci_release_region void pci_release_region ( s#pci_dev * , int ) 
pci_request_region int pci_request_region ( s#pci_dev * , int , const char * ) 
pci_request_region_exclusive int pci_request_region_exclusive ( s#pci_dev * , int , const char * ) 
pci_release_selected_regions void pci_release_selected_regions ( s#pci_dev * , int ) 
pci_request_selected_regions int pci_request_selected_regions ( s#pci_dev * , int , const char * ) 
pci_request_selected_regions_exclusive int pci_request_selected_regions_exclusive ( s#pci_dev * , int , const char * ) 
pci_set_master void pci_set_master ( s#pci_dev * ) 
pci_clear_master void pci_clear_master ( s#pci_dev * ) 
pci_set_mwi int pci_set_mwi ( s#pci_dev * ) 
pci_try_set_mwi int pci_try_set_mwi ( s#pci_dev * ) 
pci_clear_mwi void pci_clear_mwi ( s#pci_dev * ) 
pci_intx void pci_intx ( s#pci_dev * , int ) 
pci_assign_resource int pci_assign_resource ( s#pci_dev * , int ) 
pci_find_parent_resource s#resource * pci_find_parent_resource ( const s#pci_dev * , s#resource * ) 
pci_select_bars int pci_select_bars ( s#pci_dev * , unsigned long ) 
pci_set_power_state int pci_set_power_state ( s#pci_dev * , t#pci_power_t ) 
pci_save_state int pci_save_state ( s#pci_dev * ) 
pci_restore_state void pci_restore_state ( s#pci_dev * ) 
pci_pme_capable t#bool pci_pme_capable ( s#pci_dev * , t#pci_power_t ) 
pci_pme_active void pci_pme_active ( s#pci_dev * , t#bool ) 
pci_wake_from_d3 int pci_wake_from_d3 ( s#pci_dev * , t#bool ) 
pci_target_state t#pci_power_t pci_target_state ( s#pci_dev * ) 
pci_prepare_to_sleep int pci_prepare_to_sleep ( s#pci_dev * ) 
pci_back_from_sleep int pci_back_from_sleep ( s#pci_dev * ) 
e#pcie_reset_state enum pcie_reset_state { pcie_deassert_reset = ( pcie_reset_state_t ) 1 , pcie_warm_reset = ( pcie_reset_state_t ) 2 , pcie_hot_reset = ( pcie_reset_state_t ) 3 } 
pci_set_pcie_reset_state int pci_set_pcie_reset_state ( s#pci_dev * , e#pcie_reset_state ) 

/* drivers/pci/pci-driver.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_add_dynid int pci_add_dynid ( s#pci_driver * , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned int , unsigned long ) 
pci_match_id const s#pci_device_id * pci_match_id ( const s#pci_device_id * , s#pci_dev * ) 
__pci_register_driver int __pci_register_driver ( s#pci_driver * , s#module * , const char * ) 
pci_unregister_driver void pci_unregister_driver ( s#pci_driver * ) 
pci_dev_driver s#pci_driver * pci_dev_driver ( const s#pci_dev * ) 
pci_bus_type extern s#bus_type pci_bus_type 
pci_dev_get extern s#pci_dev * pci_dev_get ( s#pci_dev * ) 
pci_dev_put extern void pci_dev_put ( s#pci_dev * ) 

/* drivers/pci/pcie/aer/aerdrv.o */
aer_irq extern t#irqreturn_t aer_irq ( int , void * ) 

/* drivers/pci/pcie/aer/aerdrv_core.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pci_enable_pcie_error_reporting extern int pci_enable_pcie_error_reporting ( s#pci_dev * ) 
pci_disable_pcie_error_reporting extern int pci_disable_pcie_error_reporting ( s#pci_dev * ) 
pci_cleanup_aer_uncorrect_error_status extern int pci_cleanup_aer_uncorrect_error_status ( s#pci_dev * ) 

/* drivers/pci/pcie/aspm.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_disable_link_state_locked extern void pci_disable_link_state_locked ( s#pci_dev * , int ) 
pci_disable_link_state extern void pci_disable_link_state ( s#pci_dev * , int ) 
pcie_aspm_enabled extern int pcie_aspm_enabled ( void ) 
pcie_aspm_support_enabled extern t#bool pcie_aspm_support_enabled ( void ) 

/* drivers/pci/pcie/portdrv_bus.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##subsys_private
pcie_port_bus_type extern s#bus_type pcie_port_bus_type 

/* drivers/pci/pcie/portdrv_core.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s#pcie_device struct pcie_device { int irq ; s#pci_dev * port ; t#u32 service ; void * priv_data ; s#device device ; } 
s#pcie_port_service_driver struct pcie_port_service_driver { const char * name ; int ( * probe ) ( s#pcie_device * ) ; void ( * remove ) ( s#pcie_device * ) ; int ( * suspend ) ( s#pcie_device * ) ; int ( * resume ) ( s#pcie_device * ) ; const s#pci_error_handlers * err_handler ; t#pci_ers_result_t ( * reset_link ) ( s#pci_dev * ) ; int port_type ; t#u32 service ; s#device_driver driver ; } 
pcie_port_service_register extern int pcie_port_service_register ( s#pcie_port_service_driver * ) 
pcie_port_service_unregister extern void pcie_port_service_unregister ( s#pcie_port_service_driver * ) 

/* drivers/pci/probe.o */
pci_root_buses extern s#list_head pci_root_buses 
no_pci_devices extern int no_pci_devices ( void ) 
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
pcie_update_link_speed void pcie_update_link_speed ( s#pci_bus * , t#u16 ) 
alloc_pci_dev extern s#pci_dev * alloc_pci_dev ( void ) 
pci_bus_read_dev_vendor_id t#bool pci_bus_read_dev_vendor_id ( s#pci_bus * , int , t#u32 * , int ) 
pci_scan_single_device s#pci_dev * pci_scan_single_device ( s#pci_bus * , int ) 
pcie_bus_configure_settings extern void pcie_bus_configure_settings ( s#pci_bus * , t#u8 ) 
pci_scan_bus_parented s#pci_bus * pci_scan_bus_parented ( s#device * , int , s#pci_ops * , void * ) 
pci_rescan_bus unsigned int pci_rescan_bus ( s#pci_bus * ) 
pci_add_new_bus s#pci_bus * pci_add_new_bus ( s#pci_bus * , s#pci_dev * , int ) 
pci_scan_slot int pci_scan_slot ( s#pci_bus * , int ) 
pci_scan_bridge int pci_scan_bridge ( s#pci_bus * , s#pci_dev * , int , int ) 
pci_scan_child_bus unsigned int pci_scan_child_bus ( s#pci_bus * ) 

/* drivers/pci/quirks.o */
xen_pvonhvm_unplug extern int xen_pvonhvm_unplug 
e#pci_fixup_pass enum pci_fixup_pass { pci_fixup_early , pci_fixup_header , pci_fixup_final , pci_fixup_enable , pci_fixup_resume , pci_fixup_suspend , pci_fixup_resume_early , } 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_fixup_device void pci_fixup_device ( e#pci_fixup_pass , s#pci_dev * ) 

/* drivers/pci/remove.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
pci_remove_bus extern void pci_remove_bus ( s#pci_bus * ) 
pci_remove_bus_device extern void pci_remove_bus_device ( s#pci_dev * ) 
pci_remove_behind_bridge void pci_remove_behind_bridge ( s#pci_dev * ) 
pci_stop_bus_device extern void pci_stop_bus_device ( s#pci_dev * ) 

/* drivers/pci/rom.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_map_rom void * pci_map_rom ( s#pci_dev * , t#size_t * ) 
pci_unmap_rom void pci_unmap_rom ( s#pci_dev * , void * ) 
pci_enable_rom int pci_enable_rom ( s#pci_dev * ) 
pci_disable_rom void pci_disable_rom ( s#pci_dev * ) 

/* drivers/pci/search.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_get_domain_bus_and_slot s#pci_dev * pci_get_domain_bus_and_slot ( int , unsigned int , unsigned int ) 
pci_dev_present int pci_dev_present ( const s#pci_device_id * ) 
pci_find_bus extern s#pci_bus * pci_find_bus ( int , int ) 
pci_find_next_bus s#pci_bus * pci_find_next_bus ( const s#pci_bus * ) 
pci_get_device s#pci_dev * pci_get_device ( unsigned int , unsigned int , s#pci_dev * ) 
pci_get_subsys s#pci_dev * pci_get_subsys ( unsigned int , unsigned int , unsigned int , unsigned int , s#pci_dev * ) 
pci_get_slot s#pci_dev * pci_get_slot ( s#pci_bus * , unsigned int ) 
pci_get_class s#pci_dev * pci_get_class ( unsigned int , s#pci_dev * ) 

/* drivers/pci/setup-bus.o */
s##proc_dir_entry
s##hotplug_slot
s##sock
s##sysfs_dirent
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
pci_setup_cardbus void pci_setup_cardbus ( s#pci_bus * ) 
pci_bus_size_bridges void pci_bus_size_bridges ( s#pci_bus * ) 
pci_bus_assign_resources void pci_bus_assign_resources ( const s#pci_bus * ) 
pci_assign_unassigned_bridge_resources void pci_assign_unassigned_bridge_resources ( s#pci_dev * ) 

/* drivers/pci/setup-res.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
pci_claim_resource int pci_claim_resource ( s#pci_dev * , int ) 

/* drivers/pci/slot.o */
s##sock
s##sysfs_dirent
pci_slots_kset extern s#kset * pci_slots_kset 
s##proc_dir_entry
s##device_private
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##driver_private
s##pcie_link_state
s##hotplug_slot
pci_create_slot s#pci_slot * pci_create_slot ( s#pci_bus * , int , const char * , s#hotplug_slot * ) 
pci_renumber_slot void pci_renumber_slot ( s#pci_slot * , int ) 
pci_destroy_slot void pci_destroy_slot ( s#pci_slot * ) 
pci_hp_create_module_link extern void pci_hp_create_module_link ( s#pci_slot * ) 
pci_hp_remove_module_link extern void pci_hp_remove_module_link ( s#pci_slot * ) 

/* drivers/pci/vpd.o */
pci_vpd_find_tag int pci_vpd_find_tag ( const t#u8 * , unsigned int , unsigned int , t#u8 ) 
pci_vpd_find_info_keyword int pci_vpd_find_info_keyword ( const t#u8 * , unsigned int , unsigned int , const char * ) 

/* drivers/power/power_supply_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
power_supply_class extern s#class * power_supply_class 
e#power_supply_type enum power_supply_type { POWER_SUPPLY_TYPE_BATTERY = 0 , POWER_SUPPLY_TYPE_UPS , POWER_SUPPLY_TYPE_MAINS , POWER_SUPPLY_TYPE_USB , POWER_SUPPLY_TYPE_USB_DCP , POWER_SUPPLY_TYPE_USB_CDP , POWER_SUPPLY_TYPE_USB_ACA , } 
e#power_supply_property enum power_supply_property { POWER_SUPPLY_PROP_STATUS = 0 , POWER_SUPPLY_PROP_CHARGE_TYPE , POWER_SUPPLY_PROP_HEALTH , POWER_SUPPLY_PROP_PRESENT , POWER_SUPPLY_PROP_ONLINE , POWER_SUPPLY_PROP_TECHNOLOGY , POWER_SUPPLY_PROP_CYCLE_COUNT , POWER_SUPPLY_PROP_VOLTAGE_MAX , POWER_SUPPLY_PROP_VOLTAGE_MIN , POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN , POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN , POWER_SUPPLY_PROP_VOLTAGE_NOW , POWER_SUPPLY_PROP_VOLTAGE_AVG , POWER_SUPPLY_PROP_CURRENT_MAX , POWER_SUPPLY_PROP_CURRENT_NOW , POWER_SUPPLY_PROP_CURRENT_AVG , POWER_SUPPLY_PROP_POWER_NOW , POWER_SUPPLY_PROP_POWER_AVG , POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN , POWER_SUPPLY_PROP_CHARGE_EMPTY_DESIGN , POWER_SUPPLY_PROP_CHARGE_FULL , POWER_SUPPLY_PROP_CHARGE_EMPTY , POWER_SUPPLY_PROP_CHARGE_NOW , POWER_SUPPLY_PROP_CHARGE_AVG , POWER_SUPPLY_PROP_CHARGE_COUNTER , POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN , POWER_SUPPLY_PROP_ENERGY_EMPTY_DESIGN , POWER_SUPPLY_PROP_ENERGY_FULL , POWER_SUPPLY_PROP_ENERGY_EMPTY , POWER_SUPPLY_PROP_ENERGY_NOW , POWER_SUPPLY_PROP_ENERGY_AVG , POWER_SUPPLY_PROP_CAPACITY , POWER_SUPPLY_PROP_CAPACITY_LEVEL , POWER_SUPPLY_PROP_TEMP , POWER_SUPPLY_PROP_TEMP_AMBIENT , POWER_SUPPLY_PROP_TIME_TO_EMPTY_NOW , POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG , POWER_SUPPLY_PROP_TIME_TO_FULL_NOW , POWER_SUPPLY_PROP_TIME_TO_FULL_AVG , POWER_SUPPLY_PROP_TYPE , POWER_SUPPLY_PROP_MODEL_NAME , POWER_SUPPLY_PROP_MANUFACTURER , POWER_SUPPLY_PROP_SERIAL_NUMBER , } 
u#power_supply_propval union power_supply_propval { int intval ; const char * strval ; } 
s#power_supply struct power_supply { const char * name ; e#power_supply_type type ; e#power_supply_property * properties ; t#size_t num_properties ; char * * supplied_to ; t#size_t num_supplicants ; int ( * get_property ) ( s#power_supply * , e#power_supply_property , u#power_supply_propval * ) ; int ( * set_property ) ( s#power_supply * , e#power_supply_property , const u#power_supply_propval * ) ; int ( * property_is_writeable ) ( s#power_supply * , e#power_supply_property ) ; void ( * external_power_changed ) ( s#power_supply * ) ; void ( * set_charged ) ( s#power_supply * ) ; int use_for_apm ; s#device * dev ; s#work_struct changed_work ; s#led_trigger * charging_full_trig ; char * charging_full_trig_name ; s#led_trigger * charging_trig ; char * charging_trig_name ; s#led_trigger * full_trig ; char * full_trig_name ; s#led_trigger * online_trig ; char * online_trig_name ; s#led_trigger * charging_blink_full_solid_trig ; char * charging_blink_full_solid_trig_name ; } 
power_supply_changed extern void power_supply_changed ( s#power_supply * ) 
power_supply_am_i_supplied extern int power_supply_am_i_supplied ( s#power_supply * ) 
power_supply_is_system_supplied extern int power_supply_is_system_supplied ( void ) 
power_supply_set_battery_charged extern int power_supply_set_battery_charged ( s#power_supply * ) 
power_supply_get_by_name extern s#power_supply * power_supply_get_by_name ( char * ) 
power_supply_register extern int power_supply_register ( s#device * , s#power_supply * ) 
power_supply_unregister extern void power_supply_unregister ( s#power_supply * ) 

/* drivers/pps/kapi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#pps_source_info struct pps_source_info { char name [ 32 ] ; char path [ 32 ] ; int mode ; void ( * echo ) ( s#pps_device * , int , void * ) ; s#module * owner ; s#device * dev ; } 
s#pps_ktime struct pps_ktime { t#__s64 sec ; t#__s32 nsec ; t#__u32 flags ; } 
s#pps_kparams struct pps_kparams { int api_version ; int mode ; s#pps_ktime assert_off_tu ; s#pps_ktime clear_off_tu ; } 
s#pps_device struct pps_device { s#pps_source_info info ; s#pps_kparams params ; t#__u32 assert_sequence ; t#__u32 clear_sequence ; s#pps_ktime assert_tu ; s#pps_ktime clear_tu ; int current_mode ; unsigned int last_ev ; t#wait_queue_head_t queue ; unsigned int id ; s#cdev cdev ; s#device * dev ; s#fasync_struct * async_queue ; t#spinlock_t lock ; } 
pps_register_source extern s#pps_device * pps_register_source ( s#pps_source_info * , int ) 
pps_unregister_source extern void pps_unregister_source ( s#pps_device * ) 
pps_event extern void pps_event ( s#pps_device * , s#pps_event_time * , int , void * ) 

/* drivers/ptp/ptp_clock.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##linux_binfmt
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s#timex struct timex { unsigned int modes ; long offset ; long freq ; long maxerror ; long esterror ; int status ; long constant ; long precision ; long tolerance ; s#timeval time ; long tick ; long ppsfreq ; long jitter ; int shift ; long stabil ; long jitcnt ; long calcnt ; long errcnt ; long stbcnt ; int tai ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; int : 32 ; } 
t#timer_t typedef t#__kernel_timer_t timer_t 
s#sigqueue struct sigqueue { s#list_head list ; int flags ; t#siginfo_t info ; s#user_struct * user ; } 
u#cpu_time_count union cpu_time_count { t#cputime_t cpu ; unsigned long long sched ; } 
s#cpu_timer_list struct cpu_timer_list { s#list_head entry ; u#cpu_time_count expires , incr ; s#task_struct * task ; int firing ; } 
e#alarmtimer_type enum alarmtimer_type { ALARM_REALTIME , ALARM_BOOTTIME , ALARM_NUMTYPE , } 
s#alarm struct alarm { s#timerqueue_node node ; t#ktime_t period ; void ( * function ) ( s#alarm * ) ; e#alarmtimer_type type ; t#bool enabled ; void * data ; } 
s#k_itimer struct k_itimer { s#list_head list ; t#spinlock_t it_lock ; t#clockid_t it_clock ; t#timer_t it_id ; int it_overrun ; int it_overrun_last ; int it_requeue_pending ; int it_sigev_notify ; s#signal_struct * it_signal ; union { s#pid * it_pid ; s#task_struct * it_process ; } ; s#sigqueue * sigq ; union { struct { s#hrtimer timer ; t#ktime_t interval ; } real ; s#cpu_timer_list cpu ; struct { unsigned int clock ; unsigned int node ; unsigned long incr ; unsigned long expires ; } mmtimer ; s#alarm alarmtimer ; s#rcu_head rcu ; } it ; } 
s#itimerspec struct itimerspec { s#timespec it_interval ; s#timespec it_value ; } 
s#posix_clock_operations struct posix_clock_operations { s#module * owner ; int ( * clock_adjtime ) ( s#posix_clock * , s#timex * ) ; int ( * clock_gettime ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_getres ) ( s#posix_clock * , s#timespec * ) ; int ( * clock_settime ) ( s#posix_clock * , const s#timespec * ) ; int ( * timer_create ) ( s#posix_clock * , s#k_itimer * ) ; int ( * timer_delete ) ( s#posix_clock * , s#k_itimer * ) ; void ( * timer_gettime ) ( s#posix_clock * , s#k_itimer * , s#itimerspec * ) ; int ( * timer_settime ) ( s#posix_clock * , s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * fasync ) ( s#posix_clock * , int , s#file * , int ) ; long ( * ioctl ) ( s#posix_clock * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#posix_clock * , s#vm_area_struct * ) ; int ( * open ) ( s#posix_clock * , t#fmode_t ) ; t#uint ( * poll ) ( s#posix_clock * , s#file * , t#poll_table * ) ; int ( * release ) ( s#posix_clock * ) ; t#ssize_t ( * read ) ( s#posix_clock * , t#uint , char * , t#size_t ) ; } 
s#posix_clock struct posix_clock { s#posix_clock_operations ops ; s#cdev cdev ; s#kref kref ; s#rw_semaphore rwsem ; t#bool zombie ; void ( * release ) ( s#posix_clock * ) ; } 
s#ptp_extts_event struct ptp_extts_event { s#ptp_clock_time t ; unsigned int index ; unsigned int flags ; unsigned int rsv [ 2 ] ; } 
s#timestamp_event_queue struct timestamp_event_queue { s#ptp_extts_event buf [ 128 ] ; int head ; int tail ; t#spinlock_t lock ; } 
s#ptp_clock struct ptp_clock { s#posix_clock clock ; s#device * dev ; s#ptp_clock_info * info ; t#dev_t devid ; int index ; s#pps_device * pps_source ; long dialed_frequency ; s#timestamp_event_queue tsevq ; s#mutex tsevq_mux ; t#wait_queue_head_t tsev_wq ; int defunct ; } 
ptp_clock_register extern s#ptp_clock * ptp_clock_register ( s#ptp_clock_info * , s#device * ) 
ptp_clock_unregister extern int ptp_clock_unregister ( s#ptp_clock * ) 
s#ptp_clock_event struct ptp_clock_event { int type ; int index ; union { t#u64 timestamp ; s#pps_event_time pps_times ; } ; } 
ptp_clock_event extern void ptp_clock_event ( s#ptp_clock * , s#ptp_clock_event * ) 
ptp_clock_index extern int ptp_clock_index ( s#ptp_clock * ) 

/* drivers/ptp/ptp_pch.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pch_ch_control_read t#u32 pch_ch_control_read ( s#pci_dev * ) 
pch_ch_control_write void pch_ch_control_write ( s#pci_dev * , t#u32 ) 
pch_ch_event_read t#u32 pch_ch_event_read ( s#pci_dev * ) 
pch_ch_event_write void pch_ch_event_write ( s#pci_dev * , t#u32 ) 
pch_src_uuid_lo_read t#u32 pch_src_uuid_lo_read ( s#pci_dev * ) 
pch_src_uuid_hi_read t#u32 pch_src_uuid_hi_read ( s#pci_dev * ) 
pch_rx_snap_read t#u64 pch_rx_snap_read ( s#pci_dev * ) 
pch_tx_snap_read t#u64 pch_tx_snap_read ( s#pci_dev * ) 
pch_set_station_address int pch_set_station_address ( t#u8 * , s#pci_dev * ) 

/* drivers/rapidio/rio.o */
s#rio_msg struct rio_msg { s#resource * res ; void ( * mcback ) ( s#rio_mport * , void * , int , int ) ; } 
s#rio_ops struct rio_ops { int ( * lcread ) ( s#rio_mport * , int , t#u32 , int , t#u32 * ) ; int ( * lcwrite ) ( s#rio_mport * , int , t#u32 , int , t#u32 ) ; int ( * cread ) ( s#rio_mport * , int , t#u16 , t#u8 , t#u32 , int , t#u32 * ) ; int ( * cwrite ) ( s#rio_mport * , int , t#u16 , t#u8 , t#u32 , int , t#u32 ) ; int ( * dsend ) ( s#rio_mport * , int , t#u16 , t#u16 ) ; int ( * pwenable ) ( s#rio_mport * , int ) ; int ( * open_outb_mbox ) ( s#rio_mport * , void * , int , int ) ; void ( * close_outb_mbox ) ( s#rio_mport * , int ) ; int ( * open_inb_mbox ) ( s#rio_mport * , void * , int , int ) ; void ( * close_inb_mbox ) ( s#rio_mport * , int ) ; int ( * add_outb_message ) ( s#rio_mport * , s#rio_dev * , int , void * , t#size_t ) ; int ( * add_inb_buffer ) ( s#rio_mport * , int , void * ) ; void * ( * get_inb_message ) ( s#rio_mport * , int ) ; } 
e#rio_phy_type enum rio_phy_type { RIO_PHY_PARALLEL , RIO_PHY_SERIAL , } 
s#rio_mport struct rio_mport { s#list_head dbells ; s#list_head node ; s#list_head nnode ; s#resource iores ; s#resource riores [ 16 ] ; s#rio_msg inb_msg [ 4 ] ; s#rio_msg outb_msg [ 4 ] ; int host_deviceid ; s#rio_ops * ops ; unsigned char id ; unsigned char index ; unsigned int sys_size ; e#rio_phy_type phy_type ; t#u32 phys_efptr ; unsigned char name [ 40 ] ; void * priv ; } 
s#rio_net struct rio_net { s#list_head node ; s#list_head devices ; s#list_head mports ; s#rio_mport * hport ; unsigned char id ; } 
s#rio_device_id struct rio_device_id { t#u16 did , vid ; t#u16 asm_did , asm_vid ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##of_device_id
s##driver_private
s#rio_driver struct rio_driver { s#list_head node ; char * name ; const s#rio_device_id * id_table ; int ( * probe ) ( s#rio_dev * , const s#rio_device_id * ) ; void ( * remove ) ( s#rio_dev * ) ; int ( * suspend ) ( s#rio_dev * , t#u32 ) ; int ( * resume ) ( s#rio_dev * ) ; int ( * enable_wake ) ( s#rio_dev * , t#u32 , int ) ; s#device_driver driver ; } 
u#rio_pw_msg union rio_pw_msg { struct { t#u32 comptag ; t#u32 errdetect ; t#u32 is_port ; t#u32 ltlerrdet ; t#u32 padding [ 12 ] ; } em ; t#u32 raw [ 64 / sizeof ( u32 ) ] ; } 
s#rio_switch struct rio_switch { s#list_head node ; t#u16 switchid ; t#u8 * route_table ; t#u32 port_ok ; int ( * add_entry ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 , t#u16 , t#u8 ) ; int ( * get_entry ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 , t#u16 , t#u8 * ) ; int ( * clr_table ) ( s#rio_mport * , t#u16 , t#u8 , t#u16 ) ; int ( * set_domain ) ( s#rio_mport * , t#u16 , t#u8 , t#u8 ) ; int ( * get_domain ) ( s#rio_mport * , t#u16 , t#u8 , t#u8 * ) ; int ( * em_init ) ( s#rio_dev * ) ; int ( * em_handle ) ( s#rio_dev * , t#u8 ) ; int ( * sw_sysfs ) ( s#rio_dev * , int ) ; s#rio_dev * nextdev [ 0 ] ; } 
s#rio_dev struct rio_dev { s#list_head global_list ; s#list_head net_list ; s#rio_net * net ; t#u16 did ; t#u16 vid ; t#u32 device_rev ; t#u16 asm_did ; t#u16 asm_vid ; t#u16 asm_rev ; t#u16 efptr ; t#u32 pef ; t#u32 swpinfo ; t#u32 src_ops ; t#u32 dst_ops ; t#u32 comp_tag ; t#u32 phys_efptr ; t#u32 em_efptr ; t#u64 dma_mask ; s#rio_driver * driver ; s#device dev ; s#resource riores [ 16 ] ; int ( * pwcback ) ( s#rio_dev * , u#rio_pw_msg * , int ) ; t#u16 destid ; t#u8 hopcount ; s#rio_dev * prev ; s#rio_switch rswitch [ 0 ] ; } 
rio_request_inb_pwrite extern int rio_request_inb_pwrite ( s#rio_dev * , int ( * ) ( s#rio_dev * , u#rio_pw_msg * , int ) ) 
rio_release_inb_pwrite extern int rio_release_inb_pwrite ( s#rio_dev * ) 
rio_inb_pwrite_handler extern int rio_inb_pwrite_handler ( u#rio_pw_msg * ) 
rio_local_get_device_id extern t#u16 rio_local_get_device_id ( s#rio_mport * ) 
rio_get_device extern s#rio_dev * rio_get_device ( t#u16 , t#u16 , s#rio_dev * ) 
rio_get_asm extern s#rio_dev * rio_get_asm ( t#u16 , t#u16 , t#u16 , t#u16 , s#rio_dev * ) 
rio_request_inb_dbell extern int rio_request_inb_dbell ( s#rio_mport * , void * , t#u16 , t#u16 , void ( * ) ( s#rio_mport * , void * , t#u16 , t#u16 , t#u16 ) ) 
rio_release_inb_dbell extern int rio_release_inb_dbell ( s#rio_mport * , t#u16 , t#u16 ) 
rio_request_outb_dbell extern s#resource * rio_request_outb_dbell ( s#rio_dev * , t#u16 , t#u16 ) 
rio_release_outb_dbell extern int rio_release_outb_dbell ( s#rio_dev * , s#resource * ) 
rio_request_inb_mbox extern int rio_request_inb_mbox ( s#rio_mport * , void * , int , int , void ( * ) ( s#rio_mport * , void * , int , int ) ) 
rio_release_inb_mbox extern int rio_release_inb_mbox ( s#rio_mport * , int ) 
rio_request_outb_mbox extern int rio_request_outb_mbox ( s#rio_mport * , void * , int , int , void ( * ) ( s#rio_mport * , void * , int , int ) ) 
rio_release_outb_mbox extern int rio_release_outb_mbox ( s#rio_mport * , int ) 

/* drivers/rapidio/rio-access.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##subsys_private
s##of_device_id
s##driver_private
__rio_local_read_config_8 int __rio_local_read_config_8 ( s#rio_mport * , t#u32 , t#u8 * ) 
__rio_local_read_config_16 int __rio_local_read_config_16 ( s#rio_mport * , t#u32 , t#u16 * ) 
__rio_local_read_config_32 int __rio_local_read_config_32 ( s#rio_mport * , t#u32 , t#u32 * ) 
__rio_local_write_config_8 int __rio_local_write_config_8 ( s#rio_mport * , t#u32 , t#u8 ) 
__rio_local_write_config_16 int __rio_local_write_config_16 ( s#rio_mport * , t#u32 , t#u16 ) 
__rio_local_write_config_32 int __rio_local_write_config_32 ( s#rio_mport * , t#u32 , t#u32 ) 
rio_mport_read_config_8 int rio_mport_read_config_8 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u8 * ) 
rio_mport_read_config_16 int rio_mport_read_config_16 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u16 * ) 
rio_mport_read_config_32 int rio_mport_read_config_32 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u32 * ) 
rio_mport_write_config_8 int rio_mport_write_config_8 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u8 ) 
rio_mport_write_config_16 int rio_mport_write_config_16 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u16 ) 
rio_mport_write_config_32 int rio_mport_write_config_32 ( s#rio_mport * , t#u16 , t#u8 , t#u32 , t#u32 ) 
rio_mport_send_doorbell int rio_mport_send_doorbell ( s#rio_mport * , t#u16 , t#u16 ) 

/* drivers/rapidio/rio-driver.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
rio_register_driver int rio_register_driver ( s#rio_driver * ) 
rio_unregister_driver void rio_unregister_driver ( s#rio_driver * ) 
rio_bus_type extern s#bus_type rio_bus_type 
rio_dev_get s#rio_dev * rio_dev_get ( s#rio_dev * ) 
rio_dev_put void rio_dev_put ( s#rio_dev * ) 

/* drivers/regulator/core.o */
s##regulator
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
regulator_get s#regulator * regulator_get ( s#device * , const char * ) 
regulator_get_exclusive s#regulator * regulator_get_exclusive ( s#device * , const char * ) 
regulator_put void regulator_put ( s#regulator * ) 
regulator_enable int regulator_enable ( s#regulator * ) 
regulator_disable int regulator_disable ( s#regulator * ) 
regulator_force_disable int regulator_force_disable ( s#regulator * ) 
regulator_is_enabled int regulator_is_enabled ( s#regulator * ) 
regulator_count_voltages int regulator_count_voltages ( s#regulator * ) 
regulator_list_voltage int regulator_list_voltage ( s#regulator * , unsigned ) 
regulator_set_voltage int regulator_set_voltage ( s#regulator * , int , int ) 
regulator_set_voltage_time int regulator_set_voltage_time ( s#regulator * , int , int ) 
regulator_sync_voltage int regulator_sync_voltage ( s#regulator * ) 
regulator_get_voltage int regulator_get_voltage ( s#regulator * ) 
regulator_set_current_limit int regulator_set_current_limit ( s#regulator * , int , int ) 
regulator_get_current_limit int regulator_get_current_limit ( s#regulator * ) 
regulator_set_mode int regulator_set_mode ( s#regulator * , unsigned int ) 
regulator_get_mode unsigned int regulator_get_mode ( s#regulator * ) 
regulator_set_optimum_mode int regulator_set_optimum_mode ( s#regulator * , int ) 
regulator_register_notifier int regulator_register_notifier ( s#regulator * , s#notifier_block * ) 
regulator_unregister_notifier int regulator_unregister_notifier ( s#regulator * , s#notifier_block * ) 
regulator_bulk_get int regulator_bulk_get ( s#device * , int , s#regulator_bulk_data * ) 
regulator_bulk_enable int regulator_bulk_enable ( int , s#regulator_bulk_data * ) 
regulator_bulk_disable int regulator_bulk_disable ( int , s#regulator_bulk_data * ) 
regulator_bulk_free void regulator_bulk_free ( int , s#regulator_bulk_data * ) 
regulator_notifier_call_chain int regulator_notifier_call_chain ( s#regulator_dev * , unsigned long , void * ) 
regulator_mode_to_status int regulator_mode_to_status ( unsigned int ) 
regulator_register s#regulator_dev * regulator_register ( s#regulator_desc * , s#device * , const s#regulator_init_data * , void * ) 
regulator_unregister void regulator_unregister ( s#regulator_dev * ) 
regulator_suspend_prepare int regulator_suspend_prepare ( t#suspend_state_t ) 
regulator_suspend_finish int regulator_suspend_finish ( void ) 
regulator_has_full_constraints void regulator_has_full_constraints ( void ) 
regulator_use_dummy_regulator void regulator_use_dummy_regulator ( void ) 
rdev_get_drvdata void * rdev_get_drvdata ( s#regulator_dev * ) 
regulator_get_drvdata void * regulator_get_drvdata ( s#regulator * ) 
regulator_set_drvdata void regulator_set_drvdata ( s#regulator * , void * ) 
rdev_get_id int rdev_get_id ( s#regulator_dev * ) 
rdev_get_dev s#device * rdev_get_dev ( s#regulator_dev * ) 
regulator_get_init_drvdata void * regulator_get_init_drvdata ( s#regulator_init_data * ) 

/* drivers/regulator/mc13xxx-regulator-core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
mc13xxx_regulator_list_voltage extern int mc13xxx_regulator_list_voltage ( s#regulator_dev * , unsigned ) 
mc13xxx_get_best_voltage_index extern int mc13xxx_get_best_voltage_index ( s#regulator_dev * , int , int ) 
mc13xxx_regulator_ops extern s#regulator_ops mc13xxx_regulator_ops 
mc13xxx_fixed_regulator_set_voltage extern int mc13xxx_fixed_regulator_set_voltage ( s#regulator_dev * , int , int , unsigned * ) 
mc13xxx_fixed_regulator_get_voltage extern int mc13xxx_fixed_regulator_get_voltage ( s#regulator_dev * ) 
mc13xxx_fixed_regulator_ops extern s#regulator_ops mc13xxx_fixed_regulator_ops 
mc13xxx_sw_regulator_is_enabled extern int mc13xxx_sw_regulator_is_enabled ( s#regulator_dev * ) 

/* drivers/scsi/constants.o */
__scsi_print_command extern void __scsi_print_command ( unsigned char * ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
scsi_print_command extern void scsi_print_command ( s#scsi_cmnd * ) 
scsi_print_status extern void scsi_print_status ( unsigned char ) 
scsi_sense_key_string extern const char * scsi_sense_key_string ( unsigned char ) 
scsi_extd_sense_format extern const char * scsi_extd_sense_format ( unsigned char , unsigned char ) 
scsi_show_extd_sense extern void scsi_show_extd_sense ( unsigned char , unsigned char ) 
scsi_show_sense_hdr extern void scsi_show_sense_hdr ( s#scsi_sense_hdr * ) 
scsi_print_sense_hdr extern void scsi_print_sense_hdr ( const char * , s#scsi_sense_hdr * ) 
scsi_cmd_print_sense_hdr extern void scsi_cmd_print_sense_hdr ( s#scsi_cmnd * , const char * , s#scsi_sense_hdr * ) 
__scsi_print_sense extern void __scsi_print_sense ( const char * , const unsigned char * , int ) 
scsi_print_sense extern void scsi_print_sense ( char * , s#scsi_cmnd * ) 
scsi_show_result extern void scsi_show_result ( int ) 
scsi_print_result extern void scsi_print_result ( s#scsi_cmnd * ) 

/* drivers/scsi/cxgbi/libcxgbi.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
s#cxgbi_hba struct cxgbi_hba { s#net_device * ndev ; s#net_device * vdev ; s#Scsi_Host * shost ; s#cxgbi_device * cdev ; t#__be32 ipv4addr ; unsigned char port_id ; } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#iscsi_cls_session struct iscsi_cls_session { s#list_head sess_list ; s#iscsi_transport * transport ; t#spinlock_t lock ; s#work_struct block_work ; s#work_struct unblock_work ; s#work_struct scan_work ; s#work_struct unbind_work ; int recovery_tmo ; s#delayed_work recovery_work ; unsigned int target_id ; t#pid_t creator ; int state ; int sid ; void * dd_data ; s#device dev ; } 
s#iscsi_cls_conn struct iscsi_cls_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; t#uint32_t cid ; s#mutex ep_mutex ; s#iscsi_endpoint * ep ; s#device dev ; } 
s#iscsi_endpoint struct iscsi_endpoint { void * dd_data ; s#device dev ; t#uint64_t id ; s#iscsi_cls_conn * conn ; } 
e#iscsi_param enum iscsi_param { ISCSI_PARAM_MAX_RECV_DLENGTH , ISCSI_PARAM_MAX_XMIT_DLENGTH , ISCSI_PARAM_HDRDGST_EN , ISCSI_PARAM_DATADGST_EN , ISCSI_PARAM_INITIAL_R2T_EN , ISCSI_PARAM_MAX_R2T , ISCSI_PARAM_IMM_DATA_EN , ISCSI_PARAM_FIRST_BURST , ISCSI_PARAM_MAX_BURST , ISCSI_PARAM_PDU_INORDER_EN , ISCSI_PARAM_DATASEQ_INORDER_EN , ISCSI_PARAM_ERL , ISCSI_PARAM_IFMARKER_EN , ISCSI_PARAM_OFMARKER_EN , ISCSI_PARAM_EXP_STATSN , ISCSI_PARAM_TARGET_NAME , ISCSI_PARAM_TPGT , ISCSI_PARAM_PERSISTENT_ADDRESS , ISCSI_PARAM_PERSISTENT_PORT , ISCSI_PARAM_SESS_RECOVERY_TMO , ISCSI_PARAM_CONN_PORT , ISCSI_PARAM_CONN_ADDRESS , ISCSI_PARAM_USERNAME , ISCSI_PARAM_USERNAME_IN , ISCSI_PARAM_PASSWORD , ISCSI_PARAM_PASSWORD_IN , ISCSI_PARAM_FAST_ABORT , ISCSI_PARAM_ABORT_TMO , ISCSI_PARAM_LU_RESET_TMO , ISCSI_PARAM_HOST_RESET_TMO , ISCSI_PARAM_PING_TMO , ISCSI_PARAM_RECV_TMO , ISCSI_PARAM_IFACE_NAME , ISCSI_PARAM_ISID , ISCSI_PARAM_INITIATOR_NAME , ISCSI_PARAM_TGT_RESET_TMO , ISCSI_PARAM_TARGET_ALIAS , ISCSI_PARAM_CHAP_IN_IDX , ISCSI_PARAM_CHAP_OUT_IDX , ISCSI_PARAM_BOOT_ROOT , ISCSI_PARAM_BOOT_NIC , ISCSI_PARAM_BOOT_TARGET , ISCSI_PARAM_MAX , } 
e#iscsi_host_param enum iscsi_host_param { ISCSI_HOST_PARAM_HWADDRESS , ISCSI_HOST_PARAM_INITIATOR_NAME , ISCSI_HOST_PARAM_NETDEV_NAME , ISCSI_HOST_PARAM_IPADDRESS , ISCSI_HOST_PARAM_PORT_STATE , ISCSI_HOST_PARAM_PORT_SPEED , ISCSI_HOST_PARAM_MAX , } 
s#scsi_lun struct scsi_lun { t#__u8 scsi_lun [ 8 ] ; } 
t#itt_t typedef t#uint32_t itt_t 
s#iscsi_hdr struct iscsi_hdr { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_statsn ; t#__be32 max_statsn ; t#uint8_t other [ 12 ] ; } 
s#iscsi_stats_custom struct iscsi_stats_custom { char desc [ 64 ] ; t#uint64_t value ; } 
s#iscsi_stats struct iscsi_stats { t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t noptx_pdus ; t#uint32_t scsicmd_pdus ; t#uint32_t tmfcmd_pdus ; t#uint32_t login_pdus ; t#uint32_t text_pdus ; t#uint32_t dataout_pdus ; t#uint32_t logout_pdus ; t#uint32_t snack_pdus ; t#uint32_t noprx_pdus ; t#uint32_t scsirsp_pdus ; t#uint32_t tmfrsp_pdus ; t#uint32_t textrsp_pdus ; t#uint32_t datain_pdus ; t#uint32_t logoutrsp_pdus ; t#uint32_t r2t_pdus ; t#uint32_t async_pdus ; t#uint32_t rjt_pdus ; t#uint32_t digest_err ; t#uint32_t timeout_err ; t#uint32_t custom_length ; s#iscsi_stats_custom custom [ 0 ] __attribute__ ( ( aligned ( sizeof ( uint64_t ) ) ) ) ; } 
s#iscsi_r2t_info struct iscsi_r2t_info { t#__be32 ttt ; t#__be32 exp_statsn ; t#uint32_t data_length ; t#uint32_t data_offset ; int data_count ; int datasn ; int sent ; } 
s#iscsi_pool struct iscsi_pool { s#kfifo queue ; void * * pool ; int max ; } 
s#iscsi_session struct iscsi_session { s#iscsi_cls_session * cls_session ; s#mutex eh_mutex ; t#uint32_t cmdsn ; t#uint32_t exp_cmdsn ; t#uint32_t max_cmdsn ; t#uint32_t queued_cmdsn ; int abort_timeout ; int lu_reset_timeout ; int tgt_reset_timeout ; int initial_r2t_en ; unsigned max_r2t ; int imm_data_en ; unsigned first_burst ; unsigned max_burst ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int fast_abort ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * ifacename ; char * initiatorname ; char * boot_root ; char * boot_nic ; char * boot_target ; s#iscsi_transport * tt ; s#Scsi_Host * host ; s#iscsi_conn * leadconn ; t#spinlock_t lock ; int state ; int age ; int scsi_cmds_max ; int cmds_max ; s#iscsi_task * * cmds ; s#iscsi_pool cmdpool ; void * dd_data ; } 
s#iscsi_tm struct iscsi_tm { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd1 [ 2 ] ; t#uint8_t hlength ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#itt_t rtt ; t#__be32 cmdsn ; t#__be32 exp_statsn ; t#__be32 refcmdsn ; t#__be32 exp_datasn ; t#uint8_t rsvd2 [ 8 ] ; } 
s#iscsi_conn struct iscsi_conn { s#iscsi_cls_conn * cls_conn ; void * dd_data ; s#iscsi_session * session ; int stop_stage ; s#timer_list transport_timer ; unsigned long last_recv ; unsigned long last_ping ; int ping_timeout ; int recv_timeout ; s#iscsi_task * ping_task ; t#uint32_t exp_statsn ; int id ; int c_stage ; char * data ; s#iscsi_task * login_task ; s#iscsi_task * task ; s#list_head mgmtqueue ; s#list_head cmdqueue ; s#list_head requeue ; s#work_struct xmitwork ; unsigned long suspend_tx ; unsigned long suspend_rx ; t#wait_queue_head_t ehwait ; s#iscsi_tm tmhdr ; s#timer_list tmf_timer ; int tmf_state ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; int hdrdgst_en ; int datadgst_en ; int ifmarker_en ; int ofmarker_en ; int persistent_port ; char * persistent_address ; t#uint64_t txdata_octets ; t#uint64_t rxdata_octets ; t#uint32_t scsicmd_pdus_cnt ; t#uint32_t dataout_pdus_cnt ; t#uint32_t scsirsp_pdus_cnt ; t#uint32_t datain_pdus_cnt ; t#uint32_t r2t_pdus_cnt ; t#uint32_t tmfcmd_pdus_cnt ; t#int32_t tmfrsp_pdus_cnt ; t#uint32_t eh_abort_cnt ; t#uint32_t fmr_unalign_cnt ; } 
s#iscsi_task struct iscsi_task { s#iscsi_hdr * hdr ; unsigned short hdr_max ; unsigned short hdr_len ; t#itt_t hdr_itt ; t#__be32 cmdsn ; s#scsi_lun lun ; int itt ; unsigned imm_count ; s#iscsi_r2t_info unsol_r2t ; char * data ; unsigned data_count ; s#scsi_cmnd * sc ; s#iscsi_conn * conn ; unsigned long last_xfer ; unsigned long last_timeout ; t#bool have_checked_conn ; int state ; t#atomic_t refcount ; s#list_head running ; void * dd_data ; } 
e#iscsi_tgt_dscvr enum iscsi_tgt_dscvr { ISCSI_TGT_DSCVR_SEND_TARGETS = 1 , ISCSI_TGT_DSCVR_ISNS = 2 , ISCSI_TGT_DSCVR_SLP = 3 , } 
s#iscsi_path struct iscsi_path { t#uint64_t handle ; t#uint8_t mac_addr [ 6 ] ; t#uint8_t mac_addr_old [ 6 ] ; t#uint32_t ip_addr_len ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } src ; union { s#in_addr v4_addr ; s#in6_addr v6_addr ; } dst ; t#uint16_t vlan_id ; t#uint16_t pmtu ; } 
s#iscsi_iface struct iscsi_iface { s#device dev ; s#iscsi_transport * transport ; t#uint32_t iface_type ; t#uint32_t iface_num ; void * dd_data ; } 
e#iscsi_param_type enum iscsi_param_type { ISCSI_PARAM , ISCSI_HOST_PARAM , ISCSI_NET_PARAM , ISCSI_FLASHNODE_PARAM , } 
s#iscsi_bus_flash_session struct iscsi_bus_flash_session { s#list_head sess_list ; s#iscsi_transport * transport ; unsigned int target_id ; int flash_state ; void * dd_data ; s#device dev ; unsigned first_burst ; unsigned max_burst ; unsigned short max_r2t ; int default_taskmgmt_timeout ; int initial_r2t_en ; int imm_data_en ; int time2wait ; int time2retain ; int pdu_inorder_en ; int dataseq_inorder_en ; int erl ; int tpgt ; char * username ; char * username_in ; char * password ; char * password_in ; char * targetname ; char * targetalias ; char * portal_type ; t#uint16_t tsid ; t#uint16_t chap_in_idx ; t#uint16_t chap_out_idx ; t#uint16_t discovery_parent_idx ; t#uint16_t discovery_parent_type ; t#uint8_t auto_snd_tgt_disable ; t#uint8_t discovery_sess ; t#uint8_t entry_state ; t#uint8_t chap_auth_en ; t#uint8_t discovery_logout_en ; t#uint8_t bidi_chap_en ; t#uint8_t discovery_auth_optional ; t#uint8_t isid [ 6 ] ; t#uint8_t is_boot_target ; } 
s#iscsi_bus_flash_conn struct iscsi_bus_flash_conn { s#list_head conn_list ; void * dd_data ; s#iscsi_transport * transport ; s#device dev ; t#uint32_t exp_statsn ; t#uint32_t statsn ; unsigned max_recv_dlength ; unsigned max_xmit_dlength ; unsigned max_segment_size ; unsigned tcp_xmit_wsf ; unsigned tcp_recv_wsf ; int hdrdgst_en ; int datadgst_en ; int port ; char * ipaddress ; char * link_local_ipv6_addr ; char * redirect_ipaddr ; t#uint16_t keepalive_timeout ; t#uint16_t local_port ; t#uint8_t snack_req_en ; t#uint8_t tcp_timestamp_stat ; t#uint8_t tcp_nagle_disable ; t#uint8_t tcp_wsf_disable ; t#uint8_t tcp_timer_scale ; t#uint8_t tcp_timestamp_en ; t#uint8_t ipv4_tos ; t#uint8_t ipv6_traffic_class ; t#uint8_t ipv6_flow_label ; t#uint8_t fragment_disable ; t#uint8_t is_fw_assigned_ipv6 ; } 
s#iscsi_transport struct iscsi_transport { s#module * owner ; char * name ; unsigned int caps ; s#iscsi_cls_session * ( * create_session ) ( s#iscsi_endpoint * , t#uint16_t , t#uint16_t , t#uint32_t ) ; void ( * destroy_session ) ( s#iscsi_cls_session * ) ; s#iscsi_cls_conn * ( * create_conn ) ( s#iscsi_cls_session * , t#uint32_t ) ; int ( * bind_conn ) ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#uint64_t , int ) ; int ( * start_conn ) ( s#iscsi_cls_conn * ) ; void ( * stop_conn ) ( s#iscsi_cls_conn * , int ) ; void ( * destroy_conn ) ( s#iscsi_cls_conn * ) ; int ( * set_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) ; int ( * get_ep_param ) ( s#iscsi_endpoint * , e#iscsi_param , char * ) ; int ( * get_conn_param ) ( s#iscsi_cls_conn * , e#iscsi_param , char * ) ; int ( * get_session_param ) ( s#iscsi_cls_session * , e#iscsi_param , char * ) ; int ( * get_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * ) ; int ( * set_host_param ) ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) ; int ( * send_pdu ) ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) ; void ( * get_stats ) ( s#iscsi_cls_conn * , s#iscsi_stats * ) ; int ( * init_task ) ( s#iscsi_task * ) ; int ( * xmit_task ) ( s#iscsi_task * ) ; void ( * cleanup_task ) ( s#iscsi_task * ) ; int ( * alloc_pdu ) ( s#iscsi_task * , t#uint8_t ) ; int ( * xmit_pdu ) ( s#iscsi_task * ) ; int ( * init_pdu ) ( s#iscsi_task * , unsigned int , unsigned int ) ; void ( * parse_pdu_itt ) ( s#iscsi_conn * , t#itt_t , int * , int * ) ; void ( * session_recovery_timedout ) ( s#iscsi_cls_session * ) ; s#iscsi_endpoint * ( * ep_connect ) ( s#Scsi_Host * , s#sockaddr * , int ) ; int ( * ep_poll ) ( s#iscsi_endpoint * , int ) ; void ( * ep_disconnect ) ( s#iscsi_endpoint * ) ; int ( * tgt_dscvr ) ( s#Scsi_Host * , e#iscsi_tgt_dscvr , t#uint32_t , s#sockaddr * ) ; int ( * set_path ) ( s#Scsi_Host * , s#iscsi_path * ) ; int ( * set_iface_param ) ( s#Scsi_Host * , void * , t#uint32_t ) ; int ( * get_iface_param ) ( s#iscsi_iface * , e#iscsi_param_type , int , char * ) ; t#mode_t ( * attr_is_visible ) ( int , int ) ; int ( * bsg_request ) ( s#bsg_job * ) ; int ( * send_ping ) ( s#Scsi_Host * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint32_t , s#sockaddr * ) ; int ( * get_chap ) ( s#Scsi_Host * , t#uint16_t , t#uint32_t * , char * ) ; int ( * delete_chap ) ( s#Scsi_Host * , t#uint16_t ) ; int ( * get_flashnode_param ) ( s#iscsi_bus_flash_session * , int , char * ) ; int ( * set_flashnode_param ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * , void * , int ) ; int ( * new_flashnode ) ( s#Scsi_Host * , const char * , int ) ; int ( * del_flashnode ) ( s#iscsi_bus_flash_session * ) ; int ( * login_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode ) ( s#iscsi_bus_flash_session * , s#iscsi_bus_flash_conn * ) ; int ( * logout_flashnode_sid ) ( s#iscsi_cls_session * ) ; } 
s#cxgbi_sock struct cxgbi_sock { s#cxgbi_device * cdev ; int tid ; int atid ; unsigned long flags ; unsigned int mtu ; unsigned short rss_qid ; unsigned short txq_idx ; unsigned short advmss ; unsigned int tx_chan ; unsigned int rx_chan ; unsigned int mss_idx ; unsigned int smac_idx ; unsigned char port_id ; int wr_max_cred ; int wr_cred ; int wr_una_cred ; unsigned char hcrc_len ; unsigned char dcrc_len ; void * l2t ; s#sk_buff * wr_pending_head ; s#sk_buff * wr_pending_tail ; s#sk_buff * cpl_close ; s#sk_buff * cpl_abort_req ; s#sk_buff * cpl_abort_rpl ; s#sk_buff * skb_ulp_lhdr ; t#spinlock_t lock ; s#kref refcnt ; unsigned int state ; unsigned int csk_family ; union { s#sockaddr_in saddr ; s#sockaddr_in6 saddr6 ; } ; union { s#sockaddr_in daddr ; s#sockaddr_in6 daddr6 ; } ; s#dst_entry * dst ; s#sk_buff_head receive_queue ; s#sk_buff_head write_queue ; s#timer_list retry_timer ; int err ; t#rwlock_t callback_lock ; void * user_data ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 snd_una ; t#u32 write_seq ; } 
s#cxgbi_ports_map struct cxgbi_ports_map { unsigned int max_connect ; unsigned int used ; unsigned short sport_base ; t#spinlock_t lock ; unsigned int next ; s#cxgbi_sock * * port_csk ; } 
s#cxgbi_tag_format struct cxgbi_tag_format { unsigned char sw_bits ; unsigned char rsvd_bits ; unsigned char rsvd_shift ; unsigned char filler [ 1 ] ; t#u32 rsvd_mask ; } 
s#cxgbi_gather_list struct cxgbi_gather_list { unsigned int tag ; unsigned int length ; unsigned int offset ; unsigned int nelem ; s#page * * pages ; t#dma_addr_t phys_addr [ 0 ] ; } 
s#cxgbi_ddp_info struct cxgbi_ddp_info { s#kref refcnt ; s#cxgbi_device * cdev ; s#pci_dev * pdev ; unsigned int max_txsz ; unsigned int max_rxsz ; unsigned int llimit ; unsigned int ulimit ; unsigned int nppods ; unsigned int idx_last ; unsigned char idx_bits ; unsigned char filler [ 3 ] ; unsigned int idx_mask ; unsigned int rsvd_tag_mask ; t#spinlock_t map_lock ; s#cxgbi_gather_list * * gl_map ; } 
s#cxgbi_pagepod_hdr struct cxgbi_pagepod_hdr { t#u32 vld_tid ; t#u32 pgsz_tag_clr ; t#u32 max_offset ; t#u32 page_offset ; t#u64 rsvd ; } 
s#cxgbi_device struct cxgbi_device { s#list_head list_head ; s#list_head rcu_node ; unsigned int flags ; s#net_device * * ports ; void * lldev ; s#cxgbi_hba * * hbas ; const unsigned short * mtus ; unsigned char nmtus ; unsigned char nports ; s#pci_dev * pdev ; s#dentry * debugfs_root ; s#iscsi_transport * itp ; unsigned int pfvf ; unsigned int snd_win ; unsigned int rcv_win ; unsigned int rx_credit_thres ; unsigned int skb_tx_rsvd ; unsigned int skb_rx_extra ; unsigned int tx_max_size ; unsigned int rx_max_size ; s#cxgbi_ports_map pmap ; s#cxgbi_tag_format tag_format ; s#cxgbi_ddp_info * ddp ; void ( * dev_ddp_cleanup ) ( s#cxgbi_device * ) ; int ( * csk_ddp_set ) ( s#cxgbi_sock * , s#cxgbi_pagepod_hdr * , unsigned int , unsigned int , s#cxgbi_gather_list * ) ; void ( * csk_ddp_clear ) ( s#cxgbi_hba * , unsigned int , unsigned int , unsigned int ) ; int ( * csk_ddp_setup_digest ) ( s#cxgbi_sock * , unsigned int , int , int , int ) ; int ( * csk_ddp_setup_pgidx ) ( s#cxgbi_sock * , unsigned int , int , t#bool ) ; void ( * csk_release_offload_resources ) ( s#cxgbi_sock * ) ; int ( * csk_rx_pdu_ready ) ( s#cxgbi_sock * , s#sk_buff * ) ; t#u32 ( * csk_send_rx_credits ) ( s#cxgbi_sock * , t#u32 ) ; int ( * csk_push_tx_frames ) ( s#cxgbi_sock * , int ) ; void ( * csk_send_abort_req ) ( s#cxgbi_sock * ) ; void ( * csk_send_close_req ) ( s#cxgbi_sock * ) ; int ( * csk_alloc_cpls ) ( s#cxgbi_sock * ) ; int ( * csk_init_act_open ) ( s#cxgbi_sock * ) ; void * dd_data ; } 
cxgbi_device_portmap_create int cxgbi_device_portmap_create ( s#cxgbi_device * , unsigned int , unsigned int ) 
cxgbi_device_portmap_cleanup void cxgbi_device_portmap_cleanup ( s#cxgbi_device * ) 
cxgbi_device_register s#cxgbi_device * cxgbi_device_register ( unsigned int , unsigned int ) 
cxgbi_device_unregister void cxgbi_device_unregister ( s#cxgbi_device * ) 
cxgbi_device_unregister_all void cxgbi_device_unregister_all ( unsigned int ) 
cxgbi_device_find_by_lldev s#cxgbi_device * cxgbi_device_find_by_lldev ( void * ) 
cxgbi_device_find_by_netdev s#cxgbi_device * cxgbi_device_find_by_netdev ( s#net_device * , int * ) 
cxgbi_device_find_by_netdev_rcu s#cxgbi_device * cxgbi_device_find_by_netdev_rcu ( s#net_device * , int * ) 
cxgbi_hbas_remove void cxgbi_hbas_remove ( s#cxgbi_device * ) 
cxgbi_hbas_add int cxgbi_hbas_add ( s#cxgbi_device * , unsigned int , unsigned int , s#scsi_host_template * , s#scsi_transport_template * ) 
cxgbi_sock_free_cpl_skbs void cxgbi_sock_free_cpl_skbs ( s#cxgbi_sock * ) 
cxgbi_sock_established void cxgbi_sock_established ( s#cxgbi_sock * , unsigned int , unsigned int ) 
cxgbi_sock_closed void cxgbi_sock_closed ( s#cxgbi_sock * ) 
cxgbi_sock_fail_act_open void cxgbi_sock_fail_act_open ( s#cxgbi_sock * , int ) 
cxgbi_sock_act_open_req_arp_failure void cxgbi_sock_act_open_req_arp_failure ( void * , s#sk_buff * ) 
cxgbi_sock_rcv_abort_rpl void cxgbi_sock_rcv_abort_rpl ( s#cxgbi_sock * ) 
cxgbi_sock_rcv_peer_close void cxgbi_sock_rcv_peer_close ( s#cxgbi_sock * ) 
cxgbi_sock_rcv_close_conn_rpl void cxgbi_sock_rcv_close_conn_rpl ( s#cxgbi_sock * , t#u32 ) 
cxgbi_sock_rcv_wr_ack void cxgbi_sock_rcv_wr_ack ( s#cxgbi_sock * , unsigned int , unsigned int , int ) 
cxgbi_sock_select_mss unsigned int cxgbi_sock_select_mss ( s#cxgbi_sock * , unsigned int ) 
cxgbi_sock_skb_entail void cxgbi_sock_skb_entail ( s#cxgbi_sock * , s#sk_buff * ) 
cxgbi_sock_purge_wr_queue void cxgbi_sock_purge_wr_queue ( s#cxgbi_sock * ) 
cxgbi_sock_check_wr_invariants void cxgbi_sock_check_wr_invariants ( const s#cxgbi_sock * ) 
cxgbi_ddp_page_size_factor void cxgbi_ddp_page_size_factor ( int * ) 
s#cxgbi_pagepod struct cxgbi_pagepod { s#cxgbi_pagepod_hdr hdr ; t#u64 addr [ 4 + 1 ] ; } 
cxgbi_ddp_ppod_set void cxgbi_ddp_ppod_set ( s#cxgbi_pagepod * , s#cxgbi_pagepod_hdr * , s#cxgbi_gather_list * , unsigned int ) 
cxgbi_ddp_ppod_clear void cxgbi_ddp_ppod_clear ( s#cxgbi_pagepod * ) 
cxgbi_ddp_cleanup int cxgbi_ddp_cleanup ( s#cxgbi_device * ) 
cxgbi_ddp_init int cxgbi_ddp_init ( s#cxgbi_device * , unsigned int , unsigned int , unsigned int , unsigned int ) 
cxgbi_parse_pdu_itt void cxgbi_parse_pdu_itt ( s#iscsi_conn * , t#itt_t , int * , int * ) 
cxgbi_conn_tx_open void cxgbi_conn_tx_open ( s#cxgbi_sock * ) 
cxgbi_conn_pdu_ready void cxgbi_conn_pdu_ready ( s#cxgbi_sock * ) 
cxgbi_conn_alloc_pdu int cxgbi_conn_alloc_pdu ( s#iscsi_task * , t#u8 ) 
cxgbi_conn_init_pdu int cxgbi_conn_init_pdu ( s#iscsi_task * , unsigned int , unsigned int ) 
cxgbi_conn_xmit_pdu int cxgbi_conn_xmit_pdu ( s#iscsi_task * ) 
cxgbi_cleanup_task void cxgbi_cleanup_task ( s#iscsi_task * ) 
cxgbi_get_conn_stats void cxgbi_get_conn_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 
cxgbi_set_conn_param int cxgbi_set_conn_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
cxgbi_get_ep_param int cxgbi_get_ep_param ( s#iscsi_endpoint * , e#iscsi_param , char * ) 
cxgbi_create_conn s#iscsi_cls_conn * cxgbi_create_conn ( s#iscsi_cls_session * , t#u32 ) 
cxgbi_bind_conn int cxgbi_bind_conn ( s#iscsi_cls_session * , s#iscsi_cls_conn * , t#u64 , int ) 
cxgbi_create_session s#iscsi_cls_session * cxgbi_create_session ( s#iscsi_endpoint * , t#u16 , t#u16 , t#u32 ) 
cxgbi_destroy_session void cxgbi_destroy_session ( s#iscsi_cls_session * ) 
cxgbi_set_host_param int cxgbi_set_host_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 
cxgbi_get_host_param int cxgbi_get_host_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
cxgbi_ep_connect s#iscsi_endpoint * cxgbi_ep_connect ( s#Scsi_Host * , s#sockaddr * , int ) 
cxgbi_ep_poll int cxgbi_ep_poll ( s#iscsi_endpoint * , int ) 
cxgbi_ep_disconnect void cxgbi_ep_disconnect ( s#iscsi_endpoint * ) 
cxgbi_iscsi_init int cxgbi_iscsi_init ( s#iscsi_transport * , s#scsi_transport_template * * ) 
cxgbi_iscsi_cleanup void cxgbi_iscsi_cleanup ( s#iscsi_transport * , s#scsi_transport_template * * ) 
cxgbi_attr_is_visible t#mode_t cxgbi_attr_is_visible ( int , int ) 

/* drivers/scsi/device_handler/scsi_dh.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##Scsi_Host
s##scsi_cmnd
s##scsi_sense_hdr
scsi_register_device_handler extern int scsi_register_device_handler ( s#scsi_device_handler * ) 
scsi_unregister_device_handler extern int scsi_unregister_device_handler ( s#scsi_device_handler * ) 
scsi_dh_activate extern int scsi_dh_activate ( s#request_queue * , t#activate_complete , void * ) 
scsi_dh_set_params extern int scsi_dh_set_params ( s#request_queue * , const char * ) 
scsi_dh_handler_exist extern int scsi_dh_handler_exist ( const char * ) 
scsi_dh_attach extern int scsi_dh_attach ( s#request_queue * , const char * ) 
scsi_dh_detach extern void scsi_dh_detach ( s#request_queue * ) 
scsi_dh_attached_handler_name extern const char * scsi_dh_attached_handler_name ( s#request_queue * , t#gfp_t ) 

/* drivers/scsi/fcoe/fcoe_ctlr.o */
e#fip_state enum fip_state { FIP_ST_DISABLED , FIP_ST_LINK_WAIT , FIP_ST_AUTO , FIP_ST_NON_FIP , FIP_ST_ENABLED , FIP_ST_VNMP_START , FIP_ST_VNMP_PROBE1 , FIP_ST_VNMP_PROBE2 , FIP_ST_VNMP_CLAIM , FIP_ST_VNMP_UP , } 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##workqueue_struct
e#fc_port_state enum fc_port_state { FC_PORTSTATE_UNKNOWN , FC_PORTSTATE_NOTPRESENT , FC_PORTSTATE_ONLINE , FC_PORTSTATE_OFFLINE , FC_PORTSTATE_BLOCKED , FC_PORTSTATE_BYPASSED , FC_PORTSTATE_DIAGNOSTICS , FC_PORTSTATE_LINKDOWN , FC_PORTSTATE_ERROR , FC_PORTSTATE_LOOPBACK , FC_PORTSTATE_DELETED , } 
s#fc_rport struct fc_rport { t#u32 maxframe_size ; t#u32 supported_classes ; t#u32 dev_loss_tmo ; t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; e#fc_port_state port_state ; t#u32 scsi_target_id ; t#u32 fast_io_fail_tmo ; void * dd_data ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#delayed_work dev_loss_work ; s#work_struct scan_work ; s#delayed_work fail_io_work ; s#work_struct stgt_delete_work ; s#work_struct rport_delete_work ; s#request_queue * rqst_q ; } 
e#fc_rport_state enum fc_rport_state { RPORT_ST_INIT , RPORT_ST_FLOGI , RPORT_ST_PLOGI_WAIT , RPORT_ST_PLOGI , RPORT_ST_PRLI , RPORT_ST_RTV , RPORT_ST_READY , RPORT_ST_ADISC , RPORT_ST_DELETE , } 
s#fc_rport_identifiers struct fc_rport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 port_id ; t#u32 roles ; } 
e#fc_rport_event enum fc_rport_event { RPORT_EV_NONE = 0 , RPORT_EV_READY , RPORT_EV_FAILED , RPORT_EV_STOP , RPORT_EV_LOGO } 
s#fc_rport_operations struct fc_rport_operations { void ( * event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_rport_priv struct fc_rport_priv { s#fc_lport * local_port ; s#fc_rport * rport ; s#kref kref ; e#fc_rport_state rp_state ; s#fc_rport_identifiers ids ; t#u16 flags ; t#u16 max_seq ; t#u16 disc_id ; t#u16 maxframe_size ; unsigned int retries ; unsigned int major_retries ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#mutex rp_mutex ; s#delayed_work retry_work ; e#fc_rport_event event ; s#fc_rport_operations * ops ; s#list_head peers ; s#work_struct event_work ; t#u32 supported_classes ; t#u16 prli_count ; s#rcu_head rcu ; t#u16 sp_features ; t#u8 spp_type ; void ( * lld_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; } 
s#fc_gpn_ft_resp struct fc_gpn_ft_resp { t#__u8 fp_flags ; t#__u8 fp_fid [ 3 ] ; t#__be32 fp_resvd ; t#__be64 fp_wwpn ; } 
e#fc_disc_event enum fc_disc_event { DISC_EV_NONE = 0 , DISC_EV_SUCCESS , DISC_EV_FAILED } 
s#fc_disc struct fc_disc { unsigned char retry_count ; unsigned char pending ; unsigned char requested ; unsigned short seq_count ; unsigned char buf_len ; t#u16 disc_id ; s#list_head rports ; void * priv ; s#mutex disc_mutex ; s#fc_gpn_ft_resp partial_buf ; s#delayed_work disc_work ; void ( * disc_callback ) ( s#fc_lport * , e#fc_disc_event ) ; } 
e#fc_vport_state enum fc_vport_state { FC_VPORT_UNKNOWN , FC_VPORT_ACTIVE , FC_VPORT_DISABLED , FC_VPORT_LINKDOWN , FC_VPORT_INITIALIZING , FC_VPORT_NO_FABRIC_SUPP , FC_VPORT_NO_FABRIC_RSCS , FC_VPORT_FABRIC_LOGOUT , FC_VPORT_FABRIC_REJ_WWN , FC_VPORT_FAILED , } 
e#fc_port_type enum fc_port_type { FC_PORTTYPE_UNKNOWN , FC_PORTTYPE_OTHER , FC_PORTTYPE_NOTPRESENT , FC_PORTTYPE_NPORT , FC_PORTTYPE_NLPORT , FC_PORTTYPE_LPORT , FC_PORTTYPE_PTP , FC_PORTTYPE_NPIV , } 
s#fc_vport struct fc_vport { e#fc_vport_state vport_state ; e#fc_vport_state vport_last_state ; t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#u32 vport_id ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; void * dd_data ; s#Scsi_Host * shost ; unsigned int channel ; t#u32 number ; t#u8 flags ; s#list_head peers ; s#device dev ; s#work_struct vport_delete_work ; } 
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s#fc_frame struct fc_frame { s#sk_buff skb ; } 
s#fc_seq struct fc_seq { t#u8 id ; t#u16 ssb_stat ; t#u16 cnt ; t#u32 rec_data ; } 
s#fc_els_lesb struct fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_sync_loss ; t#__be32 lesb_sig_loss ; t#__be32 lesb_prim_err ; t#__be32 lesb_inv_word ; t#__be32 lesb_inv_crc ; } 
e#fc_els_cmd enum fc_els_cmd { ELS_LS_RJT = 0x01 , ELS_LS_ACC = 0x02 , ELS_PLOGI = 0x03 , ELS_FLOGI = 0x04 , ELS_LOGO = 0x05 , ELS_ABTX = 0x06 , ELS_RCS = 0x07 , ELS_RES = 0x08 , ELS_RSS = 0x09 , ELS_RSI = 0x0a , ELS_ESTS = 0x0b , ELS_ESTC = 0x0c , ELS_ADVC = 0x0d , ELS_RTV = 0x0e , ELS_RLS = 0x0f , ELS_ECHO = 0x10 , ELS_TEST = 0x11 , ELS_RRQ = 0x12 , ELS_REC = 0x13 , ELS_SRR = 0x14 , ELS_PRLI = 0x20 , ELS_PRLO = 0x21 , ELS_SCN = 0x22 , ELS_TPLS = 0x23 , ELS_TPRLO = 0x24 , ELS_LCLM = 0x25 , ELS_GAID = 0x30 , ELS_FACT = 0x31 , ELS_FDACDT = 0x32 , ELS_NACT = 0x33 , ELS_NDACT = 0x34 , ELS_QOSR = 0x40 , ELS_RVCS = 0x41 , ELS_PDISC = 0x50 , ELS_FDISC = 0x51 , ELS_ADISC = 0x52 , ELS_RNC = 0x53 , ELS_FARP_REQ = 0x54 , ELS_FARP_REPL = 0x55 , ELS_RPS = 0x56 , ELS_RPL = 0x57 , ELS_RPBC = 0x58 , ELS_FAN = 0x60 , ELS_RSCN = 0x61 , ELS_SCR = 0x62 , ELS_RNFT = 0x63 , ELS_CSR = 0x68 , ELS_CSU = 0x69 , ELS_LINIT = 0x70 , ELS_LSTS = 0x72 , ELS_RNID = 0x78 , ELS_RLIR = 0x79 , ELS_LIRR = 0x7a , ELS_SRL = 0x7b , ELS_SBRP = 0x7c , ELS_RPSC = 0x7d , ELS_QSA = 0x7e , ELS_EVFP = 0x7f , ELS_LKA = 0x80 , ELS_AUTH_ELS = 0x90 , } 
e#fc_els_rjt_reason enum fc_els_rjt_reason { ELS_RJT_NONE = 0 , ELS_RJT_INVAL = 0x01 , ELS_RJT_LOGIC = 0x03 , ELS_RJT_BUSY = 0x05 , ELS_RJT_PROT = 0x07 , ELS_RJT_UNAB = 0x09 , ELS_RJT_UNSUP = 0x0b , ELS_RJT_INPROG = 0x0e , ELS_RJT_FIP = 0x20 , ELS_RJT_VENDOR = 0xff , } 
e#fc_els_rjt_explan enum fc_els_rjt_explan { ELS_EXPL_NONE = 0x00 , ELS_EXPL_SPP_OPT_ERR = 0x01 , ELS_EXPL_SPP_ICTL_ERR = 0x03 , ELS_EXPL_AH = 0x11 , ELS_EXPL_AH_REQ = 0x13 , ELS_EXPL_SID = 0x15 , ELS_EXPL_OXID_RXID = 0x17 , ELS_EXPL_INPROG = 0x19 , ELS_EXPL_PLOGI_REQD = 0x1e , ELS_EXPL_INSUF_RES = 0x29 , ELS_EXPL_UNAB_DATA = 0x2a , ELS_EXPL_UNSUPR = 0x2c , ELS_EXPL_INV_LEN = 0x2d , ELS_EXPL_NOT_NEIGHBOR = 0x62 , } 
s#fc_seq_els_data struct fc_seq_els_data { e#fc_els_rjt_reason reason ; e#fc_els_rjt_explan explan ; } 
s#fcp_cmnd struct fcp_cmnd { s#scsi_lun fc_lun ; t#__u8 fc_cmdref ; t#__u8 fc_pri_ta ; t#__u8 fc_tm_flags ; t#__u8 fc_flags ; t#__u8 fc_cdb [ 16 ] ; t#__be32 fc_dl ; } 
s#fc_fcp_pkt struct fc_fcp_pkt { t#spinlock_t scsi_pkt_lock ; t#atomic_t ref_cnt ; t#u32 data_len ; s#scsi_cmnd * cmd ; s#list_head list ; s#fc_lport * lp ; t#u8 state ; t#u8 cdb_status ; t#u8 status_code ; t#u8 scsi_comp_flags ; t#u32 io_status ; t#u32 req_flags ; t#u32 scsi_resid ; t#size_t xfer_len ; s#fcp_cmnd cdb_cmd ; t#u32 xfer_contig_end ; t#u16 max_payload ; t#u16 xfer_ddp ; s#fc_rport * rport ; s#fc_seq * seq_ptr ; s#timer_list timer ; int wait_for_comp ; t#u32 recov_retry ; s#fc_seq * recov_seq ; s#completion tm_done ; } 
s#libfc_function_template struct libfc_function_template { int ( * frame_send ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_seq * ( * elsct_send ) ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) ; s#fc_seq * ( * exch_seq_send ) ( s#fc_lport * , s#fc_frame * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void ( * ) ( s#fc_seq * , void * ) , void * , unsigned int ) ; int ( * ddp_setup ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; int ( * ddp_done ) ( s#fc_lport * , t#u16 ) ; int ( * ddp_target ) ( s#fc_lport * , t#u16 , s#scatterlist * , unsigned int ) ; void ( * get_lesb ) ( s#fc_lport * , s#fc_els_lesb * ) ; int ( * seq_send ) ( s#fc_lport * , s#fc_seq * , s#fc_frame * ) ; void ( * seq_els_rsp_send ) ( s#fc_frame * , e#fc_els_cmd , s#fc_seq_els_data * ) ; int ( * seq_exch_abort ) ( const s#fc_seq * , unsigned int ) ; void ( * exch_done ) ( s#fc_seq * ) ; s#fc_seq * ( * seq_start_next ) ( s#fc_seq * ) ; void ( * seq_set_resp ) ( s#fc_seq * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * ) ; s#fc_seq * ( * seq_assign ) ( s#fc_lport * , s#fc_frame * ) ; void ( * seq_release ) ( s#fc_seq * ) ; void ( * exch_mgr_reset ) ( s#fc_lport * , t#u32 , t#u32 ) ; void ( * rport_flush_queue ) ( void ) ; void ( * lport_recv ) ( s#fc_lport * , s#fc_frame * ) ; int ( * lport_reset ) ( s#fc_lport * ) ; void ( * lport_set_port_id ) ( s#fc_lport * , t#u32 , s#fc_frame * ) ; s#fc_rport_priv * ( * rport_create ) ( s#fc_lport * , t#u32 ) ; int ( * rport_login ) ( s#fc_rport_priv * ) ; int ( * rport_logoff ) ( s#fc_rport_priv * ) ; void ( * rport_recv_req ) ( s#fc_lport * , s#fc_frame * ) ; s#fc_rport_priv * ( * rport_lookup ) ( const s#fc_lport * , t#u32 ) ; void ( * rport_destroy ) ( s#kref * ) ; void ( * rport_event_callback ) ( s#fc_lport * , s#fc_rport_priv * , e#fc_rport_event ) ; int ( * fcp_cmd_send ) ( s#fc_lport * , s#fc_fcp_pkt * , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) ) ; void ( * fcp_cleanup ) ( s#fc_lport * ) ; void ( * fcp_abort_io ) ( s#fc_lport * ) ; void ( * disc_recv_req ) ( s#fc_lport * , s#fc_frame * ) ; void ( * disc_start ) ( void ( * ) ( s#fc_lport * , e#fc_disc_event ) , s#fc_lport * ) ; void ( * disc_stop ) ( s#fc_lport * ) ; void ( * disc_stop_final ) ( s#fc_lport * ) ; } 
e#fc_lport_state enum fc_lport_state { LPORT_ST_DISABLED = 0 , LPORT_ST_FLOGI , LPORT_ST_DNS , LPORT_ST_RNN_ID , LPORT_ST_RSNN_NN , LPORT_ST_RSPN_ID , LPORT_ST_RFT_ID , LPORT_ST_RFF_ID , LPORT_ST_FDMI , LPORT_ST_RHBA , LPORT_ST_RPA , LPORT_ST_DHBA , LPORT_ST_DPRT , LPORT_ST_SCR , LPORT_ST_READY , LPORT_ST_LOGO , LPORT_ST_RESET } 
s#fc_host_statistics struct fc_host_statistics { t#u64 seconds_since_last_reset ; t#u64 tx_frames ; t#u64 tx_words ; t#u64 rx_frames ; t#u64 rx_words ; t#u64 lip_count ; t#u64 nos_count ; t#u64 error_frames ; t#u64 dumped_frames ; t#u64 link_failure_count ; t#u64 loss_of_sync_count ; t#u64 loss_of_signal_count ; t#u64 prim_seq_protocol_err_count ; t#u64 invalid_tx_word_count ; t#u64 invalid_crc_count ; t#u64 fcp_input_requests ; t#u64 fcp_output_requests ; t#u64 fcp_control_requests ; t#u64 fcp_input_megabytes ; t#u64 fcp_output_megabytes ; t#u64 fcp_packet_alloc_failures ; t#u64 fcp_packet_aborts ; t#u64 fcp_frame_alloc_failures ; t#u64 fc_no_free_exch ; t#u64 fc_no_free_exch_xid ; t#u64 fc_xid_not_found ; t#u64 fc_xid_busy ; t#u64 fc_seq_not_found ; t#u64 fc_non_bls_resp ; } 
s#fc_stats struct fc_stats { t#u64 SecondsSinceLastReset ; t#u64 TxFrames ; t#u64 TxWords ; t#u64 RxFrames ; t#u64 RxWords ; t#u64 ErrorFrames ; t#u64 DumpedFrames ; t#u64 FcpPktAllocFails ; t#u64 FcpPktAborts ; t#u64 FcpFrameAllocFails ; t#u64 LinkFailureCount ; t#u64 LossOfSignalCount ; t#u64 InvalidTxWordCount ; t#u64 InvalidCRCCount ; t#u64 InputRequests ; t#u64 OutputRequests ; t#u64 ControlRequests ; t#u64 InputBytes ; t#u64 OutputBytes ; t#u64 VLinkFailureCount ; t#u64 MissDiscAdvCount ; } 
s#fc_els_rnid_gen struct fc_els_rnid_gen { t#__u8 rnid_vend_id [ 16 ] ; t#__be32 rnid_atype ; t#__be32 rnid_phys_port ; t#__be32 rnid_att_nodes ; t#__u8 rnid_node_mgmt ; t#__u8 rnid_ip_ver ; t#__be16 rnid_prot_port ; t#__be32 rnid_ip_addr [ 4 ] ; t#__u8 rnid_resvd [ 2 ] ; t#__be16 rnid_vend_spec ; } 
s#fc_ns_fts struct fc_ns_fts { t#__be32 ff_type_map [ 256 / 32 ] ; } 
E#FC_TYPE_FCP 0x08 
s#fc_lport struct fc_lport { s#Scsi_Host * host ; s#list_head ema_list ; s#fc_rport_priv * dns_rdata ; s#fc_rport_priv * ms_rdata ; s#fc_rport_priv * ptp_rdata ; void * scsi_priv ; s#fc_disc disc ; s#list_head vports ; s#fc_vport * vport ; s#libfc_function_template tt ; t#u8 link_up ; t#u8 qfull ; e#fc_lport_state state ; unsigned long boot_time ; s#fc_host_statistics host_stats ; s#fc_stats * stats ; t#u8 retry_count ; t#u32 port_id ; t#u64 wwpn ; t#u64 wwnn ; unsigned int service_params ; unsigned int e_d_tov ; unsigned int r_a_tov ; s#fc_els_rnid_gen rnid_gen ; t#u32 sg_supp : 1 ; t#u32 seq_offload : 1 ; t#u32 crc_offload : 1 ; t#u32 lro_enabled : 1 ; t#u32 does_npiv : 1 ; t#u32 npiv_enabled : 1 ; t#u32 point_to_multipoint : 1 ; t#u32 fdmi_enabled : 1 ; t#u32 mfs ; t#u8 max_retry_count ; t#u8 max_rport_retry_count ; t#u16 rport_priv_size ; t#u16 link_speed ; t#u16 link_supported_speeds ; t#u16 lro_xid ; unsigned int lso_max ; s#fc_ns_fts fcts ; s#mutex lp_mutex ; s#list_head list ; s#delayed_work retry_work ; void * prov [ ( E#FC_TYPE_FCP + 1 ) ] ; s#list_head lport_list ; } 
e#fcf_state enum fcf_state { FCOE_FCF_STATE_UNKNOWN , FCOE_FCF_STATE_DISCONNECTED , FCOE_FCF_STATE_CONNECTED , FCOE_FCF_STATE_DELETED , } 
s#fcoe_fcf_device struct fcoe_fcf_device { t#u32 id ; s#device dev ; s#list_head peers ; s#work_struct delete_work ; s#delayed_work dev_loss_work ; t#u32 dev_loss_tmo ; void * priv ; e#fcf_state state ; t#u64 fabric_name ; t#u64 switch_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 mac [ 6 ] ; t#u8 priority ; t#u32 fka_period ; t#u8 selected ; t#u16 vlan_id ; } 
s#fcoe_fcf struct fcoe_fcf { s#list_head list ; s#work_struct event_work ; s#fcoe_ctlr * fip ; s#fcoe_fcf_device * fcf_dev ; unsigned long time ; t#u64 switch_name ; t#u64 fabric_name ; t#u32 fc_map ; t#u16 vfid ; t#u8 fcf_mac [ 6 ] ; t#u8 fcoe_mac [ 6 ] ; t#u8 pri ; t#u8 flogi_sent ; t#u16 flags ; t#u32 fka_period ; t#u8 fd_flags : 1 ; } 
s#fcoe_sysfs_function_template struct fcoe_sysfs_function_template { void ( * get_fcoe_ctlr_link_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_vlink_fail ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_miss_fka ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_symb_err ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_err_block ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_ctlr_fcs_error ) ( s#fcoe_ctlr_device * ) ; void ( * set_fcoe_ctlr_mode ) ( s#fcoe_ctlr_device * ) ; int ( * set_fcoe_ctlr_enabled ) ( s#fcoe_ctlr_device * ) ; void ( * get_fcoe_fcf_selected ) ( s#fcoe_fcf_device * ) ; void ( * get_fcoe_fcf_vlan_id ) ( s#fcoe_fcf_device * ) ; } 
e#fip_conn_type enum fip_conn_type { FIP_CONN_TYPE_UNKNOWN , FIP_CONN_TYPE_FABRIC , FIP_CONN_TYPE_VN2VN , } 
e#ctlr_enabled_state enum ctlr_enabled_state { FCOE_CTLR_ENABLED , FCOE_CTLR_DISABLED , FCOE_CTLR_UNUSED , } 
s#fcoe_fc_els_lesb struct fcoe_fc_els_lesb { t#__be32 lesb_link_fail ; t#__be32 lesb_vlink_fail ; t#__be32 lesb_miss_fka ; t#__be32 lesb_symb_err ; t#__be32 lesb_err_block ; t#__be32 lesb_fcs_error ; } 
s#fcoe_ctlr_device struct fcoe_ctlr_device { t#u32 id ; s#device dev ; s#fcoe_sysfs_function_template * f ; s#list_head fcfs ; char work_q_name [ 20 ] ; s#workqueue_struct * work_q ; char devloss_work_q_name [ 20 ] ; s#workqueue_struct * devloss_work_q ; s#mutex lock ; int fcf_dev_loss_tmo ; e#fip_conn_type mode ; e#ctlr_enabled_state enabled ; s#fcoe_fc_els_lesb lesb ; } 
s#rnd_state struct rnd_state { t#__u32 s1 , s2 , s3 ; } 
s#fcoe_ctlr struct fcoe_ctlr { e#fip_state state ; e#fip_state mode ; s#fc_lport * lp ; s#fcoe_fcf * sel_fcf ; s#list_head fcfs ; s#fcoe_ctlr_device * cdev ; t#u16 fcf_count ; unsigned long sol_time ; unsigned long sel_time ; unsigned long port_ka_time ; unsigned long ctlr_ka_time ; s#timer_list timer ; s#work_struct timer_work ; s#work_struct recv_work ; s#sk_buff_head fip_recv_list ; s#sk_buff * flogi_req ; s#rnd_state rnd_state ; t#u32 port_id ; t#u16 user_mfs ; t#u16 flogi_oxid ; t#u8 flogi_req_send ; t#u8 flogi_count ; t#u8 map_dest ; t#u8 spma ; t#u8 probe_tries ; t#u8 priority ; t#u8 dest_addr [ 6 ] ; t#u8 ctl_src_addr [ 6 ] ; void ( * send ) ( s#fcoe_ctlr * , s#sk_buff * ) ; void ( * update_mac ) ( s#fc_lport * , t#u8 * ) ; t#u8 * ( * get_src_addr ) ( s#fc_lport * ) ; s#mutex ctlr_mutex ; t#spinlock_t ctlr_lock ; } 
fcoe_ctlr_init void fcoe_ctlr_init ( s#fcoe_ctlr * , e#fip_state ) 
fcoe_ctlr_destroy void fcoe_ctlr_destroy ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_up void fcoe_ctlr_link_up ( s#fcoe_ctlr * ) 
fcoe_ctlr_link_down int fcoe_ctlr_link_down ( s#fcoe_ctlr * ) 
fcoe_ctlr_els_send int fcoe_ctlr_els_send ( s#fcoe_ctlr * , s#fc_lport * , s#sk_buff * ) 
fcoe_ctlr_recv void fcoe_ctlr_recv ( s#fcoe_ctlr * , s#sk_buff * ) 
fcoe_ctlr_recv_flogi int fcoe_ctlr_recv_flogi ( s#fcoe_ctlr * , s#fc_lport * , s#fc_frame * ) 
fcoe_wwn_from_mac t#u64 fcoe_wwn_from_mac ( unsigned char [ ] , unsigned int , unsigned int ) 
fcoe_libfc_config int fcoe_libfc_config ( s#fc_lport * , s#fcoe_ctlr * , const s#libfc_function_template * , int ) 
fcoe_fcf_get_selected void fcoe_fcf_get_selected ( s#fcoe_fcf_device * ) 
fcoe_ctlr_set_fip_mode void fcoe_ctlr_set_fip_mode ( s#fcoe_ctlr_device * ) 

/* drivers/scsi/fcoe/fcoe_sysfs.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##workqueue_struct
fcoe_ctlr_device_add s#fcoe_ctlr_device * fcoe_ctlr_device_add ( s#device * , s#fcoe_sysfs_function_template * , int ) 
fcoe_ctlr_device_delete void fcoe_ctlr_device_delete ( s#fcoe_ctlr_device * ) 
fcoe_fcf_device_delete void fcoe_fcf_device_delete ( s#fcoe_fcf_device * ) 
fcoe_fcf_device_add s#fcoe_fcf_device * fcoe_fcf_device_add ( s#fcoe_ctlr_device * , s#fcoe_fcf_device * ) 

/* drivers/scsi/fcoe/fcoe_transport.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##workqueue_struct
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
fcoe_link_speed_update int fcoe_link_speed_update ( s#fc_lport * ) 
__fcoe_get_lesb void __fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * , s#net_device * ) 
fcoe_get_lesb void fcoe_get_lesb ( s#fc_lport * , s#fc_els_lesb * ) 
fcoe_ctlr_get_lesb void fcoe_ctlr_get_lesb ( s#fcoe_ctlr_device * ) 
fcoe_wwn_to_str void fcoe_wwn_to_str ( t#u64 , char * , int ) 
fcoe_validate_vport_create int fcoe_validate_vport_create ( s#fc_vport * ) 
fcoe_get_wwn int fcoe_get_wwn ( s#net_device * , t#u64 * , int ) 
fcoe_fc_crc t#u32 fcoe_fc_crc ( s#fc_frame * ) 
fcoe_start_io int fcoe_start_io ( s#sk_buff * ) 
fcoe_clean_pending_queue void fcoe_clean_pending_queue ( s#fc_lport * ) 
fcoe_check_wait_queue void fcoe_check_wait_queue ( s#fc_lport * , s#sk_buff * ) 
fcoe_queue_timer void fcoe_queue_timer ( t#ulong ) 
s#fcoe_percpu_s struct fcoe_percpu_s { s#task_struct * thread ; s#sk_buff_head fcoe_rx_list ; s#page * crc_eof_page ; int crc_eof_offset ; } 
fcoe_get_paged_crc_eof int fcoe_get_paged_crc_eof ( s#sk_buff * , int , s#fcoe_percpu_s * ) 
s#fcoe_transport struct fcoe_transport { char name [ 16 ] ; t#bool attached ; s#list_head list ; t#bool ( * match ) ( s#net_device * ) ; int ( * alloc ) ( s#net_device * ) ; int ( * create ) ( s#net_device * , e#fip_state ) ; int ( * destroy ) ( s#net_device * ) ; int ( * enable ) ( s#net_device * ) ; int ( * disable ) ( s#net_device * ) ; } 
fcoe_transport_attach int fcoe_transport_attach ( s#fcoe_transport * ) 
fcoe_transport_detach int fcoe_transport_detach ( s#fcoe_transport * ) 
fcoe_ctlr_destroy_store t#ssize_t fcoe_ctlr_destroy_store ( s#bus_type * , const char * , t#size_t ) 

/* drivers/scsi/hosts.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
scsi_host_set_state extern int scsi_host_set_state ( s#Scsi_Host * , e#scsi_host_state ) 
scsi_remove_host extern void scsi_remove_host ( s#Scsi_Host * ) 
scsi_add_host_with_dma extern int scsi_add_host_with_dma ( s#Scsi_Host * , s#device * , s#device * ) 
scsi_host_alloc extern s#Scsi_Host * scsi_host_alloc ( s#scsi_host_template * , int ) 
scsi_register extern s#Scsi_Host * scsi_register ( s#scsi_host_template * , int ) 
scsi_unregister extern void scsi_unregister ( s#Scsi_Host * ) 
scsi_host_lookup extern s#Scsi_Host * scsi_host_lookup ( unsigned short ) 
scsi_host_get extern s#Scsi_Host * scsi_host_get ( s#Scsi_Host * ) 
scsi_host_put extern void scsi_host_put ( s#Scsi_Host * ) 
scsi_is_host_device int scsi_is_host_device ( const s#device * ) 
scsi_queue_work extern int scsi_queue_work ( s#Scsi_Host * , s#work_struct * ) 
scsi_flush_work extern void scsi_flush_work ( s#Scsi_Host * ) 

/* drivers/scsi/iscsi_boot_sysfs.o */
s##sock
s##sysfs_dirent
s#iscsi_boot_kobj struct iscsi_boot_kobj { s#kobject kobj ; s#attribute_group * attr_group ; s#list_head list ; void * data ; t#ssize_t ( * show ) ( void * , int , char * ) ; t#mode_t ( * is_visible ) ( void * , int ) ; void ( * release ) ( void * ) ; } 
s#iscsi_boot_kset struct iscsi_boot_kset { s#list_head kobj_list ; s#kset * kset ; } 
iscsi_boot_create_target s#iscsi_boot_kobj * iscsi_boot_create_target ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#mode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_initiator s#iscsi_boot_kobj * iscsi_boot_create_initiator ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#mode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_ethernet s#iscsi_boot_kobj * iscsi_boot_create_ethernet ( s#iscsi_boot_kset * , int , void * , t#ssize_t ( * ) ( void * , int , char * ) , t#mode_t ( * ) ( void * , int ) , void ( * ) ( void * ) ) 
iscsi_boot_create_kset s#iscsi_boot_kset * iscsi_boot_create_kset ( const char * ) 
iscsi_boot_create_host_kset s#iscsi_boot_kset * iscsi_boot_create_host_kset ( unsigned int ) 
iscsi_boot_destroy_kset void iscsi_boot_destroy_kset ( s#iscsi_boot_kset * ) 

/* drivers/scsi/libfc/fc_disc.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##net_device
s##sec_path
fc_disc_config void fc_disc_config ( s#fc_lport * , void * ) 
fc_disc_init void fc_disc_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_elsct.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##net_device
s##sec_path
fc_elsct_send s#fc_seq * fc_elsct_send ( s#fc_lport * , t#u32 , s#fc_frame * , unsigned int , void ( * ) ( s#fc_seq * , s#fc_frame * , void * ) , void * , t#u32 ) 
fc_elsct_init int fc_elsct_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_exch.o */
fc_cpu_mask extern t#u16 fc_cpu_mask 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##net_device
s##sec_path
fc_exch_mgr_reset void fc_exch_mgr_reset ( s#fc_lport * , t#u32 , t#u32 ) 
fc_exch_update_stats void fc_exch_update_stats ( s#fc_lport * ) 
s##fc_exch_mgr_anchor
s##fc_exch_mgr
fc_exch_mgr_add s#fc_exch_mgr_anchor * fc_exch_mgr_add ( s#fc_lport * , s#fc_exch_mgr * , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_del void fc_exch_mgr_del ( s#fc_exch_mgr_anchor * ) 
fc_exch_mgr_list_clone int fc_exch_mgr_list_clone ( s#fc_lport * , s#fc_lport * ) 
E#FC_SOF_I2 0x2d 
E#FC_SOF_I3 0x2e 
E#FC_SOF_I4 0x29 
E#FC_SOF_F 0x28 
e#fc_class enum fc_class { FC_CLASS_NONE = 0 , FC_CLASS_2 = E#FC_SOF_I2 , FC_CLASS_3 = E#FC_SOF_I3 , FC_CLASS_4 = E#FC_SOF_I4 , FC_CLASS_F = E#FC_SOF_F , } 
fc_exch_mgr_alloc s#fc_exch_mgr * fc_exch_mgr_alloc ( s#fc_lport * , e#fc_class , t#u16 , t#u16 , t#bool ( * ) ( s#fc_frame * ) ) 
fc_exch_mgr_free void fc_exch_mgr_free ( s#fc_lport * ) 
fc_exch_recv void fc_exch_recv ( s#fc_lport * , s#fc_frame * ) 
fc_exch_init int fc_exch_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_fcp.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
fc_queuecommand int fc_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
fc_eh_abort int fc_eh_abort ( s#scsi_cmnd * ) 
fc_eh_device_reset int fc_eh_device_reset ( s#scsi_cmnd * ) 
fc_eh_host_reset int fc_eh_host_reset ( s#scsi_cmnd * ) 
fc_slave_alloc int fc_slave_alloc ( s#scsi_device * ) 
fc_change_queue_depth int fc_change_queue_depth ( s#scsi_device * , int , int ) 
fc_change_queue_type int fc_change_queue_type ( s#scsi_device * , int ) 
s##net_device
s##sec_path
fc_fcp_destroy void fc_fcp_destroy ( s#fc_lport * ) 
fc_fcp_init int fc_fcp_init ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_frame.o */
s##sock
s##net_device
s##sec_path
fc_frame_crc_check t#u32 fc_frame_crc_check ( s#fc_frame * ) 
_fc_frame_alloc s#fc_frame * _fc_frame_alloc ( t#size_t ) 
s##fc_lport
fc_frame_alloc_fill s#fc_frame * fc_frame_alloc_fill ( s#fc_lport * , t#size_t ) 

/* drivers/scsi/libfc/fc_libfc.o */
fc_lport_notifier_head extern s#blocking_notifier_head fc_lport_notifier_head 
s##sock
s##net_device
s##sec_path
e#fc_rctl enum fc_rctl { FC_RCTL_DD_UNCAT = 0x00 , FC_RCTL_DD_SOL_DATA = 0x01 , FC_RCTL_DD_UNSOL_CTL = 0x02 , FC_RCTL_DD_SOL_CTL = 0x03 , FC_RCTL_DD_UNSOL_DATA = 0x04 , FC_RCTL_DD_DATA_DESC = 0x05 , FC_RCTL_DD_UNSOL_CMD = 0x06 , FC_RCTL_DD_CMD_STATUS = 0x07 , FC_RCTL_ELS_REQ = 0x22 , FC_RCTL_ELS_REP = 0x23 , FC_RCTL_ELS4_REQ = 0x32 , FC_RCTL_ELS4_REP = 0x33 , FC_RCTL_VFTH = 0x50 , FC_RCTL_IFRH = 0x51 , FC_RCTL_ENCH = 0x52 , FC_RCTL_BA_NOP = 0x80 , FC_RCTL_BA_ABTS = 0x81 , FC_RCTL_BA_RMC = 0x82 , FC_RCTL_BA_ACC = 0x84 , FC_RCTL_BA_RJT = 0x85 , FC_RCTL_BA_PRMT = 0x86 , FC_RCTL_ACK_1 = 0xc0 , FC_RCTL_ACK_0 = 0xc1 , FC_RCTL_P_RJT = 0xc2 , FC_RCTL_F_RJT = 0xc3 , FC_RCTL_P_BSY = 0xc4 , FC_RCTL_F_BSY = 0xc5 , FC_RCTL_F_BSYL = 0xc6 , FC_RCTL_LCR = 0xc7 , FC_RCTL_END = 0xc9 , } 
fc_fill_hdr void fc_fill_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 , t#u16 , t#u32 ) 
fc_fill_reply_hdr void fc_fill_reply_hdr ( s#fc_frame * , const s#fc_frame * , e#fc_rctl , t#u32 ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
fc_lport_iterate void fc_lport_iterate ( void ( * ) ( s#fc_lport * , void * ) , void * ) 
e#fc_fh_type enum fc_fh_type { FC_TYPE_BLS = 0x00 , FC_TYPE_ELS = 0x01 , FC_TYPE_IP = 0x05 , FC_TYPE_FCP = 0x08 , FC_TYPE_CT = 0x20 , FC_TYPE_ILS = 0x22 , } 
s#fc_els_spp struct fc_els_spp { t#__u8 spp_type ; t#__u8 spp_type_ext ; t#__u8 spp_flags ; t#__u8 _spp_resvd ; t#__be32 spp_orig_pa ; t#__be32 spp_resp_pa ; t#__be32 spp_params ; } 
s#fc4_prov struct fc4_prov { int ( * prli ) ( s#fc_rport_priv * , t#u32 , const s#fc_els_spp * , s#fc_els_spp * ) ; void ( * prlo ) ( s#fc_rport_priv * ) ; void ( * recv ) ( s#fc_lport * , s#fc_frame * ) ; s#module * module ; } 
fc_fc4_register_provider int fc_fc4_register_provider ( e#fc_fh_type , s#fc4_prov * ) 
fc_fc4_deregister_provider void fc_fc4_deregister_provider ( e#fc_fh_type , s#fc4_prov * ) 

/* drivers/scsi/libfc/fc_lport.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
fc_get_host_port_state void fc_get_host_port_state ( s#Scsi_Host * ) 
fc_get_host_speed void fc_get_host_speed ( s#Scsi_Host * ) 
fc_get_host_stats s#fc_host_statistics * fc_get_host_stats ( s#Scsi_Host * ) 
s##net_device
s##sec_path
fc_fabric_login int fc_fabric_login ( s#fc_lport * ) 
fc_linkup void fc_linkup ( s#fc_lport * ) 
fc_linkdown void fc_linkdown ( s#fc_lport * ) 
fc_fabric_logoff int fc_fabric_logoff ( s#fc_lport * ) 
fc_lport_destroy int fc_lport_destroy ( s#fc_lport * ) 
fc_set_mfs int fc_set_mfs ( s#fc_lport * , t#u32 ) 
fc_lport_set_local_id void fc_lport_set_local_id ( s#fc_lport * , t#u32 ) 
fc_lport_reset int fc_lport_reset ( s#fc_lport * ) 
fc_lport_logo_resp void fc_lport_logo_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_flogi_resp void fc_lport_flogi_resp ( s#fc_seq * , s#fc_frame * , void * ) 
fc_lport_config int fc_lport_config ( s#fc_lport * ) 
fc_lport_init int fc_lport_init ( s#fc_lport * ) 
s#fc_bsg_host_add_rport struct fc_bsg_host_add_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_del_rport struct fc_bsg_host_del_rport { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_els struct fc_bsg_host_els { t#uint8_t command_code ; t#uint8_t port_id [ 3 ] ; } 
s#fc_bsg_host_ct struct fc_bsg_host_ct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_host_vendor struct fc_bsg_host_vendor { t#uint64_t vendor_id ; t#uint32_t vendor_cmd [ 0 ] ; } 
s#fc_bsg_rport_els struct fc_bsg_rport_els { t#uint8_t els_code ; } 
s#fc_bsg_rport_ct struct fc_bsg_rport_ct { t#uint32_t preamble_word0 ; t#uint32_t preamble_word1 ; t#uint32_t preamble_word2 ; } 
s#fc_bsg_request struct fc_bsg_request { t#uint32_t msgcode ; union { s#fc_bsg_host_add_rport h_addrport ; s#fc_bsg_host_del_rport h_delrport ; s#fc_bsg_host_els h_els ; s#fc_bsg_host_ct h_ct ; s#fc_bsg_host_vendor h_vendor ; s#fc_bsg_rport_els r_els ; s#fc_bsg_rport_ct r_ct ; } rqst_data ; } 
s#fc_bsg_host_vendor_reply struct fc_bsg_host_vendor_reply { t#uint32_t vendor_rsp [ 0 ] ; } 
s#fc_bsg_ctels_reply struct fc_bsg_ctels_reply { t#uint32_t status ; struct { t#uint8_t action ; t#uint8_t reason_code ; t#uint8_t reason_explanation ; t#uint8_t vendor_unique ; } rjt_data ; } 
s#fc_bsg_reply struct fc_bsg_reply { t#uint32_t result ; t#uint32_t reply_payload_rcv_len ; union { s#fc_bsg_host_vendor_reply vendor_reply ; s#fc_bsg_ctels_reply ctels_reply ; } reply_data ; } 
s#fc_bsg_buffer struct fc_bsg_buffer { unsigned int payload_len ; int sg_cnt ; s#scatterlist * sg_list ; } 
s#fc_bsg_job struct fc_bsg_job { s#Scsi_Host * shost ; s#fc_rport * rport ; s#device * dev ; s#request * req ; t#spinlock_t job_lock ; unsigned int state_flags ; unsigned int ref_cnt ; void ( * job_done ) ( s#fc_bsg_job * ) ; s#fc_bsg_request * request ; s#fc_bsg_reply * reply ; unsigned int request_len ; unsigned int reply_len ; s#fc_bsg_buffer request_payload ; s#fc_bsg_buffer reply_payload ; void * dd_data ; } 
fc_lport_bsg_request int fc_lport_bsg_request ( s#fc_bsg_job * ) 

/* drivers/scsi/libfc/fc_npiv.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s##net_device
s##sec_path
libfc_vport_create s#fc_lport * libfc_vport_create ( s#fc_vport * , int ) 
fc_vport_id_lookup s#fc_lport * fc_vport_id_lookup ( s#fc_lport * , t#u32 ) 
fc_vport_setlink void fc_vport_setlink ( s#fc_lport * ) 

/* drivers/scsi/libfc/fc_rport.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
fc_set_rport_loss_tmo void fc_set_rport_loss_tmo ( s#fc_rport * , t#u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##workqueue_struct
s##net_device
s##sec_path
fc_rport_init int fc_rport_init ( s#fc_lport * ) 
fc_rport_terminate_io void fc_rport_terminate_io ( s#fc_rport * ) 

/* drivers/scsi/libiscsi.o */
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##scsi_host_cmd_pool
s##workqueue_struct
iscsi_conn_queue_work extern void iscsi_conn_queue_work ( s#iscsi_conn * ) 
s#iscsi_nopin struct iscsi_nopin { t#uint8_t opcode ; t#uint8_t flags ; t#__be16 rsvd2 ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 statsn ; t#__be32 exp_cmdsn ; t#__be32 max_cmdsn ; t#uint8_t rsvd4 [ 12 ] ; } 
iscsi_update_cmdsn extern void iscsi_update_cmdsn ( s#iscsi_session * , s#iscsi_nopin * ) 
s#iscsi_data struct iscsi_data { t#uint8_t opcode ; t#uint8_t flags ; t#uint8_t rsvd2 [ 2 ] ; t#uint8_t rsvd3 ; t#uint8_t dlength [ 3 ] ; s#scsi_lun lun ; t#itt_t itt ; t#__be32 ttt ; t#__be32 rsvd4 ; t#__be32 exp_statsn ; t#__be32 rsvd5 ; t#__be32 datasn ; t#__be32 offset ; t#__be32 rsvd6 ; } 
iscsi_prep_data_out_pdu extern void iscsi_prep_data_out_pdu ( s#iscsi_task * , s#iscsi_r2t_info * , s#iscsi_data * ) 
__iscsi_get_task extern void __iscsi_get_task ( s#iscsi_task * ) 
__iscsi_put_task extern void __iscsi_put_task ( s#iscsi_task * ) 
iscsi_put_task extern void iscsi_put_task ( s#iscsi_task * ) 
iscsi_complete_scsi_task extern void iscsi_complete_scsi_task ( s#iscsi_task * , t#uint32_t , t#uint32_t ) 
iscsi_conn_send_pdu extern int iscsi_conn_send_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_itt_to_task extern s#iscsi_task * iscsi_itt_to_task ( s#iscsi_conn * , t#itt_t ) 
__iscsi_complete_pdu extern int __iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_complete_pdu extern int iscsi_complete_pdu ( s#iscsi_conn * , s#iscsi_hdr * , char * , int ) 
iscsi_verify_itt extern int iscsi_verify_itt ( s#iscsi_conn * , t#itt_t ) 
iscsi_itt_to_ctask extern s#iscsi_task * iscsi_itt_to_ctask ( s#iscsi_conn * , t#itt_t ) 
e#iscsi_err enum iscsi_err { ISCSI_OK = 0 , ISCSI_ERR_DATASN = 1000 + 1 , ISCSI_ERR_DATA_OFFSET = 1000 + 2 , ISCSI_ERR_MAX_CMDSN = 1000 + 3 , ISCSI_ERR_EXP_CMDSN = 1000 + 4 , ISCSI_ERR_BAD_OPCODE = 1000 + 5 , ISCSI_ERR_DATALEN = 1000 + 6 , ISCSI_ERR_AHSLEN = 1000 + 7 , ISCSI_ERR_PROTO = 1000 + 8 , ISCSI_ERR_LUN = 1000 + 9 , ISCSI_ERR_BAD_ITT = 1000 + 10 , ISCSI_ERR_CONN_FAILED = 1000 + 11 , ISCSI_ERR_R2TSN = 1000 + 12 , ISCSI_ERR_SESSION_FAILED = 1000 + 13 , ISCSI_ERR_HDR_DGST = 1000 + 14 , ISCSI_ERR_DATA_DGST = 1000 + 15 , ISCSI_ERR_PARAM_NOT_FOUND = 1000 + 16 , ISCSI_ERR_NO_SCSI_CMD = 1000 + 17 , ISCSI_ERR_INVALID_HOST = 1000 + 18 , ISCSI_ERR_XMIT_FAILED = 1000 + 19 , ISCSI_ERR_TCP_CONN_CLOSE = 1000 + 20 , ISCSI_ERR_SCSI_EH_SESSION_RST = 1000 + 21 , } 
iscsi_session_failure extern void iscsi_session_failure ( s#iscsi_session * , e#iscsi_err ) 
iscsi_conn_failure extern void iscsi_conn_failure ( s#iscsi_conn * , e#iscsi_err ) 
iscsi_requeue_task extern void iscsi_requeue_task ( s#iscsi_task * ) 
iscsi_queuecommand extern int iscsi_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
iscsi_change_queue_depth extern int iscsi_change_queue_depth ( s#scsi_device * , int , int ) 
iscsi_target_alloc extern int iscsi_target_alloc ( s#scsi_target * ) 
iscsi_suspend_queue extern void iscsi_suspend_queue ( s#iscsi_conn * ) 
iscsi_suspend_tx extern void iscsi_suspend_tx ( s#iscsi_conn * ) 
iscsi_eh_abort extern int iscsi_eh_abort ( s#scsi_cmnd * ) 
iscsi_eh_device_reset extern int iscsi_eh_device_reset ( s#scsi_cmnd * ) 
iscsi_session_recovery_timedout extern void iscsi_session_recovery_timedout ( s#iscsi_cls_session * ) 
iscsi_eh_session_reset extern int iscsi_eh_session_reset ( s#scsi_cmnd * ) 
iscsi_eh_target_reset int iscsi_eh_target_reset ( s#scsi_cmnd * ) 
iscsi_eh_recover_target extern int iscsi_eh_recover_target ( s#scsi_cmnd * ) 
iscsi_pool_init extern int iscsi_pool_init ( s#iscsi_pool * , int , void * * * , int ) 
iscsi_pool_free extern void iscsi_pool_free ( s#iscsi_pool * ) 
iscsi_host_add extern int iscsi_host_add ( s#Scsi_Host * , s#device * ) 
iscsi_host_alloc extern s#Scsi_Host * iscsi_host_alloc ( s#scsi_host_template * , int , t#bool ) 
iscsi_host_remove extern void iscsi_host_remove ( s#Scsi_Host * ) 
iscsi_host_free extern void iscsi_host_free ( s#Scsi_Host * ) 
iscsi_session_setup extern s#iscsi_cls_session * iscsi_session_setup ( s#iscsi_transport * , s#Scsi_Host * , t#uint16_t , int , int , t#uint32_t , unsigned int ) 
iscsi_session_teardown extern void iscsi_session_teardown ( s#iscsi_cls_session * ) 
iscsi_conn_setup extern s#iscsi_cls_conn * iscsi_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_conn_teardown extern void iscsi_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_conn_start extern int iscsi_conn_start ( s#iscsi_cls_conn * ) 
iscsi_conn_stop extern void iscsi_conn_stop ( s#iscsi_cls_conn * , int ) 
iscsi_conn_bind extern int iscsi_conn_bind ( s#iscsi_cls_session * , s#iscsi_cls_conn * , int ) 
iscsi_switch_str_param extern int iscsi_switch_str_param ( char * * , char * ) 
iscsi_set_param extern int iscsi_set_param ( s#iscsi_cls_conn * , e#iscsi_param , char * , int ) 
iscsi_session_get_param extern int iscsi_session_get_param ( s#iscsi_cls_session * , e#iscsi_param , char * ) 
iscsi_conn_get_addr_param extern int iscsi_conn_get_addr_param ( s#__kernel_sockaddr_storage * , e#iscsi_param , char * ) 
iscsi_conn_get_param extern int iscsi_conn_get_param ( s#iscsi_cls_conn * , e#iscsi_param , char * ) 
iscsi_host_get_param extern int iscsi_host_get_param ( s#Scsi_Host * , e#iscsi_host_param , char * ) 
iscsi_host_set_param extern int iscsi_host_set_param ( s#Scsi_Host * , e#iscsi_host_param , char * , int ) 

/* drivers/scsi/libiscsi_tcp.o */
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
E#ISCSI_DIGEST_SIZE sizeof ( __u32 ) 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
s#iscsi_tcp_recv struct iscsi_tcp_recv { s#iscsi_hdr * hdr ; s#iscsi_segment segment ; t#uint32_t hdr_buf [ 64 ] ; int datalen ; } 
s#iscsi_tcp_conn struct iscsi_tcp_conn { s#iscsi_conn * iscsi_conn ; void * dd_data ; int stop_stage ; s#iscsi_tcp_recv in ; s#hash_desc * rx_hash ; } 
t#iscsi_segment_done_fn_t typedef int iscsi_segment_done_fn_t ( s#iscsi_tcp_conn * , s#iscsi_segment * ) 
s#iscsi_segment struct iscsi_segment { unsigned char * data ; unsigned int size ; unsigned int copied ; unsigned int total_size ; unsigned int total_copied ; s#hash_desc * hash ; unsigned char padbuf [ 4 ] ; unsigned char recv_digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned char digest [ E#ISCSI_DIGEST_SIZE ] ; unsigned int digest_len ; s#scatterlist * sg ; void * sg_mapped ; unsigned int sg_offset ; t#bool atomic_mapped ; t#iscsi_segment_done_fn_t * done ; } 
iscsi_tcp_segment_unmap extern void iscsi_tcp_segment_unmap ( s#iscsi_segment * ) 
iscsi_tcp_segment_done extern int iscsi_tcp_segment_done ( s#iscsi_tcp_conn * , s#iscsi_segment * , int , unsigned ) 
iscsi_tcp_dgst_header extern void iscsi_tcp_dgst_header ( s#hash_desc * , const void * , t#size_t , unsigned char [ E#ISCSI_DIGEST_SIZE ] ) 
iscsi_segment_init_linear extern void iscsi_segment_init_linear ( s#iscsi_segment * , void * , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_segment_seek_sg extern int iscsi_segment_seek_sg ( s#iscsi_segment * , s#scatterlist * , unsigned int , unsigned int , t#size_t , t#iscsi_segment_done_fn_t * , s#hash_desc * ) 
iscsi_tcp_hdr_recv_prep extern void iscsi_tcp_hdr_recv_prep ( s#iscsi_tcp_conn * ) 
iscsi_tcp_cleanup_task extern void iscsi_tcp_cleanup_task ( s#iscsi_task * ) 
iscsi_tcp_recv_segment_is_hdr extern int iscsi_tcp_recv_segment_is_hdr ( s#iscsi_tcp_conn * ) 
iscsi_tcp_recv_skb extern int iscsi_tcp_recv_skb ( s#iscsi_conn * , s#sk_buff * , unsigned int , t#bool , int * ) 
iscsi_tcp_task_init extern int iscsi_tcp_task_init ( s#iscsi_task * ) 
iscsi_tcp_task_xmit extern int iscsi_tcp_task_xmit ( s#iscsi_task * ) 
iscsi_tcp_conn_setup extern s#iscsi_cls_conn * iscsi_tcp_conn_setup ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_tcp_conn_teardown extern void iscsi_tcp_conn_teardown ( s#iscsi_cls_conn * ) 
iscsi_tcp_r2tpool_alloc extern int iscsi_tcp_r2tpool_alloc ( s#iscsi_session * ) 
iscsi_tcp_r2tpool_free extern void iscsi_tcp_r2tpool_free ( s#iscsi_session * ) 
iscsi_tcp_conn_get_stats extern void iscsi_tcp_conn_get_stats ( s#iscsi_cls_conn * , s#iscsi_stats * ) 

/* drivers/scsi/libsas/sas_ata.o */
e#sas_device_type enum sas_device_type { SAS_PHY_UNUSED = 0 , SAS_END_DEVICE = 1 , SAS_EDGE_EXPANDER_DEVICE = 2 , SAS_FANOUT_EXPANDER_DEVICE = 3 , SAS_HA = 4 , SAS_SATA_DEV = 5 , SAS_SATA_PM = 7 , SAS_SATA_PM_PORT = 8 , SAS_SATA_PENDING = 9 , } 
E#SAS_LINK_RATE_1_5_GBPS 8 
E#SAS_LINK_RATE_3_0_GBPS 9 
e#sas_linkrate enum sas_linkrate { SAS_LINK_RATE_UNKNOWN = 0 , SAS_PHY_DISABLED = 1 , SAS_PHY_RESET_PROBLEM = 2 , SAS_SATA_SPINUP_HOLD = 3 , SAS_SATA_PORT_SELECTOR = 4 , SAS_PHY_RESET_IN_PROGRESS = 5 , SAS_LINK_RATE_1_5_GBPS = 8 , SAS_LINK_RATE_G1 = E#SAS_LINK_RATE_1_5_GBPS , SAS_LINK_RATE_3_0_GBPS = 9 , SAS_LINK_RATE_G2 = E#SAS_LINK_RATE_3_0_GBPS , SAS_LINK_RATE_6_0_GBPS = 10 , SAS_LINK_RATE_12_0_GBPS = 11 , SAS_LINK_RATE_FAILED = 0x10 , SAS_PHY_VIRTUAL = 0x11 , } 
s#sas_work struct sas_work { s#list_head drain_node ; s#work_struct work ; } 
s#sas_discovery_event struct sas_discovery_event { s#sas_work work ; s#asd_sas_port * port ; } 
E#DISC_NUM_EVENTS 7 
s#sas_discovery struct sas_discovery { s#sas_discovery_event disc_work [ E#DISC_NUM_EVENTS ] ; unsigned long pending ; t#u8 fanout_sas_addr [ 8 ] ; t#u8 eeds_a [ 8 ] ; t#u8 eeds_b [ 8 ] ; int max_level ; } 
e#sas_class enum sas_class { SAS , EXPANDER } 
E#SAS_PROTOCOL_STP 0x04 
E#SAS_PROTOCOL_SATA 0x01 
e#sas_protocol enum sas_protocol { SAS_PROTOCOL_NONE = 0 , SAS_PROTOCOL_SATA = 0x01 , SAS_PROTOCOL_SMP = 0x02 , SAS_PROTOCOL_STP = 0x04 , SAS_PROTOCOL_SSP = 0x08 , SAS_PROTOCOL_ALL = 0x0E , SAS_PROTOCOL_STP_ALL = E#SAS_PROTOCOL_STP | E#SAS_PROTOCOL_SATA , } 
e#sas_oob_mode enum sas_oob_mode { OOB_NOT_CONNECTED , SATA_OOB_MODE , SAS_OOB_MODE } 
s#sas_ha_event struct sas_ha_event { s#sas_work work ; s#sas_ha_struct * ha ; } 
E#HA_NUM_EVENTS 1 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_host_cmd_pool
s##workqueue_struct
s#scsi_core struct scsi_core { s#Scsi_Host * shost ; s#mutex task_queue_flush ; t#spinlock_t task_queue_lock ; s#list_head task_queue ; int task_queue_size ; s#task_struct * queue_thread ; } 
s#asd_sas_event struct asd_sas_event { s#sas_work work ; s#asd_sas_phy * phy ; } 
E#PORT_NUM_EVENTS 5 
E#PHY_NUM_EVENTS 5 
s#sas_identify struct sas_identify { e#sas_device_type device_type ; e#sas_protocol initiator_port_protocols ; e#sas_protocol target_port_protocols ; t#u64 sas_address ; t#u8 phy_identifier ; } 
s#sas_phy struct sas_phy { s#device dev ; int number ; int enabled ; s#sas_identify identify ; e#sas_linkrate negotiated_linkrate ; e#sas_linkrate minimum_linkrate_hw ; e#sas_linkrate minimum_linkrate ; e#sas_linkrate maximum_linkrate_hw ; e#sas_linkrate maximum_linkrate ; t#u32 invalid_dword_count ; t#u32 running_disparity_error_count ; t#u32 loss_of_dword_sync_count ; t#u32 phy_reset_problem_count ; s#list_head port_siblings ; void * hostdata ; } 
e#sas_phy_type enum sas_phy_type { PHY_TYPE_PHYSICAL , PHY_TYPE_VIRTUAL } 
e#sas_phy_role enum sas_phy_role { PHY_ROLE_NONE = 0 , PHY_ROLE_TARGET = 0x40 , PHY_ROLE_INITIATOR = 0x80 , } 
s#asd_sas_phy struct asd_sas_phy { s#asd_sas_event port_events [ E#PORT_NUM_EVENTS ] ; s#asd_sas_event phy_events [ E#PHY_NUM_EVENTS ] ; unsigned long port_events_pending ; unsigned long phy_events_pending ; int error ; int suspended ; s#sas_phy * phy ; int enabled ; int id ; e#sas_class class ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_phy_type type ; e#sas_phy_role role ; e#sas_oob_mode oob_mode ; e#sas_linkrate linkrate ; t#u8 * sas_addr ; t#u8 attached_sas_addr [ 8 ] ; t#spinlock_t frame_rcvd_lock ; t#u8 * frame_rcvd ; int frame_rcvd_size ; t#spinlock_t sas_prim_lock ; t#u32 sas_prim ; s#list_head port_phy_el ; s#asd_sas_port * port ; s#sas_ha_struct * ha ; void * lldd_phy ; } 
e#ha_event enum ha_event { HAE_RESET = 0U , HA_NUM_EVENTS = 1 , } 
e#port_event enum port_event { PORTE_BYTES_DMAED = 0U , PORTE_BROADCAST_RCVD = 1 , PORTE_LINK_RESET_ERR = 2 , PORTE_TIMER_EVENT = 3 , PORTE_HARD_RESET = 4 , PORT_NUM_EVENTS = 5 , } 
e#phy_event enum phy_event { PHYE_LOSS_OF_SIGNAL = 0U , PHYE_OOB_DONE = 1 , PHYE_OOB_ERROR = 2 , PHYE_SPINUP_HOLD = 3 , PHYE_RESUME_TIMEOUT = 4 , PHY_NUM_EVENTS = 5 , } 
s#sas_ha_struct struct sas_ha_struct { s#sas_ha_event ha_events [ E#HA_NUM_EVENTS ] ; unsigned long pending ; s#list_head defer_q ; s#mutex drain_mutex ; unsigned long state ; t#spinlock_t lock ; int eh_active ; t#wait_queue_head_t eh_wait_q ; s#list_head eh_dev_q ; s#mutex disco_mutex ; s#scsi_core core ; char * sas_ha_name ; s#device * dev ; s#module * lldd_module ; t#u8 * sas_addr ; t#u8 hashed_sas_addr [ 3 ] ; t#spinlock_t phy_port_lock ; s#asd_sas_phy * * sas_phy ; s#asd_sas_port * * sas_port ; int num_phys ; int lldd_max_execute_num ; int lldd_queue_size ; int strict_wide_ports ; void ( * notify_ha_event ) ( s#sas_ha_struct * , e#ha_event ) ; void ( * notify_port_event ) ( s#asd_sas_phy * , e#port_event ) ; void ( * notify_phy_event ) ( s#asd_sas_phy * , e#phy_event ) ; void * lldd_ha ; s#list_head eh_done_q ; s#list_head eh_ata_q ; } 
s#sas_rphy struct sas_rphy { s#device dev ; s#sas_identify identify ; s#list_head list ; s#request_queue * q ; t#u32 scsi_target_id ; } 
s#sas_port struct sas_port { s#device dev ; int port_identifier ; int num_phys ; unsigned int is_backlink : 1 ; s#sas_rphy * rphy ; s#mutex phy_list_mutex ; s#list_head phy_list ; } 
s#asd_sas_port struct asd_sas_port { s#completion port_gone_completion ; s#sas_discovery disc ; s#domain_device * port_dev ; t#spinlock_t dev_list_lock ; s#list_head dev_list ; s#list_head disco_list ; s#list_head destroy_list ; e#sas_linkrate linkrate ; s#sas_work work ; int suspended ; int id ; e#sas_class class ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; e#sas_protocol iproto ; e#sas_protocol tproto ; e#sas_oob_mode oob_mode ; t#spinlock_t phy_list_lock ; s#list_head phy_list ; int num_phys ; t#u32 phy_mask ; s#sas_ha_struct * ha ; s#sas_port * port ; void * lldd_port ; } 
e#ex_phy_state enum ex_phy_state { PHY_EMPTY , PHY_VACANT , PHY_NOT_PRESENT , PHY_DEVICE_DISCOVERED } 
e#routing_attribute enum routing_attribute { DIRECT_ROUTING , SUBTRACTIVE_ROUTING , TABLE_ROUTING , } 
s#ex_phy struct ex_phy { int phy_id ; e#ex_phy_state phy_state ; e#sas_device_type attached_dev_type ; e#sas_linkrate linkrate ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_dev : 1 ; t#u8 attached_sata_ps : 1 ; e#sas_protocol attached_tproto ; e#sas_protocol attached_iproto ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; int phy_change_count ; e#routing_attribute routing_attr ; t#u8 virtual : 1 ; int last_da_index ; s#sas_phy * phy ; s#sas_port * port ; } 
s#expander_device struct expander_device { s#list_head children ; int ex_change_count ; t#u16 max_route_indexes ; t#u8 num_phys ; t#u8 t2t_supp : 1 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 enclosure_logical_id [ 8 ] ; s#ex_phy * ex_phy ; s#sas_port * parent_port ; s#mutex cmd_mutex ; } 
e#ata_command_set enum ata_command_set { ATA_COMMAND_SET = 0 , ATAPI_COMMAND_SET = 1 , } 
s#report_general_resp struct report_general_resp { t#__be16 change_count ; t#__be16 route_indexes ; t#u8 _r_a ; t#u8 num_phys ; t#u8 t2t_supp : 1 ; t#u8 zone_config : 1 ; t#u8 self_config : 1 ; t#u8 stp_cont_awt : 1 ; t#u8 orej_retry_supp : 1 ; t#u8 config_others : 1 ; t#u8 configuring : 1 ; t#u8 conf_route_table : 1 ; t#u8 _r_c ; t#u8 enclosure_logical_id [ 8 ] ; t#u8 _r_d [ 12 ] ; } 
s#discover_resp struct discover_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#__be16 _r_b ; t#u8 _r_d : 1 ; t#u8 attached_dev_type : 3 ; t#u8 _r_c : 4 ; t#u8 _r_e : 4 ; t#u8 linkrate : 4 ; t#u8 _r_f : 4 ; t#u8 iproto : 3 ; t#u8 attached_sata_host : 1 ; t#u8 attached_sata_ps : 1 ; t#u8 _r_g : 3 ; t#u8 tproto : 3 ; t#u8 attached_sata_dev : 1 ; t#u8 sas_addr [ 8 ] ; t#u8 attached_sas_addr [ 8 ] ; t#u8 attached_phy_id ; t#u8 _r_h [ 7 ] ; t#u8 pmin_linkrate : 4 ; t#u8 hmin_linkrate : 4 ; t#u8 pmax_linkrate : 4 ; t#u8 hmax_linkrate : 4 ; t#u8 change_count ; t#u8 virtual : 1 ; t#u8 _r_i : 3 ; t#u8 pptv : 4 ; t#u8 _r_j : 4 ; t#u8 routing_attr : 4 ; t#u8 conn_type ; t#u8 conn_el_index ; t#u8 conn_phy_link ; t#u8 _r_k [ 8 ] ; } 
s#dev_to_host_fis struct dev_to_host_fis { t#u8 fis_type ; t#u8 flags ; t#u8 status ; t#u8 error ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 _r_a ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_b ; t#u8 _r_c ; t#u32 _r_d ; } 
s#report_phy_sata_resp struct report_phy_sata_resp { t#u8 _r_a [ 5 ] ; t#u8 phy_id ; t#u8 _r_b ; t#u8 _r_c : 6 ; t#u8 affil_supp : 1 ; t#u8 affil_valid : 1 ; t#u32 _r_d ; t#u8 stp_sas_addr [ 8 ] ; s#dev_to_host_fis fis ; t#u32 _r_e ; t#u8 affil_stp_ini_addr [ 8 ] ; t#__be32 crc ; } 
s#smp_resp struct smp_resp { t#u8 frame_type ; t#u8 function ; t#u8 result ; t#u8 reserved ; union { s#report_general_resp rg ; s#discover_resp disc ; s#report_phy_sata_resp rps ; } ; } 
s#sata_device struct sata_device { e#ata_command_set command_set ; s#smp_resp rps_resp ; t#u8 port_no ; int pm_result ; s#ata_port * ap ; s#ata_host ata_host ; t#u8 fis [ 24 ] ; } 
s#ssp_device struct ssp_device { s#list_head eh_list_node ; s#scsi_lun reset_lun ; } 
s#domain_device struct domain_device { t#spinlock_t done_lock ; e#sas_device_type dev_type ; e#sas_linkrate linkrate ; e#sas_linkrate min_linkrate ; e#sas_linkrate max_linkrate ; int pathways ; s#domain_device * parent ; s#list_head siblings ; s#asd_sas_port * port ; s#sas_phy * phy ; s#list_head dev_list_node ; s#list_head disco_list_node ; e#sas_protocol iproto ; e#sas_protocol tproto ; s#sas_rphy * rphy ; t#u8 sas_addr [ 8 ] ; t#u8 hashed_sas_addr [ 3 ] ; t#u8 frame_rcvd [ 32 ] ; union { s#expander_device ex_dev ; s#sata_device sata_dev ; s#ssp_device ssp_dev ; } ; void * lldd_dev ; unsigned long state ; s#kref kref ; } 
sas_ata_schedule_reset void sas_ata_schedule_reset ( s#domain_device * ) 

/* drivers/scsi/libsas/sas_event.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
sas_drain_work extern int sas_drain_work ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_host_smp.o */
try_test_sas_gpio_gp_bit int try_test_sas_gpio_gp_bit ( unsigned int , t#u8 * , t#u8 , t#u8 ) 

/* drivers/scsi/libsas/sas_init.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##workqueue_struct
s#host_to_dev_fis struct host_to_dev_fis { t#u8 fis_type ; t#u8 flags ; t#u8 command ; t#u8 features ; t#u8 lbal ; union { t#u8 lbam ; t#u8 byte_count_low ; } ; union { t#u8 lbah ; t#u8 byte_count_high ; } ; t#u8 device ; t#u8 lbal_exp ; t#u8 lbam_exp ; t#u8 lbah_exp ; t#u8 features_exp ; union { t#u8 sector_count ; t#u8 interrupt_reason ; } ; t#u8 sector_count_exp ; t#u8 _r_a ; t#u8 control ; t#u32 _r_b ; } 
s#sas_ata_task struct sas_ata_task { s#host_to_dev_fis fis ; t#u8 atapi_packet [ 16 ] ; t#u8 retry_count ; t#u8 dma_xfer : 1 ; t#u8 use_ncq : 1 ; t#u8 set_affil_pol : 1 ; t#u8 stp_affil_pol : 1 ; t#u8 device_control_reg_update : 1 ; } 
s#sas_smp_task struct sas_smp_task { s#scatterlist smp_req ; s#scatterlist smp_resp ; } 
e#task_attribute enum task_attribute { TASK_ATTR_SIMPLE = 0 , TASK_ATTR_HOQ = 1 , TASK_ATTR_ORDERED = 2 , TASK_ATTR_ACA = 4 , } 
s#sas_ssp_task struct sas_ssp_task { t#u8 retry_count ; t#u8 LUN [ 8 ] ; t#u8 enable_first_burst : 1 ; e#task_attribute task_attr ; t#u8 task_prio ; s#scsi_cmnd * cmd ; } 
e#service_response enum service_response { SAS_TASK_COMPLETE , SAS_TASK_UNDELIVERED = - 1 , } 
e#exec_status enum exec_status { __SAM_STAT_CHECK_CONDITION = 0x02 , SAS_DEV_NO_RESPONSE = 0x80 , SAS_DATA_UNDERRUN , SAS_DATA_OVERRUN , SAS_INTERRUPTED , SAS_QUEUE_FULL , SAS_DEVICE_UNKNOWN , SAS_SG_ERR , SAS_OPEN_REJECT , SAS_OPEN_TO , SAS_PROTO_RESPONSE , SAS_PHY_DOWN , SAS_NAK_R_ERR , SAS_PENDING , SAS_ABORTED_TASK , } 
e#sas_open_rej_reason enum sas_open_rej_reason { SAS_OREJ_UNKNOWN = 0 , SAS_OREJ_BAD_DEST = 1 , SAS_OREJ_CONN_RATE = 2 , SAS_OREJ_EPROTO = 3 , SAS_OREJ_RESV_AB0 = 4 , SAS_OREJ_RESV_AB1 = 5 , SAS_OREJ_RESV_AB2 = 6 , SAS_OREJ_RESV_AB3 = 7 , SAS_OREJ_WRONG_DEST = 8 , SAS_OREJ_STP_NORES = 9 , SAS_OREJ_NO_DEST = 10 , SAS_OREJ_PATH_BLOCKED = 11 , SAS_OREJ_RSVD_CONT0 = 12 , SAS_OREJ_RSVD_CONT1 = 13 , SAS_OREJ_RSVD_INIT0 = 14 , SAS_OREJ_RSVD_INIT1 = 15 , SAS_OREJ_RSVD_STOP0 = 16 , SAS_OREJ_RSVD_STOP1 = 17 , SAS_OREJ_RSVD_RETRY = 18 , } 
s#task_status_struct struct task_status_struct { e#service_response resp ; e#exec_status stat ; int buf_valid_size ; t#u8 buf [ 96 ] ; t#u32 residual ; e#sas_open_rej_reason open_rej_reason ; } 
s#sas_task_slow struct sas_task_slow { s#timer_list timer ; s#completion completion ; } 
s#sas_task struct sas_task { s#domain_device * dev ; s#list_head list ; t#spinlock_t task_state_lock ; unsigned task_state_flags ; e#sas_protocol task_proto ; union { s#sas_ata_task ata_task ; s#sas_smp_task smp_task ; s#sas_ssp_task ssp_task ; } ; s#scatterlist * scatter ; int num_scatter ; t#u32 total_xfer_len ; t#u8 data_dir : 2 ; s#task_status_struct task_status ; void ( * task_done ) ( s#sas_task * ) ; void * lldd_task ; void * uldd_task ; s#sas_task_slow * slow_task ; } 
sas_alloc_task extern s#sas_task * sas_alloc_task ( t#gfp_t ) 
sas_alloc_slow_task extern s#sas_task * sas_alloc_slow_task ( t#gfp_t ) 
sas_free_task extern void sas_free_task ( s#sas_task * ) 
sas_prep_resume_ha extern void sas_prep_resume_ha ( s#sas_ha_struct * ) 
sas_resume_ha extern void sas_resume_ha ( s#sas_ha_struct * ) 
sas_suspend_ha extern void sas_suspend_ha ( s#sas_ha_struct * ) 
e#phy_func enum phy_func { PHY_FUNC_NOP , PHY_FUNC_LINK_RESET , PHY_FUNC_HARD_RESET , PHY_FUNC_DISABLE , PHY_FUNC_CLEAR_ERROR_LOG = 5 , PHY_FUNC_CLEAR_AFFIL , PHY_FUNC_TX_SATA_PS_SIGNAL , PHY_FUNC_RELEASE_SPINUP_HOLD = 0x10 , PHY_FUNC_SET_LINK_RATE , PHY_FUNC_GET_EVENTS , } 
s#sas_domain_function_template struct sas_domain_function_template { void ( * lldd_port_formed ) ( s#asd_sas_phy * ) ; void ( * lldd_port_deformed ) ( s#asd_sas_phy * ) ; int ( * lldd_dev_found ) ( s#domain_device * ) ; void ( * lldd_dev_gone ) ( s#domain_device * ) ; int ( * lldd_execute_task ) ( s#sas_task * , int , t#gfp_t ) ; int ( * lldd_abort_task ) ( s#sas_task * ) ; int ( * lldd_abort_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_aca ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_clear_task_set ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_I_T_nexus_reset ) ( s#domain_device * ) ; int ( * lldd_ata_check_ready ) ( s#domain_device * ) ; void ( * lldd_ata_set_dmamode ) ( s#domain_device * ) ; int ( * lldd_lu_reset ) ( s#domain_device * , t#u8 * ) ; int ( * lldd_query_task ) ( s#sas_task * ) ; int ( * lldd_clear_nexus_port ) ( s#asd_sas_port * ) ; int ( * lldd_clear_nexus_ha ) ( s#sas_ha_struct * ) ; int ( * lldd_control_phy ) ( s#asd_sas_phy * , e#phy_func , void * ) ; int ( * lldd_write_gpio ) ( s#sas_ha_struct * , t#u8 , t#u8 , t#u8 , t#u8 * ) ; } 
sas_domain_attach_transport extern s#scsi_transport_template * sas_domain_attach_transport ( s#sas_domain_function_template * ) 
sas_domain_release_transport extern void sas_domain_release_transport ( s#scsi_transport_template * ) 
sas_register_ha extern int sas_register_ha ( s#sas_ha_struct * ) 
sas_unregister_ha extern int sas_unregister_ha ( s#sas_ha_struct * ) 

/* drivers/scsi/libsas/sas_scsi_host.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##scsi_host_cmd_pool
s##workqueue_struct
sas_get_local_phy s#sas_phy * sas_get_local_phy ( s#domain_device * ) 
sas_wait_eh void sas_wait_eh ( s#domain_device * ) 
sas_eh_abort_handler int sas_eh_abort_handler ( s#scsi_cmnd * ) 
sas_request_addr int sas_request_addr ( s#Scsi_Host * , t#u8 * ) 
sas_queuecommand extern int sas_queuecommand ( s#Scsi_Host * , s#scsi_cmnd * ) 
sas_target_alloc extern int sas_target_alloc ( s#scsi_target * ) 
sas_slave_configure extern int sas_slave_configure ( s#scsi_device * ) 
sas_change_queue_depth extern int sas_change_queue_depth ( s#scsi_device * , int , int ) 
sas_change_queue_type extern int sas_change_queue_type ( s#scsi_device * , int ) 
sas_bios_param extern int sas_bios_param ( s#scsi_device * , s#block_device * , t#sector_t , int * ) 
sas_task_abort void sas_task_abort ( s#sas_task * ) 
sas_phy_reset int sas_phy_reset ( s#sas_phy * , int ) 
sas_eh_device_reset_handler int sas_eh_device_reset_handler ( s#scsi_cmnd * ) 
sas_eh_bus_reset_handler int sas_eh_bus_reset_handler ( s#scsi_cmnd * ) 
sas_target_destroy extern void sas_target_destroy ( s#scsi_target * ) 
sas_ioctl extern int sas_ioctl ( s#scsi_device * , int , void * ) 

/* drivers/scsi/libsas/sas_task.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
s##workqueue_struct
s#ssp_response_iu struct ssp_response_iu { t#u8 _r_a [ 10 ] ; t#u8 _r_b : 6 ; t#u8 datapres : 2 ; t#u8 status ; t#u32 _r_c ; t#__be32 sense_data_len ; t#__be32 response_data_len ; t#u8 resp_data [ 0 ] ; t#u8 sense_data [ 0 ] ; } 
sas_ssp_task_response extern void sas_ssp_task_response ( s#device * , s#sas_task * , s#ssp_response_iu * ) 

/* drivers/scsi/libsrp.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
s#srp_queue struct srp_queue { void * pool ; void * items ; s#kfifo queue ; t#spinlock_t lock ; } 
s#srp_buf struct srp_buf { t#dma_addr_t dma ; void * buf ; } 
s#srp_target struct srp_target { s#Scsi_Host * shost ; s#device * dev ; t#spinlock_t lock ; s#list_head cmd_queue ; t#size_t srp_iu_size ; s#srp_queue iu_queue ; t#size_t rx_ring_size ; s#srp_buf * * rx_ring ; void * ldata ; } 
srp_target_alloc extern int srp_target_alloc ( s#srp_target * , s#device * , t#size_t , t#size_t ) 
srp_target_free extern void srp_target_free ( s#srp_target * ) 
s#iu_entry struct iu_entry { s#srp_target * target ; s#list_head ilist ; t#dma_addr_t remote_token ; unsigned long flags ; s#srp_buf * sbuf ; } 
srp_iu_get extern s#iu_entry * srp_iu_get ( s#srp_target * ) 
srp_iu_put extern void srp_iu_put ( s#iu_entry * ) 
s#srp_cmd struct srp_cmd { t#u8 opcode ; t#u8 sol_not ; t#u8 reserved1 [ 3 ] ; t#u8 buf_fmt ; t#u8 data_out_desc_cnt ; t#u8 data_in_desc_cnt ; t#u64 tag ; t#u8 reserved2 [ 4 ] ; t#__be64 lun __attribute__ ( ( packed ) ) ; t#u8 reserved3 ; t#u8 task_attr ; t#u8 reserved4 ; t#u8 add_cdb_len ; t#u8 cdb [ 16 ] ; t#u8 add_data [ 0 ] ; } 
s#srp_direct_buf struct srp_direct_buf { t#__be64 va ; t#__be32 key ; t#__be32 len ; } 
t#srp_rdma_t typedef int ( srp_rdma_t ) ( s#scsi_cmnd * , s#scatterlist * , int , s#srp_direct_buf * , int , e#dma_data_direction , unsigned int ) 
srp_transfer_data extern int srp_transfer_data ( s#scsi_cmnd * , s#srp_cmd * , t#srp_rdma_t , int , int ) 
srp_cmd_queue extern int srp_cmd_queue ( s#Scsi_Host * , s#srp_cmd * , void * , t#u64 , t#u64 ) 

/* drivers/scsi/osd/osd_initiator.o */
s##Scsi_Host
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
e#osd_std_version enum osd_std_version { OSD_VER_NONE = 0 , OSD_VER1 = 1 , OSD_VER2 = 2 , } 
s#osd_dev struct osd_dev { s#scsi_device * scsi_device ; unsigned def_timeout ; e#osd_std_version version ; } 
E#OSD_SYSTEMID_LEN 20 
s#osd_dev_info struct osd_dev_info { unsigned systemid_len ; t#u8 systemid [ E#OSD_SYSTEMID_LEN ] ; unsigned osdname_len ; t#u8 * osdname ; } 
osd_auto_detect_ver int osd_auto_detect_ver ( s#osd_dev * , void * , s#osd_dev_info * ) 
osd_dev_init void osd_dev_init ( s#osd_dev * , s#scsi_device * ) 
osd_dev_fini void osd_dev_fini ( s#osd_dev * ) 
s#scsi_varlen_cdb_hdr struct scsi_varlen_cdb_hdr { t#__u8 opcode ; t#__u8 control ; t#__u8 misc [ 5 ] ; t#__u8 additional_cdb_length ; t#__be16 service_action ; } 
s#__osdv1_cdb_addr_len struct __osdv1_cdb_addr_len { t#__be32 list_identifier ; t#__be64 length ; t#__be64 start_address ; } 
s#__osdv2_cdb_addr_len struct __osdv2_cdb_addr_len { t#__be64 length ; t#__be64 start_address ; union { t#__be32 list_identifier ; t#__be32 cdb_continuation_length ; } ; } 
t#osd_cdb_offset typedef t#__be32 osd_cdb_offset 
s#osd_attributes_page_mode struct osd_attributes_page_mode { t#__be32 get_attr_page ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be32 set_attr_length ; t#osd_cdb_offset set_attr_offset ; } 
s#osd_attributes_list_mode struct osd_attributes_list_mode { t#__be32 get_attr_desc_bytes ; t#osd_cdb_offset get_attr_desc_offset ; t#__be32 get_attr_alloc_length ; t#osd_cdb_offset get_attr_offset ; t#__be32 set_attr_bytes ; t#osd_cdb_offset set_attr_offset ; t#__be32 not_used ; } 
s#osd_attributes_cdb_mode struct osd_attributes_cdb_mode { t#__be32 set_attr_page ; t#__be32 set_attr_id ; t#__be16 set_attr_len ; t#u8 set_attr_val [ 18 ] ; } 
s#osd_cdb_head struct osd_cdb_head { s#scsi_varlen_cdb_hdr varlen_cdb ; t#u8 options ; t#u8 command_specific_options ; t#u8 timestamp_control ; t#u8 reserved1 [ 3 ] ; t#__be64 partition ; t#__be64 object ; union { s#__osdv1_cdb_addr_len __attribute__ ( ( packed ) ) v1 ; s#__osdv2_cdb_addr_len __attribute__ ( ( packed ) ) v2 ; } ; union { s#osd_attributes_page_mode __attribute__ ( ( packed ) ) attrs_page ; s#osd_attributes_list_mode __attribute__ ( ( packed ) ) attrs_list ; s#osd_attributes_cdb_mode __attribute__ ( ( packed ) ) attrs_cdb ; t#u8 get_set_attributes_parameters [ 28 ] ; } ; } 
E#OSDv1_CAP_LEN 80 
E#OSDv1_CRYPTO_KEYID_SIZE 20 
E#OSD_CRYPTO_NONCE_SIZE 12 
s#osdv1_security_parameters struct osdv1_security_parameters { t#u8 integrity_check_value [ E#OSDv1_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv1_cdb struct osdv1_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSDv1_CAP_LEN ] ; s#osdv1_security_parameters sec_params ; } 
E#OSD_CAP_LEN 104 
E#OSDv2_CRYPTO_KEYID_SIZE 32 
s#osdv2_security_parameters struct osdv2_security_parameters { t#u8 integrity_check_value [ E#OSDv2_CRYPTO_KEYID_SIZE ] ; t#u8 request_nonce [ E#OSD_CRYPTO_NONCE_SIZE ] ; t#osd_cdb_offset data_in_integrity_check_offset ; t#osd_cdb_offset data_out_integrity_check_offset ; } 
s#osdv2_cdb struct osdv2_cdb { s#osd_cdb_head h ; t#u8 caps [ E#OSD_CAP_LEN ] ; s#osdv2_security_parameters sec_params ; } 
E#OSDv2_ADDITIONAL_CDB_LENGTH 228 
E#OSD_ADDITIONAL_CDB_LENGTH E#OSDv2_ADDITIONAL_CDB_LENGTH 
E#OSD_TOTAL_CDB_LEN E#OSD_ADDITIONAL_CDB_LENGTH + 8 
s#osd_cdb struct osd_cdb { union { s#osdv1_cdb v1 ; s#osdv2_cdb v2 ; t#u8 buff [ E#OSD_TOTAL_CDB_LEN ] ; } ; } 
E#OSD_CRYPTO_KEYID_SIZE E#OSDv2_CRYPTO_KEYID_SIZE 
s#osd_data_out_integrity_info struct osd_data_out_integrity_info { t#__be64 data_bytes ; t#__be64 set_attributes_bytes ; t#__be64 get_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#osd_data_in_integrity_info struct osd_data_in_integrity_info { t#__be64 data_bytes ; t#__be64 retrieved_attributes_bytes ; t#__u8 integrity_check_value [ E#OSD_CRYPTO_KEYID_SIZE ] ; } 
s#_osd_req_data_segment struct _osd_req_data_segment { void * buff ; unsigned alloc_size ; unsigned total_bytes ; } 
s#_osd_io_info struct _osd_io_info { s#bio * bio ; t#u64 total_bytes ; t#u64 residual ; s#request * req ; s#_osd_req_data_segment * last_seg ; t#u8 * pad_buff ; } 
E#OSD_MAX_SENSE_LEN 252 
e#osd_attributes_mode enum osd_attributes_mode { OSD_CDB_SET_ONE_ATTR = 0x10 , OSD_CDB_GET_ATTR_PAGE_SET_ONE = 0x20 , OSD_CDB_GET_SET_ATTR_LISTS = 0x30 , OSD_CDB_GET_SET_ATTR_MASK = 0x30 , } 
t#osd_req_done_fn typedef void ( osd_req_done_fn ) ( s#osd_request * , void * ) 
s#osd_request struct osd_request { s#osd_cdb cdb ; s#osd_data_out_integrity_info out_data_integ ; s#osd_data_in_integrity_info in_data_integ ; s#osd_dev * osd_dev ; s#request * request ; s#_osd_req_data_segment cdb_cont , set_attr , enc_get_attr , get_attr ; s#_osd_io_info out , in ; t#gfp_t alloc_flags ; unsigned timeout ; unsigned retries ; unsigned sense_len ; t#u8 sense [ E#OSD_MAX_SENSE_LEN ] ; e#osd_attributes_mode attributes_mode ; t#osd_req_done_fn * async_done ; void * async_private ; int async_error ; int req_errors ; } 
osd_start_request s#osd_request * osd_start_request ( s#osd_dev * , t#gfp_t ) 
osd_end_request void osd_end_request ( s#osd_request * ) 
osd_execute_request int osd_execute_request ( s#osd_request * ) 
osd_execute_request_async int osd_execute_request_async ( s#osd_request * , t#osd_req_done_fn * , void * ) 
osd_req_format void osd_req_format ( s#osd_request * , t#u64 ) 
t#osd_id typedef t#u64 osd_id 
s#osd_obj_id_list struct osd_obj_id_list { t#__be64 list_bytes ; t#__be64 continuation_id ; t#__be32 list_identifier ; t#u8 pad [ 3 ] ; t#u8 root_lstchg ; t#__be64 object_ids [ 0 ] ; } 
osd_req_list_dev_partitions int osd_req_list_dev_partitions ( s#osd_request * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
e#osd_options_flush_scope_values enum osd_options_flush_scope_values { OSD_CDB_FLUSH_ALL = 0 , OSD_CDB_FLUSH_ATTR_ONLY = 1 , OSD_CDB_FLUSH_ALL_RECURSIVE = 2 , OSD_CDB_FLUSH_ALL_RANGE = 2 , } 
osd_req_flush_obsd void osd_req_flush_obsd ( s#osd_request * , e#osd_options_flush_scope_values ) 
osd_req_create_partition void osd_req_create_partition ( s#osd_request * , t#osd_id ) 
osd_req_remove_partition void osd_req_remove_partition ( s#osd_request * , t#osd_id ) 
osd_req_list_partition_collections int osd_req_list_partition_collections ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_list_partition_objects int osd_req_list_partition_objects ( s#osd_request * , t#osd_id , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_partition void osd_req_flush_partition ( s#osd_request * , t#osd_id , e#osd_options_flush_scope_values ) 
s#osd_obj_id struct osd_obj_id { t#osd_id partition ; t#osd_id id ; } 
osd_req_list_collection_objects int osd_req_list_collection_objects ( s#osd_request * , const s#osd_obj_id * , t#osd_id , s#osd_obj_id_list * , unsigned ) 
osd_req_flush_collection void osd_req_flush_collection ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values ) 
osd_req_create_object void osd_req_create_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_remove_object void osd_req_remove_object ( s#osd_request * , s#osd_obj_id * ) 
osd_req_write void osd_req_write ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_write_kern int osd_req_write_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
osd_req_flush_object void osd_req_flush_object ( s#osd_request * , const s#osd_obj_id * , e#osd_options_flush_scope_values , t#u64 , t#u64 ) 
osd_req_read void osd_req_read ( s#osd_request * , const s#osd_obj_id * , t#u64 , s#bio * , t#u64 ) 
osd_req_read_kern int osd_req_read_kern ( s#osd_request * , const s#osd_obj_id * , t#u64 , void * , t#u64 ) 
s#osd_sg_entry struct osd_sg_entry { t#u64 offset ; t#u64 len ; } 
osd_req_write_sg int osd_req_write_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg int osd_req_read_sg ( s#osd_request * , const s#osd_obj_id * , s#bio * , const s#osd_sg_entry * , unsigned ) 
osd_req_write_sg_kern int osd_req_write_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_read_sg_kern int osd_req_read_sg_kern ( s#osd_request * , const s#osd_obj_id * , void * * , const s#osd_sg_entry * , unsigned ) 
osd_req_get_attributes void osd_req_get_attributes ( s#osd_request * , const s#osd_obj_id * ) 
osd_req_set_attributes void osd_req_set_attributes ( s#osd_request * , const s#osd_obj_id * ) 
s#osd_attr struct osd_attr { t#u32 attr_page ; t#u32 attr_id ; t#u16 len ; void * val_ptr ; } 
osd_req_add_set_attr_list int osd_req_add_set_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_add_get_attr_list int osd_req_add_get_attr_list ( s#osd_request * , const s#osd_attr * , unsigned ) 
osd_req_decode_get_attr_list int osd_req_decode_get_attr_list ( s#osd_request * , s#osd_attr * , int * , void * * ) 
osd_req_add_get_attr_page int osd_req_add_get_attr_page ( s#osd_request * , t#u32 , void * , unsigned , const s#osd_attr * ) 
osd_finalize_request int osd_finalize_request ( s#osd_request * , t#u8 , const void * , const t#u8 * ) 
e#osd_err_priority enum osd_err_priority { OSD_ERR_PRI_NO_ERROR = 0 , OSD_ERR_PRI_CLEAR_PAGES = 1 , OSD_ERR_PRI_RESOURCE = 2 , OSD_ERR_PRI_BAD_CRED = 3 , OSD_ERR_PRI_NO_ACCESS = 4 , OSD_ERR_PRI_UNREACHABLE = 5 , OSD_ERR_PRI_NOT_FOUND = 6 , OSD_ERR_PRI_NO_SPACE = 7 , OSD_ERR_PRI_EIO = 8 , } 
s#osd_sense_info struct osd_sense_info { e#osd_err_priority osd_err_pri ; int key ; int additional_code ; union { t#u16 sense_info ; t#u16 cdb_field_offset ; } ; union { t#u64 command_info ; } ; t#u32 not_initiated_command_functions ; t#u32 completed_command_functions ; s#osd_obj_id obj ; s#osd_attr attr ; } 
osd_req_decode_sense_full int osd_req_decode_sense_full ( s#osd_request * , s#osd_sense_info * , t#bool , s#osd_obj_id * , int , s#osd_attr * , int ) 
osd_sec_init_nosec_doall_caps void osd_sec_init_nosec_doall_caps ( void * , const s#osd_obj_id * , t#bool , const t#bool ) 

/* drivers/scsi/osd/osd_uld.o */
s##Scsi_Host
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
t#do_test_fn typedef int ( do_test_fn ) ( s#osd_dev * , unsigned , unsigned long ) 
osduld_register_test int osduld_register_test ( unsigned , t#do_test_fn * ) 
osduld_unregister_test void osduld_unregister_test ( unsigned ) 
osduld_path_lookup s#osd_dev * osduld_path_lookup ( const char * ) 
osduld_info_lookup s#osd_dev * osduld_info_lookup ( const s#osd_dev_info * ) 
osduld_put_device void osduld_put_device ( s#osd_dev * ) 
osduld_device_info const s#osd_dev_info * osduld_device_info ( s#osd_dev * ) 
osduld_device_same t#bool osduld_device_same ( s#osd_dev * , const s#osd_dev_info * ) 

/* drivers/scsi/qla2xxx/qla_target.o */
t#port_id_t typedef union { t#uint32_t b24 : 24 ; struct { t#uint8_t domain ; t#uint8_t area ; t#uint8_t al_pa ; t#uint8_t rsvd_1 ; } b ; } port_id_t 
e#transport_lun_status_table enum transport_lun_status_table { TRANSPORT_LUN_STATUS_FREE = 0 , TRANSPORT_LUN_STATUS_ACTIVE = 1 , } 
t#t10_task_attr_index_t typedef enum { SAM_TASK_ATTR_PASSTHROUGH , SAM_TASK_ATTR_UNTAGGED , SAM_TASK_ATTR_EMULATED } t10_task_attr_index_t 
s#se_obj struct se_obj { t#atomic_t obj_access_count ; } 
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#configfs_attribute struct configfs_attribute { const char * ca_name ; s#module * ca_owner ; t#mode_t ca_mode ; } 
s#configfs_item_operations struct configfs_item_operations { void ( * release ) ( s#config_item * ) ; t#ssize_t ( * show_attribute ) ( s#config_item * , s#configfs_attribute * , char * ) ; t#ssize_t ( * store_attribute ) ( s#config_item * , s#configfs_attribute * , const char * , t#size_t ) ; int ( * allow_link ) ( s#config_item * , s#config_item * ) ; int ( * drop_link ) ( s#config_item * , s#config_item * ) ; } 
s#configfs_group_operations struct configfs_group_operations { s#config_item * ( * make_item ) ( s#config_group * , const char * ) ; s#config_group * ( * make_group ) ( s#config_group * , const char * ) ; int ( * commit_item ) ( s#config_item * ) ; void ( * disconnect_notify ) ( s#config_group * , s#config_item * ) ; void ( * drop_item ) ( s#config_group * , s#config_item * ) ; } 
s#config_item_type struct config_item_type { s#module * ct_owner ; s#configfs_item_operations * ct_item_ops ; s#configfs_group_operations * ct_group_ops ; s#configfs_attribute * * ct_attrs ; } 
s#config_item struct config_item { char * ci_name ; char ci_namebuf [ 20 ] ; s#kref ci_kref ; s#list_head ci_entry ; s#config_item * ci_parent ; s#config_group * ci_group ; s#config_item_type * ci_type ; s#dentry * ci_dentry ; } 
s#configfs_subsystem struct configfs_subsystem { s#config_group su_group ; s#mutex su_mutex ; } 
s#config_group struct config_group { s#config_item cg_item ; s#list_head cg_children ; s#configfs_subsystem * cg_subsys ; s#config_group * * default_groups ; } 
s#t10_alua_lu_gp struct t10_alua_lu_gp { t#u16 lu_gp_id ; int lu_gp_valid_id ; t#u32 lu_gp_members ; t#atomic_t lu_gp_ref_cnt ; t#spinlock_t lu_gp_lock ; s#config_group lu_gp_group ; s#list_head lu_gp_node ; s#list_head lu_gp_mem_list ; } 
s#t10_alua_lu_gp_member struct t10_alua_lu_gp_member { t#bool lu_gp_assoc ; t#atomic_t lu_gp_mem_ref_cnt ; t#spinlock_t lu_gp_mem_lock ; s#t10_alua_lu_gp * lu_gp ; s#se_device * lu_gp_mem_dev ; s#list_head lu_gp_mem_list ; } 
s#t10_pr_registration struct t10_pr_registration { char pr_reg_isid [ 16 ] ; unsigned char pr_iport [ 256 ] ; unsigned char pr_tport [ 256 ] ; unsigned char * pr_aptpl_buf ; t#u16 pr_aptpl_rpti ; t#u16 pr_reg_tpgt ; int pr_reg_all_tg_pt ; int pr_reg_aptpl ; int pr_res_holder ; int pr_res_type ; int pr_res_scope ; t#bool isid_present_at_reg ; t#u32 pr_res_mapped_lun ; t#u32 pr_aptpl_target_lun ; t#u32 pr_res_generation ; t#u64 pr_reg_bin_isid ; t#u64 pr_res_key ; t#atomic_t pr_res_holders ; s#se_node_acl * pr_reg_nacl ; s#se_dev_entry * pr_reg_deve ; s#se_lun * pr_reg_tg_pt_lun ; s#list_head pr_reg_list ; s#list_head pr_reg_abort_list ; s#list_head pr_reg_aptpl_list ; s#list_head pr_reg_atp_list ; s#list_head pr_reg_atp_mem_list ; } 
s##workqueue_struct
s##se_subsystem_api
s#se_hba struct se_hba { t#u16 hba_tpgt ; t#u32 hba_id ; t#u32 hba_flags ; t#u32 dev_count ; t#u32 hba_index ; void * hba_ptr ; s#list_head hba_dev_list ; s#list_head hba_node ; t#spinlock_t device_lock ; s#config_group hba_group ; s#mutex hba_access_mutex ; s#se_subsystem_api * transport ; } 
s#se_dev_attrib struct se_dev_attrib { int emulate_dpo ; int emulate_fua_write ; int emulate_fua_read ; int emulate_write_cache ; int emulate_ua_intlck_ctrl ; int emulate_tas ; int emulate_tpu ; int emulate_tpws ; int emulate_reservations ; int emulate_alua ; int enforce_pr_isids ; int is_nonrot ; int emulate_rest_reord ; t#u32 hw_block_size ; t#u32 block_size ; t#u32 hw_max_sectors ; t#u32 fabric_max_sectors ; t#u32 optimal_sectors ; t#u32 hw_queue_depth ; t#u32 queue_depth ; t#u32 max_unmap_lba_count ; t#u32 max_unmap_block_desc_count ; t#u32 unmap_granularity ; t#u32 unmap_granularity_alignment ; s#se_subsystem_dev * da_sub_dev ; s#config_group da_group ; } 
t#t10_alua_index_t typedef enum { SPC_ALUA_PASSTHROUGH , SPC2_ALUA_DISABLED , SPC3_ALUA_EMULATED } t10_alua_index_t 
s#t10_alua_tg_pt_gp struct t10_alua_tg_pt_gp { t#u16 tg_pt_gp_id ; int tg_pt_gp_valid_id ; int tg_pt_gp_alua_access_status ; int tg_pt_gp_alua_access_type ; int tg_pt_gp_nonop_delay_msecs ; int tg_pt_gp_trans_delay_msecs ; int tg_pt_gp_implict_trans_secs ; int tg_pt_gp_pref ; int tg_pt_gp_write_metadata ; t#u32 tg_pt_gp_md_buf_len ; t#u32 tg_pt_gp_members ; t#atomic_t tg_pt_gp_alua_access_state ; t#atomic_t tg_pt_gp_ref_cnt ; t#spinlock_t tg_pt_gp_lock ; s#mutex tg_pt_gp_md_mutex ; s#se_subsystem_dev * tg_pt_gp_su_dev ; s#config_group tg_pt_gp_group ; s#list_head tg_pt_gp_list ; s#list_head tg_pt_gp_mem_list ; } 
e#transport_state_table enum transport_state_table { TRANSPORT_NO_STATE = 0 , TRANSPORT_NEW_CMD = 1 , TRANSPORT_WRITE_PENDING = 3 , TRANSPORT_PROCESSING = 5 , TRANSPORT_COMPLETE = 6 , TRANSPORT_ISTATE_PROCESSING = 11 , TRANSPORT_COMPLETE_QF_WP = 18 , TRANSPORT_COMPLETE_QF_OK = 19 , } 
s#se_tmr_req struct se_tmr_req { t#u8 function ; t#u8 response ; int call_transport ; t#u32 ref_task_tag ; void * fabric_tmr_ptr ; s#se_cmd * task_cmd ; s#se_device * tmr_dev ; s#se_lun * tmr_lun ; s#list_head tmr_list ; } 
e#transport_tpg_type_table enum transport_tpg_type_table { TRANSPORT_TPG_TYPE_NORMAL = 0 , TRANSPORT_TPG_TYPE_DISCOVERY = 1 , } 
s##target_fabric_configfs
s#se_wwn struct se_wwn { s#target_fabric_configfs * wwn_tf ; s#config_group wwn_group ; s#config_group * wwn_default_groups [ 2 ] ; s#config_group fabric_stat_group ; } 
s#se_portal_group struct se_portal_group { e#transport_tpg_type_table se_tpg_type ; t#u32 num_node_acls ; t#atomic_t tpg_pr_ref_count ; t#spinlock_t acl_node_lock ; t#spinlock_t session_lock ; t#spinlock_t tpg_lun_lock ; void * se_tpg_fabric_ptr ; s#list_head se_tpg_node ; s#list_head acl_node_list ; s#se_lun * * tpg_lun_list ; s#se_lun tpg_virt_lun0 ; s#list_head tpg_sess_list ; s#target_core_fabric_ops * se_tpg_tfo ; s#se_wwn * se_tpg_wwn ; s#config_group tpg_group ; s#config_group * tpg_default_groups [ 6 ] ; s#config_group tpg_lun_group ; s#config_group tpg_np_group ; s#config_group tpg_acl_group ; s#config_group tpg_attrib_group ; s#config_group tpg_param_group ; } 
s#se_tpg_np struct se_tpg_np { s#se_portal_group * tpg_np_parent ; s#config_group tpg_np_group ; } 
s#target_core_fabric_ops struct target_core_fabric_ops { s#configfs_subsystem * tf_subsys ; char * ( * get_fabric_name ) ( void ) ; t#u8 ( * get_fabric_proto_ident ) ( s#se_portal_group * ) ; char * ( * tpg_get_wwn ) ( s#se_portal_group * ) ; t#u16 ( * tpg_get_tag ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_default_depth ) ( s#se_portal_group * ) ; t#u32 ( * tpg_get_pr_transport_id ) ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) ; t#u32 ( * tpg_get_pr_transport_id_len ) ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) ; char * ( * tpg_parse_pr_out_transport_id ) ( s#se_portal_group * , const char * , t#u32 * , char * * ) ; int ( * tpg_check_demo_mode ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_cache ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_prod_mode_write_protect ) ( s#se_portal_group * ) ; int ( * tpg_check_demo_mode_login_only ) ( s#se_portal_group * ) ; s#se_node_acl * ( * tpg_alloc_fabric_acl ) ( s#se_portal_group * ) ; void ( * tpg_release_fabric_acl ) ( s#se_portal_group * , s#se_node_acl * ) ; t#u32 ( * tpg_get_inst_index ) ( s#se_portal_group * ) ; int ( * check_stop_free ) ( s#se_cmd * ) ; void ( * release_cmd ) ( s#se_cmd * ) ; void ( * put_session ) ( s#se_session * ) ; int ( * shutdown_session ) ( s#se_session * ) ; void ( * close_session ) ( s#se_session * ) ; t#u32 ( * sess_get_index ) ( s#se_session * ) ; t#u32 ( * sess_get_initiator_sid ) ( s#se_session * , unsigned char * , t#u32 ) ; int ( * write_pending ) ( s#se_cmd * ) ; int ( * write_pending_status ) ( s#se_cmd * ) ; void ( * set_default_node_attributes ) ( s#se_node_acl * ) ; t#u32 ( * get_task_tag ) ( s#se_cmd * ) ; int ( * get_cmd_state ) ( s#se_cmd * ) ; int ( * queue_data_in ) ( s#se_cmd * ) ; int ( * queue_status ) ( s#se_cmd * ) ; int ( * queue_tm_rsp ) ( s#se_cmd * ) ; s#se_wwn * ( * fabric_make_wwn ) ( s#target_fabric_configfs * , s#config_group * , const char * ) ; void ( * fabric_drop_wwn ) ( s#se_wwn * ) ; s#se_portal_group * ( * fabric_make_tpg ) ( s#se_wwn * , s#config_group * , const char * ) ; void ( * fabric_drop_tpg ) ( s#se_portal_group * ) ; int ( * fabric_post_link ) ( s#se_portal_group * , s#se_lun * ) ; void ( * fabric_pre_unlink ) ( s#se_portal_group * , s#se_lun * ) ; s#se_tpg_np * ( * fabric_make_np ) ( s#se_portal_group * , s#config_group * , const char * ) ; void ( * fabric_drop_np ) ( s#se_tpg_np * ) ; s#se_node_acl * ( * fabric_make_nodeacl ) ( s#se_portal_group * , s#config_group * , const char * ) ; void ( * fabric_drop_nodeacl ) ( s#se_node_acl * ) ; } 
s#se_cmd struct se_cmd { t#u8 scsi_status ; t#u8 scsi_asc ; t#u8 scsi_ascq ; t#u8 scsi_sense_reason ; t#u16 scsi_sense_length ; int alua_nonop_delay ; e#dma_data_direction data_direction ; int sam_task_attr ; e#transport_state_table t_state ; unsigned check_release : 1 ; unsigned cmd_wait_set : 1 ; unsigned unknown_data_length : 1 ; t#u32 se_cmd_flags ; t#u32 se_ordered_id ; t#u32 data_length ; t#u32 residual_count ; t#u32 orig_fe_lun ; t#u64 pr_res_key ; void * sense_buffer ; s#list_head se_delayed_node ; s#list_head se_lun_node ; s#list_head se_qf_node ; s#se_device * se_dev ; s#se_dev_entry * se_deve ; s#se_lun * se_lun ; s#se_session * se_sess ; s#se_tmr_req * se_tmr_req ; s#list_head se_cmd_list ; s#completion cmd_wait_comp ; s#kref cmd_kref ; s#target_core_fabric_ops * se_tfo ; int ( * execute_cmd ) ( s#se_cmd * ) ; void ( * transport_complete_callback ) ( s#se_cmd * ) ; unsigned char * t_task_cdb ; unsigned char __t_task_cdb [ 32 ] ; unsigned long long t_task_lba ; t#atomic_t t_fe_count ; unsigned int transport_state ; t#spinlock_t t_state_lock ; s#completion t_transport_stop_comp ; s#completion transport_lun_fe_stop_comp ; s#completion transport_lun_stop_comp ; s#work_struct work ; s#scatterlist * t_data_sg ; unsigned int t_data_nents ; void * t_data_vmap ; s#scatterlist * t_bidi_data_sg ; unsigned int t_bidi_data_nents ; s#list_head state_list ; t#bool state_active ; s#completion task_stop_comp ; void * priv ; } 
s#t10_alua struct t10_alua { t#t10_alua_index_t alua_type ; t#u16 alua_tg_pt_gps_counter ; t#u32 alua_tg_pt_gps_count ; t#spinlock_t tg_pt_gps_lock ; s#se_subsystem_dev * t10_sub_dev ; s#t10_alua_tg_pt_gp * default_tg_pt_gp ; s#config_group alua_tg_pt_gps_group ; int ( * alua_state_check ) ( s#se_cmd * , unsigned char * , t#u8 * ) ; s#list_head tg_pt_gps_list ; } 
s#t10_wwn struct t10_wwn { char vendor [ 8 ] ; char model [ 16 ] ; char revision [ 4 ] ; char unit_serial [ 254 ] ; t#spinlock_t t10_vpd_lock ; s#se_subsystem_dev * t10_sub_dev ; s#config_group t10_wwn_group ; s#list_head t10_vpd_list ; } 
t#t10_reservations_index_t typedef enum { SPC_PASSTHROUGH , SPC2_RESERVATIONS , SPC3_PERSISTENT_RESERVATIONS } t10_reservations_index_t 
s#t10_reservation_ops struct t10_reservation_ops { int ( * t10_reservation_check ) ( s#se_cmd * , t#u32 * ) ; int ( * t10_seq_non_holder ) ( s#se_cmd * , unsigned char * , t#u32 ) ; int ( * t10_pr_register ) ( s#se_cmd * ) ; int ( * t10_pr_clear ) ( s#se_cmd * ) ; } 
s#t10_reservation struct t10_reservation { int pr_all_tg_pt ; int pr_aptpl_active ; t#u32 pr_aptpl_buf_len ; t#u32 pr_generation ; t#t10_reservations_index_t res_type ; t#spinlock_t registration_lock ; t#spinlock_t aptpl_reg_lock ; s#se_node_acl * pr_res_holder ; s#list_head registration_list ; s#list_head aptpl_reg_list ; s#t10_reservation_ops pr_ops ; } 
s#se_dev_stat_grps struct se_dev_stat_grps { s#config_group stat_group ; s#config_group scsi_dev_group ; s#config_group scsi_tgt_dev_group ; s#config_group scsi_lu_group ; } 
s#se_subsystem_dev struct se_subsystem_dev { unsigned char se_dev_alias [ 512 ] ; unsigned char se_dev_udev_path [ 512 ] ; t#u32 su_dev_flags ; s#se_hba * se_dev_hba ; s#se_device * se_dev_ptr ; s#se_dev_attrib se_dev_attrib ; s#t10_alua t10_alua ; s#t10_wwn t10_wwn ; s#t10_reservation t10_pr ; t#spinlock_t se_dev_lock ; void * se_dev_su_ptr ; s#config_group se_dev_group ; s#config_group se_dev_pr_group ; s#se_dev_stat_grps dev_stat_grps ; } 
s#se_device struct se_device { t#u16 dev_rpti_counter ; t#u32 dev_cur_ordered_id ; t#u32 dev_flags ; t#u32 dev_port_count ; t#u32 dev_status ; t#u32 queue_depth ; t#u64 dev_res_bin_isid ; t#t10_task_attr_index_t dev_task_attr_type ; void * dev_ptr ; t#u32 dev_index ; t#u64 creation_time ; t#u32 num_resets ; t#u64 num_cmds ; t#u64 read_bytes ; t#u64 write_bytes ; t#spinlock_t stats_lock ; t#atomic_t simple_cmds ; t#atomic_t dev_ordered_id ; t#atomic_t dev_ordered_sync ; t#atomic_t dev_qf_count ; s#se_obj dev_obj ; s#se_obj dev_access_obj ; s#se_obj dev_export_obj ; t#spinlock_t delayed_cmd_lock ; t#spinlock_t execute_task_lock ; t#spinlock_t dev_reservation_lock ; t#spinlock_t dev_status_lock ; t#spinlock_t se_port_lock ; t#spinlock_t se_tmr_lock ; t#spinlock_t qf_cmd_lock ; s#se_node_acl * dev_reserved_node_acl ; s#t10_alua_lu_gp_member * dev_alua_lu_gp_mem ; s#t10_pr_registration * dev_pr_res_holder ; s#list_head dev_sep_list ; s#list_head dev_tmr_list ; s#workqueue_struct * tmr_wq ; s#work_struct qf_work_queue ; s#list_head delayed_cmd_list ; s#list_head state_list ; s#list_head qf_cmd_list ; s#se_hba * se_hba ; s#se_subsystem_dev * se_sub_dev ; s#se_subsystem_api * transport ; s#list_head dev_list ; } 
s#scsi_port_stats struct scsi_port_stats { t#u64 cmd_pdus ; t#u64 tx_data_octets ; t#u64 rx_data_octets ; } 
s#t10_alua_tg_pt_gp_member struct t10_alua_tg_pt_gp_member { t#bool tg_pt_gp_assoc ; t#atomic_t tg_pt_gp_mem_ref_cnt ; t#spinlock_t tg_pt_gp_mem_lock ; s#t10_alua_tg_pt_gp * tg_pt_gp ; s#se_port * tg_pt ; s#list_head tg_pt_gp_mem_list ; } 
s#se_port struct se_port { t#u16 sep_rtpi ; int sep_tg_pt_secondary_stat ; int sep_tg_pt_secondary_write_md ; t#u32 sep_index ; s#scsi_port_stats sep_stats ; t#atomic_t sep_tg_pt_secondary_offline ; t#atomic_t sep_tg_pt_ref_cnt ; t#spinlock_t sep_alua_lock ; s#mutex sep_tg_pt_md_mutex ; s#t10_alua_tg_pt_gp_member * sep_alua_tg_pt_gp_mem ; s#se_lun * sep_lun ; s#se_portal_group * sep_tpg ; s#list_head sep_alua_list ; s#list_head sep_list ; } 
s#se_port_stat_grps struct se_port_stat_grps { s#config_group stat_group ; s#config_group scsi_port_group ; s#config_group scsi_tgt_port_group ; s#config_group scsi_transport_group ; } 
s#se_lun struct se_lun { e#transport_lun_status_table lun_status ; t#u32 lun_access ; t#u32 lun_flags ; t#u32 unpacked_lun ; t#atomic_t lun_acl_count ; t#spinlock_t lun_acl_lock ; t#spinlock_t lun_cmd_lock ; t#spinlock_t lun_sep_lock ; s#completion lun_shutdown_comp ; s#list_head lun_cmd_list ; s#list_head lun_acl_list ; s#se_device * lun_se_dev ; s#se_port * lun_sep ; s#config_group lun_group ; s#se_port_stat_grps port_stat_grps ; } 
s#se_ml_stat_grps struct se_ml_stat_grps { s#config_group stat_group ; s#config_group scsi_auth_intr_group ; s#config_group scsi_att_intr_port_group ; } 
s#se_lun_acl struct se_lun_acl { char initiatorname [ 224 ] ; t#u32 mapped_lun ; s#se_node_acl * se_lun_nacl ; s#se_lun * se_lun ; s#list_head lacl_list ; s#config_group se_lun_group ; s#se_ml_stat_grps ml_stat_grps ; } 
s#se_dev_entry struct se_dev_entry { t#bool def_pr_registered ; t#u32 lun_flags ; t#u32 deve_cmds ; t#u32 mapped_lun ; t#u32 average_bytes ; t#u32 last_byte_count ; t#u32 total_cmds ; t#u32 total_bytes ; t#u64 pr_res_key ; t#u64 creation_time ; t#u32 attach_count ; t#u64 read_bytes ; t#u64 write_bytes ; t#atomic_t ua_count ; t#atomic_t pr_ref_count ; s#se_lun_acl * se_lun_acl ; t#spinlock_t ua_lock ; s#se_lun * se_lun ; s#list_head alua_port_list ; s#list_head ua_list ; } 
s#se_node_acl struct se_node_acl { char initiatorname [ 224 ] ; t#bool dynamic_node_acl ; t#bool acl_stop : 1 ; t#u32 queue_depth ; t#u32 acl_index ; t#u64 num_cmds ; t#u64 read_bytes ; t#u64 write_bytes ; t#spinlock_t stats_lock ; t#atomic_t acl_pr_ref_count ; s#se_dev_entry * * device_list ; s#se_session * nacl_sess ; s#se_portal_group * se_tpg ; t#spinlock_t device_list_lock ; t#spinlock_t nacl_sess_lock ; s#config_group acl_group ; s#config_group acl_attrib_group ; s#config_group acl_auth_group ; s#config_group acl_param_group ; s#config_group acl_fabric_stat_group ; s#config_group * acl_default_groups [ 5 ] ; s#list_head acl_list ; s#list_head acl_sess_list ; s#completion acl_free_comp ; s#kref acl_kref ; } 
s#se_session struct se_session { unsigned sess_tearing_down : 1 ; t#u64 sess_bin_isid ; s#se_node_acl * se_node_acl ; s#se_portal_group * se_tpg ; void * fabric_sess_ptr ; s#list_head sess_list ; s#list_head sess_acl_list ; s#list_head sess_cmd_list ; t#spinlock_t sess_cmd_lock ; s#kref sess_kref ; } 
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##scsi_transport_template
t#fc_port_type_t typedef enum { FCT_UNKNOWN , FCT_RSCN , FCT_SWITCH , FCT_BROADCAST , FCT_INITIATOR , FCT_TARGET } fc_port_type_t 
s#fc_port struct fc_port { s#list_head list ; s#scsi_qla_host * vha ; t#uint8_t node_name [ 8 ] ; t#uint8_t port_name [ 8 ] ; t#port_id_t d_id ; t#uint16_t loop_id ; t#uint16_t old_loop_id ; t#uint16_t tgt_id ; t#uint16_t old_tgt_id ; t#uint8_t fcp_prio ; t#uint8_t fabric_port_name [ 8 ] ; t#uint16_t fp_speed ; t#fc_port_type_t port_type ; t#atomic_t state ; t#uint32_t flags ; int login_retry ; s#fc_rport * rport , * drport ; t#u32 supported_classes ; t#uint8_t fc4_type ; t#uint8_t scan_state ; unsigned long last_queue_full ; unsigned long last_ramp_up ; t#uint16_t port_id ; unsigned long retry_delay_timestamp ; } 
t#fc_port_t typedef s#fc_port fc_port_t 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
E#pci_channel_io_perm_failure ( pci_channel_state_t ) 3 
s#device_reg_2xxx struct device_reg_2xxx { t#uint16_t flash_address ; t#uint16_t flash_data ; t#uint16_t unused_1 [ 1 ] ; t#uint16_t ctrl_status ; t#uint16_t ictrl ; t#uint16_t istatus ; t#uint16_t semaphore ; t#uint16_t nvram ; union { struct { t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t unused_2 [ 59 ] ; } __attribute__ ( ( packed ) ) isp2100 ; struct { t#uint16_t req_q_in ; t#uint16_t req_q_out ; t#uint16_t rsp_q_in ; t#uint16_t rsp_q_out ; t#uint32_t host_status ; t#uint16_t host_semaphore ; t#uint16_t unused_3 [ 17 ] ; t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; t#uint16_t mailbox24 ; t#uint16_t mailbox25 ; t#uint16_t mailbox26 ; t#uint16_t mailbox27 ; t#uint16_t mailbox28 ; t#uint16_t mailbox29 ; t#uint16_t mailbox30 ; t#uint16_t mailbox31 ; t#uint16_t fb_cmd ; t#uint16_t unused_4 [ 10 ] ; } __attribute__ ( ( packed ) ) isp2300 ; } u ; t#uint16_t fpm_diag_config ; t#uint16_t unused_5 [ 0x4 ] ; t#uint16_t risc_hw ; t#uint16_t unused_5_1 ; t#uint16_t pcr ; t#uint16_t unused_6 [ 0x5 ] ; t#uint16_t mctr ; t#uint16_t unused_7 [ 0x3 ] ; t#uint16_t fb_cmd_2100 ; t#uint16_t unused_8 [ 0x3 ] ; t#uint16_t hccr ; t#uint16_t unused_9 [ 5 ] ; t#uint16_t gpiod ; t#uint16_t gpioe ; union { struct { t#uint16_t unused_10 [ 8 ] ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; } __attribute__ ( ( packed ) ) isp2200 ; } u_end ; } 
s#device_reg_24xx struct device_reg_24xx { t#uint32_t flash_addr ; t#uint32_t flash_data ; t#uint32_t ctrl_status ; t#uint32_t ictrl ; t#uint32_t istatus ; t#uint32_t unused_1 [ 2 ] ; t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t preq_q_in ; t#uint32_t preq_q_out ; t#uint32_t unused_2 [ 2 ] ; t#uint32_t atio_q_in ; t#uint32_t atio_q_out ; t#uint32_t host_status ; t#uint32_t hccr ; t#uint32_t gpiod ; t#uint32_t gpioe ; t#uint32_t iobase_addr ; t#uint32_t unused_3 [ 10 ] ; t#uint16_t mailbox0 ; t#uint16_t mailbox1 ; t#uint16_t mailbox2 ; t#uint16_t mailbox3 ; t#uint16_t mailbox4 ; t#uint16_t mailbox5 ; t#uint16_t mailbox6 ; t#uint16_t mailbox7 ; t#uint16_t mailbox8 ; t#uint16_t mailbox9 ; t#uint16_t mailbox10 ; t#uint16_t mailbox11 ; t#uint16_t mailbox12 ; t#uint16_t mailbox13 ; t#uint16_t mailbox14 ; t#uint16_t mailbox15 ; t#uint16_t mailbox16 ; t#uint16_t mailbox17 ; t#uint16_t mailbox18 ; t#uint16_t mailbox19 ; t#uint16_t mailbox20 ; t#uint16_t mailbox21 ; t#uint16_t mailbox22 ; t#uint16_t mailbox23 ; t#uint16_t mailbox24 ; t#uint16_t mailbox25 ; t#uint16_t mailbox26 ; t#uint16_t mailbox27 ; t#uint16_t mailbox28 ; t#uint16_t mailbox29 ; t#uint16_t mailbox30 ; t#uint16_t mailbox31 ; t#uint32_t iobase_window ; t#uint32_t iobase_c4 ; t#uint32_t iobase_c8 ; t#uint32_t unused_4_1 [ 6 ] ; t#uint32_t iobase_q ; t#uint32_t unused_5 [ 2 ] ; t#uint32_t iobase_select ; t#uint32_t unused_6 [ 2 ] ; t#uint32_t iobase_sdata ; } 
s#device_reg_25xxmq struct device_reg_25xxmq { t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t atio_q_in ; t#uint32_t atio_q_out ; } 
s#device_reg_82xx struct device_reg_82xx { t#uint32_t req_q_out [ 64 ] ; t#uint32_t rsp_q_in [ 64 ] ; t#uint32_t rsp_q_out [ 64 ] ; t#uint16_t mailbox_in [ 32 ] ; t#uint16_t unused_1 [ 32 ] ; t#uint32_t hint ; t#uint16_t unused_2 [ 62 ] ; t#uint16_t mailbox_out [ 32 ] ; t#uint32_t unused_3 [ 48 ] ; t#uint32_t host_status ; t#uint32_t host_int ; } 
s#device_reg_fx00 struct device_reg_fx00 { t#uint32_t mailbox0 ; t#uint32_t mailbox1 ; t#uint32_t mailbox2 ; t#uint32_t mailbox3 ; t#uint32_t mailbox4 ; t#uint32_t mailbox5 ; t#uint32_t mailbox6 ; t#uint32_t mailbox7 ; t#uint32_t mailbox8 ; t#uint32_t mailbox9 ; t#uint32_t mailbox10 ; t#uint32_t mailbox11 ; t#uint32_t mailbox12 ; t#uint32_t mailbox13 ; t#uint32_t mailbox14 ; t#uint32_t mailbox15 ; t#uint32_t mailbox16 ; t#uint32_t mailbox17 ; t#uint32_t mailbox18 ; t#uint32_t mailbox19 ; t#uint32_t mailbox20 ; t#uint32_t mailbox21 ; t#uint32_t mailbox22 ; t#uint32_t mailbox23 ; t#uint32_t mailbox24 ; t#uint32_t mailbox25 ; t#uint32_t mailbox26 ; t#uint32_t mailbox27 ; t#uint32_t mailbox28 ; t#uint32_t mailbox29 ; t#uint32_t mailbox30 ; t#uint32_t mailbox31 ; t#uint32_t aenmailbox0 ; t#uint32_t aenmailbox1 ; t#uint32_t aenmailbox2 ; t#uint32_t aenmailbox3 ; t#uint32_t aenmailbox4 ; t#uint32_t aenmailbox5 ; t#uint32_t aenmailbox6 ; t#uint32_t aenmailbox7 ; t#uint32_t req_q_in ; t#uint32_t req_q_out ; t#uint32_t rsp_q_in ; t#uint32_t rsp_q_out ; t#uint32_t initval0 ; t#uint32_t initval1 ; t#uint32_t initval2 ; t#uint32_t initval3 ; t#uint32_t initval4 ; t#uint32_t initval5 ; t#uint32_t initval6 ; t#uint32_t initval7 ; t#uint32_t fwheartbeat ; t#uint32_t pseudoaen ; } 
t#device_reg_t typedef union { s#device_reg_2xxx isp ; s#device_reg_24xx isp24 ; s#device_reg_25xxmq isp25mq ; s#device_reg_82xx isp82 ; s#device_reg_fx00 ispfx00 ; } device_reg_t 
t#target_id_t typedef union { t#uint16_t extended ; struct { t#uint8_t reserved ; t#uint8_t standard ; } id ; } target_id_t 
t#request_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#target_id_t target ; t#uint16_t lun ; t#uint16_t control_flags ; t#uint16_t reserved_1 ; t#uint16_t timeout ; t#uint16_t dseg_count ; t#uint8_t scsi_cdb [ 16 ] ; t#uint32_t byte_count ; t#uint32_t dseg_0_address [ 2 ] ; t#uint32_t dseg_0_length ; t#uint32_t dseg_1_address [ 2 ] ; t#uint32_t dseg_1_length ; } request_t 
t#response_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#uint8_t data [ 52 ] ; t#uint32_t signature ; } response_t 
s#qla_msix_entry struct qla_msix_entry { int have_irq ; t#uint32_t vector ; t#uint16_t entry ; s#rsp_que * rsp ; } 
s#srb_iocb struct srb_iocb { union { struct { t#uint16_t flags ; t#uint16_t data [ 2 ] ; } logio ; struct { t#uint32_t flags ; t#uint32_t lun ; t#uint32_t data ; s#completion comp ; t#__le16 comp_status ; } tmf ; struct { t#uint8_t flags ; t#uint32_t req_len ; t#uint32_t rsp_len ; void * req_addr ; void * rsp_addr ; t#dma_addr_t req_dma_handle ; t#dma_addr_t rsp_dma_handle ; t#__le32 adapter_id ; t#__le32 adapter_id_hi ; t#__le16 req_func_type ; t#__le32 req_data ; t#__le32 req_data_extra ; t#__le32 result ; t#__le32 seq_number ; t#__le16 fw_flags ; s#completion fxiocb_comp ; t#__le32 reserved_0 ; t#uint8_t reserved_1 ; } fxiocb ; struct { t#uint32_t cmd_hndl ; t#__le16 comp_status ; s#completion comp ; } abt ; } u ; s#timer_list timer ; void ( * timeout ) ( void * ) ; } 
s#srb_cmd struct srb_cmd { s#scsi_cmnd * cmd ; t#uint32_t request_sense_length ; t#uint32_t fw_sense_length ; t#uint8_t * request_sense_ptr ; void * ctx ; } 
s#srb struct srb { t#atomic_t ref_count ; s#fc_port * fcport ; t#uint32_t handle ; t#uint16_t flags ; t#uint16_t type ; char * name ; int iocbs ; union { s#srb_iocb iocb_cmd ; s#fc_bsg_job * bsg_job ; s#srb_cmd scmd ; } u ; void ( * done ) ( void * , void * , int ) ; void ( * free ) ( void * , void * ) ; } 
t#srb_t typedef s#srb srb_t 
s#rsp_que struct rsp_que { t#dma_addr_t dma ; t#response_t * ring ; t#response_t * ring_ptr ; t#uint32_t * rsp_q_in ; t#uint32_t * rsp_q_out ; t#uint16_t ring_index ; t#uint16_t out_ptr ; t#uint16_t * in_ptr ; t#uint16_t length ; t#uint16_t options ; t#uint16_t rid ; t#uint16_t id ; t#uint16_t vp_idx ; s#qla_hw_data * hw ; s#qla_msix_entry * msix ; s#req_que * req ; t#srb_t * status_srb ; s#work_struct q_work ; t#dma_addr_t dma_fx00 ; t#response_t * ring_fx00 ; t#uint16_t length_fx00 ; t#uint8_t rsp_pkt [ ( sizeof ( request_t ) ) ] ; } 
s#req_que struct req_que { t#dma_addr_t dma ; t#request_t * ring ; t#request_t * ring_ptr ; t#uint32_t * req_q_in ; t#uint32_t * req_q_out ; t#uint16_t ring_index ; t#uint16_t in_ptr ; t#uint16_t * out_ptr ; t#uint16_t cnt ; t#uint16_t length ; t#uint16_t options ; t#uint16_t rid ; t#uint16_t id ; t#uint16_t qos ; t#uint16_t vp_idx ; s#rsp_que * rsp ; t#srb_t * * outstanding_cmds ; t#uint32_t current_outstanding_cmd ; t#uint16_t num_outstanding_cmds ; int max_q_depth ; t#dma_addr_t dma_fx00 ; t#request_t * ring_fx00 ; t#uint16_t length_fx00 ; t#uint8_t req_pkt [ ( sizeof ( request_t ) ) ] ; } 
s#qla_npiv_entry struct qla_npiv_entry { t#uint16_t flags ; t#uint16_t vf_id ; t#uint8_t q_qos ; t#uint8_t f_qos ; t#uint16_t unused1 ; t#uint8_t port_name [ 8 ] ; t#uint8_t node_name [ 8 ] ; } 
t#ms_iocb_entry_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t handle_count ; t#uint8_t entry_status ; t#uint32_t handle1 ; t#target_id_t loop_id ; t#uint16_t status ; t#uint16_t control_flags ; t#uint16_t reserved2 ; t#uint16_t timeout ; t#uint16_t cmd_dsd_count ; t#uint16_t total_dsd_count ; t#uint8_t type ; t#uint8_t r_ctl ; t#uint16_t rx_id ; t#uint16_t reserved3 ; t#uint32_t handle2 ; t#uint32_t rsp_bytecount ; t#uint32_t req_bytecount ; t#uint32_t dseg_req_address [ 2 ] ; t#uint32_t dseg_req_length ; t#uint32_t dseg_rsp_address [ 2 ] ; t#uint32_t dseg_rsp_length ; } ms_iocb_entry_t 
s#ct_cmd_hdr struct ct_cmd_hdr { t#uint8_t revision ; t#uint8_t in_id [ 3 ] ; t#uint8_t gs_type ; t#uint8_t gs_subtype ; t#uint8_t options ; t#uint8_t reserved ; } 
s#ct_fdmi_hba_attr struct ct_fdmi_hba_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t node_name [ 8 ] ; t#uint8_t manufacturer [ 64 ] ; t#uint8_t serial_num [ 32 ] ; t#uint8_t model [ 16 + 1 ] ; t#uint8_t model_desc [ 80 ] ; t#uint8_t hw_version [ 32 ] ; t#uint8_t driver_version [ 32 ] ; t#uint8_t orom_version [ 16 ] ; t#uint8_t fw_version [ 32 ] ; t#uint8_t os_version [ 128 ] ; t#uint32_t max_ct_len ; } a ; } 
s#ct_fdmi_hba_attributes struct ct_fdmi_hba_attributes { t#uint32_t count ; s#ct_fdmi_hba_attr entry [ 9 ] ; } 
s#ct_fdmiv2_hba_attr struct ct_fdmiv2_hba_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t node_name [ 8 ] ; t#uint8_t manufacturer [ 64 ] ; t#uint8_t serial_num [ 32 ] ; t#uint8_t model [ 16 + 1 ] ; t#uint8_t model_desc [ 80 ] ; t#uint8_t hw_version [ 16 ] ; t#uint8_t driver_version [ 32 ] ; t#uint8_t orom_version [ 16 ] ; t#uint8_t fw_version [ 32 ] ; t#uint8_t os_version [ 128 ] ; t#uint32_t max_ct_len ; t#uint8_t sym_name [ 256 ] ; t#uint32_t vendor_id ; t#uint32_t num_ports ; t#uint8_t fabric_name [ 8 ] ; t#uint8_t bios_name [ 32 ] ; t#uint8_t vendor_indentifer [ 8 ] ; } a ; } 
s#ct_fdmiv2_hba_attributes struct ct_fdmiv2_hba_attributes { t#uint32_t count ; s#ct_fdmiv2_hba_attr entry [ 17 ] ; } 
s#ct_fdmi_port_attr struct ct_fdmi_port_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t fc4_types [ 32 ] ; t#uint32_t sup_speed ; t#uint32_t cur_speed ; t#uint32_t max_frame_size ; t#uint8_t os_dev_name [ 32 ] ; t#uint8_t host_name [ 256 ] ; } a ; } 
s#ct_fdmi_port_attributes struct ct_fdmi_port_attributes { t#uint32_t count ; s#ct_fdmi_port_attr entry [ 6 ] ; } 
s#ct_fdmiv2_port_attr struct ct_fdmiv2_port_attr { t#uint16_t type ; t#uint16_t len ; union { t#uint8_t fc4_types [ 32 ] ; t#uint32_t sup_speed ; t#uint32_t cur_speed ; t#uint32_t max_frame_size ; t#uint8_t os_dev_name [ 32 ] ; t#uint8_t host_name [ 256 ] ; t#uint8_t node_name [ 8 ] ; t#uint8_t port_name [ 8 ] ; t#uint8_t port_sym_name [ 128 ] ; t#uint32_t port_type ; t#uint32_t port_supported_cos ; t#uint8_t fabric_name [ 8 ] ; t#uint8_t port_fc4_type [ 32 ] ; t#uint32_t port_state ; t#uint32_t num_ports ; t#uint32_t port_id ; } a ; } 
s#ct_fdmiv2_port_attributes struct ct_fdmiv2_port_attributes { t#uint32_t count ; s#ct_fdmiv2_port_attr entry [ 16 ] ; } 
s#ct_sns_req struct ct_sns_req { s#ct_cmd_hdr header ; t#uint16_t command ; t#uint16_t max_rsp_size ; t#uint8_t fragment_id ; t#uint8_t reserved [ 3 ] ; union { struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; } port_id ; struct { t#uint8_t port_type ; t#uint8_t domain ; t#uint8_t area ; t#uint8_t reserved ; } gid_pt ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint8_t fc4_types [ 32 ] ; } rft_id ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint16_t reserved2 ; t#uint8_t fc4_feature ; t#uint8_t fc4_type ; } rff_id ; struct { t#uint8_t reserved ; t#uint8_t port_id [ 3 ] ; t#uint8_t node_name [ 8 ] ; } rnn_id ; struct { t#uint8_t node_name [ 8 ] ; t#uint8_t name_len ; t#uint8_t sym_node_name [ 255 ] ; } rsnn_nn ; struct { t#uint8_t hba_indentifier [ 8 ] ; } ghat ; struct { t#uint8_t hba_identifier [ 8 ] ; t#uint32_t entry_count ; t#uint8_t port_name [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } rhba ; struct { t#uint8_t hba_identifier [ 8 ] ; t#uint32_t entry_count ; t#uint8_t port_name [ 8 ] ; s#ct_fdmiv2_hba_attributes attrs ; } rhba2 ; struct { t#uint8_t hba_identifier [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } rhat ; struct { t#uint8_t port_name [ 8 ] ; s#ct_fdmi_port_attributes attrs ; } rpa ; struct { t#uint8_t port_name [ 8 ] ; s#ct_fdmiv2_port_attributes attrs ; } rpa2 ; struct { t#uint8_t port_name [ 8 ] ; } dhba ; struct { t#uint8_t port_name [ 8 ] ; } dhat ; struct { t#uint8_t port_name [ 8 ] ; } dprt ; struct { t#uint8_t port_name [ 8 ] ; } dpa ; struct { t#uint8_t port_name [ 8 ] ; } gpsc ; struct { t#uint8_t reserved ; t#uint8_t port_name [ 3 ] ; } gff_id ; } req ; } 
s#ct_rsp_hdr struct ct_rsp_hdr { s#ct_cmd_hdr header ; t#uint16_t response ; t#uint16_t residual ; t#uint8_t fragment_id ; t#uint8_t reason_code ; t#uint8_t explanation_code ; t#uint8_t vendor_unique ; } 
s#ct_sns_gid_pt_data struct ct_sns_gid_pt_data { t#uint8_t control_byte ; t#uint8_t port_id [ 3 ] ; } 
s#ct_sns_rsp struct ct_sns_rsp { s#ct_rsp_hdr header ; union { struct { t#uint8_t port_type ; t#uint8_t port_id [ 3 ] ; t#uint8_t port_name [ 8 ] ; t#uint8_t sym_port_name_len ; t#uint8_t sym_port_name [ 255 ] ; t#uint8_t node_name [ 8 ] ; t#uint8_t sym_node_name_len ; t#uint8_t sym_node_name [ 255 ] ; t#uint8_t init_proc_assoc [ 8 ] ; t#uint8_t node_ip_addr [ 16 ] ; t#uint8_t class_of_service [ 4 ] ; t#uint8_t fc4_types [ 32 ] ; t#uint8_t ip_address [ 16 ] ; t#uint8_t fabric_port_name [ 8 ] ; t#uint8_t reserved ; t#uint8_t hard_address [ 3 ] ; } ga_nxt ; struct { s#ct_sns_gid_pt_data entries [ 2048 ] ; } gid_pt ; struct { t#uint8_t port_name [ 8 ] ; } gpn_id ; struct { t#uint8_t node_name [ 8 ] ; } gnn_id ; struct { t#uint8_t fc4_types [ 32 ] ; } gft_id ; struct { t#uint32_t entry_count ; t#uint8_t port_name [ 8 ] ; s#ct_fdmi_hba_attributes attrs ; } ghat ; struct { t#uint8_t port_name [ 8 ] ; } gfpn_id ; struct { t#uint16_t speeds ; t#uint16_t speed ; } gpsc ; struct { t#uint8_t fc4_features [ 128 ] ; } gff_id ; } rsp ; } 
s#ct_sns_pkt struct ct_sns_pkt { union { s#ct_sns_req req ; s#ct_sns_rsp rsp ; } p ; } 
s#sns_cmd_pkt struct sns_cmd_pkt { union { struct { t#uint16_t buffer_length ; t#uint16_t reserved_1 ; t#uint32_t buffer_address [ 2 ] ; t#uint16_t subcommand_length ; t#uint16_t reserved_2 ; t#uint16_t subcommand ; t#uint16_t size ; t#uint32_t reserved_3 ; t#uint8_t param [ 36 ] ; } cmd ; t#uint8_t rft_data [ 16 ] ; t#uint8_t rnn_data [ 16 ] ; t#uint8_t gan_data [ ( 620 + 16 ) ] ; t#uint8_t gid_data [ ( 512 * 4 + 16 ) ] ; t#uint8_t gpn_data [ ( 8 + 16 ) ] ; t#uint8_t gnn_data [ ( 8 + 16 ) ] ; } p ; } 
s#gid_list_info struct gid_list_info { t#uint8_t al_pa ; t#uint8_t area ; t#uint8_t domain ; t#uint8_t loop_id_2100 ; t#uint16_t loop_id ; t#uint16_t reserved_1 ; } 
s##dma_pool
t#init_cb_t typedef struct { t#uint8_t version ; t#uint8_t reserved_1 ; t#uint8_t firmware_options [ 2 ] ; t#uint16_t frame_payload_size ; t#uint16_t max_iocb_allocation ; t#uint16_t execution_throttle ; t#uint8_t retry_count ; t#uint8_t retry_delay ; t#uint8_t port_name [ 8 ] ; t#uint16_t hard_address ; t#uint8_t inquiry_data ; t#uint8_t login_timeout ; t#uint8_t node_name [ 8 ] ; t#uint16_t request_q_outpointer ; t#uint16_t response_q_inpointer ; t#uint16_t request_q_length ; t#uint16_t response_q_length ; t#uint32_t request_q_address [ 2 ] ; t#uint32_t response_q_address [ 2 ] ; t#uint16_t lun_enables ; t#uint8_t command_resource_count ; t#uint8_t immediate_notify_resource_count ; t#uint16_t timeout ; t#uint8_t reserved_2 [ 2 ] ; t#uint8_t add_firmware_options [ 2 ] ; t#uint8_t response_accumulation_timer ; t#uint8_t interrupt_delay_timer ; t#uint8_t special_options [ 2 ] ; t#uint8_t reserved_3 [ 26 ] ; } init_cb_t 
s#ex_init_cb_81xx struct ex_init_cb_81xx { t#uint16_t ex_version ; t#uint8_t prio_fcf_matching_flags ; t#uint8_t reserved_1 [ 3 ] ; t#uint16_t pri_fcf_vlan_id ; t#uint8_t pri_fcf_fabric_name [ 8 ] ; t#uint16_t reserved_2 [ 7 ] ; t#uint8_t spma_mac_addr [ 6 ] ; t#uint16_t reserved_3 [ 14 ] ; } 
t#mbx_cmd_t typedef struct { t#uint32_t out_mb ; t#uint32_t in_mb ; t#uint16_t mb [ 32 ] ; long buf_size ; void * bufp ; t#uint32_t tov ; t#uint8_t flags ; } mbx_cmd_t 
s#mbx_cmd_32 struct mbx_cmd_32 { t#uint32_t out_mb ; t#uint32_t in_mb ; t#uint32_t mb [ 32 ] ; long buf_size ; void * bufp ; t#uint32_t tov ; t#uint8_t flags ; } 
s#qla2100_fw_dump struct qla2100_fw_dump { t#uint16_t hccr ; t#uint16_t pbiu_reg [ 8 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint16_t dma_reg [ 48 ] ; t#uint16_t risc_hdw_reg [ 16 ] ; t#uint16_t risc_gp0_reg [ 16 ] ; t#uint16_t risc_gp1_reg [ 16 ] ; t#uint16_t risc_gp2_reg [ 16 ] ; t#uint16_t risc_gp3_reg [ 16 ] ; t#uint16_t risc_gp4_reg [ 16 ] ; t#uint16_t risc_gp5_reg [ 16 ] ; t#uint16_t risc_gp6_reg [ 16 ] ; t#uint16_t risc_gp7_reg [ 16 ] ; t#uint16_t frame_buf_hdw_reg [ 16 ] ; t#uint16_t fpm_b0_reg [ 64 ] ; t#uint16_t fpm_b1_reg [ 64 ] ; t#uint16_t risc_ram [ 0xf000 ] ; } 
s#qla2300_fw_dump struct qla2300_fw_dump { t#uint16_t hccr ; t#uint16_t pbiu_reg [ 8 ] ; t#uint16_t risc_host_reg [ 8 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint16_t resp_dma_reg [ 32 ] ; t#uint16_t dma_reg [ 48 ] ; t#uint16_t risc_hdw_reg [ 16 ] ; t#uint16_t risc_gp0_reg [ 16 ] ; t#uint16_t risc_gp1_reg [ 16 ] ; t#uint16_t risc_gp2_reg [ 16 ] ; t#uint16_t risc_gp3_reg [ 16 ] ; t#uint16_t risc_gp4_reg [ 16 ] ; t#uint16_t risc_gp5_reg [ 16 ] ; t#uint16_t risc_gp6_reg [ 16 ] ; t#uint16_t risc_gp7_reg [ 16 ] ; t#uint16_t frame_buf_hdw_reg [ 64 ] ; t#uint16_t fpm_b0_reg [ 64 ] ; t#uint16_t fpm_b1_reg [ 64 ] ; t#uint16_t risc_ram [ 0xf800 ] ; t#uint16_t stack_ram [ 0x1000 ] ; t#uint16_t data_ram [ 1 ] ; } 
s#qla24xx_fw_dump struct qla24xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 7 ] ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 16 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 16 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 112 ] ; t#uint32_t fpm_hdw_reg [ 192 ] ; t#uint32_t fb_hdw_reg [ 176 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla25xx_fw_dump struct qla25xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 32 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 128 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 192 ] ; t#uint32_t fb_hdw_reg [ 192 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla81xx_fw_dump struct qla81xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 32 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 128 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 128 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 128 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 16 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 224 ] ; t#uint32_t fb_hdw_reg [ 208 ] ; t#uint32_t code_ram [ 0x2000 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla83xx_fw_dump struct qla83xx_fw_dump { t#uint32_t host_status ; t#uint32_t host_risc_reg [ 48 ] ; t#uint32_t pcie_regs [ 4 ] ; t#uint32_t host_reg [ 32 ] ; t#uint32_t shadow_reg [ 11 ] ; t#uint32_t risc_io_reg ; t#uint16_t mailbox_reg [ 32 ] ; t#uint32_t xseq_gp_reg [ 256 ] ; t#uint32_t xseq_0_reg [ 48 ] ; t#uint32_t xseq_1_reg [ 16 ] ; t#uint32_t xseq_2_reg [ 16 ] ; t#uint32_t rseq_gp_reg [ 256 ] ; t#uint32_t rseq_0_reg [ 32 ] ; t#uint32_t rseq_1_reg [ 16 ] ; t#uint32_t rseq_2_reg [ 16 ] ; t#uint32_t rseq_3_reg [ 16 ] ; t#uint32_t aseq_gp_reg [ 256 ] ; t#uint32_t aseq_0_reg [ 32 ] ; t#uint32_t aseq_1_reg [ 16 ] ; t#uint32_t aseq_2_reg [ 16 ] ; t#uint32_t aseq_3_reg [ 16 ] ; t#uint32_t cmd_dma_reg [ 64 ] ; t#uint32_t req0_dma_reg [ 15 ] ; t#uint32_t resp0_dma_reg [ 15 ] ; t#uint32_t req1_dma_reg [ 15 ] ; t#uint32_t xmt0_dma_reg [ 32 ] ; t#uint32_t xmt1_dma_reg [ 32 ] ; t#uint32_t xmt2_dma_reg [ 32 ] ; t#uint32_t xmt3_dma_reg [ 32 ] ; t#uint32_t xmt4_dma_reg [ 32 ] ; t#uint32_t xmt_data_dma_reg [ 16 ] ; t#uint32_t rcvt0_data_dma_reg [ 32 ] ; t#uint32_t rcvt1_data_dma_reg [ 32 ] ; t#uint32_t risc_gp_reg [ 128 ] ; t#uint32_t lmc_reg [ 128 ] ; t#uint32_t fpm_hdw_reg [ 256 ] ; t#uint32_t rq0_array_reg [ 256 ] ; t#uint32_t rq1_array_reg [ 256 ] ; t#uint32_t rp0_array_reg [ 256 ] ; t#uint32_t rp1_array_reg [ 256 ] ; t#uint32_t queue_control_reg [ 16 ] ; t#uint32_t fb_hdw_reg [ 432 ] ; t#uint32_t at0_array_reg [ 128 ] ; t#uint32_t code_ram [ 0x2400 ] ; t#uint32_t ext_mem [ 1 ] ; } 
s#qla2xxx_fw_dump struct qla2xxx_fw_dump { t#uint8_t signature [ 4 ] ; t#uint32_t version ; t#uint32_t fw_major_version ; t#uint32_t fw_minor_version ; t#uint32_t fw_subminor_version ; t#uint32_t fw_attributes ; t#uint32_t vendor ; t#uint32_t device ; t#uint32_t subsystem_vendor ; t#uint32_t subsystem_device ; t#uint32_t fixed_size ; t#uint32_t mem_size ; t#uint32_t req_q_size ; t#uint32_t rsp_q_size ; t#uint32_t eft_size ; t#uint32_t eft_addr_l ; t#uint32_t eft_addr_h ; t#uint32_t header_size ; union { s#qla2100_fw_dump isp21 ; s#qla2300_fw_dump isp23 ; s#qla24xx_fw_dump isp24 ; s#qla25xx_fw_dump isp25 ; s#qla81xx_fw_dump isp81 ; s#qla83xx_fw_dump isp83 ; } isp ; } 
s#qla_chip_state_84xx struct qla_chip_state_84xx { s#list_head list ; s#kref kref ; void * bus ; t#spinlock_t access_lock ; s#mutex fw_update_mutex ; t#uint32_t fw_update ; t#uint32_t op_fw_version ; t#uint32_t op_fw_size ; t#uint32_t op_fw_seq_size ; t#uint32_t diag_fw_version ; t#uint32_t gold_fw_version ; } 
s#qla_statistics struct qla_statistics { t#uint32_t total_isp_aborts ; t#uint64_t input_bytes ; t#uint64_t output_bytes ; t#uint64_t input_requests ; t#uint64_t output_requests ; t#uint32_t control_requests ; t#uint64_t jiffies_at_last_reset ; } 
t#cmd_entry_t typedef struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t handle ; t#target_id_t target ; t#uint16_t lun ; t#uint16_t control_flags ; t#uint16_t reserved_1 ; t#uint16_t timeout ; t#uint16_t dseg_count ; t#uint8_t scsi_cdb [ 16 ] ; t#uint32_t byte_count ; t#uint32_t dseg_0_address ; t#uint32_t dseg_0_length ; t#uint32_t dseg_1_address ; t#uint32_t dseg_1_length ; t#uint32_t dseg_2_address ; t#uint32_t dseg_2_length ; } cmd_entry_t 
s#isp_operations struct isp_operations { int ( * pci_config ) ( s#scsi_qla_host * ) ; void ( * reset_chip ) ( s#scsi_qla_host * ) ; int ( * chip_diag ) ( s#scsi_qla_host * ) ; void ( * config_rings ) ( s#scsi_qla_host * ) ; void ( * reset_adapter ) ( s#scsi_qla_host * ) ; int ( * nvram_config ) ( s#scsi_qla_host * ) ; void ( * update_fw_options ) ( s#scsi_qla_host * ) ; int ( * load_risc ) ( s#scsi_qla_host * , t#uint32_t * ) ; char * ( * pci_info_str ) ( s#scsi_qla_host * , char * ) ; char * ( * fw_version_str ) ( s#scsi_qla_host * , char * , t#size_t ) ; t#irq_handler_t intr_handler ; void ( * enable_intrs ) ( s#qla_hw_data * ) ; void ( * disable_intrs ) ( s#qla_hw_data * ) ; int ( * abort_command ) ( t#srb_t * ) ; int ( * target_reset ) ( s#fc_port * , unsigned int , int ) ; int ( * lun_reset ) ( s#fc_port * , unsigned int , int ) ; int ( * fabric_login ) ( s#scsi_qla_host * , t#uint16_t , t#uint8_t , t#uint8_t , t#uint8_t , t#uint16_t * , t#uint8_t ) ; int ( * fabric_logout ) ( s#scsi_qla_host * , t#uint16_t , t#uint8_t , t#uint8_t , t#uint8_t ) ; t#uint16_t ( * calc_req_entries ) ( t#uint16_t ) ; void ( * build_iocbs ) ( t#srb_t * , t#cmd_entry_t * , t#uint16_t ) ; void * ( * prep_ms_iocb ) ( s#scsi_qla_host * , t#uint32_t , t#uint32_t ) ; void * ( * prep_ms_fdmi_iocb ) ( s#scsi_qla_host * , t#uint32_t , t#uint32_t ) ; t#uint8_t * ( * read_nvram ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * write_nvram ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; void ( * fw_dump ) ( s#scsi_qla_host * , int ) ; int ( * beacon_on ) ( s#scsi_qla_host * ) ; int ( * beacon_off ) ( s#scsi_qla_host * ) ; void ( * beacon_blink ) ( s#scsi_qla_host * ) ; t#uint8_t * ( * read_optrom ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * write_optrom ) ( s#scsi_qla_host * , t#uint8_t * , t#uint32_t , t#uint32_t ) ; int ( * get_flash_version ) ( s#scsi_qla_host * , void * ) ; int ( * start_scsi ) ( t#srb_t * ) ; int ( * abort_isp ) ( s#scsi_qla_host * ) ; int ( * iospace_config ) ( s#qla_hw_data * ) ; int ( * initialize_adapter ) ( s#scsi_qla_host * ) ; } 
s#qlfc_fw struct qlfc_fw { void * fw_buf ; t#dma_addr_t fw_dma ; t#uint32_t len ; } 
s#qla_fcp_prio_entry struct qla_fcp_prio_entry { t#uint16_t flags ; t#uint8_t tag ; t#uint8_t reserved ; t#uint32_t src_pid ; t#uint32_t dst_pid ; t#uint16_t lun_beg ; t#uint16_t lun_end ; t#uint8_t src_wwpn [ 8 ] ; t#uint8_t dst_wwpn [ 8 ] ; } 
s#qla_fcp_prio_cfg struct qla_fcp_prio_cfg { t#uint8_t signature [ 4 ] ; t#uint16_t version ; t#uint16_t length ; t#uint16_t checksum ; t#uint16_t num_entries ; t#uint16_t size_of_entry ; t#uint8_t attributes ; t#uint8_t reserved ; s#qla_fcp_prio_entry entry [ 1 ] ; } 
s#fw_blob struct fw_blob { char * name ; t#uint32_t segs [ 4 ] ; const s#firmware * fw ; } 
s#qla82xx_legacy_intr_set struct qla82xx_legacy_intr_set { t#uint32_t int_vec_bit ; t#uint32_t tgt_status_reg ; t#uint32_t tgt_mask_reg ; t#uint32_t pci_int_reg ; } 
s#mr_data_fx00 struct mr_data_fx00 { t#uint8_t symbolic_name [ 64 ] ; t#uint8_t serial_num [ 32 ] ; t#uint8_t hw_version [ 16 ] ; t#uint8_t fw_version [ 16 ] ; t#uint8_t uboot_version [ 16 ] ; t#uint8_t fru_serial_num [ 32 ] ; t#fc_port_t fcport ; t#uint8_t fw_hbt_en ; t#uint8_t fw_hbt_cnt ; t#uint8_t fw_hbt_miss_cnt ; t#uint32_t old_fw_hbt_cnt ; t#uint16_t fw_reset_timer_tick ; t#uint8_t fw_reset_timer_exp ; t#uint16_t fw_critemp_timer_tick ; t#uint32_t old_aenmbx0_state ; t#uint32_t critical_temperature ; t#bool extended_io_enabled ; t#bool host_info_resend ; t#uint8_t hinfo_resend_timer_tick ; } 
s#atio struct atio { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t data [ 58 ] ; t#uint32_t signature ; } 
s#imm_ntfy_from_isp struct imm_ntfy_from_isp { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; union { struct { t#uint32_t sys_define_2 ; t#target_id_t target ; t#uint16_t lun ; t#uint8_t target_id ; t#uint8_t reserved_1 ; t#uint16_t status_modifier ; t#uint16_t status ; t#uint16_t task_flags ; t#uint16_t seq_id ; t#uint16_t srr_rx_id ; t#uint32_t srr_rel_offs ; t#uint16_t srr_ui ; t#uint16_t srr_ox_id ; t#uint8_t reserved_2 [ 28 ] ; } isp2x ; struct { t#uint32_t reserved ; t#uint16_t nport_handle ; t#uint16_t reserved_2 ; t#uint16_t flags ; t#uint16_t srr_rx_id ; t#uint16_t status ; t#uint8_t status_subcode ; t#uint8_t fw_handle ; t#uint32_t exchange_address ; t#uint32_t srr_rel_offs ; t#uint16_t srr_ui ; t#uint16_t srr_ox_id ; t#uint8_t reserved_4 [ 19 ] ; t#uint8_t vp_index ; t#uint32_t reserved_5 ; t#uint8_t port_id [ 3 ] ; t#uint8_t reserved_6 ; } isp24 ; } u ; t#uint16_t reserved_7 ; t#uint16_t ox_id ; } 
s#qla_tgt struct qla_tgt { s#scsi_qla_host * vha ; s#qla_hw_data * ha ; int irq_cmd_count ; int datasegs_per_cmd , datasegs_per_cont , sg_tablesize ; unsigned int tgt_enable_64bit_addr : 1 ; unsigned int link_reinit_iocb_pending : 1 ; int tgt_stop ; int tgt_stopped ; int sess_count ; s#list_head sess_list ; s#list_head del_sess_list ; s#delayed_work sess_del_work ; t#spinlock_t sess_work_lock ; s#list_head sess_works_list ; s#work_struct sess_work ; s#imm_ntfy_from_isp link_reinit_iocb ; t#wait_queue_head_t waitQ ; int notify_ack_expected ; int abts_resp_expected ; int modify_lun_expected ; int ctio_srr_id ; int imm_srr_id ; t#spinlock_t srr_lock ; s#list_head srr_ctio_list ; s#list_head srr_imm_list ; s#work_struct srr_work ; t#atomic_t tgt_global_resets_count ; s#list_head tgt_list_entry ; } 
s#fcp_hdr struct fcp_hdr { t#uint8_t r_ctl ; t#uint8_t d_id [ 3 ] ; t#uint8_t cs_ctl ; t#uint8_t s_id [ 3 ] ; t#uint8_t type ; t#uint8_t f_ctl [ 3 ] ; t#uint8_t seq_id ; t#uint8_t df_ctl ; t#uint16_t seq_cnt ; t#uint16_t ox_id ; t#uint16_t rx_id ; t#uint32_t parameter ; } 
s#atio7_fcp_cmnd struct atio7_fcp_cmnd { t#uint64_t lun ; t#uint8_t cmnd_ref ; t#uint8_t task_attr : 3 ; t#uint8_t reserved : 5 ; t#uint8_t task_mgmt_flags ; t#uint8_t wrdata : 1 ; t#uint8_t rddata : 1 ; t#uint8_t add_cdb_len : 6 ; t#uint8_t cdb [ 16 ] ; t#uint8_t add_cdb [ 4 ] ; } 
s#atio_from_isp struct atio_from_isp { union { struct { t#uint16_t entry_hdr ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint32_t sys_define_2 ; t#target_id_t target ; t#uint16_t rx_id ; t#uint16_t flags ; t#uint16_t status ; t#uint8_t command_ref ; t#uint8_t task_codes ; t#uint8_t task_flags ; t#uint8_t execution_codes ; t#uint8_t cdb [ 16 ] ; t#uint32_t data_length ; t#uint16_t lun ; t#uint8_t initiator_port_name [ 8 ] ; t#uint16_t reserved_32 [ 6 ] ; t#uint16_t ox_id ; } isp2x ; struct { t#uint16_t entry_hdr ; t#uint8_t fcp_cmnd_len_low ; t#uint8_t fcp_cmnd_len_high : 4 ; t#uint8_t attr : 4 ; t#uint32_t exchange_addr ; s#fcp_hdr fcp_hdr ; s#atio7_fcp_cmnd fcp_cmnd ; } isp24 ; struct { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t data [ 58 ] ; t#uint32_t signature ; } raw ; } u ; } 
s#qla_tgt_cmd struct qla_tgt_cmd { s#qla_tgt_sess * sess ; int state ; s#se_cmd se_cmd ; s#work_struct free_work ; s#work_struct work ; unsigned char sense_buffer [ 96 ] ; unsigned int conf_compl_supported : 1 ; unsigned int sg_mapped : 1 ; unsigned int free_sg : 1 ; unsigned int aborted : 1 ; unsigned int write_data_transferred : 1 ; s#scatterlist * sg ; int sg_cnt ; int bufflen ; int offset ; t#uint32_t tag ; t#uint32_t unpacked_lun ; e#dma_data_direction dma_data_direction ; t#uint16_t loop_id ; s#qla_tgt * tgt ; s#scsi_qla_host * vha ; s#atio_from_isp atio ; } 
s#fcp_hdr_le struct fcp_hdr_le { t#uint8_t d_id [ 3 ] ; t#uint8_t r_ctl ; t#uint8_t s_id [ 3 ] ; t#uint8_t cs_ctl ; t#uint8_t f_ctl [ 3 ] ; t#uint8_t type ; t#uint16_t seq_cnt ; t#uint8_t df_ctl ; t#uint8_t seq_id ; t#uint16_t rx_id ; t#uint16_t ox_id ; t#uint32_t parameter ; } 
s#abts_recv_from_24xx struct abts_recv_from_24xx { t#uint8_t entry_type ; t#uint8_t entry_count ; t#uint8_t sys_define ; t#uint8_t entry_status ; t#uint8_t reserved_1 [ 6 ] ; t#uint16_t nport_handle ; t#uint8_t reserved_2 [ 2 ] ; t#uint8_t vp_index ; t#uint8_t reserved_3 : 4 ; t#uint8_t sof_type : 4 ; t#uint32_t exchange_address ; s#fcp_hdr_le fcp_hdr_le ; t#uint8_t reserved_4 [ 16 ] ; t#uint32_t exchange_addr_to_abort ; } 
s#qla_tgt_mgmt_cmd struct qla_tgt_mgmt_cmd { t#uint8_t tmr_func ; t#uint8_t fc_tm_rsp ; s#qla_tgt_sess * sess ; s#se_cmd se_cmd ; s#work_struct free_work ; unsigned int flags ; union { s#atio_from_isp atio ; s#imm_ntfy_from_isp imm_ntfy ; s#abts_recv_from_24xx abts ; } __attribute__ ( ( packed ) ) orig_iocb ; } 
s#qla_tgt_func_tmpl struct qla_tgt_func_tmpl { int ( * handle_cmd ) ( s#scsi_qla_host * , s#qla_tgt_cmd * , unsigned char * , t#uint32_t , int , int , int ) ; void ( * handle_data ) ( s#qla_tgt_cmd * ) ; int ( * handle_tmr ) ( s#qla_tgt_mgmt_cmd * , t#uint32_t , t#uint8_t , t#uint32_t ) ; void ( * free_cmd ) ( s#qla_tgt_cmd * ) ; void ( * free_mcmd ) ( s#qla_tgt_mgmt_cmd * ) ; void ( * free_session ) ( s#qla_tgt_sess * ) ; int ( * check_initiator_node_acl ) ( s#scsi_qla_host * , unsigned char * , void * , t#uint8_t * , t#uint16_t ) ; s#qla_tgt_sess * ( * find_sess_by_loop_id ) ( s#scsi_qla_host * , const t#uint16_t ) ; s#qla_tgt_sess * ( * find_sess_by_s_id ) ( s#scsi_qla_host * , const t#uint8_t * ) ; void ( * clear_nacl_from_fcport_map ) ( s#qla_tgt_sess * ) ; void ( * put_sess ) ( s#qla_tgt_sess * ) ; void ( * shutdown_sess ) ( s#qla_tgt_sess * ) ; } 
t#scsi_qla_host_t typedef s#scsi_qla_host scsi_qla_host_t 
s#qla_tgt_vp_map struct qla_tgt_vp_map { t#uint8_t idx ; t#scsi_qla_host_t * vha ; } 
s#qlt_hw_data struct qlt_hw_data { t#uint32_t enable_class_2 : 1 ; t#uint32_t enable_explicit_conf : 1 ; t#uint32_t ini_mode_force_reverse : 1 ; t#uint32_t node_name_set : 1 ; t#dma_addr_t atio_dma ; s#atio * atio_ring ; s#atio * atio_ring_ptr ; t#uint16_t atio_ring_index ; t#uint16_t atio_q_length ; t#uint32_t * atio_q_in ; t#uint32_t * atio_q_out ; void * target_lport_ptr ; s#qla_tgt_func_tmpl * tgt_ops ; s#qla_tgt * qla_tgt ; s#qla_tgt_cmd * cmds [ 1024 ] ; t#uint16_t current_handle ; s#qla_tgt_vp_map * tgt_vp_map ; s#mutex tgt_mutex ; s#mutex tgt_host_action_mutex ; int saved_set ; t#uint16_t saved_exchange_count ; t#uint32_t saved_firmware_options_1 ; t#uint32_t saved_firmware_options_2 ; t#uint32_t saved_firmware_options_3 ; t#uint8_t saved_firmware_options [ 2 ] ; t#uint8_t saved_add_firmware_options [ 2 ] ; t#uint8_t tgt_node_name [ 8 ] ; } 
s#qla_hw_data struct qla_hw_data { s#pci_dev * pdev ; t#mempool_t * srb_mempool ; volatile struct { t#uint32_t mbox_int : 1 ; t#uint32_t mbox_busy : 1 ; t#uint32_t disable_risc_code_load : 1 ; t#uint32_t enable_64bit_addressing : 1 ; t#uint32_t enable_lip_reset : 1 ; t#uint32_t enable_target_reset : 1 ; t#uint32_t enable_lip_full_login : 1 ; t#uint32_t enable_led_scheme : 1 ; t#uint32_t msi_enabled : 1 ; t#uint32_t msix_enabled : 1 ; t#uint32_t disable_serdes : 1 ; t#uint32_t gpsc_supported : 1 ; t#uint32_t npiv_supported : 1 ; t#uint32_t E#pci_channel_io_perm_failure : 1 ; t#uint32_t fce_enabled : 1 ; t#uint32_t fac_supported : 1 ; t#uint32_t chip_reset_done : 1 ; t#uint32_t running_gold_fw : 1 ; t#uint32_t eeh_busy : 1 ; t#uint32_t cpu_affinity_enabled : 1 ; t#uint32_t disable_msix_handshake : 1 ; t#uint32_t fcp_prio_enabled : 1 ; t#uint32_t isp82xx_fw_hung : 1 ; t#uint32_t nic_core_hung : 1 ; t#uint32_t quiesce_owner : 1 ; t#uint32_t nic_core_reset_hdlr_active : 1 ; t#uint32_t nic_core_reset_owner : 1 ; t#uint32_t isp82xx_no_md_cap : 1 ; t#uint32_t host_shutting_down : 1 ; t#uint32_t idc_compl_status : 1 ; t#uint32_t mr_reset_hdlr_active : 1 ; t#uint32_t mr_intr_valid : 1 ; t#uint32_t fawwpn_enabled : 1 ; } flags ; t#spinlock_t hardware_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int bars ; int mem_only ; t#device_reg_t * iobase ; t#resource_size_t pio_address ; t#dma_addr_t bar0_hdl ; void * cregbase ; t#dma_addr_t bar2_hdl ; t#uint32_t rqstq_intr_code ; t#uint32_t mbx_intr_code ; t#uint32_t req_que_len ; t#uint32_t rsp_que_len ; t#uint32_t req_que_off ; t#uint32_t rsp_que_off ; t#device_reg_t * mqiobase ; t#device_reg_t * msixbase ; t#uint16_t msix_count ; t#uint8_t mqenable ; s#req_que * * req_q_map ; s#rsp_que * * rsp_q_map ; unsigned long req_qid_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; unsigned long rsp_qid_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; t#uint8_t max_req_queues ; t#uint8_t max_rsp_queues ; s#qla_npiv_entry * npiv_info ; t#uint16_t nvram_npiv_size ; t#uint16_t switch_cap ; t#uint8_t port_no ; t#uint8_t loop_down_abort_time ; t#atomic_t loop_down_timer ; t#uint8_t link_down_timeout ; t#uint16_t max_loop_id ; t#uint16_t max_fibre_devices ; t#uint16_t fb_rev ; t#uint16_t min_external_loopid ; t#uint16_t link_data_rate ; t#uint8_t current_topology ; t#uint8_t prev_topology ; t#uint8_t operating_mode ; t#uint8_t interrupts_on ; t#uint32_t isp_abort_cnt ; t#uint32_t device_type ; t#uint8_t serial0 ; t#uint8_t serial1 ; t#uint8_t serial2 ; t#uint16_t nvram_size ; t#uint16_t nvram_base ; void * nvram ; t#uint16_t vpd_size ; t#uint16_t vpd_base ; void * vpd ; t#uint16_t loop_reset_delay ; t#uint8_t retry_count ; t#uint8_t login_timeout ; t#uint16_t r_a_tov ; int port_down_retry_count ; t#uint8_t mbx_count ; t#uint8_t aen_mbx_count ; t#uint32_t login_retry_count ; t#ms_iocb_entry_t * ms_iocb ; t#dma_addr_t ms_iocb_dma ; s#ct_sns_pkt * ct_sns ; t#dma_addr_t ct_sns_dma ; s#sns_cmd_pkt * sns_cmd ; t#dma_addr_t sns_cmd_dma ; void * sfp_data ; t#dma_addr_t sfp_data_dma ; void * xgmac_data ; t#dma_addr_t xgmac_data_dma ; void * dcbx_tlv ; t#dma_addr_t dcbx_tlv_dma ; s#task_struct * dpc_thread ; t#uint8_t dpc_active ; t#dma_addr_t gid_list_dma ; s#gid_list_info * gid_list ; int gid_list_info_size ; s#dma_pool * s_dma_pool ; t#dma_addr_t init_cb_dma ; t#init_cb_t * init_cb ; int init_cb_size ; t#dma_addr_t ex_init_cb_dma ; s#ex_init_cb_81xx * ex_init_cb ; void * async_pd ; t#dma_addr_t async_pd_dma ; void * swl ; t#uint16_t mailbox_out [ 32 ] ; t#uint32_t mailbox_out32 [ 32 ] ; t#uint32_t aenmb [ 8 ] ; t#mbx_cmd_t * mcp ; s#mbx_cmd_32 * mcp32 ; unsigned long mbx_cmd_flags ; s#mutex vport_lock ; t#spinlock_t vport_slock ; s#completion mbx_cmd_comp ; s#completion mbx_intr_comp ; s#completion dcbx_comp ; s#completion lb_portup_comp ; int notify_dcbx_comp ; int notify_lb_portup_comp ; s#mutex selflogin_lock ; t#uint16_t fw_major_version ; t#uint16_t fw_minor_version ; t#uint16_t fw_subminor_version ; t#uint16_t fw_attributes ; t#uint16_t fw_attributes_h ; t#uint16_t fw_attributes_ext [ 2 ] ; t#uint32_t fw_memory_size ; t#uint32_t fw_transfer_size ; t#uint32_t fw_srisc_address ; t#uint16_t fw_xcb_count ; t#uint16_t fw_iocb_count ; t#uint32_t fw_shared_ram_start ; t#uint32_t fw_shared_ram_end ; t#uint16_t fw_options [ 16 ] ; t#uint8_t fw_seriallink_options [ 4 ] ; t#uint16_t fw_seriallink_options24 [ 4 ] ; t#uint8_t mpi_version [ 3 ] ; t#uint32_t mpi_capabilities ; t#uint8_t phy_version [ 3 ] ; void * fw_dump_template ; t#uint32_t fw_dump_template_len ; s#qla2xxx_fw_dump * fw_dump ; t#uint32_t fw_dump_len ; int fw_dumped ; unsigned long fw_dump_cap_flags ; int fw_dump_reading ; int prev_minidump_failed ; t#dma_addr_t eft_dma ; void * eft ; t#dma_addr_t mctp_dump_dma ; void * mctp_dump ; int mctp_dumped ; int mctp_dump_reading ; t#uint32_t chain_offset ; s#dentry * dfs_dir ; s#dentry * dfs_fce ; t#dma_addr_t fce_dma ; void * fce ; t#uint32_t fce_bufs ; t#uint16_t fce_mb [ 8 ] ; t#uint64_t fce_wr , fce_rd ; s#mutex fce_mutex ; t#uint32_t pci_attr ; t#uint16_t chip_revision ; t#uint16_t product_id [ 4 ] ; t#uint8_t model_number [ 16 + 1 ] ; char model_desc [ 80 ] ; t#uint8_t adapter_id [ 16 + 1 ] ; char * optrom_buffer ; t#uint32_t optrom_size ; int optrom_state ; t#uint32_t optrom_region_start ; t#uint32_t optrom_region_size ; s#mutex optrom_mutex ; t#uint8_t bios_revision [ 2 ] ; t#uint8_t efi_revision [ 2 ] ; t#uint8_t fcode_revision [ 16 ] ; t#uint32_t fw_revision [ 4 ] ; t#uint32_t gold_fw_version [ 4 ] ; t#uint32_t flash_conf_off ; t#uint32_t flash_data_off ; t#uint32_t nvram_conf_off ; t#uint32_t nvram_data_off ; t#uint32_t fdt_wrt_disable ; t#uint32_t fdt_wrt_enable ; t#uint32_t fdt_erase_cmd ; t#uint32_t fdt_block_size ; t#uint32_t fdt_unprotect_sec_cmd ; t#uint32_t fdt_protect_sec_cmd ; t#uint32_t fdt_wrt_sts_reg_cmd ; t#uint32_t flt_region_flt ; t#uint32_t flt_region_fdt ; t#uint32_t flt_region_boot ; t#uint32_t flt_region_fw ; t#uint32_t flt_region_vpd_nvram ; t#uint32_t flt_region_vpd ; t#uint32_t flt_region_nvram ; t#uint32_t flt_region_npiv_conf ; t#uint32_t flt_region_gold_fw ; t#uint32_t flt_region_fcp_prio ; t#uint32_t flt_region_bootload ; t#uint16_t beacon_blink_led ; t#uint8_t beacon_color_state ; t#uint16_t zio_mode ; t#uint16_t zio_timer ; s#qla_msix_entry * msix_entries ; s#list_head vp_list ; unsigned long vp_idx_map [ ( 256 / 8 ) / sizeof ( unsigned long ) ] ; t#uint16_t num_vhosts ; t#uint16_t num_vsans ; t#uint16_t max_npiv_vports ; int cur_vport_count ; s#qla_chip_state_84xx * cs84xx ; s#qla_statistics qla_stats ; s#isp_operations * isp_ops ; s#workqueue_struct * wq ; s#qlfc_fw fw_buf ; s#qla_fcp_prio_cfg * fcp_prio_cfg ; s#dma_pool * dl_dma_pool ; s#dma_pool * fcp_cmnd_dma_pool ; t#mempool_t * ctx_mempool ; unsigned long nx_pcibase ; t#uint8_t * nxdb_rd_ptr ; unsigned long nxdb_wr_ptr ; t#uint32_t crb_win ; t#uint32_t curr_window ; t#uint32_t ddr_mn_window ; unsigned long mn_win_crb ; unsigned long ms_win_crb ; int qdr_sn_window ; t#uint32_t fcoe_dev_init_timeout ; t#uint32_t fcoe_reset_timeout ; t#rwlock_t hw_lock ; t#uint16_t portnum ; int link_width ; s#fw_blob * hablob ; s#qla82xx_legacy_intr_set nx_legacy_intr ; t#uint16_t gbl_dsd_inuse ; t#uint16_t gbl_dsd_avail ; s#list_head gbl_dsd_list ; t#uint8_t fw_type ; t#__le32 file_prd_off ; t#uint32_t md_template_size ; void * md_tmplt_hdr ; t#dma_addr_t md_tmplt_hdr_dma ; void * md_dump ; t#uint32_t md_dump_size ; void * loop_id_map ; t#uint32_t idc_audit_ts ; t#uint32_t idc_extend_tmo ; s#workqueue_struct * dpc_lp_wq ; s#work_struct idc_aen ; s#workqueue_struct * dpc_hp_wq ; s#work_struct nic_core_reset ; s#work_struct idc_state_handler ; s#work_struct nic_core_unrecoverable ; s#work_struct board_disable ; s#mr_data_fx00 mr ; s#qlt_hw_data tgt ; int allow_cna_fw_dump ; } 
s#bidi_statistics struct bidi_statistics { unsigned long long io_count ; unsigned long long transfer_bytes ; } 
s#qla8044_reset_template_hdr struct qla8044_reset_template_hdr { t#uint16_t version ; t#uint16_t signature ; t#uint16_t size ; t#uint16_t entries ; t#uint16_t hdr_size ; t#uint16_t checksum ; t#uint16_t init_seq_offset ; t#uint16_t start_seq_offset ; } 
s#qla8044_reset_template struct qla8044_reset_template { int seq_index ; int seq_error ; int array_index ; t#uint32_t array [ 16 ] ; t#uint8_t * buff ; t#uint8_t * stop_offset ; t#uint8_t * start_offset ; t#uint8_t * init_offset ; s#qla8044_reset_template_hdr * hdr ; t#uint8_t seq_end ; t#uint8_t template_end ; } 
s#scsi_qla_host struct scsi_qla_host { s#list_head list ; s#list_head vp_fcports ; s#list_head work_list ; t#spinlock_t work_lock ; s#Scsi_Host * host ; unsigned long host_no ; t#uint8_t host_str [ 16 ] ; volatile struct { t#uint32_t init_done : 1 ; t#uint32_t online : 1 ; t#uint32_t reset_active : 1 ; t#uint32_t management_server_logged_in : 1 ; t#uint32_t process_response_queue : 1 ; t#uint32_t difdix_supported : 1 ; t#uint32_t delete_progress : 1 ; t#uint32_t fw_tgt_reported : 1 ; } flags ; t#atomic_t loop_state ; unsigned long dpc_flags ; unsigned long pci_flags ; t#uint32_t device_flags ; t#uint16_t loop_id ; t#uint16_t self_login_loop_id ; t#fc_port_t bidir_fcport ; t#port_id_t d_id ; t#uint8_t marker_needed ; t#uint16_t mgmt_svr_loop_id ; t#uint8_t loop_down_abort_time ; t#atomic_t loop_down_timer ; t#uint8_t link_down_timeout ; t#uint32_t timer_active ; s#timer_list timer ; t#uint8_t node_name [ 8 ] ; t#uint8_t port_name [ 8 ] ; t#uint8_t fabric_node_name [ 8 ] ; t#uint16_t fcoe_vlan_id ; t#uint16_t fcoe_fcf_idx ; t#uint8_t fcoe_vn_port_mac [ 6 ] ; t#uint32_t vp_abort_cnt ; s#fc_vport * fc_vport ; t#uint16_t vp_idx ; unsigned long vp_flags ; t#atomic_t vp_state ; t#uint16_t vp_err_state ; t#uint16_t vp_prev_err_state ; s#qla_hw_data * hw ; s#req_que * req ; int fw_heartbeat_counter ; int seconds_since_last_heartbeat ; s#fc_host_statistics fc_host_stat ; s#qla_statistics qla_stats ; s#bidi_statistics bidi_stats ; t#atomic_t vref_count ; s#qla8044_reset_template reset_tmplt ; } 
s#qla_tgt_sess struct qla_tgt_sess { t#uint16_t loop_id ; t#port_id_t s_id ; unsigned int conf_compl_supported : 1 ; unsigned int deleted : 1 ; unsigned int local : 1 ; s#se_session * se_sess ; s#scsi_qla_host * vha ; s#qla_tgt * tgt ; s#list_head sess_list_entry ; unsigned long expires ; s#list_head del_list_entry ; t#uint8_t port_name [ 8 ] ; s#work_struct free_work ; } 
qlt_unreg_sess extern void qlt_unreg_sess ( s#qla_tgt_sess * ) 
qlt_stop_phase1 extern void qlt_stop_phase1 ( s#qla_tgt * ) 
qlt_stop_phase2 extern void qlt_stop_phase2 ( s#qla_tgt * ) 
qlt_free_mcmd extern void qlt_free_mcmd ( s#qla_tgt_mgmt_cmd * ) 
qlt_xmit_tm_rsp extern void qlt_xmit_tm_rsp ( s#qla_tgt_mgmt_cmd * ) 
qlt_xmit_response extern int qlt_xmit_response ( s#qla_tgt_cmd * , int , t#uint8_t ) 
qlt_rdy_to_xfer extern int qlt_rdy_to_xfer ( s#qla_tgt_cmd * ) 
qlt_free_cmd extern void qlt_free_cmd ( s#qla_tgt_cmd * ) 
qlt_lport_register extern int qlt_lport_register ( s#qla_tgt_func_tmpl * , t#u64 , int ( * ) ( s#scsi_qla_host * ) , void * ) 
qlt_lport_deregister extern void qlt_lport_deregister ( s#scsi_qla_host * ) 
qlt_enable_vha extern void qlt_enable_vha ( s#scsi_qla_host * ) 

/* drivers/scsi/raid_class.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#raid_template struct raid_template { s#transport_container raid_attrs ; } 
raid_component_add int raid_component_add ( s#raid_template * , s#device * , s#device * ) 
s#raid_function_template struct raid_function_template { void * cookie ; int ( * is_raid ) ( s#device * ) ; void ( * get_resync ) ( s#device * ) ; void ( * get_state ) ( s#device * ) ; } 
raid_class_attach s#raid_template * raid_class_attach ( s#raid_function_template * ) 
raid_class_release void raid_class_release ( s#raid_template * ) 

/* drivers/scsi/scsi.o */
scsi_logging_level extern unsigned int scsi_logging_level 
s#async_domain struct async_domain { s#list_head node ; s#list_head domain ; int count ; unsigned registered : 1 ; } 
scsi_sd_probe_domain extern s#async_domain scsi_sd_probe_domain 
scsi_device_type extern const char * scsi_device_type ( unsigned ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##scsi_transport_template
s##workqueue_struct
__scsi_get_command extern s#scsi_cmnd * __scsi_get_command ( s#Scsi_Host * , t#gfp_t ) 
scsi_get_command extern s#scsi_cmnd * scsi_get_command ( s#scsi_device * , t#gfp_t ) 
__scsi_put_command extern void __scsi_put_command ( s#Scsi_Host * , s#scsi_cmnd * , s#device * ) 
scsi_put_command extern void scsi_put_command ( s#scsi_cmnd * ) 
scsi_allocate_command s#scsi_cmnd * scsi_allocate_command ( t#gfp_t ) 
scsi_free_command void scsi_free_command ( t#gfp_t , s#scsi_cmnd * ) 
scsi_cmd_get_serial extern void scsi_cmd_get_serial ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_finish_command extern void scsi_finish_command ( s#scsi_cmnd * ) 
scsi_adjust_queue_depth extern void scsi_adjust_queue_depth ( s#scsi_device * , int , int ) 
scsi_track_queue_full extern int scsi_track_queue_full ( s#scsi_device * , int ) 
scsi_get_vpd_page extern int scsi_get_vpd_page ( s#scsi_device * , t#u8 , unsigned char * , int ) 
scsi_device_get extern int scsi_device_get ( s#scsi_device * ) 
scsi_device_put extern void scsi_device_put ( s#scsi_device * ) 
__scsi_iterate_devices extern s#scsi_device * __scsi_iterate_devices ( s#Scsi_Host * , s#scsi_device * ) 
starget_for_each_device extern void starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__starget_for_each_device extern void __starget_for_each_device ( s#scsi_target * , void * , void ( * ) ( s#scsi_device * , void * ) ) 
__scsi_device_lookup_by_target extern s#scsi_device * __scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
scsi_device_lookup_by_target extern s#scsi_device * scsi_device_lookup_by_target ( s#scsi_target * , t#uint ) 
__scsi_device_lookup extern s#scsi_device * __scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_device_lookup extern s#scsi_device * scsi_device_lookup ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 

/* drivers/scsi/scsi_devinfo.o */
scsi_dev_info_list_add_keyed extern int scsi_dev_info_list_add_keyed ( int , char * , char * , char * , int , int ) 
scsi_dev_info_list_del_keyed extern int scsi_dev_info_list_del_keyed ( char * , char * , int ) 
s##Scsi_Host
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##scsi_cmnd
s##scsi_sense_hdr
scsi_get_device_flags_keyed extern int scsi_get_device_flags_keyed ( s#scsi_device * , const unsigned char * , const unsigned char * , int ) 
scsi_dev_info_add_list extern int scsi_dev_info_add_list ( int , const char * ) 
scsi_dev_info_remove_list extern int scsi_dev_info_remove_list ( int ) 

/* drivers/scsi/scsi_error.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##workqueue_struct
scsi_schedule_eh void scsi_schedule_eh ( s#Scsi_Host * ) 
scsi_block_when_processing_errors extern int scsi_block_when_processing_errors ( s#scsi_device * ) 
s#scsi_eh_save struct scsi_eh_save { int result ; e#dma_data_direction data_direction ; unsigned underflow ; unsigned char cmd_len ; unsigned char prot_op ; unsigned char * cmnd ; s#scsi_data_buffer sdb ; s#request * next_rq ; unsigned char eh_cmnd [ 16 ] ; s#scatterlist sense_sgl ; } 
scsi_eh_prep_cmnd extern void scsi_eh_prep_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * , unsigned char * , int , unsigned ) 
scsi_eh_restore_cmnd extern void scsi_eh_restore_cmnd ( s#scsi_cmnd * , s#scsi_eh_save * ) 
scsi_eh_finish_cmd extern void scsi_eh_finish_cmd ( s#scsi_cmnd * , s#list_head * ) 
scsi_eh_get_sense int scsi_eh_get_sense ( s#list_head * , s#list_head * ) 
scsi_eh_ready_devs void scsi_eh_ready_devs ( s#Scsi_Host * , s#list_head * , s#list_head * ) 
scsi_eh_flush_done_q extern void scsi_eh_flush_done_q ( s#list_head * ) 
scsi_report_bus_reset extern void scsi_report_bus_reset ( s#Scsi_Host * , int ) 
scsi_report_device_reset extern void scsi_report_device_reset ( s#Scsi_Host * , int , int ) 
scsi_reset_provider extern int scsi_reset_provider ( s#scsi_device * , int ) 
scsi_normalize_sense extern int scsi_normalize_sense ( const t#u8 * , int , s#scsi_sense_hdr * ) 
scsi_command_normalize_sense extern int scsi_command_normalize_sense ( s#scsi_cmnd * , s#scsi_sense_hdr * ) 
scsi_sense_desc_find extern const t#u8 * scsi_sense_desc_find ( const t#u8 * , int , int ) 
scsi_get_sense_info_fld extern int scsi_get_sense_info_fld ( const t#u8 * , int , t#u64 * ) 
scsi_build_sense_buffer extern void scsi_build_sense_buffer ( int , t#u8 * , t#u8 , t#u8 , t#u8 ) 

/* drivers/scsi/scsi_ioctl.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_transport_template
s##workqueue_struct
scsi_set_medium_removal extern int scsi_set_medium_removal ( s#scsi_device * , char ) 
scsi_ioctl extern int scsi_ioctl ( s#scsi_device * , int , void * ) 
scsi_nonblockable_ioctl extern int scsi_nonblockable_ioctl ( s#scsi_device * , int , void * , int ) 

/* drivers/scsi/scsi_lib.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_transport_template
s##workqueue_struct
scsi_execute extern int scsi_execute ( s#scsi_device * , const unsigned char * , int , void * , unsigned , unsigned char * , int , int , int , int * ) 
scsi_execute_req extern int scsi_execute_req ( s#scsi_device * , const unsigned char * , int , void * , unsigned , s#scsi_sense_hdr * , int , int , int * ) 
scsi_release_buffers extern void scsi_release_buffers ( s#scsi_cmnd * ) 
scsi_init_io extern int scsi_init_io ( s#scsi_cmnd * , t#gfp_t ) 
scsi_setup_blk_pc_cmnd int scsi_setup_blk_pc_cmnd ( s#scsi_device * , s#request * ) 
scsi_setup_fs_cmnd int scsi_setup_fs_cmnd ( s#scsi_device * , s#request * ) 
scsi_prep_state_check int scsi_prep_state_check ( s#scsi_device * , s#request * ) 
scsi_prep_return int scsi_prep_return ( s#request_queue * , s#request * , int ) 
scsi_prep_fn int scsi_prep_fn ( s#request_queue * , s#request * ) 
scsi_device_from_queue extern s#scsi_device * scsi_device_from_queue ( s#request_queue * ) 
scsi_calculate_bounce_limit extern t#u64 scsi_calculate_bounce_limit ( s#Scsi_Host * ) 
__scsi_alloc_queue extern s#request_queue * __scsi_alloc_queue ( s#Scsi_Host * , void ( * ) ( s#request_queue * ) ) 
scsi_block_requests extern void scsi_block_requests ( s#Scsi_Host * ) 
scsi_unblock_requests extern void scsi_unblock_requests ( s#Scsi_Host * ) 
s#scsi_mode_data struct scsi_mode_data { t#__u32 length ; t#__u16 block_descriptor_length ; t#__u8 medium_type ; t#__u8 device_specific ; t#__u8 header_length ; t#__u8 longlba : 1 ; } 
scsi_mode_select extern int scsi_mode_select ( s#scsi_device * , int , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_mode_sense extern int scsi_mode_sense ( s#scsi_device * , int , int , unsigned char * , int , int , int , s#scsi_mode_data * , s#scsi_sense_hdr * ) 
scsi_test_unit_ready extern int scsi_test_unit_ready ( s#scsi_device * , int , int , s#scsi_sense_hdr * ) 
scsi_device_set_state extern int scsi_device_set_state ( s#scsi_device * , e#scsi_device_state ) 
e#scsi_device_event enum scsi_device_event { SDEV_EVT_MEDIA_CHANGE = 1 , SDEV_EVT_LAST = E#SDEV_EVT_MEDIA_CHANGE , SDEV_EVT_MAXBITS = E#SDEV_EVT_LAST + 1 } 
s#scsi_event struct scsi_event { e#scsi_device_event evt_type ; s#list_head node ; } 
sdev_evt_send extern void sdev_evt_send ( s#scsi_device * , s#scsi_event * ) 
sdev_evt_alloc extern s#scsi_event * sdev_evt_alloc ( e#scsi_device_event , t#gfp_t ) 
sdev_evt_send_simple extern void sdev_evt_send_simple ( s#scsi_device * , e#scsi_device_event , t#gfp_t ) 
scsi_device_quiesce extern int scsi_device_quiesce ( s#scsi_device * ) 
scsi_device_resume extern void scsi_device_resume ( s#scsi_device * ) 
scsi_target_quiesce extern void scsi_target_quiesce ( s#scsi_target * ) 
scsi_target_resume extern void scsi_target_resume ( s#scsi_target * ) 
scsi_internal_device_block extern int scsi_internal_device_block ( s#scsi_device * ) 
scsi_internal_device_unblock extern int scsi_internal_device_unblock ( s#scsi_device * , e#scsi_device_state ) 
scsi_target_block extern void scsi_target_block ( s#device * ) 
scsi_target_unblock extern void scsi_target_unblock ( s#device * , e#scsi_device_state ) 
scsi_kmap_atomic_sg extern void * scsi_kmap_atomic_sg ( s#scatterlist * , int , t#size_t * , t#size_t * ) 
scsi_kunmap_atomic_sg extern void scsi_kunmap_atomic_sg ( void * ) 

/* drivers/scsi/scsi_lib_dma.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
s##scsi_sense_hdr
scsi_dma_map extern int scsi_dma_map ( s#scsi_cmnd * ) 
scsi_dma_unmap extern void scsi_dma_unmap ( s#scsi_cmnd * ) 

/* drivers/scsi/scsi_netlink.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
scsi_nl_sock extern s#sock * scsi_nl_sock 
scsi_nl_add_transport int scsi_nl_add_transport ( t#u8 , int ( * ) ( s#sk_buff * ) , void ( * ) ( s#notifier_block * , unsigned long , void * ) ) 
scsi_nl_remove_transport void scsi_nl_remove_transport ( t#u8 ) 
s##scsi_host_cmd_pool
s##scsi_transport_template
s##workqueue_struct
s##scsi_cmnd
s##scsi_sense_hdr
scsi_nl_add_driver int scsi_nl_add_driver ( t#u64 , s#scsi_host_template * , int ( * ) ( s#Scsi_Host * , void * , t#u32 , t#u32 ) , void ( * ) ( s#notifier_block * , unsigned long , void * ) ) 
scsi_nl_remove_driver void scsi_nl_remove_driver ( t#u64 ) 
s#scsi_nl_hdr struct scsi_nl_hdr { t#uint8_t version ; t#uint8_t transport ; t#uint16_t magic ; t#uint16_t msgtype ; t#uint16_t msglen ; } 
scsi_nl_send_transport_msg void scsi_nl_send_transport_msg ( t#u32 , s#scsi_nl_hdr * ) 
scsi_nl_send_vendor_msg int scsi_nl_send_vendor_msg ( t#u32 , unsigned short , t#u64 , char * , t#u32 ) 

/* drivers/scsi/scsi_pm.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_cmnd
s##proc_dir_entry
s##scsi_transport_template
s##workqueue_struct
s##scsi_sense_hdr
scsi_autopm_get_device extern int scsi_autopm_get_device ( s#scsi_device * ) 
scsi_autopm_put_device extern void scsi_autopm_put_device ( s#scsi_device * ) 

/* drivers/scsi/scsi_scan.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
scsi_is_target_device extern int scsi_is_target_device ( const s#device * ) 
scsilun_to_int extern int scsilun_to_int ( s#scsi_lun * ) 
int_to_scsilun extern void int_to_scsilun ( unsigned int , s#scsi_lun * ) 
s##scsi_host_cmd_pool
s##proc_dir_entry
s##workqueue_struct
__scsi_add_device extern s#scsi_device * __scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint , void * ) 
scsi_add_device extern int scsi_add_device ( s#Scsi_Host * , t#uint , t#uint , t#uint ) 
scsi_rescan_device extern void scsi_rescan_device ( s#device * ) 
scsi_scan_target extern void scsi_scan_target ( s#device * , unsigned int , unsigned int , unsigned int , int ) 
scsi_scan_host extern void scsi_scan_host ( s#Scsi_Host * ) 
scsi_get_host_dev extern s#scsi_device * scsi_get_host_dev ( s#Scsi_Host * ) 
scsi_free_host_dev extern void scsi_free_host_dev ( s#scsi_device * ) 

/* drivers/scsi/scsi_sysfs.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##dma_coherent_mem
s##device_node
s##subsys_private
scsi_bus_type extern s#bus_type scsi_bus_type 
s##scsi_host_cmd_pool
s##proc_dir_entry
s##workqueue_struct
s##scsi_sense_hdr
scsi_remove_device extern void scsi_remove_device ( s#scsi_device * ) 
scsi_remove_target extern void scsi_remove_target ( s#device * ) 
scsi_register_driver extern int scsi_register_driver ( s#device_driver * ) 
scsi_register_interface extern int scsi_register_interface ( s#class_interface * ) 
scsi_is_sdev_device extern int scsi_is_sdev_device ( const s#device * ) 

/* drivers/scsi/scsi_tgt_lib.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##workqueue_struct
s##scsi_sense_hdr
scsi_host_get_command extern s#scsi_cmnd * scsi_host_get_command ( s#Scsi_Host * , e#dma_data_direction , t#gfp_t ) 
scsi_host_put_command extern void scsi_host_put_command ( s#Scsi_Host * , s#scsi_cmnd * ) 
scsi_tgt_alloc_queue extern int scsi_tgt_alloc_queue ( s#Scsi_Host * ) 
scsi_tgt_free_queue extern void scsi_tgt_free_queue ( s#Scsi_Host * ) 
scsi_tgt_cmd_to_host extern s#Scsi_Host * scsi_tgt_cmd_to_host ( s#scsi_cmnd * ) 
scsi_tgt_queue_command extern int scsi_tgt_queue_command ( s#scsi_cmnd * , t#u64 , s#scsi_lun * , t#u64 ) 
scsi_tgt_tsk_mgmt_request extern int scsi_tgt_tsk_mgmt_request ( s#Scsi_Host * , t#u64 , int , t#u64 , s#scsi_lun * , void * ) 
scsi_tgt_it_nexus_create extern int scsi_tgt_it_nexus_create ( s#Scsi_Host * , t#u64 , char * ) 
scsi_tgt_it_nexus_destroy extern int scsi_tgt_it_nexus_destroy ( s#Scsi_Host * , t#u64 ) 

/* drivers/scsi/scsi_transport_fc.o */
fc_get_event_number t#u32 fc_get_event_number ( void ) 
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
e#fc_host_event_code enum fc_host_event_code { FCH_EVT_LIP = 0x1 , FCH_EVT_LINKUP = 0x2 , FCH_EVT_LINKDOWN = 0x3 , FCH_EVT_LIPRESET = 0x4 , FCH_EVT_RSCN = 0x5 , FCH_EVT_ADAPTER_CHANGE = 0x103 , FCH_EVT_PORT_UNKNOWN = 0x200 , FCH_EVT_PORT_OFFLINE = 0x201 , FCH_EVT_PORT_ONLINE = 0x202 , FCH_EVT_PORT_FABRIC = 0x204 , FCH_EVT_LINK_UNKNOWN = 0x500 , FCH_EVT_VENDOR_UNIQUE = 0xffff , } 
fc_host_post_event void fc_host_post_event ( s#Scsi_Host * , t#u32 , e#fc_host_event_code , t#u32 ) 
fc_host_post_vendor_event void fc_host_post_vendor_event ( s#Scsi_Host * , t#u32 , t#u32 , char * , t#u64 ) 
scsi_is_fc_rport int scsi_is_fc_rport ( const s#device * ) 
scsi_is_fc_vport int scsi_is_fc_vport ( const s#device * ) 
s#fc_function_template struct fc_function_template { void ( * get_rport_dev_loss_tmo ) ( s#fc_rport * ) ; void ( * set_rport_dev_loss_tmo ) ( s#fc_rport * , t#u32 ) ; void ( * get_starget_node_name ) ( s#scsi_target * ) ; void ( * get_starget_port_name ) ( s#scsi_target * ) ; void ( * get_starget_port_id ) ( s#scsi_target * ) ; void ( * get_host_port_id ) ( s#Scsi_Host * ) ; void ( * get_host_port_type ) ( s#Scsi_Host * ) ; void ( * get_host_port_state ) ( s#Scsi_Host * ) ; void ( * get_host_active_fc4s ) ( s#Scsi_Host * ) ; void ( * get_host_speed ) ( s#Scsi_Host * ) ; void ( * get_host_fabric_name ) ( s#Scsi_Host * ) ; void ( * get_host_symbolic_name ) ( s#Scsi_Host * ) ; void ( * set_host_system_hostname ) ( s#Scsi_Host * ) ; s#fc_host_statistics * ( * get_fc_host_stats ) ( s#Scsi_Host * ) ; void ( * reset_fc_host_stats ) ( s#Scsi_Host * ) ; int ( * issue_fc_host_lip ) ( s#Scsi_Host * ) ; void ( * dev_loss_tmo_callbk ) ( s#fc_rport * ) ; void ( * terminate_rport_io ) ( s#fc_rport * ) ; void ( * set_vport_symbolic_name ) ( s#fc_vport * ) ; int ( * vport_create ) ( s#fc_vport * , t#bool ) ; int ( * vport_disable ) ( s#fc_vport * , t#bool ) ; int ( * vport_delete ) ( s#fc_vport * ) ; int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; int ( * bsg_request ) ( s#fc_bsg_job * ) ; int ( * bsg_timeout ) ( s#fc_bsg_job * ) ; t#u32 dd_fcrport_size ; t#u32 dd_fcvport_size ; t#u32 dd_bsg_size ; unsigned long show_rport_maxframe_size : 1 ; unsigned long show_rport_supported_classes : 1 ; unsigned long show_rport_dev_loss_tmo : 1 ; unsigned long show_starget_node_name : 1 ; unsigned long show_starget_port_name : 1 ; unsigned long show_starget_port_id : 1 ; unsigned long show_host_node_name : 1 ; unsigned long show_host_port_name : 1 ; unsigned long show_host_permanent_port_name : 1 ; unsigned long show_host_supported_classes : 1 ; unsigned long show_host_supported_fc4s : 1 ; unsigned long show_host_supported_speeds : 1 ; unsigned long show_host_maxframe_size : 1 ; unsigned long show_host_serial_number : 1 ; unsigned long show_host_manufacturer : 1 ; unsigned long show_host_model : 1 ; unsigned long show_host_model_description : 1 ; unsigned long show_host_hardware_version : 1 ; unsigned long show_host_driver_version : 1 ; unsigned long show_host_firmware_version : 1 ; unsigned long show_host_optionrom_version : 1 ; unsigned long show_host_port_id : 1 ; unsigned long show_host_port_type : 1 ; unsigned long show_host_port_state : 1 ; unsigned long show_host_active_fc4s : 1 ; unsigned long show_host_speed : 1 ; unsigned long show_host_fabric_name : 1 ; unsigned long show_host_symbolic_name : 1 ; unsigned long show_host_system_hostname : 1 ; unsigned long disable_target_scan : 1 ; } 
fc_attach_transport s#scsi_transport_template * fc_attach_transport ( s#fc_function_template * ) 
fc_release_transport void fc_release_transport ( s#scsi_transport_template * ) 
fc_remove_host void fc_remove_host ( s#Scsi_Host * ) 
fc_remote_port_add s#fc_rport * fc_remote_port_add ( s#Scsi_Host * , int , s#fc_rport_identifiers * ) 
fc_remote_port_delete void fc_remote_port_delete ( s#fc_rport * ) 
fc_remote_port_rolechg void fc_remote_port_rolechg ( s#fc_rport * , t#u32 ) 
fc_block_scsi_eh int fc_block_scsi_eh ( s#scsi_cmnd * ) 
s#fc_vport_identifiers struct fc_vport_identifiers { t#u64 node_name ; t#u64 port_name ; t#u32 roles ; t#bool disable ; e#fc_port_type vport_type ; char symbolic_name [ 64 ] ; } 
fc_vport_create s#fc_vport * fc_vport_create ( s#Scsi_Host * , int , s#fc_vport_identifiers * ) 
fc_vport_terminate int fc_vport_terminate ( s#fc_vport * ) 

/* drivers/scsi/scsi_transport_iscsi.o */
s##device_private
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##hd_geometry
s##tvec_base
s##blk_trace
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##scsi_host_cmd_pool
s##scsi_sense_hdr
s##workqueue_struct
s##iscsi_task
s##iscsi_conn
iscsi_create_endpoint extern s#iscsi_endpoint * iscsi_create_endpoint ( int ) 
iscsi_destroy_endpoint extern void iscsi_destroy_endpoint ( s#iscsi_endpoint * ) 
iscsi_lookup_endpoint extern s#iscsi_endpoint * iscsi_lookup_endpoint ( t#u64 ) 
iscsi_create_iface extern s#iscsi_iface * iscsi_create_iface ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , t#uint32_t , int ) 
iscsi_destroy_iface extern void iscsi_destroy_iface ( s#iscsi_iface * ) 
iscsi_flashnode_bus_match extern int iscsi_flashnode_bus_match ( s#device * , s#device_driver * ) 
iscsi_create_flashnode_sess extern s#iscsi_bus_flash_session * iscsi_create_flashnode_sess ( s#Scsi_Host * , int , s#iscsi_transport * , int ) 
iscsi_create_flashnode_conn extern s#iscsi_bus_flash_conn * iscsi_create_flashnode_conn ( s#Scsi_Host * , s#iscsi_bus_flash_session * , s#iscsi_transport * , int ) 
iscsi_is_flashnode_conn_dev extern int iscsi_is_flashnode_conn_dev ( s#device * , void * ) 
iscsi_find_flashnode_sess extern s#device * iscsi_find_flashnode_sess ( s#Scsi_Host * , void * , int ( * ) ( s#device * , void * ) ) 
iscsi_find_flashnode_conn extern s#device * iscsi_find_flashnode_conn ( s#iscsi_bus_flash_session * , void * , int ( * ) ( s#device * , void * ) ) 
iscsi_destroy_flashnode_sess extern void iscsi_destroy_flashnode_sess ( s#iscsi_bus_flash_session * ) 
iscsi_destroy_all_flashnode extern void iscsi_destroy_all_flashnode ( s#Scsi_Host * ) 
iscsi_session_chkready extern int iscsi_session_chkready ( s#iscsi_cls_session * ) 
iscsi_is_session_online extern int iscsi_is_session_online ( s#iscsi_cls_session * ) 
iscsi_is_session_dev extern int iscsi_is_session_dev ( const s#device * ) 
iscsi_host_for_each_session extern void iscsi_host_for_each_session ( s#Scsi_Host * , void ( * ) ( s#iscsi_cls_session * ) ) 
iscsi_scan_finished extern int iscsi_scan_finished ( s#Scsi_Host * , unsigned long ) 
iscsi_block_scsi_eh extern int iscsi_block_scsi_eh ( s#scsi_cmnd * ) 
iscsi_unblock_session extern void iscsi_unblock_session ( s#iscsi_cls_session * ) 
iscsi_block_session extern void iscsi_block_session ( s#iscsi_cls_session * ) 
iscsi_alloc_session extern s#iscsi_cls_session * iscsi_alloc_session ( s#Scsi_Host * , s#iscsi_transport * , int ) 
iscsi_add_session extern int iscsi_add_session ( s#iscsi_cls_session * , unsigned int ) 
iscsi_create_session extern s#iscsi_cls_session * iscsi_create_session ( s#Scsi_Host * , s#iscsi_transport * , int , unsigned int ) 
iscsi_remove_session extern void iscsi_remove_session ( s#iscsi_cls_session * ) 
iscsi_free_session extern void iscsi_free_session ( s#iscsi_cls_session * ) 
iscsi_destroy_session extern int iscsi_destroy_session ( s#iscsi_cls_session * ) 
iscsi_create_conn extern s#iscsi_cls_conn * iscsi_create_conn ( s#iscsi_cls_session * , int , t#uint32_t ) 
iscsi_destroy_conn extern int iscsi_destroy_conn ( s#iscsi_cls_conn * ) 
iscsi_recv_pdu extern int iscsi_recv_pdu ( s#iscsi_cls_conn * , s#iscsi_hdr * , char * , t#uint32_t ) 
iscsi_offload_mesg extern int iscsi_offload_mesg ( s#Scsi_Host * , s#iscsi_transport * , t#uint32_t , char * , t#uint16_t ) 
iscsi_conn_error_event extern void iscsi_conn_error_event ( s#iscsi_cls_conn * , e#iscsi_err ) 
e#iscsi_conn_state enum iscsi_conn_state { ISCSI_CONN_STATE_FREE , ISCSI_CONN_STATE_XPT_WAIT , ISCSI_CONN_STATE_IN_LOGIN , ISCSI_CONN_STATE_LOGGED_IN , ISCSI_CONN_STATE_IN_LOGOUT , ISCSI_CONN_STATE_LOGOUT_REQUESTED , ISCSI_CONN_STATE_CLEANUP_WAIT , } 
iscsi_conn_login_event extern void iscsi_conn_login_event ( s#iscsi_cls_conn * , e#iscsi_conn_state ) 
e#iscsi_host_event_code enum iscsi_host_event_code { ISCSI_EVENT_LINKUP = 1 , ISCSI_EVENT_LINKDOWN , ISCSI_EVENT_MAX , } 
iscsi_post_host_event extern void iscsi_post_host_event ( t#uint32_t , s#iscsi_transport * , e#iscsi_host_event_code , t#uint32_t , t#uint8_t * ) 
iscsi_ping_comp_event extern void iscsi_ping_comp_event ( t#uint32_t , s#iscsi_transport * , t#uint32_t , t#uint32_t , t#uint32_t , t#uint8_t * ) 
e#iscsi_uevent_e enum iscsi_uevent_e { ISCSI_UEVENT_UNKNOWN = 0 , ISCSI_UEVENT_CREATE_SESSION = 10 + 1 , ISCSI_UEVENT_DESTROY_SESSION = 10 + 2 , ISCSI_UEVENT_CREATE_CONN = 10 + 3 , ISCSI_UEVENT_DESTROY_CONN = 10 + 4 , ISCSI_UEVENT_BIND_CONN = 10 + 5 , ISCSI_UEVENT_SET_PARAM = 10 + 6 , ISCSI_UEVENT_START_CONN = 10 + 7 , ISCSI_UEVENT_STOP_CONN = 10 + 8 , ISCSI_UEVENT_SEND_PDU = 10 + 9 , ISCSI_UEVENT_GET_STATS = 10 + 10 , ISCSI_UEVENT_GET_PARAM = 10 + 11 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT = 10 + 12 , ISCSI_UEVENT_TRANSPORT_EP_POLL = 10 + 13 , ISCSI_UEVENT_TRANSPORT_EP_DISCONNECT = 10 + 14 , ISCSI_UEVENT_TGT_DSCVR = 10 + 15 , ISCSI_UEVENT_SET_HOST_PARAM = 10 + 16 , ISCSI_UEVENT_UNBIND_SESSION = 10 + 17 , ISCSI_UEVENT_CREATE_BOUND_SESSION = 10 + 18 , ISCSI_UEVENT_TRANSPORT_EP_CONNECT_THROUGH_HOST = 10 + 19 , ISCSI_UEVENT_PATH_UPDATE = 10 + 20 , ISCSI_UEVENT_SET_IFACE_PARAMS = 10 + 21 , ISCSI_UEVENT_PING = 10 + 22 , ISCSI_UEVENT_GET_CHAP = 10 + 23 , ISCSI_UEVENT_DELETE_CHAP = 10 + 24 , ISCSI_UEVENT_SET_FLASHNODE_PARAMS = 10 + 25 , ISCSI_UEVENT_NEW_FLASHNODE = 10 + 26 , ISCSI_UEVENT_DEL_FLASHNODE = 10 + 27 , ISCSI_UEVENT_LOGIN_FLASHNODE = 10 + 28 , ISCSI_UEVENT_LOGOUT_FLASHNODE = 10 + 29 , ISCSI_UEVENT_LOGOUT_FLASHNODE_SID = 10 + 30 , ISCSI_KEVENT_RECV_PDU = 100 + 1 , ISCSI_KEVENT_CONN_ERROR = 100 + 2 , ISCSI_KEVENT_IF_ERROR = 100 + 3 , ISCSI_KEVENT_DESTROY_SESSION = 100 + 4 , ISCSI_KEVENT_UNBIND_SESSION = 100 + 5 , ISCSI_KEVENT_CREATE_SESSION = 100 + 6 , ISCSI_KEVENT_PATH_REQ = 100 + 7 , ISCSI_KEVENT_IF_DOWN = 100 + 8 , ISCSI_KEVENT_CONN_LOGIN_STATE = 100 + 9 , ISCSI_KEVENT_HOST_EVENT = 100 + 10 , ISCSI_KEVENT_PING_COMP = 100 + 11 , } 
iscsi_session_event extern int iscsi_session_event ( s#iscsi_cls_session * , e#iscsi_uevent_e ) 
iscsi_get_discovery_parent_name extern char * iscsi_get_discovery_parent_name ( int ) 
iscsi_get_port_speed_name extern char * iscsi_get_port_speed_name ( s#Scsi_Host * ) 
iscsi_get_port_state_name extern char * iscsi_get_port_state_name ( s#Scsi_Host * ) 
iscsi_register_transport extern s#scsi_transport_template * iscsi_register_transport ( s#iscsi_transport * ) 
iscsi_unregister_transport extern int iscsi_unregister_transport ( s#iscsi_transport * ) 

/* drivers/scsi/scsi_transport_sas.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
sas_remove_children void sas_remove_children ( s#device * ) 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
sas_remove_host extern void sas_remove_host ( s#Scsi_Host * ) 
sas_tlr_supported unsigned int sas_tlr_supported ( s#scsi_device * ) 
sas_disable_tlr void sas_disable_tlr ( s#scsi_device * ) 
sas_enable_tlr void sas_enable_tlr ( s#scsi_device * ) 
sas_is_tlr_enabled unsigned int sas_is_tlr_enabled ( s#scsi_device * ) 
sas_phy_alloc extern s#sas_phy * sas_phy_alloc ( s#device * , int ) 
sas_phy_add extern int sas_phy_add ( s#sas_phy * ) 
sas_phy_free extern void sas_phy_free ( s#sas_phy * ) 
sas_phy_delete extern void sas_phy_delete ( s#sas_phy * ) 
scsi_is_sas_phy extern int scsi_is_sas_phy ( const s#device * ) 
sas_port_alloc s#sas_port * sas_port_alloc ( s#device * , int ) 
sas_port_alloc_num s#sas_port * sas_port_alloc_num ( s#device * ) 
sas_port_add int sas_port_add ( s#sas_port * ) 
sas_port_free void sas_port_free ( s#sas_port * ) 
sas_port_delete void sas_port_delete ( s#sas_port * ) 
scsi_is_sas_port int scsi_is_sas_port ( const s#device * ) 
sas_port_get_phy s#sas_phy * sas_port_get_phy ( s#sas_port * ) 
sas_port_add_phy void sas_port_add_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_delete_phy void sas_port_delete_phy ( s#sas_port * , s#sas_phy * ) 
sas_port_mark_backlink void sas_port_mark_backlink ( s#sas_port * ) 
sas_read_port_mode_page int sas_read_port_mode_page ( s#scsi_device * ) 
sas_end_device_alloc extern s#sas_rphy * sas_end_device_alloc ( s#sas_port * ) 
sas_expander_alloc extern s#sas_rphy * sas_expander_alloc ( s#sas_port * , e#sas_device_type ) 
sas_rphy_add extern int sas_rphy_add ( s#sas_rphy * ) 
sas_rphy_free void sas_rphy_free ( s#sas_rphy * ) 
sas_rphy_delete extern void sas_rphy_delete ( s#sas_rphy * ) 
sas_rphy_unlink extern void sas_rphy_unlink ( s#sas_rphy * ) 
sas_rphy_remove extern void sas_rphy_remove ( s#sas_rphy * ) 
scsi_is_sas_rphy extern int scsi_is_sas_rphy ( const s#device * ) 
s#sas_phy_linkrates struct sas_phy_linkrates { e#sas_linkrate maximum_linkrate ; e#sas_linkrate minimum_linkrate ; } 
s#sas_function_template struct sas_function_template { int ( * get_linkerrors ) ( s#sas_phy * ) ; int ( * get_enclosure_identifier ) ( s#sas_rphy * , t#u64 * ) ; int ( * get_bay_identifier ) ( s#sas_rphy * ) ; int ( * phy_reset ) ( s#sas_phy * , int ) ; int ( * phy_enable ) ( s#sas_phy * , int ) ; int ( * phy_setup ) ( s#sas_phy * ) ; void ( * phy_release ) ( s#sas_phy * ) ; int ( * set_phy_speed ) ( s#sas_phy * , s#sas_phy_linkrates * ) ; int ( * smp_handler ) ( s#Scsi_Host * , s#sas_rphy * , s#request * ) ; } 
sas_attach_transport extern s#scsi_transport_template * sas_attach_transport ( s#sas_function_template * ) 
sas_release_transport extern void sas_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_spi.o */
s##scsi_host_cmd_pool
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##workqueue_struct
spi_dv_device void spi_dv_device ( s#scsi_device * ) 
spi_schedule_dv_device void spi_schedule_dv_device ( s#scsi_device * ) 
spi_display_xfer_agreement void spi_display_xfer_agreement ( s#scsi_target * ) 
spi_populate_width_msg int spi_populate_width_msg ( unsigned char * , int ) 
spi_populate_sync_msg int spi_populate_sync_msg ( unsigned char * , int , int ) 
spi_populate_ppr_msg int spi_populate_ppr_msg ( unsigned char * , int , int , int , int ) 
spi_print_msg int spi_print_msg ( const unsigned char * ) 
e#spi_signal_type enum spi_signal_type { SPI_SIGNAL_UNKNOWN = 1 , SPI_SIGNAL_SE , SPI_SIGNAL_LVD , SPI_SIGNAL_HVD , } 
s#spi_function_template struct spi_function_template { void ( * get_period ) ( s#scsi_target * ) ; void ( * set_period ) ( s#scsi_target * , int ) ; void ( * get_offset ) ( s#scsi_target * ) ; void ( * set_offset ) ( s#scsi_target * , int ) ; void ( * get_width ) ( s#scsi_target * ) ; void ( * set_width ) ( s#scsi_target * , int ) ; void ( * get_iu ) ( s#scsi_target * ) ; void ( * set_iu ) ( s#scsi_target * , int ) ; void ( * get_dt ) ( s#scsi_target * ) ; void ( * set_dt ) ( s#scsi_target * , int ) ; void ( * get_qas ) ( s#scsi_target * ) ; void ( * set_qas ) ( s#scsi_target * , int ) ; void ( * get_wr_flow ) ( s#scsi_target * ) ; void ( * set_wr_flow ) ( s#scsi_target * , int ) ; void ( * get_rd_strm ) ( s#scsi_target * ) ; void ( * set_rd_strm ) ( s#scsi_target * , int ) ; void ( * get_rti ) ( s#scsi_target * ) ; void ( * set_rti ) ( s#scsi_target * , int ) ; void ( * get_pcomp_en ) ( s#scsi_target * ) ; void ( * set_pcomp_en ) ( s#scsi_target * , int ) ; void ( * get_hold_mcs ) ( s#scsi_target * ) ; void ( * set_hold_mcs ) ( s#scsi_target * , int ) ; void ( * get_signalling ) ( s#Scsi_Host * ) ; void ( * set_signalling ) ( s#Scsi_Host * , e#spi_signal_type ) ; int ( * deny_binding ) ( s#scsi_target * ) ; unsigned long show_period : 1 ; unsigned long show_offset : 1 ; unsigned long show_width : 1 ; unsigned long show_iu : 1 ; unsigned long show_dt : 1 ; unsigned long show_qas : 1 ; unsigned long show_wr_flow : 1 ; unsigned long show_rd_strm : 1 ; unsigned long show_rti : 1 ; unsigned long show_pcomp_en : 1 ; unsigned long show_hold_mcs : 1 ; } 
spi_attach_transport s#scsi_transport_template * spi_attach_transport ( s#spi_function_template * ) 
spi_release_transport void spi_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsi_transport_srp.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#srp_rport struct srp_rport { s#device dev ; t#u8 port_id [ 16 ] ; t#u8 roles ; } 
s##scsi_host_cmd_pool
s##scsi_cmnd
s##scsi_sense_hdr
s##proc_dir_entry
s##workqueue_struct
s#srp_rport_identifiers struct srp_rport_identifiers { t#u8 port_id [ 16 ] ; t#u8 roles ; } 
srp_rport_add extern s#srp_rport * srp_rport_add ( s#Scsi_Host * , s#srp_rport_identifiers * ) 
srp_rport_del extern void srp_rport_del ( s#srp_rport * ) 
srp_remove_host extern void srp_remove_host ( s#Scsi_Host * ) 
s#srp_function_template struct srp_function_template { int ( * tsk_mgmt_response ) ( s#Scsi_Host * , t#u64 , t#u64 , int ) ; int ( * it_nexus_response ) ( s#Scsi_Host * , t#u64 , int ) ; } 
srp_attach_transport extern s#scsi_transport_template * srp_attach_transport ( s#srp_function_template * ) 
srp_release_transport extern void srp_release_transport ( s#scsi_transport_template * ) 

/* drivers/scsi/scsicam.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
scsi_bios_ptable extern unsigned char * scsi_bios_ptable ( s#block_device * ) 
scsicam_bios_param extern int scsicam_bios_param ( s#block_device * , t#sector_t , int * ) 
scsi_partsize extern int scsi_partsize ( unsigned char * , unsigned long , unsigned int * , unsigned int * , unsigned int * ) 

/* drivers/spi/dw_spi.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
e#dw_ssi_type enum dw_ssi_type { SSI_MOTO_SPI = 0 , SSI_TI_SSP , SSI_NS_MICROWIRE , } 
s##workqueue_struct
s#spi_transfer struct spi_transfer { const void * tx_buf ; void * rx_buf ; unsigned len ; t#dma_addr_t tx_dma ; t#dma_addr_t rx_dma ; unsigned cs_change : 1 ; t#u8 bits_per_word ; t#u16 delay_usecs ; t#u32 speed_hz ; s#list_head transfer_list ; } 
s##chip_data
s##dma_chan
s#dw_spi_dma_ops struct dw_spi_dma_ops { int ( * dma_init ) ( s#dw_spi * ) ; void ( * dma_exit ) ( s#dw_spi * ) ; int ( * dma_transfer ) ( s#dw_spi * , int ) ; } 
s##pci_dev
s#dw_spi struct dw_spi { s#spi_master * master ; s#spi_device * cur_dev ; s#device * parent_dev ; e#dw_ssi_type type ; void * regs ; unsigned long paddr ; t#u32 iolen ; int irq ; t#u32 fifo_len ; t#u32 max_freq ; t#u16 bus_num ; t#u16 num_cs ; s#workqueue_struct * workqueue ; s#work_struct pump_messages ; t#spinlock_t lock ; s#list_head queue ; int busy ; int run ; s#tasklet_struct pump_transfers ; s#spi_message * cur_msg ; s#spi_transfer * cur_transfer ; s#chip_data * cur_chip ; s#chip_data * prev_chip ; t#size_t len ; void * tx ; void * tx_end ; void * rx ; void * rx_end ; int dma_mapped ; t#dma_addr_t rx_dma ; t#dma_addr_t tx_dma ; t#size_t rx_map_len ; t#size_t tx_map_len ; t#u8 n_bytes ; t#u8 max_bits_per_word ; t#u32 dma_width ; int cs_change ; t#irqreturn_t ( * transfer_handler ) ( s#dw_spi * ) ; void ( * cs_control ) ( t#u32 ) ; int dma_inited ; s#dma_chan * txchan ; s#scatterlist tx_sgl ; s#dma_chan * rxchan ; s#scatterlist rx_sgl ; int dma_chan_done ; s#device * dma_dev ; t#dma_addr_t dma_addr ; s#dw_spi_dma_ops * dma_ops ; void * dma_priv ; s#pci_dev * dmac ; void * priv ; s#dentry * debugfs ; } 
dw_spi_xfer_done extern void dw_spi_xfer_done ( s#dw_spi * ) 
dw_spi_add_host extern int dw_spi_add_host ( s#dw_spi * ) 
dw_spi_remove_host extern void dw_spi_remove_host ( s#dw_spi * ) 
dw_spi_suspend_host extern int dw_spi_suspend_host ( s#dw_spi * ) 
dw_spi_resume_host extern int dw_spi_resume_host ( s#dw_spi * ) 

/* drivers/spi/spi.o */
s#spi_device_id struct spi_device_id { char name [ 32 ] ; t#kernel_ulong_t driver_data __attribute__ ( ( aligned ( sizeof ( kernel_ulong_t ) ) ) ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
spi_get_device_id extern const s#spi_device_id * spi_get_device_id ( const s#spi_device * ) 
spi_bus_type extern s#bus_type spi_bus_type 
s#spi_driver struct spi_driver { const s#spi_device_id * id_table ; int ( * probe ) ( s#spi_device * ) ; int ( * remove ) ( s#spi_device * ) ; void ( * shutdown ) ( s#spi_device * ) ; int ( * suspend ) ( s#spi_device * , t#pm_message_t ) ; int ( * resume ) ( s#spi_device * ) ; s#device_driver driver ; } 
spi_register_driver extern int spi_register_driver ( s#spi_driver * ) 
spi_alloc_device extern s#spi_device * spi_alloc_device ( s#spi_master * ) 
spi_add_device extern int spi_add_device ( s#spi_device * ) 
spi_new_device extern s#spi_device * spi_new_device ( s#spi_master * , s#spi_board_info * ) 
spi_alloc_master extern s#spi_master * spi_alloc_master ( s#device * , unsigned ) 
spi_register_master extern int spi_register_master ( s#spi_master * ) 
spi_unregister_master extern void spi_unregister_master ( s#spi_master * ) 
spi_busnum_to_master extern s#spi_master * spi_busnum_to_master ( t#u16 ) 
spi_setup extern int spi_setup ( s#spi_device * ) 
spi_async extern int spi_async ( s#spi_device * , s#spi_message * ) 
spi_async_locked extern int spi_async_locked ( s#spi_device * , s#spi_message * ) 
spi_sync extern int spi_sync ( s#spi_device * , s#spi_message * ) 
spi_sync_locked extern int spi_sync_locked ( s#spi_device * , s#spi_message * ) 
spi_bus_lock extern int spi_bus_lock ( s#spi_master * ) 
spi_bus_unlock extern int spi_bus_unlock ( s#spi_master * ) 
spi_write_then_read extern int spi_write_then_read ( s#spi_device * , const void * , unsigned , void * , unsigned ) 

/* drivers/spi/spi_bitbang.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
spi_bitbang_setup_transfer extern int spi_bitbang_setup_transfer ( s#spi_device * , s#spi_transfer * ) 
spi_bitbang_setup extern int spi_bitbang_setup ( s#spi_device * ) 
spi_bitbang_cleanup extern void spi_bitbang_cleanup ( s#spi_device * ) 
spi_bitbang_transfer extern int spi_bitbang_transfer ( s#spi_device * , s#spi_message * ) 
s##workqueue_struct
s#spi_bitbang struct spi_bitbang { s#workqueue_struct * workqueue ; s#work_struct work ; t#spinlock_t lock ; s#list_head queue ; t#u8 busy ; t#u8 use_dma ; t#u8 flags ; s#spi_master * master ; int ( * setup_transfer ) ( s#spi_device * , s#spi_transfer * ) ; void ( * chipselect ) ( s#spi_device * , int ) ; int ( * txrx_bufs ) ( s#spi_device * , s#spi_transfer * ) ; t#u32 ( * txrx_word [ 4 ] ) ( s#spi_device * , unsigned , t#u32 , t#u8 ) ; } 
spi_bitbang_start extern int spi_bitbang_start ( s#spi_bitbang * ) 
spi_bitbang_stop extern int spi_bitbang_stop ( s#spi_bitbang * ) 

/* drivers/spi/xilinx_spi.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
xilinx_spi_init s#spi_master * xilinx_spi_init ( s#device * , s#resource * , t#u32 , t#s16 , int , int , int ) 
xilinx_spi_deinit void xilinx_spi_deinit ( s#spi_master * ) 

/* drivers/ssb/driver_chipcommon.o */
s#ssb_bus_ops struct ssb_bus_ops { t#u8 ( * read8 ) ( s#ssb_device * , t#u16 ) ; t#u16 ( * read16 ) ( s#ssb_device * , t#u16 ) ; t#u32 ( * read32 ) ( s#ssb_device * , t#u16 ) ; void ( * write8 ) ( s#ssb_device * , t#u16 , t#u8 ) ; void ( * write16 ) ( s#ssb_device * , t#u16 , t#u16 ) ; void ( * write32 ) ( s#ssb_device * , t#u16 , t#u32 ) ; void ( * block_read ) ( s#ssb_device * , void * , t#size_t , t#u16 , t#u8 ) ; void ( * block_write ) ( s#ssb_device * , const void * , t#size_t , t#u16 , t#u8 ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
e#ssb_bustype enum ssb_bustype { SSB_BUSTYPE_SSB , SSB_BUSTYPE_PCI , SSB_BUSTYPE_PCMCIA , SSB_BUSTYPE_SDIO , } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pcmcia_device
s##sdio_func
s#ssb_pcicore struct ssb_pcicore { s#ssb_device * dev ; t#u8 setup_done : 1 ; t#u8 hostmode : 1 ; t#u8 cardbusmode : 1 ; } 
s#ssb_mipscore struct ssb_mipscore { } 
s#ssb_extif struct ssb_extif { } 
s#ssb_boardinfo struct ssb_boardinfo { t#u16 vendor ; t#u16 type ; t#u16 rev ; } 
s#ssb_sprom struct ssb_sprom { t#u8 revision ; t#u8 il0mac [ 6 ] ; t#u8 et0mac [ 6 ] ; t#u8 et1mac [ 6 ] ; t#u8 et0phyaddr ; t#u8 et1phyaddr ; t#u8 et0mdcport ; t#u8 et1mdcport ; t#u8 board_rev ; t#u8 country_code ; t#u8 ant_available_a ; t#u8 ant_available_bg ; t#u16 pa0b0 ; t#u16 pa0b1 ; t#u16 pa0b2 ; t#u16 pa1b0 ; t#u16 pa1b1 ; t#u16 pa1b2 ; t#u16 pa1lob0 ; t#u16 pa1lob1 ; t#u16 pa1lob2 ; t#u16 pa1hib0 ; t#u16 pa1hib1 ; t#u16 pa1hib2 ; t#u8 gpio0 ; t#u8 gpio1 ; t#u8 gpio2 ; t#u8 gpio3 ; t#u16 maxpwr_bg ; t#u16 maxpwr_al ; t#u16 maxpwr_a ; t#u16 maxpwr_ah ; t#u8 itssi_a ; t#u8 itssi_bg ; t#u8 tri2g ; t#u8 tri5gl ; t#u8 tri5g ; t#u8 tri5gh ; t#u8 txpid2g [ 4 ] ; t#u8 txpid5gl [ 4 ] ; t#u8 txpid5g [ 4 ] ; t#u8 txpid5gh [ 4 ] ; t#u8 rxpo2g ; t#u8 rxpo5g ; t#u8 rssisav2g ; t#u8 rssismc2g ; t#u8 rssismf2g ; t#u8 bxa2g ; t#u8 rssisav5g ; t#u8 rssismc5g ; t#u8 rssismf5g ; t#u8 bxa5g ; t#u16 cck2gpo ; t#u32 ofdm2gpo ; t#u32 ofdm5glpo ; t#u32 ofdm5gpo ; t#u32 ofdm5ghpo ; t#u16 boardflags_lo ; t#u16 boardflags_hi ; t#u16 boardflags2_lo ; t#u16 boardflags2_hi ; struct { struct { t#s8 a0 , a1 , a2 , a3 ; } ghz24 ; struct { t#s8 a0 , a1 , a2 , a3 ; } ghz5 ; } antenna_gain ; } 
s#ssb_bus struct ssb_bus { void * mmio ; const s#ssb_bus_ops * ops ; s#ssb_device * mapped_device ; union { t#u8 mapped_pcmcia_seg ; t#u32 sdio_sbaddr ; } ; t#spinlock_t bar_lock ; e#ssb_bustype bustype ; union { s#pci_dev * host_pci ; s#pcmcia_device * host_pcmcia ; s#sdio_func * host_sdio ; } ; unsigned int quirks ; s#mutex sprom_mutex ; t#u16 chip_id ; t#u8 chip_rev ; t#u16 sprom_offset ; t#u16 sprom_size ; t#u8 chip_package ; s#ssb_device devices [ ( ( 0x18010000U - 0x18000000U ) / 0x1000 ) ] ; t#u8 nr_devices ; unsigned int busnumber ; s#ssb_chipcommon chipco ; s#ssb_pcicore pcicore ; s#ssb_mipscore mipscore ; s#ssb_extif extif ; s#ssb_boardinfo boardinfo ; s#ssb_sprom sprom ; t#bool has_cardbus_slot ; s#list_head list ; } 
s#ssb_device_id struct ssb_device_id { t#__u16 vendor ; t#__u16 coreid ; t#__u8 revision ; } 
s#ssb_device struct ssb_device { const s#ssb_bus_ops * ops ; s#device * dev , * dma_dev ; s#ssb_bus * bus ; s#ssb_device_id id ; t#u8 core_index ; unsigned int irq ; void * drvdata ; void * devtypedata ; } 
s#ssb_chipcommon_pmu struct ssb_chipcommon_pmu { t#u8 rev ; t#u32 crystalfreq ; } 
s#ssb_chipcommon struct ssb_chipcommon { s#ssb_device * dev ; t#u32 capabilities ; t#u32 status ; t#u16 fast_pwrup_delay ; s#ssb_chipcommon_pmu pmu ; } 
ssb_chipco_gpio_control t#u32 ssb_chipco_gpio_control ( s#ssb_chipcommon * , t#u32 , t#u32 ) 

/* drivers/ssb/driver_chipcommon_pmu.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pcmcia_device
s##sdio_func
e#ssb_pmu_ldo_volt_id enum ssb_pmu_ldo_volt_id { LDO_PAREF = 0 , LDO_VOLT1 , LDO_VOLT2 , LDO_VOLT3 , } 
ssb_pmu_set_ldo_voltage void ssb_pmu_set_ldo_voltage ( s#ssb_chipcommon * , e#ssb_pmu_ldo_volt_id , t#u32 ) 
ssb_pmu_set_ldo_paref void ssb_pmu_set_ldo_paref ( s#ssb_chipcommon * , t#bool ) 

/* drivers/ssb/driver_pcicore.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##pcmcia_device
s##sdio_func
ssb_pcicore_dev_irqvecs_enable extern int ssb_pcicore_dev_irqvecs_enable ( s#ssb_pcicore * , s#ssb_device * ) 

/* drivers/ssb/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#socket_state_t struct socket_state_t { t#u_int flags ; t#u_int csc_mask ; t#u_char Vcc , Vpp ; t#u_char io_irq ; } 
t#socket_state_t typedef s#socket_state_t socket_state_t 
t#u_short typedef unsigned short u_short 
s#pccard_mem_map struct pccard_mem_map { t#u_char map ; t#u_char flags ; t#u_short speed ; t#phys_addr_t static_start ; t#u_int card_start ; s#resource * res ; } 
t#pccard_mem_map typedef s#pccard_mem_map pccard_mem_map 
s#io_window_t struct io_window_t { t#u_int InUse , Config ; s#resource * res ; } 
t#io_window_t typedef s#io_window_t io_window_t 
s#pccard_io_map struct pccard_io_map { t#u_char map ; t#u_char flags ; t#u_short speed ; t#phys_addr_t start , stop ; } 
s#pccard_operations struct pccard_operations { int ( * init ) ( s#pcmcia_socket * ) ; int ( * suspend ) ( s#pcmcia_socket * ) ; int ( * get_status ) ( s#pcmcia_socket * , t#u_int * ) ; int ( * set_socket ) ( s#pcmcia_socket * , t#socket_state_t * ) ; int ( * set_io_map ) ( s#pcmcia_socket * , s#pccard_io_map * ) ; int ( * set_mem_map ) ( s#pcmcia_socket * , s#pccard_mem_map * ) ; } 
s##pccard_resource_ops
s##pcmcia_callback
s#pcmcia_socket struct pcmcia_socket { s#module * owner ; t#socket_state_t socket ; t#u_int state ; t#u_int suspended_state ; t#u_short functions ; t#u_short lock_count ; t#pccard_mem_map cis_mem ; void * cis_virt ; t#io_window_t io [ 2 ] ; t#pccard_mem_map win [ 4 ] ; s#list_head cis_cache ; t#size_t fake_cis_len ; t#u8 * fake_cis ; s#list_head socket_list ; s#completion socket_released ; unsigned int sock ; t#u_int features ; t#u_int irq_mask ; t#u_int map_size ; t#u_int io_offset ; t#u_int pci_irq ; s#pci_dev * cb_dev ; t#u8 resource_setup_done ; s#pccard_operations * ops ; s#pccard_resource_ops * resource_ops ; void * resource_data ; void ( * zoom_video ) ( s#pcmcia_socket * , int ) ; int ( * power_hook ) ( s#pcmcia_socket * , int ) ; s#task_struct * thread ; s#completion thread_done ; unsigned int thread_events ; unsigned int sysfs_events ; s#mutex skt_mutex ; s#mutex ops_mutex ; t#spinlock_t thread_lock ; s#pcmcia_callback * callback ; s#device dev ; void * driver_data ; int resume_status ; } 
s##config_t
E#PCMCIA_NUM_RESOURCES 6 
s#pcmcia_device struct pcmcia_device { s#pcmcia_socket * socket ; char * devname ; t#u8 device_no ; t#u8 func ; s#config_t * function_config ; s#list_head socket_device_list ; unsigned int irq ; s#resource * resource [ E#PCMCIA_NUM_RESOURCES ] ; t#resource_size_t card_addr ; unsigned int vpp ; unsigned int config_flags ; unsigned int config_base ; unsigned int config_index ; unsigned int config_regs ; unsigned int io_lines ; t#u16 suspended : 1 ; t#u16 _irq : 1 ; t#u16 _io : 1 ; t#u16 _win : 4 ; t#u16 _locked : 1 ; t#u16 allow_func_id_match : 1 ; t#u16 has_manf_id : 1 ; t#u16 has_card_id : 1 ; t#u16 has_func_id : 1 ; t#u16 reserved : 4 ; t#u8 func_id ; t#u16 manf_id ; t#u16 card_id ; char * prod_id [ 4 ] ; t#u64 dma_mask ; s#device dev ; void * priv ; unsigned int open ; } 
s##mmc_card
t#sdio_irq_handler_t typedef void ( sdio_irq_handler_t ) ( s#sdio_func * ) 
s#sdio_func_tuple struct sdio_func_tuple { s#sdio_func_tuple * next ; unsigned char code ; unsigned char size ; unsigned char data [ 0 ] ; } 
s#sdio_func struct sdio_func { s#mmc_card * card ; s#device dev ; t#sdio_irq_handler_t * irq_handler ; unsigned int num ; unsigned char class ; unsigned short vendor ; unsigned short device ; unsigned max_blksize ; unsigned cur_blksize ; unsigned enable_timeout ; unsigned int state ; t#u8 tmpbuf [ 4 ] ; unsigned num_info ; const char * * info ; s#sdio_func_tuple * tuples ; } 
ssb_bus_resume extern int ssb_bus_resume ( s#ssb_bus * ) 
ssb_bus_suspend extern int ssb_bus_suspend ( s#ssb_bus * ) 
ssb_bus_unregister extern void ssb_bus_unregister ( s#ssb_bus * ) 
ssb_bus_pcibus_register extern int ssb_bus_pcibus_register ( s#ssb_bus * , s#pci_dev * ) 
s#ssb_driver struct ssb_driver { const char * name ; const s#ssb_device_id * id_table ; int ( * probe ) ( s#ssb_device * , const s#ssb_device_id * ) ; void ( * remove ) ( s#ssb_device * ) ; int ( * suspend ) ( s#ssb_device * , t#pm_message_t ) ; int ( * resume ) ( s#ssb_device * ) ; void ( * shutdown ) ( s#ssb_device * ) ; s#device_driver drv ; } 
__ssb_driver_register extern int __ssb_driver_register ( s#ssb_driver * , s#module * ) 
ssb_driver_unregister extern void ssb_driver_unregister ( s#ssb_driver * ) 
ssb_set_devtypedata void ssb_set_devtypedata ( s#ssb_device * , void * ) 
ssb_clockspeed extern t#u32 ssb_clockspeed ( s#ssb_bus * ) 
ssb_device_is_enabled int ssb_device_is_enabled ( s#ssb_device * ) 
ssb_device_enable void ssb_device_enable ( s#ssb_device * , t#u32 ) 
ssb_device_disable void ssb_device_disable ( s#ssb_device * , t#u32 ) 
ssb_dma_translation extern t#u32 ssb_dma_translation ( s#ssb_device * ) 
ssb_bus_may_powerdown extern int ssb_bus_may_powerdown ( s#ssb_bus * ) 
ssb_bus_powerup extern int ssb_bus_powerup ( s#ssb_bus * , t#bool ) 
ssb_commit_settings extern void ssb_commit_settings ( s#ssb_bus * ) 
ssb_admatch_base extern t#u32 ssb_admatch_base ( t#u32 ) 
ssb_admatch_size extern t#u32 ssb_admatch_size ( t#u32 ) 

/* drivers/ssb/pcihost_wrapper.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
ssb_pcihost_register extern int ssb_pcihost_register ( s#pci_driver * ) 

/* drivers/staging/altera-stapl/altera.o */
s#altera_config struct altera_config { void * dev ; t#u8 * action ; int ( * jtag_io ) ( void * , int , int , int ) ; } 
s##address_space
s##array_cache
s##kmem_list3
altera_init extern int altera_init ( s#altera_config * , const s#firmware * ) 

/* drivers/staging/cx25821/cx25821-core.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cx25821_devlist_mutex extern s#mutex cx25821_devlist_mutex 
cx25821_devlist extern s#list_head cx25821_devlist 
s#sram_channel struct sram_channel { char * name ; t#u32 i ; t#u32 cmds_start ; t#u32 ctrl_start ; t#u32 cdt ; t#u32 fifo_start ; t#u32 fifo_size ; t#u32 ptr1_reg ; t#u32 ptr2_reg ; t#u32 cnt1_reg ; t#u32 cnt2_reg ; t#u32 int_msk ; t#u32 int_stat ; t#u32 int_mstat ; t#u32 dma_ctl ; t#u32 gpcnt_ctl ; t#u32 gpcnt ; t#u32 aud_length ; t#u32 aud_cfg ; t#u32 fld_aud_fifo_en ; t#u32 fld_aud_risc_en ; t#u32 vid_fmt_ctl ; t#u32 vid_active_ctl1 ; t#u32 vid_active_ctl2 ; t#u32 vid_cdt_size ; t#u32 vip_ctl ; t#u32 pix_frmt ; t#u32 jumponly ; t#u32 irq_bit ; } 
cx25821_sram_channels extern s#sram_channel cx25821_sram_channels [ ] 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##v4l2_events
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#cx25821_i2c struct cx25821_i2c { s#cx25821_dev * dev ; int nr ; s#i2c_adapter i2c_adap ; s#i2c_algo_bit_data i2c_algo ; s#i2c_client i2c_client ; t#u32 i2c_rc ; t#u32 i2c_period ; t#u32 reg_ctrl ; t#u32 reg_stat ; t#u32 reg_addr ; t#u32 reg_rdata ; t#u32 reg_wdata ; } 
s#cx25821_data struct cx25821_data { s#cx25821_dev * dev ; s#sram_channel * channel ; } 
s#cx25821_dmaqueue struct cx25821_dmaqueue { s#list_head active ; s#list_head queued ; s#timer_list timeout ; s#btcx_riscmem stopper ; t#u32 count ; } 
s#cx25821_channel struct cx25821_channel { s#v4l2_prio_state prio ; int ctl_bright ; int ctl_contrast ; int ctl_hue ; int ctl_saturation ; s#cx25821_data timeout_data ; s#video_device * video_dev ; s#cx25821_dmaqueue vidq ; s#sram_channel * sram_channels ; s#mutex lock ; int resources ; int pixel_formats ; int use_cif_resolution ; int cif_width ; } 
s#cx25821_tvnorm struct cx25821_tvnorm { char * name ; t#v4l2_std_id id ; t#u32 cxiformat ; t#u32 cxoformat ; } 
s##workqueue_struct
s#cx25821_dev struct cx25821_dev { s#list_head devlist ; t#atomic_t refcount ; s#v4l2_device v4l2_dev ; s#pci_dev * pci ; unsigned char pci_rev , pci_lat ; int pci_bus , pci_slot ; t#u32 base_io_addr ; t#u32 * lmmio ; t#u8 * bmmio ; int pci_irqmask ; int hwrevision ; t#u32 clk_freq ; s#cx25821_i2c i2c_bus [ 3 ] ; int nr ; s#mutex lock ; s#cx25821_channel channels [ 12 ] ; unsigned int board ; char name [ 32 ] ; t#u32 resources ; unsigned int input ; t#u32 tvaudio ; t#v4l2_std_id tvnorm ; unsigned int tuner_type ; unsigned char tuner_addr ; unsigned int radio_type ; unsigned char radio_addr ; unsigned int has_radio ; unsigned int videc_type ; unsigned char videc_addr ; unsigned short _max_num_decoders ; int _audio_is_running ; int _audiopixel_format ; int _is_first_audio_frame ; int _audiofile_status ; int _audio_lines_count ; int _audioframe_count ; int _audio_upstream_channel_select ; int _last_index_irq ; t#__le32 * _risc_audio_jmp_addr ; t#__le32 * _risc_virt_start_addr ; t#__le32 * _risc_virt_addr ; t#dma_addr_t _risc_phys_addr ; t#dma_addr_t _risc_phys_start_addr ; unsigned int _audiorisc_size ; unsigned int _audiodata_buf_size ; t#__le32 * _audiodata_buf_virt_addr ; t#dma_addr_t _audiodata_buf_phys_addr ; char * _audiofilename ; t#u32 freq ; s#video_device * vbi_dev ; s#video_device * radio_dev ; s#video_device * ioctl_dev ; t#spinlock_t slock ; int _line_size ; int _prog_cnt ; int _pixel_format ; int _is_first_frame ; int _is_running ; int _file_status ; int _lines_count ; int _frame_count ; int _channel_upstream_select ; unsigned int _risc_size ; t#__le32 * _dma_virt_start_addr ; t#__le32 * _dma_virt_addr ; t#dma_addr_t _dma_phys_addr ; t#dma_addr_t _dma_phys_start_addr ; unsigned int _data_buf_size ; t#__le32 * _data_buf_virt_addr ; t#dma_addr_t _data_buf_phys_addr ; char * _filename ; char * _defaultname ; int _line_size_ch2 ; int _prog_cnt_ch2 ; int _pixel_format_ch2 ; int _is_first_frame_ch2 ; int _is_running_ch2 ; int _file_status_ch2 ; int _lines_count_ch2 ; int _frame_count_ch2 ; int _channel2_upstream_select ; unsigned int _risc_size_ch2 ; t#__le32 * _dma_virt_start_addr_ch2 ; t#__le32 * _dma_virt_addr_ch2 ; t#dma_addr_t _dma_phys_addr_ch2 ; t#dma_addr_t _dma_phys_start_addr_ch2 ; unsigned int _data_buf_size_ch2 ; t#__le32 * _data_buf_virt_addr_ch2 ; t#dma_addr_t _data_buf_phys_addr_ch2 ; char * _filename_ch2 ; char * _defaultname_ch2 ; t#u32 cx23417_mailbox ; s#cx2341x_mpeg_params mpeg_params ; s#video_device * v4l_device ; t#atomic_t v4l_reader_count ; s#cx25821_tvnorm encodernorm ; t#u32 upstream_riscbuf_size ; t#u32 upstream_databuf_size ; t#u32 upstream_riscbuf_size_ch2 ; t#u32 upstream_databuf_size_ch2 ; t#u32 audio_upstream_riscbuf_size ; t#u32 audio_upstream_databuf_size ; int _isNTSC ; int _frame_index ; int _audioframe_index ; s#workqueue_struct * _irq_queues ; s#work_struct _irq_work_entry ; s#workqueue_struct * _irq_queues_ch2 ; s#work_struct _irq_work_entry_ch2 ; s#workqueue_struct * _irq_audio_queues ; s#work_struct _audio_work_entry ; char * input_filename ; char * input_filename_ch2 ; int _frame_index_ch2 ; int _isNTSC_ch2 ; char * vid_stdname_ch2 ; int pixel_format_ch2 ; int channel_select_ch2 ; int command_ch2 ; char * input_audiofilename ; char * vid_stdname ; int pixel_format ; int channel_select ; int command ; int channel_opened ; } 
cx25821_sram_channel_setup extern int cx25821_sram_channel_setup ( s#cx25821_dev * , s#sram_channel * , unsigned int , t#u32 ) 
cx25821_sram_channel_setup_audio extern int cx25821_sram_channel_setup_audio ( s#cx25821_dev * , s#sram_channel * , unsigned int , t#u32 ) 
cx25821_sram_channel_dump extern void cx25821_sram_channel_dump ( s#cx25821_dev * , s#sram_channel * ) 
cx25821_sram_channel_dump_audio extern void cx25821_sram_channel_dump_audio ( s#cx25821_dev * , s#sram_channel * ) 
cx25821_dev_unregister extern void cx25821_dev_unregister ( s#cx25821_dev * ) 
cx25821_risc_databuffer_audio extern int cx25821_risc_databuffer_audio ( s#pci_dev * , s#btcx_riscmem * , s#scatterlist * , unsigned int , unsigned int , unsigned int ) 
cx25821_print_irqbits extern void cx25821_print_irqbits ( char * , char * , char * * , int , t#u32 , t#u32 ) 
cx25821_dev_get extern s#cx25821_dev * cx25821_dev_get ( s#pci_dev * ) 
cx25821_set_gpiopin_direction extern void cx25821_set_gpiopin_direction ( s#cx25821_dev * , int , int ) 

/* drivers/staging/cxd2099/cxd2099.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
cxd2099_attach s#dvb_ca_en50221 * cxd2099_attach ( t#u8 , void * , s#i2c_adapter * ) 

/* drivers/staging/echo/echo.o */
s#fir16_state_t struct fir16_state_t { int taps ; int curr_pos ; const t#int16_t * coeffs ; t#int16_t * history ; } 
s#oslec_state struct oslec_state { t#int16_t tx , rx ; t#int16_t clean ; t#int16_t clean_nlp ; int nonupdate_dwell ; int curr_pos ; int taps ; int log2taps ; int adaption_mode ; int cond_met ; t#int32_t Pstates ; t#int16_t adapt ; t#int32_t factor ; t#int16_t shift ; int Ltxacc , Lrxacc , Lcleanacc , Lclean_bgacc ; int Ltx , Lrx ; int Lclean ; int Lclean_bg ; int Lbgn , Lbgn_acc , Lbgn_upper , Lbgn_upper_acc ; s#fir16_state_t fir_state ; s#fir16_state_t fir_state_bg ; t#int16_t * fir_taps16 [ 2 ] ; int tx_1 , tx_2 , rx_1 , rx_2 ; t#int32_t xvtx [ 5 ] , yvtx [ 5 ] ; t#int32_t xvrx [ 5 ] , yvrx [ 5 ] ; int cng_level ; int cng_rndnum ; int cng_filter ; t#int16_t * snapshot ; } 
oslec_create s#oslec_state * oslec_create ( int , int ) 
oslec_free void oslec_free ( s#oslec_state * ) 
oslec_adaption_mode void oslec_adaption_mode ( s#oslec_state * , int ) 
oslec_flush void oslec_flush ( s#oslec_state * ) 
oslec_snapshot void oslec_snapshot ( s#oslec_state * ) 
oslec_update t#int16_t oslec_update ( s#oslec_state * , t#int16_t , t#int16_t ) 
oslec_hpf_tx t#int16_t oslec_hpf_tx ( s#oslec_state * , t#int16_t ) 

/* drivers/staging/go7007/go7007-driver.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s#go7007_board_info struct go7007_board_info { char * firmware ; unsigned int flags ; int hpi_buffer_cap ; unsigned int sensor_flags ; int sensor_width ; int sensor_height ; int sensor_framerate ; int sensor_h_offset ; int sensor_v_offset ; unsigned int audio_flags ; int audio_rate ; int audio_bclk_div ; int audio_main_div ; int num_i2c_devs ; struct { const char * type ; int id ; int addr ; } i2c_devs [ 4 ] ; int num_inputs ; struct { int video_input ; int audio_input ; char * name ; } inputs [ 4 ] ; } 
s##v4l2_events
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s#go7007_buffer struct go7007_buffer { s#go7007 * go ; int index ; enum { BUF_STATE_IDLE , BUF_STATE_QUEUED , BUF_STATE_DONE } state ; t#u32 seq ; s#timeval timestamp ; s#list_head stream ; s#page * pages [ ( 128 * 1024 / ( 1UL << 16 ) ) + 1 ] ; unsigned long user_addr ; unsigned int page_count ; unsigned int offset ; unsigned int bytesused ; unsigned int frame_offset ; t#u32 modet_active ; int mapped ; } 
e#go7007_parser_state enum go7007_parser_state { STATE_DATA , STATE_00 , STATE_00_00 , STATE_00_00_01 , STATE_FF , STATE_VBI_LEN_A , STATE_VBI_LEN_B , STATE_MODET_MAP , STATE_UNPARSED , } 
s#go7007_hpi_ops struct go7007_hpi_ops { int ( * interface_reset ) ( s#go7007 * ) ; int ( * write_interrupt ) ( s#go7007 * , int , int ) ; int ( * read_interrupt ) ( s#go7007 * ) ; int ( * stream_start ) ( s#go7007 * ) ; int ( * stream_stop ) ( s#go7007 * ) ; int ( * send_firmware ) ( s#go7007 * , t#u8 * , int ) ; int ( * send_command ) ( s#go7007 * , unsigned int , void * ) ; } 
s#go7007 struct go7007 { s#device * dev ; s#go7007_board_info * board_info ; unsigned int board_id ; int tuner_type ; int channel_number ; char name [ 64 ] ; s#video_device * video_dev ; s#v4l2_device v4l2_dev ; int ref_count ; enum { STATUS_INIT , STATUS_ONLINE , STATUS_SHUTDOWN } status ; t#spinlock_t spinlock ; s#mutex hw_lock ; int streaming ; int in_use ; int audio_enabled ; int input ; enum { GO7007_STD_NTSC , GO7007_STD_PAL , GO7007_STD_OTHER } standard ; int sensor_framerate ; int width ; int height ; int encoder_h_offset ; int encoder_v_offset ; unsigned int encoder_h_halve : 1 ; unsigned int encoder_v_halve : 1 ; unsigned int encoder_subsample : 1 ; int format ; int bitrate ; int fps_scale ; int pali ; int aspect_ratio ; int gop_size ; unsigned int ipb : 1 ; unsigned int closed_gop : 1 ; unsigned int repeat_seqhead : 1 ; unsigned int seq_header_enable : 1 ; unsigned int gop_header_enable : 1 ; unsigned int dvd_mode : 1 ; unsigned int interlace_coding : 1 ; unsigned int modet_enable : 1 ; struct { unsigned int enable : 1 ; int pixel_threshold ; int motion_threshold ; int mb_threshold ; } modet [ 4 ] ; unsigned char modet_map [ 1624 ] ; unsigned char active_map [ 216 ] ; s#go7007_buffer * active_buf ; e#go7007_parser_state state ; int parse_length ; t#u16 modet_word ; int seen_frame ; t#u32 next_seq ; s#list_head stream ; t#wait_queue_head_t frame_waitq ; void ( * audio_deliver ) ( s#go7007 * , t#u8 * , int ) ; void * snd_context ; int i2c_adapter_online ; s#i2c_adapter i2c_adapter ; s#go7007_hpi_ops * hpi_ops ; void * hpi_context ; int interrupt_available ; t#wait_queue_head_t interrupt_waitq ; unsigned short interrupt_value ; unsigned short interrupt_data ; } 
go7007_read_interrupt int go7007_read_interrupt ( s#go7007 * , t#u16 * , t#u16 * ) 
go7007_read_addr int go7007_read_addr ( s#go7007 * , t#u16 , t#u16 * ) 
go7007_boot_encoder int go7007_boot_encoder ( s#go7007 * , int ) 
go7007_register_encoder int go7007_register_encoder ( s#go7007 * ) 
go7007_parse_video_stream void go7007_parse_video_stream ( s#go7007 * , t#u8 * , int ) 
go7007_alloc s#go7007 * go7007_alloc ( s#go7007_board_info * , s#device * ) 
go7007_remove void go7007_remove ( s#go7007 * ) 

/* drivers/staging/go7007/snd-go7007.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##v4l2_events
s##tuner_setup
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
go7007_snd_init int go7007_snd_init ( s#go7007 * ) 
go7007_snd_remove int go7007_snd_remove ( s#go7007 * ) 

/* drivers/staging/iio/addac/adt7316.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
adt7316_disable int adt7316_disable ( s#device * ) 
adt7316_enable int adt7316_enable ( s#device * ) 
s#adt7316_bus struct adt7316_bus { void * client ; int irq ; int irq_flags ; int ( * read ) ( void * , t#u8 , t#u8 * ) ; int ( * write ) ( void * , t#u8 , t#u8 ) ; int ( * multi_read ) ( void * , t#u8 , t#u8 , t#u8 * ) ; int ( * multi_write ) ( void * , t#u8 , t#u8 , t#u8 * ) ; } 
adt7316_probe int adt7316_probe ( s#device * , s#adt7316_bus * , const char * ) 
adt7316_remove int adt7316_remove ( s#device * ) 

/* drivers/staging/iio/industrialio-core.o */
iio_devt extern t#dev_t iio_devt 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
iio_bus_type extern s#bus_type iio_bus_type 
s#iio_handler struct iio_handler { s#cdev chrdev ; int id ; unsigned long flags ; void * private ; } 
s#iio_event_interface struct iio_event_interface { s#device dev ; s#iio_handler handler ; t#wait_queue_head_t wait ; s#mutex event_list_lock ; s#list_head det_events ; int max_events ; int current_events ; s#list_head dev_attr_list ; } 
s##iio_ring_buffer
s##iio_trigger
s##iio_poll_func
e#iio_chan_type enum iio_chan_type { IIO_IN , IIO_CURRENT , IIO_POWER , IIO_ACCEL , IIO_IN_DIFF , IIO_GYRO , IIO_MAGN , IIO_LIGHT , IIO_INTENSITY , IIO_PROXIMITY , IIO_TEMP , IIO_INCLI , IIO_ROT , IIO_ANGL , IIO_TIMESTAMP , } 
s#iio_chan_spec struct iio_chan_spec { e#iio_chan_type type ; int channel ; int channel2 ; unsigned long address ; int scan_index ; struct { char sign ; t#u8 realbits ; t#u8 storagebits ; t#u8 shift ; } scan_type ; const long info_mask ; const long event_mask ; const char * extend_name ; unsigned processed_val : 1 ; unsigned modified : 1 ; unsigned indexed : 1 ; } 
s#iio_info struct iio_info { s#module * driver_module ; int num_interrupt_lines ; s#attribute_group * event_attrs ; const s#attribute_group * attrs ; int ( * read_raw ) ( s#iio_dev * , s#iio_chan_spec const * , int * , int * , long ) ; int ( * write_raw ) ( s#iio_dev * , s#iio_chan_spec const * , int , int , long ) ; int ( * read_event_config ) ( s#iio_dev * , int ) ; int ( * write_event_config ) ( s#iio_dev * , int , int ) ; int ( * read_event_value ) ( s#iio_dev * , int , int * ) ; int ( * write_event_value ) ( s#iio_dev * , int , int ) ; } 
s#iio_dev struct iio_dev { int id ; void * dev_data ; int modes ; int currentmode ; s#device dev ; s#iio_event_interface * event_interfaces ; s#iio_ring_buffer * ring ; s#mutex mlock ; t#u32 * available_scan_masks ; s#iio_trigger * trig ; s#iio_poll_func * pollfunc ; s#iio_chan_spec const * channels ; int num_channels ; s#list_head channel_attr_list ; const char * name ; const s#iio_info * info ; } 
iio_push_event int iio_push_event ( s#iio_dev * , int , int , t#s64 ) 
iio_read_const_attr t#ssize_t iio_read_const_attr ( s#device * , s#device_attribute * , char * ) 
s#ida_bitmap struct ida_bitmap { long nr_busy ; unsigned long bitmap [ ( 128 / sizeof ( long ) - 1 ) ] ; } 
s#ida struct ida { s#idr idr ; s#ida_bitmap * free_bitmap ; } 
iio_get_new_ida_val int iio_get_new_ida_val ( s#ida * ) 
iio_free_ida_val void iio_free_ida_val ( s#ida * , int ) 
iio_allocate_device s#iio_dev * iio_allocate_device ( int ) 
iio_free_device void iio_free_device ( s#iio_dev * ) 
iio_device_register int iio_device_register ( s#iio_dev * ) 
iio_device_unregister void iio_device_unregister ( s#iio_dev * ) 

/* drivers/staging/iio/industrialio-ring.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
iio_ring_access_release void iio_ring_access_release ( s#device * ) 
s##iio_trigger
s##iio_poll_func
s#iio_ring_access_funcs struct iio_ring_access_funcs { void ( * mark_in_use ) ( s#iio_ring_buffer * ) ; void ( * unmark_in_use ) ( s#iio_ring_buffer * ) ; int ( * store_to ) ( s#iio_ring_buffer * , t#u8 * , t#s64 ) ; int ( * read_last ) ( s#iio_ring_buffer * , t#u8 * ) ; int ( * read_first_n ) ( s#iio_ring_buffer * , t#size_t , char * ) ; int ( * mark_param_change ) ( s#iio_ring_buffer * ) ; int ( * request_update ) ( s#iio_ring_buffer * ) ; int ( * get_bytes_per_datum ) ( s#iio_ring_buffer * ) ; int ( * set_bytes_per_datum ) ( s#iio_ring_buffer * , t#size_t ) ; int ( * get_length ) ( s#iio_ring_buffer * ) ; int ( * set_length ) ( s#iio_ring_buffer * , int ) ; int ( * is_enabled ) ( s#iio_ring_buffer * ) ; int ( * enable ) ( s#iio_ring_buffer * ) ; } 
s#iio_ring_setup_ops struct iio_ring_setup_ops { int ( * preenable ) ( s#iio_dev * ) ; int ( * postenable ) ( s#iio_dev * ) ; int ( * predisable ) ( s#iio_dev * ) ; int ( * postdisable ) ( s#iio_dev * ) ; } 
s#iio_ring_buffer struct iio_ring_buffer { s#device dev ; s#iio_dev * indio_dev ; s#module * owner ; int length ; int bytes_per_datum ; int bpe ; s#attribute_group * scan_el_attrs ; int scan_count ; unsigned long scan_mask ; t#bool scan_timestamp ; s#iio_handler access_handler ; const s#iio_ring_access_funcs * access ; const s#iio_ring_setup_ops * setup_ops ; s#list_head scan_el_dev_attr_list ; t#wait_queue_head_t pollq ; t#bool stufftoread ; } 
iio_ring_buffer_init void iio_ring_buffer_init ( s#iio_ring_buffer * , s#iio_dev * ) 
iio_ring_buffer_register_ex int iio_ring_buffer_register_ex ( s#iio_ring_buffer * , int , const s#iio_chan_spec * , int ) 
iio_ring_buffer_unregister void iio_ring_buffer_unregister ( s#iio_ring_buffer * ) 
iio_read_ring_length t#ssize_t iio_read_ring_length ( s#device * , s#device_attribute * , char * ) 
iio_write_ring_length t#ssize_t iio_write_ring_length ( s#device * , s#device_attribute * , const char * , t#size_t ) 
iio_read_ring_bytes_per_datum t#ssize_t iio_read_ring_bytes_per_datum ( s#device * , s#device_attribute * , char * ) 
iio_store_ring_enable t#ssize_t iio_store_ring_enable ( s#device * , s#device_attribute * , const char * , t#size_t ) 
iio_show_ring_enable t#ssize_t iio_show_ring_enable ( s#device * , s#device_attribute * , char * ) 
iio_sw_ring_preenable int iio_sw_ring_preenable ( s#iio_dev * ) 

/* drivers/staging/iio/industrialio-trigger.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##msi_desc
s##seq_file
s#iio_subirq struct iio_subirq { t#bool enabled ; } 
s#iio_trigger struct iio_trigger { int id ; const char * name ; s#device dev ; void * private_data ; s#list_head list ; s#list_head alloc_list ; s#module * owner ; int use_count ; int ( * set_trigger_state ) ( s#iio_trigger * , t#bool ) ; int ( * try_reenable ) ( s#iio_trigger * ) ; s#irq_chip subirq_chip ; int subirq_base ; s#iio_subirq subirqs [ 2 ] ; unsigned long pool [ ( ( ( 2 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#mutex pool_lock ; } 
iio_trigger_register int iio_trigger_register ( s#iio_trigger * ) 
iio_trigger_unregister void iio_trigger_unregister ( s#iio_trigger * ) 
iio_trigger_poll void iio_trigger_poll ( s#iio_trigger * , t#s64 ) 
iio_trigger_generic_data_rdy_poll t#irqreturn_t iio_trigger_generic_data_rdy_poll ( int , void * ) 
iio_trigger_poll_chained void iio_trigger_poll_chained ( s#iio_trigger * , t#s64 ) 
iio_trigger_notify_done void iio_trigger_notify_done ( s#iio_trigger * ) 
s#iio_poll_func struct iio_poll_func { void * private_data ; t#irqreturn_t ( * h ) ( int , void * ) ; t#irqreturn_t ( * thread ) ( int , void * ) ; int type ; char * name ; int irq ; t#s64 timestamp ; } 
iio_trigger_attach_poll_func int iio_trigger_attach_poll_func ( s#iio_trigger * , s#iio_poll_func * ) 
iio_trigger_dettach_poll_func int iio_trigger_dettach_poll_func ( s#iio_trigger * , s#iio_poll_func * ) 
iio_pollfunc_store_time t#irqreturn_t iio_pollfunc_store_time ( int , void * ) 
iio_alloc_pollfunc s#iio_poll_func * iio_alloc_pollfunc ( t#irqreturn_t ( * ) ( int , void * ) , t#irqreturn_t ( * ) ( int , void * ) , int , void * , const char * , ... ) 
iio_dealloc_pollfunc void iio_dealloc_pollfunc ( s#iio_poll_func * ) 
iio_allocate_trigger s#iio_trigger * iio_allocate_trigger ( const char * , ... ) 
iio_free_trigger void iio_free_trigger ( s#iio_trigger * ) 
s##file_operations
s##iio_ring_buffer
iio_device_register_trigger_consumer int iio_device_register_trigger_consumer ( s#iio_dev * ) 
iio_device_unregister_trigger_consumer int iio_device_unregister_trigger_consumer ( s#iio_dev * ) 
iio_triggered_ring_postenable int iio_triggered_ring_postenable ( s#iio_dev * ) 
iio_triggered_ring_predisable int iio_triggered_ring_predisable ( s#iio_dev * ) 

/* drivers/staging/iio/kfifo_buf.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##file_operations
s##iio_trigger
s##iio_poll_func
iio_kfifo_allocate s#iio_ring_buffer * iio_kfifo_allocate ( s#iio_dev * ) 
iio_kfifo_free void iio_kfifo_free ( s#iio_ring_buffer * ) 
kfifo_access_funcs extern const s#iio_ring_access_funcs kfifo_access_funcs 

/* drivers/staging/iio/meter/ade7854.o */
s##spi_device
s##i2c_client
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##file_operations
s##iio_ring_buffer
s##iio_trigger
s##iio_poll_func
s#ade7854_state struct ade7854_state { s#spi_device * spi ; s#i2c_client * i2c ; s#iio_dev * indio_dev ; t#u8 * tx ; t#u8 * rx ; int ( * read_reg_8 ) ( s#device * , t#u16 , t#u8 * ) ; int ( * read_reg_16 ) ( s#device * , t#u16 , t#u16 * ) ; int ( * read_reg_24 ) ( s#device * , t#u16 , t#u32 * ) ; int ( * read_reg_32 ) ( s#device * , t#u16 , t#u32 * ) ; int ( * write_reg_8 ) ( s#device * , t#u16 , t#u8 ) ; int ( * write_reg_16 ) ( s#device * , t#u16 , t#u16 ) ; int ( * write_reg_24 ) ( s#device * , t#u16 , t#u32 ) ; int ( * write_reg_32 ) ( s#device * , t#u16 , t#u32 ) ; int irq ; s#mutex buf_lock ; } 
ade7854_probe extern int ade7854_probe ( s#ade7854_state * , s#device * ) 
ade7854_remove extern int ade7854_remove ( s#ade7854_state * ) 

/* drivers/staging/iio/ring_sw.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##msi_desc
iio_sw_rb_allocate s#iio_ring_buffer * iio_sw_rb_allocate ( s#iio_dev * ) 
iio_sw_rb_free void iio_sw_rb_free ( s#iio_ring_buffer * ) 
ring_sw_access_funcs extern const s#iio_ring_access_funcs ring_sw_access_funcs 

/* drivers/staging/rtl8192u/ieee80211/dot11d.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s#ieee80211_security struct ieee80211_security { t#u16 active_key : 2 , enabled : 1 , auth_mode : 2 , auth_algo : 4 , unicast_uses_group : 1 , encrypt : 1 ; t#u8 key_sizes [ 4 ] ; t#u8 keys [ 4 ] [ 32 ] ; t#u8 level ; t#u16 flags ; } 
e#_RT_PS_MODE enum _RT_PS_MODE { eActive , eMaxPs , eFastPs } 
t#RT_PS_MODE typedef e#_RT_PS_MODE RT_PS_MODE 
e#_RT_RF_POWER_STATE enum _RT_RF_POWER_STATE { eRfOn , eRfSleep , eRfOff } 
t#RT_RF_POWER_STATE typedef e#_RT_RF_POWER_STATE RT_RF_POWER_STATE 
t#RT_RF_CHANGE_SOURCE typedef t#u32 RT_RF_CHANGE_SOURCE 
e#_HT_SPEC_VER enum _HT_SPEC_VER { HT_SPEC_VER_IEEE = 0 , HT_SPEC_VER_EWC = 1 , } 
t#HT_SPEC_VER typedef e#_HT_SPEC_VER HT_SPEC_VER 
s#_HT_CAPABILITY_ELE struct _HT_CAPABILITY_ELE { t#u8 AdvCoding : 1 ; t#u8 ChlWidth : 1 ; t#u8 MimoPwrSave : 2 ; t#u8 GreenField : 1 ; t#u8 ShortGI20Mhz : 1 ; t#u8 ShortGI40Mhz : 1 ; t#u8 TxSTBC : 1 ; t#u8 RxSTBC : 2 ; t#u8 DelayBA : 1 ; t#u8 MaxAMSDUSize : 1 ; t#u8 DssCCk : 1 ; t#u8 PSMP : 1 ; t#u8 Rsvd1 : 1 ; t#u8 LSigTxopProtect : 1 ; t#u8 MaxRxAMPDUFactor : 2 ; t#u8 MPDUDensity : 3 ; t#u8 Rsvd2 : 3 ; t#u8 MCS [ 16 ] ; t#u16 ExtHTCapInfo ; t#u8 TxBFCap [ 4 ] ; t#u8 ASCap ; } 
t#HT_CAPABILITY_ELE typedef s#_HT_CAPABILITY_ELE __attribute__ ( ( packed ) ) HT_CAPABILITY_ELE 
s#_HT_INFORMATION_ELE struct _HT_INFORMATION_ELE { t#u8 ControlChl ; t#u8 ExtChlOffset : 2 ; t#u8 RecommemdedTxWidth : 1 ; t#u8 RIFS : 1 ; t#u8 PSMPAccessOnly : 1 ; t#u8 SrvIntGranularity : 3 ; t#u8 OptMode : 2 ; t#u8 NonGFDevPresent : 1 ; t#u8 Revd1 : 5 ; t#u8 Revd2 : 8 ; t#u8 Rsvd3 : 6 ; t#u8 DualBeacon : 1 ; t#u8 DualCTSProtect : 1 ; t#u8 SecondaryBeacon : 1 ; t#u8 LSigTxopProtectFull : 1 ; t#u8 PcoActive : 1 ; t#u8 PcoPhase : 1 ; t#u8 Rsvd4 : 4 ; t#u8 BasicMSC [ 16 ] ; } 
t#HT_INFORMATION_ELE typedef s#_HT_INFORMATION_ELE __attribute__ ( ( packed ) ) HT_INFORMATION_ELE 
e#_HT_AGGRE_MODE_E enum _HT_AGGRE_MODE_E { HT_AGG_AUTO = 0 , HT_AGG_FORCE_ENABLE = 1 , HT_AGG_FORCE_DISABLE = 2 , } 
t#HT_AGGRE_MODE_E typedef e#_HT_AGGRE_MODE_E HT_AGGRE_MODE_E 
e#_HT_EXTCHNL_OFFSET enum _HT_EXTCHNL_OFFSET { HT_EXTCHNL_OFFSET_NO_EXT = 0 , HT_EXTCHNL_OFFSET_UPPER = 1 , HT_EXTCHNL_OFFSET_NO_DEF = 2 , HT_EXTCHNL_OFFSET_LOWER = 3 , } 
t#HT_EXTCHNL_OFFSET typedef e#_HT_EXTCHNL_OFFSET HT_EXTCHNL_OFFSET 
e#_CHNLOP enum _CHNLOP { CHNLOP_NONE = 0 , CHNLOP_SCAN = 1 , CHNLOP_SWBW = 2 , CHNLOP_SWCHNL = 3 , } 
t#CHNLOP typedef e#_CHNLOP CHNLOP 
s#_RT_HIGH_THROUGHPUT struct _RT_HIGH_THROUGHPUT { t#u8 bEnableHT ; t#u8 bCurrentHTSupport ; t#u8 bRegBW40MHz ; t#u8 bCurBW40MHz ; t#u8 bRegShortGI40MHz ; t#u8 bCurShortGI40MHz ; t#u8 bRegShortGI20MHz ; t#u8 bCurShortGI20MHz ; t#u8 bRegSuppCCK ; t#u8 bCurSuppCCK ; t#HT_SPEC_VER ePeerHTSpecVer ; t#HT_CAPABILITY_ELE SelfHTCap ; t#HT_INFORMATION_ELE SelfHTInfo ; t#u8 PeerHTCapBuf [ 32 ] ; t#u8 PeerHTInfoBuf [ 32 ] ; t#u8 bAMSDU_Support ; t#u16 nAMSDU_MaxSize ; t#u8 bCurrent_AMSDU_Support ; t#u16 nCurrent_AMSDU_MaxSize ; t#u8 bAMPDUEnable ; t#u8 bCurrentAMPDUEnable ; t#u8 AMPDU_Factor ; t#u8 CurrentAMPDUFactor ; t#u8 MPDU_Density ; t#u8 CurrentMPDUDensity ; t#HT_AGGRE_MODE_E ForcedAMPDUMode ; t#u8 ForcedAMPDUFactor ; t#u8 ForcedMPDUDensity ; t#HT_AGGRE_MODE_E ForcedAMSDUMode ; t#u16 ForcedAMSDUMaxSize ; t#u8 bForcedShortGI ; t#u8 CurrentOpMode ; t#u8 SelfMimoPs ; t#u8 PeerMimoPs ; t#HT_EXTCHNL_OFFSET CurSTAExtChnlOffset ; t#u8 bCurTxBW40MHz ; t#u8 PeerBandwidth ; t#u8 bSwBwInProgress ; t#CHNLOP ChnlOp ; t#u8 SwBwStep ; t#u8 bRegRT2RTAggregation ; t#u8 bCurrentRT2RTAggregation ; t#u8 bCurrentRT2RTLongSlotTime ; t#u8 szRT2RTAggBuffer [ 10 ] ; t#u8 bRegRxReorderEnable ; t#u8 bCurRxReorderEnable ; t#u8 RxReorderWinSize ; t#u8 RxReorderPendingTime ; t#u16 RxReorderDropCounter ; t#u8 bIsPeerBcm ; t#u8 IOTPeer ; t#u32 IOTAction ; } 
t#PRT_HIGH_THROUGHPUT typedef s#_RT_HIGH_THROUGHPUT __attribute__ ( ( packed ) ) * PRT_HIGH_THROUGHPUT 
u#_QOS_TSINFO union _QOS_TSINFO { t#u8 charData [ 3 ] ; struct { t#u8 ucTrafficType : 1 ; t#u8 ucTSID : 4 ; t#u8 ucDirection : 2 ; t#u8 ucAccessPolicy : 2 ; t#u8 ucAggregation : 1 ; t#u8 ucPSB : 1 ; t#u8 ucUP : 3 ; t#u8 ucTSInfoAckPolicy : 2 ; t#u8 ucSchedule : 1 ; t#u8 ucReserved : 7 ; } field ; } 
t#QOS_TSINFO typedef u#_QOS_TSINFO QOS_TSINFO 
u#_TSPEC_BODY union _TSPEC_BODY { t#u8 charData [ 55 ] ; struct { t#QOS_TSINFO TSInfo ; t#u16 NominalMSDUsize ; t#u16 MaxMSDUsize ; t#u32 MinServiceItv ; t#u32 MaxServiceItv ; t#u32 InactivityItv ; t#u32 SuspenItv ; t#u32 ServiceStartTime ; t#u32 MinDataRate ; t#u32 MeanDataRate ; t#u32 PeakDataRate ; t#u32 MaxBurstSize ; t#u32 DelayBound ; t#u32 MinPhyRate ; t#u16 SurplusBandwidthAllowance ; t#u16 MediumTime ; } f ; } 
t#TSPEC_BODY typedef u#_TSPEC_BODY TSPEC_BODY 
s#_TYPE_GENERAL struct _TYPE_GENERAL { t#u8 Priority ; t#u8 ClassifierType ; t#u8 Mask ; } 
s#_TYPE0_ETH struct _TYPE0_ETH { t#u8 Priority ; t#u8 ClassifierType ; t#u8 Mask ; t#u8 SrcAddr [ 6 ] ; t#u8 DstAddr [ 6 ] ; t#u16 Type ; } 
s#_TYPE1_IPV4 struct _TYPE1_IPV4 { t#u8 Priority ; t#u8 ClassifierType ; t#u8 Mask ; t#u8 Version ; t#u8 SrcIP [ 4 ] ; t#u8 DstIP [ 4 ] ; t#u16 SrcPort ; t#u16 DstPort ; t#u8 DSCP ; t#u8 Protocol ; t#u8 Reserved ; } 
s#_TYPE1_IPV6 struct _TYPE1_IPV6 { t#u8 Priority ; t#u8 ClassifierType ; t#u8 Mask ; t#u8 Version ; t#u8 SrcIP [ 16 ] ; t#u8 DstIP [ 16 ] ; t#u16 SrcPort ; t#u16 DstPort ; t#u8 FlowLabel [ 3 ] ; } 
s#_TYPE2_8021Q struct _TYPE2_8021Q { t#u8 Priority ; t#u8 ClassifierType ; t#u8 Mask ; t#u16 TagType ; } 
u#_QOS_TCLAS union _QOS_TCLAS { s#_TYPE_GENERAL TYPE_GENERAL ; s#_TYPE0_ETH TYPE0_ETH ; s#_TYPE1_IPV4 TYPE1_IPV4 ; s#_TYPE1_IPV6 TYPE1_IPV6 ; s#_TYPE2_8021Q TYPE2_8021Q ; } 
t#QOS_TCLAS typedef u#_QOS_TCLAS QOS_TCLAS 
s#_TS_COMMON_INFO struct _TS_COMMON_INFO { s#list_head List ; s#timer_list SetupTimer ; s#timer_list InactTimer ; t#u8 Addr [ 6 ] ; t#TSPEC_BODY TSpec ; t#QOS_TCLAS TClass [ 4 ] ; t#u8 TClasProc ; t#u8 TClasNum ; } 
t#TS_COMMON_INFO typedef s#_TS_COMMON_INFO TS_COMMON_INFO 
u#_BA_PARAM_SET union _BA_PARAM_SET { t#u8 charData [ 2 ] ; t#u16 shortData ; struct { t#u16 AMSDU_Support : 1 ; t#u16 BAPolicy : 1 ; t#u16 TID : 4 ; t#u16 BufferSize : 10 ; } field ; } 
t#BA_PARAM_SET typedef u#_BA_PARAM_SET BA_PARAM_SET 
u#_SEQUENCE_CONTROL union _SEQUENCE_CONTROL { t#u16 ShortData ; struct { t#u16 FragNum : 4 ; t#u16 SeqNum : 12 ; } field ; } 
t#SEQUENCE_CONTROL typedef u#_SEQUENCE_CONTROL SEQUENCE_CONTROL 
s#_BA_RECORD struct _BA_RECORD { s#timer_list Timer ; t#u8 bValid ; t#u8 DialogToken ; t#BA_PARAM_SET BaParamSet ; t#u16 BaTimeoutValue ; t#SEQUENCE_CONTROL BaStartSeqCtrl ; } 
t#BA_RECORD typedef s#_BA_RECORD BA_RECORD 
s#_TX_TS_RECORD struct _TX_TS_RECORD { t#TS_COMMON_INFO TsCommonInfo ; t#u16 TxCurSeq ; t#BA_RECORD TxPendingBARecord ; t#BA_RECORD TxAdmittedBARecord ; t#u8 bAddBaReqInProgress ; t#u8 bAddBaReqDelayed ; t#u8 bUsingBa ; s#timer_list TsAddBaTimer ; t#u8 num ; } 
t#TX_TS_RECORD typedef s#_TX_TS_RECORD TX_TS_RECORD 
s#_RX_TS_RECORD struct _RX_TS_RECORD { t#TS_COMMON_INFO TsCommonInfo ; t#u16 RxIndicateSeq ; t#u16 RxTimeoutIndicateSeq ; s#list_head RxPendingPktList ; s#timer_list RxPktPendingTimer ; t#BA_RECORD RxAdmittedBARecord ; t#u16 RxLastSeqNum ; t#u8 RxLastFragNum ; t#u8 num ; } 
t#RX_TS_RECORD typedef s#_RX_TS_RECORD RX_TS_RECORD 
s#ieee80211_rxb struct ieee80211_rxb { t#u8 nr_subframes ; s#sk_buff * subframes [ 64 ] ; t#u8 dst [ 6 ] ; t#u8 src [ 6 ] ; } 
s#_RX_REORDER_ENTRY struct _RX_REORDER_ENTRY { s#list_head List ; t#u16 SeqNum ; s#ieee80211_rxb * prxb ; } 
t#RX_REORDER_ENTRY typedef s#_RX_REORDER_ENTRY RX_REORDER_ENTRY 
s#ieee80211_stats struct ieee80211_stats { unsigned int tx_unicast_frames ; unsigned int tx_multicast_frames ; unsigned int tx_fragments ; unsigned int tx_unicast_octets ; unsigned int tx_multicast_octets ; unsigned int tx_deferred_transmissions ; unsigned int tx_single_retry_frames ; unsigned int tx_multiple_retry_frames ; unsigned int tx_retry_limit_exceeded ; unsigned int tx_discards ; unsigned int rx_unicast_frames ; unsigned int rx_multicast_frames ; unsigned int rx_fragments ; unsigned int rx_unicast_octets ; unsigned int rx_multicast_octets ; unsigned int rx_fcs_errors ; unsigned int rx_discards_no_buffer ; unsigned int tx_discards_wrong_sa ; unsigned int rx_discards_undecryptable ; unsigned int rx_message_in_msg_fragments ; unsigned int rx_message_in_bad_msg_fragments ; } 
s#ieee80211_softmac_stats struct ieee80211_softmac_stats { unsigned int rx_ass_ok ; unsigned int rx_ass_err ; unsigned int rx_probe_rq ; unsigned int tx_probe_rs ; unsigned int tx_beacons ; unsigned int rx_auth_rq ; unsigned int rx_auth_rs_ok ; unsigned int rx_auth_rs_err ; unsigned int tx_auth_rq ; unsigned int no_auth_rs ; unsigned int no_ass_rs ; unsigned int tx_ass_rq ; unsigned int rx_ass_rq ; unsigned int tx_probe_rq ; unsigned int reassoc ; unsigned int swtxstop ; unsigned int swtxawake ; unsigned char CurrentShowTxate ; unsigned char last_packet_rate ; unsigned int txretrycount ; } 
s#ieee80211_qos_parameters struct ieee80211_qos_parameters { t#__le16 cw_min [ 4 ] ; t#__le16 cw_max [ 4 ] ; t#u8 aifs [ 4 ] ; t#u8 flag [ 4 ] ; t#__le16 tx_op_limit [ 4 ] ; } 
s#ieee80211_qos_data struct ieee80211_qos_data { s#ieee80211_qos_parameters parameters ; int active ; int supported ; t#u8 param_count ; t#u8 old_param_count ; } 
s#ieee80211_rx_stats struct ieee80211_rx_stats { t#u32 mac_time [ 2 ] ; t#s8 rssi ; t#u8 signal ; t#u8 noise ; t#u16 rate ; t#u8 received_channel ; t#u8 control ; t#u8 mask ; t#u8 freq ; t#u16 len ; t#u64 tsf ; t#u32 beacon_time ; t#u8 nic_type ; t#u16 Length ; t#u8 SignalQuality ; t#s32 RecvSignalPower ; t#s8 RxPower ; t#u8 SignalStrength ; t#u16 bHwError : 1 ; t#u16 bCRC : 1 ; t#u16 bICV : 1 ; t#u16 bShortPreamble : 1 ; t#u16 Antenna : 1 ; t#u16 Decrypted : 1 ; t#u16 Wakeup : 1 ; t#u16 Reserved0 : 1 ; t#u8 AGC ; t#u32 TimeStampLow ; t#u32 TimeStampHigh ; t#bool bShift ; t#bool bIsQosData ; t#u8 UserPriority ; t#u8 RxDrvInfoSize ; t#u8 RxBufShift ; t#bool bIsAMPDU ; t#bool bFirstMPDU ; t#bool bContainHTC ; t#bool RxIs40MHzPacket ; t#u32 RxPWDBAll ; t#u8 RxMIMOSignalStrength [ 4 ] ; t#s8 RxMIMOSignalQuality [ 2 ] ; t#bool bPacketMatchBSSID ; t#bool bIsCCK ; t#bool bPacketToSelf ; t#u8 * virtual_address ; t#u16 packetlength ; t#u16 fraglength ; t#u16 fragoffset ; t#u16 ntotalfrag ; t#bool bisrxaggrsubframe ; t#bool bPacketBeacon ; t#bool bToSelfBA ; char cck_adc_pwdb [ 4 ] ; t#u16 Seq_Num ; } 
s#ieee80211_tim_parameters struct ieee80211_tim_parameters { t#u8 tim_count ; t#u8 tim_period ; } 
s#ieee80211_wmm_ac_param struct ieee80211_wmm_ac_param { t#u8 ac_aci_acm_aifsn ; t#u8 ac_ecwmin_ecwmax ; t#u16 ac_txop_limit ; } 
s#_BSS_HT struct _BSS_HT { t#u8 bdSupportHT ; t#u8 bdHTCapBuf [ 32 ] ; t#u16 bdHTCapLen ; t#u8 bdHTInfoBuf [ 32 ] ; t#u16 bdHTInfoLen ; t#HT_SPEC_VER bdHTSpecVer ; t#u8 bdRT2RTAggregation ; t#u8 bdRT2RTLongSlotTime ; } 
t#BSS_HT typedef s#_BSS_HT __attribute__ ( ( packed ) ) BSS_HT 
s#ieee80211_network struct ieee80211_network { t#u8 bssid [ 6 ] ; t#u8 channel ; t#u8 ssid [ 32 + 1 ] ; t#u8 ssid_len ; s#ieee80211_qos_data qos_data ; t#bool bWithAironetIE ; t#bool bCkipSupported ; t#bool bCcxRmEnable ; t#u16 CcxRmState [ 2 ] ; t#bool bMBssidValid ; t#u8 MBssidMask ; t#u8 MBssid [ 6 ] ; t#bool bWithCcxVerNum ; t#u8 BssCcxVerNumber ; s#ieee80211_rx_stats stats ; t#u16 capability ; t#u8 rates [ ( ( u8 ) 12 ) ] ; t#u8 rates_len ; t#u8 rates_ex [ ( ( u8 ) 16 ) ] ; t#u8 rates_ex_len ; unsigned long last_scanned ; t#u8 mode ; t#u32 flags ; t#u32 last_associate ; t#u32 time_stamp [ 2 ] ; t#u16 beacon_interval ; t#u16 listen_interval ; t#u16 atim_window ; t#u8 erp_value ; t#u8 wpa_ie [ 64 ] ; t#size_t wpa_ie_len ; t#u8 rsn_ie [ 64 ] ; t#size_t rsn_ie_len ; s#ieee80211_tim_parameters tim ; t#u8 dtim_period ; t#u8 dtim_data ; t#u32 last_dtim_sta_time [ 2 ] ; t#u8 wmm_info ; s#ieee80211_wmm_ac_param wmm_param [ 4 ] ; t#u8 QoS_Enable ; t#u8 Turbo_Enable ; t#u16 CountryIeLen ; t#u8 CountryIeBuf [ 0xff ] ; t#BSS_HT bssht ; t#bool broadcom_cap_exist ; t#bool ralink_cap_exist ; t#bool atheros_cap_exist ; t#bool cisco_cap_exist ; t#bool unknown_cap_exist ; t#bool berp_info_valid ; t#bool buseprotection ; s#list_head list ; } 
s#ieee80211_crypto_ops struct ieee80211_crypto_ops { const char * name ; void * ( * init ) ( int ) ; void ( * deinit ) ( void * ) ; int ( * encrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * encrypt_msdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_msdu ) ( s#sk_buff * , int , int , void * ) ; int ( * set_key ) ( void * , int , t#u8 * , void * ) ; int ( * get_key ) ( void * , int , t#u8 * , void * ) ; char * ( * print_stats ) ( char * , void * ) ; int extra_prefix_len , extra_postfix_len ; s#module * owner ; } 
s#ieee80211_crypt_data struct ieee80211_crypt_data { s#list_head list ; s#ieee80211_crypto_ops * ops ; void * priv ; t#atomic_t refcnt ; } 
s#ieee80211_frag_entry struct ieee80211_frag_entry { unsigned long first_frag_time ; unsigned int seq ; unsigned int last_frag ; s#sk_buff * skb ; t#u8 src_addr [ 6 ] ; t#u8 dst_addr [ 6 ] ; } 
e#ieee80211_state enum ieee80211_state { IEEE80211_NOLINK = 0 , IEEE80211_ASSOCIATING , IEEE80211_ASSOCIATING_RETRY , IEEE80211_ASSOCIATING_AUTHENTICATING , IEEE80211_ASSOCIATING_AUTHENTICATED , IEEE80211_LINKED , IEEE80211_LINKED_SCANNING , } 
e#_Fsync_State enum _Fsync_State { Default_Fsync , HW_Fsync , SW_Fsync } 
t#Fsync_State typedef e#_Fsync_State Fsync_State 
s#_bandwidth_autoswitch struct _bandwidth_autoswitch { long threshold_20Mhzto40Mhz ; long threshold_40Mhzto20Mhz ; t#bool bforced_tx20Mhz ; t#bool bautoswitch_enable ; } 
t#bandwidth_autoswitch typedef s#_bandwidth_autoswitch bandwidth_autoswitch 
s#_RT_LINK_DETECT_T struct _RT_LINK_DETECT_T { t#u32 NumRecvBcnInPeriod ; t#u32 NumRecvDataInPeriod ; t#u32 RxBcnNum [ 10 ] ; t#u32 RxDataNum [ 10 ] ; t#u16 SlotNum ; t#u16 SlotIndex ; t#u32 NumTxOkInPeriod ; t#u32 NumRxOkInPeriod ; t#bool bBusyTraffic ; } 
t#RT_LINK_DETECT_T typedef s#_RT_LINK_DETECT_T RT_LINK_DETECT_T 
e#_IPS_CALLBACK_FUNCION enum _IPS_CALLBACK_FUNCION { IPS_CALLBACK_NONE = 0 , IPS_CALLBACK_MGNT_LINK_REQUEST = 1 , IPS_CALLBACK_JOIN_REQUEST = 2 , } 
t#IPS_CALLBACK_FUNCION typedef e#_IPS_CALLBACK_FUNCION IPS_CALLBACK_FUNCION 
e#_RT_JOIN_ACTION enum _RT_JOIN_ACTION { RT_JOIN_INFRA = 1 , RT_JOIN_IBSS = 2 , RT_START_IBSS = 3 , RT_NO_ACTION = 4 , } 
t#RT_JOIN_ACTION typedef e#_RT_JOIN_ACTION RT_JOIN_ACTION 
s#_OCTET_STRING struct _OCTET_STRING { t#u8 * Octet ; t#u16 Length ; } 
t#OCTET_STRING typedef s#_OCTET_STRING OCTET_STRING 
s#_IbssParms struct _IbssParms { t#u16 atimWin ; } 
t#IbssParms typedef s#_IbssParms IbssParms 
s#_RT_POWER_SAVE_CONTROL struct _RT_POWER_SAVE_CONTROL { t#bool bInactivePs ; t#bool bIPSModeBackup ; t#bool bSwRfProcessing ; t#RT_RF_POWER_STATE eInactivePowerState ; s#work_struct InactivePsWorkItem ; s#timer_list InactivePsTimer ; t#IPS_CALLBACK_FUNCION ReturnPoint ; t#bool bTmpBssDesc ; t#RT_JOIN_ACTION tmpJoinAction ; s#ieee80211_network tmpBssDesc ; t#bool bTmpScanOnly ; t#bool bTmpActiveScan ; t#bool bTmpFilterHiddenAP ; t#bool bTmpUpdateParms ; t#u8 tmpSsidBuf [ 33 ] ; t#OCTET_STRING tmpSsid2Scan ; t#bool bTmpSsid2Scan ; t#u8 tmpNetworkType ; t#u8 tmpChannelNumber ; t#u16 tmpBcnPeriod ; t#u8 tmpDtimPeriod ; t#u16 tmpmCap ; t#OCTET_STRING tmpSuppRateSet ; t#u8 tmpSuppRateBuf [ 264 ] ; t#bool bTmpSuppRate ; t#IbssParms tmpIbpm ; t#bool bTmpIbpm ; t#bool bLeisurePs ; } 
t#RT_POWER_SAVE_CONTROL typedef s#_RT_POWER_SAVE_CONTROL RT_POWER_SAVE_CONTROL 
s#ieee80211_txb struct ieee80211_txb { t#u8 nr_frags ; t#u8 encrypted ; t#u8 queue_index ; t#u8 rts_included ; t#u16 reserved ; t#__le16 frag_size ; t#__le16 payload_size ; s#sk_buff * fragments [ 0 ] ; } 
s#tx_pending_t struct tx_pending_t { int frag ; s#ieee80211_txb * txb ; } 
s##workqueue_struct
s#ieee80211_hdr_3addr struct ieee80211_hdr_3addr { t#__le16 frame_ctl ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctl ; t#u8 payload [ 0 ] ; } 
s#ieee80211_info_element struct ieee80211_info_element { t#u8 id ; t#u8 len ; t#u8 data [ 0 ] ; } 
s#ieee80211_probe_response struct ieee80211_probe_response { s#ieee80211_hdr_3addr header ; t#u32 time_stamp [ 2 ] ; t#__le16 beacon_interval ; t#__le16 capability ; s#ieee80211_info_element info_element [ 0 ] ; } 
s#ieee80211_assoc_response_frame struct ieee80211_assoc_response_frame { s#ieee80211_hdr_3addr header ; t#__le16 capability ; t#__le16 status ; t#__le16 aid ; s#ieee80211_info_element info_element [ 0 ] ; } 
e#_HT_CHANNEL_WIDTH enum _HT_CHANNEL_WIDTH { HT_CHANNEL_WIDTH_20 = 0 , HT_CHANNEL_WIDTH_20_40 = 1 , } 
t#HT_CHANNEL_WIDTH typedef e#_HT_CHANNEL_WIDTH HT_CHANNEL_WIDTH 
s#ieee80211_device struct ieee80211_device { s#net_device * dev ; s#ieee80211_security sec ; t#u8 hwsec_active ; t#bool is_silent_reset ; t#bool ieee_up ; t#bool bSupportRemoteWakeUp ; t#RT_PS_MODE dot11PowerSaveMode ; t#bool actscanning ; t#bool beinretry ; t#RT_RF_POWER_STATE eRFPowerState ; t#RT_RF_CHANGE_SOURCE RfOffReason ; t#bool is_set_key ; t#PRT_HIGH_THROUGHPUT pHTInfo ; t#spinlock_t bw_spinlock ; t#spinlock_t reorder_spinlock ; t#u8 Regdot11HTOperationalRateSet [ 16 ] ; t#u8 dot11HTOperationalRateSet [ 16 ] ; t#u8 RegHTSuppRateSet [ 16 ] ; t#u8 HTCurrentOperaRate ; t#u8 HTHighestOperaRate ; t#u8 bTxDisableRateFallBack ; t#u8 bTxUseDriverAssingedRate ; t#atomic_t atm_chnlop ; t#atomic_t atm_swbw ; s#list_head Tx_TS_Admit_List ; s#list_head Tx_TS_Pending_List ; s#list_head Tx_TS_Unused_List ; t#TX_TS_RECORD TxTsRecord [ 16 ] ; s#list_head Rx_TS_Admit_List ; s#list_head Rx_TS_Pending_List ; s#list_head Rx_TS_Unused_List ; t#RX_TS_RECORD RxTsRecord [ 16 ] ; t#RX_REORDER_ENTRY RxReorderEntry [ 128 ] ; s#list_head RxReorder_Unused_List ; t#u8 ForcedPriority ; s#net_device_stats stats ; s#ieee80211_stats ieee_stats ; s#ieee80211_softmac_stats softmac_stats ; s#list_head network_free_list ; s#list_head network_list ; s#ieee80211_network * networks ; int scans ; int scan_age ; int iw_mode ; s#iw_spy_data spy_data ; t#spinlock_t lock ; t#spinlock_t wpax_suitlist_lock ; int tx_headroom ; t#u32 config ; int open_wep ; int auth_mode ; int reset_on_keychange ; int host_encrypt ; int host_encrypt_msdu ; int host_decrypt ; int host_mc_decrypt ; int host_strip_iv_icv ; int host_open_frag ; int host_build_iv ; int ieee802_1x ; t#bool bHalfWirelessN24GMode ; int wpa_enabled ; int drop_unencrypted ; int tkip_countermeasures ; int privacy_invoked ; t#size_t wpa_ie_len ; t#u8 * wpa_ie ; t#u8 ap_mac_addr [ 6 ] ; t#u16 pairwise_key_type ; t#u16 group_key_type ; s#list_head crypt_deinit_list ; s#ieee80211_crypt_data * crypt [ 4 ] ; int tx_keyidx ; s#timer_list crypt_deinit_timer ; int crypt_quiesced ; int bcrx_sta_key ; s#ieee80211_frag_entry frag_cache [ 17 ] [ 4 ] ; unsigned int frag_next_idx [ 17 ] ; t#u16 fts ; t#u16 rts ; t#u8 bssid [ 6 ] ; s#ieee80211_network current_network ; e#ieee80211_state state ; int short_slot ; int reg_mode ; int mode ; int modulation ; int freq_band ; int abg_true ; short sync_scan_hurryup ; int perfect_rssi ; int worst_rssi ; t#u16 prev_seq_ctl ; void * pDot11dInfo ; t#bool bGlobalDomain ; int rate ; int basic_rate ; short active_scan ; t#u16 softmac_features ; t#u16 seq_ctrl [ 5 ] ; t#u16 associate_seq ; t#u16 assoc_id ; short ps ; short sta_sleep ; int ps_timeout ; int ps_period ; s#tasklet_struct ps_task ; t#u32 ps_th ; t#u32 ps_tl ; short raw_tx ; short queue_stop ; short scanning ; short proto_started ; s#semaphore wx_sem ; s#semaphore scan_sem ; t#spinlock_t mgmt_tx_lock ; t#spinlock_t beacon_lock ; short beacon_txing ; short wap_set ; short ssid_set ; t#u8 wpax_type_set ; t#u32 wpax_type_notify ; char init_wmmparam_flag ; t#u8 qos_support ; s#list_head ibss_mac_hash [ 31 ] ; t#u16 last_rxseq_num [ 17 ] ; t#u16 last_rxfrag_num [ 17 ] ; unsigned long last_packet_time [ 17 ] ; unsigned long last_rx_ps_time ; s#sk_buff * mgmt_queue_ring [ 5 ] ; int mgmt_queue_head ; int mgmt_queue_tail ; t#u8 AsocRetryCount ; unsigned int hw_header ; s#sk_buff_head skb_waitQ [ 0x10 ] ; s#sk_buff_head skb_aggQ [ 0x10 ] ; s#sk_buff_head skb_drv_aggQ [ 0x10 ] ; t#u32 sta_edca_param [ 4 ] ; t#bool aggregation ; t#bool enable_rx_imm_BA ; t#bool bibsscoordinator ; t#bool bdynamic_txpower_enable ; t#bool bCTSToSelfEnable ; t#u8 CTSToSelfTH ; t#u32 fsync_time_interval ; t#u32 fsync_rate_bitmap ; t#u8 fsync_rssi_threshold ; t#bool bfsync_enable ; t#u8 fsync_multiple_timeinterval ; t#u32 fsync_firstdiff_ratethreshold ; t#u32 fsync_seconddiff_ratethreshold ; t#Fsync_State fsync_state ; t#bool bis_any_nonbepkts ; t#bandwidth_autoswitch bandwidth_auto_switch ; t#bool FwRWRF ; t#RT_LINK_DETECT_T LinkDetectInfo ; t#RT_POWER_SAVE_CONTROL PowerSaveControl ; s#tx_pending_t tx_pending ; s#timer_list associate_timer ; s#timer_list beacon_timer ; s#work_struct associate_complete_wq ; s#work_struct associate_procedure_wq ; s#delayed_work softmac_scan_wq ; s#delayed_work associate_retry_wq ; s#delayed_work start_ibss_wq ; s#work_struct wx_sync_scan_wq ; s#workqueue_struct * wq ; void ( * set_security ) ( s#net_device * , s#ieee80211_security * ) ; int ( * hard_start_xmit ) ( s#ieee80211_txb * , s#net_device * ) ; int ( * reset_port ) ( s#net_device * ) ; int ( * is_queue_full ) ( s#net_device * , int ) ; int ( * handle_management ) ( s#net_device * , s#ieee80211_network * , t#u16 ) ; int ( * is_qos_active ) ( s#net_device * , s#sk_buff * ) ; int ( * softmac_hard_start_xmit ) ( s#sk_buff * , s#net_device * ) ; void ( * softmac_data_hard_start_xmit ) ( s#sk_buff * , s#net_device * , int ) ; void ( * data_hard_stop ) ( s#net_device * ) ; void ( * data_hard_resume ) ( s#net_device * ) ; void ( * set_chan ) ( s#net_device * , short ) ; void ( * scan_syncro ) ( s#net_device * ) ; void ( * start_scan ) ( s#net_device * ) ; void ( * stop_scan ) ( s#net_device * ) ; void ( * link_change ) ( s#net_device * ) ; void ( * start_send_beacons ) ( s#net_device * , t#u16 ) ; void ( * stop_send_beacons ) ( s#net_device * ) ; void ( * sta_wake_up ) ( s#net_device * ) ; void ( * ps_request_tx_ack ) ( s#net_device * ) ; void ( * enter_sleep_state ) ( s#net_device * , t#u32 , t#u32 ) ; short ( * ps_is_queue_empty ) ( s#net_device * ) ; int ( * handle_beacon ) ( s#net_device * , s#ieee80211_probe_response * , s#ieee80211_network * ) ; int ( * handle_assoc_response ) ( s#net_device * , s#ieee80211_assoc_response_frame * , s#ieee80211_network * ) ; short ( * check_nic_enough_desc ) ( s#net_device * , int ) ; void ( * SetBWModeHandler ) ( s#net_device * , t#HT_CHANNEL_WIDTH , t#HT_EXTCHNL_OFFSET ) ; t#bool ( * GetNmodeSupportBySecCfg ) ( s#net_device * ) ; void ( * SetWirelessMode ) ( s#net_device * , t#u8 ) ; t#bool ( * GetHalfNmodeSupportByAPsHandler ) ( s#net_device * ) ; void ( * InitialGainHandler ) ( s#net_device * , t#u8 ) ; t#u8 priv [ 0 ] ; } 
Dot11d_Init void Dot11d_Init ( s#ieee80211_device * ) 
Dot11d_Reset void Dot11d_Reset ( s#ieee80211_device * ) 
Dot11d_UpdateCountryIe void Dot11d_UpdateCountryIe ( s#ieee80211_device * , t#u8 * , t#u16 , t#u8 * ) 
DOT11D_GetMaxTxPwrInDbm t#u8 DOT11D_GetMaxTxPwrInDbm ( s#ieee80211_device * , t#u8 ) 
DOT11D_ScanComplete void DOT11D_ScanComplete ( s#ieee80211_device * ) 
IsLegalChannel int IsLegalChannel ( s#ieee80211_device * , t#u8 ) 
ToLegalChannel int ToLegalChannel ( s#ieee80211_device * , t#u8 ) 

/* drivers/staging/rtl8192u/ieee80211/ieee80211_rx.o */
s##libipw_device
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##workqueue_struct
s#ieee80211_hdr_4addr struct ieee80211_hdr_4addr { t#__le16 frame_ctl ; t#__le16 duration_id ; t#u8 addr1 [ 6 ] ; t#u8 addr2 [ 6 ] ; t#u8 addr3 [ 6 ] ; t#__le16 seq_ctl ; t#u8 addr4 [ 6 ] ; t#u8 payload [ 0 ] ; } 
ieee80211_rx_mgt_rsl extern void ieee80211_rx_mgt_rsl ( s#ieee80211_device * , s#ieee80211_hdr_4addr * , s#ieee80211_rx_stats * ) 
ieee80211_rx_rsl extern int ieee80211_rx_rsl ( s#ieee80211_device * , s#sk_buff * , s#ieee80211_rx_stats * ) 

/* drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.o */
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
s##workqueue_struct
ieee80211_get_beacon_rsl extern s#sk_buff * ieee80211_get_beacon_rsl ( s#ieee80211_device * ) 
ieee80211_wake_queue_rsl extern void ieee80211_wake_queue_rsl ( s#ieee80211_device * ) 
ieee80211_stop_queue_rsl extern void ieee80211_stop_queue_rsl ( s#ieee80211_device * ) 
ieee80211_reset_queue_rsl extern void ieee80211_reset_queue_rsl ( s#ieee80211_device * ) 
ieee80211_softmac_stop_protocol_rsl extern void ieee80211_softmac_stop_protocol_rsl ( s#ieee80211_device * ) 
ieee80211_softmac_start_protocol_rsl extern void ieee80211_softmac_start_protocol_rsl ( s#ieee80211_device * ) 
ieee80211_is_shortslot_rsl extern short ieee80211_is_shortslot_rsl ( s#ieee80211_network ) 
ieee80211_is_54g_rsl extern short ieee80211_is_54g_rsl ( s#ieee80211_network ) 
ieee80211_wpa_supplicant_ioctl_rsl extern int ieee80211_wpa_supplicant_ioctl_rsl ( s#ieee80211_device * , s#iw_point * ) 
ieee80211_ps_tx_ack_rsl extern void ieee80211_ps_tx_ack_rsl ( s#ieee80211_device * , short ) 
ieee80211_softmac_xmit_rsl extern void ieee80211_softmac_xmit_rsl ( s#ieee80211_txb * , s#ieee80211_device * ) 
ieee80211_stop_send_beacons_rsl extern void ieee80211_stop_send_beacons_rsl ( s#ieee80211_device * ) 
notify_wx_assoc_event_rsl extern void notify_wx_assoc_event_rsl ( s#ieee80211_device * ) 
SendDisassociation_rsl void SendDisassociation_rsl ( s#ieee80211_device * , t#u8 * , t#u8 ) 
ieee80211_disassociate_rsl extern void ieee80211_disassociate_rsl ( s#ieee80211_device * ) 
ieee80211_start_send_beacons_rsl extern void ieee80211_start_send_beacons_rsl ( s#ieee80211_device * ) 
ieee80211_stop_scan_rsl extern void ieee80211_stop_scan_rsl ( s#ieee80211_device * ) 
ieee80211_send_probe_requests_rsl void ieee80211_send_probe_requests_rsl ( s#ieee80211_device * ) 
ieee80211_softmac_scan_syncro_rsl void ieee80211_softmac_scan_syncro_rsl ( s#ieee80211_device * ) 
ieee80211_start_scan_syncro_rsl extern void ieee80211_start_scan_syncro_rsl ( s#ieee80211_device * ) 

/* drivers/staging/rtl8192u/ieee80211/ieee80211_softmac_wx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
ieee80211_wx_get_essid_rsl extern int ieee80211_wx_get_essid_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_essid_rsl extern int ieee80211_wx_set_essid_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_rate_rsl extern int ieee80211_wx_set_rate_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_rate_rsl extern int ieee80211_wx_get_rate_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_wap_rsl extern int ieee80211_wx_set_wap_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_wap_rsl extern int ieee80211_wx_get_wap_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_mode_rsl extern int ieee80211_wx_set_mode_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_mode_rsl extern int ieee80211_wx_get_mode_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_scan_rsl extern int ieee80211_wx_set_scan_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_freq_rsl extern int ieee80211_wx_get_freq_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_freq_rsl extern int ieee80211_wx_set_freq_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_rawtx_rsl extern int ieee80211_wx_set_rawtx_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_name_rsl extern int ieee80211_wx_get_name_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_power_rsl extern int ieee80211_wx_set_power_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_power_rsl extern int ieee80211_wx_get_power_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wlan_frequencies_rsl extern const long ieee80211_wlan_frequencies_rsl [ ] 
ieee80211_wx_set_rts_rsl extern int ieee80211_wx_set_rts_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_rts_rsl extern int ieee80211_wx_get_rts_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 

/* drivers/staging/rtl8192u/ieee80211/ieee80211_tx.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##libipw_device
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
ieee80211_txb_free_rsl extern void ieee80211_txb_free_rsl ( s#ieee80211_txb * ) 

/* drivers/staging/rtl8192u/ieee80211/ieee80211_wx.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
ieee80211_wx_set_gen_ie_rsl extern int ieee80211_wx_set_gen_ie_rsl ( s#ieee80211_device * , t#u8 * , t#size_t ) 
ieee80211_wx_set_mlme_rsl extern int ieee80211_wx_set_mlme_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_auth_rsl extern int ieee80211_wx_set_auth_rsl ( s#ieee80211_device * , s#iw_request_info * , s#iw_param * , char * ) 
ieee80211_wx_set_encode_ext_rsl extern int ieee80211_wx_set_encode_ext_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_encode_ext_rsl extern int ieee80211_wx_get_encode_ext_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_scan_rsl extern int ieee80211_wx_get_scan_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_set_encode_rsl extern int ieee80211_wx_set_encode_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
ieee80211_wx_get_encode_rsl extern int ieee80211_wx_get_encode_rsl ( s#ieee80211_device * , s#iw_request_info * , u#iwreq_data * , char * ) 

/* drivers/staging/rtl8192u/ieee80211/rtl819x_HTProc.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##workqueue_struct
HTUpdateSelfAndPeerSetting extern void HTUpdateSelfAndPeerSetting ( s#ieee80211_device * , s#ieee80211_network * ) 

/* drivers/staging/speakup/buffers.o */
speakup_start_ttys extern void speakup_start_ttys ( void ) 
synth_buffer_empty extern int synth_buffer_empty ( void ) 
synth_buffer_getc extern char synth_buffer_getc ( void ) 
synth_buffer_peek extern char synth_buffer_peek ( void ) 
synth_buffer_clear extern void synth_buffer_clear ( void ) 

/* drivers/staging/speakup/kobjects.o */
s##sock
s##sysfs_dirent
s#kobj_attribute struct kobj_attribute { s#attribute attr ; t#ssize_t ( * show ) ( s#kobject * , s#kobj_attribute * , char * ) ; t#ssize_t ( * store ) ( s#kobject * , s#kobj_attribute * , const char * , t#size_t ) ; } 
spk_var_show extern t#ssize_t spk_var_show ( s#kobject * , s#kobj_attribute * , char * ) 
spk_var_store extern t#ssize_t spk_var_store ( s#kobject * , s#kobj_attribute * , const char * , t#size_t ) 

/* drivers/staging/speakup/serialio.o */
spk_serial_in extern unsigned char spk_serial_in ( void ) 
spk_serial_in_nowait extern unsigned char spk_serial_in_nowait ( void ) 
spk_serial_out extern int spk_serial_out ( const char ) 
spk_serial_release extern void spk_serial_release ( void ) 

/* drivers/staging/speakup/synth.o */
s#speakup_info_t struct speakup_info_t { t#spinlock_t spinlock ; int port_tts ; int flushing ; } 
speakup_info extern s#speakup_info_t speakup_info 
e#var_id_t enum var_id_t { VERSION = 0 , SYNTH , SILENT , SYNTH_DIRECT , KEYMAP , CHARS , PUNC_SOME , PUNC_MOST , PUNC_ALL , DELIM , REPEATS , EXNUMBER , DELAY , TRIGGER , JIFFY , FULL , BLEEP_TIME , CURSOR_TIME , BELL_POS , SAY_CONTROL , SAY_WORD_CTL , NO_INTERRUPT , KEY_ECHO , SPELL_DELAY , PUNC_LEVEL , READING_PUNC , ATTRIB_BLEEP , BLEEPS , RATE , PITCH , VOL , TONE , PUNCT , VOICE , FREQUENCY , LANG , DIRECT , CAPS_START , CAPS_STOP , CHARTAB , MAXVARS } 
s#num_var_t struct num_var_t { char * synth_fmt ; int default_val ; int low ; int high ; short offset , multiplier ; char * out_str ; int value ; } 
s#string_var_t struct string_var_t { char * default_val ; } 
s#var_t struct var_t { e#var_id_t var_id ; union { s#num_var_t n ; s#string_var_t s ; } u ; } 
e#var_type_t enum var_type_t { VAR_NUM = 0 , VAR_TIME , VAR_STRING , VAR_PROC } 
s#st_var_header struct st_var_header { char * name ; e#var_id_t var_id ; e#var_type_t var_type ; void * p_val ; void * data ; } 
s#synth_indexing struct synth_indexing { char * command ; unsigned char lowindex ; unsigned char highindex ; unsigned char currindex ; } 
s##sock
s##sysfs_dirent
s#spk_synth struct spk_synth { const char * name ; const char * version ; const char * long_name ; const char * init ; char procspeech ; char clear ; int delay ; int trigger ; int jiffies ; int full ; int ser ; short flags ; short startup ; const int checkval ; s#var_t * vars ; int * default_pitch ; int * default_vol ; int ( * probe ) ( s#spk_synth * ) ; void ( * release ) ( void ) ; const char * ( * synth_immediate ) ( s#spk_synth * , const char * ) ; void ( * catch_up ) ( s#spk_synth * ) ; void ( * flush ) ( s#spk_synth * ) ; int ( * is_alive ) ( s#spk_synth * ) ; int ( * synth_adjust ) ( s#st_var_header * ) ; void ( * read_buff_add ) ( t#u_char ) ; unsigned char ( * get_index ) ( void ) ; s#synth_indexing indexing ; int alive ; s#attribute_group attributes ; } 
serial_synth_probe extern int serial_synth_probe ( s#spk_synth * ) 
spk_do_catch_up extern void spk_do_catch_up ( s#spk_synth * ) 
spk_synth_immediate extern const char * spk_synth_immediate ( s#spk_synth * , const char * ) 
spk_synth_flush extern void spk_synth_flush ( s#spk_synth * ) 
spk_synth_is_alive_nop extern int spk_synth_is_alive_nop ( s#spk_synth * ) 
spk_synth_is_alive_restart extern int spk_synth_is_alive_restart ( s#spk_synth * ) 
synth_printf extern void synth_printf ( const char * , ... ) 
synth_request_region extern int synth_request_region ( t#u_long , t#u_long ) 
synth_release_region extern int synth_release_region ( t#u_long , t#u_long ) 
synth_add extern int synth_add ( s#spk_synth * ) 
synth_remove extern void synth_remove ( s#spk_synth * ) 

/* drivers/staging/speakup/thread.o */
speakup_event extern t#wait_queue_head_t speakup_event 

/* drivers/staging/speakup/varhandlers.o */
get_var extern s#var_t * get_var ( e#var_id_t ) 

/* drivers/staging/tm6000/tm6000-cards.o */
tm6000_xc5000_callback int tm6000_xc5000_callback ( void * , int , int , int ) 
tm6000_tuner_callback int tm6000_tuner_callback ( void * , int , int , int ) 

/* drivers/staging/tm6000/tm6000-core.o */
e#tm6000_devtype enum tm6000_devtype { TM6000 = 0 , TM5600 , TM6010 , } 
e#tm6000_core_state enum tm6000_core_state { DEV_INITIALIZED = 0x01 , DEV_DISCONNECTED = 0x02 , DEV_MISCONFIGURED = 0x04 , } 
s#tm6000_capabilities struct tm6000_capabilities { unsigned int has_tuner : 1 ; unsigned int has_tda9874 : 1 ; unsigned int has_dvb : 1 ; unsigned int has_zl10353 : 1 ; unsigned int has_eeprom : 1 ; unsigned int has_remote : 1 ; unsigned int has_radio : 1 ; } 
s#tm6000_gpio struct tm6000_gpio { int tuner_reset ; int tuner_on ; int demod_reset ; int demod_on ; int power_led ; int dvb_led ; int ir ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s#tm6000_fmt struct tm6000_fmt { char * name ; t#u32 fourcc ; int depth ; } 
s#tm6000_fh struct tm6000_fh { s#tm6000_core * dev ; unsigned int radio ; s#tm6000_fmt * fmt ; unsigned int width , height ; s#videobuf_queue vb_vidq ; e#v4l2_buf_type type ; } 
s##v4l2_events
s##v4l2_ctrl_handler
s##v4l2_ioctl_ops
s#tm6000_dmaqueue struct tm6000_dmaqueue { s#list_head active ; s#list_head queued ; s#task_struct * kthread ; t#wait_queue_head_t wq ; int frame ; int ini_jiffies ; } 
e#tm6000_itype enum tm6000_itype { TM6000_INPUT_TV = 1 , TM6000_INPUT_COMPOSITE1 , TM6000_INPUT_COMPOSITE2 , TM6000_INPUT_SVIDEO , TM6000_INPUT_DVB , TM6000_INPUT_RADIO , } 
e#tm6000_mux enum tm6000_mux { TM6000_VMUX_VIDEO_A = 1 , TM6000_VMUX_VIDEO_B , TM6000_VMUX_VIDEO_AB , TM6000_AMUX_ADC1 , TM6000_AMUX_ADC2 , TM6000_AMUX_SIF1 , TM6000_AMUX_SIF2 , TM6000_AMUX_I2S , } 
s#tm6000_input struct tm6000_input { e#tm6000_itype type ; e#tm6000_mux vmux ; e#tm6000_mux amux ; unsigned int v_gpio ; unsigned int a_gpio ; } 
e#tm6000_mode enum tm6000_mode { TM6000_MODE_UNKNOWN = 0 , TM6000_MODE_ANALOG , TM6000_MODE_DIGITAL , } 
s##usb_tt
s##ep_device
s##wusb_dev
s##scatterlist
s#tm6000_dvb struct tm6000_dvb { s#dvb_adapter adapter ; s#dvb_demux demux ; s#dvb_frontend * frontend ; s#dmxdev dmxdev ; unsigned int streams ; s#urb * bulk_urb ; s#mutex mutex ; } 
s##snd_card
s##snd_pcm_substream
s#snd_tm6000_card struct snd_tm6000_card { s#snd_card * card ; t#spinlock_t reg_lock ; s#tm6000_core * core ; s#snd_pcm_substream * substream ; unsigned buf_pos ; unsigned period_pos ; } 
s##tm6000_IR
s#tm6000_endpoint struct tm6000_endpoint { s#usb_host_endpoint * endp ; t#__u8 bInterfaceNumber ; t#__u8 bAlternateSetting ; unsigned maxsize ; } 
s#tm6000_buffer struct tm6000_buffer { s#videobuf_buffer vb ; s#tm6000_fmt * fmt ; } 
s#usb_isoc_ctl struct usb_isoc_ctl { int max_pkt_size ; int num_bufs ; s#urb * * urb ; char * * transfer_buffer ; t#u8 cmd ; int pos , size , pktsize ; int vfield , field ; t#u32 tmp_buf ; int tmp_buf_len ; s#tm6000_buffer * buf ; } 
s#tm6000_core struct tm6000_core { char name [ 30 ] ; int model ; int devno ; e#tm6000_devtype dev_type ; unsigned char eedata [ 256 ] ; unsigned eedata_size ; t#v4l2_std_id norm ; int width , height ; e#tm6000_core_state state ; s#tm6000_capabilities caps ; int tuner_type ; int tuner_addr ; s#tm6000_gpio gpio ; char * ir_codes ; t#__u8 radio ; int demod_addr ; int audio_bitrate ; s#i2c_adapter i2c_adap ; s#i2c_client i2c_client ; s#list_head devlist ; int users ; s#tm6000_fh * resources ; t#bool is_res_read ; s#video_device * vfd ; s#video_device * radio_dev ; s#tm6000_dmaqueue vidq ; s#v4l2_device v4l2_dev ; int input ; s#tm6000_input vinput [ 3 ] ; s#tm6000_input rinput ; int freq ; unsigned int fourcc ; e#tm6000_mode mode ; int ctl_mute ; int ctl_volume ; int amode ; s#tm6000_dvb * dvb ; s#snd_tm6000_card * adev ; s#work_struct wq_trigger ; t#atomic_t stream_started ; s#tm6000_IR * ir ; s#mutex lock ; s#usb_device * udev ; s#tm6000_endpoint bulk_in , bulk_out , isoc_in , isoc_out ; s#tm6000_endpoint int_in , int_out ; int scaler ; s#usb_isoc_ctl isoc_ctl ; t#spinlock_t slock ; } 
tm6000_set_reg int tm6000_set_reg ( s#tm6000_core * , t#u8 , t#u16 , t#u16 ) 
tm6000_get_reg int tm6000_get_reg ( s#tm6000_core * , t#u8 , t#u16 , t#u16 ) 
tm6000_set_reg_mask int tm6000_set_reg_mask ( s#tm6000_core * , t#u8 , t#u16 , t#u16 , t#u16 ) 
tm6000_init_digital_mode int tm6000_init_digital_mode ( s#tm6000_core * ) 
tm6000_set_audio_bitrate int tm6000_set_audio_bitrate ( s#tm6000_core * , int ) 
e#tm6000_ops_type enum tm6000_ops_type { TM6000_AUDIO = 0x10 , TM6000_DVB = 0x20 , } 
s#tm6000_ops struct tm6000_ops { s#list_head next ; char * name ; e#tm6000_ops_type type ; int ( * init ) ( s#tm6000_core * ) ; int ( * fini ) ( s#tm6000_core * ) ; int ( * fillbuf ) ( s#tm6000_core * , char * , int ) ; } 
tm6000_register_extension int tm6000_register_extension ( s#tm6000_ops * ) 
tm6000_unregister_extension void tm6000_unregister_extension ( s#tm6000_ops * ) 

/* drivers/staging/tm6000/tm6000-video.o */
tm6000_debug extern int tm6000_debug 

/* drivers/staging/usbip/usbip_common.o */
usbip_debug_flag extern unsigned long usbip_debug_flag 
s##device_private
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
dev_attr_usbip_debug extern s#device_attribute dev_attr_usbip_debug 
s##usb_tt
s##ep_device
s##wusb_dev
usbip_dump_urb void usbip_dump_urb ( s#urb * ) 
s#usbip_header_basic struct usbip_header_basic { t#__u32 command ; t#__u32 seqnum ; t#__u32 devid ; t#__u32 direction ; t#__u32 ep ; } 
s#usbip_header_cmd_submit struct usbip_header_cmd_submit { t#__u32 transfer_flags ; t#__s32 transfer_buffer_length ; t#__s32 start_frame ; t#__s32 number_of_packets ; t#__s32 interval ; unsigned char setup [ 8 ] ; } 
s#usbip_header_ret_submit struct usbip_header_ret_submit { t#__s32 status ; t#__s32 actual_length ; t#__s32 start_frame ; t#__s32 number_of_packets ; t#__s32 error_count ; } 
s#usbip_header_cmd_unlink struct usbip_header_cmd_unlink { t#__u32 seqnum ; } 
s#usbip_header_ret_unlink struct usbip_header_ret_unlink { t#__s32 status ; } 
s#usbip_header struct usbip_header { s#usbip_header_basic base ; union { s#usbip_header_cmd_submit cmd_submit ; s#usbip_header_ret_submit ret_submit ; s#usbip_header_cmd_unlink cmd_unlink ; s#usbip_header_ret_unlink ret_unlink ; } u ; } 
usbip_dump_header void usbip_dump_header ( s#usbip_header * ) 
usbip_xmit int usbip_xmit ( int , s#socket * , char * , int , int ) 
sockfd_to_socket s#socket * sockfd_to_socket ( unsigned int ) 
usbip_pack_pdu void usbip_pack_pdu ( s#usbip_header * , s#urb * , int , int ) 
usbip_header_correct_endian void usbip_header_correct_endian ( s#usbip_header * , int ) 
usbip_alloc_iso_desc_pdu void * usbip_alloc_iso_desc_pdu ( s#urb * , t#ssize_t * ) 
e#usbip_side enum usbip_side { USBIP_VHCI , USBIP_STUB , } 
e#usbip_status enum usbip_status { SDEV_ST_AVAILABLE = 0x01 , SDEV_ST_USED , SDEV_ST_ERROR , VDEV_ST_NULL , VDEV_ST_NOTASSIGNED , VDEV_ST_USED , VDEV_ST_ERROR } 
s#eh_ops struct eh_ops { void ( * shutdown ) ( s#usbip_device * ) ; void ( * reset ) ( s#usbip_device * ) ; void ( * unusable ) ( s#usbip_device * ) ; } 
s#usbip_device struct usbip_device { e#usbip_side side ; e#usbip_status status ; t#spinlock_t lock ; s#socket * tcp_socket ; s#task_struct * tcp_rx ; s#task_struct * tcp_tx ; unsigned long event ; s#task_struct * eh ; t#wait_queue_head_t eh_waitq ; s#eh_ops eh_ops ; int sockfd ; } 
usbip_recv_iso int usbip_recv_iso ( s#usbip_device * , s#urb * ) 
usbip_pad_iso void usbip_pad_iso ( s#usbip_device * , s#urb * ) 
usbip_recv_xbuff int usbip_recv_xbuff ( s#usbip_device * , s#urb * ) 

/* drivers/staging/usbip/usbip_event.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
usbip_start_eh int usbip_start_eh ( s#usbip_device * ) 
usbip_stop_eh void usbip_stop_eh ( s#usbip_device * ) 
usbip_event_add void usbip_event_add ( s#usbip_device * , unsigned long ) 
usbip_event_happened int usbip_event_happened ( s#usbip_device * ) 

/* drivers/staging/vme/vme.o */
e#vme_resource_type enum vme_resource_type { VME_MASTER , VME_SLAVE , VME_DMA , VME_LM } 
s#vme_resource struct vme_resource { e#vme_resource_type type ; s#list_head * entry ; } 
vme_alloc_consistent void * vme_alloc_consistent ( s#vme_resource * , t#size_t , t#dma_addr_t * ) 
vme_free_consistent void vme_free_consistent ( s#vme_resource * , t#size_t , void * , t#dma_addr_t ) 
vme_get_size t#size_t vme_get_size ( s#vme_resource * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
t#vme_address_t typedef t#u32 vme_address_t 
t#vme_cycle_t typedef t#u32 vme_cycle_t 
vme_slave_request s#vme_resource * vme_slave_request ( s#device * , t#vme_address_t , t#vme_cycle_t ) 
vme_slave_set int vme_slave_set ( s#vme_resource * , int , unsigned long long , unsigned long long , t#dma_addr_t , t#vme_address_t , t#vme_cycle_t ) 
vme_slave_get int vme_slave_get ( s#vme_resource * , int * , unsigned long long * , unsigned long long * , t#dma_addr_t * , t#vme_address_t * , t#vme_cycle_t * ) 
vme_slave_free void vme_slave_free ( s#vme_resource * ) 
t#vme_width_t typedef t#u32 vme_width_t 
vme_master_request s#vme_resource * vme_master_request ( s#device * , t#vme_address_t , t#vme_cycle_t , t#vme_width_t ) 
vme_master_set int vme_master_set ( s#vme_resource * , int , unsigned long long , unsigned long long , t#vme_address_t , t#vme_cycle_t , t#vme_width_t ) 
vme_master_get int vme_master_get ( s#vme_resource * , int * , unsigned long long * , unsigned long long * , t#vme_address_t * , t#vme_cycle_t * , t#vme_width_t * ) 
vme_master_read t#ssize_t vme_master_read ( s#vme_resource * , void * , t#size_t , t#loff_t ) 
vme_master_write t#ssize_t vme_master_write ( s#vme_resource * , void * , t#size_t , t#loff_t ) 
vme_master_rmw unsigned int vme_master_rmw ( s#vme_resource * , unsigned int , unsigned int , unsigned int , t#loff_t ) 
vme_master_free void vme_master_free ( s#vme_resource * ) 
t#vme_dma_route_t typedef t#u32 vme_dma_route_t 
vme_dma_request s#vme_resource * vme_dma_request ( s#device * , t#vme_dma_route_t ) 
s#vme_callback struct vme_callback { void ( * func ) ( int , int , void * ) ; void * priv_data ; } 
s#vme_irq struct vme_irq { int count ; s#vme_callback callback [ 255 ] ; } 
s#vme_slave_resource struct vme_slave_resource { s#list_head list ; s#vme_bridge * parent ; s#mutex mtx ; int locked ; int number ; t#vme_address_t address_attr ; t#vme_cycle_t cycle_attr ; } 
s#vme_master_resource struct vme_master_resource { s#list_head list ; s#vme_bridge * parent ; t#spinlock_t lock ; int locked ; int number ; t#vme_address_t address_attr ; t#vme_cycle_t cycle_attr ; t#vme_width_t width_attr ; s#resource bus_resource ; void * kern_base ; } 
t#vme_dma_t typedef t#u32 vme_dma_t 
s#vme_dma_attr struct vme_dma_attr { t#vme_dma_t type ; void * private ; } 
s#vme_lm_resource struct vme_lm_resource { s#list_head list ; s#vme_bridge * parent ; s#mutex mtx ; int locked ; int number ; int monitors ; } 
s#vme_bridge struct vme_bridge { char name [ 16 ] ; int num ; s#list_head master_resources ; s#list_head slave_resources ; s#list_head dma_resources ; s#list_head lm_resources ; s#list_head vme_errors ; s#device * parent ; void * driver_priv ; s#device dev [ 32 ] ; s#vme_irq irq [ 7 ] ; s#mutex irq_mtx ; int ( * slave_get ) ( s#vme_slave_resource * , int * , unsigned long long * , unsigned long long * , t#dma_addr_t * , t#vme_address_t * , t#vme_cycle_t * ) ; int ( * slave_set ) ( s#vme_slave_resource * , int , unsigned long long , unsigned long long , t#dma_addr_t , t#vme_address_t , t#vme_cycle_t ) ; int ( * master_get ) ( s#vme_master_resource * , int * , unsigned long long * , unsigned long long * , t#vme_address_t * , t#vme_cycle_t * , t#vme_width_t * ) ; int ( * master_set ) ( s#vme_master_resource * , int , unsigned long long , unsigned long long , t#vme_address_t , t#vme_cycle_t , t#vme_width_t ) ; t#ssize_t ( * master_read ) ( s#vme_master_resource * , void * , t#size_t , t#loff_t ) ; t#ssize_t ( * master_write ) ( s#vme_master_resource * , void * , t#size_t , t#loff_t ) ; unsigned int ( * master_rmw ) ( s#vme_master_resource * , unsigned int , unsigned int , unsigned int , t#loff_t ) ; int ( * dma_list_add ) ( s#vme_dma_list * , s#vme_dma_attr * , s#vme_dma_attr * , t#size_t ) ; int ( * dma_list_exec ) ( s#vme_dma_list * ) ; int ( * dma_list_empty ) ( s#vme_dma_list * ) ; void ( * irq_set ) ( s#vme_bridge * , int , int , int ) ; int ( * irq_generate ) ( s#vme_bridge * , int , int ) ; int ( * lm_set ) ( s#vme_lm_resource * , unsigned long long , t#vme_address_t , t#vme_cycle_t ) ; int ( * lm_get ) ( s#vme_lm_resource * , unsigned long long * , t#vme_address_t * , t#vme_cycle_t * ) ; int ( * lm_attach ) ( s#vme_lm_resource * , int , void ( * ) ( int ) ) ; int ( * lm_detach ) ( s#vme_lm_resource * , int ) ; int ( * slot_get ) ( s#vme_bridge * ) ; } 
s#vme_dma_resource struct vme_dma_resource { s#list_head list ; s#vme_bridge * parent ; s#mutex mtx ; int locked ; int number ; s#list_head pending ; s#list_head running ; t#vme_dma_route_t route_attr ; } 
s#vme_dma_list struct vme_dma_list { s#list_head list ; s#vme_dma_resource * parent ; s#list_head entries ; s#mutex mtx ; } 
vme_new_dma_list s#vme_dma_list * vme_new_dma_list ( s#vme_resource * ) 
t#vme_pattern_t typedef t#u32 vme_pattern_t 
vme_dma_pattern_attribute s#vme_dma_attr * vme_dma_pattern_attribute ( t#u32 , t#vme_pattern_t ) 
vme_dma_pci_attribute s#vme_dma_attr * vme_dma_pci_attribute ( t#dma_addr_t ) 
vme_dma_vme_attribute s#vme_dma_attr * vme_dma_vme_attribute ( unsigned long long , t#vme_address_t , t#vme_cycle_t , t#vme_width_t ) 
vme_dma_free_attribute void vme_dma_free_attribute ( s#vme_dma_attr * ) 
vme_dma_list_add int vme_dma_list_add ( s#vme_dma_list * , s#vme_dma_attr * , s#vme_dma_attr * , t#size_t ) 
vme_dma_list_exec int vme_dma_list_exec ( s#vme_dma_list * ) 
vme_dma_list_free int vme_dma_list_free ( s#vme_dma_list * ) 
vme_dma_free int vme_dma_free ( s#vme_resource * ) 
vme_irq_handler void vme_irq_handler ( s#vme_bridge * , int , int ) 
vme_irq_request int vme_irq_request ( s#device * , int , int , void ( * ) ( int , int , void * ) , void * ) 
vme_irq_free void vme_irq_free ( s#device * , int , int ) 
vme_irq_generate int vme_irq_generate ( s#device * , int , int ) 
vme_lm_request s#vme_resource * vme_lm_request ( s#device * ) 
vme_lm_count int vme_lm_count ( s#vme_resource * ) 
vme_lm_set int vme_lm_set ( s#vme_resource * , unsigned long long , t#vme_address_t , t#vme_cycle_t ) 
vme_lm_get int vme_lm_get ( s#vme_resource * , unsigned long long * , t#vme_address_t * , t#vme_cycle_t * ) 
vme_lm_attach int vme_lm_attach ( s#vme_resource * , int , void ( * ) ( int ) ) 
vme_lm_detach int vme_lm_detach ( s#vme_resource * , int ) 
vme_lm_free void vme_lm_free ( s#vme_resource * ) 
vme_slot_get int vme_slot_get ( s#device * ) 
vme_register_bridge int vme_register_bridge ( s#vme_bridge * ) 
vme_unregister_bridge void vme_unregister_bridge ( s#vme_bridge * ) 
s#vme_device_id struct vme_device_id { int bus ; int slot ; } 
s#vme_driver struct vme_driver { s#list_head node ; char * name ; const s#vme_device_id * bind_table ; int ( * probe ) ( s#device * , int , int ) ; int ( * remove ) ( s#device * , int , int ) ; void ( * shutdown ) ( void ) ; s#device_driver driver ; } 
vme_register_driver int vme_register_driver ( s#vme_driver * ) 
vme_unregister_driver void vme_unregister_driver ( s#vme_driver * ) 
vme_bus_type extern s#bus_type vme_bus_type 

/* drivers/staging/zram/xvmalloc.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s#freelist_entry struct freelist_entry { s#page * page ; t#u16 offset ; t#u16 pad ; } 
s#xv_pool struct xv_pool { t#ulong flbitmap ; t#ulong slbitmap [ ( ( ( ( ( ( ( 1UL << 16 ) - ( 1 << 3 ) ) - 32 ) / ( 1 << 4 ) + 1 ) ) + ( 64 ) - 1 ) / ( 64 ) ) ] ; t#u64 total_pages ; s#freelist_entry freelist [ ( ( ( ( 1UL << 16 ) - ( 1 << 3 ) ) - 32 ) / ( 1 << 4 ) + 1 ) ] ; t#spinlock_t lock ; } 
xv_create_pool s#xv_pool * xv_create_pool ( void ) 
xv_destroy_pool void xv_destroy_pool ( s#xv_pool * ) 
xv_malloc int xv_malloc ( s#xv_pool * , t#u32 , s#page * * , t#u32 * , t#gfp_t ) 
xv_free void xv_free ( s#xv_pool * , s#page * , t#u32 ) 
xv_get_object_size t#u32 xv_get_object_size ( void * ) 
xv_get_total_size_bytes t#u64 xv_get_total_size_bytes ( s#xv_pool * ) 

/* drivers/target/target_core_alua.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#se_subsystem_api struct se_subsystem_api { s#list_head sub_api_list ; char name [ 16 ] ; s#module * owner ; t#u8 transport_type ; int ( * attach_hba ) ( s#se_hba * , t#u32 ) ; void ( * detach_hba ) ( s#se_hba * ) ; int ( * pmode_enable_hba ) ( s#se_hba * , unsigned long ) ; void * ( * allocate_virtdevice ) ( s#se_hba * , const char * ) ; s#se_device * ( * create_virtdevice ) ( s#se_hba * , s#se_subsystem_dev * , void * ) ; void ( * free_device ) ( void * ) ; void ( * transport_complete ) ( s#se_cmd * , s#scatterlist * , unsigned char * ) ; int ( * parse_cdb ) ( s#se_cmd * ) ; t#ssize_t ( * check_configfs_dev_params ) ( s#se_hba * , s#se_subsystem_dev * ) ; t#ssize_t ( * set_configfs_dev_params ) ( s#se_hba * , s#se_subsystem_dev * , const char * , t#ssize_t ) ; t#ssize_t ( * show_configfs_dev_params ) ( s#se_hba * , s#se_subsystem_dev * , char * ) ; t#u32 ( * get_device_rev ) ( s#se_device * ) ; t#u32 ( * get_device_type ) ( s#se_device * ) ; t#sector_t ( * get_blocks ) ( s#se_device * ) ; unsigned char * ( * get_sense_buffer ) ( s#se_cmd * ) ; } 
s#target_fabric_configfs_template struct target_fabric_configfs_template { s#config_item_type tfc_discovery_cit ; s#config_item_type tfc_wwn_cit ; s#config_item_type tfc_wwn_fabric_stats_cit ; s#config_item_type tfc_tpg_cit ; s#config_item_type tfc_tpg_base_cit ; s#config_item_type tfc_tpg_lun_cit ; s#config_item_type tfc_tpg_port_cit ; s#config_item_type tfc_tpg_port_stat_cit ; s#config_item_type tfc_tpg_np_cit ; s#config_item_type tfc_tpg_np_base_cit ; s#config_item_type tfc_tpg_attrib_cit ; s#config_item_type tfc_tpg_param_cit ; s#config_item_type tfc_tpg_nacl_cit ; s#config_item_type tfc_tpg_nacl_base_cit ; s#config_item_type tfc_tpg_nacl_attrib_cit ; s#config_item_type tfc_tpg_nacl_auth_cit ; s#config_item_type tfc_tpg_nacl_param_cit ; s#config_item_type tfc_tpg_nacl_stat_cit ; s#config_item_type tfc_tpg_mappedlun_cit ; s#config_item_type tfc_tpg_mappedlun_stat_cit ; } 
s#target_fabric_configfs struct target_fabric_configfs { char tf_name [ 32 ] ; t#atomic_t tf_access_cnt ; s#list_head tf_list ; s#config_group tf_group ; s#config_group tf_disc_group ; s#config_group * tf_default_groups [ 2 ] ; s#config_item * tf_fabric ; s#config_item_type * tf_fabric_cit ; s#configfs_subsystem * tf_subsys ; s#module * tf_module ; s#target_core_fabric_ops tf_ops ; s#target_fabric_configfs_template tf_cit_tmpl ; } 
s##workqueue_struct
core_alua_check_nonop_delay int core_alua_check_nonop_delay ( s#se_cmd * ) 

/* drivers/target/target_core_configfs.o */
s##vfsmount
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##cgroupfs_root
s##css_id
s##ring_buffer
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##workqueue_struct
target_fabric_configfs_init extern s#target_fabric_configfs * target_fabric_configfs_init ( s#module * , const char * ) 
target_fabric_configfs_free extern void target_fabric_configfs_free ( s#target_fabric_configfs * ) 
target_fabric_configfs_register extern int target_fabric_configfs_register ( s#target_fabric_configfs * ) 
target_fabric_configfs_deregister extern void target_fabric_configfs_deregister ( s#target_fabric_configfs * ) 

/* drivers/target/target_core_device.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##target_fabric_configfs
s##workqueue_struct
transport_lookup_cmd_lun int transport_lookup_cmd_lun ( s#se_cmd * , t#u32 ) 
transport_lookup_tmr_lun int transport_lookup_tmr_lun ( s#se_cmd * , t#u32 ) 

/* drivers/target/target_core_fabric_lib.o */
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##workqueue_struct
s##se_subsystem_api
sas_get_fabric_proto_ident t#u8 sas_get_fabric_proto_ident ( s#se_portal_group * ) 
sas_get_pr_transport_id t#u32 sas_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
sas_get_pr_transport_id_len t#u32 sas_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
sas_parse_pr_out_transport_id char * sas_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 
fc_get_fabric_proto_ident t#u8 fc_get_fabric_proto_ident ( s#se_portal_group * ) 
fc_get_pr_transport_id_len t#u32 fc_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
fc_get_pr_transport_id t#u32 fc_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
fc_parse_pr_out_transport_id char * fc_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 
iscsi_get_fabric_proto_ident t#u8 iscsi_get_fabric_proto_ident ( s#se_portal_group * ) 
iscsi_get_pr_transport_id t#u32 iscsi_get_pr_transport_id ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * , unsigned char * ) 
iscsi_get_pr_transport_id_len t#u32 iscsi_get_pr_transport_id_len ( s#se_portal_group * , s#se_node_acl * , s#t10_pr_registration * , int * ) 
iscsi_parse_pr_out_transport_id char * iscsi_parse_pr_out_transport_id ( s#se_portal_group * , const char * , t#u32 * , char * * ) 

/* drivers/target/target_core_hba.o */
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##target_fabric_configfs
s##workqueue_struct
transport_subsystem_register int transport_subsystem_register ( s#se_subsystem_api * ) 
transport_subsystem_release void transport_subsystem_release ( s#se_subsystem_api * ) 

/* drivers/target/target_core_sbc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##target_fabric_configfs
s##workqueue_struct
spc_get_write_same_sectors int spc_get_write_same_sectors ( s#se_cmd * ) 
s#spc_ops struct spc_ops { int ( * execute_rw ) ( s#se_cmd * ) ; int ( * execute_sync_cache ) ( s#se_cmd * ) ; int ( * execute_write_same ) ( s#se_cmd * ) ; int ( * execute_unmap ) ( s#se_cmd * ) ; } 
sbc_parse_cdb int sbc_parse_cdb ( s#se_cmd * , s#spc_ops * ) 

/* drivers/target/target_core_spc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##target_fabric_configfs
s##workqueue_struct
spc_parse_cdb int spc_parse_cdb ( s#se_cmd * , unsigned int * ) 

/* drivers/target/target_core_tmr.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##workqueue_struct
core_tmr_alloc_req int core_tmr_alloc_req ( s#se_cmd * , void * , t#u8 , t#gfp_t ) 

/* drivers/target/target_core_tpg.o */
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##workqueue_struct
s##target_fabric_configfs
core_tpg_check_initiator_node_acl s#se_node_acl * core_tpg_check_initiator_node_acl ( s#se_portal_group * , unsigned char * ) 
core_tpg_clear_object_luns void core_tpg_clear_object_luns ( s#se_portal_group * ) 
core_tpg_add_initiator_node_acl s#se_node_acl * core_tpg_add_initiator_node_acl ( s#se_portal_group * , s#se_node_acl * , const char * , t#u32 ) 
core_tpg_del_initiator_node_acl int core_tpg_del_initiator_node_acl ( s#se_portal_group * , s#se_node_acl * , int ) 
core_tpg_set_initiator_node_queue_depth int core_tpg_set_initiator_node_queue_depth ( s#se_portal_group * , unsigned char * , t#u32 , int ) 
core_tpg_register int core_tpg_register ( s#target_core_fabric_ops * , s#se_wwn * , s#se_portal_group * , void * , int ) 
core_tpg_deregister int core_tpg_deregister ( s#se_portal_group * ) 

/* drivers/target/target_core_transport.o */
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##workqueue_struct
transport_init_session s#se_session * transport_init_session ( void ) 
__transport_register_session void __transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
transport_register_session void transport_register_session ( s#se_portal_group * , s#se_node_acl * , s#se_session * , void * ) 
target_get_session void target_get_session ( s#se_session * ) 
target_put_session void target_put_session ( s#se_session * ) 
transport_deregister_session_configfs void transport_deregister_session_configfs ( s#se_session * ) 
transport_free_session void transport_free_session ( s#se_session * ) 
transport_deregister_session void transport_deregister_session ( s#se_session * ) 
target_complete_cmd void target_complete_cmd ( s#se_cmd * , t#u8 ) 
s#t10_vpd struct t10_vpd { unsigned char device_identifier [ 254 ] ; int protocol_identifier_set ; t#u32 protocol_identifier ; t#u32 device_identifier_code_set ; t#u32 association ; t#u32 device_identifier_type ; s#list_head vpd_list ; } 
transport_set_vpd_proto_id void transport_set_vpd_proto_id ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_assoc int transport_set_vpd_assoc ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident_type int transport_set_vpd_ident_type ( s#t10_vpd * , unsigned char * ) 
transport_set_vpd_ident int transport_set_vpd_ident ( s#t10_vpd * , unsigned char * ) 
s#se_dev_limits struct se_dev_limits { t#u32 hw_queue_depth ; t#u32 queue_depth ; s#queue_limits limits ; } 
transport_add_device_to_core_hba s#se_device * transport_add_device_to_core_hba ( s#se_hba * , s#se_subsystem_api * , s#se_subsystem_dev * , t#u32 , void * , s#se_dev_limits * , const char * , const char * ) 
transport_init_se_cmd void transport_init_se_cmd ( s#se_cmd * , s#target_core_fabric_ops * , s#se_session * , t#u32 , int , int , unsigned char * ) 
target_setup_cmd_from_cdb int target_setup_cmd_from_cdb ( s#se_cmd * , unsigned char * ) 
transport_handle_cdb_direct int transport_handle_cdb_direct ( s#se_cmd * ) 
target_submit_cmd_map_sgls int target_submit_cmd_map_sgls ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u32 , t#u32 , int , int , int , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 ) 
target_submit_cmd int target_submit_cmd ( s#se_cmd * , s#se_session * , unsigned char * , unsigned char * , t#u32 , t#u32 , int , int , int ) 
target_submit_tmr int target_submit_tmr ( s#se_cmd * , s#se_session * , unsigned char * , t#u32 , void * , unsigned char , t#gfp_t , unsigned int , int ) 
transport_generic_request_failure void transport_generic_request_failure ( s#se_cmd * ) 
target_execute_cmd void target_execute_cmd ( s#se_cmd * ) 
transport_generic_map_mem_to_cmd int transport_generic_map_mem_to_cmd ( s#se_cmd * , s#scatterlist * , t#u32 , s#scatterlist * , t#u32 ) 
transport_kmap_data_sg void * transport_kmap_data_sg ( s#se_cmd * ) 
transport_kunmap_data_sg void transport_kunmap_data_sg ( s#se_cmd * ) 
transport_generic_new_cmd int transport_generic_new_cmd ( s#se_cmd * ) 
transport_generic_free_cmd void transport_generic_free_cmd ( s#se_cmd * , int ) 
target_put_sess_cmd int target_put_sess_cmd ( s#se_session * , s#se_cmd * ) 
target_sess_cmd_list_set_waiting void target_sess_cmd_list_set_waiting ( s#se_session * ) 
target_wait_for_sess_cmds void target_wait_for_sess_cmds ( s#se_session * , int ) 
transport_wait_for_tasks t#bool transport_wait_for_tasks ( s#se_cmd * ) 
transport_send_check_condition_and_sense int transport_send_check_condition_and_sense ( s#se_cmd * , t#u8 , int ) 
transport_check_aborted_status int transport_check_aborted_status ( s#se_cmd * , int ) 
transport_generic_handle_tmr int transport_generic_handle_tmr ( s#se_cmd * ) 

/* drivers/thermal/thermal_sys.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#thermal_cooling_device_ops struct thermal_cooling_device_ops { int ( * get_max_state ) ( s#thermal_cooling_device * , unsigned long * ) ; int ( * get_cur_state ) ( s#thermal_cooling_device * , unsigned long * ) ; int ( * set_cur_state ) ( s#thermal_cooling_device * , unsigned long ) ; } 
s#thermal_cooling_device struct thermal_cooling_device { int id ; char type [ 20 ] ; s#device device ; void * devdata ; const s#thermal_cooling_device_ops * ops ; s#list_head node ; } 
e#thermal_device_mode enum thermal_device_mode { THERMAL_DEVICE_DISABLED = 0 , THERMAL_DEVICE_ENABLED , } 
e#thermal_trip_type enum thermal_trip_type { THERMAL_TRIP_ACTIVE = 0 , THERMAL_TRIP_PASSIVE , THERMAL_TRIP_HOT , THERMAL_TRIP_CRITICAL , } 
s#thermal_zone_device_ops struct thermal_zone_device_ops { int ( * bind ) ( s#thermal_zone_device * , s#thermal_cooling_device * ) ; int ( * unbind ) ( s#thermal_zone_device * , s#thermal_cooling_device * ) ; int ( * get_temp ) ( s#thermal_zone_device * , unsigned long * ) ; int ( * get_mode ) ( s#thermal_zone_device * , e#thermal_device_mode * ) ; int ( * set_mode ) ( s#thermal_zone_device * , e#thermal_device_mode ) ; int ( * get_trip_type ) ( s#thermal_zone_device * , int , e#thermal_trip_type * ) ; int ( * get_trip_temp ) ( s#thermal_zone_device * , int , unsigned long * ) ; int ( * get_crit_temp ) ( s#thermal_zone_device * , unsigned long * ) ; int ( * notify ) ( s#thermal_zone_device * , int , e#thermal_trip_type ) ; } 
s#thermal_zone_device struct thermal_zone_device { int id ; char type [ 20 ] ; s#device device ; void * devdata ; int trips ; int tc1 ; int tc2 ; int passive_delay ; int polling_delay ; int last_temperature ; t#bool passive ; unsigned int forced_passive ; const s#thermal_zone_device_ops * ops ; s#list_head cooling_devices ; s#idr idr ; s#mutex lock ; s#list_head node ; s#delayed_work poll_queue ; } 
thermal_zone_bind_cooling_device int thermal_zone_bind_cooling_device ( s#thermal_zone_device * , int , s#thermal_cooling_device * ) 
thermal_zone_unbind_cooling_device int thermal_zone_unbind_cooling_device ( s#thermal_zone_device * , int , s#thermal_cooling_device * ) 
thermal_cooling_device_register s#thermal_cooling_device * thermal_cooling_device_register ( char * , void * , const s#thermal_cooling_device_ops * ) 
thermal_cooling_device_unregister void thermal_cooling_device_unregister ( s#thermal_cooling_device * ) 
thermal_zone_device_update void thermal_zone_device_update ( s#thermal_zone_device * ) 
thermal_zone_device_register s#thermal_zone_device * thermal_zone_device_register ( char * , int , void * , const s#thermal_zone_device_ops * , int , int , int , int ) 
thermal_zone_device_unregister void thermal_zone_device_unregister ( s#thermal_zone_device * ) 
e#events enum events { THERMAL_AUX0 , THERMAL_AUX1 , THERMAL_CRITICAL , THERMAL_DEV_FAULT , } 
generate_netlink_event extern int generate_netlink_event ( t#u32 , e#events ) 

/* drivers/tty/hvc/hvc_console.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##serial_icounter_struct
s#hvc_struct struct hvc_struct { t#spinlock_t lock ; int index ; s#tty_struct * tty ; int count ; int do_wakeup ; char * outbuf ; int outbuf_size ; int n_outbuf ; t#uint32_t vtermno ; const s#hv_ops * ops ; int irq_requested ; int data ; s#winsize ws ; s#work_struct tty_resize ; s#list_head next ; s#kref kref ; } 
s#hv_ops struct hv_ops { int ( * get_chars ) ( t#uint32_t , char * , int ) ; int ( * put_chars ) ( t#uint32_t , const char * , int ) ; int ( * notifier_add ) ( s#hvc_struct * , int ) ; void ( * notifier_del ) ( s#hvc_struct * , int ) ; void ( * notifier_hangup ) ( s#hvc_struct * , int ) ; } 
hvc_instantiate extern int hvc_instantiate ( t#uint32_t , int , const s#hv_ops * ) 
hvc_kick void hvc_kick ( void ) 
hvc_poll int hvc_poll ( s#hvc_struct * ) 
__hvc_resize extern void __hvc_resize ( s#hvc_struct * , s#winsize ) 
hvc_alloc extern s#hvc_struct * hvc_alloc ( t#uint32_t , int , const s#hv_ops * , int ) 
hvc_remove extern int hvc_remove ( s#hvc_struct * ) 

/* drivers/tty/n_gsm.o */
s##gsm_mux
gsm_cleanup_mux void gsm_cleanup_mux ( s#gsm_mux * ) 
gsm_activate_mux int gsm_activate_mux ( s#gsm_mux * ) 
gsm_free_mux void gsm_free_mux ( s#gsm_mux * ) 
gsm_alloc_mux s#gsm_mux * gsm_alloc_mux ( void ) 

/* drivers/tty/n_tracesink.o */
n_tracesink_datadrain void n_tracesink_datadrain ( t#u8 * , int ) 

/* drivers/tty/n_tty.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##serial_icounter_struct
n_tty_inherit_ops extern void n_tty_inherit_ops ( s#tty_ldisc_ops * ) 

/* drivers/tty/serial/8250.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#circ_buf struct circ_buf { char * buf ; int head ; int tail ; } 
s#uart_state struct uart_state { s#tty_port port ; int pm_state ; s#circ_buf xmit ; s#tasklet_struct tlet ; s#uart_port * uart_port ; } 
s#uart_icount struct uart_icount { t#__u32 cts ; t#__u32 dsr ; t#__u32 rng ; t#__u32 dcd ; t#__u32 rx ; t#__u32 tx ; t#__u32 frame ; t#__u32 overrun ; t#__u32 parity ; t#__u32 brk ; t#__u32 buf_overrun ; } 
s#console struct console { char name [ 16 ] ; void ( * write ) ( s#console * , const char * , unsigned ) ; int ( * read ) ( s#console * , char * , unsigned ) ; s#tty_driver * ( * device ) ( s#console * , int * ) ; void ( * unblank ) ( void ) ; int ( * setup ) ( s#console * , char * ) ; int ( * early_setup ) ( void ) ; short flags ; short index ; int cflag ; void * data ; s#console * next ; } 
t#upf_t typedef unsigned int upf_t 
s#serial_struct struct serial_struct { int type ; int line ; unsigned int port ; int irq ; int flags ; int xmit_fifo_size ; int custom_divisor ; int baud_base ; unsigned short close_delay ; char io_type ; char reserved_char [ 1 ] ; int hub6 ; unsigned short closing_wait ; unsigned short closing_wait2 ; unsigned char * iomem_base ; unsigned short iomem_reg_shift ; unsigned int port_high ; unsigned long iomap_base ; } 
s#uart_ops struct uart_ops { unsigned int ( * tx_empty ) ( s#uart_port * ) ; void ( * set_mctrl ) ( s#uart_port * , unsigned int ) ; unsigned int ( * get_mctrl ) ( s#uart_port * ) ; void ( * stop_tx ) ( s#uart_port * ) ; void ( * start_tx ) ( s#uart_port * ) ; void ( * send_xchar ) ( s#uart_port * , char ) ; void ( * stop_rx ) ( s#uart_port * ) ; void ( * enable_ms ) ( s#uart_port * ) ; void ( * break_ctl ) ( s#uart_port * , int ) ; int ( * startup ) ( s#uart_port * ) ; void ( * shutdown ) ( s#uart_port * ) ; void ( * flush_buffer ) ( s#uart_port * ) ; void ( * set_termios ) ( s#uart_port * , s#ktermios * , s#ktermios * ) ; void ( * set_ldisc ) ( s#uart_port * , int ) ; void ( * pm ) ( s#uart_port * , unsigned int , unsigned int ) ; int ( * set_wake ) ( s#uart_port * , unsigned int ) ; const char * ( * type ) ( s#uart_port * ) ; void ( * release_port ) ( s#uart_port * ) ; int ( * request_port ) ( s#uart_port * ) ; void ( * config_port ) ( s#uart_port * , int ) ; int ( * verify_port ) ( s#uart_port * , s#serial_struct * ) ; int ( * ioctl ) ( s#uart_port * , unsigned int , unsigned long ) ; } 
s#uart_port struct uart_port { t#spinlock_t lock ; unsigned long iobase ; unsigned char * membase ; unsigned int ( * serial_in ) ( s#uart_port * , int ) ; void ( * serial_out ) ( s#uart_port * , int , int ) ; void ( * set_termios ) ( s#uart_port * , s#ktermios * , s#ktermios * ) ; void ( * pm ) ( s#uart_port * , unsigned int , unsigned int ) ; unsigned int irq ; unsigned long irqflags ; unsigned int uartclk ; unsigned int fifosize ; unsigned char x_char ; unsigned char regshift ; unsigned char iotype ; unsigned char unused1 ; unsigned int read_status_mask ; unsigned int ignore_status_mask ; s#uart_state * state ; s#uart_icount icount ; s#console * cons ; unsigned long sysrq ; t#upf_t flags ; unsigned int mctrl ; unsigned int timeout ; unsigned int type ; const s#uart_ops * ops ; unsigned int custom_divisor ; unsigned int line ; t#resource_size_t mapbase ; s#device * dev ; unsigned char hub6 ; unsigned char suspended ; unsigned char irq_wake ; unsigned char unused [ 2 ] ; void * private_data ; } 
serial8250_do_set_termios extern void serial8250_do_set_termios ( s#uart_port * , s#ktermios * , s#ktermios * ) 
serial8250_do_pm extern void serial8250_do_pm ( s#uart_port * , unsigned int , unsigned int ) 
serial8250_set_isa_configurator extern void serial8250_set_isa_configurator ( void ( * ) ( int , s#uart_port * , unsigned short * ) ) 
serial8250_register_port int serial8250_register_port ( s#uart_port * ) 
serial8250_unregister_port void serial8250_unregister_port ( int ) 
serial8250_suspend_port void serial8250_suspend_port ( int ) 
serial8250_resume_port void serial8250_resume_port ( int ) 

/* drivers/tty/serial/8250_pci.o */
s##serial_private
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#pciserial_board struct pciserial_board { unsigned int flags ; unsigned int num_ports ; unsigned int base_baud ; unsigned int uart_offset ; unsigned int reg_shift ; unsigned int first_offset ; } 
pciserial_init_ports s#serial_private * pciserial_init_ports ( s#pci_dev * , const s#pciserial_board * ) 
pciserial_remove_ports void pciserial_remove_ports ( s#serial_private * ) 
pciserial_suspend_ports void pciserial_suspend_ports ( s#serial_private * ) 
pciserial_resume_ports void pciserial_resume_ports ( s#serial_private * ) 

/* drivers/tty/serial/max3107.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##console
s##workqueue_struct
s#baud_table struct baud_table { int baud ; t#u32 new_brg ; } 
s#max3107_plat struct max3107_plat { int loopback ; int ext_clk ; void ( * init ) ( s#max3107_port * ) ; int ( * configure ) ( s#max3107_port * ) ; void ( * hw_suspend ) ( s#max3107_port * , int ) ; int polled_mode ; int poll_time ; } 
s#max3107_port struct max3107_port { s#uart_port port ; s#spi_device * spi ; s#gpio_chip chip ; s#workqueue_struct * workqueue ; s#work_struct work ; t#spinlock_t data_lock ; int ext_clk ; int loopback ; int baud ; int suspended ; int tx_fifo_empty ; int rx_enabled ; int tx_enabled ; t#u16 irqen_reg ; t#u16 mode1_reg ; int mode1_commit ; t#u16 lcr_reg ; int lcr_commit ; t#u32 brg_cfg ; int brg_commit ; s#baud_table * baud_tbl ; int handle_irq ; t#u16 * rxbuf ; t#u8 * rxstr ; t#u16 * txbuf ; s#max3107_plat * pdata ; } 
max3107_rw extern int max3107_rw ( s#max3107_port * , t#u8 * , t#u8 * , int ) 
max3107_hw_susp extern void max3107_hw_susp ( s#max3107_port * , int ) 
max3107_probe extern int max3107_probe ( s#spi_device * , s#max3107_plat * ) 
max3107_remove extern int max3107_remove ( s#spi_device * ) 
max3107_suspend extern int max3107_suspend ( s#spi_device * , t#pm_message_t ) 
max3107_resume extern int max3107_resume ( s#spi_device * ) 

/* drivers/tty/serial/serial_core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
uart_update_timeout void uart_update_timeout ( s#uart_port * , unsigned int , unsigned int ) 
uart_get_baud_rate unsigned int uart_get_baud_rate ( s#uart_port * , s#ktermios * , s#ktermios * , unsigned int , unsigned int ) 
uart_get_divisor unsigned int uart_get_divisor ( s#uart_port * , unsigned int ) 
uart_console_write void uart_console_write ( s#uart_port * , const char * , unsigned int , void ( * ) ( s#uart_port * , int ) ) 
uart_parse_options void uart_parse_options ( char * , int * , int * , int * , int * ) 
uart_set_options int uart_set_options ( s#uart_port * , s#console * , int , int , int , int ) 
uart_match_port int uart_match_port ( s#uart_port * , s#uart_port * ) 
uart_handle_dcd_change extern void uart_handle_dcd_change ( s#uart_port * , unsigned int ) 
uart_handle_cts_change extern void uart_handle_cts_change ( s#uart_port * , unsigned int ) 
uart_insert_char extern void uart_insert_char ( s#uart_port * , unsigned int , unsigned int , unsigned int , unsigned int ) 
uart_write_wakeup void uart_write_wakeup ( s#uart_port * ) 
s#uart_driver struct uart_driver { s#module * owner ; const char * driver_name ; const char * dev_name ; int major ; int minor ; int nr ; s#console * cons ; s#uart_state * state ; s#tty_driver * tty_driver ; } 
uart_register_driver int uart_register_driver ( s#uart_driver * ) 
uart_unregister_driver void uart_unregister_driver ( s#uart_driver * ) 
uart_suspend_port int uart_suspend_port ( s#uart_driver * , s#uart_port * ) 
uart_resume_port int uart_resume_port ( s#uart_driver * , s#uart_port * ) 
uart_add_one_port int uart_add_one_port ( s#uart_driver * , s#uart_port * ) 
uart_remove_one_port int uart_remove_one_port ( s#uart_driver * , s#uart_port * ) 

/* drivers/tty/sysrq.o */
handle_sysrq void handle_sysrq ( int ) 
s#sysrq_key_op struct sysrq_key_op { void ( * handler ) ( int ) ; char * help_msg ; char * action_msg ; int enable_mask ; } 
register_sysrq_key int register_sysrq_key ( int , s#sysrq_key_op * ) 
unregister_sysrq_key int unregister_sysrq_key ( int , s#sysrq_key_op * ) 

/* drivers/tty/tty_buffer.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##serial_icounter_struct
tty_buffer_request_room extern int tty_buffer_request_room ( s#tty_struct * , t#size_t ) 
tty_insert_flip_string_fixed_flag extern int tty_insert_flip_string_fixed_flag ( s#tty_struct * , const unsigned char * , char , t#size_t ) 
tty_insert_flip_string_flags extern int tty_insert_flip_string_flags ( s#tty_struct * , const unsigned char * , const char * , t#size_t ) 
tty_schedule_flip void tty_schedule_flip ( s#tty_struct * ) 
tty_prepare_flip_string extern int tty_prepare_flip_string ( s#tty_struct * , unsigned char * * , t#size_t ) 
tty_prepare_flip_string_flags extern int tty_prepare_flip_string_flags ( s#tty_struct * , unsigned char * * , char * * , t#size_t ) 
tty_flip_buffer_push extern void tty_flip_buffer_push ( s#tty_struct * ) 

/* drivers/tty/tty_io.o */
tty_std_termios extern s#ktermios tty_std_termios 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
t#__kernel_fd_set typedef struct { unsigned long fds_bits [ ( 1024 / ( 8 * sizeof ( unsigned long ) ) ) ] ; } __kernel_fd_set 
t#fd_set typedef t#__kernel_fd_set fd_set 
s#fdtable struct fdtable { unsigned int max_fds ; s#file * * fd ; t#fd_set * close_on_exec ; t#fd_set * open_fds ; s#rcu_head rcu ; s#fdtable * next ; } 
s#embedded_fd_set struct embedded_fd_set { unsigned long fds_bits [ 1 ] ; } 
s#files_struct struct files_struct { t#atomic_t count ; s#fdtable * fdt ; s#fdtable fdtab ; t#spinlock_t file_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int next_fd ; s#embedded_fd_set close_on_exec_init ; s#embedded_fd_set open_fds_init ; s#file * fd_array [ 64 ] ; } 
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
tty_mutex extern s#mutex tty_mutex 
tty_name extern char * tty_name ( s#tty_struct * , char * ) 
tty_check_change extern int tty_check_change ( s#tty_struct * ) 
tty_wakeup extern void tty_wakeup ( s#tty_struct * ) 
tty_hangup extern void tty_hangup ( s#tty_struct * ) 
tty_vhangup extern void tty_vhangup ( s#tty_struct * ) 
tty_hung_up_p extern int tty_hung_up_p ( s#file * ) 
stop_tty extern void stop_tty ( s#tty_struct * ) 
start_tty extern void start_tty ( s#tty_struct * ) 
tty_init_termios extern int tty_init_termios ( s#tty_struct * ) 
tty_free_termios extern void tty_free_termios ( s#tty_struct * ) 
tty_shutdown extern void tty_shutdown ( s#tty_struct * ) 
tty_kref_put extern void tty_kref_put ( s#tty_struct * ) 
tty_get_pgrp extern s#pid * tty_get_pgrp ( s#tty_struct * ) 
tty_pair_get_tty extern s#tty_struct * tty_pair_get_tty ( s#tty_struct * ) 
tty_pair_get_pty extern s#tty_struct * tty_pair_get_pty ( s#tty_struct * ) 
do_SAK extern void do_SAK ( s#tty_struct * ) 
tty_put_char extern int tty_put_char ( s#tty_struct * , unsigned char ) 
tty_register_device extern s#device * tty_register_device ( s#tty_driver * , unsigned , s#device * ) 
tty_unregister_device extern void tty_unregister_device ( s#tty_driver * , unsigned ) 
alloc_tty_driver extern s#tty_driver * alloc_tty_driver ( int ) 
tty_driver_kref_put extern void tty_driver_kref_put ( s#tty_driver * ) 
tty_set_operations extern void tty_set_operations ( s#tty_driver * , const s#tty_operations * ) 
put_tty_driver extern void put_tty_driver ( s#tty_driver * ) 
tty_register_driver extern int tty_register_driver ( s#tty_driver * ) 
tty_unregister_driver extern int tty_unregister_driver ( s#tty_driver * ) 
tty_devnum extern t#dev_t tty_devnum ( s#tty_struct * ) 
get_current_tty extern s#tty_struct * get_current_tty ( void ) 

/* drivers/tty/tty_ioctl.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##serial_icounter_struct
tty_chars_in_buffer extern int tty_chars_in_buffer ( s#tty_struct * ) 
tty_write_room extern int tty_write_room ( s#tty_struct * ) 
tty_driver_flush_buffer extern void tty_driver_flush_buffer ( s#tty_struct * ) 
tty_throttle extern void tty_throttle ( s#tty_struct * ) 
tty_unthrottle extern void tty_unthrottle ( s#tty_struct * ) 
tty_wait_until_sent extern void tty_wait_until_sent ( s#tty_struct * , long ) 
tty_termios_baud_rate extern t#speed_t tty_termios_baud_rate ( s#ktermios * ) 
tty_termios_input_baud_rate extern t#speed_t tty_termios_input_baud_rate ( s#ktermios * ) 
tty_termios_encode_baud_rate extern void tty_termios_encode_baud_rate ( s#ktermios * , t#speed_t , t#speed_t ) 
tty_encode_baud_rate extern void tty_encode_baud_rate ( s#tty_struct * , t#speed_t , t#speed_t ) 
tty_get_baud_rate extern t#speed_t tty_get_baud_rate ( s#tty_struct * ) 
tty_termios_copy_hw extern void tty_termios_copy_hw ( s#ktermios * , s#ktermios * ) 
tty_termios_hw_change extern int tty_termios_hw_change ( s#ktermios * , s#ktermios * ) 
tty_set_termios extern int tty_set_termios ( s#tty_struct * , s#ktermios * ) 
tty_mode_ioctl extern int tty_mode_ioctl ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 
tty_perform_flush extern int tty_perform_flush ( s#tty_struct * , unsigned long ) 
n_tty_ioctl_helper extern int n_tty_ioctl_helper ( s#tty_struct * , s#file * , unsigned int , unsigned long ) 

/* drivers/tty/tty_ldisc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##serial_icounter_struct
tty_register_ldisc extern int tty_register_ldisc ( int , s#tty_ldisc_ops * ) 
tty_unregister_ldisc extern int tty_unregister_ldisc ( int ) 
tty_ldisc_ref_wait extern s#tty_ldisc * tty_ldisc_ref_wait ( s#tty_struct * ) 
tty_ldisc_ref extern s#tty_ldisc * tty_ldisc_ref ( s#tty_struct * ) 
tty_ldisc_deref extern void tty_ldisc_deref ( s#tty_ldisc * ) 
tty_ldisc_flush extern void tty_ldisc_flush ( s#tty_struct * ) 

/* drivers/tty/tty_mutex.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
__big_tty_mutex_owner extern s#task_struct * __big_tty_mutex_owner 
tty_lock extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_lock ( void ) 
tty_unlock extern void __attribute__ ( ( section ( ".spinlock.text" ) ) ) tty_unlock ( void ) 

/* drivers/tty/tty_port.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
tty_port_init extern void tty_port_init ( s#tty_port * ) 
tty_port_alloc_xmit_buf extern int tty_port_alloc_xmit_buf ( s#tty_port * ) 
tty_port_free_xmit_buf extern void tty_port_free_xmit_buf ( s#tty_port * ) 
tty_port_put extern void tty_port_put ( s#tty_port * ) 
tty_port_tty_get extern s#tty_struct * tty_port_tty_get ( s#tty_port * ) 
tty_port_tty_set extern void tty_port_tty_set ( s#tty_port * , s#tty_struct * ) 
tty_port_hangup extern void tty_port_hangup ( s#tty_port * ) 
tty_port_carrier_raised extern int tty_port_carrier_raised ( s#tty_port * ) 
tty_port_raise_dtr_rts extern void tty_port_raise_dtr_rts ( s#tty_port * ) 
tty_port_lower_dtr_rts extern void tty_port_lower_dtr_rts ( s#tty_port * ) 
tty_port_block_til_ready extern int tty_port_block_til_ready ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_start extern int tty_port_close_start ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_close_end extern void tty_port_close_end ( s#tty_port * , s#tty_struct * ) 
tty_port_close extern void tty_port_close ( s#tty_port * , s#tty_struct * , s#file * ) 
tty_port_open extern int tty_port_open ( s#tty_port * , s#tty_struct * , s#file * ) 

/* drivers/tty/vt/consolemap.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##serial_icounter_struct
s#console_font struct console_font { unsigned int width , height ; unsigned int charcount ; unsigned char * data ; } 
s#consw struct consw { s#module * owner ; const char * ( * con_startup ) ( void ) ; void ( * con_init ) ( s#vc_data * , int ) ; void ( * con_deinit ) ( s#vc_data * ) ; void ( * con_clear ) ( s#vc_data * , int , int , int , int ) ; void ( * con_putc ) ( s#vc_data * , int , int , int ) ; void ( * con_putcs ) ( s#vc_data * , const unsigned short * , int , int , int ) ; void ( * con_cursor ) ( s#vc_data * , int ) ; int ( * con_scroll ) ( s#vc_data * , int , int , int , int ) ; void ( * con_bmove ) ( s#vc_data * , int , int , int , int , int , int ) ; int ( * con_switch ) ( s#vc_data * ) ; int ( * con_blank ) ( s#vc_data * , int , int ) ; int ( * con_font_set ) ( s#vc_data * , s#console_font * , unsigned ) ; int ( * con_font_get ) ( s#vc_data * , s#console_font * ) ; int ( * con_font_default ) ( s#vc_data * , s#console_font * , char * ) ; int ( * con_font_copy ) ( s#vc_data * , int ) ; int ( * con_resize ) ( s#vc_data * , unsigned int , unsigned int , unsigned int ) ; int ( * con_set_palette ) ( s#vc_data * , unsigned char * ) ; int ( * con_scrolldelta ) ( s#vc_data * , int ) ; int ( * con_set_origin ) ( s#vc_data * ) ; void ( * con_save_screen ) ( s#vc_data * ) ; t#u8 ( * con_build_attr ) ( s#vc_data * , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 , t#u8 ) ; void ( * con_invert_region ) ( s#vc_data * , t#u16 * , int ) ; t#u16 * ( * con_screen_pos ) ( s#vc_data * , int ) ; unsigned long ( * con_getxy ) ( s#vc_data * , unsigned long , int * , int * ) ; int ( * con_debug_enter ) ( s#vc_data * ) ; int ( * con_debug_leave ) ( s#vc_data * ) ; } 
s#vt_mode struct vt_mode { char mode ; char waitv ; short relsig ; short acqsig ; short frsig ; } 
s#vc_data struct vc_data { s#tty_port port ; unsigned short vc_num ; unsigned int vc_cols ; unsigned int vc_rows ; unsigned int vc_size_row ; unsigned int vc_scan_lines ; unsigned long vc_origin ; unsigned long vc_scr_end ; unsigned long vc_visible_origin ; unsigned int vc_top , vc_bottom ; const s#consw * vc_sw ; unsigned short * vc_screenbuf ; unsigned int vc_screenbuf_size ; unsigned char vc_mode ; unsigned char vc_attr ; unsigned char vc_def_color ; unsigned char vc_color ; unsigned char vc_s_color ; unsigned char vc_ulcolor ; unsigned char vc_itcolor ; unsigned char vc_halfcolor ; unsigned int vc_cursor_type ; unsigned short vc_complement_mask ; unsigned short vc_s_complement_mask ; unsigned int vc_x , vc_y ; unsigned int vc_saved_x , vc_saved_y ; unsigned long vc_pos ; unsigned short vc_hi_font_mask ; s#console_font vc_font ; unsigned short vc_video_erase_char ; unsigned int vc_state ; unsigned int vc_npar , vc_par [ 16 ] ; s#vt_mode vt_mode ; s#pid * vt_pid ; int vt_newvt ; t#wait_queue_head_t paste_wait ; unsigned int vc_charset : 1 ; unsigned int vc_s_charset : 1 ; unsigned int vc_disp_ctrl : 1 ; unsigned int vc_toggle_meta : 1 ; unsigned int vc_decscnm : 1 ; unsigned int vc_decom : 1 ; unsigned int vc_decawm : 1 ; unsigned int vc_deccm : 1 ; unsigned int vc_decim : 1 ; unsigned int vc_deccolm : 1 ; unsigned int vc_intensity : 2 ; unsigned int vc_italic : 1 ; unsigned int vc_underline : 1 ; unsigned int vc_blink : 1 ; unsigned int vc_reverse : 1 ; unsigned int vc_s_intensity : 2 ; unsigned int vc_s_italic : 1 ; unsigned int vc_s_underline : 1 ; unsigned int vc_s_blink : 1 ; unsigned int vc_s_reverse : 1 ; unsigned int vc_ques : 1 ; unsigned int vc_need_wrap : 1 ; unsigned int vc_can_do_color : 1 ; unsigned int vc_report_mouse : 2 ; unsigned char vc_utf : 1 ; unsigned char vc_utf_count ; int vc_utf_char ; unsigned int vc_tab_stop [ 8 ] ; unsigned char vc_palette [ 16 * 3 ] ; unsigned short * vc_translate ; unsigned char vc_G0_charset ; unsigned char vc_G1_charset ; unsigned char vc_saved_G0 ; unsigned char vc_saved_G1 ; unsigned int vc_resize_user ; unsigned int vc_bell_pitch ; unsigned int vc_bell_duration ; s#vc_data * * vc_display_fg ; unsigned long vc_uni_pagedir ; unsigned long * vc_uni_pagedir_loc ; t#bool vc_panic_force_write ; } 
inverse_translate extern t#u16 inverse_translate ( s#vc_data * , int , int ) 
con_set_default_unimap int con_set_default_unimap ( s#vc_data * ) 
con_copy_unimap int con_copy_unimap ( s#vc_data * , s#vc_data * ) 

/* drivers/tty/vt/keyboard.o */
s#kbd_struct struct kbd_struct { unsigned char lockstate ; unsigned char slockstate ; unsigned char ledmode : 2 ; unsigned char ledflagstate : 4 ; unsigned char default_ledflagstate : 4 ; unsigned char kbdmode : 3 ; unsigned char modeflags : 5 ; } 
kbd_table extern s#kbd_struct kbd_table [ ] 
register_keyboard_notifier extern int register_keyboard_notifier ( s#notifier_block * ) 
unregister_keyboard_notifier extern int unregister_keyboard_notifier ( s#notifier_block * ) 
kd_mksound extern void kd_mksound ( unsigned int , unsigned int ) 

/* drivers/tty/vt/vt.o */
register_vt_notifier extern int register_vt_notifier ( s#notifier_block * ) 
unregister_vt_notifier extern int unregister_vt_notifier ( s#notifier_block * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
unbind_con_driver extern int unbind_con_driver ( const s#consw * , int , int , int ) 
do_unbind_con_driver extern int do_unbind_con_driver ( const s#consw * , int , int , int ) 
con_is_bound int con_is_bound ( const s#consw * ) 
con_debug_enter int con_debug_enter ( s#vc_data * ) 
con_debug_leave int con_debug_leave ( void ) 
register_con_driver int register_con_driver ( const s#consw * , int , int ) 
unregister_con_driver int unregister_con_driver ( const s#consw * ) 
do_unregister_con_driver int do_unregister_con_driver ( const s#consw * ) 
do_take_over_console int do_take_over_console ( const s#consw * , int , int , int ) 
do_blank_screen void do_blank_screen ( int ) 
do_unblank_screen void do_unblank_screen ( int ) 
screen_glyph extern t#u16 screen_glyph ( s#vc_data * , int ) 
color_table extern unsigned char color_table [ ] 
default_red extern int default_red [ ] 
default_grn extern int default_grn [ ] 
default_blu extern int default_blu [ ] 
update_region void update_region ( s#vc_data * , unsigned long , int ) 
redraw_screen void redraw_screen ( s#vc_data * , int ) 
vc_resize int vc_resize ( s#vc_data * , unsigned int , unsigned int ) 
fg_console extern int fg_console 
console_blank_hook int ( * console_blank_hook ) ( int ) 
console_blanked extern int console_blanked 
s#vc struct vc { s#vc_data * d ; s#work_struct SAK_work ; } 
vc_cons extern s#vc vc_cons [ 63 ] 
global_cursor_default extern int global_cursor_default 
take_over_console int take_over_console ( const s#consw * , int , int , int ) 
give_up_console void give_up_console ( const s#consw * ) 

/* drivers/tty/vt/vt_ioctl.o */
pm_set_vt_switch void pm_set_vt_switch ( int ) 

/* drivers/uio/uio.o */
s##uio_device
s##uio_map
s#uio_mem struct uio_mem { const char * name ; unsigned long addr ; unsigned long size ; int memtype ; void * internal_addr ; s#uio_map * map ; } 
s##uio_portio
s#uio_port struct uio_port { const char * name ; unsigned long start ; unsigned long size ; int porttype ; s#uio_portio * portio ; } 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##posix_acl
s##linux_binfmt
s##anon_vma
s#uio_info struct uio_info { s#uio_device * uio_dev ; const char * name ; const char * version ; s#uio_mem mem [ 5 ] ; s#uio_port port [ 5 ] ; long irq ; unsigned long irq_flags ; void * priv ; t#irqreturn_t ( * handler ) ( int , s#uio_info * ) ; int ( * mmap ) ( s#uio_info * , s#vm_area_struct * ) ; int ( * open ) ( s#uio_info * , s#inode * ) ; int ( * release ) ( s#uio_info * , s#inode * ) ; int ( * irqcontrol ) ( s#uio_info * , t#s32 ) ; } 
uio_event_notify extern void uio_event_notify ( s#uio_info * ) 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
__uio_register_device extern int __uio_register_device ( s#module * , s#device * , s#uio_info * ) 
uio_unregister_device extern void uio_unregister_device ( s#uio_info * ) 

/* drivers/usb/core/driver.o */
s#usb_dynids struct usb_dynids { t#spinlock_t lock ; s#list_head list ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
s##driver_private
usb_store_new_id extern t#ssize_t usb_store_new_id ( s#usb_dynids * , s#device_driver * , const char * , t#size_t ) 
s##ep_device
s#usbdrv_wrap struct usbdrv_wrap { s#device_driver driver ; int for_devices ; } 
s#usb_driver struct usb_driver { const char * name ; int ( * probe ) ( s#usb_interface * , const s#usb_device_id * ) ; void ( * disconnect ) ( s#usb_interface * ) ; int ( * unlocked_ioctl ) ( s#usb_interface * , unsigned int , void * ) ; int ( * suspend ) ( s#usb_interface * , t#pm_message_t ) ; int ( * resume ) ( s#usb_interface * ) ; int ( * reset_resume ) ( s#usb_interface * ) ; int ( * pre_reset ) ( s#usb_interface * ) ; int ( * post_reset ) ( s#usb_interface * ) ; const s#usb_device_id * id_table ; s#usb_dynids dynids ; s#usbdrv_wrap drvwrap ; unsigned int no_dynamic_id : 1 ; unsigned int supports_autosuspend : 1 ; unsigned int disable_hub_initiated_lpm : 1 ; unsigned int soft_unbind : 1 ; void * suse_kabi_padding ; } 
usb_driver_claim_interface extern int usb_driver_claim_interface ( s#usb_driver * , s#usb_interface * , void * ) 
usb_driver_release_interface extern void usb_driver_release_interface ( s#usb_driver * , s#usb_interface * ) 
usb_match_one_id extern int usb_match_one_id ( s#usb_interface * , const s#usb_device_id * ) 
usb_match_id const s#usb_device_id * usb_match_id ( s#usb_interface * , const s#usb_device_id * ) 
s#usb_tt struct usb_tt { s#usb_device * hub ; int multi ; unsigned think_time ; t#spinlock_t lock ; s#list_head clear_list ; s#work_struct clear_work ; } 
s##wusb_dev
s#usb_device_driver struct usb_device_driver { const char * name ; int ( * probe ) ( s#usb_device * ) ; void ( * disconnect ) ( s#usb_device * ) ; int ( * suspend ) ( s#usb_device * , t#pm_message_t ) ; int ( * resume ) ( s#usb_device * , t#pm_message_t ) ; s#usbdrv_wrap drvwrap ; unsigned int supports_autosuspend : 1 ; } 
usb_register_device_driver extern int usb_register_device_driver ( s#usb_device_driver * , s#module * ) 
usb_deregister_device_driver extern void usb_deregister_device_driver ( s#usb_device_driver * ) 
usb_register_driver extern int usb_register_driver ( s#usb_driver * , s#module * , const char * ) 
usb_deregister extern void usb_deregister ( s#usb_driver * ) 
usb_enable_autosuspend extern void usb_enable_autosuspend ( s#usb_device * ) 
usb_disable_autosuspend extern void usb_disable_autosuspend ( s#usb_device * ) 
usb_autopm_put_interface extern void usb_autopm_put_interface ( s#usb_interface * ) 
usb_autopm_put_interface_async extern void usb_autopm_put_interface_async ( s#usb_interface * ) 
usb_autopm_put_interface_no_suspend extern void usb_autopm_put_interface_no_suspend ( s#usb_interface * ) 
usb_autopm_get_interface extern int usb_autopm_get_interface ( s#usb_interface * ) 
usb_autopm_get_interface_async extern int usb_autopm_get_interface_async ( s#usb_interface * ) 
usb_autopm_get_interface_no_resume extern void usb_autopm_get_interface_no_resume ( s#usb_interface * ) 

/* drivers/usb/core/file.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#usb_class_driver struct usb_class_driver { char * name ; char * ( * devnode ) ( s#device * , t#mode_t * ) ; const s#file_operations * fops ; int minor_base ; } 
usb_register_dev extern int usb_register_dev ( s#usb_interface * , s#usb_class_driver * ) 
usb_deregister_dev extern void usb_deregister_dev ( s#usb_interface * , s#usb_class_driver * ) 

/* drivers/usb/core/hcd.o */
usb_hcds_loaded extern unsigned long usb_hcds_loaded 
usb_bus_list extern s#list_head usb_bus_list 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
usb_bus_list_lock extern s#mutex usb_bus_list_lock 
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##ep_device
s##wusb_dev
e#usb3_link_state enum usb3_link_state { USB3_LPM_U0 = 0 , USB3_LPM_U1 , USB3_LPM_U2 , USB3_LPM_U3 } 
s#hc_driver struct hc_driver { const char * description ; const char * product_desc ; t#size_t hcd_priv_size ; t#irqreturn_t ( * irq ) ( s#usb_hcd * ) ; int flags ; int ( * reset ) ( s#usb_hcd * ) ; int ( * start ) ( s#usb_hcd * ) ; int ( * pci_suspend ) ( s#usb_hcd * , t#bool ) ; int ( * pci_resume ) ( s#usb_hcd * , t#bool ) ; void ( * stop ) ( s#usb_hcd * ) ; void ( * shutdown ) ( s#usb_hcd * ) ; int ( * get_frame_number ) ( s#usb_hcd * ) ; int ( * urb_enqueue ) ( s#usb_hcd * , s#urb * , t#gfp_t ) ; int ( * urb_dequeue ) ( s#usb_hcd * , s#urb * , int ) ; int ( * map_urb_for_dma ) ( s#usb_hcd * , s#urb * , t#gfp_t ) ; void ( * unmap_urb_for_dma ) ( s#usb_hcd * , s#urb * ) ; void ( * endpoint_disable ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; void ( * endpoint_reset ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; int ( * hub_status_data ) ( s#usb_hcd * , char * ) ; int ( * hub_control ) ( s#usb_hcd * , t#u16 , t#u16 , t#u16 , char * , t#u16 ) ; int ( * bus_suspend ) ( s#usb_hcd * ) ; int ( * bus_resume ) ( s#usb_hcd * ) ; int ( * start_port_reset ) ( s#usb_hcd * , unsigned ) ; void ( * relinquish_port ) ( s#usb_hcd * , int ) ; int ( * port_handed_over ) ( s#usb_hcd * , int ) ; void ( * clear_tt_buffer_complete ) ( s#usb_hcd * , s#usb_host_endpoint * ) ; int ( * alloc_dev ) ( s#usb_hcd * , s#usb_device * ) ; void ( * free_dev ) ( s#usb_hcd * , s#usb_device * ) ; int ( * alloc_streams ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * * , unsigned int , unsigned int , t#gfp_t ) ; int ( * free_streams ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * * , unsigned int , t#gfp_t ) ; int ( * add_endpoint ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * ) ; int ( * drop_endpoint ) ( s#usb_hcd * , s#usb_device * , s#usb_host_endpoint * ) ; int ( * check_bandwidth ) ( s#usb_hcd * , s#usb_device * ) ; void ( * reset_bandwidth ) ( s#usb_hcd * , s#usb_device * ) ; int ( * address_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * update_hub_device ) ( s#usb_hcd * , s#usb_device * , s#usb_tt * , t#gfp_t ) ; int ( * reset_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * update_device ) ( s#usb_hcd * , s#usb_device * ) ; int ( * set_usb2_hw_lpm ) ( s#usb_hcd * , s#usb_device * , int ) ; int ( * enable_usb3_lpm_timeout ) ( s#usb_hcd * , s#usb_device * , e#usb3_link_state ) ; int ( * disable_usb3_lpm_timeout ) ( s#usb_hcd * , s#usb_device * , e#usb3_link_state ) ; void * suse_kabi_padding ; } 
s##dma_pool
s#usb_hcd struct usb_hcd { s#usb_bus self ; s#kref kref ; const char * product_desc ; int speed ; char irq_descr [ 24 ] ; s#timer_list rh_timer ; s#urb * status_urb ; s#work_struct wakeup_work ; const s#hc_driver * driver ; unsigned long flags ; unsigned rh_registered : 1 ; unsigned rh_pollable : 1 ; unsigned msix_enabled : 1 ; unsigned uses_new_polling : 1 ; unsigned wireless : 1 ; unsigned authorized_default : 1 ; unsigned has_tt : 1 ; int irq ; void * regs ; t#u64 rsrc_start ; t#u64 rsrc_len ; unsigned power_budget ; s#mutex * bandwidth_mutex ; s#usb_hcd * shared_hcd ; s#usb_hcd * primary_hcd ; s#dma_pool * pool [ 4 ] ; int state ; void * suse_kabi_padding ; unsigned long hcd_priv [ 0 ] __attribute__ ( ( aligned ( sizeof ( s64 ) ) ) ) ; } 
usb_hcd_poll_rh_status extern void usb_hcd_poll_rh_status ( s#usb_hcd * ) 
usb_calc_bus_time extern long usb_calc_bus_time ( int , int , int , int ) 
usb_hcd_link_urb_to_ep extern int usb_hcd_link_urb_to_ep ( s#usb_hcd * , s#urb * ) 
usb_hcd_check_unlink_urb extern int usb_hcd_check_unlink_urb ( s#usb_hcd * , s#urb * , int ) 
usb_hcd_unlink_urb_from_ep extern void usb_hcd_unlink_urb_from_ep ( s#usb_hcd * , s#urb * ) 
usb_hcd_unmap_urb_setup_for_dma extern void usb_hcd_unmap_urb_setup_for_dma ( s#usb_hcd * , s#urb * ) 
usb_hcd_unmap_urb_for_dma extern void usb_hcd_unmap_urb_for_dma ( s#usb_hcd * , s#urb * ) 
usb_hcd_map_urb_for_dma extern int usb_hcd_map_urb_for_dma ( s#usb_hcd * , s#urb * , t#gfp_t ) 
usb_hcd_giveback_urb extern void usb_hcd_giveback_urb ( s#usb_hcd * , s#urb * , int ) 
usb_alloc_streams extern int usb_alloc_streams ( s#usb_interface * , s#usb_host_endpoint * * , unsigned int , unsigned int , t#gfp_t ) 
usb_free_streams extern void usb_free_streams ( s#usb_interface * , s#usb_host_endpoint * * , unsigned int , t#gfp_t ) 
usb_hcd_resume_root_hub extern void usb_hcd_resume_root_hub ( s#usb_hcd * ) 
usb_hcd_irq extern t#irqreturn_t usb_hcd_irq ( int , void * ) 
usb_hc_died extern void usb_hc_died ( s#usb_hcd * ) 
usb_create_shared_hcd extern s#usb_hcd * usb_create_shared_hcd ( const s#hc_driver * , s#device * , const char * , s#usb_hcd * ) 
usb_create_hcd extern s#usb_hcd * usb_create_hcd ( const s#hc_driver * , s#device * , const char * ) 
usb_get_hcd extern s#usb_hcd * usb_get_hcd ( s#usb_hcd * ) 
usb_put_hcd extern void usb_put_hcd ( s#usb_hcd * ) 
usb_hcd_is_primary_hcd extern int usb_hcd_is_primary_hcd ( s#usb_hcd * ) 
usb_add_hcd extern int usb_add_hcd ( s#usb_hcd * , unsigned int , unsigned long ) 
usb_remove_hcd extern void usb_remove_hcd ( s#usb_hcd * ) 
s##mfd_cell
usb_hcd_platform_shutdown extern void usb_hcd_platform_shutdown ( s#platform_device * ) 

/* drivers/usb/core/hcd-pci.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
usb_hcd_pci_probe extern int usb_hcd_pci_probe ( s#pci_dev * , const s#pci_device_id * ) 
usb_hcd_pci_remove extern void usb_hcd_pci_remove ( s#pci_dev * ) 
usb_hcd_pci_shutdown extern void usb_hcd_pci_shutdown ( s#pci_dev * ) 
usb_hcd_pci_pm_ops extern const s#dev_pm_ops usb_hcd_pci_pm_ops 

/* drivers/usb/core/hub.o */
ehci_cf_port_reset_rwsem extern s#rw_semaphore ehci_cf_port_reset_rwsem 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##wusb_dev
usb_wakeup_notification extern void usb_wakeup_notification ( s#usb_device * , unsigned int ) 
s##scatterlist
usb_hub_clear_tt_buffer extern int usb_hub_clear_tt_buffer ( s#urb * ) 
usb_set_device_state extern void usb_set_device_state ( s#usb_device * , e#usb_device_state ) 
usb_disable_ltm extern int usb_disable_ltm ( s#usb_device * ) 
usb_enable_ltm extern void usb_enable_ltm ( s#usb_device * ) 
usb_root_hub_lost_power extern void usb_root_hub_lost_power ( s#usb_device * ) 
usb_disable_lpm extern int usb_disable_lpm ( s#usb_device * ) 
usb_unlocked_disable_lpm extern int usb_unlocked_disable_lpm ( s#usb_device * ) 
usb_enable_lpm extern void usb_enable_lpm ( s#usb_device * ) 
usb_unlocked_enable_lpm extern void usb_unlocked_enable_lpm ( s#usb_device * ) 
usb_ep0_reinit extern void usb_ep0_reinit ( s#usb_device * ) 
usb_reset_device extern int usb_reset_device ( s#usb_device * ) 
usb_queue_reset_device extern void usb_queue_reset_device ( s#usb_interface * ) 

/* drivers/usb/core/message.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##ep_device
s##wusb_dev
usb_control_msg extern int usb_control_msg ( s#usb_device * , unsigned int , t#__u8 , t#__u8 , t#__u16 , t#__u16 , void * , t#__u16 , int ) 
usb_interrupt_msg extern int usb_interrupt_msg ( s#usb_device * , unsigned int , void * , int , int * , int ) 
usb_bulk_msg extern int usb_bulk_msg ( s#usb_device * , unsigned int , void * , int , int * , int ) 
s#usb_sg_request struct usb_sg_request { int status ; t#size_t bytes ; t#spinlock_t lock ; s#usb_device * dev ; int pipe ; int entries ; s#urb * * urbs ; int count ; s#completion complete ; } 
usb_sg_init int usb_sg_init ( s#usb_sg_request * , s#usb_device * , unsigned , unsigned , s#scatterlist * , int , t#size_t , t#gfp_t ) 
usb_sg_wait void usb_sg_wait ( s#usb_sg_request * ) 
usb_sg_cancel void usb_sg_cancel ( s#usb_sg_request * ) 
usb_get_descriptor extern int usb_get_descriptor ( s#usb_device * , unsigned char , unsigned char , void * , int ) 
usb_string extern int usb_string ( s#usb_device * , int , char * , t#size_t ) 
usb_get_status extern int usb_get_status ( s#usb_device * , int , int , void * ) 
usb_clear_halt extern int usb_clear_halt ( s#usb_device * , int ) 
usb_reset_endpoint extern void usb_reset_endpoint ( s#usb_device * , unsigned int ) 
usb_set_interface extern int usb_set_interface ( s#usb_device * , int , int ) 
usb_reset_configuration extern int usb_reset_configuration ( s#usb_device * ) 
usb_driver_set_configuration extern int usb_driver_set_configuration ( s#usb_device * , int ) 

/* drivers/usb/core/notify.o */
usb_register_notify extern void usb_register_notify ( s#notifier_block * ) 
usb_unregister_notify extern void usb_unregister_notify ( s#notifier_block * ) 

/* drivers/usb/core/urb.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##wusb_dev
usb_init_urb extern void usb_init_urb ( s#urb * ) 
usb_alloc_urb extern s#urb * usb_alloc_urb ( int , t#gfp_t ) 
usb_free_urb extern void usb_free_urb ( s#urb * ) 
usb_get_urb extern s#urb * usb_get_urb ( s#urb * ) 
usb_anchor_urb extern void usb_anchor_urb ( s#urb * , s#usb_anchor * ) 
usb_unanchor_urb extern void usb_unanchor_urb ( s#urb * ) 
usb_submit_urb extern int usb_submit_urb ( s#urb * , t#gfp_t ) 
usb_unlink_urb extern int usb_unlink_urb ( s#urb * ) 
usb_kill_urb extern void usb_kill_urb ( s#urb * ) 
usb_poison_urb extern void usb_poison_urb ( s#urb * ) 
usb_unpoison_urb extern void usb_unpoison_urb ( s#urb * ) 
usb_kill_anchored_urbs extern void usb_kill_anchored_urbs ( s#usb_anchor * ) 
usb_poison_anchored_urbs extern void usb_poison_anchored_urbs ( s#usb_anchor * ) 
usb_unpoison_anchored_urbs extern void usb_unpoison_anchored_urbs ( s#usb_anchor * ) 
usb_unlink_anchored_urbs extern void usb_unlink_anchored_urbs ( s#usb_anchor * ) 
usb_wait_anchor_empty_timeout extern int usb_wait_anchor_empty_timeout ( s#usb_anchor * , unsigned int ) 
usb_get_from_anchor extern s#urb * usb_get_from_anchor ( s#usb_anchor * ) 
usb_scuttle_anchored_urbs extern void usb_scuttle_anchored_urbs ( s#usb_anchor * ) 
usb_anchor_empty extern int usb_anchor_empty ( s#usb_anchor * ) 

/* drivers/usb/core/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
usb_find_alt_setting extern s#usb_host_interface * usb_find_alt_setting ( s#usb_host_config * , unsigned int , unsigned int ) 
s##wusb_dev
usb_ifnum_to_if extern s#usb_interface * usb_ifnum_to_if ( const s#usb_device * , unsigned ) 
usb_altnum_to_altsetting extern s#usb_host_interface * usb_altnum_to_altsetting ( const s#usb_interface * , unsigned int ) 
usb_find_interface extern s#usb_interface * usb_find_interface ( s#usb_driver * , int ) 
usb_get_dev extern s#usb_device * usb_get_dev ( s#usb_device * ) 
usb_put_dev extern void usb_put_dev ( s#usb_device * ) 
usb_get_intf s#usb_interface * usb_get_intf ( s#usb_interface * ) 
usb_put_intf void usb_put_intf ( s#usb_interface * ) 
usb_lock_device_for_reset extern int usb_lock_device_for_reset ( s#usb_device * , const s#usb_interface * ) 
usb_get_current_frame_number extern int usb_get_current_frame_number ( s#usb_device * ) 
__usb_get_extra_descriptor int __usb_get_extra_descriptor ( char * , unsigned , unsigned char , void * * ) 
usb_alloc_coherent void * usb_alloc_coherent ( s#usb_device * , t#size_t , t#gfp_t , t#dma_addr_t * ) 
usb_free_coherent void usb_free_coherent ( s#usb_device * , t#size_t , void * , t#dma_addr_t ) 
usb_disabled extern int usb_disabled ( void ) 
usb_debug_root extern s#dentry * usb_debug_root 

/* drivers/usb/host/pci-quirks.o */
usb_amd_find_chipset_info int usb_amd_find_chipset_info ( void ) 
usb_amd_quirk_pll_disable void usb_amd_quirk_pll_disable ( void ) 
usb_amd_quirk_pll_enable void usb_amd_quirk_pll_enable ( void ) 
usb_amd_dev_put void usb_amd_dev_put ( void ) 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
uhci_reset_hc void uhci_reset_hc ( s#pci_dev * , unsigned long ) 
uhci_check_and_reset_hc int uhci_check_and_reset_hc ( s#pci_dev * , unsigned long ) 
usb_is_intel_switchable_xhci t#bool usb_is_intel_switchable_xhci ( s#pci_dev * ) 
usb_enable_xhci_ports void usb_enable_xhci_ports ( s#pci_dev * ) 
usb_disable_xhci_ports void usb_disable_xhci_ports ( s#pci_dev * ) 

/* drivers/usb/misc/ftdi-elan.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mfd_cell
ftdi_elan_gone_away void ftdi_elan_gone_away ( s#platform_device * ) 
usb_ftdi_elan_write_pcimem int usb_ftdi_elan_write_pcimem ( s#platform_device * , int , t#u8 , t#u32 ) 
usb_ftdi_elan_read_pcimem int usb_ftdi_elan_read_pcimem ( s#platform_device * , int , t#u8 , t#u32 * ) 
s##ep_device
s##wusb_dev
s##scatterlist
usb_ftdi_elan_edset_setup int usb_ftdi_elan_edset_setup ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_input int usb_ftdi_elan_edset_input ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_empty int usb_ftdi_elan_edset_empty ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_output int usb_ftdi_elan_edset_output ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_single int usb_ftdi_elan_edset_single ( s#platform_device * , t#u8 , void * , s#urb * , t#u8 , t#u8 , t#u8 , void ( * ) ( void * , s#urb * , t#u8 * , int , int , int , int , int , int , int , int , int ) ) 
usb_ftdi_elan_edset_flush int usb_ftdi_elan_edset_flush ( s#platform_device * , t#u8 , void * ) 

/* drivers/usb/misc/phidget.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
phidget_class s#class * phidget_class 

/* drivers/usb/serial/ezusb.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##wusb_dev
e#port_dev_state enum port_dev_state { PORT_UNREGISTERED , PORT_REGISTERING , PORT_REGISTERED , PORT_UNREGISTERING , } 
s#usb_serial_port struct usb_serial_port { s#usb_serial * serial ; s#tty_port port ; t#spinlock_t lock ; unsigned char number ; unsigned char * interrupt_in_buffer ; s#urb * interrupt_in_urb ; t#__u8 interrupt_in_endpointAddress ; unsigned char * interrupt_out_buffer ; int interrupt_out_size ; s#urb * interrupt_out_urb ; t#__u8 interrupt_out_endpointAddress ; unsigned char * bulk_in_buffer ; int bulk_in_size ; s#urb * read_urb ; t#__u8 bulk_in_endpointAddress ; unsigned char * bulk_out_buffer ; int bulk_out_size ; s#urb * write_urb ; s#kfifo write_fifo ; int write_urb_busy ; unsigned char * bulk_out_buffers [ 2 ] ; s#urb * write_urbs [ 2 ] ; unsigned long write_urbs_free ; t#__u8 bulk_out_endpointAddress ; int tx_bytes ; unsigned long flags ; t#wait_queue_head_t write_wait ; s#work_struct work ; char throttled ; char throttle_req ; unsigned long sysrq ; s#device dev ; e#port_dev_state dev_state ; } 
s#usb_serial_driver struct usb_serial_driver { const char * description ; const s#usb_device_id * id_table ; char num_ports ; s#list_head driver_list ; s#device_driver driver ; s#usb_driver * usb_driver ; s#usb_dynids dynids ; t#size_t bulk_in_size ; t#size_t bulk_out_size ; int ( * probe ) ( s#usb_serial * , const s#usb_device_id * ) ; int ( * attach ) ( s#usb_serial * ) ; int ( * calc_num_ports ) ( s#usb_serial * ) ; void ( * disconnect ) ( s#usb_serial * ) ; void ( * release ) ( s#usb_serial * ) ; int ( * port_probe ) ( s#usb_serial_port * ) ; int ( * port_remove ) ( s#usb_serial_port * ) ; int ( * suspend ) ( s#usb_serial * , t#pm_message_t ) ; int ( * resume ) ( s#usb_serial * ) ; int ( * open ) ( s#tty_struct * , s#usb_serial_port * ) ; void ( * close ) ( s#usb_serial_port * ) ; int ( * write ) ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) ; int ( * write_room ) ( s#tty_struct * ) ; int ( * ioctl ) ( s#tty_struct * , unsigned int , unsigned long ) ; void ( * set_termios ) ( s#tty_struct * , s#usb_serial_port * , s#ktermios * ) ; void ( * break_ctl ) ( s#tty_struct * , int ) ; int ( * chars_in_buffer ) ( s#tty_struct * ) ; void ( * throttle ) ( s#tty_struct * ) ; void ( * unthrottle ) ( s#tty_struct * ) ; int ( * tiocmget ) ( s#tty_struct * ) ; int ( * tiocmset ) ( s#tty_struct * , unsigned int , unsigned int ) ; int ( * get_icount ) ( s#tty_struct * , s#serial_icounter_struct * ) ; void ( * dtr_rts ) ( s#usb_serial_port * , int ) ; int ( * carrier_raised ) ( s#usb_serial_port * ) ; void ( * init_termios ) ( s#tty_struct * ) ; void ( * read_int_callback ) ( s#urb * ) ; void ( * write_int_callback ) ( s#urb * ) ; void ( * read_bulk_callback ) ( s#urb * ) ; void ( * write_bulk_callback ) ( s#urb * ) ; void ( * process_read_urb ) ( s#urb * ) ; int ( * prepare_write_buffer ) ( s#usb_serial_port * , void * , t#size_t ) ; } 
s#usb_serial struct usb_serial { s#usb_device * dev ; s#usb_serial_driver * type ; s#usb_interface * interface ; unsigned char disconnected : 1 ; unsigned char suspending : 1 ; unsigned char attached : 1 ; unsigned char minor ; unsigned char num_ports ; unsigned char num_port_pointers ; char num_interrupt_in ; char num_interrupt_out ; char num_bulk_in ; char num_bulk_out ; s#usb_serial_port * port [ 8 ] ; s#kref kref ; s#mutex disc_mutex ; void * private ; } 
ezusb_writememory extern int ezusb_writememory ( s#usb_serial * , int , unsigned char * , int , t#__u8 ) 
ezusb_set_reset extern int ezusb_set_reset ( s#usb_serial * , unsigned char ) 

/* drivers/usb/serial/generic.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##usb_tt
s##ep_device
s##wusb_dev
usb_serial_generic_open extern int usb_serial_generic_open ( s#tty_struct * , s#usb_serial_port * ) 
usb_serial_generic_close extern void usb_serial_generic_close ( s#usb_serial_port * ) 
usb_serial_generic_write extern int usb_serial_generic_write ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) 
usb_serial_generic_chars_in_buffer extern int usb_serial_generic_chars_in_buffer ( s#tty_struct * ) 
usb_serial_generic_submit_read_urb extern int usb_serial_generic_submit_read_urb ( s#usb_serial_port * , t#gfp_t ) 
usb_serial_generic_process_read_urb extern void usb_serial_generic_process_read_urb ( s#urb * ) 
usb_serial_generic_read_bulk_callback extern void usb_serial_generic_read_bulk_callback ( s#urb * ) 
usb_serial_generic_write_bulk_callback extern void usb_serial_generic_write_bulk_callback ( s#urb * ) 
usb_serial_generic_throttle extern void usb_serial_generic_throttle ( s#tty_struct * ) 
usb_serial_generic_unthrottle extern void usb_serial_generic_unthrottle ( s#tty_struct * ) 
usb_serial_handle_sysrq_char extern int usb_serial_handle_sysrq_char ( s#usb_serial_port * , unsigned int ) 
usb_serial_handle_break extern int usb_serial_handle_break ( s#usb_serial_port * ) 
usb_serial_handle_dcd_change extern void usb_serial_handle_dcd_change ( s#usb_serial_port * , s#tty_struct * , unsigned int ) 
usb_serial_generic_resume extern int usb_serial_generic_resume ( s#usb_serial * ) 
usb_serial_generic_disconnect extern void usb_serial_generic_disconnect ( s#usb_serial * ) 

/* drivers/usb/serial/usb-serial.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##wusb_dev
usb_serial_port_softint extern void usb_serial_port_softint ( s#usb_serial_port * ) 
usb_serial_probe extern int usb_serial_probe ( s#usb_interface * , const s#usb_device_id * ) 
usb_serial_disconnect extern void usb_serial_disconnect ( s#usb_interface * ) 
usb_serial_suspend extern int usb_serial_suspend ( s#usb_interface * , t#pm_message_t ) 
usb_serial_resume extern int usb_serial_resume ( s#usb_interface * ) 
usb_serial_register extern int usb_serial_register ( s#usb_serial_driver * ) 
usb_serial_deregister extern void usb_serial_deregister ( s#usb_serial_driver * ) 

/* drivers/usb/serial/usb_wwan.o */
s##usb_tt
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##wusb_dev
usb_wwan_dtr_rts extern void usb_wwan_dtr_rts ( s#usb_serial_port * , int ) 
usb_wwan_set_termios extern void usb_wwan_set_termios ( s#tty_struct * , s#usb_serial_port * , s#ktermios * ) 
usb_wwan_tiocmget extern int usb_wwan_tiocmget ( s#tty_struct * ) 
usb_wwan_tiocmset extern int usb_wwan_tiocmset ( s#tty_struct * , unsigned int , unsigned int ) 
usb_wwan_ioctl extern int usb_wwan_ioctl ( s#tty_struct * , unsigned int , unsigned long ) 
usb_wwan_write extern int usb_wwan_write ( s#tty_struct * , s#usb_serial_port * , const unsigned char * , int ) 
usb_wwan_write_room extern int usb_wwan_write_room ( s#tty_struct * ) 
usb_wwan_chars_in_buffer extern int usb_wwan_chars_in_buffer ( s#tty_struct * ) 
usb_wwan_open extern int usb_wwan_open ( s#tty_struct * , s#usb_serial_port * ) 
usb_wwan_close extern void usb_wwan_close ( s#usb_serial_port * ) 
usb_wwan_startup extern int usb_wwan_startup ( s#usb_serial * ) 
usb_wwan_disconnect extern void usb_wwan_disconnect ( s#usb_serial * ) 
usb_wwan_release extern void usb_wwan_release ( s#usb_serial * ) 
usb_wwan_suspend extern int usb_wwan_suspend ( s#usb_serial * , t#pm_message_t ) 
usb_wwan_resume extern int usb_wwan_resume ( s#usb_serial * ) 

/* drivers/usb/storage/protocol.o */
s##scsi_device
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##blk_trace
s##bsg_job
s##throtl_data
s##usb_tt
s##ep_device
s##wusb_dev
s#us_unusual_dev struct us_unusual_dev { const char * vendorName ; const char * productName ; t#__u8 useProtocol ; t#__u8 useTransport ; int ( * initFunction ) ( s#us_data * ) ; } 
t#trans_cmnd typedef int ( * trans_cmnd ) ( s#scsi_cmnd * , s#us_data * ) 
t#trans_reset typedef int ( * trans_reset ) ( s#us_data * ) 
t#proto_cmnd typedef void ( * proto_cmnd ) ( s#scsi_cmnd * , s#us_data * ) 
s#usb_ctrlrequest struct usb_ctrlrequest { t#__u8 bRequestType ; t#__u8 bRequest ; t#__le16 wValue ; t#__le16 wIndex ; t#__le16 wLength ; } 
t#extra_data_destructor typedef void ( * extra_data_destructor ) ( void * ) 
t#pm_hook typedef void ( * pm_hook ) ( s#us_data * , int ) 
s#us_data struct us_data { s#mutex dev_mutex ; s#usb_device * pusb_dev ; s#usb_interface * pusb_intf ; s#us_unusual_dev * unusual_dev ; unsigned long fflags ; unsigned long dflags ; unsigned int send_bulk_pipe ; unsigned int recv_bulk_pipe ; unsigned int send_ctrl_pipe ; unsigned int recv_ctrl_pipe ; unsigned int recv_intr_pipe ; char * transport_name ; char * protocol_name ; t#__le32 bcs_signature ; t#u8 subclass ; t#u8 protocol ; t#u8 max_lun ; t#u8 ifnum ; t#u8 ep_bInterval ; t#trans_cmnd transport ; t#trans_reset transport_reset ; t#proto_cmnd proto_handler ; s#scsi_cmnd * srb ; unsigned int tag ; char scsi_name [ 32 ] ; s#urb * current_urb ; s#usb_ctrlrequest * cr ; s#usb_sg_request current_sg ; unsigned char * iobuf ; t#dma_addr_t iobuf_dma ; s#task_struct * ctl_thread ; s#completion cmnd_ready ; s#completion notify ; t#wait_queue_head_t delay_wait ; s#delayed_work scan_dwork ; void * extra ; t#extra_data_destructor extra_destructor ; t#pm_hook suspend_resume_hook ; int use_last_sector_hacks ; int last_sector_retries ; } 
usb_stor_transparent_scsi_command extern void usb_stor_transparent_scsi_command ( s#scsi_cmnd * , s#us_data * ) 
e#xfer_buf_dir enum xfer_buf_dir { TO_XFER_BUF , FROM_XFER_BUF } 
usb_stor_access_xfer_buf extern unsigned int usb_stor_access_xfer_buf ( unsigned char * , unsigned int , s#scsi_cmnd * , s#scatterlist * * , unsigned int * , e#xfer_buf_dir ) 
usb_stor_set_xfer_buf extern void usb_stor_set_xfer_buf ( unsigned char * , unsigned int , s#scsi_cmnd * ) 

/* drivers/usb/storage/scsiglue.o */
usb_stor_sense_invalidCDB extern unsigned char usb_stor_sense_invalidCDB [ 18 ] 

/* drivers/usb/storage/transport.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##usb_tt
s##ep_device
s##wusb_dev
s##scsi_host_cmd_pool
s##scsi_transport_template
s##workqueue_struct
usb_stor_control_msg extern int usb_stor_control_msg ( s#us_data * , unsigned int , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 , int ) 
usb_stor_clear_halt extern int usb_stor_clear_halt ( s#us_data * , unsigned int ) 
usb_stor_ctrl_transfer extern int usb_stor_ctrl_transfer ( s#us_data * , unsigned int , t#u8 , t#u8 , t#u16 , t#u16 , void * , t#u16 ) 
usb_stor_bulk_transfer_buf extern int usb_stor_bulk_transfer_buf ( s#us_data * , unsigned int , void * , unsigned int , unsigned int * ) 
usb_stor_bulk_srb extern int usb_stor_bulk_srb ( s#us_data * , unsigned int , s#scsi_cmnd * ) 
usb_stor_bulk_transfer_sg extern int usb_stor_bulk_transfer_sg ( s#us_data * , unsigned int , void * , unsigned int , int , int * ) 
usb_stor_CB_transport extern int usb_stor_CB_transport ( s#scsi_cmnd * , s#us_data * ) 
usb_stor_Bulk_transport extern int usb_stor_Bulk_transport ( s#scsi_cmnd * , s#us_data * ) 
usb_stor_CB_reset extern int usb_stor_CB_reset ( s#us_data * ) 
usb_stor_Bulk_reset extern int usb_stor_Bulk_reset ( s#us_data * ) 

/* drivers/usb/storage/usb.o */
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##tvec_base
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
usb_stor_suspend extern int usb_stor_suspend ( s#usb_interface * , t#pm_message_t ) 
usb_stor_resume extern int usb_stor_resume ( s#usb_interface * ) 
usb_stor_reset_resume extern int usb_stor_reset_resume ( s#usb_interface * ) 
usb_stor_pre_reset extern int usb_stor_pre_reset ( s#usb_interface * ) 
usb_stor_post_reset extern int usb_stor_post_reset ( s#usb_interface * ) 
s##usb_tt
s##wusb_dev
s##scsi_host_cmd_pool
s##scsi_transport_template
s##workqueue_struct
s##scsi_sense_hdr
fill_inquiry_response extern void fill_inquiry_response ( s#us_data * , unsigned char * , unsigned int ) 
usb_stor_probe1 extern int usb_stor_probe1 ( s#us_data * * , s#usb_interface * , const s#usb_device_id * , s#us_unusual_dev * ) 
usb_stor_probe2 extern int usb_stor_probe2 ( s#us_data * ) 
usb_stor_disconnect extern void usb_stor_disconnect ( s#usb_interface * ) 

/* drivers/usb/storage/usual-tables.o */
usb_storage_usb_ids extern s#usb_device_id usb_storage_usb_ids [ ] 
s##ep_device
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
usb_usual_ignore_device extern int usb_usual_ignore_device ( s#usb_interface * ) 

/* drivers/usb/usb-common.o */
usb_speed_string extern const char * usb_speed_string ( e#usb_device_speed ) 

/* drivers/usb/wusbcore/devconnect.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s#usb_encryption_descriptor struct usb_encryption_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bEncryptionType ; t#__u8 bEncryptionValue ; t#__u8 bAuthKeyIndex ; } 
s#wusb_ckhdid struct wusb_ckhdid { t#u8 data [ 16 ] ; } 
s#usb_wireless_cap_descriptor struct usb_wireless_cap_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 bDevCapabilityType ; t#__u8 bmAttributes ; t#__le16 wPHYRates ; t#__u8 bmTFITXPowerInfo ; t#__u8 bmFFITXPowerInfo ; t#__le16 bmBandGroup ; t#__u8 bReserved ; } 
E#UWB_NUM_MAS 256 
s#uwb_mas_bm struct uwb_mas_bm { unsigned long bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long unsafe_bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; int safe ; int unsafe ; } 
s##scatterlist
s#wusb_dev struct wusb_dev { s#kref refcnt ; s#wusbhc * wusbhc ; s#list_head cack_node ; t#u8 port_idx ; t#u8 addr ; t#u8 beacon_type : 4 ; s#usb_encryption_descriptor ccm1_etd ; s#wusb_ckhdid cdid ; unsigned long entry_ts ; s#usb_bos_descriptor * bos ; s#usb_wireless_cap_descriptor * wusb_cap_descr ; s#uwb_mas_bm availability ; s#work_struct devconnect_acked_work ; s#urb * set_gtk_urb ; s#usb_ctrlrequest * set_gtk_req ; s#usb_device * usb_dev ; } 
s##dma_pool
s##uwb_beca_e
s#uwb_mac_addr struct uwb_mac_addr { t#u8 data [ 6 ] ; } 
s#uwb_dev_addr struct uwb_dev_addr { t#u8 data [ 2 ] ; } 
E#UWB_NUM_STREAMS 8 
s#uwb_dev struct uwb_dev { s#mutex mutex ; s#list_head list_node ; s#device dev ; s#uwb_rc * rc ; s#uwb_beca_e * bce ; s#uwb_mac_addr mac_addr ; s#uwb_dev_addr dev_addr ; int beacon_slot ; unsigned long streams [ ( ( ( E#UWB_NUM_STREAMS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long last_availability_bm [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#uwb_rccb struct uwb_rccb { t#u8 bCommandType ; t#__le16 wCommand ; t#u8 bCommandContext ; } 
s#uwb_rceb struct uwb_rceb { t#u8 bEventType ; t#__le16 wEvent ; t#u8 bEventContext ; } 
E#UWB_RC_CTX_MAX 256 
e#uwb_scan_type enum uwb_scan_type { UWB_SCAN_ONLY = 0 , UWB_SCAN_OUTSIDE_BP , UWB_SCAN_WHILE_INACTIVE , UWB_SCAN_DISABLED , UWB_SCAN_ONLY_STARTTIME , UWB_SCAN_TOP } 
s#uwb_notifs_chain struct uwb_notifs_chain { s#list_head list ; s#mutex mutex ; } 
s#uwb_beca struct uwb_beca { s#list_head list ; t#size_t entries ; s#mutex mutex ; } 
s#uwbd struct uwbd { int pid ; s#task_struct * task ; t#wait_queue_head_t wq ; s#list_head event_list ; t#spinlock_t event_list_lock ; } 
s#uwb_drp_backoff_win struct uwb_drp_backoff_win { t#u8 window ; t#u8 n ; int total_expired ; s#timer_list timer ; t#bool can_reserve_extra_mases ; } 
s#uwb_ie_hdr struct uwb_ie_hdr { t#u8 element_id ; t#u8 length ; } 
s#uwb_ie_drp_avail struct uwb_ie_drp_avail { s#uwb_ie_hdr hdr ; unsigned long bmp [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
s#uwb_drp_avail struct uwb_drp_avail { unsigned long global [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long local [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long pending [ ( ( ( E#UWB_NUM_MAS ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#uwb_ie_drp_avail ie ; t#bool ie_valid ; } 
s##workqueue_struct
s#uwb_rc_cmd_set_ie struct uwb_rc_cmd_set_ie { s#uwb_rccb rccb ; t#__le16 wIELength ; t#u8 IEData [ ] ; } 
s##uwb_dbg
s#uwb_rc struct uwb_rc { s#uwb_dev uwb_dev ; int index ; t#u16 version ; s#module * owner ; void * priv ; int ( * start ) ( s#uwb_rc * ) ; void ( * stop ) ( s#uwb_rc * ) ; int ( * cmd ) ( s#uwb_rc * , const s#uwb_rccb * , t#size_t ) ; int ( * reset ) ( s#uwb_rc * ) ; int ( * filter_cmd ) ( s#uwb_rc * , s#uwb_rccb * * , t#size_t * ) ; int ( * filter_event ) ( s#uwb_rc * , s#uwb_rceb * * , const t#size_t , t#size_t * , t#size_t * ) ; t#spinlock_t neh_lock ; s#list_head neh_list ; unsigned long ctx_bm [ E#UWB_RC_CTX_MAX / 8 / sizeof ( unsigned long ) ] ; t#u8 ctx_roll ; int beaconing ; int beaconing_forced ; int scanning ; e#uwb_scan_type scan_type : 3 ; unsigned ready : 1 ; s#uwb_notifs_chain notifs_chain ; s#uwb_beca uwb_beca ; s#uwbd uwbd ; s#uwb_drp_backoff_win bow ; s#uwb_drp_avail drp_avail ; s#list_head reservations ; s#list_head cnflt_alien_list ; s#uwb_mas_bm cnflt_alien_bitmap ; s#mutex rsvs_mutex ; t#spinlock_t rsvs_lock ; s#workqueue_struct * rsv_workq ; s#delayed_work rsv_update_work ; s#delayed_work rsv_alien_bp_work ; int set_drp_ie_pending ; s#mutex ies_mutex ; s#uwb_rc_cmd_set_ie * ies ; t#size_t ies_capacity ; s#list_head pals ; int active_pals ; s#uwb_dbg * dbg ; } 
e#uwb_rsv_target_type enum uwb_rsv_target_type { UWB_RSV_TARGET_DEV , UWB_RSV_TARGET_DEVADDR , } 
s#uwb_rsv_target struct uwb_rsv_target { e#uwb_rsv_target_type type ; union { s#uwb_dev * dev ; s#uwb_dev_addr devaddr ; } ; } 
e#uwb_drp_type enum uwb_drp_type { UWB_DRP_TYPE_ALIEN_BP = 0 , UWB_DRP_TYPE_HARD , UWB_DRP_TYPE_SOFT , UWB_DRP_TYPE_PRIVATE , UWB_DRP_TYPE_PCA , } 
t#uwb_rsv_cb_f typedef void ( * uwb_rsv_cb_f ) ( s#uwb_rsv * ) 
e#uwb_rsv_state enum uwb_rsv_state { UWB_RSV_STATE_NONE = 0 , UWB_RSV_STATE_O_INITIATED , UWB_RSV_STATE_O_PENDING , UWB_RSV_STATE_O_MODIFIED , UWB_RSV_STATE_O_ESTABLISHED , UWB_RSV_STATE_O_TO_BE_MOVED , UWB_RSV_STATE_O_MOVE_EXPANDING , UWB_RSV_STATE_O_MOVE_COMBINING , UWB_RSV_STATE_O_MOVE_REDUCING , UWB_RSV_STATE_T_ACCEPTED , UWB_RSV_STATE_T_DENIED , UWB_RSV_STATE_T_CONFLICT , UWB_RSV_STATE_T_PENDING , UWB_RSV_STATE_T_EXPANDING_ACCEPTED , UWB_RSV_STATE_T_EXPANDING_CONFLICT , UWB_RSV_STATE_T_EXPANDING_PENDING , UWB_RSV_STATE_T_EXPANDING_DENIED , UWB_RSV_STATE_T_RESIZED , UWB_RSV_STATE_LAST , } 
s#uwb_drp_alloc struct uwb_drp_alloc { t#__le16 zone_bm ; t#__le16 mas_bm ; } 
s#uwb_ie_drp struct uwb_ie_drp { s#uwb_ie_hdr hdr ; t#__le16 drp_control ; s#uwb_dev_addr dev_addr ; s#uwb_drp_alloc allocs [ ] ; } 
s#uwb_rsv_move struct uwb_rsv_move { s#uwb_mas_bm final_mas ; s#uwb_ie_drp * companion_drp_ie ; s#uwb_mas_bm companion_mas ; } 
s#uwb_rsv struct uwb_rsv { s#uwb_rc * rc ; s#list_head rc_node ; s#list_head pal_node ; s#kref kref ; s#uwb_dev * owner ; s#uwb_rsv_target target ; e#uwb_drp_type type ; int max_mas ; int min_mas ; int max_interval ; t#bool is_multicast ; t#uwb_rsv_cb_f callback ; void * pal_priv ; e#uwb_rsv_state state ; t#bool needs_release_companion_mas ; t#u8 stream ; t#u8 tiebreaker ; s#uwb_mas_bm mas ; s#uwb_ie_drp * drp_ie ; s#uwb_rsv_move mv ; t#bool ie_valid ; s#timer_list timer ; s#work_struct handle_timeout_work ; } 
s#uwb_pal struct uwb_pal { s#list_head node ; const char * name ; s#device * device ; s#uwb_rc * rc ; void ( * channel_changed ) ( s#uwb_pal * , int ) ; void ( * new_rsv ) ( s#uwb_pal * , s#uwb_rsv * ) ; int channel ; s#dentry * debugfs_dir ; } 
s#wuie_hdr struct wuie_hdr { t#u8 bLength ; t#u8 bIEIdentifier ; } 
s#wuie_host_info struct wuie_host_info { s#wuie_hdr hdr ; t#__le16 attributes ; s#wusb_ckhdid CHID ; } 
s#wusb_port struct wusb_port { t#u16 status ; t#u16 change ; s#wusb_dev * wusb_dev ; t#u32 ptk_tkid ; } 
s##wusb_dev_info
s#wuie_keep_alive struct wuie_keep_alive { s#wuie_hdr hdr ; t#u8 bDeviceAddress [ 4 ] ; } 
s#wuie_connect_ack struct wuie_connect_ack { s#wuie_hdr hdr ; struct { s#wusb_ckhdid CDID ; t#u8 bDeviceAddress ; t#u8 bReserved ; } blk [ 4 ] ; } 
s#usb_key_descriptor struct usb_key_descriptor { t#__u8 bLength ; t#__u8 bDescriptorType ; t#__u8 tTKID [ 3 ] ; t#__u8 bReserved ; t#__u8 bKeyData [ 0 ] ; } 
s#wusbhc struct wusbhc { s#usb_hcd usb_hcd ; s#device * dev ; s#uwb_rc * uwb_rc ; s#uwb_pal pal ; unsigned trust_timeout ; s#wusb_ckhdid chid ; t#uint8_t phy_rate ; s#wuie_host_info * wuie_host_info ; s#mutex mutex ; t#u16 cluster_id ; s#wusb_port * port ; s#wusb_dev_info * dev_info ; t#u8 ports_max ; unsigned active : 1 ; s#wuie_keep_alive keep_alive_ie ; s#delayed_work keep_alive_timer ; s#list_head cack_list ; t#size_t cack_count ; s#wuie_connect_ack cack_ie ; s#uwb_rsv * rsv ; s#mutex mmcie_mutex ; s#wuie_hdr * * mmcie ; t#u8 mmcies_max ; int ( * start ) ( s#wusbhc * ) ; void ( * stop ) ( s#wusbhc * , int ) ; int ( * mmcie_add ) ( s#wusbhc * , t#u8 , t#u8 , t#u8 , s#wuie_hdr * ) ; int ( * mmcie_rm ) ( s#wusbhc * , t#u8 ) ; int ( * dev_info_set ) ( s#wusbhc * , s#wusb_dev * ) ; int ( * bwa_set ) ( s#wusbhc * , t#s8 , const s#uwb_mas_bm * ) ; int ( * set_ptk ) ( s#wusbhc * , t#u8 , t#u32 , const void * , t#size_t ) ; int ( * set_gtk ) ( s#wusbhc * , t#u32 , const void * , t#size_t ) ; int ( * set_num_dnts ) ( s#wusbhc * , t#u8 , t#u8 ) ; struct { s#usb_key_descriptor descr ; t#u8 data [ 16 ] ; } __attribute__ ( ( packed ) ) gtk ; t#u8 gtk_index ; t#u32 gtk_tkid ; s#work_struct gtk_rekey_done_work ; int pending_set_gtks ; s#usb_encryption_descriptor * ccm1_etd ; } 
s#wusb_dn_hdr struct wusb_dn_hdr { t#u8 bType ; t#u8 notifdata [ ] ; } 
wusbhc_handle_dn extern void wusbhc_handle_dn ( s#wusbhc * , t#u8 , s#wusb_dn_hdr * , t#size_t ) 
__wusb_dev_get_by_usb_dev extern s#wusb_dev * __wusb_dev_get_by_usb_dev ( s#wusbhc * , s#usb_device * ) 
wusb_dev_destroy extern void wusb_dev_destroy ( s#kref * ) 

/* drivers/usb/wusbcore/mmc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##scatterlist
s##dma_pool
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
wusbhc_mmcie_set extern int wusbhc_mmcie_set ( s#wusbhc * , t#u8 , t#u8 , s#wuie_hdr * ) 
wusbhc_mmcie_rm extern void wusbhc_mmcie_rm ( s#wusbhc * , s#wuie_hdr * ) 
wusbhc_chid_set extern int wusbhc_chid_set ( s#wusbhc * , const s#wusb_ckhdid * ) 

/* drivers/usb/wusbcore/rh.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
s##scatterlist
s##dma_pool
wusbhc_rh_status_data extern int wusbhc_rh_status_data ( s#usb_hcd * , char * ) 
wusbhc_rh_control extern int wusbhc_rh_control ( s#usb_hcd * , t#u16 , t#u16 , t#u16 , char * , t#u16 ) 
wusbhc_rh_suspend extern int wusbhc_rh_suspend ( s#usb_hcd * ) 
wusbhc_rh_resume extern int wusbhc_rh_resume ( s#usb_hcd * ) 
wusbhc_rh_start_port_reset extern int wusbhc_rh_start_port_reset ( s#usb_hcd * , unsigned ) 

/* drivers/usb/wusbcore/security.o */
wusb_et_name extern const char * wusb_et_name ( t#u8 ) 

/* drivers/usb/wusbcore/wa-hc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##scatterlist
s##dma_pool
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
s##dwahc
s#usb_wa_descriptor struct usb_wa_descriptor { t#u8 bLength ; t#u8 bDescriptorType ; t#u16 bcdWAVersion ; t#u8 bNumPorts ; t#u8 bmAttributes ; t#u16 wNumRPipes ; t#u16 wRPipeMaxBlock ; t#u8 bRPipeBlockSize ; t#u8 bPwrOn2PwrGood ; t#u8 bNumMMCIEs ; t#u8 DeviceRemovable ; } 
s#edc struct edc { unsigned long timestart ; t#u16 errorcount ; } 
s#wa_notif_hdr struct wa_notif_hdr { t#u8 bLength ; t#u8 bNotifyType ; } 
s#wa_xfer_result struct wa_xfer_result { s#wa_notif_hdr hdr ; t#__le32 dwTransferID ; t#__le32 dwTransferLength ; t#u8 bTransferSegment ; t#u8 bTransferStatus ; t#__le32 dwNumOfPackets ; } 
s#wahc struct wahc { s#usb_device * usb_dev ; s#usb_interface * usb_iface ; union { s#wusbhc * wusb ; s#dwahc * dwa ; } ; const s#usb_endpoint_descriptor * dto_epd , * dti_epd ; const s#usb_wa_descriptor * wa_descr ; s#urb * nep_urb ; s#edc nep_edc ; void * nep_buffer ; t#size_t nep_buffer_size ; t#atomic_t notifs_queued ; t#u16 rpipes ; unsigned long * rpipe_bm ; t#spinlock_t rpipe_bm_lock ; s#mutex rpipe_mutex ; s#urb * dti_urb ; s#urb * buf_in_urb ; s#edc dti_edc ; s#wa_xfer_result * xfer_result ; t#size_t xfer_result_size ; t#s32 status ; s#list_head xfer_list ; s#list_head xfer_delayed_list ; t#spinlock_t xfer_list_lock ; s#work_struct xfer_work ; t#atomic_t xfer_id_count ; } 
wa_create extern int wa_create ( s#wahc * , s#usb_interface * ) 
__wa_destroy extern void __wa_destroy ( s#wahc * ) 

/* drivers/usb/wusbcore/wa-rpipe.o */
rpipe_destroy extern void rpipe_destroy ( s#kref * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##scatterlist
s##dma_pool
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
s##dwahc
rpipe_ep_disable extern void rpipe_ep_disable ( s#wahc * , s#usb_host_endpoint * ) 

/* drivers/usb/wusbcore/wa-xfer.o */
wa_urb_enqueue_run extern void wa_urb_enqueue_run ( s#work_struct * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##scatterlist
s##dma_pool
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
s##dwahc
wa_urb_enqueue extern int wa_urb_enqueue ( s#wahc * , s#usb_host_endpoint * , s#urb * , t#gfp_t ) 
wa_urb_dequeue extern int wa_urb_dequeue ( s#wahc * , s#urb * ) 

/* drivers/usb/wusbcore/wusbhc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ep_device
s##scatterlist
s##dma_pool
s##uwb_beca_e
s##workqueue_struct
s##uwb_dbg
s##wusb_dev_info
wusbhc_create extern int wusbhc_create ( s#wusbhc * ) 
wusbhc_b_create extern int wusbhc_b_create ( s#wusbhc * ) 
wusbhc_b_destroy extern void wusbhc_b_destroy ( s#wusbhc * ) 
wusbhc_destroy extern void wusbhc_destroy ( s#wusbhc * ) 
wusbd extern s#workqueue_struct * wusbd 
wusb_cluster_id_get extern t#u8 wusb_cluster_id_get ( void ) 
wusb_cluster_id_put extern void wusb_cluster_id_put ( t#u8 ) 
wusbhc_giveback_urb extern void wusbhc_giveback_urb ( s#wusbhc * , s#urb * , int ) 
wusbhc_reset_all void wusbhc_reset_all ( s#wusbhc * ) 

/* drivers/uwb/address.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#uwb_rc_evt_beacon struct uwb_rc_evt_beacon { s#uwb_rceb rceb ; t#u8 bChannelNumber ; t#u8 bBeaconType ; t#__le16 wBPSTOffset ; t#u8 bLQI ; t#u8 bRSSI ; t#__le16 wBeaconInfoLength ; t#u8 BeaconInfo [ ] ; } 
s#stats struct stats { t#s8 min , max ; t#s16 sigma ; t#atomic_t samples ; } 
s#uwb_beca_e struct uwb_beca_e { s#mutex mutex ; s#kref refcnt ; s#list_head node ; s#uwb_mac_addr * mac_addr ; s#uwb_dev_addr dev_addr ; t#u8 hits ; unsigned long ts_jiffies ; s#uwb_dev * uwb_dev ; s#uwb_rc_evt_beacon * be ; s#stats lqe_stats , rssi_stats ; } 
s##workqueue_struct
s##uwb_dbg
uwb_rc_mac_addr_get int uwb_rc_mac_addr_get ( s#uwb_rc * , s#uwb_mac_addr * ) 
uwb_rc_dev_addr_get int uwb_rc_dev_addr_get ( s#uwb_rc * , s#uwb_dev_addr * ) 
__uwb_addr_print t#size_t __uwb_addr_print ( char * , t#size_t , const unsigned char * , int ) 

/* drivers/uwb/est.o */
s#uwb_est_entry struct uwb_est_entry { t#size_t size ; unsigned offset ; enum { UWB_EST_16 = 0 , UWB_EST_8 = 1 } type ; } 
uwb_est_register int uwb_est_register ( t#u8 , t#u8 , t#u16 , t#u16 , const s#uwb_est_entry * , t#size_t ) 
uwb_est_unregister int uwb_est_unregister ( t#u8 , t#u8 , t#u16 , t#u16 , const s#uwb_est_entry * , t#size_t ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_est_find_size t#ssize_t uwb_est_find_size ( s#uwb_rc * , const s#uwb_rceb * , t#size_t ) 

/* drivers/uwb/i1480/dfu/dfu.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s#i1480 struct i1480 { s#device * dev ; int ( * write ) ( s#i1480 * , t#u32 , const void * , t#size_t ) ; int ( * read ) ( s#i1480 * , t#u32 , t#size_t ) ; int ( * rc_setup ) ( s#i1480 * ) ; void ( * rc_release ) ( s#i1480 * ) ; int ( * wait_init_done ) ( s#i1480 * ) ; int ( * cmd ) ( s#i1480 * , const char * , t#size_t ) ; const char * pre_fw_name ; const char * mac_fw_name ; const char * mac_fw_name_deprecate ; const char * phy_fw_name ; t#u8 hw_rev ; t#size_t buf_size ; void * evt_buf , * cmd_buf ; t#ssize_t evt_result ; s#completion evt_complete ; } 
i1480_rceb_check extern int i1480_rceb_check ( const s#i1480 * , const s#uwb_rceb * , const char * , t#u8 , t#u8 , unsigned ) 
i1480_cmd extern t#ssize_t i1480_cmd ( s#i1480 * , const char * , t#size_t , t#size_t ) 
i1480_fw_upload extern int i1480_fw_upload ( s#i1480 * ) 

/* drivers/uwb/ie.o */
uwb_ie_next s#uwb_ie_hdr * uwb_ie_next ( void * * , t#size_t * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_rc_ie_add int uwb_rc_ie_add ( s#uwb_rc * , const s#uwb_ie_hdr * , t#size_t ) 
e#uwb_ie enum uwb_ie { UWB_PCA_AVAILABILITY = 2 , UWB_IE_DRP_AVAILABILITY = 8 , UWB_IE_DRP = 9 , UWB_BP_SWITCH_IE = 11 , UWB_MAC_CAPABILITIES_IE = 12 , UWB_PHY_CAPABILITIES_IE = 13 , UWB_APP_SPEC_PROBE_IE = 15 , UWB_IDENTIFICATION_IE = 19 , UWB_MASTER_KEY_ID_IE = 20 , UWB_RELINQUISH_REQUEST_IE = 21 , UWB_IE_WLP = 250 , UWB_APP_SPEC_IE = 255 , } 
uwb_rc_ie_rm int uwb_rc_ie_rm ( s#uwb_rc * , e#uwb_ie ) 

/* drivers/uwb/lc-dev.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
e#uwb_notifs enum uwb_notifs { UWB_NOTIF_ONAIR , UWB_NOTIF_OFFAIR , } 
s#uwb_notifs_handler struct uwb_notifs_handler { s#list_head list_node ; void ( * cb ) ( void * , s#uwb_dev * , e#uwb_notifs ) ; void * data ; } 
uwb_notifs_register int uwb_notifs_register ( s#uwb_rc * , s#uwb_notifs_handler * ) 
uwb_notifs_deregister int uwb_notifs_deregister ( s#uwb_rc * , s#uwb_notifs_handler * ) 
uwb_dev_try_get s#uwb_dev * uwb_dev_try_get ( s#uwb_rc * , s#uwb_dev * ) 
t#uwb_dev_for_each_f typedef int ( * uwb_dev_for_each_f ) ( s#device * , void * ) 
uwb_dev_for_each int uwb_dev_for_each ( s#uwb_rc * , t#uwb_dev_for_each_f , void * ) 

/* drivers/uwb/lc-rc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_rc_init void uwb_rc_init ( s#uwb_rc * ) 
uwb_rc_alloc s#uwb_rc * uwb_rc_alloc ( void ) 
uwb_rc_add int uwb_rc_add ( s#uwb_rc * , s#device * , void * ) 
uwb_rc_rm void uwb_rc_rm ( s#uwb_rc * ) 
__uwb_rc_try_get extern s#uwb_rc * __uwb_rc_try_get ( s#uwb_rc * ) 
uwb_rc_get_by_grandpa s#uwb_rc * uwb_rc_get_by_grandpa ( const s#device * ) 
uwb_rc_get_by_dev s#uwb_rc * uwb_rc_get_by_dev ( const s#uwb_dev_addr * ) 
uwb_rc_put void uwb_rc_put ( s#uwb_rc * ) 

/* drivers/uwb/neh.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_rc_neh_grok void uwb_rc_neh_grok ( s#uwb_rc * , void * , t#size_t ) 
uwb_rc_neh_error void uwb_rc_neh_error ( s#uwb_rc * , int ) 

/* drivers/uwb/pal.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_pal_init void uwb_pal_init ( s#uwb_pal * ) 
uwb_pal_register int uwb_pal_register ( s#uwb_pal * ) 
uwb_pal_unregister void uwb_pal_unregister ( s#uwb_pal * ) 

/* drivers/uwb/radio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
s##dentry
uwb_radio_start int uwb_radio_start ( s#uwb_pal * ) 
uwb_radio_stop void uwb_radio_stop ( s#uwb_pal * ) 

/* drivers/uwb/reset.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
t#uwb_rc_cmd_cb_f typedef void ( * uwb_rc_cmd_cb_f ) ( s#uwb_rc * , void * , s#uwb_rceb * , t#ssize_t ) 
uwb_rc_cmd_async int uwb_rc_cmd_async ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , t#u8 , t#u16 , t#uwb_rc_cmd_cb_f , void * ) 
uwb_rc_cmd t#ssize_t uwb_rc_cmd ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , s#uwb_rceb * , t#size_t ) 
uwb_rc_vcmd t#ssize_t uwb_rc_vcmd ( s#uwb_rc * , const char * , s#uwb_rccb * , t#size_t , t#u8 , t#u16 , s#uwb_rceb * * ) 
uwb_rc_reset_all void uwb_rc_reset_all ( s#uwb_rc * ) 
uwb_rc_pre_reset void uwb_rc_pre_reset ( s#uwb_rc * ) 
uwb_rc_post_reset int uwb_rc_post_reset ( s#uwb_rc * ) 

/* drivers/uwb/rsv.o */
uwb_rsv_state_str const char * uwb_rsv_state_str ( e#uwb_rsv_state ) 
uwb_rsv_type_str const char * uwb_rsv_type_str ( e#uwb_drp_type ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##workqueue_struct
s##uwb_dbg
uwb_rsv_create s#uwb_rsv * uwb_rsv_create ( s#uwb_rc * , t#uwb_rsv_cb_f , void * ) 
uwb_rsv_destroy void uwb_rsv_destroy ( s#uwb_rsv * ) 
uwb_rsv_establish int uwb_rsv_establish ( s#uwb_rsv * ) 
uwb_rsv_modify int uwb_rsv_modify ( s#uwb_rsv * , int , int , int ) 
uwb_rsv_terminate void uwb_rsv_terminate ( s#uwb_rsv * ) 
uwb_rsv_accept void uwb_rsv_accept ( s#uwb_rsv * , t#uwb_rsv_cb_f , void * ) 
uwb_rsv_get_usable_mas void uwb_rsv_get_usable_mas ( s#uwb_rsv * , s#uwb_mas_bm * ) 

/* drivers/uwb/umc-bus.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
s#umc_dev struct umc_dev { t#u16 version ; t#u8 cap_id ; t#u8 bar ; s#resource resource ; unsigned irq ; s#device dev ; } 
umc_controller_reset int umc_controller_reset ( s#umc_dev * ) 
s#umc_driver struct umc_driver { char * name ; t#u8 cap_id ; int ( * match ) ( s#umc_driver * , s#umc_dev * ) ; const void * match_data ; int ( * probe ) ( s#umc_dev * ) ; void ( * remove ) ( s#umc_dev * ) ; int ( * suspend ) ( s#umc_dev * , t#pm_message_t ) ; int ( * resume ) ( s#umc_dev * ) ; int ( * pre_reset ) ( s#umc_dev * ) ; int ( * post_reset ) ( s#umc_dev * ) ; s#device_driver driver ; } 
umc_match_pci_id int umc_match_pci_id ( s#umc_driver * , s#umc_dev * ) 
umc_bus_type extern s#bus_type umc_bus_type 

/* drivers/uwb/umc-dev.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
umc_device_create s#umc_dev * umc_device_create ( s#device * , int ) 
umc_device_register int umc_device_register ( s#umc_dev * ) 
umc_device_unregister void umc_device_unregister ( s#umc_dev * ) 

/* drivers/uwb/umc-drv.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
__umc_driver_register int __umc_driver_register ( s#umc_driver * , s#module * , const char * ) 
umc_driver_unregister void umc_driver_unregister ( s#umc_driver * ) 

/* drivers/uwb/whci.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
whci_wait_for extern int whci_wait_for ( s#device * , t#u32 * , t#u32 , t#u32 , unsigned long , const char * ) 

/* drivers/video/backlight/backlight.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#backlight_update_reason enum backlight_update_reason { BACKLIGHT_UPDATE_HOTKEY , BACKLIGHT_UPDATE_SYSFS , } 
backlight_force_update extern void backlight_force_update ( s#backlight_device * , e#backlight_update_reason ) 
backlight_device_register extern s#backlight_device * backlight_device_register ( const char * , s#device * , void * , const s#backlight_ops * , const s#backlight_properties * ) 
backlight_device_unregister extern void backlight_device_unregister ( s#backlight_device * ) 

/* drivers/video/backlight/generic_bl.o */
corgibl_limit_intensity void corgibl_limit_intensity ( int ) 

/* drivers/video/backlight/ili9320.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s#ili9320_spi struct ili9320_spi { s#spi_device * dev ; s#spi_message message ; s#spi_transfer xfer [ 2 ] ; unsigned char id ; unsigned char buffer_addr [ 4 ] ; unsigned char buffer_data [ 4 ] ; } 
s#lcd_properties struct lcd_properties { int max_contrast ; } 
s#lcd_ops struct lcd_ops { int ( * get_power ) ( s#lcd_device * ) ; int ( * set_power ) ( s#lcd_device * , int ) ; int ( * get_contrast ) ( s#lcd_device * ) ; int ( * set_contrast ) ( s#lcd_device * , int ) ; int ( * set_mode ) ( s#lcd_device * , s#fb_videomode * ) ; int ( * check_fb ) ( s#lcd_device * , s#fb_info * ) ; } 
s#lcd_device struct lcd_device { s#lcd_properties props ; s#mutex ops_lock ; s#lcd_ops * ops ; s#mutex update_lock ; s#notifier_block fb_notif ; s#device dev ; } 
e#ili9320_suspend enum ili9320_suspend { ILI9320_SUSPEND_OFF , ILI9320_SUSPEND_DEEP , } 
s#ili9320_platdata struct ili9320_platdata { unsigned short hsize ; unsigned short vsize ; e#ili9320_suspend suspend ; void ( * reset ) ( unsigned int ) ; unsigned short entry_mode ; unsigned short display2 ; unsigned short display3 ; unsigned short display4 ; unsigned short rgb_if1 ; unsigned short rgb_if2 ; unsigned short interface2 ; unsigned short interface3 ; unsigned short interface4 ; unsigned short interface5 ; unsigned short interface6 ; } 
s#ili9320_client struct ili9320_client { const char * name ; int ( * init ) ( s#ili9320 * , s#ili9320_platdata * ) ; } 
s#ili9320 struct ili9320 { union { s#ili9320_spi spi ; } access ; s#device * dev ; s#lcd_device * lcd ; s#ili9320_client * client ; s#ili9320_platdata * platdata ; int power ; int initialised ; unsigned short display1 ; unsigned short power1 ; int ( * write ) ( s#ili9320 * , unsigned int , unsigned int ) ; } 
ili9320_write extern int ili9320_write ( s#ili9320 * , unsigned int , unsigned int ) 
s#ili9320_reg struct ili9320_reg { unsigned short address ; unsigned short value ; } 
ili9320_write_regs extern int ili9320_write_regs ( s#ili9320 * , s#ili9320_reg * , int ) 
ili9320_probe_spi extern int ili9320_probe_spi ( s#spi_device * , s#ili9320_client * ) 
ili9320_remove extern int ili9320_remove ( s#ili9320 * ) 
ili9320_suspend extern int ili9320_suspend ( s#ili9320 * , t#pm_message_t ) 
ili9320_resume extern int ili9320_resume ( s#ili9320 * ) 
ili9320_shutdown extern void ili9320_shutdown ( s#ili9320 * ) 

/* drivers/video/backlight/lcd.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
lcd_device_register extern s#lcd_device * lcd_device_register ( const char * , s#device * , void * , s#lcd_ops * ) 
lcd_device_unregister extern void lcd_device_unregister ( s#lcd_device * ) 

/* drivers/video/cfbcopyarea.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cfb_copyarea extern void cfb_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/cfbfillrect.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cfb_fillrect extern void cfb_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/cfbimgblt.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cfb_imageblit extern void cfb_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/video/console/bitblit.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s#display struct display { const t#u_char * fontdata ; int userfont ; t#u_short scrollmode ; t#u_short inverse ; short yscroll ; int vrows ; int cursor_shape ; int con_rotate ; t#u32 xres_virtual ; t#u32 yres_virtual ; t#u32 height ; t#u32 width ; t#u32 bits_per_pixel ; t#u32 grayscale ; t#u32 nonstd ; t#u32 accel_flags ; t#u32 rotate ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; const s#fb_videomode * mode ; } 
s#fbcon_ops struct fbcon_ops { void ( * bmove ) ( s#vc_data * , s#fb_info * , int , int , int , int , int , int ) ; void ( * clear ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; void ( * putcs ) ( s#vc_data * , s#fb_info * , const unsigned short * , int , int , int , int , int ) ; void ( * clear_margins ) ( s#vc_data * , s#fb_info * , int ) ; void ( * cursor ) ( s#vc_data * , s#fb_info * , int , int , int , int ) ; int ( * update_start ) ( s#fb_info * ) ; int ( * rotate_font ) ( s#fb_info * , s#vc_data * ) ; s#fb_var_screeninfo var ; s#timer_list cursor_timer ; s#fb_cursor cursor_state ; s#display * p ; int currcon ; int cursor_flash ; int cursor_reset ; int blank_state ; int graphics ; int save_graphics ; int flags ; int rotate ; int cur_rotate ; char * cursor_data ; t#u8 * fontbuffer ; t#u8 * fontdata ; t#u8 * cursor_src ; t#u32 cursor_size ; t#u32 fd_size ; } 
fbcon_set_bitops extern void fbcon_set_bitops ( s#fbcon_ops * ) 

/* drivers/video/console/font_8x16.o */
s#font_desc struct font_desc { int idx ; const char * name ; int width , height ; const void * data ; int pref ; } 
font_vga_8x16 extern const s#font_desc font_vga_8x16 

/* drivers/video/console/fonts.o */
find_font extern const s#font_desc * find_font ( const char * ) 
get_default_font extern const s#font_desc * get_default_font ( int , int , t#u32 , t#u32 ) 

/* drivers/video/console/softcursor.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
soft_cursor extern int soft_cursor ( s#fb_info * , s#fb_cursor * ) 

/* drivers/video/console/tileblit.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
fbcon_set_tileops extern void fbcon_set_tileops ( s#vc_data * , s#fb_info * ) 

/* drivers/video/display/display-sysfs.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#display_driver struct display_driver { int ( * set_contrast ) ( s#display_device * , unsigned int ) ; int ( * get_contrast ) ( s#display_device * ) ; void ( * suspend ) ( s#display_device * , t#pm_message_t ) ; void ( * resume ) ( s#display_device * ) ; int ( * probe ) ( s#display_device * , void * ) ; int ( * remove ) ( s#display_device * ) ; int max_contrast ; } 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#display_device struct display_device { s#module * owner ; s#display_driver * driver ; s#device * parent ; s#device * dev ; s#mutex lock ; void * priv_data ; char type [ 16 ] ; char * name ; int idx ; } 
display_device_register extern s#display_device * display_device_register ( s#display_driver * , s#device * , void * ) 
display_device_unregister extern void display_device_unregister ( s#display_device * ) 

/* drivers/video/fb_ddc.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fb_ddc_read extern unsigned char * fb_ddc_read ( s#i2c_adapter * ) 

/* drivers/video/fb_defio.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s#anon_vma struct anon_vma { s#anon_vma * root ; s#mutex mutex ; t#atomic_t refcount ; s#list_head head ; unsigned degree ; s#anon_vma * parent ; } 
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##posix_acl
fb_deferred_io_fsync extern int fb_deferred_io_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
fb_deferred_io_init extern void fb_deferred_io_init ( s#fb_info * ) 
fb_deferred_io_open extern void fb_deferred_io_open ( s#fb_info * , s#inode * , s#file * ) 
fb_deferred_io_cleanup extern void fb_deferred_io_cleanup ( s#fb_info * ) 

/* drivers/video/fb_notify.o */
fb_register_client extern int fb_register_client ( s#notifier_block * ) 
fb_unregister_client extern int fb_unregister_client ( s#notifier_block * ) 
fb_notifier_call_chain extern int fb_notifier_call_chain ( unsigned long , void * ) 

/* drivers/video/fb_sys_fops.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fb_sys_read extern t#ssize_t fb_sys_read ( s#fb_info * , char * , t#size_t , t#loff_t * ) 
fb_sys_write extern t#ssize_t fb_sys_write ( s#fb_info * , const char * , t#size_t , t#loff_t * ) 

/* drivers/video/fbcmap.o */
fb_alloc_cmap extern int fb_alloc_cmap ( s#fb_cmap * , int , int ) 
fb_dealloc_cmap extern void fb_dealloc_cmap ( s#fb_cmap * ) 
fb_copy_cmap extern int fb_copy_cmap ( const s#fb_cmap * , s#fb_cmap * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fb_set_cmap extern int fb_set_cmap ( s#fb_cmap * , s#fb_info * ) 
fb_default_cmap extern const s#fb_cmap * fb_default_cmap ( int ) 
fb_invert_cmaps extern void fb_invert_cmaps ( void ) 

/* drivers/video/fbmem.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
lock_fb_info extern int lock_fb_info ( s#fb_info * ) 
fb_get_color_depth extern int fb_get_color_depth ( s#fb_var_screeninfo * , s#fb_fix_screeninfo * ) 
fb_pad_aligned_buffer extern void fb_pad_aligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 ) 
fb_pad_unaligned_buffer extern void fb_pad_unaligned_buffer ( t#u8 * , t#u32 , t#u8 * , t#u32 , t#u32 , t#u32 , t#u32 , t#u32 ) 
fb_class extern s#class * fb_class 
unlink_framebuffer extern int unlink_framebuffer ( s#fb_info * ) 
remove_conflicting_framebuffers extern void remove_conflicting_framebuffers ( s#apertures_struct * , const char * , t#bool ) 
register_framebuffer extern int register_framebuffer ( s#fb_info * ) 
unregister_framebuffer extern int unregister_framebuffer ( s#fb_info * ) 
num_registered_fb extern int num_registered_fb 
registered_fb extern s#fb_info * registered_fb [ 32 ] 
fb_show_logo extern int fb_show_logo ( s#fb_info * , int ) 
fb_set_var extern int fb_set_var ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_blank extern int fb_blank ( s#fb_info * , int ) 
fb_pan_display extern int fb_pan_display ( s#fb_info * , s#fb_var_screeninfo * ) 
fb_get_buffer_offset extern char * fb_get_buffer_offset ( s#fb_info * , s#fb_pixmap * , t#u32 ) 
fb_set_suspend extern void fb_set_suspend ( s#fb_info * , int ) 
fb_get_options extern int fb_get_options ( char * , char * * ) 

/* drivers/video/fbmon.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
fb_firmware_edid extern const unsigned char * fb_firmware_edid ( s#device * ) 
fb_parse_edid extern int fb_parse_edid ( unsigned char * , s#fb_var_screeninfo * ) 
fb_edid_to_monspecs extern void fb_edid_to_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_edid_add_monspecs extern void fb_edid_add_monspecs ( unsigned char * , s#fb_monspecs * ) 
fb_get_mode extern int fb_get_mode ( int , t#u32 , s#fb_var_screeninfo * , s#fb_info * ) 
fb_validate_mode extern int fb_validate_mode ( const s#fb_var_screeninfo * , s#fb_info * ) 
fb_destroy_modedb extern void fb_destroy_modedb ( s#fb_videomode * ) 

/* drivers/video/fbsysfs.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
framebuffer_alloc extern s#fb_info * framebuffer_alloc ( t#size_t , s#device * ) 
framebuffer_release extern void framebuffer_release ( s#fb_info * ) 
fb_bl_default_curve extern void fb_bl_default_curve ( s#fb_info * , t#u8 , t#u8 , t#u8 ) 

/* drivers/video/logo/logo.o */
s#linux_logo struct linux_logo { int type ; unsigned int width ; unsigned int height ; unsigned int clutsize ; const unsigned char * clut ; const unsigned char * data ; } 
fb_find_logo extern const s#linux_logo * fb_find_logo ( int ) 

/* drivers/video/macmodes.o */
mac_vmode_to_var extern int mac_vmode_to_var ( int , int , s#fb_var_screeninfo * ) 
mac_map_monitor_sense extern int mac_map_monitor_sense ( int ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
mac_find_mode extern int mac_find_mode ( s#fb_var_screeninfo * , s#fb_info * , const char * , unsigned int ) 

/* drivers/video/matrox/g450_pll.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#matroxfb_par struct matroxfb_par { unsigned int final_bppShift ; unsigned int cmap_len ; struct { unsigned int bytes ; unsigned int pixels ; unsigned int chunks ; } ydstorg ; } 
t#u_int32_t typedef t#__u32 u_int32_t 
t#u_int8_t typedef t#__u8 u_int8_t 
t#u_int16_t typedef t#__u16 u_int16_t 
s#mavenregs struct mavenregs { t#u_int8_t regs [ 256 ] ; int mode ; int vlines ; int xtal ; int fv ; t#u_int16_t htotal ; t#u_int16_t hcorr ; } 
s#matrox_crtc2 struct matrox_crtc2 { t#u_int32_t ctl ; } 
s#matrox_hw_state struct matrox_hw_state { t#u_int32_t MXoptionReg ; unsigned char DACclk [ 6 ] ; unsigned char DACreg [ 80 ] ; unsigned char MiscOutReg ; unsigned char DACpal [ 768 ] ; unsigned char CRTC [ 25 ] ; unsigned char CRTCEXT [ 9 ] ; unsigned char SEQ [ 5 ] ; unsigned char GCTL [ 9 ] ; unsigned char ATTR [ 21 ] ; s#mavenregs maven ; s#matrox_crtc2 crtc2 ; } 
s#matrox_accel_data struct matrox_accel_data { unsigned char ramdac_rev ; t#u_int32_t m_dwg_rect ; t#u_int32_t m_opmode ; } 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#matrox_vsync struct matrox_vsync { t#wait_queue_head_t wait ; unsigned int cnt ; } 
s##matroxfb_dh_fb_info
s#my_timming struct my_timming { unsigned int pixclock ; int mnp ; unsigned int crtc ; unsigned int HDisplay ; unsigned int HSyncStart ; unsigned int HSyncEnd ; unsigned int HTotal ; unsigned int VDisplay ; unsigned int VSyncStart ; unsigned int VSyncEnd ; unsigned int VTotal ; unsigned int sync ; int dblscan ; int interlaced ; unsigned int delay ; } 
s##v4l2_queryctrl
s##v4l2_control
s#matrox_altout struct matrox_altout { const char * name ; int ( * compute ) ( void * , s#my_timming * ) ; int ( * program ) ( void * ) ; int ( * start ) ( void * ) ; int ( * verifymode ) ( void * , t#u_int32_t ) ; int ( * getqueryctrl ) ( void * , s#v4l2_queryctrl * ) ; int ( * getctrl ) ( void * , s#v4l2_control * ) ; int ( * setctrl ) ( void * , s#v4l2_control * ) ; } 
s#matroxfb_driver struct matroxfb_driver { s#list_head node ; char * name ; void * ( * probe ) ( s#matrox_fb_info * ) ; void ( * remove ) ( s#matrox_fb_info * , void * ) ; } 
t#vaddr_t typedef struct { void * vaddr ; } vaddr_t 
s#matrox_switch struct matrox_switch { int ( * preinit ) ( s#matrox_fb_info * ) ; void ( * reset ) ( s#matrox_fb_info * ) ; int ( * init ) ( s#matrox_fb_info * , s#my_timming * ) ; void ( * restore ) ( s#matrox_fb_info * ) ; } 
s#matrox_pll_features struct matrox_pll_features { unsigned int vco_freq_min ; unsigned int ref_freq ; unsigned int feed_div_min ; unsigned int feed_div_max ; unsigned int in_div_min ; unsigned int in_div_max ; unsigned int post_shift_max ; } 
s#matrox_DAC1064_features struct matrox_DAC1064_features { t#u_int8_t xvrefctrl ; t#u_int8_t xmiscctrl ; } 
e#mga_chip enum mga_chip { MGA_2064 , MGA_2164 , MGA_1064 , MGA_1164 , MGA_G100 , MGA_G200 , MGA_G400 , MGA_G450 , MGA_G550 } 
s#matrox_bios struct matrox_bios { unsigned int bios_valid : 1 ; unsigned int pins_len ; unsigned char pins [ 128 ] ; struct { unsigned char vMaj , vMin , vRev ; } version ; struct { unsigned char state , tvout ; } output ; } 
s#matrox_pll_limits struct matrox_pll_limits { unsigned int vcomin ; unsigned int vcomax ; } 
s#matrox_pll_cache struct matrox_pll_cache { unsigned int valid ; struct { unsigned int mnp_key ; unsigned int mnp_value ; } data [ 4 ] ; } 
s#matrox_fb_info struct matrox_fb_info { s#fb_info fbcon ; s#list_head next_fb ; int dead ; int initialized ; unsigned int usecount ; unsigned int userusecount ; unsigned long irq_flags ; s#matroxfb_par curr ; s#matrox_hw_state hw ; s#matrox_accel_data accel ; s#pci_dev * pcidev ; struct { s#matrox_vsync vsync ; unsigned int pixclock ; int mnp ; int panpos ; } crtc1 ; struct { s#matrox_vsync vsync ; unsigned int pixclock ; int mnp ; s#matroxfb_dh_fb_info * info ; s#rw_semaphore lock ; } crtc2 ; struct { s#rw_semaphore lock ; struct { int brightness , contrast , saturation , hue , gamma ; int testout , deflicker ; } tvo_params ; } altout ; struct { unsigned int src ; s#matrox_altout * output ; void * data ; unsigned int mode ; unsigned int default_src ; } outputs [ 3 ] ; s#matroxfb_driver * ( drivers [ 5 ] ) ; void * ( drivers_data [ 5 ] ) ; unsigned int drivers_count ; struct { unsigned long base ; t#vaddr_t vbase ; unsigned int len ; unsigned int len_usable ; unsigned int len_maximum ; } video ; struct { unsigned long base ; t#vaddr_t vbase ; unsigned int len ; } mmio ; unsigned int max_pixel_clock ; unsigned int max_pixel_clock_panellink ; s#matrox_switch * hw_switch ; struct { s#matrox_pll_features pll ; s#matrox_DAC1064_features DAC1064 ; } features ; struct { t#spinlock_t DAC ; t#spinlock_t accel ; } lock ; e#mga_chip chip ; int interleave ; int millenium ; int milleniumII ; struct { int cfb4 ; const int * vxres ; int cross4MB ; int text ; int plnwt ; int srcorg ; } capable ; struct { int precise_width ; int mga_24bpp_fix ; int novga ; int nobios ; int nopciretry ; int noinit ; int sgram ; int support32MB ; int accelerator ; int text_type_aux ; int video64bits ; int crtc2 ; int maven_capable ; unsigned int vgastep ; unsigned int textmode ; unsigned int textstep ; unsigned int textvram ; unsigned int ydstorg ; int memtype ; int g450dac ; int dfp_type ; int panellink ; int dualhead ; unsigned int fbResource ; } devflags ; s#fb_ops fbops ; s#matrox_bios bios ; struct { s#matrox_pll_limits pixel ; s#matrox_pll_limits system ; s#matrox_pll_limits video ; } limits ; struct { s#matrox_pll_cache pixel ; s#matrox_pll_cache system ; s#matrox_pll_cache video ; } cache ; struct { struct { unsigned int video ; unsigned int system ; } pll ; struct { t#u_int32_t opt ; t#u_int32_t opt2 ; t#u_int32_t opt3 ; t#u_int32_t mctlwtst ; t#u_int32_t mctlwtst_core ; t#u_int32_t memmisc ; t#u_int32_t memrdbk ; t#u_int32_t maccess ; } reg ; struct { unsigned int ddr : 1 , emrswen : 1 , dll : 1 ; } memory ; } values ; t#u_int32_t cmap [ 16 ] ; } 
matroxfb_g450_setclk int matroxfb_g450_setclk ( s#matrox_fb_info * , unsigned int , unsigned int ) 
g450_mnp2f unsigned int g450_mnp2f ( const s#matrox_fb_info * , unsigned int ) 
matroxfb_g450_setpll_cond void matroxfb_g450_setpll_cond ( s#matrox_fb_info * , unsigned int , unsigned int ) 

/* drivers/video/matrox/matroxfb_DAC1064.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##matroxfb_dh_fb_info
matrox_mystique extern s#matrox_switch matrox_mystique 
matrox_G100 extern s#matrox_switch matrox_G100 
DAC1064_global_init void DAC1064_global_init ( s#matrox_fb_info * ) 
DAC1064_global_restore void DAC1064_global_restore ( s#matrox_fb_info * ) 

/* drivers/video/matrox/matroxfb_Ti3026.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##matroxfb_dh_fb_info
matrox_millennium extern s#matrox_switch matrox_millennium 

/* drivers/video/matrox/matroxfb_accel.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##matroxfb_dh_fb_info
s##v4l2_queryctrl
s##v4l2_control
matrox_cfbX_init void matrox_cfbX_init ( s#matrox_fb_info * ) 

/* drivers/video/matrox/matroxfb_base.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s#matroxfb_dh_fb_info struct matroxfb_dh_fb_info { s#fb_info fbcon ; int fbcon_registered ; int initialized ; s#matrox_fb_info * primary_dev ; struct { unsigned long base ; t#vaddr_t vbase ; unsigned int len ; unsigned int len_usable ; unsigned int len_maximum ; unsigned int offbase ; unsigned int borrowed ; } video ; struct { unsigned long base ; t#vaddr_t vbase ; unsigned int len ; } mmio ; unsigned int interlaced : 1 ; t#u_int32_t cmap [ 16 ] ; } 
matroxfb_register_driver int matroxfb_register_driver ( s#matroxfb_driver * ) 
matroxfb_unregister_driver void matroxfb_unregister_driver ( s#matroxfb_driver * ) 
matroxfb_wait_for_sync extern int matroxfb_wait_for_sync ( s#matrox_fb_info * , t#u_int32_t ) 
matroxfb_enable_irq extern int matroxfb_enable_irq ( s#matrox_fb_info * , int ) 

/* drivers/video/matrox/matroxfb_g450.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##matroxfb_dh_fb_info
matroxfb_g450_connect void matroxfb_g450_connect ( s#matrox_fb_info * ) 
matroxfb_g450_shutdown void matroxfb_g450_shutdown ( s#matrox_fb_info * ) 

/* drivers/video/matrox/matroxfb_misc.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##matroxfb_dh_fb_info
matroxfb_DAC_in extern int matroxfb_DAC_in ( const s#matrox_fb_info * , int ) 
matroxfb_DAC_out extern void matroxfb_DAC_out ( const s#matrox_fb_info * , int , int ) 
matroxfb_var2my extern void matroxfb_var2my ( s#fb_var_screeninfo * , s#my_timming * ) 
matroxfb_PLL_calcclock int matroxfb_PLL_calcclock ( const s#matrox_pll_features * , unsigned int , unsigned int , unsigned int * , unsigned int * , unsigned int * ) 
matroxfb_vgaHWinit int matroxfb_vgaHWinit ( s#matrox_fb_info * , s#my_timming * ) 
matroxfb_vgaHWrestore void matroxfb_vgaHWrestore ( s#matrox_fb_info * ) 
matroxfb_read_pins void matroxfb_read_pins ( s#matrox_fb_info * ) 

/* drivers/video/modedb.o */
fb_mode_option extern const char * fb_mode_option 
vesa_modes extern const s#fb_videomode vesa_modes [ ] 
fb_destroy_modelist extern void fb_destroy_modelist ( s#list_head * ) 
fb_find_best_display extern const s#fb_videomode * fb_find_best_display ( const s#fb_monspecs * , s#list_head * ) 
fb_videomode_to_var extern void fb_videomode_to_var ( s#fb_var_screeninfo * , const s#fb_videomode * ) 
fb_var_to_videomode extern void fb_var_to_videomode ( s#fb_videomode * , const s#fb_var_screeninfo * ) 
fb_mode_is_equal extern int fb_mode_is_equal ( const s#fb_videomode * , const s#fb_videomode * ) 
fb_add_videomode extern int fb_add_videomode ( const s#fb_videomode * , s#list_head * ) 
fb_match_mode extern const s#fb_videomode * fb_match_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_best_mode extern const s#fb_videomode * fb_find_best_mode ( const s#fb_var_screeninfo * , s#list_head * ) 
fb_find_nearest_mode extern const s#fb_videomode * fb_find_nearest_mode ( const s#fb_videomode * , s#list_head * ) 
fb_videomode_to_modelist extern void fb_videomode_to_modelist ( const s#fb_videomode * , int , s#list_head * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fb_find_mode extern int fb_find_mode ( s#fb_var_screeninfo * , s#fb_info * , const char * , const s#fb_videomode * , unsigned int , const s#fb_videomode * , unsigned int ) 
fb_find_mode_cvt extern int fb_find_mode_cvt ( s#fb_videomode * , int , int ) 

/* drivers/video/output.o */
s#output_properties struct output_properties { int ( * set_state ) ( s#output_device * ) ; int ( * get_status ) ( s#output_device * ) ; } 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#output_device struct output_device { int request_state ; s#output_properties * props ; s#device dev ; } 
video_output_register s#output_device * video_output_register ( const char * , s#device * , void * , s#output_properties * ) 
video_output_unregister void video_output_unregister ( s#output_device * ) 

/* drivers/video/svgalib.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
svga_get_caps void svga_get_caps ( s#fb_info * , s#fb_blit_caps * , s#fb_var_screeninfo * ) 
s#vga_regset struct vga_regset { t#u8 regnum ; t#u8 lowbit ; t#u8 highbit ; } 
svga_wcrt_multi void svga_wcrt_multi ( void * , const s#vga_regset * , t#u32 ) 
svga_wseq_multi void svga_wseq_multi ( void * , const s#vga_regset * , t#u32 ) 
svga_set_default_gfx_regs void svga_set_default_gfx_regs ( void * ) 
svga_set_default_atc_regs void svga_set_default_atc_regs ( void * ) 
svga_set_default_seq_regs void svga_set_default_seq_regs ( void * ) 
svga_set_default_crt_regs void svga_set_default_crt_regs ( void * ) 
svga_set_textmode_vga_regs void svga_set_textmode_vga_regs ( void * ) 
svga_settile void svga_settile ( s#fb_info * , s#fb_tilemap * ) 
svga_tilecopy void svga_tilecopy ( s#fb_info * , s#fb_tilearea * ) 
svga_tilefill void svga_tilefill ( s#fb_info * , s#fb_tilerect * ) 
svga_tileblit void svga_tileblit ( s#fb_info * , s#fb_tileblit * ) 
svga_tilecursor void svga_tilecursor ( void * , s#fb_info * , s#fb_tilecursor * ) 
svga_get_tilemax int svga_get_tilemax ( s#fb_info * ) 
s#svga_pll struct svga_pll { t#u16 m_min ; t#u16 m_max ; t#u16 n_min ; t#u16 n_max ; t#u16 r_min ; t#u16 r_max ; t#u32 f_vco_min ; t#u32 f_vco_max ; t#u32 f_base ; } 
svga_compute_pll int svga_compute_pll ( const s#svga_pll * , t#u32 , t#u16 * , t#u16 * , t#u16 * , int ) 
s#svga_timing_regs struct svga_timing_regs { const s#vga_regset * h_total_regs ; const s#vga_regset * h_display_regs ; const s#vga_regset * h_blank_start_regs ; const s#vga_regset * h_blank_end_regs ; const s#vga_regset * h_sync_start_regs ; const s#vga_regset * h_sync_end_regs ; const s#vga_regset * v_total_regs ; const s#vga_regset * v_display_regs ; const s#vga_regset * v_blank_start_regs ; const s#vga_regset * v_blank_end_regs ; const s#vga_regset * v_sync_start_regs ; const s#vga_regset * v_sync_end_regs ; } 
svga_check_timings int svga_check_timings ( const s#svga_timing_regs * , s#fb_var_screeninfo * , int ) 
svga_set_timings void svga_set_timings ( void * , const s#svga_timing_regs * , s#fb_var_screeninfo * , t#u32 , t#u32 , t#u32 , t#u32 , t#u32 , int ) 
s#svga_fb_format struct svga_fb_format { t#u32 bits_per_pixel ; s#fb_bitfield red ; s#fb_bitfield green ; s#fb_bitfield blue ; s#fb_bitfield transp ; t#u32 nonstd ; t#u32 type ; t#u32 type_aux ; t#u32 visual ; t#u32 xpanstep ; t#u32 xresstep ; } 
svga_match_format int svga_match_format ( const s#svga_fb_format * , s#fb_var_screeninfo * , s#fb_fix_screeninfo * ) 

/* drivers/video/syscopyarea.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
sys_copyarea extern void sys_copyarea ( s#fb_info * , const s#fb_copyarea * ) 

/* drivers/video/sysfillrect.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
sys_fillrect extern void sys_fillrect ( s#fb_info * , const s#fb_fillrect * ) 

/* drivers/video/sysimgblt.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
sys_imageblit extern void sys_imageblit ( s#fb_info * , const s#fb_image * ) 

/* drivers/video/vgastate.o */
s#vgastate struct vgastate { void * vgabase ; unsigned long membase ; t#__u32 memsize ; t#__u32 flags ; t#__u32 depth ; t#__u32 num_attr ; t#__u32 num_crtc ; t#__u32 num_gfx ; t#__u32 num_seq ; void * vidstate ; } 
save_vga extern int save_vga ( s#vgastate * ) 
restore_vga extern int restore_vga ( s#vgastate * ) 

/* drivers/virtio/virtio.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#virtio_device_id struct virtio_device_id { t#__u32 device ; t#__u32 vendor ; } 
s#virtqueue struct virtqueue { s#list_head list ; void ( * callback ) ( s#virtqueue * ) ; const char * name ; s#virtio_device * vdev ; void * priv ; } 
t#vq_callback_t typedef void vq_callback_t ( s#virtqueue * ) 
s#virtio_config_ops struct virtio_config_ops { void ( * get ) ( s#virtio_device * , unsigned , void * , unsigned ) ; void ( * set ) ( s#virtio_device * , unsigned , const void * , unsigned ) ; t#u8 ( * get_status ) ( s#virtio_device * ) ; void ( * set_status ) ( s#virtio_device * , t#u8 ) ; void ( * reset ) ( s#virtio_device * ) ; int ( * find_vqs ) ( s#virtio_device * , unsigned , s#virtqueue * [ ] , t#vq_callback_t * [ ] , const char * [ ] ) ; void ( * del_vqs ) ( s#virtio_device * ) ; t#u32 ( * get_features ) ( s#virtio_device * ) ; void ( * finalize_features ) ( s#virtio_device * ) ; const char * ( * bus_name ) ( s#virtio_device * ) ; int ( * set_vq_affinity ) ( s#virtqueue * , int ) ; } 
s#virtio_device struct virtio_device { int index ; s#device dev ; s#virtio_device_id id ; s#virtio_config_ops * config ; s#list_head vqs ; unsigned long features [ 1 ] ; void * priv ; } 
virtio_check_driver_offered_feature void virtio_check_driver_offered_feature ( const s#virtio_device * , unsigned int ) 
s#virtio_driver struct virtio_driver { s#device_driver driver ; const s#virtio_device_id * id_table ; const unsigned int * feature_table ; unsigned int feature_table_size ; int ( * probe ) ( s#virtio_device * ) ; void ( * scan ) ( s#virtio_device * ) ; void ( * remove ) ( s#virtio_device * ) ; void ( * config_changed ) ( s#virtio_device * ) ; int ( * freeze ) ( s#virtio_device * ) ; int ( * restore ) ( s#virtio_device * ) ; } 
register_virtio_driver int register_virtio_driver ( s#virtio_driver * ) 
unregister_virtio_driver void unregister_virtio_driver ( s#virtio_driver * ) 
register_virtio_device int register_virtio_device ( s#virtio_device * ) 
unregister_virtio_device void unregister_virtio_device ( s#virtio_device * ) 

/* drivers/virtio/virtio_ring.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
virtqueue_get_queue_index int virtqueue_get_queue_index ( s#virtqueue * ) 
virtqueue_add_buf int virtqueue_add_buf ( s#virtqueue * , s#scatterlist [ ] , unsigned int , unsigned int , void * , t#gfp_t ) 
virtqueue_kick_prepare t#bool virtqueue_kick_prepare ( s#virtqueue * ) 
virtqueue_notify void virtqueue_notify ( s#virtqueue * ) 
virtqueue_kick void virtqueue_kick ( s#virtqueue * ) 
virtqueue_get_buf void * virtqueue_get_buf ( s#virtqueue * , unsigned int * ) 
virtqueue_disable_cb void virtqueue_disable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_prepare unsigned virtqueue_enable_cb_prepare ( s#virtqueue * ) 
virtqueue_poll t#bool virtqueue_poll ( s#virtqueue * , unsigned ) 
virtqueue_enable_cb t#bool virtqueue_enable_cb ( s#virtqueue * ) 
virtqueue_enable_cb_delayed t#bool virtqueue_enable_cb_delayed ( s#virtqueue * ) 
virtqueue_detach_unused_buf void * virtqueue_detach_unused_buf ( s#virtqueue * ) 
vring_interrupt t#irqreturn_t vring_interrupt ( int , void * ) 
vring_new_virtqueue s#virtqueue * vring_new_virtqueue ( unsigned int , unsigned int , unsigned int , s#virtio_device * , t#bool , void * , void ( * ) ( s#virtqueue * ) , void ( * ) ( s#virtqueue * ) , const char * ) 
vring_del_virtqueue void vring_del_virtqueue ( s#virtqueue * ) 
vring_transport_features void vring_transport_features ( s#virtio_device * ) 
virtqueue_get_vring_size unsigned int virtqueue_get_vring_size ( s#virtqueue * ) 

/* drivers/w1/slaves/w1_ds2760.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
w1_ds2760_read extern int w1_ds2760_read ( s#device * , char * , int , t#size_t ) 
w1_ds2760_write extern int w1_ds2760_write ( s#device * , char * , int , t#size_t ) 
w1_ds2760_store_eeprom extern int w1_ds2760_store_eeprom ( s#device * , int ) 
w1_ds2760_recall_eeprom extern int w1_ds2760_recall_eeprom ( s#device * , int ) 

/* drivers/w1/slaves/w1_ds2780.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
w1_ds2780_io extern int w1_ds2780_io ( s#device * , char * , int , t#size_t , int ) 
w1_ds2780_io_nolock extern int w1_ds2780_io_nolock ( s#device * , char * , int , t#size_t , int ) 
w1_ds2780_eeprom_cmd extern int w1_ds2780_eeprom_cmd ( s#device * , int , int ) 

/* drivers/w1/w1_family.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#w1_reg_num struct w1_reg_num { t#__u64 crc : 8 , id : 48 , family : 8 ; } 
s##device_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
s##of_device_id
s##driver_private
t#w1_slave_found_callback typedef void ( * w1_slave_found_callback ) ( s#w1_master * , t#u64 ) 
s#w1_bus_master struct w1_bus_master { void * data ; t#u8 ( * read_bit ) ( void * ) ; void ( * write_bit ) ( void * , t#u8 ) ; t#u8 ( * touch_bit ) ( void * , t#u8 ) ; t#u8 ( * read_byte ) ( void * ) ; void ( * write_byte ) ( void * , t#u8 ) ; t#u8 ( * read_block ) ( void * , t#u8 * , int ) ; void ( * write_block ) ( void * , const t#u8 * , int ) ; t#u8 ( * triplet ) ( void * , t#u8 ) ; t#u8 ( * reset_bus ) ( void * ) ; t#u8 ( * set_pullup ) ( void * , int ) ; void ( * search ) ( void * , s#w1_master * , t#u8 , t#w1_slave_found_callback ) ; } 
s#w1_master struct w1_master { s#list_head w1_master_entry ; s#module * owner ; unsigned char name [ 32 ] ; s#list_head slist ; int max_slave_count , slave_count ; unsigned long attempts ; int slave_ttl ; int initialized ; t#u32 id ; int search_count ; t#atomic_t refcnt ; void * priv ; int priv_size ; int enable_pullup ; int pullup_duration ; s#task_struct * thread ; s#mutex mutex ; s#device_driver * driver ; s#device dev ; s#w1_bus_master * bus_master ; t#u32 seq ; } 
s#w1_slave struct w1_slave { s#module * owner ; unsigned char name [ 32 ] ; s#list_head w1_slave_entry ; s#w1_reg_num reg_num ; t#atomic_t refcnt ; t#u8 rom [ 9 ] ; t#u32 flags ; int ttl ; s#w1_master * master ; s#w1_family * family ; void * family_data ; s#device dev ; s#completion released ; } 
s#w1_family_ops struct w1_family_ops { int ( * add_slave ) ( s#w1_slave * ) ; void ( * remove_slave ) ( s#w1_slave * ) ; } 
s#w1_family struct w1_family { s#list_head family_entry ; t#u8 fid ; s#w1_family_ops * fops ; t#atomic_t refcnt ; } 
w1_unregister_family void w1_unregister_family ( s#w1_family * ) 
w1_register_family int w1_register_family ( s#w1_family * ) 

/* drivers/w1/w1_int.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
w1_add_master_device int w1_add_master_device ( s#w1_bus_master * ) 
w1_remove_master_device void w1_remove_master_device ( s#w1_bus_master * ) 

/* drivers/w1/w1_io.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
s##of_device_id
s##driver_private
w1_write_8 void w1_write_8 ( s#w1_master * , t#u8 ) 
w1_read_8 t#u8 w1_read_8 ( s#w1_master * ) 
w1_write_block void w1_write_block ( s#w1_master * , const t#u8 * , int ) 
w1_touch_block void w1_touch_block ( s#w1_master * , t#u8 * , int ) 
w1_read_block t#u8 w1_read_block ( s#w1_master * , t#u8 * , int ) 
w1_reset_bus int w1_reset_bus ( s#w1_master * ) 
w1_calc_crc8 t#u8 w1_calc_crc8 ( t#u8 * , int ) 
w1_reset_select_slave int w1_reset_select_slave ( s#w1_slave * ) 
w1_reset_resume_command int w1_reset_resume_command ( s#w1_master * ) 
w1_next_pullup void w1_next_pullup ( s#w1_master * , int ) 

/* fs/aio.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##eventfd_ctx
wait_on_sync_kiocb extern t#ssize_t wait_on_sync_kiocb ( s#kiocb * ) 
aio_put_req extern int aio_put_req ( s#kiocb * ) 
kick_iocb extern void kick_iocb ( s#kiocb * ) 
aio_complete extern int aio_complete ( s#kiocb * , long , long ) 
iocb_flags int iocb_flags ( s#file * ) 

/* fs/anon_inodes.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
anon_inode_getfile s#file * anon_inode_getfile ( const char * , const s#file_operations * , void * , int ) 
anon_inode_getfd int anon_inode_getfd ( const char * , const s#file_operations * , void * , int ) 

/* fs/attr.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
inode_change_ok extern int inode_change_ok ( const s#inode * , s#iattr * ) 
setattr_prepare extern int setattr_prepare ( s#dentry * , s#iattr * ) 
inode_newsize_ok extern int inode_newsize_ok ( const s#inode * , t#loff_t ) 
setattr_copy extern void setattr_copy ( s#inode * , const s#iattr * ) 
notify_change extern int notify_change ( s#dentry * , s#iattr * ) 

/* fs/bad_inode.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##tvec_base
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
make_bad_inode extern void make_bad_inode ( s#inode * ) 
is_bad_inode extern int is_bad_inode ( s#inode * ) 
iget_failed extern void iget_failed ( s#inode * ) 

/* fs/bio.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
bio_free extern void bio_free ( s#bio * , s#bio_set * ) 
bio_init extern void bio_init ( s#bio * ) 
bio_alloc_bioset extern s#bio * bio_alloc_bioset ( t#gfp_t , int , s#bio_set * ) 
bio_alloc extern s#bio * bio_alloc ( t#gfp_t , int ) 
bio_kmalloc extern s#bio * bio_kmalloc ( t#gfp_t , int ) 
zero_fill_bio void zero_fill_bio ( s#bio * ) 
bio_put extern void bio_put ( s#bio * ) 
bio_phys_segments extern int bio_phys_segments ( s#request_queue * , s#bio * ) 
__bio_clone extern void __bio_clone ( s#bio * , s#bio * ) 
bio_clone extern s#bio * bio_clone ( s#bio * , t#gfp_t ) 
bio_get_nr_vecs extern int bio_get_nr_vecs ( s#block_device * ) 
bio_add_pc_page extern int bio_add_pc_page ( s#request_queue * , s#bio * , s#page * , unsigned int , unsigned int ) 
bio_add_page extern int bio_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_uncopy_user extern int bio_uncopy_user ( s#bio * ) 
bio_copy_user extern s#bio * bio_copy_user ( s#request_queue * , s#rq_map_data * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_map_user extern s#bio * bio_map_user ( s#request_queue * , s#block_device * , unsigned long , unsigned int , int , t#gfp_t ) 
bio_unmap_user extern void bio_unmap_user ( s#bio * ) 
bio_map_kern extern s#bio * bio_map_kern ( s#request_queue * , void * , unsigned int , t#gfp_t ) 
bio_copy_kern extern s#bio * bio_copy_kern ( s#request_queue * , void * , unsigned int , t#gfp_t , int ) 
bio_flush_dcache_pages extern void bio_flush_dcache_pages ( s#bio * ) 
bio_endio extern void bio_endio ( s#bio * , int ) 
s#bio_pair struct bio_pair { s#bio bio1 , bio2 ; s#bio_vec bv1 , bv2 ; s#bio_integrity_payload bip1 , bip2 ; s#bio_vec iv1 , iv2 ; t#atomic_t cnt ; int error ; } 
bio_pair_release extern void bio_pair_release ( s#bio_pair * ) 
bio_split extern s#bio_pair * bio_split ( s#bio * , int ) 
bio_sector_offset extern t#sector_t bio_sector_offset ( s#bio * , unsigned short , unsigned int ) 
bioset_free extern void bioset_free ( s#bio_set * ) 
bioset_create extern s#bio_set * bioset_create ( unsigned int , unsigned int ) 

/* fs/bio-integrity.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
bio_integrity_alloc_bioset extern s#bio_integrity_payload * bio_integrity_alloc_bioset ( s#bio * , t#gfp_t , unsigned int , s#bio_set * ) 
bio_integrity_alloc extern s#bio_integrity_payload * bio_integrity_alloc ( s#bio * , t#gfp_t , unsigned int ) 
bio_integrity_free extern void bio_integrity_free ( s#bio * , s#bio_set * ) 
bio_integrity_add_page extern int bio_integrity_add_page ( s#bio * , s#page * , unsigned int , unsigned int ) 
bio_integrity_enabled extern int bio_integrity_enabled ( s#bio * ) 
bio_integrity_tag_size unsigned int bio_integrity_tag_size ( s#bio * ) 
bio_integrity_set_tag extern int bio_integrity_set_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_get_tag extern int bio_integrity_get_tag ( s#bio * , void * , unsigned int ) 
bio_integrity_prep extern int bio_integrity_prep ( s#bio * ) 
bio_integrity_endio extern void bio_integrity_endio ( s#bio * , int ) 
bio_integrity_advance extern void bio_integrity_advance ( s#bio * , unsigned int ) 
bio_integrity_trim extern void bio_integrity_trim ( s#bio * , unsigned int , unsigned int ) 
bio_integrity_split extern void bio_integrity_split ( s#bio * , s#bio_pair * , int ) 
bio_integrity_clone extern int bio_integrity_clone ( s#bio * , s#bio * , t#gfp_t , s#bio_set * ) 
bioset_integrity_create extern int bioset_integrity_create ( s#bio_set * , int ) 
bioset_integrity_free extern void bioset_integrity_free ( s#bio_set * ) 

/* fs/block_dev.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
I_BDEV extern s#block_device * I_BDEV ( s#inode * ) 
set_blocksize extern int set_blocksize ( s#block_device * , int ) 
sb_set_blocksize extern int sb_set_blocksize ( s#super_block * , int ) 
sb_min_blocksize extern int sb_min_blocksize ( s#super_block * , int ) 
sync_blockdev extern int sync_blockdev ( s#block_device * ) 
fsync_bdev extern int fsync_bdev ( s#block_device * ) 
freeze_bdev extern s#super_block * freeze_bdev ( s#block_device * ) 
thaw_bdev extern int thaw_bdev ( s#block_device * , s#super_block * ) 
blkdev_fsync extern int blkdev_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
bdget extern s#block_device * bdget ( t#dev_t ) 
bdgrab extern s#block_device * bdgrab ( s#block_device * ) 
bdput extern void bdput ( s#block_device * ) 
bd_link_disk_holder extern int bd_link_disk_holder ( s#block_device * , s#gendisk * ) 
bd_unlink_disk_holder extern void bd_unlink_disk_holder ( s#block_device * , s#gendisk * ) 
check_disk_size_change extern void check_disk_size_change ( s#gendisk * , s#block_device * ) 
revalidate_disk extern int revalidate_disk ( s#gendisk * ) 
check_disk_change extern int check_disk_change ( s#block_device * ) 
bd_set_size extern void bd_set_size ( s#block_device * , t#loff_t ) 
blkdev_get extern int blkdev_get ( s#block_device * , t#fmode_t , void * ) 
blkdev_get_by_path extern s#block_device * blkdev_get_by_path ( const char * , t#fmode_t , void * ) 
blkdev_get_by_dev extern s#block_device * blkdev_get_by_dev ( t#dev_t , t#fmode_t , void * ) 
blkdev_put extern int blkdev_put ( s#block_device * , t#fmode_t ) 
blkdev_aio_write extern t#ssize_t blkdev_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
blkdev_aio_read extern t#ssize_t blkdev_aio_read ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
ioctl_by_bdev extern int ioctl_by_bdev ( s#block_device * , unsigned , unsigned long ) 
lookup_bdev extern s#block_device * lookup_bdev ( const char * ) 
__invalidate_device extern int __invalidate_device ( s#block_device * , t#bool ) 

/* fs/btrfs/ulist.o */
s#ulist_node struct ulist_node { t#u64 val ; t#u64 aux ; s#rb_node rb_node ; } 
s#ulist struct ulist { unsigned long nnodes ; unsigned long nodes_alloced ; s#ulist_node * nodes ; s#rb_root root ; s#ulist_node int_nodes [ 16 ] ; } 
ulist_init void ulist_init ( s#ulist * ) 
ulist_fini void ulist_fini ( s#ulist * ) 
ulist_reinit void ulist_reinit ( s#ulist * ) 
ulist_alloc s#ulist * ulist_alloc ( t#gfp_t ) 
ulist_free void ulist_free ( s#ulist * ) 
ulist_add int ulist_add ( s#ulist * , t#u64 , t#u64 , t#gfp_t ) 
s#ulist_iterator struct ulist_iterator { int i ; } 
ulist_next s#ulist_node * ulist_next ( s#ulist * , s#ulist_iterator * ) 

/* fs/buffer.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s#fid struct fid { union { struct { t#u32 ino ; t#u32 gen ; t#u32 parent_ino ; t#u32 parent_gen ; } i32 ; struct { t#u32 block ; t#u16 partref ; t#u16 parent_partref ; t#u32 generation ; t#u32 parent_block ; t#u32 parent_generation ; } udf ; t#__u32 raw [ 0 ] ; } ; } 
s#export_operations struct export_operations { int ( * encode_fh ) ( s#dentry * , t#__u32 * , int * , int ) ; s#dentry * ( * fh_to_dentry ) ( s#super_block * , s#fid * , int , int ) ; s#dentry * ( * fh_to_parent ) ( s#super_block * , s#fid * , int , int ) ; int ( * get_name ) ( s#dentry * , char * , s#dentry * ) ; s#dentry * ( * get_parent ) ( s#dentry * ) ; int ( * commit_metadata ) ( s#inode * ) ; } 
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
t#bh_end_io_t typedef void ( bh_end_io_t ) ( s#buffer_head * , int ) 
s#buffer_head struct buffer_head { unsigned long b_state ; s#buffer_head * b_this_page ; s#page * b_page ; t#sector_t b_blocknr ; t#size_t b_size ; char * b_data ; s#block_device * b_bdev ; t#bh_end_io_t * b_end_io ; void * b_private ; s#list_head b_assoc_buffers ; s#address_space * b_assoc_map ; t#atomic_t b_count ; } 
init_buffer void init_buffer ( s#buffer_head * , t#bh_end_io_t * , void * ) 
__lock_buffer void __lock_buffer ( s#buffer_head * ) 
unlock_buffer void unlock_buffer ( s#buffer_head * ) 
buffer_check_dirty_writeback void buffer_check_dirty_writeback ( s#page * , t#bool * , t#bool * ) 
__wait_on_buffer void __wait_on_buffer ( s#buffer_head * ) 
end_buffer_read_sync void end_buffer_read_sync ( s#buffer_head * , int ) 
end_buffer_write_sync void end_buffer_write_sync ( s#buffer_head * , int ) 
invalidate_bdev extern void invalidate_bdev ( s#block_device * ) 
end_buffer_async_write void end_buffer_async_write ( s#buffer_head * , int ) 
mark_buffer_async_write void mark_buffer_async_write ( s#buffer_head * ) 
sync_mapping_buffers int sync_mapping_buffers ( s#address_space * ) 
mark_buffer_dirty_inode void mark_buffer_dirty_inode ( s#buffer_head * , s#inode * ) 
__set_page_dirty_buffers extern int __set_page_dirty_buffers ( s#page * ) 
invalidate_inode_buffers void invalidate_inode_buffers ( s#inode * ) 
alloc_page_buffers s#buffer_head * alloc_page_buffers ( s#page * , unsigned long , int ) 
mark_buffer_dirty void mark_buffer_dirty ( s#buffer_head * ) 
__brelse void __brelse ( s#buffer_head * ) 
__bforget void __bforget ( s#buffer_head * ) 
__find_get_block s#buffer_head * __find_get_block ( s#block_device * , t#sector_t , unsigned ) 
__getblk s#buffer_head * __getblk ( s#block_device * , t#sector_t , unsigned ) 
__breadahead void __breadahead ( s#block_device * , t#sector_t , unsigned int ) 
__bread s#buffer_head * __bread ( s#block_device * , t#sector_t , unsigned ) 
invalidate_bh_lrus void invalidate_bh_lrus ( void ) 
set_bh_page void set_bh_page ( s#buffer_head * , s#page * , unsigned long ) 
block_invalidatepage void block_invalidatepage ( s#page * , unsigned long ) 
create_empty_buffers void create_empty_buffers ( s#page * , unsigned long , unsigned long ) 
unmap_underlying_metadata void unmap_underlying_metadata ( s#block_device * , t#sector_t ) 
page_zero_new_buffers void page_zero_new_buffers ( s#page * , unsigned , unsigned ) 
t#get_block_t typedef int ( get_block_t ) ( s#inode * , t#sector_t , s#buffer_head * , int ) 
__block_write_begin int __block_write_begin ( s#page * , t#loff_t , unsigned , t#get_block_t * ) 
block_write_begin int block_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , t#get_block_t * ) 
block_write_end int block_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_write_end int generic_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
block_is_partially_uptodate int block_is_partially_uptodate ( s#page * , t#read_descriptor_t * , unsigned long ) 
block_read_full_page int block_read_full_page ( s#page * , t#get_block_t * ) 
generic_cont_expand_simple int generic_cont_expand_simple ( s#inode * , t#loff_t ) 
cont_write_begin int cont_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * , t#loff_t * ) 
block_commit_write int block_commit_write ( s#page * , unsigned , unsigned ) 
__block_page_mkwrite int __block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
block_page_mkwrite int block_page_mkwrite ( s#vm_area_struct * , s#vm_fault * , t#get_block_t ) 
nobh_write_begin int nobh_write_begin ( s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * , t#get_block_t * ) 
nobh_write_end int nobh_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
nobh_writepage int nobh_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 
nobh_truncate_page int nobh_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_truncate_page int block_truncate_page ( s#address_space * , t#loff_t , t#get_block_t * ) 
block_write_full_page_endio int block_write_full_page_endio ( s#page * , t#get_block_t * , s#writeback_control * , t#bh_end_io_t * ) 
block_write_full_page int block_write_full_page ( s#page * , t#get_block_t * , s#writeback_control * ) 
generic_block_bmap t#sector_t generic_block_bmap ( s#address_space * , t#sector_t , t#get_block_t * ) 
_submit_bh int _submit_bh ( int , s#buffer_head * , unsigned long ) 
submit_bh int submit_bh ( int , s#buffer_head * ) 
ll_rw_block void ll_rw_block ( int , int , s#buffer_head * [ ] ) 
write_dirty_buffer void write_dirty_buffer ( s#buffer_head * , int ) 
__sync_dirty_buffer int __sync_dirty_buffer ( s#buffer_head * , int ) 
sync_dirty_buffer int sync_dirty_buffer ( s#buffer_head * ) 
try_to_free_buffers int try_to_free_buffers ( s#page * ) 
alloc_buffer_head s#buffer_head * alloc_buffer_head ( t#gfp_t ) 
free_buffer_head void free_buffer_head ( s#buffer_head * ) 
bh_uptodate_or_lock int bh_uptodate_or_lock ( s#buffer_head * ) 
bh_submit_read int bh_submit_read ( s#buffer_head * ) 

/* fs/char_dev.o */
register_chrdev_region extern int register_chrdev_region ( t#dev_t , unsigned , const char * ) 
unregister_chrdev_region extern void unregister_chrdev_region ( t#dev_t , unsigned ) 
alloc_chrdev_region extern int alloc_chrdev_region ( t#dev_t * , unsigned , unsigned , const char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##proc_dir_entry
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
cdev_init void cdev_init ( s#cdev * , const s#file_operations * ) 
cdev_alloc s#cdev * cdev_alloc ( void ) 
cdev_del void cdev_del ( s#cdev * ) 
cdev_add int cdev_add ( s#cdev * , t#dev_t , unsigned ) 
__register_chrdev extern int __register_chrdev ( unsigned int , unsigned int , unsigned int , const char * , const s#file_operations * ) 
__unregister_chrdev extern void __unregister_chrdev ( unsigned int , unsigned int , unsigned int , const char * ) 
directly_mappable_cdev_bdi extern s#backing_dev_info directly_mappable_cdev_bdi 

/* fs/configfs/dir.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##mnt_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
configfs_depend_item int configfs_depend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_undepend_item void configfs_undepend_item ( s#configfs_subsystem * , s#config_item * ) 
configfs_register_subsystem int configfs_register_subsystem ( s#configfs_subsystem * ) 
configfs_unregister_subsystem void configfs_unregister_subsystem ( s#configfs_subsystem * ) 

/* fs/configfs/item.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##dentry
config_item_set_name extern int config_item_set_name ( s#config_item * , const char * , ... ) 
config_item_init_type_name extern void config_item_init_type_name ( s#config_item * , const char * , s#config_item_type * ) 
config_group_init_type_name extern void config_group_init_type_name ( s#config_group * , const char * , s#config_item_type * ) 
config_item_init extern void config_item_init ( s#config_item * ) 
config_group_init extern void config_group_init ( s#config_group * ) 
config_item_get extern s#config_item * config_item_get ( s#config_item * ) 
config_item_put extern void config_item_put ( s#config_item * ) 
config_group_find_item extern s#config_item * config_group_find_item ( s#config_group * , const char * ) 

/* fs/dcache.o */
sysctl_vfs_cache_pressure extern int sysctl_vfs_cache_pressure 
rename_lock extern t#seqlock_t rename_lock 
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s#fs_struct struct fs_struct { int users ; t#spinlock_t lock ; t#seqcount_t seq ; int umask ; int in_exec ; s#path root , pwd ; } 
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
__d_drop extern void __d_drop ( s#dentry * ) 
d_drop extern void d_drop ( s#dentry * ) 
d_clear_need_lookup extern void d_clear_need_lookup ( s#dentry * ) 
dput extern void dput ( s#dentry * ) 
d_invalidate extern int d_invalidate ( s#dentry * ) 
dget_parent extern s#dentry * dget_parent ( s#dentry * ) 
d_find_alias extern s#dentry * d_find_alias ( s#inode * ) 
d_prune_aliases extern void d_prune_aliases ( s#inode * ) 
shrink_dcache_sb extern void shrink_dcache_sb ( s#super_block * ) 
shrink_dcache_for_umount_subtree extern void shrink_dcache_for_umount_subtree ( s#dentry * ) 
have_submounts extern int have_submounts ( s#dentry * ) 
shrink_dcache_parent extern void shrink_dcache_parent ( s#dentry * ) 
d_alloc extern s#dentry * d_alloc ( s#dentry * , const s#qstr * ) 
d_alloc_pseudo extern s#dentry * d_alloc_pseudo ( s#super_block * , const s#qstr * ) 
d_alloc_name s#dentry * d_alloc_name ( s#dentry * , const char * ) 
d_set_d_op extern void d_set_d_op ( s#dentry * , const s#dentry_operations * ) 
d_instantiate extern void d_instantiate ( s#dentry * , s#inode * ) 
d_instantiate_unique extern s#dentry * d_instantiate_unique ( s#dentry * , s#inode * ) 
d_alloc_root extern s#dentry * d_alloc_root ( s#inode * ) 
d_make_root extern s#dentry * d_make_root ( s#inode * ) 
d_obtain_alias extern s#dentry * d_obtain_alias ( s#inode * ) 
d_splice_alias extern s#dentry * d_splice_alias ( s#inode * , s#dentry * ) 
d_add_ci extern s#dentry * d_add_ci ( s#dentry * , s#inode * , s#qstr * ) 
d_lookup extern s#dentry * d_lookup ( s#dentry * , s#qstr * ) 
d_validate extern int d_validate ( s#dentry * , s#dentry * ) 
d_delete extern void d_delete ( s#dentry * ) 
d_rehash extern void d_rehash ( s#dentry * ) 
dentry_update_name_case extern void dentry_update_name_case ( s#dentry * , s#qstr * ) 
d_move extern void d_move ( s#dentry * , s#dentry * ) 
d_materialise_unique extern s#dentry * d_materialise_unique ( s#dentry * , s#inode * ) 
d_path extern char * d_path ( const s#path * , char * , int ) 
dentry_path_raw extern char * dentry_path_raw ( s#dentry * , char * , int ) 
t#__kernel_ino_t typedef unsigned long __kernel_ino_t 
t#ino_t typedef t#__kernel_ino_t ino_t 
find_inode_number extern t#ino_t find_inode_number ( s#dentry * , s#qstr * ) 
names_cachep extern s#kmem_cache * names_cachep 
d_genocide extern void d_genocide ( s#dentry * ) 

/* fs/dcookies.o */
s##dcookie_user
dcookie_register s#dcookie_user * dcookie_register ( void ) 
dcookie_unregister void dcookie_unregister ( s#dcookie_user * ) 
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
get_dcookie int get_dcookie ( s#path * , unsigned long * ) 

/* fs/debugfs/file.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
debugfs_create_u8 s#dentry * debugfs_create_u8 ( const char * , t#mode_t , s#dentry * , t#u8 * ) 
debugfs_create_u16 s#dentry * debugfs_create_u16 ( const char * , t#mode_t , s#dentry * , t#u16 * ) 
debugfs_create_u32 s#dentry * debugfs_create_u32 ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
debugfs_create_u64 s#dentry * debugfs_create_u64 ( const char * , t#mode_t , s#dentry * , t#u64 * ) 
debugfs_create_x8 s#dentry * debugfs_create_x8 ( const char * , t#mode_t , s#dentry * , t#u8 * ) 
debugfs_create_x16 s#dentry * debugfs_create_x16 ( const char * , t#mode_t , s#dentry * , t#u16 * ) 
debugfs_create_x32 s#dentry * debugfs_create_x32 ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
debugfs_create_x64 s#dentry * debugfs_create_x64 ( const char * , t#mode_t , s#dentry * , t#u64 * ) 
debugfs_create_size_t s#dentry * debugfs_create_size_t ( const char * , t#mode_t , s#dentry * , t#size_t * ) 
debugfs_create_bool s#dentry * debugfs_create_bool ( const char * , t#mode_t , s#dentry * , t#u32 * ) 
s#debugfs_blob_wrapper struct debugfs_blob_wrapper { void * data ; unsigned long size ; } 
debugfs_create_blob s#dentry * debugfs_create_blob ( const char * , t#mode_t , s#dentry * , s#debugfs_blob_wrapper * ) 

/* fs/debugfs/inode.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
debugfs_create_file s#dentry * debugfs_create_file ( const char * , t#mode_t , s#dentry * , void * , const s#file_operations * ) 
debugfs_create_dir s#dentry * debugfs_create_dir ( const char * , s#dentry * ) 
debugfs_create_symlink s#dentry * debugfs_create_symlink ( const char * , s#dentry * , const char * ) 
debugfs_remove void debugfs_remove ( s#dentry * ) 
debugfs_remove_recursive void debugfs_remove_recursive ( s#dentry * ) 
debugfs_rename s#dentry * debugfs_rename ( s#dentry * , s#dentry * , s#dentry * , const char * ) 
debugfs_initialized t#bool debugfs_initialized ( void ) 

/* fs/direct-io.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
dio_end_io void dio_end_io ( s#bio * , int ) 
t#dio_iodone_t typedef void ( dio_iodone_t ) ( s#kiocb * , t#loff_t , t#ssize_t , void * , int , t#bool ) 
t#dio_submit_t typedef void ( dio_submit_t ) ( int , s#bio * , s#inode * , t#loff_t ) 
__blockdev_direct_IO t#ssize_t __blockdev_direct_IO ( int , s#kiocb * , s#inode * , s#block_device * , const s#iovec * , t#loff_t , unsigned long , t#get_block_t , t#dio_iodone_t , t#dio_submit_t , int ) 

/* fs/dlm/main.o */
t#dlm_lockspace_t typedef void dlm_lockspace_t 
dlm_new_lockspace int dlm_new_lockspace ( const char * , int , t#dlm_lockspace_t * * , t#uint32_t , int ) 
dlm_release_lockspace int dlm_release_lockspace ( t#dlm_lockspace_t * , int ) 
s#dlm_lksb struct dlm_lksb { int sb_status ; t#__u32 sb_lkid ; char sb_flags ; char * sb_lvbptr ; } 
dlm_lock int dlm_lock ( t#dlm_lockspace_t * , int , s#dlm_lksb * , t#uint32_t , void * , unsigned int , t#uint32_t , void ( * ) ( void * ) , void * , void ( * ) ( void * , int ) ) 
dlm_unlock int dlm_unlock ( t#dlm_lockspace_t * , t#uint32_t , t#uint32_t , s#dlm_lksb * , void * ) 

/* fs/dlm/plock.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
dlm_posix_lock int dlm_posix_lock ( t#dlm_lockspace_t * , t#u64 , s#file * , int , s#file_lock * ) 
dlm_posix_unlock int dlm_posix_unlock ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 
dlm_posix_get int dlm_posix_get ( t#dlm_lockspace_t * , t#u64 , s#file * , s#file_lock * ) 

/* fs/dmapi/dmapi_sysent.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
t#dm_right_t typedef enum { DM_RIGHT_NULL , DM_RIGHT_SHARED , DM_RIGHT_EXCL } dm_right_t 
dm_send_mount_event int dm_send_mount_event ( s#super_block * , t#dm_right_t , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , char * , char * ) 
t#dm_eventtype_t typedef enum { DM_EVENT_INVALID = - 1 , DM_EVENT_CANCEL = 0 , DM_EVENT_MOUNT = 1 , DM_EVENT_PREUNMOUNT = 2 , DM_EVENT_UNMOUNT = 3 , DM_EVENT_DEBUT = 4 , DM_EVENT_CREATE = 5 , DM_EVENT_CLOSE = 6 , DM_EVENT_POSTCREATE = 7 , DM_EVENT_REMOVE = 8 , DM_EVENT_POSTREMOVE = 9 , DM_EVENT_RENAME = 10 , DM_EVENT_POSTRENAME = 11 , DM_EVENT_LINK = 12 , DM_EVENT_POSTLINK = 13 , DM_EVENT_SYMLINK = 14 , DM_EVENT_POSTSYMLINK = 15 , DM_EVENT_READ = 16 , DM_EVENT_WRITE = 17 , DM_EVENT_TRUNCATE = 18 , DM_EVENT_ATTRIBUTE = 19 , DM_EVENT_DESTROY = 20 , DM_EVENT_NOSPACE = 21 , DM_EVENT_USER = 22 , DM_EVENT_MAX = 23 } dm_eventtype_t 
dm_send_namesp_event int dm_send_namesp_event ( t#dm_eventtype_t , s#super_block * , s#inode * , t#dm_right_t , s#inode * , t#dm_right_t , const char * , const char * , t#mode_t , int , int ) 
dm_send_unmount_event void dm_send_unmount_event ( s#super_block * , s#inode * , t#dm_right_t , t#mode_t , int , int ) 
t#dm_off_t typedef t#__s64 dm_off_t 
dm_send_data_event int dm_send_data_event ( t#dm_eventtype_t , s#inode * , t#dm_right_t , t#dm_off_t , t#size_t , int ) 
dm_send_destroy_event int dm_send_destroy_event ( s#inode * , t#dm_right_t ) 
t#dm_fsid_t typedef t#__u64 dm_fsid_t 
s#dm_fid struct dm_fid { t#__u16 dm_fid_len ; t#__u16 dm_fid_pad ; t#__u32 dm_fid_gen ; t#__u64 dm_fid_ino ; } 
t#dm_fid_t typedef s#dm_fid dm_fid_t 
s#dm_handle struct dm_handle { union { t#__s64 align ; t#dm_fsid_t _ha_fsid ; } ha_u ; t#dm_fid_t ha_fid ; } 
t#dm_handle_t typedef s#dm_handle dm_handle_t 
dm_ip_to_handle int dm_ip_to_handle ( s#inode * , t#dm_handle_t * ) 
s#filesystem_dmapi_operations struct filesystem_dmapi_operations { int ( * get_fsys_vector ) ( s#super_block * , void * ) ; int ( * fh_to_inode ) ( s#super_block * , s#inode * * , t#dm_fid_t * ) ; int ( * inode_to_fh ) ( s#inode * , t#dm_fid_t * , t#dm_fsid_t * ) ; void ( * get_fsid ) ( s#super_block * , t#dm_fsid_t * ) ; int ( * flushing ) ( s#inode * ) ; } 
dmapi_register void dmapi_register ( s#file_system_type * , s#filesystem_dmapi_operations * ) 
dmapi_unregister void dmapi_unregister ( s#file_system_type * ) 
dmapi_registered int dmapi_registered ( s#file_system_type * , s#filesystem_dmapi_operations * * ) 
dm_release_threads int dm_release_threads ( s#super_block * , s#inode * , int ) 

/* fs/eventfd.o */
s##eventfd_ctx
eventfd_signal int eventfd_signal ( s#eventfd_ctx * , int ) 
eventfd_ctx_get s#eventfd_ctx * eventfd_ctx_get ( s#eventfd_ctx * ) 
eventfd_ctx_put void eventfd_ctx_put ( s#eventfd_ctx * ) 
t#wait_queue_func_t typedef int ( * wait_queue_func_t ) ( t#wait_queue_t * , unsigned , int , void * ) 
s#__wait_queue struct __wait_queue { unsigned int flags ; void * private ; t#wait_queue_func_t func ; s#list_head task_list ; } 
t#wait_queue_t typedef s#__wait_queue wait_queue_t 
eventfd_ctx_remove_wait_queue int eventfd_ctx_remove_wait_queue ( s#eventfd_ctx * , t#wait_queue_t * , t#__u64 * ) 
eventfd_ctx_read t#ssize_t eventfd_ctx_read ( s#eventfd_ctx * , int , t#__u64 * ) 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
eventfd_fget s#file * eventfd_fget ( int ) 
eventfd_ctx_fdget s#eventfd_ctx * eventfd_ctx_fdget ( int ) 
eventfd_ctx_fileget s#eventfd_ctx * eventfd_ctx_fileget ( s#file * ) 

/* fs/exec.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
__register_binfmt extern int __register_binfmt ( s#linux_binfmt * , int ) 
unregister_binfmt extern void unregister_binfmt ( s#linux_binfmt * ) 
copy_strings_kernel extern int copy_strings_kernel ( int , const char * const * , s#linux_binprm * ) 
setup_arg_pages extern int setup_arg_pages ( s#linux_binprm * , unsigned long , int ) 
open_exec extern s#file * open_exec ( const char * ) 
kernel_read extern int kernel_read ( s#file * , t#loff_t , char * , unsigned long ) 
get_task_comm extern char * get_task_comm ( char * , s#task_struct * ) 
flush_old_exec extern int flush_old_exec ( s#linux_binprm * ) 
setup_new_exec extern void setup_new_exec ( s#linux_binprm * ) 
bprm_change_interp extern int bprm_change_interp ( char * , s#linux_binprm * ) 
install_exec_creds extern void install_exec_creds ( s#linux_binprm * ) 
prepare_binprm extern int prepare_binprm ( s#linux_binprm * ) 
remove_arg_zero extern int remove_arg_zero ( s#linux_binprm * ) 
search_binary_handler extern int search_binary_handler ( s#linux_binprm * , s#pt_regs * ) 
set_binfmt extern void set_binfmt ( s#linux_binfmt * ) 
dump_write int dump_write ( s#file * , const void * , int ) 
dump_seek int dump_seek ( s#file * , t#loff_t ) 

/* fs/exportfs/expfs.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
exportfs_encode_fh extern int exportfs_encode_fh ( s#dentry * , s#fid * , int * , int ) 
exportfs_decode_fh extern s#dentry * exportfs_decode_fh ( s#vfsmount * , s#fid * , int , int , int ( * ) ( void * , s#dentry * ) , void * ) 

/* fs/fat/dir.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s#msdos_dir_entry struct msdos_dir_entry { t#__u8 name [ 11 ] ; t#__u8 attr ; t#__u8 lcase ; t#__u8 ctime_cs ; t#__le16 ctime ; t#__le16 cdate ; t#__le16 adate ; t#__le16 starthi ; t#__le16 time , date , start ; t#__le32 size ; } 
s#fat_slot_info struct fat_slot_info { t#loff_t i_pos ; t#loff_t slot_off ; int nr_slots ; s#msdos_dir_entry * de ; s#buffer_head * bh ; } 
fat_search_long extern int fat_search_long ( s#inode * , const unsigned char * , int , s#fat_slot_info * ) 
fat_get_dotdot_entry extern int fat_get_dotdot_entry ( s#inode * , s#buffer_head * * , s#msdos_dir_entry * * , t#loff_t * ) 
fat_dir_empty extern int fat_dir_empty ( s#inode * ) 
fat_scan extern int fat_scan ( s#inode * , const unsigned char * , s#fat_slot_info * ) 
fat_remove_entries extern int fat_remove_entries ( s#inode * , s#fat_slot_info * ) 
fat_alloc_new_dir extern int fat_alloc_new_dir ( s#inode * , s#timespec * ) 
fat_add_entries extern int fat_add_entries ( s#inode * , void * , int , s#fat_slot_info * ) 

/* fs/fat/fatent.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
fat_free_clusters extern int fat_free_clusters ( s#inode * , int ) 

/* fs/fat/file.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mtd_info
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
fat_getattr extern int fat_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
fat_setattr extern int fat_setattr ( s#dentry * , s#iattr * ) 

/* fs/fat/inode.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
t#__kernel_fsid_t typedef struct { int val [ 2 ] ; } __kernel_fsid_t 
s#kstatfs struct kstatfs { long f_type ; long f_bsize ; t#u64 f_blocks ; t#u64 f_bfree ; t#u64 f_bavail ; t#u64 f_files ; t#u64 f_ffree ; t#__kernel_fsid_t f_fsid ; long f_namelen ; long f_frsize ; long f_flags ; long f_spare [ 4 ] ; } 
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
fat_attach extern void fat_attach ( s#inode * , t#loff_t ) 
fat_detach extern void fat_detach ( s#inode * ) 
fat_build_inode extern s#inode * fat_build_inode ( s#super_block * , s#msdos_dir_entry * , t#loff_t ) 
fat_sync_inode extern int fat_sync_inode ( s#inode * ) 
fat_fill_super extern int fat_fill_super ( s#super_block * , void * , int , int , void ( * ) ( s#super_block * ) ) 
fat_flush_inodes extern int fat_flush_inodes ( s#super_block * , s#inode * , s#inode * ) 

/* fs/fat/misc.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
__fat_fs_error extern void __fat_fs_error ( s#super_block * , int , const char * , ... ) 
s#fat_mount_options struct fat_mount_options { t#uid_t fs_uid ; t#gid_t fs_gid ; unsigned short fs_fmask ; unsigned short fs_dmask ; unsigned short codepage ; char * iocharset ; unsigned short shortname ; unsigned char name_check ; unsigned char errors ; unsigned short allow_utime ; unsigned quiet : 1 , showexec : 1 , sys_immutable : 1 , dotsOK : 1 , isvfat : 1 , utf8 : 1 , unicode_xlate : 1 , numtail : 1 , flush : 1 , nocase : 1 , usefree : 1 , tz_utc : 1 , rodir : 1 , discard : 1 ; } 
t#wchar_t typedef t#u16 wchar_t 
s#nls_table struct nls_table { const char * charset ; const char * alias ; int ( * uni2char ) ( t#wchar_t , unsigned char * , int ) ; int ( * char2uni ) ( const unsigned char * , int , t#wchar_t * ) ; const unsigned char * charset2lower ; const unsigned char * charset2upper ; s#module * owner ; s#nls_table * next ; } 
s##fatent_operations
s#ratelimit_state struct ratelimit_state { t#spinlock_t lock ; int interval ; int burst ; int printed ; int missed ; unsigned long begin ; } 
s#msdos_sb_info struct msdos_sb_info { unsigned short sec_per_clus ; unsigned short cluster_bits ; unsigned int cluster_size ; unsigned char fats , fat_bits ; unsigned short fat_start ; unsigned long fat_length ; unsigned long dir_start ; unsigned short dir_entries ; unsigned long data_start ; unsigned long max_cluster ; unsigned long root_cluster ; unsigned long fsinfo_sector ; s#mutex fat_lock ; unsigned int prev_free ; unsigned int free_clusters ; unsigned int free_clus_valid ; s#fat_mount_options options ; s#nls_table * nls_disk ; s#nls_table * nls_io ; const void * dir_ops ; int dir_per_block ; int dir_per_block_bits ; int fatent_shift ; s#fatent_operations * fatent_ops ; s#inode * fat_inode ; s#ratelimit_state ratelimit ; t#spinlock_t inode_hash_lock ; s#hlist_head inode_hashtable [ ( 1UL << 8 ) ] ; } 
fat_time_unix2fat extern void fat_time_unix2fat ( s#msdos_sb_info * , s#timespec * , t#__le16 * , t#__le16 * , t#u8 * ) 

/* fs/fcntl.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
__f_setown extern int __f_setown ( s#file * , s#pid * , e#pid_type , int ) 
f_setown extern int f_setown ( s#file * , unsigned long , int ) 
fasync_helper extern int fasync_helper ( int , s#file * , int , s#fasync_struct * * ) 
kill_fasync extern void kill_fasync ( s#fasync_struct * * , int , int ) 

/* fs/file.o */
get_unused_fd extern int get_unused_fd ( void ) 

/* fs/file_table.o */
files_lglock_lock_init extern void files_lglock_lock_init ( void ) 
files_lglock_local_lock extern void files_lglock_local_lock ( void ) 
files_lglock_local_unlock extern void files_lglock_local_unlock ( void ) 
files_lglock_local_lock_cpu extern void files_lglock_local_lock_cpu ( int ) 
files_lglock_local_unlock_cpu extern void files_lglock_local_unlock_cpu ( int ) 
files_lglock_global_lock_online extern void files_lglock_global_lock_online ( void ) 
files_lglock_global_unlock_online extern void files_lglock_global_unlock_online ( void ) 
files_lglock_global_lock extern void files_lglock_global_lock ( void ) 
files_lglock_global_unlock extern void files_lglock_global_unlock ( void ) 
get_max_files extern unsigned long get_max_files ( void ) 
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##posix_acl
s##mnt_namespace
alloc_file extern s#file * alloc_file ( s#path * , t#fmode_t , const s#file_operations * ) 
drop_file_write_access extern void drop_file_write_access ( s#file * ) 
fput extern void fput ( s#file * ) 
fget extern s#file * fget ( unsigned int ) 
fget_raw extern s#file * fget_raw ( unsigned int ) 

/* fs/filesystems.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
register_filesystem extern int register_filesystem ( s#file_system_type * ) 
unregister_filesystem extern int unregister_filesystem ( s#file_system_type * ) 
get_fs_type extern s#file_system_type * get_fs_type ( const char * ) 

/* fs/fs-writeback.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
__mark_inode_dirty extern void __mark_inode_dirty ( s#inode * , int ) 
writeback_inodes_sb_nr void writeback_inodes_sb_nr ( s#super_block * , unsigned long ) 
writeback_inodes_sb void writeback_inodes_sb ( s#super_block * ) 
try_to_writeback_inodes_sb_nr int try_to_writeback_inodes_sb_nr ( s#super_block * , unsigned long ) 
writeback_inodes_sb_if_idle int writeback_inodes_sb_if_idle ( s#super_block * ) 
writeback_inodes_sb_nr_if_idle int writeback_inodes_sb_nr_if_idle ( s#super_block * , unsigned long ) 
sync_inodes_sb void sync_inodes_sb ( s#super_block * ) 
write_inode_now extern int write_inode_now ( s#inode * , int ) 
sync_inode int sync_inode ( s#inode * , s#writeback_control * ) 
sync_inode_metadata int sync_inode_metadata ( s#inode * , int ) 

/* fs/fs_struct.o */
unshare_fs_struct extern int unshare_fs_struct ( void ) 
current_umask extern int current_umask ( void ) 

/* fs/fscache/cache.o */
fscache_cache_cleared_wq extern t#wait_queue_head_t fscache_cache_cleared_wq 
s#fscache_transition struct fscache_transition { unsigned long events ; const s#fscache_state * transit_to ; } 
s#fscache_state struct fscache_state { char name [ 24 ] ; char short_name [ 8 ] ; const s#fscache_state * ( * work ) ( s#fscache_object * , int ) ; const s#fscache_transition transitions [ ] ; } 
s#fscache_cache_tag struct fscache_cache_tag { s#list_head link ; s#fscache_cache * cache ; unsigned long flags ; t#atomic_t usage ; char name [ 0 ] ; } 
e#fscache_checkaux enum fscache_checkaux { FSCACHE_CHECKAUX_OKAY , FSCACHE_CHECKAUX_NEEDS_UPDATE , FSCACHE_CHECKAUX_OBSOLETE , } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s#fscache_cookie_def struct fscache_cookie_def { char name [ 16 ] ; t#uint8_t type ; s#fscache_cache_tag * ( * select_cache ) ( const void * , const void * ) ; t#uint16_t ( * get_key ) ( const void * , void * , t#uint16_t ) ; void ( * get_attr ) ( const void * , t#uint64_t * ) ; t#uint16_t ( * get_aux ) ( const void * , void * , t#uint16_t ) ; e#fscache_checkaux ( * check_aux ) ( void * , const void * , t#uint16_t ) ; void ( * get_context ) ( void * , void * ) ; void ( * put_context ) ( void * , void * ) ; void ( * mark_page_cached ) ( void * , s#address_space * , s#page * ) ; void ( * now_uncached ) ( void * ) ; } 
s#fscache_cookie struct fscache_cookie { t#atomic_t usage ; t#atomic_t n_children ; t#atomic_t n_active ; t#spinlock_t lock ; t#spinlock_t stores_lock ; s#hlist_head backing_objects ; const s#fscache_cookie_def * def ; s#fscache_cookie * parent ; void * netfs_data ; s#radix_tree_root stores ; unsigned long flags ; } 
s#fscache_object struct fscache_object { const s#fscache_state * state ; const s#fscache_transition * oob_table ; int debug_id ; int n_children ; int n_ops ; int n_obj_ops ; int n_in_progress ; int n_exclusive ; t#atomic_t n_reads ; t#spinlock_t lock ; unsigned long lookup_jif ; unsigned long oob_event_mask ; unsigned long event_mask ; unsigned long events ; unsigned long flags ; s#list_head cache_link ; s#hlist_node cookie_link ; s#fscache_cache * cache ; s#fscache_cookie * cookie ; s#fscache_object * parent ; s#work_struct work ; s#list_head dependents ; s#list_head dep_link ; s#list_head pending_ops ; s#rb_node objlist_link ; unsigned long store_limit ; t#loff_t store_limit_l ; } 
e#fscache_operation_state enum fscache_operation_state { FSCACHE_OP_ST_BLANK , FSCACHE_OP_ST_INITIALISED , FSCACHE_OP_ST_PENDING , FSCACHE_OP_ST_IN_PROGRESS , FSCACHE_OP_ST_COMPLETE , FSCACHE_OP_ST_CANCELLED , FSCACHE_OP_ST_DEAD } 
t#fscache_operation_processor_t typedef void ( * fscache_operation_processor_t ) ( s#fscache_operation * ) 
t#fscache_operation_release_t typedef void ( * fscache_operation_release_t ) ( s#fscache_operation * ) 
s#fscache_operation struct fscache_operation { s#work_struct work ; s#list_head pend_link ; s#fscache_object * object ; unsigned long flags ; e#fscache_operation_state state ; t#atomic_t usage ; unsigned debug_id ; t#fscache_operation_processor_t processor ; t#fscache_operation_release_t release ; } 
t#fscache_rw_complete_t typedef void ( * fscache_rw_complete_t ) ( s#page * , void * , int ) 
s#fscache_retrieval struct fscache_retrieval { s#fscache_operation op ; s#address_space * mapping ; t#fscache_rw_complete_t end_io_func ; void * context ; s#list_head to_do ; unsigned long start_time ; t#atomic_t n_pages ; } 
t#fscache_page_retrieval_func_t typedef int ( * fscache_page_retrieval_func_t ) ( s#fscache_retrieval * , s#page * , t#gfp_t ) 
t#fscache_pages_retrieval_func_t typedef int ( * fscache_pages_retrieval_func_t ) ( s#fscache_retrieval * , s#list_head * , unsigned * , t#gfp_t ) 
s#fscache_storage struct fscache_storage { s#fscache_operation op ; unsigned long store_limit ; } 
s#fscache_cache_ops struct fscache_cache_ops { const char * name ; s#fscache_object * ( * alloc_object ) ( s#fscache_cache * , s#fscache_cookie * ) ; int ( * lookup_object ) ( s#fscache_object * ) ; void ( * lookup_complete ) ( s#fscache_object * ) ; s#fscache_object * ( * grab_object ) ( s#fscache_object * ) ; int ( * pin_object ) ( s#fscache_object * ) ; void ( * unpin_object ) ( s#fscache_object * ) ; void ( * update_object ) ( s#fscache_object * ) ; void ( * invalidate_object ) ( s#fscache_operation * ) ; void ( * drop_object ) ( s#fscache_object * ) ; void ( * put_object ) ( s#fscache_object * ) ; void ( * sync_cache ) ( s#fscache_cache * ) ; int ( * attr_changed ) ( s#fscache_object * ) ; int ( * reserve_space ) ( s#fscache_object * , t#loff_t ) ; t#fscache_page_retrieval_func_t read_or_alloc_page ; t#fscache_pages_retrieval_func_t read_or_alloc_pages ; t#fscache_page_retrieval_func_t allocate_page ; t#fscache_pages_retrieval_func_t allocate_pages ; int ( * write_page ) ( s#fscache_storage * , s#page * ) ; void ( * uncache_page ) ( s#fscache_object * , s#page * ) ; void ( * dissociate_pages ) ( s#fscache_cache * ) ; } 
s#fscache_cache struct fscache_cache { const s#fscache_cache_ops * ops ; s#fscache_cache_tag * tag ; s#kobject * kobj ; s#list_head link ; t#size_t max_index_size ; char identifier [ 36 ] ; s#work_struct op_gc ; s#list_head object_list ; s#list_head op_gc_list ; t#spinlock_t object_list_lock ; t#spinlock_t op_gc_list_lock ; t#atomic_t object_count ; s#fscache_object * fsdef ; unsigned long flags ; } 
fscache_init_cache extern void fscache_init_cache ( s#fscache_cache * , const s#fscache_cache_ops * , const char * , ... ) 
fscache_add_cache extern int fscache_add_cache ( s#fscache_cache * , s#fscache_object * , const char * ) 
fscache_io_error extern void fscache_io_error ( s#fscache_cache * ) 
fscache_withdraw_cache extern void fscache_withdraw_cache ( s#fscache_cache * ) 

/* fs/fscache/cookie.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
__fscache_acquire_cookie extern s#fscache_cookie * __fscache_acquire_cookie ( s#fscache_cookie * , const s#fscache_cookie_def * , void * ) 
__fscache_invalidate extern void __fscache_invalidate ( s#fscache_cookie * ) 
__fscache_wait_on_invalidate extern void __fscache_wait_on_invalidate ( s#fscache_cookie * ) 
__fscache_update_cookie extern void __fscache_update_cookie ( s#fscache_cookie * ) 
__fscache_relinquish_cookie extern void __fscache_relinquish_cookie ( s#fscache_cookie * , int ) 

/* fs/fscache/fsdef.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##kmem_cache
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
fscache_fsdef_index extern s#fscache_cookie fscache_fsdef_index 

/* fs/fscache/netfs.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s#fscache_netfs struct fscache_netfs { t#uint32_t version ; const char * name ; s#fscache_cookie * primary_index ; s#list_head link ; } 
__fscache_register_netfs extern int __fscache_register_netfs ( s#fscache_netfs * ) 
__fscache_unregister_netfs extern void __fscache_unregister_netfs ( s#fscache_netfs * ) 

/* fs/fscache/object.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
fscache_object_init extern void fscache_object_init ( s#fscache_object * , s#fscache_cookie * , s#fscache_cache * ) 
fscache_object_lookup_negative extern void fscache_object_lookup_negative ( s#fscache_object * ) 
fscache_obtained_object extern void fscache_obtained_object ( s#fscache_object * ) 
fscache_object_destroy extern void fscache_object_destroy ( s#fscache_object * ) 
fscache_object_sleep_till_congested extern t#bool fscache_object_sleep_till_congested ( signed long * ) 
fscache_check_aux extern e#fscache_checkaux fscache_check_aux ( s#fscache_object * , const void * , t#uint16_t ) 

/* fs/fscache/operation.o */
fscache_op_debug_id extern t#atomic_t fscache_op_debug_id 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
fscache_enqueue_operation extern void fscache_enqueue_operation ( s#fscache_operation * ) 
fscache_op_complete extern void fscache_op_complete ( s#fscache_operation * , t#bool ) 
fscache_put_operation extern void fscache_put_operation ( s#fscache_operation * ) 

/* fs/fscache/page.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
__fscache_check_page_write extern t#bool __fscache_check_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_wait_on_page_write extern void __fscache_wait_on_page_write ( s#fscache_cookie * , s#page * ) 
__fscache_maybe_release_page extern t#bool __fscache_maybe_release_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_attr_changed extern int __fscache_attr_changed ( s#fscache_cookie * ) 
__fscache_read_or_alloc_page extern int __fscache_read_or_alloc_page ( s#fscache_cookie * , s#page * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_read_or_alloc_pages extern int __fscache_read_or_alloc_pages ( s#fscache_cookie * , s#address_space * , s#list_head * , unsigned * , t#fscache_rw_complete_t , void * , t#gfp_t ) 
__fscache_alloc_page extern int __fscache_alloc_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_write_page extern int __fscache_write_page ( s#fscache_cookie * , s#page * , t#gfp_t ) 
__fscache_uncache_page extern void __fscache_uncache_page ( s#fscache_cookie * , s#page * ) 
fscache_mark_page_cached extern void fscache_mark_page_cached ( s#fscache_retrieval * , s#page * ) 
s#pagevec struct pagevec { unsigned long nr ; unsigned long cold ; s#page * pages [ 14 ] ; } 
fscache_mark_pages_cached extern void fscache_mark_pages_cached ( s#fscache_retrieval * , s#pagevec * ) 
__fscache_uncache_all_inode_pages extern void __fscache_uncache_all_inode_pages ( s#fscache_cookie * , s#inode * ) 

/* fs/fuse/dev.o */
e#fuse_req_state enum fuse_req_state { FUSE_REQ_INIT = 0 , FUSE_REQ_PENDING , FUSE_REQ_READING , FUSE_REQ_SENT , FUSE_REQ_WRITING , FUSE_REQ_FINISHED } 
s#fuse_in_header struct fuse_in_header { t#__u32 len ; t#__u32 opcode ; t#__u64 unique ; t#__u64 nodeid ; t#__u32 uid ; t#__u32 gid ; t#__u32 pid ; t#__u32 padding ; } 
s#fuse_in_arg struct fuse_in_arg { unsigned size ; const void * value ; } 
s#fuse_in struct fuse_in { s#fuse_in_header h ; unsigned argpages : 1 ; unsigned numargs ; s#fuse_in_arg args [ 3 ] ; } 
s#fuse_out_header struct fuse_out_header { t#__u32 len ; t#__s32 error ; t#__u64 unique ; } 
s#fuse_arg struct fuse_arg { unsigned size ; void * value ; } 
s#fuse_out struct fuse_out { s#fuse_out_header h ; unsigned argvar : 1 ; unsigned argpages : 1 ; unsigned page_zeroing : 1 ; unsigned page_replace : 1 ; unsigned numargs ; s#fuse_arg args [ 3 ] ; } 
s#fuse_release_in struct fuse_release_in { t#__u64 fh ; t#__u32 flags ; t#__u32 release_flags ; t#__u64 lock_owner ; } 
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##device
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
s#fuse_init_in struct fuse_init_in { t#__u32 major ; t#__u32 minor ; t#__u32 max_readahead ; t#__u32 flags ; } 
s#fuse_init_out struct fuse_init_out { t#__u32 major ; t#__u32 minor ; t#__u32 max_readahead ; t#__u32 flags ; t#__u16 max_background ; t#__u16 congestion_threshold ; t#__u32 max_write ; t#__u32 time_gran ; t#__u32 unused [ 9 ] ; } 
s#cuse_init_in struct cuse_init_in { t#__u32 major ; t#__u32 minor ; t#__u32 unused ; t#__u32 flags ; } 
s#fuse_read_in struct fuse_read_in { t#__u64 fh ; t#__u64 offset ; t#__u32 size ; t#__u32 read_flags ; t#__u64 lock_owner ; t#__u32 flags ; t#__u32 padding ; } 
s#fuse_write_in struct fuse_write_in { t#__u64 fh ; t#__u64 offset ; t#__u32 size ; t#__u32 write_flags ; t#__u64 lock_owner ; t#__u32 flags ; t#__u32 padding ; } 
s#fuse_write_out struct fuse_write_out { t#__u32 size ; t#__u32 padding ; } 
s#fuse_notify_retrieve_in struct fuse_notify_retrieve_in { t#__u64 dummy1 ; t#__u64 offset ; t#__u32 size ; t#__u32 dummy2 ; t#__u64 dummy3 ; t#__u64 dummy4 ; } 
s#fuse_file_lock struct fuse_file_lock { t#__u64 start ; t#__u64 end ; t#__u32 type ; t#__u32 pid ; } 
s#fuse_lk_in struct fuse_lk_in { t#__u64 fh ; t#__u64 owner ; s#fuse_file_lock lk ; t#__u32 lk_flags ; t#__u32 padding ; } 
s#fuse_page_desc struct fuse_page_desc { unsigned int length ; unsigned int offset ; } 
s#fuse_forget_one struct fuse_forget_one { t#__u64 nodeid ; t#__u64 nlookup ; } 
s#fuse_forget_link struct fuse_forget_link { s#fuse_forget_one forget_one ; s#fuse_forget_link * next ; } 
s#fuse_conn struct fuse_conn { t#spinlock_t lock ; s#mutex inst_mutex ; t#atomic_t count ; t#uid_t user_id ; t#gid_t group_id ; unsigned flags ; unsigned max_read ; unsigned max_write ; t#wait_queue_head_t waitq ; s#list_head pending ; s#list_head processing ; s#list_head io ; t#u64 khctr ; s#rb_root polled_files ; unsigned max_background ; unsigned congestion_threshold ; unsigned num_background ; unsigned active_background ; s#list_head bg_queue ; s#list_head interrupts ; s#fuse_forget_link forget_list_head ; s#fuse_forget_link * forget_list_tail ; int forget_batch ; int initialized ; int blocked ; t#wait_queue_head_t blocked_waitq ; t#wait_queue_head_t reserved_req_waitq ; t#u64 reqctr ; unsigned connected ; unsigned conn_error : 1 ; unsigned conn_init : 1 ; unsigned async_read : 1 ; unsigned atomic_o_trunc : 1 ; unsigned export_support : 1 ; unsigned bdi_initialized : 1 ; unsigned writeback_cache : 1 ; unsigned no_fsync : 1 ; unsigned no_fsyncdir : 1 ; unsigned no_flush : 1 ; unsigned no_setxattr : 1 ; unsigned no_getxattr : 1 ; unsigned no_listxattr : 1 ; unsigned no_removexattr : 1 ; unsigned no_lock : 1 ; unsigned no_access : 1 ; unsigned no_create : 1 ; unsigned no_interrupt : 1 ; unsigned no_bmap : 1 ; unsigned no_poll : 1 ; unsigned big_writes : 1 ; unsigned dont_mask : 1 ; unsigned async_dio : 1 ; t#atomic_t num_waiting ; unsigned minor ; s#backing_dev_info bdi ; s#list_head entry ; t#dev_t dev ; s#dentry * ctl_dentry [ 5 ] ; int ctl_ndents ; s#fasync_struct * fasync ; t#u32 scramble_key [ 4 ] ; s#fuse_req * destroy_req ; t#u64 attr_version ; void ( * release ) ( s#fuse_conn * ) ; s#super_block * sb ; s#rw_semaphore killsb ; } 
s#fuse_file struct fuse_file { s#fuse_conn * fc ; s#fuse_req * reserved_req ; t#u64 kh ; t#u64 fh ; t#u64 nodeid ; t#atomic_t count ; t#u32 open_flags ; s#list_head write_entry ; s#rb_node polled_node ; t#wait_queue_head_t poll_wait ; } 
s#fuse_io_priv struct fuse_io_priv { int async ; t#spinlock_t lock ; unsigned reqs ; t#ssize_t bytes ; t#size_t size ; t#__u64 offset ; t#bool write ; int err ; s#kiocb * iocb ; s#file * file ; } 
s#fuse_req struct fuse_req { s#list_head list ; s#list_head intr_entry ; t#atomic_t count ; t#u64 intr_unique ; unsigned isreply : 1 ; unsigned force : 1 ; unsigned aborted : 1 ; unsigned background : 1 ; unsigned interrupted : 1 ; unsigned locked : 1 ; unsigned waiting : 1 ; e#fuse_req_state state ; s#fuse_in in ; s#fuse_out out ; t#wait_queue_head_t waitq ; union { struct { union { s#fuse_release_in in ; s#work_struct work ; } ; s#path path ; } release ; s#fuse_init_in init_in ; s#fuse_init_out init_out ; s#cuse_init_in cuse_init_in ; struct { s#fuse_read_in in ; t#u64 attr_ver ; } read ; struct { s#fuse_write_in in ; s#fuse_write_out out ; s#fuse_req * next ; } write ; s#fuse_notify_retrieve_in retrieve_in ; s#fuse_lk_in lk_in ; } misc ; s#page * * pages ; s#fuse_page_desc * page_descs ; unsigned max_pages ; s#page * inline_pages [ 1 ] ; s#fuse_page_desc inline_page_descs [ 1 ] ; unsigned num_pages ; s#fuse_file * ff ; s#inode * inode ; s#fuse_io_priv * io ; s#list_head writepages_entry ; void ( * end ) ( s#fuse_conn * , s#fuse_req * ) ; s#file * stolen_file ; } 
fuse_request_alloc s#fuse_req * fuse_request_alloc ( unsigned ) 
fuse_get_req s#fuse_req * fuse_get_req ( s#fuse_conn * , unsigned ) 
fuse_get_req_for_background s#fuse_req * fuse_get_req_for_background ( s#fuse_conn * , unsigned ) 
fuse_put_request void fuse_put_request ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send void fuse_request_send ( s#fuse_conn * , s#fuse_req * ) 
fuse_request_send_background void fuse_request_send_background ( s#fuse_conn * , s#fuse_req * ) 
fuse_abort_conn void fuse_abort_conn ( s#fuse_conn * ) 
fuse_dev_release int fuse_dev_release ( s#inode * , s#file * ) 
fuse_dev_operations extern const s#file_operations fuse_dev_operations 

/* fs/fuse/file.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##tvec_base
s##device
s##mtd_info
s##mnt_namespace
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fuse_do_open int fuse_do_open ( s#fuse_conn * , t#u64 , s#file * , t#bool ) 
fuse_sync_release void fuse_sync_release ( s#fuse_file * , int ) 
fuse_direct_io t#ssize_t fuse_direct_io ( s#fuse_io_priv * , const s#iovec * , unsigned long , t#size_t , t#loff_t * , int ) 
fuse_do_ioctl long fuse_do_ioctl ( s#file * , unsigned int , unsigned long , unsigned int ) 
fuse_file_poll unsigned fuse_file_poll ( s#file * , t#poll_table * ) 

/* fs/fuse/inode.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##xattr_handler
s##hd_struct
s##gendisk
s##tvec_base
s##device
s##mtd_info
s##mnt_namespace
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
fuse_conn_kill void fuse_conn_kill ( s#fuse_conn * ) 
fuse_conn_init void fuse_conn_init ( s#fuse_conn * ) 
fuse_conn_put void fuse_conn_put ( s#fuse_conn * ) 
fuse_conn_get s#fuse_conn * fuse_conn_get ( s#fuse_conn * ) 

/* fs/inode.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s#posix_acl_entry struct posix_acl_entry { short e_tag ; unsigned short e_perm ; unsigned int e_id ; } 
s#posix_acl struct posix_acl { t#atomic_t a_refcount ; unsigned int a_count ; s#posix_acl_entry a_entries [ 0 ] ; } 
s##radix_tree_node
s##array_cache
s##kmem_list3
e##migrate_mode
empty_aops extern const s#address_space_operations empty_aops 
inode_init_always extern int inode_init_always ( s#super_block * , s#inode * ) 
free_inode_nonrcu extern void free_inode_nonrcu ( s#inode * ) 
__destroy_inode extern void __destroy_inode ( s#inode * ) 
address_space_init_once extern void address_space_init_once ( s#address_space * ) 
inode_init_once extern void inode_init_once ( s#inode * ) 
ihold extern void ihold ( s#inode * ) 
inode_sb_list_add extern void inode_sb_list_add ( s#inode * ) 
__insert_inode_hash extern void __insert_inode_hash ( s#inode * , unsigned long ) 
remove_inode_hash extern void remove_inode_hash ( s#inode * ) 
end_writeback extern void end_writeback ( s#inode * ) 
get_next_ino extern unsigned int get_next_ino ( void ) 
new_inode extern s#inode * new_inode ( s#super_block * ) 
unlock_new_inode extern void unlock_new_inode ( s#inode * ) 
iget5_locked extern s#inode * iget5_locked ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , int ( * ) ( s#inode * , void * ) , void * ) 
iget_locked extern s#inode * iget_locked ( s#super_block * , unsigned long ) 
iunique extern t#ino_t iunique ( s#super_block * , t#ino_t ) 
igrab extern s#inode * igrab ( s#inode * ) 
ilookup5_nowait extern s#inode * ilookup5_nowait ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup5 extern s#inode * ilookup5 ( s#super_block * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
ilookup extern s#inode * ilookup ( s#super_block * , unsigned long ) 
insert_inode_locked extern int insert_inode_locked ( s#inode * ) 
insert_inode_locked4 extern int insert_inode_locked4 ( s#inode * , unsigned long , int ( * ) ( s#inode * , void * ) , void * ) 
generic_delete_inode extern int generic_delete_inode ( s#inode * ) 
generic_drop_inode extern int generic_drop_inode ( s#inode * ) 
iput extern void iput ( s#inode * ) 
bmap extern t#sector_t bmap ( s#inode * , t#sector_t ) 
touch_atime extern void touch_atime ( s#vfsmount * , s#dentry * ) 
file_update_time extern int file_update_time ( s#file * ) 
inode_needs_sync extern int inode_needs_sync ( s#inode * ) 
inode_wait int inode_wait ( void * ) 
init_special_inode extern void init_special_inode ( s#inode * , t#umode_t , t#dev_t ) 
inode_init_owner extern void inode_init_owner ( s#inode * , const s#inode * , t#mode_t ) 
inode_owner_or_capable extern t#bool inode_owner_or_capable ( const s#inode * ) 

/* fs/ioctl.o */
fiemap_fill_next_extent int fiemap_fill_next_extent ( s#fiemap_extent_info * , t#u64 , t#u64 , t#u64 , t#u32 ) 
fiemap_check_flags int fiemap_check_flags ( s#fiemap_extent_info * , t#u32 ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
__generic_block_fiemap extern int __generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#loff_t , t#loff_t , t#get_block_t * ) 
generic_block_fiemap extern int generic_block_fiemap ( s#inode * , s#fiemap_extent_info * , t#u64 , t#u64 , t#get_block_t * ) 

/* fs/ioprio.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
set_task_ioprio extern int set_task_ioprio ( s#task_struct * , int ) 

/* fs/jbd/journal.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s#journal_header_s struct journal_header_s { t#__be32 h_magic ; t#__be32 h_blocktype ; t#__be32 h_sequence ; } 
t#journal_header_t typedef s#journal_header_s journal_header_t 
s#journal_superblock_s struct journal_superblock_s { t#journal_header_t s_header ; t#__be32 s_blocksize ; t#__be32 s_maxlen ; t#__be32 s_first ; t#__be32 s_sequence ; t#__be32 s_start ; t#__be32 s_errno ; t#__be32 s_feature_compat ; t#__be32 s_feature_incompat ; t#__be32 s_feature_ro_compat ; t#__u8 s_uuid [ 16 ] ; t#__be32 s_nr_users ; t#__be32 s_dynsuper ; t#__be32 s_max_transaction ; t#__be32 s_max_trans_data ; t#__u32 s_padding [ 44 ] ; t#__u8 s_users [ 16 * 48 ] ; } 
t#journal_superblock_t typedef s#journal_superblock_s journal_superblock_t 
t#tid_t typedef unsigned int tid_t 
s##jbd_revoke_table_s
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#spinlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_logspace ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_checkpoint ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; s#mutex j_checkpoint_mutex ; unsigned int j_head ; unsigned int j_tail ; unsigned int j_free ; unsigned int j_first ; unsigned int j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned int j_blk_offset ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#tid_t j_commit_waited ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd_revoke_table_s * j_revoke ; s#jbd_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; void * j_private ; } 
t#journal_t typedef s#journal_s journal_t 
s##jbd2_buffer_trigger_type
s#journal_head struct journal_head { s#buffer_head * b_bh ; int b_jcount ; unsigned b_jlist ; unsigned b_modified ; unsigned b_cow_tid ; char * b_frozen_data ; char * b_committed_data ; t#transaction_t * b_transaction ; t#transaction_t * b_next_transaction ; s#journal_head * b_tnext , * b_tprev ; t#transaction_t * b_cp_transaction ; s#journal_head * b_cpnext , * b_cpprev ; s#jbd2_buffer_trigger_type * b_triggers ; s#jbd2_buffer_trigger_type * b_frozen_triggers ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_FLUSH , T_COMMIT , T_COMMIT_RECORD , T_FINISHED } t_state ; unsigned int t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_locked_list ; s#journal_head * t_buffers ; s#journal_head * t_sync_datalist ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_iobuf_list ; s#journal_head * t_shadow_list ; s#journal_head * t_log_list ; t#spinlock_t t_handle_lock ; int t_updates ; int t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; int t_handle_count ; } 
t#transaction_t typedef s#transaction_s transaction_t 
s#handle_s struct handle_s { t#transaction_t * h_transaction ; int h_buffer_credits ; int h_ref ; int h_err ; unsigned int h_sync : 1 ; unsigned int h_jdata : 1 ; unsigned int h_aborted : 1 ; } 
t#handle_t typedef s#handle_s handle_t 
journal_start extern t#handle_t * journal_start ( t#journal_t * , int ) 
journal_restart extern int journal_restart ( t#handle_t * , int ) 
journal_extend extern int journal_extend ( t#handle_t * , int ) 
journal_stop extern int journal_stop ( t#handle_t * ) 
journal_lock_updates extern void journal_lock_updates ( t#journal_t * ) 
journal_unlock_updates extern void journal_unlock_updates ( t#journal_t * ) 
journal_get_write_access extern int journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
journal_get_create_access extern int journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
journal_get_undo_access extern int journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
journal_dirty_data extern int journal_dirty_data ( t#handle_t * , s#buffer_head * ) 
journal_dirty_metadata extern int journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
journal_release_buffer extern void journal_release_buffer ( t#handle_t * , s#buffer_head * ) 
journal_forget extern int journal_forget ( t#handle_t * , s#buffer_head * ) 
journal_flush extern int journal_flush ( t#journal_t * ) 
journal_revoke extern int journal_revoke ( t#handle_t * , unsigned int , s#buffer_head * ) 
journal_init_dev extern t#journal_t * journal_init_dev ( s#block_device * , s#block_device * , int , int , int ) 
journal_init_inode extern t#journal_t * journal_init_inode ( s#inode * ) 
journal_update_format extern int journal_update_format ( t#journal_t * ) 
journal_check_used_features extern int journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_check_available_features extern int journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_set_features extern int journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
journal_create extern int journal_create ( t#journal_t * ) 
journal_load extern int journal_load ( t#journal_t * ) 
journal_destroy extern int journal_destroy ( t#journal_t * ) 
journal_abort extern void journal_abort ( t#journal_t * , int ) 
journal_errno extern int journal_errno ( t#journal_t * ) 
journal_ack_err extern void journal_ack_err ( t#journal_t * ) 
journal_clear_err extern int journal_clear_err ( t#journal_t * ) 
log_wait_commit int log_wait_commit ( t#journal_t * , t#tid_t ) 
log_start_commit int log_start_commit ( t#journal_t * , t#tid_t ) 
journal_start_commit int journal_start_commit ( t#journal_t * , t#tid_t * ) 
journal_force_commit_nested int journal_force_commit_nested ( t#journal_t * ) 
journal_wipe extern int journal_wipe ( t#journal_t * , int ) 
journal_blocks_per_page extern int journal_blocks_per_page ( s#inode * ) 
journal_invalidatepage extern void journal_invalidatepage ( t#journal_t * , s#page * , unsigned long ) 
journal_try_to_free_buffers extern int journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
journal_force_commit extern int journal_force_commit ( t#journal_t * ) 
journal_trans_will_send_data_barrier int journal_trans_will_send_data_barrier ( t#journal_t * , t#tid_t ) 

/* fs/jbd2/journal.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##jbd2_revoke_table_s
s#transaction_run_stats_s struct transaction_run_stats_s { unsigned long rs_wait ; unsigned long rs_running ; unsigned long rs_locked ; unsigned long rs_flushing ; unsigned long rs_logging ; t#__u32 rs_handle_count ; t#__u32 rs_blocks ; t#__u32 rs_blocks_logged ; } 
s#transaction_stats_s struct transaction_stats_s { unsigned long ts_tid ; s#transaction_run_stats_s run ; } 
s#journal_s struct journal_s { unsigned long j_flags ; int j_errno ; s#buffer_head * j_sb_buffer ; t#journal_superblock_t * j_superblock ; int j_format_version ; t#rwlock_t j_state_lock ; int j_barrier_count ; s#mutex j_barrier ; t#transaction_t * j_running_transaction ; t#transaction_t * j_committing_transaction ; t#transaction_t * j_checkpoint_transactions ; t#wait_queue_head_t j_wait_transaction_locked ; t#wait_queue_head_t j_wait_logspace ; t#wait_queue_head_t j_wait_done_commit ; t#wait_queue_head_t j_wait_checkpoint ; t#wait_queue_head_t j_wait_commit ; t#wait_queue_head_t j_wait_updates ; s#mutex j_checkpoint_mutex ; s#buffer_head * j_chkpt_bhs [ 64 ] ; unsigned long j_head ; unsigned long j_tail ; unsigned long j_free ; unsigned long j_first ; unsigned long j_last ; s#block_device * j_dev ; int j_blocksize ; unsigned long long j_blk_offset ; char j_devname [ 32 + 24 ] ; s#block_device * j_fs_dev ; unsigned int j_maxlen ; t#spinlock_t j_list_lock ; s#inode * j_inode ; t#tid_t j_tail_sequence ; t#tid_t j_transaction_sequence ; t#tid_t j_commit_sequence ; t#tid_t j_commit_request ; t#__u8 j_uuid [ 16 ] ; s#task_struct * j_task ; int j_max_transaction_buffers ; unsigned long j_commit_interval ; s#timer_list j_commit_timer ; t#spinlock_t j_revoke_lock ; s#jbd2_revoke_table_s * j_revoke ; s#jbd2_revoke_table_s * j_revoke_table [ 2 ] ; s#buffer_head * * j_wbuf ; int j_wbufsize ; t#pid_t j_last_sync_writer ; t#u64 j_average_commit_time ; t#u32 j_min_batch_time ; t#u32 j_max_batch_time ; void ( * j_commit_callback ) ( t#journal_t * , t#transaction_t * ) ; t#spinlock_t j_history_lock ; s#proc_dir_entry * j_proc_entry ; s#transaction_stats_s j_stats ; unsigned int j_failed_commit ; void * j_private ; } 
s#jbd2_buffer_trigger_type struct jbd2_buffer_trigger_type { void ( * t_frozen ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * , void * , t#size_t ) ; void ( * t_abort ) ( s#jbd2_buffer_trigger_type * , s#buffer_head * ) ; } 
s#transaction_chp_stats_s struct transaction_chp_stats_s { unsigned long cs_chp_time ; t#__u32 cs_forced_to_close ; t#__u32 cs_written ; t#__u32 cs_dropped ; } 
s#transaction_s struct transaction_s { t#journal_t * t_journal ; t#tid_t t_tid ; enum { T_RUNNING , T_LOCKED , T_FLUSH , T_COMMIT , T_COMMIT_DFLUSH , T_COMMIT_JFLUSH , T_FINISHED } t_state ; unsigned long t_log_start ; int t_nr_buffers ; s#journal_head * t_reserved_list ; s#journal_head * t_buffers ; s#journal_head * t_forget ; s#journal_head * t_checkpoint_list ; s#journal_head * t_checkpoint_io_list ; s#journal_head * t_iobuf_list ; s#journal_head * t_shadow_list ; s#journal_head * t_log_list ; s#list_head t_inode_list ; t#spinlock_t t_handle_lock ; unsigned long t_max_wait ; unsigned long t_start ; s#transaction_chp_stats_s t_chp_stats ; t#atomic_t t_updates ; t#atomic_t t_outstanding_credits ; t#transaction_t * t_cpnext , * t_cpprev ; unsigned long t_expires ; t#ktime_t t_start_time ; t#atomic_t t_handle_count ; unsigned int t_synchronous_commit : 1 ; int t_need_data_flush ; s#list_head t_private_list ; } 
s#jbd2_journal_handle struct jbd2_journal_handle { t#transaction_t * h_transaction ; int h_buffer_credits ; int h_ref ; int h_err ; unsigned int h_sync : 1 ; unsigned int h_jdata : 1 ; unsigned int h_aborted : 1 ; unsigned int h_cowing : 1 ; unsigned int h_base_credits : 14 ; unsigned int h_user_credits : 14 ; unsigned int h_cow_moved ; unsigned int h_cow_copied ; unsigned int h_cow_ok_jh ; unsigned int h_cow_ok_bitmap ; unsigned int h_cow_ok_mapped ; unsigned int h_cow_bitmaps ; unsigned int h_cow_excluded ; } 
t#handle_t typedef s#jbd2_journal_handle handle_t 
jbd2_journal_extend extern int jbd2_journal_extend ( t#handle_t * , int ) 
jbd2_journal_stop extern int jbd2_journal_stop ( t#handle_t * ) 
jbd2_journal_lock_updates extern void jbd2_journal_lock_updates ( t#journal_t * ) 
jbd2_journal_unlock_updates extern void jbd2_journal_unlock_updates ( t#journal_t * ) 
jbd2_journal_get_write_access extern int jbd2_journal_get_write_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_create_access extern int jbd2_journal_get_create_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_get_undo_access extern int jbd2_journal_get_undo_access ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_set_triggers void jbd2_journal_set_triggers ( s#buffer_head * , s#jbd2_buffer_trigger_type * ) 
jbd2_journal_dirty_metadata extern int jbd2_journal_dirty_metadata ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_release_buffer extern void jbd2_journal_release_buffer ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_forget extern int jbd2_journal_forget ( t#handle_t * , s#buffer_head * ) 
jbd2_journal_flush extern int jbd2_journal_flush ( t#journal_t * ) 
jbd2_journal_revoke extern int jbd2_journal_revoke ( t#handle_t * , unsigned long long , s#buffer_head * ) 
jbd2_journal_init_dev extern t#journal_t * jbd2_journal_init_dev ( s#block_device * , s#block_device * , unsigned long long , int , int ) 
jbd2_journal_init_inode extern t#journal_t * jbd2_journal_init_inode ( s#inode * ) 
jbd2_journal_update_format extern int jbd2_journal_update_format ( t#journal_t * ) 
jbd2_journal_check_used_features extern int jbd2_journal_check_used_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_check_available_features extern int jbd2_journal_check_available_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_set_features extern int jbd2_journal_set_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_load extern int jbd2_journal_load ( t#journal_t * ) 
jbd2_journal_destroy extern int jbd2_journal_destroy ( t#journal_t * ) 
jbd2_journal_abort extern void jbd2_journal_abort ( t#journal_t * , int ) 
jbd2_journal_errno extern int jbd2_journal_errno ( t#journal_t * ) 
jbd2_journal_ack_err extern void jbd2_journal_ack_err ( t#journal_t * ) 
jbd2_journal_clear_err extern int jbd2_journal_clear_err ( t#journal_t * ) 
jbd2_log_wait_commit int jbd2_log_wait_commit ( t#journal_t * , t#tid_t ) 
jbd2_log_start_commit int jbd2_log_start_commit ( t#journal_t * , t#tid_t ) 
jbd2_journal_start_commit int jbd2_journal_start_commit ( t#journal_t * , t#tid_t * ) 
jbd2_journal_force_commit_nested int jbd2_journal_force_commit_nested ( t#journal_t * ) 
jbd2_journal_wipe extern int jbd2_journal_wipe ( t#journal_t * , int ) 
jbd2_journal_blocks_per_page extern int jbd2_journal_blocks_per_page ( s#inode * ) 
jbd2_journal_invalidatepage extern void jbd2_journal_invalidatepage ( t#journal_t * , s#page * , unsigned long ) 
jbd2_journal_try_to_free_buffers extern int jbd2_journal_try_to_free_buffers ( t#journal_t * , s#page * , t#gfp_t ) 
jbd2_journal_force_commit extern int jbd2_journal_force_commit ( t#journal_t * ) 
s#jbd2_inode struct jbd2_inode { t#transaction_t * i_transaction ; t#transaction_t * i_next_transaction ; s#list_head i_list ; s#inode * i_vfs_inode ; unsigned long i_flags ; } 
jbd2_journal_file_inode extern int jbd2_journal_file_inode ( t#handle_t * , s#jbd2_inode * ) 
jbd2_journal_init_jbd_inode extern void jbd2_journal_init_jbd_inode ( s#jbd2_inode * , s#inode * ) 
jbd2_journal_release_jbd_inode extern void jbd2_journal_release_jbd_inode ( t#journal_t * , s#jbd2_inode * ) 
jbd2_journal_begin_ordered_truncate extern int jbd2_journal_begin_ordered_truncate ( t#journal_t * , s#jbd2_inode * , t#loff_t ) 
jbd2_inode_cache extern s#kmem_cache * jbd2_inode_cache 
jbd2_trans_will_send_data_barrier int jbd2_trans_will_send_data_barrier ( t#journal_t * , t#tid_t ) 
jbd2_journal_clear_features extern void jbd2_journal_clear_features ( t#journal_t * , unsigned long , unsigned long , unsigned long ) 
jbd2_journal_enable_debug extern t#u8 jbd2_journal_enable_debug 
jbd2_dev_to_name extern const char * jbd2_dev_to_name ( t#dev_t ) 

/* fs/jbd2/transaction.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##jbd2_revoke_table_s
s##proc_dir_entry
jbd2__journal_start extern t#handle_t * jbd2__journal_start ( t#journal_t * , int , int ) 
jbd2_journal_start extern t#handle_t * jbd2_journal_start ( t#journal_t * , int ) 
jbd2__journal_restart extern int jbd2__journal_restart ( t#handle_t * , int , int ) 
jbd2_journal_restart extern int jbd2_journal_restart ( t#handle_t * , int ) 

/* fs/libfs.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##seq_file
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
simple_setattr extern int simple_setattr ( s#dentry * , s#iattr * ) 
generic_fh_to_dentry extern s#dentry * generic_fh_to_dentry ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_fh_to_parent extern s#dentry * generic_fh_to_parent ( s#super_block * , s#fid * , int , int , s#inode * ( * ) ( s#super_block * , t#u64 , t#u32 ) ) 
generic_file_fsync extern int generic_file_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
generic_check_addressable extern int generic_check_addressable ( unsigned , t#u64 ) 
dcache_dir_close extern int dcache_dir_close ( s#inode * , s#file * ) 
dcache_dir_lseek extern t#loff_t dcache_dir_lseek ( s#file * , t#loff_t , int ) 
dcache_dir_open extern int dcache_dir_open ( s#inode * , s#file * ) 
dcache_readdir extern int dcache_readdir ( s#file * , void * , t#filldir_t ) 
generic_read_dir extern t#ssize_t generic_read_dir ( s#file * , char * , t#size_t , t#loff_t * ) 
mount_pseudo extern s#dentry * mount_pseudo ( s#file_system_type * , char * , const s#super_operations * , const s#dentry_operations * , unsigned long ) 
simple_write_begin extern int simple_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
simple_write_end extern int simple_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
simple_dir_inode_operations extern const s#inode_operations simple_dir_inode_operations 
simple_dir_operations extern const s#file_operations simple_dir_operations 
simple_empty extern int simple_empty ( s#dentry * ) 
s#tree_descr struct tree_descr { char * name ; const s#file_operations * ops ; int mode ; } 
simple_fill_super extern int simple_fill_super ( s#super_block * , unsigned long , s#tree_descr * ) 
simple_getattr extern int simple_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
simple_open extern int simple_open ( s#inode * , s#file * ) 
simple_link extern int simple_link ( s#dentry * , s#inode * , s#dentry * ) 
simple_lookup extern s#dentry * simple_lookup ( s#inode * , s#dentry * , s#nameidata * ) 
simple_pin_fs extern int simple_pin_fs ( s#file_system_type * , s#vfsmount * * , int * ) 
simple_readpage extern int simple_readpage ( s#file * , s#page * ) 
simple_release_fs extern void simple_release_fs ( s#vfsmount * * , int * ) 
simple_rename extern int simple_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
simple_rmdir extern int simple_rmdir ( s#inode * , s#dentry * ) 
simple_statfs extern int simple_statfs ( s#dentry * , s#kstatfs * ) 
noop_fsync extern int noop_fsync ( s#file * , t#loff_t , t#loff_t , int ) 
simple_unlink extern int simple_unlink ( s#inode * , s#dentry * ) 
simple_read_from_buffer extern t#ssize_t simple_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_write_to_buffer extern t#ssize_t simple_write_to_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
memory_read_from_buffer extern t#ssize_t memory_read_from_buffer ( void * , t#size_t , t#loff_t * , const void * , t#size_t ) 
simple_transaction_set void simple_transaction_set ( s#file * , t#size_t ) 
simple_transaction_get char * simple_transaction_get ( s#file * , const char * , t#size_t ) 
simple_transaction_read t#ssize_t simple_transaction_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_transaction_release int simple_transaction_release ( s#inode * , s#file * ) 
simple_attr_open int simple_attr_open ( s#inode * , s#file * , int ( * ) ( void * , t#u64 * ) , int ( * ) ( void * , t#u64 ) , const char * ) 
simple_attr_release int simple_attr_release ( s#inode * , s#file * ) 
simple_attr_read t#ssize_t simple_attr_read ( s#file * , char * , t#size_t , t#loff_t * ) 
simple_attr_write t#ssize_t simple_attr_write ( s#file * , const char * , t#size_t , t#loff_t * ) 

/* fs/lockd/clntlock.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s#nlm_lockowner struct nlm_lockowner { s#list_head list ; t#atomic_t count ; s#nlm_host * host ; t#fl_owner_t owner ; t#uint32_t pid ; } 
s##nfs4_lock_state
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##radix_tree_node
e##migrate_mode
s#xdr_buf struct xdr_buf { s#kvec head [ 1 ] , tail [ 1 ] ; s#page * * pages ; unsigned int page_base , page_len , flags ; unsigned int buflen , len ; } 
t#rpc_authflavor_t typedef t#u32 rpc_authflavor_t 
s#auth_cred struct auth_cred { t#uid_t uid ; t#gid_t gid ; s#group_info * group_info ; unsigned char machine_cred : 1 ; } 
s#rpc_authops struct rpc_authops { s#module * owner ; t#rpc_authflavor_t au_flavor ; char * au_name ; s#rpc_auth * ( * create ) ( s#rpc_clnt * , t#rpc_authflavor_t ) ; void ( * destroy ) ( s#rpc_auth * ) ; s#rpc_cred * ( * lookup_cred ) ( s#rpc_auth * , s#auth_cred * , int ) ; s#rpc_cred * ( * crcreate ) ( s#rpc_auth * , s#auth_cred * , int ) ; } 
s##rpc_cred_cache
s#rpc_auth struct rpc_auth { unsigned int au_cslack ; unsigned int au_rslack ; unsigned int au_verfsize ; unsigned int au_flags ; const s#rpc_authops * au_ops ; t#rpc_authflavor_t au_flavor ; t#atomic_t au_count ; s#rpc_cred_cache * au_credcache ; } 
s#xdr_stream struct xdr_stream { t#__be32 * p ; s#xdr_buf * buf ; t#__be32 * end ; s#kvec * iov ; s#kvec scratch ; s#page * * page_ptr ; } 
t#kxdreproc_t typedef void ( * kxdreproc_t ) ( void * , s#xdr_stream * , void * ) 
t#kxdrdproc_t typedef int ( * kxdrdproc_t ) ( void * , s#xdr_stream * , void * ) 
s#rpc_credops struct rpc_credops { const char * cr_name ; int ( * cr_init ) ( s#rpc_auth * , s#rpc_cred * ) ; void ( * crdestroy ) ( s#rpc_cred * ) ; int ( * crmatch ) ( s#auth_cred * , s#rpc_cred * , int ) ; s#rpc_cred * ( * crbind ) ( s#rpc_task * , s#rpc_cred * , int ) ; t#__be32 * ( * crmarshal ) ( s#rpc_task * , t#__be32 * ) ; int ( * crrefresh ) ( s#rpc_task * ) ; t#__be32 * ( * crvalidate ) ( s#rpc_task * , t#__be32 * ) ; int ( * crwrap_req ) ( s#rpc_task * , t#kxdreproc_t , void * , t#__be32 * , void * ) ; int ( * crunwrap_resp ) ( s#rpc_task * , t#kxdrdproc_t , void * , t#__be32 * , void * ) ; } 
s#rpc_cred struct rpc_cred { s#hlist_node cr_hash ; s#list_head cr_lru ; s#rcu_head cr_rcu ; s#rpc_auth * cr_auth ; const s#rpc_credops * cr_ops ; unsigned long cr_magic ; unsigned long cr_expire ; unsigned long cr_flags ; t#atomic_t cr_count ; t#uid_t cr_uid ; } 
s#rpc_rqst struct rpc_rqst { s#rpc_xprt * rq_xprt ; s#xdr_buf rq_snd_buf ; s#xdr_buf rq_rcv_buf ; s#rpc_task * rq_task ; s#rpc_cred * rq_cred ; t#__be32 rq_xid ; int rq_cong ; t#u32 rq_seqno ; int rq_enc_pages_num ; s#page * * rq_enc_pages ; void ( * rq_release_snd_buf ) ( s#rpc_rqst * ) ; s#list_head rq_list ; t#__u32 * rq_buffer ; t#size_t rq_callsize , rq_rcvsize ; t#size_t rq_xmit_bytes_sent ; t#size_t rq_reply_bytes_recvd ; s#xdr_buf rq_private_buf ; unsigned long rq_majortimeo ; unsigned long rq_timeout ; t#ktime_t rq_rtt ; unsigned int rq_retries ; unsigned int rq_connect_cookie ; t#u32 rq_bytes_sent ; t#ktime_t rq_xtime ; int rq_ntrans ; s#list_head rq_bc_list ; unsigned long rq_bc_pa_state ; s#list_head rq_bc_pa_list ; } 
s#rpc_procinfo struct rpc_procinfo { t#u32 p_proc ; t#kxdreproc_t p_encode ; t#kxdrdproc_t p_decode ; unsigned int p_arglen ; unsigned int p_replen ; unsigned int p_count ; unsigned int p_timer ; t#u32 p_statidx ; char * p_name ; } 
s#rpc_message struct rpc_message { s#rpc_procinfo * rpc_proc ; void * rpc_argp ; void * rpc_resp ; s#rpc_cred * rpc_cred ; } 
s#rpc_call_ops struct rpc_call_ops { void ( * rpc_call_prepare ) ( s#rpc_task * , void * ) ; void ( * rpc_call_done ) ( s#rpc_task * , void * ) ; void ( * rpc_release ) ( void * ) ; } 
s##workqueue_struct
s#rpc_timer struct rpc_timer { s#timer_list timer ; s#list_head list ; unsigned long expires ; } 
s#rpc_wait_queue struct rpc_wait_queue { t#spinlock_t lock ; s#list_head tasks [ ( 1 + ( 2 ) - ( - 1 ) ) ] ; t#pid_t owner ; unsigned char maxpriority ; unsigned char priority ; unsigned char count ; unsigned char nr ; unsigned short qlen ; s#rpc_timer timer_list ; const char * name ; } 
s#rpc_wait struct rpc_wait { s#list_head list ; s#list_head links ; s#list_head timer_list ; unsigned long expires ; } 
s#rpc_task struct rpc_task { t#atomic_t tk_count ; s#list_head tk_task ; s#rpc_clnt * tk_client ; s#rpc_rqst * tk_rqstp ; s#rpc_message tk_msg ; void ( * tk_callback ) ( s#rpc_task * ) ; void ( * tk_action ) ( s#rpc_task * ) ; const s#rpc_call_ops * tk_ops ; void * tk_calldata ; unsigned long tk_timeout ; unsigned long tk_runstate ; s#workqueue_struct * tk_workqueue ; s#rpc_wait_queue * tk_waitqueue ; union { s#work_struct tk_work ; s#rpc_wait tk_wait ; } u ; t#ktime_t tk_start ; t#pid_t tk_owner ; int tk_status ; unsigned short tk_flags ; unsigned short tk_timeouts ; unsigned short tk_pid ; unsigned char tk_priority : 2 , tk_garb_retry : 2 , tk_cred_retry : 2 , tk_rebind_retry : 2 ; } 
s#rpc_xprt_ops struct rpc_xprt_ops { void ( * set_buffer_size ) ( s#rpc_xprt * , t#size_t , t#size_t ) ; int ( * reserve_xprt ) ( s#rpc_task * ) ; void ( * release_xprt ) ( s#rpc_xprt * , s#rpc_task * ) ; void ( * rpcbind ) ( s#rpc_task * ) ; void ( * set_port ) ( s#rpc_xprt * , unsigned short ) ; void ( * connect ) ( s#rpc_task * ) ; void * ( * buf_alloc ) ( s#rpc_task * , t#size_t ) ; void ( * buf_free ) ( void * ) ; int ( * send_request ) ( s#rpc_task * ) ; void ( * set_retrans_timeout ) ( s#rpc_task * ) ; void ( * timer ) ( s#rpc_task * ) ; void ( * release_request ) ( s#rpc_task * ) ; void ( * close ) ( s#rpc_xprt * ) ; void ( * destroy ) ( s#rpc_xprt * ) ; void ( * print_stats ) ( s#rpc_xprt * , s#seq_file * ) ; } 
s#rpc_timeout struct rpc_timeout { unsigned long to_initval , to_maxval , to_increment ; unsigned int to_retries ; unsigned char to_exponential ; } 
s##svc_xprt
s#svc_pool_stats struct svc_pool_stats { unsigned long packets ; unsigned long sockets_queued ; unsigned long threads_woken ; unsigned long threads_timedout ; } 
s#svc_pool struct svc_pool { unsigned int sp_id ; t#spinlock_t sp_lock ; s#list_head sp_threads ; s#list_head sp_sockets ; unsigned int sp_nrthreads ; s#list_head sp_all_threads ; s#svc_pool_stats sp_stats ; } 
s#auth_domain struct auth_domain { s#kref ref ; s#hlist_node hash ; char * name ; s#auth_ops * flavour ; } 
s#auth_ops struct auth_ops { char * name ; s#module * owner ; int flavour ; int ( * accept ) ( s#svc_rqst * , t#__be32 * ) ; int ( * release ) ( s#svc_rqst * ) ; void ( * domain_release ) ( s#auth_domain * ) ; int ( * set_client ) ( s#svc_rqst * ) ; } 
s#svc_cred struct svc_cred { t#uid_t cr_uid ; t#gid_t cr_gid ; s#group_info * cr_group_info ; } 
u#svc_addr_u union svc_addr_u { s#in_addr addr ; s#in6_addr addr6 ; } 
s#cache_head struct cache_head { s#cache_head * next ; t#time_t expiry_time ; t#time_t last_refresh ; s#kref ref ; unsigned long flags ; } 
s#cache_deferred_req struct cache_deferred_req { s#hlist_node hash ; s#list_head recent ; s#cache_head * item ; void * owner ; void ( * revisit ) ( s#cache_deferred_req * , int ) ; } 
s#svc_deferred_req struct svc_deferred_req { t#u32 prot ; s#svc_xprt * xprt ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; u#svc_addr_u daddr ; s#cache_deferred_req handle ; t#size_t xprt_hlen ; int argslen ; t#__be32 args [ 0 ] ; } 
s#cache_req struct cache_req { s#cache_deferred_req * ( * defer ) ( s#cache_req * ) ; int thread_wait ; } 
s##svc_cacherep
s#svc_rqst struct svc_rqst { s#list_head rq_list ; s#list_head rq_all ; s#svc_xprt * rq_xprt ; s#__kernel_sockaddr_storage rq_addr ; t#size_t rq_addrlen ; s#svc_serv * rq_server ; s#svc_pool * rq_pool ; s#svc_procedure * rq_procinfo ; s#auth_ops * rq_authop ; t#u32 rq_flavor ; s#svc_cred rq_cred ; void * rq_xprt_ctxt ; s#svc_deferred_req * rq_deferred ; int rq_usedeferral ; t#size_t rq_xprt_hlen ; s#xdr_buf rq_arg ; s#xdr_buf rq_res ; s#page * rq_pages [ ( ( ( 1 * 1024 * 1024u ) + ( 1UL << 16 ) - 1 ) / ( 1UL << 16 ) + 2 + 1 ) ] ; s#page * * rq_respages ; int rq_resused ; s#kvec rq_vec [ ( ( ( 1 * 1024 * 1024u ) + ( 1UL << 16 ) - 1 ) / ( 1UL << 16 ) + 2 + 1 ) ] ; t#__be32 rq_xid ; t#u32 rq_prog ; t#u32 rq_vers ; t#u32 rq_proc ; t#u32 rq_prot ; unsigned short rq_secure : 1 ; u#svc_addr_u rq_daddr ; void * rq_argp ; void * rq_resp ; void * rq_auth_data ; int rq_reserved ; s#cache_req rq_chandle ; t#bool rq_dropme ; s#auth_domain * rq_client ; s#auth_domain * rq_gssclient ; s#svc_cacherep * rq_cacherep ; int rq_splice_ok ; t#wait_queue_head_t rq_wait ; s#task_struct * rq_task ; } 
t#svc_procfunc typedef t#__be32 ( * svc_procfunc ) ( s#svc_rqst * , void * , void * ) 
t#kxdrproc_t typedef int ( * kxdrproc_t ) ( void * , t#__be32 * , void * ) 
s#svc_procedure struct svc_procedure { t#svc_procfunc pc_func ; t#kxdrproc_t pc_decode ; t#kxdrproc_t pc_encode ; t#kxdrproc_t pc_release ; unsigned int pc_argsize ; unsigned int pc_ressize ; unsigned int pc_count ; unsigned int pc_cachetype ; unsigned int pc_xdrressize ; } 
s#svc_version struct svc_version { t#u32 vs_vers ; t#u32 vs_nproc ; s#svc_procedure * vs_proc ; t#u32 vs_xdrsize ; unsigned int vs_hidden : 1 ; int ( * vs_dispatch ) ( s#svc_rqst * , t#__be32 * ) ; } 
s#svc_stat struct svc_stat { s#svc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn ; unsigned int rpccnt , rpcbadfmt , rpcbadauth , rpcbadclnt ; } 
s#svc_program struct svc_program { s#svc_program * pg_next ; t#u32 pg_prog ; unsigned int pg_lovers ; unsigned int pg_hivers ; unsigned int pg_nvers ; s#svc_version * * pg_vers ; char * pg_name ; char * pg_class ; s#svc_stat * pg_stats ; int ( * pg_authenticate ) ( s#svc_rqst * ) ; } 
t#svc_thread_fn typedef int ( * svc_thread_fn ) ( void * ) 
s#svc_serv struct svc_serv { s#svc_program * sv_program ; s#svc_stat * sv_stats ; t#spinlock_t sv_lock ; unsigned int sv_nrthreads ; unsigned int sv_maxconn ; unsigned int sv_max_payload ; unsigned int sv_max_mesg ; unsigned int sv_xdrsize ; s#list_head sv_permsocks ; s#list_head sv_tempsocks ; int sv_tmpcnt ; s#timer_list sv_temptimer ; char * sv_name ; unsigned int sv_nrpools ; s#svc_pool * sv_pools ; void ( * sv_shutdown ) ( s#svc_serv * ) ; s#module * sv_module ; t#svc_thread_fn sv_function ; s#list_head sv_cb_list ; t#spinlock_t sv_cb_lock ; t#wait_queue_head_t sv_cb_waitq ; s#svc_xprt * sv_bc_xprt ; } 
E#RPC_DISPLAY_MAX ( 0 ) + 6 
s#rpc_xprt struct rpc_xprt { t#atomic_t count ; s#rpc_xprt_ops * ops ; const s#rpc_timeout * timeout ; s#__kernel_sockaddr_storage addr ; t#size_t addrlen ; int prot ; unsigned long cong ; unsigned long cwnd ; t#size_t max_payload ; unsigned int tsh_size ; s#rpc_wait_queue binding ; s#rpc_wait_queue sending ; s#rpc_wait_queue resend ; s#rpc_wait_queue pending ; s#rpc_wait_queue backlog ; s#list_head free ; s#rpc_rqst * slot ; unsigned int max_reqs ; unsigned long state ; unsigned char shutdown : 1 , resvport : 1 ; unsigned int swapper ; unsigned int bind_index ; unsigned long bind_timeout , reestablish_timeout ; unsigned int connect_cookie ; s#work_struct task_cleanup ; s#timer_list timer ; unsigned long last_used , idle_timeout ; t#spinlock_t transport_lock ; t#spinlock_t reserve_lock ; t#u32 xid ; s#rpc_task * snd_task ; s#svc_xprt * bc_xprt ; s#svc_serv * bc_serv ; unsigned int bc_alloc_count ; t#spinlock_t bc_pa_lock ; s#list_head bc_pa_list ; s#list_head recv ; struct { unsigned long bind_count , connect_count , connect_start , connect_time , sends , recvs , bad_xids ; unsigned long long req_u , bklog_u ; } stat ; s#net * xprt_net ; const char * address_strings [ E#RPC_DISPLAY_MAX ] ; } 
s#rpc_version struct rpc_version { t#u32 number ; unsigned int nrprocs ; s#rpc_procinfo * procs ; } 
s#rpc_program struct rpc_program { char * name ; t#u32 number ; unsigned int nrvers ; s#rpc_version * * version ; s#rpc_stat * stats ; char * pipe_dir_name ; } 
s#rpc_stat struct rpc_stat { s#rpc_program * program ; unsigned int netcnt , netudpcnt , nettcpcnt , nettcpconn , netreconn ; unsigned int rpccnt , rpcretrans , rpcauthrefresh , rpcgarbage ; } 
s##rpc_iostats
s#rpc_rtt struct rpc_rtt { unsigned long timeo ; unsigned long srtt [ 5 ] ; unsigned long sdrtt [ 5 ] ; int ntimeouts [ 5 ] ; } 
s#rpc_clnt struct rpc_clnt { t#atomic_t cl_count ; s#list_head cl_clients ; s#list_head cl_tasks ; t#spinlock_t cl_lock ; s#rpc_xprt * cl_xprt ; s#rpc_procinfo * cl_procinfo ; t#u32 cl_prog , cl_vers , cl_maxproc ; char * cl_server ; char * cl_protname ; s#rpc_auth * cl_auth ; s#rpc_stat * cl_stats ; s#rpc_iostats * cl_metrics ; unsigned int cl_softrtry : 1 , cl_discrtry : 1 , cl_autobind : 1 , cl_chatty : 1 ; s#rpc_rtt * cl_rtt ; const s#rpc_timeout * cl_timeout ; int cl_nodelen ; char cl_nodename [ 32 ] ; s#path cl_path ; s#rpc_clnt * cl_parent ; s#rpc_rtt cl_rtt_default ; s#rpc_timeout cl_timeout_default ; s#rpc_program * cl_program ; char cl_inline_name [ 32 ] ; char * cl_principal ; } 
s#nsm_private struct nsm_private { unsigned char data [ 16 ] ; } 
s#nsm_handle struct nsm_handle { s#list_head sm_link ; t#atomic_t sm_count ; char * sm_mon_name ; char * sm_name ; s#__kernel_sockaddr_storage sm_addr ; t#size_t sm_addrlen ; unsigned int sm_monitored : 1 , sm_sticky : 1 ; s#nsm_private sm_priv ; char sm_addrbuf [ ( ( 8 * 4 + 7 ) + ( 1 + 10 ) + 1 ) ] ; } 
s#nlm_host struct nlm_host { s#hlist_node h_hash ; s#__kernel_sockaddr_storage h_addr ; t#size_t h_addrlen ; s#__kernel_sockaddr_storage h_srcaddr ; t#size_t h_srcaddrlen ; s#rpc_clnt * h_rpcclnt ; char * h_name ; t#u32 h_version ; unsigned short h_proto ; unsigned short h_reclaiming : 1 , h_server : 1 , h_noresvport : 1 , h_inuse : 1 ; t#wait_queue_head_t h_gracewait ; s#rw_semaphore h_rwsem ; t#u32 h_state ; t#u32 h_nsmstate ; t#u32 h_pidcount ; t#atomic_t h_count ; s#mutex h_mutex ; unsigned long h_nextrebind ; unsigned long h_expires ; s#list_head h_lockowners ; t#spinlock_t h_lock ; s#list_head h_granted ; s#list_head h_reclaim ; s#nsm_handle * h_nsmhandle ; char * h_addrbuf ; } 
s#nlmclnt_initdata struct nlmclnt_initdata { const char * hostname ; const s#sockaddr * address ; t#size_t addrlen ; unsigned short protocol ; t#u32 nfs_version ; int noresvport ; } 
nlmclnt_init extern s#nlm_host * nlmclnt_init ( const s#nlmclnt_initdata * ) 
nlmclnt_done extern void nlmclnt_done ( s#nlm_host * ) 

/* fs/lockd/clntproc.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nfs4_lock_state
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##radix_tree_node
e##migrate_mode
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
nlmclnt_proc extern int nlmclnt_proc ( s#nlm_host * , int , s#file_lock * ) 

/* fs/lockd/grace.o */
s#lock_manager struct lock_manager { s#list_head list ; } 
locks_start_grace void locks_start_grace ( s#lock_manager * ) 
locks_end_grace void locks_end_grace ( s#lock_manager * ) 
locks_in_grace int locks_in_grace ( void ) 

/* fs/lockd/svc.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##rpc_cred_cache
s##workqueue_struct
s##tvec_base
s##rpc_iostats
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#svc_xprt_ops struct svc_xprt_ops { s#svc_xprt * ( * xpo_create ) ( s#svc_serv * , s#net * , s#sockaddr * , int , int ) ; s#svc_xprt * ( * xpo_accept ) ( s#svc_xprt * ) ; int ( * xpo_has_wspace ) ( s#svc_xprt * ) ; int ( * xpo_recvfrom ) ( s#svc_rqst * ) ; void ( * xpo_prep_reply_hdr ) ( s#svc_rqst * ) ; int ( * xpo_sendto ) ( s#svc_rqst * ) ; void ( * xpo_release_rqst ) ( s#svc_rqst * ) ; void ( * xpo_detach ) ( s#svc_xprt * ) ; void ( * xpo_free ) ( s#svc_xprt * ) ; } 
s#svc_xprt_class struct svc_xprt_class { const char * xcl_name ; s#module * xcl_owner ; s#svc_xprt_ops * xcl_ops ; s#list_head xcl_list ; t#u32 xcl_max_payload ; } 
s#svc_xprt struct svc_xprt { s#svc_xprt_class * xpt_class ; s#svc_xprt_ops * xpt_ops ; s#kref xpt_ref ; s#list_head xpt_list ; s#list_head xpt_ready ; unsigned long xpt_flags ; s#svc_serv * xpt_server ; t#atomic_t xpt_reserved ; s#mutex xpt_mutex ; t#spinlock_t xpt_lock ; void * xpt_auth_cache ; s#list_head xpt_deferred ; s#__kernel_sockaddr_storage xpt_local ; t#size_t xpt_locallen ; s#__kernel_sockaddr_storage xpt_remote ; t#size_t xpt_remotelen ; s#rpc_wait_queue xpt_bc_pending ; s#list_head xpt_users ; s#net * xpt_net ; s#rpc_xprt * xpt_bc_xprt ; } 
s##svc_cacherep
s#nfs_fh struct nfs_fh { unsigned short size ; unsigned char data [ 128 ] ; } 
s#nlmsvc_binding struct nlmsvc_binding { t#__be32 ( * fopen ) ( s#svc_rqst * , s#nfs_fh * , s#file * * ) ; void ( * fclose ) ( s#file * ) ; } 
nlmsvc_ops extern s#nlmsvc_binding * nlmsvc_ops 
lockd_up extern int lockd_up ( void ) 
lockd_down extern void lockd_down ( void ) 

/* fs/lockd/svcsubs.o */
s##nameidata
s##mnt_namespace
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
nlmsvc_unlock_all_by_sb int nlmsvc_unlock_all_by_sb ( s#super_block * ) 
nlmsvc_unlock_all_by_ip int nlmsvc_unlock_all_by_ip ( s#sockaddr * ) 

/* fs/locks.o */
lock_flocks extern void lock_flocks ( void ) 
unlock_flocks extern void unlock_flocks ( void ) 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##cdev
s##posix_acl
s##nlm_lockowner
s##nfs4_lock_state
locks_alloc_lock extern s#file_lock * locks_alloc_lock ( void ) 
locks_release_private extern void locks_release_private ( s#file_lock * ) 
locks_free_lock void locks_free_lock ( s#file_lock * ) 
locks_init_lock extern void locks_init_lock ( s#file_lock * ) 
__locks_copy_lock extern void __locks_copy_lock ( s#file_lock * , const s#file_lock * ) 
locks_copy_lock extern void locks_copy_lock ( s#file_lock * , s#file_lock * ) 
posix_test_lock extern void posix_test_lock ( s#file * , s#file_lock * ) 
posix_lock_file extern int posix_lock_file ( s#file * , s#file_lock * , s#file_lock * ) 
posix_lock_file_wait extern int posix_lock_file_wait ( s#file * , s#file_lock * ) 
locks_mandatory_area extern int locks_mandatory_area ( int , s#inode * , s#file * , t#loff_t , t#size_t ) 
lease_modify extern int lease_modify ( s#file_lock * * , int ) 
__break_lease extern int __break_lease ( s#inode * , unsigned int ) 
lease_get_mtime extern void lease_get_mtime ( s#inode * , s#timespec * ) 
generic_setlease extern int generic_setlease ( s#file * , long , s#file_lock * * ) 
vfs_setlease extern int vfs_setlease ( s#file * , long , s#file_lock * * ) 
flock_lock_file_wait extern int flock_lock_file_wait ( s#file * , s#file_lock * ) 
vfs_test_lock extern int vfs_test_lock ( s#file * , s#file_lock * ) 
vfs_lock_file extern int vfs_lock_file ( s#file * , unsigned int , s#file_lock * , s#file_lock * ) 
locks_remove_posix extern void locks_remove_posix ( s#file * , t#fl_owner_t ) 
posix_unblock_lock extern int posix_unblock_lock ( s#file * , s#file_lock * ) 
vfs_cancel_lock extern int vfs_cancel_lock ( s#file * , s#file_lock * ) 
lock_may_read extern int lock_may_read ( s#inode * , t#loff_t , unsigned long ) 
lock_may_write extern int lock_may_write ( s#inode * , t#loff_t , unsigned long ) 

/* fs/mbcache.o */
s##array_cache
s##kmem_list3
s#mb_cache struct mb_cache { s#list_head c_cache_list ; const char * c_name ; t#atomic_t c_entry_count ; int c_max_entries ; int c_bucket_bits ; s#kmem_cache * c_entry_cache ; s#list_head * c_block_hash ; s#list_head * c_index_hash ; } 
mb_cache_create s#mb_cache * mb_cache_create ( const char * , int ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_struct
s##gendisk
mb_cache_shrink void mb_cache_shrink ( s#block_device * ) 
mb_cache_destroy void mb_cache_destroy ( s#mb_cache * ) 
s#mb_cache_entry struct mb_cache_entry { s#list_head e_lru_list ; s#mb_cache * e_cache ; unsigned short e_used ; unsigned short e_queued ; s#block_device * e_bdev ; t#sector_t e_block ; s#list_head e_block_list ; struct { s#list_head o_list ; unsigned int o_key ; } e_index ; } 
mb_cache_entry_alloc s#mb_cache_entry * mb_cache_entry_alloc ( s#mb_cache * , t#gfp_t ) 
mb_cache_entry_insert int mb_cache_entry_insert ( s#mb_cache_entry * , s#block_device * , t#sector_t , unsigned int ) 
mb_cache_entry_release void mb_cache_entry_release ( s#mb_cache_entry * ) 
mb_cache_entry_free void mb_cache_entry_free ( s#mb_cache_entry * ) 
mb_cache_entry_get s#mb_cache_entry * mb_cache_entry_get ( s#mb_cache * , s#block_device * , t#sector_t ) 
mb_cache_entry_find_first s#mb_cache_entry * mb_cache_entry_find_first ( s#mb_cache * , s#block_device * , unsigned int ) 
mb_cache_entry_find_next s#mb_cache_entry * mb_cache_entry_find_next ( s#mb_cache_entry * , s#block_device * , unsigned int ) 

/* fs/mpage.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
mpage_readpages int mpage_readpages ( s#address_space * , s#list_head * , unsigned , t#get_block_t ) 
mpage_readpage int mpage_readpage ( s#page * , t#get_block_t ) 
mpage_writepages int mpage_writepages ( s#address_space * , s#writeback_control * , t#get_block_t ) 
mpage_writepage int mpage_writepage ( s#page * , t#get_block_t * , s#writeback_control * ) 

/* fs/namei.o */
putname extern void putname ( const char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
release_open_intent extern void release_open_intent ( s#nameidata * ) 
path_get extern void path_get ( s#path * ) 
path_put extern void path_put ( s#path * ) 
lookup_create extern s#dentry * lookup_create ( s#nameidata * , int ) 
user_path_at extern int user_path_at ( int , const char * , unsigned , s#path * ) 
follow_down_one extern int follow_down_one ( s#path * ) 
follow_down extern int follow_down ( s#path * ) 
follow_up extern int follow_up ( s#path * ) 
get_write_access extern int get_write_access ( s#inode * ) 
getname extern char * getname ( const char * ) 
lock_rename extern s#dentry * lock_rename ( s#dentry * , s#dentry * ) 
lookup_one_len extern s#dentry * lookup_one_len ( const char * , s#dentry * , int ) 
page_follow_link_light extern void * page_follow_link_light ( s#dentry * , s#nameidata * ) 
page_put_link extern void page_put_link ( s#dentry * , s#nameidata * , void * ) 
page_readlink extern int page_readlink ( s#dentry * , char * , int ) 
__page_symlink extern int __page_symlink ( s#inode * , const char * , int , int ) 
page_symlink extern int page_symlink ( s#inode * , const char * , int ) 
page_symlink_inode_operations extern const s#inode_operations page_symlink_inode_operations 
kern_path_parent extern int kern_path_parent ( const char * , s#nameidata * ) 
kern_path extern int kern_path ( const char * , unsigned , s#path * ) 
vfs_path_lookup extern int vfs_path_lookup ( s#dentry * , s#vfsmount * , const char * , unsigned int , s#nameidata * ) 
inode_permission extern int inode_permission ( s#inode * , int ) 
file_permission extern int file_permission ( s#file * , int ) 
unlock_rename extern void unlock_rename ( s#dentry * , s#dentry * ) 
vfs_create extern int vfs_create ( s#inode * , s#dentry * , int , s#nameidata * ) 
vfs_follow_link extern int vfs_follow_link ( s#nameidata * , const char * ) 
vfs_link extern int vfs_link ( s#dentry * , s#inode * , s#dentry * ) 
vfs_mkdir extern int vfs_mkdir ( s#inode * , s#dentry * , int ) 
vfs_mknod extern int vfs_mknod ( s#inode * , s#dentry * , int , t#dev_t ) 
generic_permission extern int generic_permission ( s#inode * , int , unsigned int , int ( * ) ( s#inode * , int , unsigned int ) ) 
vfs_readlink extern int vfs_readlink ( s#dentry * , char * , int , const char * ) 
vfs_rename extern int vfs_rename ( s#inode * , s#dentry * , s#inode * , s#dentry * ) 
vfs_rmdir extern int vfs_rmdir ( s#inode * , s#dentry * ) 
vfs_symlink extern int vfs_symlink ( s#inode * , s#dentry * , const char * ) 
vfs_unlink extern int vfs_unlink ( s#inode * , s#dentry * ) 
dentry_unhash extern void dentry_unhash ( s#dentry * ) 
generic_readlink extern int generic_readlink ( s#dentry * , char * , int ) 

/* fs/namespace.o */
s##sock
s##sysfs_dirent
fs_kobj extern s#kobject * fs_kobj 
vfsmount_lock_lock_init extern void vfsmount_lock_lock_init ( void ) 
vfsmount_lock_local_lock extern void vfsmount_lock_local_lock ( void ) 
vfsmount_lock_local_unlock extern void vfsmount_lock_local_unlock ( void ) 
vfsmount_lock_local_lock_cpu extern void vfsmount_lock_local_lock_cpu ( int ) 
vfsmount_lock_local_unlock_cpu extern void vfsmount_lock_local_unlock_cpu ( int ) 
vfsmount_lock_global_lock_online extern void vfsmount_lock_global_lock_online ( void ) 
vfsmount_lock_global_unlock_online extern void vfsmount_lock_global_unlock_online ( void ) 
vfsmount_lock_global_lock extern void vfsmount_lock_global_lock ( void ) 
vfsmount_lock_global_unlock extern void vfsmount_lock_global_unlock ( void ) 
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##files_struct
s##uts_namespace
s##ipc_namespace
s#mnt_namespace struct mnt_namespace { t#atomic_t count ; s#vfsmount * root ; s#list_head list ; t#wait_queue_head_t poll ; int event ; } 
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
__mnt_is_readonly extern int __mnt_is_readonly ( s#vfsmount * ) 
mnt_want_write extern int mnt_want_write ( s#vfsmount * ) 
mnt_clone_write extern int mnt_clone_write ( s#vfsmount * ) 
mnt_want_write_file extern int mnt_want_write_file ( s#file * ) 
mnt_drop_write extern void mnt_drop_write ( s#vfsmount * ) 
mnt_drop_write_file extern void mnt_drop_write_file ( s#file * ) 
vfs_kern_mount extern s#vfsmount * vfs_kern_mount ( s#file_system_type * , int , const char * , void * ) 
mntput extern void mntput ( s#vfsmount * ) 
mntget extern s#vfsmount * mntget ( s#vfsmount * ) 
mnt_pin extern void mnt_pin ( s#vfsmount * ) 
mnt_unpin extern void mnt_unpin ( s#vfsmount * ) 
generic_show_options extern int generic_show_options ( s#seq_file * , s#vfsmount * ) 
save_mount_options extern void save_mount_options ( s#super_block * , char * ) 
replace_mount_options extern void replace_mount_options ( s#super_block * , char * ) 
may_umount_tree extern int may_umount_tree ( s#vfsmount * ) 
may_umount extern int may_umount ( s#vfsmount * ) 
do_kern_mount extern s#vfsmount * do_kern_mount ( const char * , int , const char * , void * ) 
mnt_set_expiry extern void mnt_set_expiry ( s#vfsmount * , s#list_head * ) 
mark_mounts_for_expiry extern void mark_mounts_for_expiry ( s#list_head * ) 
create_mnt_ns extern s#mnt_namespace * create_mnt_ns ( s#vfsmount * ) 
path_is_under extern int path_is_under ( s#path * , s#path * ) 
put_mnt_ns extern void put_mnt_ns ( s#mnt_namespace * ) 
kern_mount_data extern s#vfsmount * kern_mount_data ( s#file_system_type * , void * ) 
kern_unmount extern void kern_unmount ( s#vfsmount * ) 

/* fs/nfs/client.o */
s##nameidata
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s#nfs_unique_id struct nfs_unique_id { s#rb_node rb_node ; t#__u64 id ; } 
s##nlm_host
E#__NFSIOS_BYTESMAX ( 0 ) + 8 
E#__NFSIOS_FSCACHEMAX 5 
E#__NFSIOS_COUNTSMAX ( 0 ) + 27 
s#nfs_iostats struct nfs_iostats { unsigned long long bytes [ E#__NFSIOS_BYTESMAX ] ; unsigned long long fscache [ E#__NFSIOS_FSCACHEMAX ] ; unsigned long events [ E#__NFSIOS_COUNTSMAX ] ; } 
s#nfs_fsid struct nfs_fsid { t#uint64_t major ; t#uint64_t minor ; } 
s#nfs_fscache_key struct nfs_fscache_key { s#rb_node node ; s#nfs_client * nfs_client ; struct { struct { unsigned long s_flags ; } super ; struct { s#nfs_fsid fsid ; int flags ; unsigned int rsize ; unsigned int wsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; } nfs_server ; struct { t#rpc_authflavor_t au_flavor ; } rpc_auth ; t#u8 uniq_len ; char uniquifier [ 0 ] ; } key ; } 
s##fscache_cookie
s#nfs_stateid4 struct nfs_stateid4 { t#__be32 seqid ; char other [ 12 ] ; } 
t#nfs4_stateid typedef s#nfs_stateid4 nfs4_stateid 
s##rpc_cred_cache
s#pnfs_layout_hdr struct pnfs_layout_hdr { t#atomic_t plh_refcount ; s#list_head plh_layouts ; s#list_head plh_bulk_recall ; s#list_head plh_segs ; t#nfs4_stateid plh_stateid ; t#atomic_t plh_outstanding ; unsigned long plh_block_lgets ; t#u32 plh_barrier ; unsigned long plh_flags ; t#loff_t plh_lwb ; s#rpc_cred * plh_lc_cred ; s#inode * plh_inode ; } 
s#pnfs_layout_range struct pnfs_layout_range { t#u32 iomode ; t#u64 offset ; t#u64 length ; } 
s#pnfs_layout_segment struct pnfs_layout_segment { s#list_head pls_list ; s#list_head pls_lc_list ; s#pnfs_layout_range pls_range ; t#atomic_t pls_refcount ; unsigned long pls_flags ; s#pnfs_layout_hdr * pls_layout ; } 
s#nfs4_sessionid struct nfs4_sessionid { unsigned char data [ 16 ] ; } 
s#nfs4_channel_attrs struct nfs4_channel_attrs { t#u32 max_rqst_sz ; t#u32 max_resp_sz ; t#u32 max_resp_sz_cached ; t#u32 max_ops ; t#u32 max_reqs ; } 
s#nfs4_slot struct nfs4_slot { t#u32 seq_nr ; } 
s#nfs4_slot_table struct nfs4_slot_table { s#nfs4_slot * slots ; unsigned long used_slots [ ( ( 128U ) / ( 8 * sizeof ( long ) ) ) ] ; t#spinlock_t slot_tbl_lock ; s#rpc_wait_queue slot_tbl_waitq ; int max_slots ; int highest_used_slotid ; int target_max_slots ; s#completion complete ; } 
s#nfs4_session struct nfs4_session { s#nfs4_sessionid sess_id ; t#u32 flags ; unsigned long session_state ; t#u32 hash_alg ; t#u32 ssv_len ; s#nfs4_channel_attrs fc_attrs ; s#nfs4_slot_table fc_slot_table ; s#nfs4_channel_attrs bc_attrs ; s#nfs4_slot_table bc_slot_table ; s#nfs_client * clp ; } 
s#nfs4_sequence_res struct nfs4_sequence_res { s#nfs4_session * sr_session ; s#nfs4_slot * sr_slot ; int sr_status ; unsigned long sr_renewal_time ; t#u32 sr_status_flags ; } 
s#nfs4_layoutdriver_data struct nfs4_layoutdriver_data { s#page * * pages ; t#__u32 pglen ; t#__u32 len ; } 
s#nfs4_layoutget_res struct nfs4_layoutget_res { t#__u32 return_on_close ; s#pnfs_layout_range range ; t#__u32 type ; t#nfs4_stateid stateid ; s#nfs4_sequence_res seq_res ; s#nfs4_layoutdriver_data * layoutp ; } 
s#nfs_lockowner struct nfs_lockowner { t#fl_owner_t l_owner ; t#pid_t l_pid ; } 
s#nfs_lock_context struct nfs_lock_context { t#atomic_t count ; s#list_head list ; s#nfs_open_context * open_context ; s#nfs_lockowner lockowner ; } 
s#nfs_open_context struct nfs_open_context { s#nfs_lock_context lock_context ; s#path path ; s#rpc_cred * cred ; s#nfs4_state * state ; t#fmode_t mode ; unsigned long flags ; int error ; s#list_head list ; } 
e#nfs3_stable_how enum nfs3_stable_how { NFS_UNSTABLE = 0 , NFS_DATA_SYNC = 1 , NFS_FILE_SYNC = 2 } 
s#nfs_writeverf struct nfs_writeverf { e#nfs3_stable_how committed ; t#__be32 verifier [ 2 ] ; } 
s#nfs_page struct nfs_page { union { s#list_head wb_list ; s#pnfs_layout_segment * wb_commit_lseg ; } ; s#page * wb_page ; s#nfs_open_context * wb_context ; s#nfs_lock_context * wb_lock_context ; t#atomic_t wb_complete ; unsigned long wb_index ; unsigned int wb_offset , wb_pgbase , wb_bytes ; s#kref wb_kref ; unsigned long wb_flags ; s#nfs_writeverf wb_verf ; } 
s#nfs_pageio_descriptor struct nfs_pageio_descriptor { s#list_head pg_list ; unsigned long pg_bytes_written ; t#size_t pg_count ; t#size_t pg_bsize ; unsigned int pg_base ; char pg_moreio ; s#inode * pg_inode ; int ( * pg_doio ) ( s#nfs_pageio_descriptor * ) ; int pg_ioflags ; int pg_error ; s#pnfs_layout_segment * pg_lseg ; t#bool ( * pg_test ) ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) ; } 
e#pnfs_try_status enum pnfs_try_status { PNFS_ATTEMPTED = 0 , PNFS_NOT_ATTEMPTED = 1 , } 
s#nfs_fattr struct nfs_fattr { unsigned int valid ; t#umode_t mode ; t#__u32 nlink ; t#__u32 uid ; t#__u32 gid ; t#dev_t rdev ; t#__u64 size ; union { struct { t#__u32 blocksize ; t#__u32 blocks ; } nfs2 ; struct { t#__u64 used ; } nfs3 ; } du ; s#nfs_fsid fsid ; t#__u64 fileid ; t#__u64 mounted_on_fileid ; s#timespec atime ; s#timespec mtime ; s#timespec ctime ; t#__u64 change_attr ; t#__u64 pre_change_attr ; t#__u64 pre_size ; s#timespec pre_mtime ; s#timespec pre_ctime ; unsigned long time_start ; unsigned long gencount ; } 
s#nfs4_sequence_args struct nfs4_sequence_args { s#nfs4_session * sa_session ; t#u8 sa_slotid ; t#u8 sa_cache_this ; } 
s#nfs_readargs struct nfs_readargs { s#nfs_fh * fh ; s#nfs_open_context * context ; s#nfs_lock_context * lock_context ; t#nfs4_stateid stateid ; t#__u64 offset ; t#__u32 count ; unsigned int pgbase ; s#page * * pages ; s#nfs4_sequence_args seq_args ; } 
s#nfs_readres struct nfs_readres { s#nfs_fattr * fattr ; t#__u32 count ; int eof ; s#nfs4_sequence_res seq_res ; } 
s#nfs_read_data struct nfs_read_data { int flags ; s#rpc_task task ; s#inode * inode ; s#rpc_cred * cred ; s#nfs_fattr fattr ; s#list_head pages ; s#nfs_page * req ; s#page * * pagevec ; unsigned int npages ; s#nfs_readargs args ; s#nfs_readres res ; unsigned long timestamp ; s#pnfs_layout_segment * lseg ; s#nfs_client * ds_clp ; const s#rpc_call_ops * mds_ops ; int ( * read_done_cb ) ( s#rpc_task * , s#nfs_read_data * ) ; t#__u64 mds_offset ; int pnfs_error ; s#page * page_array [ ( 8U ) ] ; } 
s#nfs_writeargs struct nfs_writeargs { s#nfs_fh * fh ; s#nfs_open_context * context ; s#nfs_lock_context * lock_context ; t#nfs4_stateid stateid ; t#__u64 offset ; t#__u32 count ; e#nfs3_stable_how stable ; unsigned int pgbase ; s#page * * pages ; const t#u32 * bitmask ; s#nfs4_sequence_args seq_args ; } 
s#nfs_writeres struct nfs_writeres { s#nfs_fattr * fattr ; s#nfs_writeverf * verf ; t#__u32 count ; const s#nfs_server * server ; s#nfs4_sequence_res seq_res ; } 
s#nfs_write_data struct nfs_write_data { int flags ; s#rpc_task task ; s#inode * inode ; s#rpc_cred * cred ; s#nfs_fattr fattr ; s#nfs_writeverf verf ; s#list_head pages ; s#nfs_page * req ; s#page * * pagevec ; unsigned int npages ; s#nfs_writeargs args ; s#nfs_writeres res ; s#pnfs_layout_segment * lseg ; s#nfs_client * ds_clp ; int ds_commit_index ; const s#rpc_call_ops * mds_ops ; int ( * write_done_cb ) ( s#rpc_task * , s#nfs_write_data * ) ; unsigned long timestamp ; t#__u64 mds_offset ; int pnfs_error ; s#page * page_array [ ( 8U ) ] ; } 
s#nfs4_deviceid struct nfs4_deviceid { char data [ 16 ] ; } 
s#nfs4_deviceid_node struct nfs4_deviceid_node { s#hlist_node node ; s#hlist_node tmpnode ; const s#pnfs_layoutdriver_type * ld ; const s#nfs_client * nfs_client ; s#nfs4_deviceid deviceid ; t#atomic_t ref ; } 
s#nfs4_layoutreturn_args struct nfs4_layoutreturn_args { t#__u32 layout_type ; s#inode * inode ; t#nfs4_stateid stateid ; s#nfs4_sequence_args seq_args ; } 
s#nfs4_layoutcommit_args struct nfs4_layoutcommit_args { t#nfs4_stateid stateid ; t#__u64 lastbytewritten ; s#inode * inode ; const t#u32 * bitmask ; s#nfs4_sequence_args seq_args ; } 
s#pnfs_layoutdriver_type struct pnfs_layoutdriver_type { s#list_head pnfs_tblid ; const t#u32 id ; const char * name ; s#module * owner ; unsigned flags ; s#pnfs_layout_hdr * ( * alloc_layout_hdr ) ( s#inode * , t#gfp_t ) ; void ( * free_layout_hdr ) ( s#pnfs_layout_hdr * ) ; s#pnfs_layout_segment * ( * alloc_lseg ) ( s#pnfs_layout_hdr * , s#nfs4_layoutget_res * , t#gfp_t ) ; void ( * free_lseg ) ( s#pnfs_layout_segment * ) ; t#bool ( * pg_test ) ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) ; t#bool ( * mark_pnfs_commit ) ( s#pnfs_layout_segment * ) ; s#list_head * ( * choose_commit_list ) ( s#nfs_page * ) ; int ( * commit_pagelist ) ( s#inode * , s#list_head * , int ) ; e#pnfs_try_status ( * read_pagelist ) ( s#nfs_read_data * ) ; e#pnfs_try_status ( * write_pagelist ) ( s#nfs_write_data * , int ) ; void ( * free_deviceid_node ) ( s#nfs4_deviceid_node * ) ; void ( * encode_layoutreturn ) ( s#pnfs_layout_hdr * , s#xdr_stream * , const s#nfs4_layoutreturn_args * ) ; void ( * encode_layoutcommit ) ( s#pnfs_layout_hdr * , s#xdr_stream * , const s#nfs4_layoutcommit_args * ) ; } 
s#nfs_server struct nfs_server { s#nfs_client * nfs_client ; s#list_head client_link ; s#list_head master_link ; s#rpc_clnt * client ; s#rpc_clnt * client_acl ; s#nlm_host * nlm_host ; s#nfs_iostats * io_stats ; s#backing_dev_info backing_dev_info ; t#atomic_long_t writeback ; int flags ; unsigned int caps ; unsigned int rsize ; unsigned int rpages ; unsigned int wsize ; unsigned int wpages ; unsigned int wtmult ; unsigned int dtsize ; unsigned short port ; unsigned int bsize ; unsigned int acregmin ; unsigned int acregmax ; unsigned int acdirmin ; unsigned int acdirmax ; unsigned int namelen ; unsigned int options ; s#nfs_fsid fsid ; t#__u64 maxfilesize ; s#timespec time_delta ; unsigned long mount_time ; t#dev_t s_dev ; s#nfs_fscache_key * fscache_key ; s#fscache_cookie * fscache ; t#u32 attr_bitmask [ 2 ] ; t#u32 cache_consistency_bitmask [ 2 ] ; t#u32 acl_bitmask ; s#pnfs_layoutdriver_type * pnfs_curr_ld ; s#rpc_wait_queue roc_rpcwaitq ; s#rb_root state_owners ; s#rb_root openowner_id ; s#rb_root lockowner_id ; s#list_head delegations ; void ( * destroy ) ( s#nfs_server * ) ; t#atomic_t active ; s#__kernel_sockaddr_storage mountd_address ; t#size_t mountd_addrlen ; t#u32 mountd_version ; unsigned short mountd_port ; unsigned short mountd_protocol ; } 
s#rpc_sequence struct rpc_sequence { s#rpc_wait_queue wait ; t#spinlock_t lock ; s#list_head list ; } 
s#nfs_seqid_counter struct nfs_seqid_counter { s#rpc_sequence * sequence ; int flags ; t#u32 counter ; } 
s#nfs4_state_owner struct nfs4_state_owner { s#nfs_unique_id so_owner_id ; s#nfs_server * so_server ; s#rb_node so_server_node ; s#rpc_cred * so_cred ; t#spinlock_t so_lock ; t#atomic_t so_count ; unsigned long so_flags ; s#list_head so_states ; s#nfs_seqid_counter so_seqid ; s#rpc_sequence so_sequence ; t#seqcount_t so_reclaim_seqcount ; s#mutex so_delegreturn_mutex ; } 
s#nfs4_state struct nfs4_state { s#list_head open_states ; s#list_head inode_states ; s#list_head lock_states ; s#nfs4_state_owner * owner ; s#inode * inode ; unsigned long flags ; t#spinlock_t state_lock ; t#seqlock_t seqlock ; t#nfs4_stateid stateid ; t#nfs4_stateid open_stateid ; unsigned int n_rdonly ; unsigned int n_wronly ; unsigned int n_rdwr ; t#fmode_t state ; t#atomic_t count ; } 
s#nfs4_lock_owner struct nfs4_lock_owner { unsigned int lo_type ; union { t#fl_owner_t posix_owner ; t#pid_t flock_owner ; } lo_u ; } 
s#nfs4_lock_state struct nfs4_lock_state { s#list_head ls_locks ; s#nfs4_state * ls_state ; int ls_flags ; s#nfs_seqid_counter ls_seqid ; s#rpc_sequence ls_sequence ; s#nfs_unique_id ls_id ; t#nfs4_stateid ls_stateid ; t#atomic_t ls_count ; s#nfs4_lock_owner ls_owner ; } 
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##radix_tree_node
e##migrate_mode
s##workqueue_struct
s##svc_cacherep
s#rpc_iostats struct rpc_iostats { unsigned long om_ops , om_ntrans , om_timeouts ; unsigned long long om_bytes_sent , om_bytes_recv ; t#ktime_t om_queue , om_rtt , om_execute ; } 
s#nfs_fsinfo struct nfs_fsinfo { s#nfs_fattr * fattr ; t#__u32 rtmax ; t#__u32 rtpref ; t#__u32 rtmult ; t#__u32 wtmax ; t#__u32 wtpref ; t#__u32 wtmult ; t#__u32 dtpref ; t#__u64 maxfilesize ; s#timespec time_delta ; t#__u32 lease_time ; t#__u32 layouttype ; } 
s#nfs_access_entry struct nfs_access_entry { s#rb_node rb_node ; s#list_head lru ; unsigned long jiffies ; s#rpc_cred * cred ; int mask ; } 
s#nfs_fsstat struct nfs_fsstat { s#nfs_fattr * fattr ; t#__u64 tbytes ; t#__u64 fbytes ; t#__u64 abytes ; t#__u64 tfiles ; t#__u64 ffiles ; t#__u64 afiles ; } 
s#nfs_pathconf struct nfs_pathconf { s#nfs_fattr * fattr ; t#__u32 max_link ; t#__u32 max_namelen ; } 
s#nfs_entry struct nfs_entry { t#__u64 ino ; t#__u64 cookie , prev_cookie ; const char * name ; unsigned int len ; int eof ; s#nfs_fh * fh ; s#nfs_fattr * fattr ; unsigned char d_type ; s#nfs_server * server ; } 
s#nfs4_secinfo_oid struct nfs4_secinfo_oid { unsigned int len ; char data [ 32 ] ; } 
s#nfs4_secinfo_gss struct nfs4_secinfo_gss { s#nfs4_secinfo_oid sec_oid4 ; unsigned int qop4 ; unsigned int service ; } 
s#nfs4_secinfo_flavor struct nfs4_secinfo_flavor { unsigned int flavor ; s#nfs4_secinfo_gss gss ; } 
s#nfs4_secinfo_flavors struct nfs4_secinfo_flavors { unsigned int num_flavors ; s#nfs4_secinfo_flavor flavors [ 0 ] ; } 
s#nfs_rpc_ops struct nfs_rpc_ops { t#u32 version ; const s#dentry_operations * dentry_ops ; const s#inode_operations * dir_inode_ops ; const s#inode_operations * file_inode_ops ; const s#file_operations * file_ops ; int ( * getroot ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; int ( * lookupfh ) ( s#nfs_server * , s#nfs_fh * , s#qstr * , s#nfs_fh * , s#nfs_fattr * ) ; int ( * getattr ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fattr * ) ; int ( * setattr ) ( s#dentry * , s#nfs_fattr * , s#iattr * ) ; int ( * lookup ) ( s#rpc_clnt * , s#inode * , s#qstr * , s#nfs_fh * , s#nfs_fattr * ) ; int ( * access ) ( s#inode * , s#nfs_access_entry * ) ; int ( * readlink ) ( s#inode * , s#page * , unsigned int , unsigned int ) ; int ( * create ) ( s#inode * , s#dentry * , s#iattr * , int , s#nfs_open_context * ) ; int ( * remove ) ( s#inode * , s#qstr * ) ; void ( * unlink_setup ) ( s#rpc_message * , s#inode * ) ; int ( * unlink_done ) ( s#rpc_task * , s#inode * ) ; int ( * rename ) ( s#inode * , s#qstr * , s#inode * , s#qstr * ) ; void ( * rename_setup ) ( s#rpc_message * , s#inode * ) ; int ( * rename_done ) ( s#rpc_task * , s#inode * , s#inode * ) ; int ( * link ) ( s#inode * , s#inode * , s#qstr * ) ; int ( * symlink ) ( s#inode * , s#dentry * , s#page * , unsigned int , s#iattr * ) ; int ( * mkdir ) ( s#inode * , s#dentry * , s#iattr * ) ; int ( * rmdir ) ( s#inode * , s#qstr * ) ; int ( * readdir ) ( s#dentry * , s#rpc_cred * , t#u64 , s#page * * , unsigned int , int ) ; int ( * mknod ) ( s#inode * , s#dentry * , s#iattr * , t#dev_t ) ; int ( * statfs ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsstat * ) ; int ( * fsinfo ) ( s#nfs_server * , s#nfs_fh * , s#nfs_fsinfo * ) ; int ( * pathconf ) ( s#nfs_server * , s#nfs_fh * , s#nfs_pathconf * ) ; int ( * set_capabilities ) ( s#nfs_server * , s#nfs_fh * ) ; int ( * decode_dirent ) ( s#xdr_stream * , s#nfs_entry * , int ) ; void ( * read_setup ) ( s#nfs_read_data * , s#rpc_message * ) ; int ( * read_done ) ( s#rpc_task * , s#nfs_read_data * ) ; void ( * write_setup ) ( s#nfs_write_data * , s#rpc_message * ) ; int ( * write_done ) ( s#rpc_task * , s#nfs_write_data * ) ; void ( * commit_setup ) ( s#nfs_write_data * , s#rpc_message * ) ; int ( * commit_done ) ( s#rpc_task * , s#nfs_write_data * ) ; int ( * lock ) ( s#file * , int , s#file_lock * ) ; int ( * lock_check_bounds ) ( const s#file_lock * ) ; void ( * clear_acl_cache ) ( s#inode * ) ; void ( * close_context ) ( s#nfs_open_context * , int ) ; s#inode * ( * open_context ) ( s#inode * , s#nfs_open_context * , int , s#iattr * ) ; int ( * init_client ) ( s#nfs_client * , const s#rpc_timeout * , const char * , t#rpc_authflavor_t , int ) ; int ( * secinfo ) ( s#inode * , const s#qstr * , s#nfs4_secinfo_flavors * ) ; } 
t#nfs4_verifier typedef struct { char data [ 8 ] ; } nfs4_verifier 
s##idmap
s#nfs_delegation struct nfs_delegation { s#list_head super_list ; s#rpc_cred * cred ; s#inode * inode ; t#nfs4_stateid stateid ; t#fmode_t type ; t#loff_t maxsize ; t#__u64 change_attr ; unsigned long flags ; t#spinlock_t lock ; s#rcu_head rcu ; } 
s#nfs4_state_recovery_ops struct nfs4_state_recovery_ops { int owner_flag_bit ; int state_flag_bit ; int ( * recover_open ) ( s#nfs4_state_owner * , s#nfs4_state * ) ; int ( * recover_lock ) ( s#nfs4_state * , s#file_lock * ) ; int ( * establish_clid ) ( s#nfs_client * , s#rpc_cred * ) ; s#rpc_cred * ( * get_clid_cred ) ( s#nfs_client * ) ; int ( * reclaim_complete ) ( s#nfs_client * ) ; } 
s#nfs4_state_maintenance_ops struct nfs4_state_maintenance_ops { int ( * sched_state_renewal ) ( s#nfs_client * , s#rpc_cred * ) ; s#rpc_cred * ( * get_state_renewal_cred_locked ) ( s#nfs_client * ) ; int ( * renew_lease ) ( s#nfs_client * , s#rpc_cred * ) ; } 
s#nfs4_minor_version_ops struct nfs4_minor_version_ops { t#u32 minor_version ; int ( * call_sync ) ( s#rpc_clnt * , s#nfs_server * , s#rpc_message * , s#nfs4_sequence_args * , s#nfs4_sequence_res * , int ) ; int ( * validate_stateid ) ( s#nfs_delegation * , const t#nfs4_stateid * ) ; const s#nfs4_state_recovery_ops * reboot_recovery_ops ; const s#nfs4_state_recovery_ops * nograce_recovery_ops ; const s#nfs4_state_maintenance_ops * state_renewal_ops ; } 
s#nfs_client struct nfs_client { t#atomic_t cl_count ; int cl_cons_state ; unsigned long cl_res_state ; s#__kernel_sockaddr_storage cl_addr ; t#size_t cl_addrlen ; char * cl_hostname ; s#list_head cl_share_link ; s#list_head cl_superblocks ; s#rpc_clnt * cl_rpcclient ; const s#nfs_rpc_ops * rpc_ops ; int cl_proto ; t#u32 cl_minorversion ; s#rpc_cred * cl_machine_cred ; t#u64 cl_clientid ; t#nfs4_verifier cl_confirm ; unsigned long cl_state ; t#spinlock_t cl_lock ; unsigned long cl_lease_time ; unsigned long cl_last_renewal ; s#delayed_work cl_renewd ; s#rpc_wait_queue cl_rpcwaitq ; s#timespec cl_boot_time ; s#idmap * cl_idmap ; char cl_ipaddr [ 48 ] ; unsigned char cl_id_uniquifier ; t#u32 cl_cb_ident ; const s#nfs4_minor_version_ops * cl_mvops ; t#u32 cl_seqid ; t#u32 cl_exchange_flags ; s#nfs4_session * cl_session ; s#list_head cl_layouts ; s#fscache_cookie * fscache ; } 
nfs_put_client extern void nfs_put_client ( s#nfs_client * ) 
nfs4_set_ds_client extern s#nfs_client * nfs4_set_ds_client ( s#nfs_client * , const s#sockaddr * , int , int ) 

/* fs/nfs/delegation.o */
s##nameidata
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
e##migrate_mode
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##device_node
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##rpc_iostats
s##nfs_page
s##pnfs_layout_segment
s##idmap
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##pnfs_layoutdriver_type
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
nfs_remove_bad_delegation void nfs_remove_bad_delegation ( s#inode * ) 

/* fs/nfs/nfs4proc.o */
s##tvec_base
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nlm_host
s##fscache_cookie
s##rpc_cred_cache
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s#xattr_handler struct xattr_handler { const char * prefix ; int flags ; t#size_t ( * list ) ( s#dentry * , char * , t#size_t , const char * , t#size_t , int ) ; int ( * get ) ( s#dentry * , const char * , void * , t#size_t , int ) ; int ( * set ) ( s#dentry * , const char * , const void * , t#size_t , int , int ) ; } 
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##radix_tree_node
e##migrate_mode
s##workqueue_struct
s##svc_cacherep
s##rpc_iostats
s##idmap
nfs41_setup_sequence extern int nfs41_setup_sequence ( s#nfs4_session * , s#nfs4_sequence_args * , s#nfs4_sequence_res * , int , s#rpc_task * ) 
nfs4_set_rw_stateid extern int nfs4_set_rw_stateid ( t#nfs4_stateid * , const s#nfs_open_context * , const s#nfs_lock_context * , t#fmode_t ) 
nfs4_reset_read extern void nfs4_reset_read ( s#rpc_task * , s#nfs_read_data * ) 
nfs4_reset_write extern void nfs4_reset_write ( s#rpc_task * , s#nfs_write_data * ) 
nfs4_init_ds_session extern int nfs4_init_ds_session ( s#nfs_client * ) 
s#pnfs_device struct pnfs_device { s#nfs4_deviceid dev_id ; unsigned int layout_type ; unsigned int mincount ; s#page * * pages ; unsigned int pgbase ; unsigned int pglen ; } 
nfs4_proc_getdeviceinfo extern int nfs4_proc_getdeviceinfo ( s#nfs_server * , s#pnfs_device * ) 

/* fs/nfs/nfs4state.o */
s##nameidata
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##rpc_cred_cache
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##radix_tree_node
e##migrate_mode
s##workqueue_struct
s##svc_xprt
s##svc_cacherep
s##rpc_iostats
s##idmap
nfs4_schedule_lease_recovery extern void nfs4_schedule_lease_recovery ( s#nfs_client * ) 
nfs4_schedule_stateid_recovery extern void nfs4_schedule_stateid_recovery ( const s#nfs_server * , s#nfs4_state * ) 
nfs4_schedule_session_recovery extern void nfs4_schedule_session_recovery ( s#nfs4_session * ) 

/* fs/nfs/pagelist.o */
s##nameidata
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
e##migrate_mode
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##device_node
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##rpc_iostats
s##idmap
s##nfs_delegation
s##fscache_cookie
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
nfs_generic_pg_test extern t#bool nfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 

/* fs/nfs/pnfs.o */
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##hd_struct
s##gendisk
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##rpc_iostats
s##idmap
s##nfs_delegation
s##fscache_cookie
s##nlm_host
s##nfs_fscache_key
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##mnt_namespace
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
pnfs_register_layoutdriver extern int pnfs_register_layoutdriver ( s#pnfs_layoutdriver_type * ) 
pnfs_unregister_layoutdriver extern void pnfs_unregister_layoutdriver ( s#pnfs_layoutdriver_type * ) 
put_lseg void put_lseg ( s#pnfs_layout_segment * ) 
pnfs_generic_pg_test t#bool pnfs_generic_pg_test ( s#nfs_pageio_descriptor * , s#nfs_page * , s#nfs_page * ) 
pnfs_ld_write_done int pnfs_ld_write_done ( s#nfs_write_data * ) 
pnfs_ld_read_done int pnfs_ld_read_done ( s#nfs_read_data * ) 
pnfs_set_layoutcommit void pnfs_set_layoutcommit ( s#nfs_write_data * ) 

/* fs/nfs/pnfs_dev.o */
nfs4_print_deviceid void nfs4_print_deviceid ( const s#nfs4_deviceid * ) 
s##vfsmount
s##nameidata
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##hd_struct
s##gendisk
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##rpc_cred_cache
s##nlm_host
s##nfs_iostats
s##nfs_fscache_key
s##fscache_cookie
s##nfs4_state
s##idmap
s##nfs4_minor_version_ops
nfs4_find_get_deviceid s#nfs4_deviceid_node * nfs4_find_get_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_unhash_put_deviceid s#nfs4_deviceid_node * nfs4_unhash_put_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_delete_deviceid void nfs4_delete_deviceid ( const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_init_deviceid_node void nfs4_init_deviceid_node ( s#nfs4_deviceid_node * , const s#pnfs_layoutdriver_type * , const s#nfs_client * , const s#nfs4_deviceid * ) 
nfs4_insert_deviceid_node s#nfs4_deviceid_node * nfs4_insert_deviceid_node ( s#nfs4_deviceid_node * ) 
nfs4_put_deviceid_node t#bool nfs4_put_deviceid_node ( s#nfs4_deviceid_node * ) 

/* fs/nfs/read.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##tvec_base
s##idmap
s##nfs_delegation
s##fscache_cookie
s##nlm_host
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##radix_tree_node
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##workqueue_struct
nfs_initiate_read extern int nfs_initiate_read ( s#nfs_read_data * , s#rpc_clnt * , const s#rpc_call_ops * ) 

/* fs/nfs/write.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##rpc_cred_cache
s##tvec_base
s##idmap
s##fscache_cookie
s##nlm_host
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##radix_tree_node
e#migrate_mode enum migrate_mode { MIGRATE_ASYNC , MIGRATE_SYNC_LIGHT , MIGRATE_SYNC , } 
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##workqueue_struct
nfs_commitdata_alloc extern s#nfs_write_data * nfs_commitdata_alloc ( void ) 
nfs_commit_free extern void nfs_commit_free ( s#nfs_write_data * ) 
nfs_initiate_write extern int nfs_initiate_write ( s#nfs_write_data * , s#rpc_clnt * , const s#rpc_call_ops * , int ) 
s##nfs4_cached_acl
s#nfs_inode struct nfs_inode { t#__u64 fileid ; s#nfs_fh fh ; unsigned long flags ; unsigned long cache_validity ; unsigned long read_cache_jiffies ; unsigned long attrtimeo ; unsigned long attrtimeo_timestamp ; t#__u64 change_attr ; unsigned long attr_gencount ; unsigned long cache_change_attribute ; s#rb_root access_cache ; s#list_head access_cache_entry_lru ; s#list_head access_cache_inode_lru ; s#posix_acl * acl_access ; s#posix_acl * acl_default ; t#__be32 cookieverf [ 2 ] ; s#radix_tree_root nfs_page_tree ; unsigned long npages ; unsigned long ncommit ; s#list_head open_files ; t#atomic_t silly_count ; s#hlist_head silly_list ; t#wait_queue_head_t waitqueue ; s#nfs4_cached_acl * nfs4_acl ; s#list_head open_states ; s#nfs_delegation * delegation ; t#fmode_t delegation_state ; s#rw_semaphore rwsem ; s#pnfs_layout_hdr * layout ; t#atomic_t commits_outstanding ; s#fscache_cookie * fscache ; s#inode vfs_inode ; } 
nfs_commit_clear_lock void nfs_commit_clear_lock ( s#nfs_inode * ) 
nfs_commitdata_release void nfs_commitdata_release ( void * ) 
nfs_initiate_commit extern int nfs_initiate_commit ( s#nfs_write_data * , s#rpc_clnt * , const s#rpc_call_ops * , int ) 
nfs_init_commit extern void nfs_init_commit ( s#nfs_write_data * , s#list_head * , s#pnfs_layout_segment * ) 
nfs_retry_commit void nfs_retry_commit ( s#list_head * , s#pnfs_layout_segment * ) 
nfs_commit_release_pages void nfs_commit_release_pages ( s#nfs_write_data * ) 

/* fs/nfs4acl_base.o */
nfs4ace_owner_who extern const char nfs4ace_owner_who [ ] 
nfs4ace_group_who extern const char nfs4ace_group_who [ ] 
nfs4ace_everyone_who extern const char nfs4ace_everyone_who [ ] 
s#nfs4ace struct nfs4ace { unsigned short e_type ; unsigned short e_flags ; unsigned int e_mask ; union { unsigned int e_id ; const char * e_who ; } u ; } 
s#nfs4acl struct nfs4acl { t#atomic_t a_refcount ; unsigned int a_owner_mask ; unsigned int a_group_mask ; unsigned int a_other_mask ; unsigned short a_count ; unsigned short a_flags ; s#nfs4ace a_entries [ 0 ] ; } 
nfs4acl_alloc extern s#nfs4acl * nfs4acl_alloc ( int ) 
nfs4acl_masks_to_mode extern int nfs4acl_masks_to_mode ( const s#nfs4acl * ) 
nfs4acl_chmod extern s#nfs4acl * nfs4acl_chmod ( s#nfs4acl * , t#mode_t ) 
nfs4acl_want_to_mask extern unsigned int nfs4acl_want_to_mask ( int ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
nfs4acl_permission extern int nfs4acl_permission ( s#inode * , const s#nfs4acl * , unsigned int ) 
nfs4acl_generic_permission extern int nfs4acl_generic_permission ( s#inode * , unsigned int ) 
nfs4ace_set_who extern int nfs4ace_set_who ( s#nfs4ace * , const char * ) 
nfs4acl_inherit extern s#nfs4acl * nfs4acl_inherit ( const s#nfs4acl * , t#mode_t ) 

/* fs/nfs4acl_compat.o */
nfs4acl_apply_masks extern int nfs4acl_apply_masks ( s#nfs4acl * * ) 

/* fs/nfs4acl_xattr.o */
nfs4acl_from_xattr extern s#nfs4acl * nfs4acl_from_xattr ( const void * , t#size_t ) 
nfs4acl_xattr_size extern t#size_t nfs4acl_xattr_size ( const s#nfs4acl * ) 
nfs4acl_to_xattr extern void nfs4acl_to_xattr ( const s#nfs4acl * , void * ) 

/* fs/nfs_common/nfsacl.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
nfsacl_encode extern int nfsacl_encode ( s#xdr_buf * , unsigned int , s#inode * , s#posix_acl * , int , int ) 
nfsacl_decode extern int nfsacl_decode ( s#xdr_buf * , unsigned int , unsigned int * , s#posix_acl * * ) 

/* fs/nfsd/nfs4acl.o */
s#nfs4_ace struct nfs4_ace { t#uint32_t type ; t#uint32_t flag ; t#uint32_t access_mask ; int whotype ; t#uid_t who ; } 
s#nfs4_acl struct nfs4_acl { t#uint32_t naces ; s#nfs4_ace aces [ 0 ] ; } 
nfs4_acl_posix_to_nfsv4 s#nfs4_acl * nfs4_acl_posix_to_nfsv4 ( s#posix_acl * , s#posix_acl * , unsigned int ) 
nfs4_acl_nfsv4_to_posix int nfs4_acl_nfsv4_to_posix ( s#nfs4_acl * , s#posix_acl * * , s#posix_acl * * , unsigned int ) 
nfs4_acl_new s#nfs4_acl * nfs4_acl_new ( int ) 
nfs4_acl_get_whotype int nfs4_acl_get_whotype ( char * , t#u32 ) 
nfs4_acl_write_who int nfs4_acl_write_who ( int , char * ) 

/* fs/nls/nls_base.o */
t#unicode_t typedef t#u32 unicode_t 
utf8_to_utf32 extern int utf8_to_utf32 ( const t#u8 * , int , t#unicode_t * ) 
utf32_to_utf8 extern int utf32_to_utf8 ( t#unicode_t , t#u8 * , int ) 
e#utf16_endian enum utf16_endian { UTF16_HOST_ENDIAN , UTF16_LITTLE_ENDIAN , UTF16_BIG_ENDIAN } 
utf8s_to_utf16s extern int utf8s_to_utf16s ( const t#u8 * , int , e#utf16_endian , t#wchar_t * , int ) 
utf16s_to_utf8s extern int utf16s_to_utf8s ( const t#wchar_t * , int , e#utf16_endian , t#u8 * , int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
register_nls extern int register_nls ( s#nls_table * ) 
unregister_nls extern int unregister_nls ( s#nls_table * ) 
unload_nls extern void unload_nls ( s#nls_table * ) 
load_nls extern s#nls_table * load_nls ( char * ) 
load_nls_default extern s#nls_table * load_nls_default ( void ) 

/* fs/notify/fsnotify.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
__fsnotify_inode_delete extern void __fsnotify_inode_delete ( s#inode * ) 
__fsnotify_parent extern int __fsnotify_parent ( s#path * , s#dentry * , t#__u32 ) 
fsnotify extern int fsnotify ( s#inode * , t#__u32 , void * , int , const unsigned char * , t#u32 ) 

/* fs/notify/notification.o */
fsnotify_get_cookie extern t#u32 fsnotify_get_cookie ( void ) 

/* fs/ocfs2/cluster/heartbeat.o */
o2hb_fill_node_map void o2hb_fill_node_map ( unsigned long * , unsigned ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#o2nm_node struct o2nm_node { t#spinlock_t nd_lock ; s#config_item nd_item ; char nd_name [ 64 + 1 ] ; t#__u8 nd_num ; t#__be32 nd_ipv4_address ; t#__be16 nd_ipv4_port ; s#rb_node nd_ip_node ; int nd_local ; unsigned long nd_set_attributes ; } 
t#o2hb_cb_func typedef void ( o2hb_cb_func ) ( s#o2nm_node * , int , void * ) 
e#o2hb_callback_type enum o2hb_callback_type { O2HB_NODE_DOWN_CB = 0 , O2HB_NODE_UP_CB , O2HB_NUM_CB } 
s#o2hb_callback_func struct o2hb_callback_func { t#u32 hc_magic ; s#list_head hc_item ; t#o2hb_cb_func * hc_func ; void * hc_data ; int hc_priority ; e#o2hb_callback_type hc_type ; } 
o2hb_setup_callback void o2hb_setup_callback ( s#o2hb_callback_func * , e#o2hb_callback_type , t#o2hb_cb_func * , void * , int ) 
o2hb_register_callback int o2hb_register_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_unregister_callback void o2hb_unregister_callback ( const char * , s#o2hb_callback_func * ) 
o2hb_check_node_heartbeating int o2hb_check_node_heartbeating ( t#u8 ) 
o2hb_check_node_heartbeating_from_callback int o2hb_check_node_heartbeating_from_callback ( t#u8 ) 
o2hb_check_local_node_heartbeating int o2hb_check_local_node_heartbeating ( void ) 
o2hb_stop_all_regions void o2hb_stop_all_regions ( void ) 
o2hb_get_all_regions int o2hb_get_all_regions ( char * , t#u8 ) 
o2hb_global_heartbeat_active int o2hb_global_heartbeat_active ( void ) 

/* fs/ocfs2/cluster/masklog.o */
s#mlog_bits struct mlog_bits { unsigned long words [ 64 / 64 ] ; } 
mlog_and_bits extern s#mlog_bits mlog_and_bits 
mlog_not_bits extern s#mlog_bits mlog_not_bits 

/* fs/ocfs2/cluster/nodemanager.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
o2nm_get_node_by_num s#o2nm_node * o2nm_get_node_by_num ( t#u8 ) 
o2nm_configured_node_map int o2nm_configured_node_map ( unsigned long * , unsigned ) 
o2nm_get_node_by_ip s#o2nm_node * o2nm_get_node_by_ip ( t#__be32 ) 
o2nm_node_put void o2nm_node_put ( s#o2nm_node * ) 
o2nm_node_get void o2nm_node_get ( s#o2nm_node * ) 
o2nm_this_node t#u8 o2nm_this_node ( void ) 

/* fs/ocfs2/cluster/tcp.o */
s#o2net_msg struct o2net_msg { t#__be16 magic ; t#__be16 data_len ; t#__be16 msg_type ; t#__be16 pad1 ; t#__be32 sys_status ; t#__be32 status ; t#__be32 key ; t#__be32 msg_num ; t#__u8 buf [ 0 ] ; } 
t#o2net_msg_handler_func typedef int ( o2net_msg_handler_func ) ( s#o2net_msg * , t#u32 , void * , void * * ) 
t#o2net_post_msg_handler_func typedef void ( o2net_post_msg_handler_func ) ( int , void * , void * ) 
o2net_register_handler int o2net_register_handler ( t#u32 , t#u32 , t#u32 , t#o2net_msg_handler_func * , void * , t#o2net_post_msg_handler_func * , s#list_head * ) 
o2net_unregister_handler_list void o2net_unregister_handler_list ( s#list_head * ) 
o2net_send_message_vec int o2net_send_message_vec ( t#u32 , t#u32 , s#kvec * , t#size_t , t#u8 , int * ) 
o2net_send_message int o2net_send_message ( t#u32 , t#u32 , void * , t#u32 , t#u8 , int * ) 

/* fs/ocfs2/dlm/dlmdebug.o */
s#dlm_migratable_lock struct dlm_migratable_lock { t#__be64 cookie ; t#__be16 pad1 ; t#u8 list ; t#u8 flags ; t#s8 type ; t#s8 convert_type ; t#s8 highest_blocked ; t#u8 node ; } 
s#dlm_recovery_ctxt struct dlm_recovery_ctxt { s#list_head resources ; s#list_head received ; s#list_head node_data ; t#u8 new_master ; t#u8 dead_node ; t#u16 state ; unsigned long node_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; t#wait_queue_head_t event ; } 
E#DLM_MLE_NUM_TYPES 3 
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#dlm_debug_ctxt struct dlm_debug_ctxt { s#kref debug_refcnt ; s#dentry * debug_state_dentry ; s#dentry * debug_lockres_dentry ; s#dentry * debug_mle_dentry ; s#dentry * debug_purgelist_dentry ; } 
e#dlm_ctxt_state enum dlm_ctxt_state { DLM_CTXT_NEW = 0 , DLM_CTXT_JOINED = 1 , DLM_CTXT_IN_SHUTDOWN = 2 , DLM_CTXT_LEAVING = 3 , } 
s##workqueue_struct
s#dlm_protocol_version struct dlm_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s#dlm_ctxt struct dlm_ctxt { s#list_head list ; s#hlist_head * * lockres_hash ; s#list_head dirty_list ; s#list_head purge_list ; s#list_head pending_asts ; s#list_head pending_basts ; s#list_head tracking_list ; unsigned int purge_count ; t#spinlock_t spinlock ; t#spinlock_t ast_lock ; t#spinlock_t track_lock ; char * name ; t#u8 node_num ; t#u32 key ; t#u8 joining_node ; t#wait_queue_head_t dlm_join_events ; unsigned long live_nodes_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long domain_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long exit_domain_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; unsigned long recovery_map [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; s#dlm_recovery_ctxt reco ; t#spinlock_t master_lock ; s#hlist_head * * master_hash ; s#list_head mle_hb_events ; t#atomic_t mle_tot_count [ E#DLM_MLE_NUM_TYPES ] ; t#atomic_t mle_cur_count [ E#DLM_MLE_NUM_TYPES ] ; t#atomic_t res_tot_count ; t#atomic_t res_cur_count ; s#dlm_debug_ctxt * dlm_debug_ctxt ; s#dentry * dlm_debugfs_subroot ; s#kref dlm_refs ; e#dlm_ctxt_state dlm_state ; unsigned int num_joins ; s#o2hb_callback_func dlm_hb_up ; s#o2hb_callback_func dlm_hb_down ; s#task_struct * dlm_thread_task ; s#task_struct * dlm_reco_thread_task ; s#workqueue_struct * dlm_worker ; t#wait_queue_head_t dlm_thread_wq ; t#wait_queue_head_t dlm_reco_thread_wq ; t#wait_queue_head_t ast_wq ; t#wait_queue_head_t migration_wq ; s#work_struct dispatched_work ; s#list_head work_list ; t#spinlock_t work_lock ; s#list_head dlm_domain_handlers ; s#list_head dlm_eviction_callbacks ; s#dlm_protocol_version fs_locking_proto ; s#dlm_protocol_version dlm_locking_proto ; } 
s#dlm_lock_resource struct dlm_lock_resource { s#hlist_node hash_node ; s#qstr lockname ; s#kref refs ; s#list_head granted ; s#list_head converting ; s#list_head blocked ; s#list_head purge ; s#list_head dirty ; s#list_head recovering ; s#list_head tracking ; unsigned long last_used ; s#dlm_ctxt * dlm ; unsigned migration_pending : 1 ; t#atomic_t asts_reserved ; t#spinlock_t spinlock ; t#wait_queue_head_t wq ; t#u8 owner ; t#u16 state ; char lvb [ 64 ] ; unsigned int inflight_locks ; unsigned long refmap [ ( ( ( 255 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] ; } 
t#dlm_astlockfunc_t typedef void ( dlm_astlockfunc_t ) ( void * ) 
t#dlm_bastlockfunc_t typedef void ( dlm_bastlockfunc_t ) ( void * , int ) 
e#dlm_status enum dlm_status { DLM_NORMAL = 0 , DLM_GRANTED , DLM_DENIED , DLM_DENIED_NOLOCKS , DLM_WORKING , DLM_BLOCKED , DLM_BLOCKED_ORPHAN , DLM_DENIED_GRACE_PERIOD , DLM_SYSERR , DLM_NOSUPPORT , DLM_CANCELGRANT , DLM_IVLOCKID , DLM_SYNC , DLM_BADTYPE , DLM_BADRESOURCE , DLM_MAXHANDLES , DLM_NOCLINFO , DLM_NOLOCKMGR , DLM_NOPURGED , DLM_BADARGS , DLM_VOID , DLM_NOTQUEUED , DLM_IVBUFLEN , DLM_CVTUNGRANT , DLM_BADPARAM , DLM_VALNOTVALID , DLM_REJECTED , DLM_ABORT , DLM_CANCEL , DLM_IVRESHANDLE , DLM_DEADLOCK , DLM_DENIED_NOASTS , DLM_FORWARD , DLM_TIMEOUT , DLM_IVGROUPID , DLM_VERS_CONFLICT , DLM_BAD_DEVICE_PATH , DLM_NO_DEVICE_PERMISSION , DLM_NO_CONTROL_DEVICE , DLM_RECOVERING , DLM_MIGRATING , DLM_MAXSTATS , } 
s#dlm_lockstatus struct dlm_lockstatus { e#dlm_status status ; t#u32 flags ; s#dlm_lock * lockid ; char lvb [ 64 ] ; } 
s#dlm_lock struct dlm_lock { s#dlm_migratable_lock ml ; s#list_head list ; s#list_head ast_list ; s#list_head bast_list ; s#dlm_lock_resource * lockres ; t#spinlock_t spinlock ; s#kref lock_refs ; t#dlm_astlockfunc_t * ast ; t#dlm_bastlockfunc_t * bast ; void * astdata ; s#dlm_lockstatus * lksb ; unsigned ast_pending : 1 , bast_pending : 1 , convert_pending : 1 , lock_pending : 1 , cancel_pending : 1 , unlock_pending : 1 , lksb_kernel_allocated : 1 ; } 
dlm_print_one_lock void dlm_print_one_lock ( s#dlm_lock * ) 
dlm_errmsg const char * dlm_errmsg ( e#dlm_status ) 
dlm_errname const char * dlm_errname ( e#dlm_status ) 

/* fs/ocfs2/dlm/dlmdomain.o */
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##workqueue_struct
dlm_unregister_domain void dlm_unregister_domain ( s#dlm_ctxt * ) 
dlm_register_domain s#dlm_ctxt * dlm_register_domain ( const char * , t#u32 , s#dlm_protocol_version * ) 
t#dlm_eviction_func typedef void ( dlm_eviction_func ) ( int , void * ) 
s#dlm_eviction_cb struct dlm_eviction_cb { s#list_head ec_item ; t#dlm_eviction_func * ec_func ; void * ec_data ; } 
dlm_setup_eviction_cb void dlm_setup_eviction_cb ( s#dlm_eviction_cb * , t#dlm_eviction_func * , void * ) 
dlm_register_eviction_cb void dlm_register_eviction_cb ( s#dlm_ctxt * , s#dlm_eviction_cb * ) 
dlm_unregister_eviction_cb void dlm_unregister_eviction_cb ( s#dlm_eviction_cb * ) 

/* fs/ocfs2/dlm/dlmlock.o */
s##dlm_debug_ctxt
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##export_operations
s##xattr_handler
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##mtd_info
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
e##migrate_mode
s##array_cache
s##kmem_list3
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##workqueue_struct
dlmlock e#dlm_status dlmlock ( s#dlm_ctxt * , int , s#dlm_lockstatus * , int , const char * , int , t#dlm_astlockfunc_t * , void * , t#dlm_bastlockfunc_t * ) 

/* fs/ocfs2/dlm/dlmunlock.o */
s##dlm_debug_ctxt
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##export_operations
s##xattr_handler
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##mtd_info
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
e##migrate_mode
s##array_cache
s##kmem_list3
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##workqueue_struct
t#dlm_astunlockfunc_t typedef void ( dlm_astunlockfunc_t ) ( void * , e#dlm_status ) 
dlmunlock e#dlm_status dlmunlock ( s#dlm_ctxt * , s#dlm_lockstatus * , int , t#dlm_astunlockfunc_t * , void * ) 

/* fs/ocfs2/stackglue.o */
ocfs2_is_o2cb_active int ocfs2_is_o2cb_active ( void ) 
s#ocfs2_protocol_version struct ocfs2_protocol_version { t#u8 pv_major ; t#u8 pv_minor ; } 
s##dlm_lock
s#fsdlm_lksb_plus_lvb struct fsdlm_lksb_plus_lvb { s#dlm_lksb lksb ; char lvb [ 64 ] ; } 
s#ocfs2_dlm_lksb struct ocfs2_dlm_lksb { union { s#dlm_lockstatus lksb_o2dlm ; s#dlm_lksb lksb_fsdlm ; s#fsdlm_lksb_plus_lvb padding ; } ; s#ocfs2_cluster_connection * lksb_conn ; } 
s#ocfs2_locking_protocol struct ocfs2_locking_protocol { s#ocfs2_protocol_version lp_max_version ; void ( * lp_lock_ast ) ( s#ocfs2_dlm_lksb * ) ; void ( * lp_blocking_ast ) ( s#ocfs2_dlm_lksb * , int ) ; void ( * lp_unlock_ast ) ( s#ocfs2_dlm_lksb * , int ) ; } 
s#ocfs2_cluster_connection struct ocfs2_cluster_connection { char cc_name [ 64 ] ; int cc_namelen ; s#ocfs2_protocol_version cc_version ; s#ocfs2_locking_protocol * cc_proto ; void ( * cc_recovery_handler ) ( int , void * ) ; void * cc_recovery_data ; void * cc_lockspace ; void * cc_private ; } 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s#ocfs2_stack_operations struct ocfs2_stack_operations { int ( * connect ) ( s#ocfs2_cluster_connection * ) ; int ( * disconnect ) ( s#ocfs2_cluster_connection * ) ; int ( * this_node ) ( unsigned int * ) ; int ( * dlm_lock ) ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) ; int ( * dlm_unlock ) ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) ; int ( * lock_status ) ( s#ocfs2_dlm_lksb * ) ; int ( * lvb_valid ) ( s#ocfs2_dlm_lksb * ) ; void * ( * lock_lvb ) ( s#ocfs2_dlm_lksb * ) ; int ( * plock ) ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) ; void ( * dump_lksb ) ( s#ocfs2_dlm_lksb * ) ; } 
s#ocfs2_stack_plugin struct ocfs2_stack_plugin { char * sp_name ; s#ocfs2_stack_operations * sp_ops ; s#module * sp_owner ; s#list_head sp_list ; unsigned int sp_count ; s#ocfs2_protocol_version sp_max_proto ; } 
ocfs2_stack_glue_register int ocfs2_stack_glue_register ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_unregister void ocfs2_stack_glue_unregister ( s#ocfs2_stack_plugin * ) 
ocfs2_stack_glue_set_max_proto_version void ocfs2_stack_glue_set_max_proto_version ( s#ocfs2_protocol_version * ) 
ocfs2_dlm_lock int ocfs2_dlm_lock ( s#ocfs2_cluster_connection * , int , s#ocfs2_dlm_lksb * , t#u32 , void * , unsigned int ) 
ocfs2_dlm_unlock int ocfs2_dlm_unlock ( s#ocfs2_cluster_connection * , s#ocfs2_dlm_lksb * , t#u32 ) 
ocfs2_dlm_lock_status int ocfs2_dlm_lock_status ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb_valid int ocfs2_dlm_lvb_valid ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_lvb void * ocfs2_dlm_lvb ( s#ocfs2_dlm_lksb * ) 
ocfs2_dlm_dump_lksb void ocfs2_dlm_dump_lksb ( s#ocfs2_dlm_lksb * ) 
ocfs2_stack_supports_plocks int ocfs2_stack_supports_plocks ( void ) 
ocfs2_plock int ocfs2_plock ( s#ocfs2_cluster_connection * , t#u64 , s#file * , int , s#file_lock * ) 
ocfs2_cluster_connect int ocfs2_cluster_connect ( const char * , const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_connect_agnostic int ocfs2_cluster_connect_agnostic ( const char * , int , s#ocfs2_locking_protocol * , void ( * ) ( int , void * ) , void * , s#ocfs2_cluster_connection * * ) 
ocfs2_cluster_disconnect int ocfs2_cluster_disconnect ( s#ocfs2_cluster_connection * , int ) 
ocfs2_cluster_hangup void ocfs2_cluster_hangup ( const char * , int ) 
ocfs2_cluster_this_node int ocfs2_cluster_this_node ( unsigned int * ) 

/* fs/open.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##poll_table_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##nlm_lockowner
s##nfs4_lock_state
s##posix_acl
vfs_truncate extern long vfs_truncate ( s#path * , t#loff_t ) 
lookup_instantiate_filp extern s#file * lookup_instantiate_filp ( s#nameidata * , s#dentry * , int ( * ) ( s#inode * , s#file * ) ) 
dentry_open extern s#file * dentry_open ( s#dentry * , s#vfsmount * , int , const s#cred * ) 
put_unused_fd extern void put_unused_fd ( unsigned int ) 
fd_install extern void fd_install ( unsigned int , s#file * ) 
filp_open extern s#file * filp_open ( const char * , int , int ) 
file_open_root extern s#file * file_open_root ( s#dentry * , s#vfsmount * , const char * , int ) 
filp_close extern int filp_close ( s#file * , t#fl_owner_t ) 
sys_close long sys_close ( unsigned int ) 
generic_file_open extern int generic_file_open ( s#inode * , s#file * ) 
nonseekable_open extern int nonseekable_open ( s#inode * , s#file * ) 

/* fs/partitions/check.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##posix_acl
s##hd_geometry
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
bdevname extern const char * bdevname ( s#block_device * , char * ) 
__bdevname extern const char * __bdevname ( t#dev_t , char * ) 
t#Sector typedef struct { s#page * v ; } Sector 
read_dev_sector unsigned char * read_dev_sector ( s#block_device * , t#sector_t , t#Sector * ) 

/* fs/pipe.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
pipe_lock void pipe_lock ( s#pipe_inode_info * ) 
pipe_unlock void pipe_unlock ( s#pipe_inode_info * ) 
generic_pipe_buf_map void * generic_pipe_buf_map ( s#pipe_inode_info * , s#pipe_buffer * , int ) 
generic_pipe_buf_unmap void generic_pipe_buf_unmap ( s#pipe_inode_info * , s#pipe_buffer * , void * ) 
generic_pipe_buf_steal int generic_pipe_buf_steal ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_get void generic_pipe_buf_get ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_confirm int generic_pipe_buf_confirm ( s#pipe_inode_info * , s#pipe_buffer * ) 
generic_pipe_buf_release void generic_pipe_buf_release ( s#pipe_inode_info * , s#pipe_buffer * ) 

/* fs/posix_acl.o */
posix_acl_init extern void posix_acl_init ( s#posix_acl * , int ) 
posix_acl_alloc extern s#posix_acl * posix_acl_alloc ( int , t#gfp_t ) 
posix_acl_clone extern s#posix_acl * posix_acl_clone ( const s#posix_acl * , t#gfp_t ) 
posix_acl_valid extern int posix_acl_valid ( const s#posix_acl * ) 
posix_acl_equiv_mode extern int posix_acl_equiv_mode ( const s#posix_acl * , t#mode_t * ) 
posix_acl_from_mode extern s#posix_acl * posix_acl_from_mode ( t#mode_t , t#gfp_t ) 
posix_acl_create_masq extern int posix_acl_create_masq ( s#posix_acl * , t#mode_t * ) 
posix_acl_chmod_masq extern int posix_acl_chmod_masq ( s#posix_acl * , t#mode_t ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
posix_acl_permission extern int posix_acl_permission ( s#inode * , const s#posix_acl * , int ) 
posix_acl_update_mode extern int posix_acl_update_mode ( s#inode * , t#umode_t * , s#posix_acl * * ) 

/* fs/proc/generic.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##mnt_namespace
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
proc_symlink extern s#proc_dir_entry * proc_symlink ( const char * , s#proc_dir_entry * , const char * ) 
proc_mkdir_mode extern s#proc_dir_entry * proc_mkdir_mode ( const char * , t#mode_t , s#proc_dir_entry * ) 
s##net
proc_net_mkdir extern s#proc_dir_entry * proc_net_mkdir ( s#net * , const char * , s#proc_dir_entry * ) 
proc_mkdir extern s#proc_dir_entry * proc_mkdir ( const char * , s#proc_dir_entry * ) 
create_proc_entry extern s#proc_dir_entry * create_proc_entry ( const char * , t#mode_t , s#proc_dir_entry * ) 
proc_create_data s#proc_dir_entry * proc_create_data ( const char * , t#mode_t , s#proc_dir_entry * , const s#file_operations * , void * ) 
remove_proc_entry extern void remove_proc_entry ( const char * , s#proc_dir_entry * ) 

/* fs/proc/proc_net.o */
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
seq_open_net int seq_open_net ( s#inode * , s#file * , const s#seq_operations * , int ) 
single_open_net int single_open_net ( s#inode * , s#file * , int ( * ) ( s#seq_file * , void * ) ) 
seq_release_net int seq_release_net ( s#inode * , s#file * ) 
single_release_net int single_release_net ( s#inode * , s#file * ) 
proc_net_fops_create extern s#proc_dir_entry * proc_net_fops_create ( s#net * , const char * , t#mode_t , const s#file_operations * ) 
proc_net_remove extern void proc_net_remove ( s#net * , const char * ) 

/* fs/proc/vmcore.o */
register_oldmem_pfn_is_ram extern int register_oldmem_pfn_is_ram ( int ( * ) ( unsigned long ) ) 
unregister_oldmem_pfn_is_ram extern void unregister_oldmem_pfn_is_ram ( void ) 
vmcore_cleanup void vmcore_cleanup ( void ) 

/* fs/quota/dquot.o */
dq_data_lock extern t#spinlock_t dq_data_lock 
s##mnt_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##serial_icounter_struct
s##poll_table_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##nlm_lockowner
s##nfs4_lock_state
s##posix_acl
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
__quota_error extern __attribute__ ( ( format ( printf , 3 , 4 ) ) ) void __quota_error ( s#super_block * , const char * , const char * , ... ) 
register_quota_format int register_quota_format ( s#quota_format_type * ) 
unregister_quota_format void unregister_quota_format ( s#quota_format_type * ) 
E#_DQST_DQSTAT_LAST 8 
s#dqstats struct dqstats { int stat [ E#_DQST_DQSTAT_LAST ] ; s#percpu_counter counter [ E#_DQST_DQSTAT_LAST ] ; } 
dqstats extern s#dqstats dqstats 
dquot_mark_dquot_dirty int dquot_mark_dquot_dirty ( s#dquot * ) 
mark_info_dirty extern void mark_info_dirty ( s#super_block * , int ) 
dquot_acquire int dquot_acquire ( s#dquot * ) 
dquot_commit int dquot_commit ( s#dquot * ) 
dquot_release int dquot_release ( s#dquot * ) 
dquot_destroy void dquot_destroy ( s#dquot * ) 
dquot_scan_active int dquot_scan_active ( s#super_block * , int ( * ) ( s#dquot * , unsigned long ) , unsigned long ) 
dquot_quota_sync int dquot_quota_sync ( s#super_block * , int , int ) 
dqput void dqput ( s#dquot * ) 
dquot_alloc s#dquot * dquot_alloc ( s#super_block * , int ) 
dqget s#dquot * dqget ( s#super_block * , unsigned int , int ) 
dquot_initialize void dquot_initialize ( s#inode * ) 
dquot_drop void dquot_drop ( s#inode * ) 
inode_add_rsv_space void inode_add_rsv_space ( s#inode * , t#qsize_t ) 
inode_claim_rsv_space void inode_claim_rsv_space ( s#inode * , t#qsize_t ) 
inode_sub_rsv_space void inode_sub_rsv_space ( s#inode * , t#qsize_t ) 
__dquot_alloc_space int __dquot_alloc_space ( s#inode * , t#qsize_t , int ) 
dquot_alloc_inode int dquot_alloc_inode ( const s#inode * ) 
dquot_claim_space_nodirty int dquot_claim_space_nodirty ( s#inode * , t#qsize_t ) 
__dquot_free_space void __dquot_free_space ( s#inode * , t#qsize_t , int ) 
dquot_free_inode void dquot_free_inode ( const s#inode * ) 
__dquot_transfer int __dquot_transfer ( s#inode * , s#dquot * * ) 
dquot_transfer int dquot_transfer ( s#inode * , s#iattr * ) 
dquot_commit_info int dquot_commit_info ( s#super_block * , int ) 
dquot_operations extern const s#dquot_operations dquot_operations 
dquot_file_open int dquot_file_open ( s#inode * , s#file * ) 
dquot_disable int dquot_disable ( s#super_block * , int , unsigned int ) 
dquot_quota_off int dquot_quota_off ( s#super_block * , int ) 
dquot_resume int dquot_resume ( s#super_block * , int ) 
dquot_quota_on int dquot_quota_on ( s#super_block * , int , int , s#path * ) 
dquot_enable int dquot_enable ( s#inode * , int , int , unsigned int ) 
dquot_quota_on_mount int dquot_quota_on_mount ( s#super_block * , char * , int , int ) 
dquot_get_dqblk int dquot_get_dqblk ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) 
dquot_set_dqblk int dquot_set_dqblk ( s#super_block * , int , t#qid_t , s#fs_disk_quota * ) 
dquot_get_dqinfo int dquot_get_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 
dquot_set_dqinfo int dquot_set_dqinfo ( s#super_block * , int , s#if_dqinfo * ) 
dquot_quotactl_ops extern const s#quotactl_ops dquot_quotactl_ops 

/* fs/quota/netlink.o */
quota_send_warning extern void quota_send_warning ( short , unsigned int , t#dev_t , const char ) 

/* fs/quota/quota_tree.o */
s##nameidata
s##mnt_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s#qtree_fmt_operations struct qtree_fmt_operations { void ( * mem2disk_dqblk ) ( void * , s#dquot * ) ; void ( * disk2mem_dqblk ) ( s#dquot * , void * ) ; int ( * is_id ) ( void * , s#dquot * ) ; } 
s#qtree_mem_dqinfo struct qtree_mem_dqinfo { s#super_block * dqi_sb ; int dqi_type ; unsigned int dqi_blocks ; unsigned int dqi_free_blk ; unsigned int dqi_free_entry ; unsigned int dqi_blocksize_bits ; unsigned int dqi_entry_size ; unsigned int dqi_usable_bs ; unsigned int dqi_qtree_depth ; s#qtree_fmt_operations * dqi_ops ; } 
qtree_entry_unused int qtree_entry_unused ( s#qtree_mem_dqinfo * , char * ) 
qtree_write_dquot int qtree_write_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_delete_dquot int qtree_delete_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_read_dquot int qtree_read_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 
qtree_release_dquot int qtree_release_dquot ( s#qtree_mem_dqinfo * , s#dquot * ) 

/* fs/read_write.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##vfsmount
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s##poll_table_struct
generic_ro_fops extern const s#file_operations generic_ro_fops 
generic_file_llseek_unlocked extern t#loff_t generic_file_llseek_unlocked ( s#file * , t#loff_t , int ) 
generic_file_llseek extern t#loff_t generic_file_llseek ( s#file * , t#loff_t , int ) 
noop_llseek extern t#loff_t noop_llseek ( s#file * , t#loff_t , int ) 
no_llseek extern t#loff_t no_llseek ( s#file * , t#loff_t , int ) 
default_llseek extern t#loff_t default_llseek ( s#file * , t#loff_t , int ) 
vfs_llseek extern t#loff_t vfs_llseek ( s#file * , t#loff_t , int ) 
do_sync_read extern t#ssize_t do_sync_read ( s#file * , char * , t#size_t , t#loff_t * ) 
vfs_read extern t#ssize_t vfs_read ( s#file * , char * , t#size_t , t#loff_t * ) 
do_sync_write extern t#ssize_t do_sync_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
vfs_write extern t#ssize_t vfs_write ( s#file * , const char * , t#size_t , t#loff_t * ) 
iov_shorten unsigned long iov_shorten ( s#iovec * , unsigned long , t#size_t ) 
vfs_readv extern t#ssize_t vfs_readv ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 
vfs_writev extern t#ssize_t vfs_writev ( s#file * , const s#iovec * , unsigned long , t#loff_t * ) 

/* fs/readdir.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
vfs_readdir extern int vfs_readdir ( s#file * , t#filldir_t , void * ) 

/* fs/select.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##poll_table_page
s#poll_table_entry struct poll_table_entry { s#file * filp ; unsigned long key ; t#wait_queue_t wait ; t#wait_queue_head_t * wait_address ; } 
s#poll_wqueues struct poll_wqueues { t#poll_table pt ; s#poll_table_page * table ; s#task_struct * polling_task ; int triggered ; int error ; int inline_index ; s#poll_table_entry inline_entries [ ( ( 832 - 256 ) / sizeof ( struct poll_table_entry ) ) ] ; } 
poll_initwait extern void poll_initwait ( s#poll_wqueues * ) 
poll_freewait extern void poll_freewait ( s#poll_wqueues * ) 
poll_schedule_timeout extern int poll_schedule_timeout ( s#poll_wqueues * , int , t#ktime_t * , unsigned long ) 

/* fs/seq_file.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
seq_open int seq_open ( s#file * , const s#seq_operations * ) 
seq_read t#ssize_t seq_read ( s#file * , char * , t#size_t , t#loff_t * ) 
seq_lseek t#loff_t seq_lseek ( s#file * , t#loff_t , int ) 
seq_release int seq_release ( s#inode * , s#file * ) 
seq_escape int seq_escape ( s#seq_file * , const char * , const char * ) 
seq_printf int seq_printf ( s#seq_file * , const char * , ... ) 
mangle_path char * mangle_path ( char * , char * , char * ) 
seq_path int seq_path ( s#seq_file * , s#path * , char * ) 
seq_bitmap int seq_bitmap ( s#seq_file * , const unsigned long * , unsigned int ) 
seq_bitmap_list int seq_bitmap_list ( s#seq_file * , const unsigned long * , unsigned int ) 
single_open int single_open ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * ) 
single_open_size int single_open_size ( s#file * , int ( * ) ( s#seq_file * , void * ) , void * , t#size_t ) 
single_release int single_release ( s#inode * , s#file * ) 
seq_release_private int seq_release_private ( s#inode * , s#file * ) 
__seq_open_private void * __seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_open_private int seq_open_private ( s#file * , const s#seq_operations * , int ) 
seq_putc int seq_putc ( s#seq_file * , char ) 
seq_puts int seq_puts ( s#seq_file * , const char * ) 
seq_write int seq_write ( s#seq_file * , const void * , t#size_t ) 
seq_list_start extern s#list_head * seq_list_start ( s#list_head * , t#loff_t ) 
seq_list_start_head extern s#list_head * seq_list_start_head ( s#list_head * , t#loff_t ) 
seq_list_next extern s#list_head * seq_list_next ( void * , s#list_head * , t#loff_t * ) 
seq_hlist_start extern s#hlist_node * seq_hlist_start ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head extern s#hlist_node * seq_hlist_start_head ( s#hlist_head * , t#loff_t ) 
seq_hlist_next extern s#hlist_node * seq_hlist_next ( void * , s#hlist_head * , t#loff_t * ) 
seq_hlist_start_rcu extern s#hlist_node * seq_hlist_start_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_start_head_rcu extern s#hlist_node * seq_hlist_start_head_rcu ( s#hlist_head * , t#loff_t ) 
seq_hlist_next_rcu extern s#hlist_node * seq_hlist_next_rcu ( void * , s#hlist_head * , t#loff_t * ) 

/* fs/splice.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
generic_file_splice_read extern t#ssize_t generic_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
default_file_splice_read extern t#ssize_t default_file_splice_read ( s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
s#splice_desc struct splice_desc { unsigned int len , total_len ; unsigned int flags ; union { void * userptr ; s#file * file ; void * data ; } u ; t#loff_t pos ; t#size_t num_spliced ; t#bool need_wakeup ; } 
pipe_to_file extern int pipe_to_file ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
t#splice_actor typedef int ( splice_actor ) ( s#pipe_inode_info * , s#pipe_buffer * , s#splice_desc * ) 
splice_from_pipe_feed extern int splice_from_pipe_feed ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
splice_from_pipe_next extern int splice_from_pipe_next ( s#pipe_inode_info * , s#splice_desc * ) 
splice_from_pipe_begin extern void splice_from_pipe_begin ( s#splice_desc * ) 
splice_from_pipe_end extern void splice_from_pipe_end ( s#pipe_inode_info * , s#splice_desc * ) 
__splice_from_pipe extern t#ssize_t __splice_from_pipe ( s#pipe_inode_info * , s#splice_desc * , t#splice_actor * ) 
t#splice_write_actor typedef t#ssize_t ( splice_write_actor ) ( s#pipe_inode_info * , s#splice_desc * ) 
splice_write_to_file extern t#ssize_t splice_write_to_file ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int , t#splice_write_actor * ) 
generic_file_splice_write extern t#ssize_t generic_file_splice_write ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
generic_splice_sendpage extern t#ssize_t generic_splice_sendpage ( s#pipe_inode_info * , s#file * , t#loff_t * , t#size_t , unsigned int ) 
t#splice_direct_actor typedef int ( splice_direct_actor ) ( s#pipe_inode_info * , s#splice_desc * ) 
splice_direct_to_actor extern t#ssize_t splice_direct_to_actor ( s#file * , s#splice_desc * , t#splice_direct_actor * ) 

/* fs/stack.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
fsstack_copy_inode_size extern void fsstack_copy_inode_size ( s#inode * , s#inode * ) 
fsstack_copy_attr_all extern void fsstack_copy_attr_all ( s#inode * , const s#inode * ) 

/* fs/stat.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
generic_fillattr extern void generic_fillattr ( s#inode * , s#kstat * ) 
vfs_getattr extern int vfs_getattr ( s#vfsmount * , s#dentry * , s#kstat * ) 
vfs_fstat extern int vfs_fstat ( unsigned int , s#kstat * ) 
vfs_fstatat extern int vfs_fstatat ( int , const char * , s#kstat * , int ) 
vfs_stat extern int vfs_stat ( const char * , s#kstat * ) 
vfs_lstat extern int vfs_lstat ( const char * , s#kstat * ) 
inode_add_bytes void inode_add_bytes ( s#inode * , t#loff_t ) 
inode_sub_bytes void inode_sub_bytes ( s#inode * , t#loff_t ) 
inode_get_bytes t#loff_t inode_get_bytes ( s#inode * ) 
inode_set_bytes void inode_set_bytes ( s#inode * , t#loff_t ) 

/* fs/statfs.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
vfs_statfs extern int vfs_statfs ( s#path * , s#kstatfs * ) 

/* fs/super.o */
s##nameidata
s##mnt_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##kstatfs
s##seq_file
s##xattr_handler
s##mtd_info
deactivate_locked_super void deactivate_locked_super ( s#super_block * ) 
deactivate_super void deactivate_super ( s#super_block * ) 
lock_super extern void lock_super ( s#super_block * ) 
unlock_super extern void unlock_super ( s#super_block * ) 
generic_shutdown_super void generic_shutdown_super ( s#super_block * ) 
sget s#super_block * sget ( s#file_system_type * , int ( * ) ( s#super_block * , void * ) , int ( * ) ( s#super_block * , void * ) , void * ) 
drop_super extern void drop_super ( s#super_block * ) 
get_super extern s#super_block * get_super ( s#block_device * ) 
get_super_thawed extern s#super_block * get_super_thawed ( s#block_device * ) 
get_anon_bdev int get_anon_bdev ( t#dev_t * ) 
free_anon_bdev void free_anon_bdev ( t#dev_t ) 
set_anon_super int set_anon_super ( s#super_block * , void * ) 
kill_anon_super void kill_anon_super ( s#super_block * ) 
kill_litter_super void kill_litter_super ( s#super_block * ) 
mount_ns extern s#dentry * mount_ns ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_bdev extern s#dentry * mount_bdev ( s#file_system_type * , int , const char * , void * , int ( * ) ( s#super_block * , void * , int ) ) 
kill_block_super void kill_block_super ( s#super_block * ) 
mount_nodev extern s#dentry * mount_nodev ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
mount_single extern s#dentry * mount_single ( s#file_system_type * , int , void * , int ( * ) ( s#super_block * , void * , int ) ) 
freeze_super extern int freeze_super ( s#super_block * ) 
thaw_super extern int thaw_super ( s#super_block * ) 

/* fs/sync.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
sync_filesystem extern int sync_filesystem ( s#super_block * ) 
vfs_fsync_range extern int vfs_fsync_range ( s#file * , t#loff_t , t#loff_t , int ) 
vfs_fsync extern int vfs_fsync ( s#file * , int ) 
generic_write_sync extern int generic_write_sync ( s#file * , t#loff_t , t#loff_t ) 

/* fs/sysfs/bin.o */
s##sock
s#sysfs_elem_dir struct sysfs_elem_dir { s#kobject * kobj ; unsigned long subdirs ; s#rb_root inode_tree ; s#rb_root name_tree ; } 
s#sysfs_elem_symlink struct sysfs_elem_symlink { s#sysfs_dirent * target_sd ; } 
s##sysfs_open_dirent
s#sysfs_elem_attr struct sysfs_elem_attr { s#attribute * attr ; s#sysfs_open_dirent * open ; } 
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s#sysfs_elem_bin_attr struct sysfs_elem_bin_attr { s#bin_attribute * bin_attr ; s#hlist_head buffers ; } 
s#sysfs_inode_attrs struct sysfs_inode_attrs { s#iattr ia_iattr ; void * ia_secdata ; t#u32 ia_secdata_len ; } 
s#sysfs_dirent struct sysfs_dirent { t#atomic_t s_count ; t#atomic_t s_active ; s#sysfs_dirent * s_parent ; s#sysfs_dirent * s_sibling ; const char * s_name ; s#rb_node inode_node ; s#rb_node name_node ; const void * s_ns ; union { s#sysfs_elem_dir s_dir ; s#sysfs_elem_symlink s_symlink ; s#sysfs_elem_attr s_attr ; s#sysfs_elem_bin_attr s_bin_attr ; } ; unsigned int s_flags ; unsigned short s_mode ; t#ino_t s_ino ; s#sysfs_inode_attrs * s_iattr ; } 
sysfs_create_bin_file int sysfs_create_bin_file ( s#kobject * , const s#bin_attribute * ) 
sysfs_remove_bin_file void sysfs_remove_bin_file ( s#kobject * , const s#bin_attribute * ) 

/* fs/sysfs/dir.o */
s##sock
s##sysfs_open_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
sysfs_get_dirent s#sysfs_dirent * sysfs_get_dirent ( s#sysfs_dirent * , const void * , const unsigned char * ) 

/* fs/sysfs/file.o */
s##sock
s##sysfs_open_dirent
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
sysfs_notify_dirent void sysfs_notify_dirent ( s#sysfs_dirent * ) 
sysfs_notify void sysfs_notify ( s#kobject * , const char * , const char * ) 
sysfs_add_file_to_group int sysfs_add_file_to_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_chmod_file int sysfs_chmod_file ( s#kobject * , const s#attribute * , t#mode_t ) 
sysfs_remove_file_from_group void sysfs_remove_file_from_group ( s#kobject * , const s#attribute * , const char * ) 
sysfs_schedule_callback int sysfs_schedule_callback ( s#kobject * , void ( * ) ( void * ) , void * , s#module * ) 
sysfs_create_file int sysfs_create_file ( s#kobject * , const s#attribute * ) 
sysfs_remove_file void sysfs_remove_file ( s#kobject * , const s#attribute * ) 
sysfs_remove_files void sysfs_remove_files ( s#kobject * , const s#attribute * * ) 
sysfs_create_files int sysfs_create_files ( s#kobject * , const s#attribute * * ) 

/* fs/sysfs/group.o */
s##sock
s##sysfs_open_dirent
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
sysfs_merge_group int sysfs_merge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_unmerge_group void sysfs_unmerge_group ( s#kobject * , const s#attribute_group * ) 
sysfs_create_group int sysfs_create_group ( s#kobject * , const s#attribute_group * ) 
sysfs_update_group int sysfs_update_group ( s#kobject * , const s#attribute_group * ) 
sysfs_remove_group void sysfs_remove_group ( s#kobject * , const s#attribute_group * ) 

/* fs/sysfs/mount.o */
s##sock
s##sysfs_open_dirent
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
sysfs_get s#sysfs_dirent * sysfs_get ( s#sysfs_dirent * ) 
sysfs_put void sysfs_put ( s#sysfs_dirent * ) 

/* fs/sysfs/symlink.o */
s##sock
s##sysfs_open_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##mnt_namespace
sysfs_create_link int sysfs_create_link ( s#kobject * , s#kobject * , const char * ) 
sysfs_remove_link void sysfs_remove_link ( s#kobject * , const char * ) 
sysfs_rename_link int sysfs_rename_link ( s#kobject * , s#kobject * , const char * , const char * ) 

/* fs/xattr.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
vfs_setxattr int vfs_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
xattr_getsecurity t#ssize_t xattr_getsecurity ( s#inode * , const char * , void * , t#size_t ) 
vfs_getxattr t#ssize_t vfs_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
vfs_listxattr t#ssize_t vfs_listxattr ( s#dentry * , char * , t#size_t ) 
vfs_removexattr int vfs_removexattr ( s#dentry * , const char * ) 
generic_getxattr t#ssize_t generic_getxattr ( s#dentry * , const char * , void * , t#size_t ) 
generic_listxattr t#ssize_t generic_listxattr ( s#dentry * , char * , t#size_t ) 
generic_setxattr int generic_setxattr ( s#dentry * , const char * , const void * , t#size_t , int ) 
generic_removexattr int generic_removexattr ( s#dentry * , const char * ) 

/* fs/xattr_acl.o */
posix_acl_from_xattr s#posix_acl * posix_acl_from_xattr ( const void * , t#size_t ) 
posix_acl_to_xattr int posix_acl_to_xattr ( const s#posix_acl * , void * , t#size_t ) 

/* fs/xfs/dmapi/xfs_dm.o */
s##mnt_namespace
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##xattr_handler
s##mtd_info
t#__int32_t typedef signed int __int32_t 
t#xfs_tid_t typedef t#__int32_t xfs_tid_t 
s##xfs_ail
t#__uint32_t typedef unsigned int __uint32_t 
t#__uint64_t typedef unsigned long long int __uint64_t 
t#xfs_drfsbno_t typedef t#__uint64_t xfs_drfsbno_t 
t#xfs_drtbno_t typedef t#__uint64_t xfs_drtbno_t 
t#uuid_t typedef struct { unsigned char __u_bits [ 16 ] ; } uuid_t 
t#xfs_dfsbno_t typedef t#__uint64_t xfs_dfsbno_t 
t#xfs_ino_t typedef unsigned long long xfs_ino_t 
t#xfs_agblock_t typedef t#__uint32_t xfs_agblock_t 
t#xfs_agnumber_t typedef t#__uint32_t xfs_agnumber_t 
t#xfs_extlen_t typedef t#__uint32_t xfs_extlen_t 
t#__uint16_t typedef unsigned short int __uint16_t 
t#__uint8_t typedef unsigned char __uint8_t 
s#xfs_sb struct xfs_sb { t#__uint32_t sb_magicnum ; t#__uint32_t sb_blocksize ; t#xfs_drfsbno_t sb_dblocks ; t#xfs_drfsbno_t sb_rblocks ; t#xfs_drtbno_t sb_rextents ; t#uuid_t sb_uuid ; t#xfs_dfsbno_t sb_logstart ; t#xfs_ino_t sb_rootino ; t#xfs_ino_t sb_rbmino ; t#xfs_ino_t sb_rsumino ; t#xfs_agblock_t sb_rextsize ; t#xfs_agblock_t sb_agblocks ; t#xfs_agnumber_t sb_agcount ; t#xfs_extlen_t sb_rbmblocks ; t#xfs_extlen_t sb_logblocks ; t#__uint16_t sb_versionnum ; t#__uint16_t sb_sectsize ; t#__uint16_t sb_inodesize ; t#__uint16_t sb_inopblock ; char sb_fname [ 12 ] ; t#__uint8_t sb_blocklog ; t#__uint8_t sb_sectlog ; t#__uint8_t sb_inodelog ; t#__uint8_t sb_inopblog ; t#__uint8_t sb_agblklog ; t#__uint8_t sb_rextslog ; t#__uint8_t sb_inprogress ; t#__uint8_t sb_imax_pct ; t#__uint64_t sb_icount ; t#__uint64_t sb_ifree ; t#__uint64_t sb_fdblocks ; t#__uint64_t sb_frextents ; t#xfs_ino_t sb_uquotino ; t#xfs_ino_t sb_gquotino ; t#__uint16_t sb_qflags ; t#__uint8_t sb_flags ; t#__uint8_t sb_shared_vn ; t#xfs_extlen_t sb_inoalignmt ; t#__uint32_t sb_unit ; t#__uint32_t sb_width ; t#__uint8_t sb_dirblklog ; t#__uint8_t sb_logsectlog ; t#__uint16_t sb_logsectsize ; t#__uint32_t sb_logsunit ; t#__uint32_t sb_features2 ; t#__uint32_t sb_bad_features2 ; } 
t#xfs_sb_t typedef s#xfs_sb xfs_sb_t 
t#xfs_off_t typedef t#__s64 xfs_off_t 
t#xfs_buf_flags_t typedef unsigned int xfs_buf_flags_t 
E#XFS_BTNUM_CNTi 1 
t#xfs_agino_t typedef t#__uint32_t xfs_agino_t 
s#xfs_perag struct xfs_perag { s#xfs_mount * pag_mount ; t#xfs_agnumber_t pag_agno ; t#atomic_t pag_ref ; char pagf_init ; char pagi_init ; char pagf_metadata ; char pagi_inodeok ; t#__uint8_t pagf_levels [ ( ( int ) E#XFS_BTNUM_CNTi + 1 ) ] ; t#__uint32_t pagf_flcount ; t#xfs_extlen_t pagf_freeblks ; t#xfs_extlen_t pagf_longest ; t#__uint32_t pagf_btreeblks ; t#xfs_agino_t pagi_freecount ; t#xfs_agino_t pagi_count ; t#xfs_agino_t pagl_pagino ; t#xfs_agino_t pagl_leftrec ; t#xfs_agino_t pagl_rightrec ; t#spinlock_t pagb_lock ; s#rb_root pagb_tree ; t#atomic_t pagf_fstrms ; t#spinlock_t pag_ici_lock ; s#radix_tree_root pag_ici_root ; int pag_ici_reclaimable ; s#mutex pag_ici_reclaim_lock ; unsigned long pag_ici_reclaim_cursor ; t#spinlock_t pag_buf_lock ; s#rb_root pag_buf_tree ; s#rcu_head rcu_head ; int pagb_count ; } 
s#shrink_control struct shrink_control { t#gfp_t gfp_mask ; unsigned long nr_to_scan ; } 
s#shrinker struct shrinker { int ( * shrink ) ( s#shrinker * , s#shrink_control * ) ; int seeks ; long batch ; s#list_head list ; long nr ; } 
s#xfs_buftarg struct xfs_buftarg { t#dev_t bt_dev ; s#block_device * bt_bdev ; s#backing_dev_info * bt_bdi ; s#xfs_mount * bt_mount ; unsigned int bt_bsize ; unsigned int bt_sshift ; t#size_t bt_smask ; s#task_struct * bt_task ; s#list_head bt_delwrite_queue ; t#spinlock_t bt_delwrite_lock ; unsigned long bt_flags ; s#shrinker bt_shrinker ; s#list_head bt_lru ; t#spinlock_t bt_lru_lock ; unsigned int bt_lru_nr ; } 
t#xfs_buftarg_t typedef s#xfs_buftarg xfs_buftarg_t 
t#xfs_daddr_t typedef t#__s64 xfs_daddr_t 
t#xfs_buf_iodone_t typedef void ( * xfs_buf_iodone_t ) ( s#xfs_buf * ) 
s#xfs_buf struct xfs_buf { s#rb_node b_rbnode ; t#xfs_off_t b_file_offset ; t#size_t b_buffer_length ; t#atomic_t b_hold ; t#atomic_t b_lru_ref ; t#xfs_buf_flags_t b_flags ; s#semaphore b_sema ; s#list_head b_lru ; t#xfs_buf_flags_t b_lru_flags ; t#wait_queue_head_t b_waiters ; s#list_head b_list ; s#xfs_perag * b_pag ; t#xfs_buftarg_t * b_target ; t#xfs_daddr_t b_bn ; t#size_t b_count_desired ; void * b_addr ; s#work_struct b_iodone_work ; t#xfs_buf_iodone_t b_iodone ; s#completion b_iowait ; void * b_fspriv ; void * b_fspriv2 ; s#page * * b_pages ; s#page * b_page_array [ 2 ] ; unsigned long b_queuetime ; t#atomic_t b_pin_count ; t#atomic_t b_io_remaining ; unsigned int b_page_count ; unsigned int b_offset ; unsigned short b_error ; } 
s##log
s##xfs_quotainfo
s#xfs_trans_reservations struct xfs_trans_reservations { t#uint tr_write ; t#uint tr_itruncate ; t#uint tr_rename ; t#uint tr_link ; t#uint tr_remove ; t#uint tr_symlink ; t#uint tr_create ; t#uint tr_mkdir ; t#uint tr_ifree ; t#uint tr_ichange ; t#uint tr_growdata ; t#uint tr_swrite ; t#uint tr_addafork ; t#uint tr_writeid ; t#uint tr_attrinval ; t#uint tr_attrset ; t#uint tr_attrrm ; t#uint tr_clearagi ; t#uint tr_growrtalloc ; t#uint tr_growrtzero ; t#uint tr_growrtfree ; } 
t#xfs_trans_reservations_t typedef s#xfs_trans_reservations xfs_trans_reservations_t 
t#xfs_dahash_t typedef t#__uint32_t xfs_dahash_t 
s#xfs_name struct xfs_name { const unsigned char * name ; int len ; } 
e#xfs_dacmp enum xfs_dacmp { XFS_CMP_DIFFERENT , XFS_CMP_EXACT , XFS_CMP_CASE } 
t#xfs_fsblock_t typedef t#__uint64_t xfs_fsblock_t 
s#xfs_bmap_free_item struct xfs_bmap_free_item { t#xfs_fsblock_t xbfi_startblock ; t#xfs_extlen_t xbfi_blockcount ; s#xfs_bmap_free_item * xbfi_next ; } 
t#xfs_bmap_free_item_t typedef s#xfs_bmap_free_item xfs_bmap_free_item_t 
s#xfs_bmap_free struct xfs_bmap_free { t#xfs_bmap_free_item_t * xbf_first ; int xbf_count ; int xbf_low ; } 
s#xfs_log_callback struct xfs_log_callback { s#xfs_log_callback * cb_next ; void ( * cb_func ) ( void * , int ) ; void * cb_arg ; } 
t#xfs_log_callback_t typedef s#xfs_log_callback xfs_log_callback_t 
s##xlog_ticket
t#__int64_t typedef signed long long int __int64_t 
t#xfs_lsn_t typedef t#__int64_t xfs_lsn_t 
s##xfs_dquot_acct
t#int64_t typedef t#__s64 int64_t 
s#xfs_trans_header struct xfs_trans_header { t#uint th_magic ; t#uint th_type ; t#__int32_t th_tid ; t#uint th_num_items ; } 
t#xfs_trans_header_t typedef s#xfs_trans_header xfs_trans_header_t 
s#xfs_trans struct xfs_trans { unsigned int t_magic ; t#xfs_log_callback_t t_logcb ; unsigned int t_type ; unsigned int t_log_res ; unsigned int t_log_count ; unsigned int t_blk_res ; unsigned int t_blk_res_used ; unsigned int t_rtx_res ; unsigned int t_rtx_res_used ; s#xlog_ticket * t_ticket ; t#xfs_lsn_t t_lsn ; t#xfs_lsn_t t_commit_lsn ; s#xfs_mount * t_mountp ; s#xfs_dquot_acct * t_dqinfo ; unsigned int t_flags ; t#int64_t t_icount_delta ; t#int64_t t_ifree_delta ; t#int64_t t_fdblocks_delta ; t#int64_t t_res_fdblocks_delta ; t#int64_t t_frextents_delta ; t#int64_t t_res_frextents_delta ; t#int64_t t_dblocks_delta ; t#int64_t t_agcount_delta ; t#int64_t t_imaxpct_delta ; t#int64_t t_rextsize_delta ; t#int64_t t_rbmblocks_delta ; t#int64_t t_rblocks_delta ; t#int64_t t_rextents_delta ; t#int64_t t_rextslog_delta ; s#list_head t_items ; t#xfs_trans_header_t t_header ; s#list_head t_busy ; unsigned long t_pflags ; } 
t#xfs_dablk_t typedef t#__uint32_t xfs_dablk_t 
s#xfs_da_args struct xfs_da_args { const t#__uint8_t * name ; int namelen ; t#__uint8_t * value ; int valuelen ; int flags ; t#xfs_dahash_t hashval ; t#xfs_ino_t inumber ; s#xfs_inode * dp ; t#xfs_fsblock_t * firstblock ; s#xfs_bmap_free * flist ; s#xfs_trans * trans ; t#xfs_extlen_t total ; int whichfork ; t#xfs_dablk_t blkno ; int index ; t#xfs_dablk_t rmtblkno ; int rmtblkcnt ; t#xfs_dablk_t blkno2 ; int index2 ; t#xfs_dablk_t rmtblkno2 ; int rmtblkcnt2 ; int op_flags ; e#xfs_dacmp cmpresult ; } 
s#xfs_nameops struct xfs_nameops { t#xfs_dahash_t ( * hashname ) ( s#xfs_name * ) ; e#xfs_dacmp ( * compname ) ( s#xfs_da_args * , const unsigned char * , int ) ; } 
s##xfs_chash
s##xfs_qmops
s#xfs_icsb_cnts struct xfs_icsb_cnts { t#uint64_t icsb_fdblocks ; t#uint64_t icsb_ifree ; t#uint64_t icsb_icount ; unsigned long icsb_flags ; } 
t#xfs_icsb_cnts_t typedef s#xfs_icsb_cnts xfs_icsb_cnts_t 
s##xfs_mru_cache
E#XFS_LOWSP_MAX ( 0 ) + 5 
s##workqueue_struct
s#xfs_mount struct xfs_mount { s#super_block * m_super ; t#xfs_tid_t m_tid ; s#xfs_ail * m_ail ; t#xfs_sb_t m_sb ; t#spinlock_t m_sb_lock ; s#xfs_buf * m_sb_bp ; char * m_fsname ; int m_fsname_len ; char * m_rtname ; char * m_logname ; int m_bsize ; t#xfs_agnumber_t m_agfrotor ; t#xfs_agnumber_t m_agirotor ; t#spinlock_t m_agirotor_lock ; t#xfs_agnumber_t m_maxagi ; t#uint m_readio_log ; t#uint m_readio_blocks ; t#uint m_writeio_log ; t#uint m_writeio_blocks ; s#log * m_log ; int m_logbufs ; int m_logbsize ; t#uint m_rsumlevels ; t#uint m_rsumsize ; s#xfs_inode * m_rbmip ; s#xfs_inode * m_rsumip ; s#xfs_inode * m_rootip ; s#xfs_quotainfo * m_quotainfo ; t#xfs_buftarg_t * m_ddev_targp ; t#xfs_buftarg_t * m_logdev_targp ; t#xfs_buftarg_t * m_rtdev_targp ; t#__uint8_t m_blkbit_log ; t#__uint8_t m_blkbb_log ; t#__uint8_t m_agno_log ; t#__uint8_t m_agino_log ; t#__uint16_t m_inode_cluster_size ; t#uint m_blockmask ; t#uint m_blockwsize ; t#uint m_blockwmask ; t#uint m_alloc_mxr [ 2 ] ; t#uint m_alloc_mnr [ 2 ] ; t#uint m_bmap_dmxr [ 2 ] ; t#uint m_bmap_dmnr [ 2 ] ; t#uint m_inobt_mxr [ 2 ] ; t#uint m_inobt_mnr [ 2 ] ; t#uint m_ag_maxlevels ; t#uint m_bm_maxlevels [ 2 ] ; t#uint m_in_maxlevels ; s#radix_tree_root m_perag_tree ; t#spinlock_t m_perag_lock ; s#mutex m_growlock ; int m_fixedfsid [ 2 ] ; t#uint m_dmevmask ; t#__uint64_t m_flags ; t#uint m_dir_node_ents ; t#uint m_attr_node_ents ; int m_ialloc_inos ; int m_ialloc_blks ; int m_inoalign_mask ; t#uint m_qflags ; t#xfs_trans_reservations_t m_reservations ; t#__uint64_t m_maxicount ; t#__uint64_t m_maxioffset ; t#__uint64_t m_resblks ; t#__uint64_t m_resblks_avail ; t#__uint64_t m_resblks_save ; int m_dalign ; int m_swidth ; int m_sinoalign ; int m_attr_magicpct ; int m_dir_magicpct ; t#__uint8_t m_sectbb_log ; const s#xfs_nameops * m_dirnameops ; int m_dirblksize ; int m_dirblkfsbs ; t#xfs_dablk_t m_dirdatablk ; t#xfs_dablk_t m_dirleafblk ; t#xfs_dablk_t m_dirfreeblk ; t#uint m_chsize ; s#xfs_chash * m_chash ; s#xfs_dmops * m_dm_ops ; s#xfs_qmops * m_qm_ops ; t#atomic_t m_active_trans ; t#xfs_icsb_cnts_t * m_sb_cnts ; unsigned long m_icsb_counters ; s#notifier_block m_icsb_notifier ; s#mutex m_icsb_mutex ; s#xfs_mru_cache * m_filestream ; s#delayed_work m_sync_work ; s#delayed_work m_reclaim_work ; s#work_struct m_flush_work ; t#__int64_t m_update_flags ; s#shrinker m_inode_shrink ; t#int64_t m_low_space [ E#XFS_LOWSP_MAX ] ; const char * m_data_workqueue_name ; s#workqueue_struct * m_data_workqueue ; const char * m_unwritten_workqueue_name ; s#workqueue_struct * m_unwritten_workqueue ; s#vfsmount * m_vfsmount ; t#spinlock_t m_vfsmount_lock ; const char * m_mtpt ; } 
s##xfs_dquot
s#xfs_imap struct xfs_imap { t#xfs_daddr_t im_blkno ; t#ushort im_len ; t#ushort im_boffset ; } 
s#xfs_btree_block struct xfs_btree_block { t#__be32 bb_magic ; t#__be16 bb_level ; t#__be16 bb_numrecs ; union { struct { t#__be32 bb_leftsib ; t#__be32 bb_rightsib ; } s ; struct { t#__be64 bb_leftsib ; t#__be64 bb_rightsib ; } l ; } bb_u ; } 
s#xfs_bmbt_rec_host struct xfs_bmbt_rec_host { t#__uint64_t l0 , l1 ; } 
t#xfs_bmbt_rec_host_t typedef s#xfs_bmbt_rec_host xfs_bmbt_rec_host_t 
t#xfs_extnum_t typedef t#__int32_t xfs_extnum_t 
s#xfs_ext_irec struct xfs_ext_irec { t#xfs_bmbt_rec_host_t * er_extbuf ; t#xfs_extnum_t er_extoff ; t#xfs_extnum_t er_extcount ; } 
t#xfs_ext_irec_t typedef s#xfs_ext_irec xfs_ext_irec_t 
t#xfs_dev_t typedef t#__u32 xfs_dev_t 
s#xfs_ifork struct xfs_ifork { int if_bytes ; int if_real_bytes ; s#xfs_btree_block * if_broot ; short if_broot_bytes ; unsigned char if_flags ; unsigned char if_ext_max ; union { t#xfs_bmbt_rec_host_t * if_extents ; t#xfs_ext_irec_t * if_ext_irec ; char * if_data ; } if_u1 ; union { t#xfs_bmbt_rec_host_t if_inline_ext [ 2 ] ; char if_inline_data [ 32 ] ; t#xfs_dev_t if_rdev ; t#uuid_t if_uuid ; } if_u2 ; } 
t#xfs_ifork_t typedef s#xfs_ifork xfs_ifork_t 
s#xfs_log_item_desc struct xfs_log_item_desc { s#xfs_log_item * lid_item ; t#ushort lid_size ; unsigned char lid_flags ; s#list_head lid_trans ; } 
s#xfs_log_iovec struct xfs_log_iovec { void * i_addr ; int i_len ; t#uint i_type ; } 
s#xfs_item_ops struct xfs_item_ops { t#uint ( * iop_size ) ( t#xfs_log_item_t * ) ; void ( * iop_format ) ( t#xfs_log_item_t * , s#xfs_log_iovec * ) ; void ( * iop_pin ) ( t#xfs_log_item_t * ) ; void ( * iop_unpin ) ( t#xfs_log_item_t * , int ) ; t#uint ( * iop_trylock ) ( t#xfs_log_item_t * ) ; void ( * iop_unlock ) ( t#xfs_log_item_t * ) ; t#xfs_lsn_t ( * iop_committed ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; void ( * iop_push ) ( t#xfs_log_item_t * ) ; t#bool ( * iop_pushbuf ) ( t#xfs_log_item_t * ) ; void ( * iop_committing ) ( t#xfs_log_item_t * , t#xfs_lsn_t ) ; } 
s#xfs_log_vec struct xfs_log_vec { s#xfs_log_vec * lv_next ; int lv_niovecs ; s#xfs_log_iovec * lv_iovecp ; s#xfs_log_item * lv_item ; char * lv_buf ; int lv_buf_len ; } 
s#xfs_log_item struct xfs_log_item { s#list_head li_ail ; t#xfs_lsn_t li_lsn ; s#xfs_log_item_desc * li_desc ; s#xfs_mount * li_mountp ; s#xfs_ail * li_ailp ; t#uint li_type ; t#uint li_flags ; s#xfs_log_item * li_bio_list ; void ( * li_cb ) ( s#xfs_buf * , s#xfs_log_item * ) ; s#xfs_item_ops * li_ops ; s#list_head li_cil ; s#xfs_log_vec * li_lv ; t#xfs_lsn_t li_seq ; } 
t#xfs_log_item_t typedef s#xfs_log_item xfs_log_item_t 
s#xfs_bmbt_rec struct xfs_bmbt_rec { t#__be64 l0 , l1 ; } 
s#xfs_inode_log_format struct xfs_inode_log_format { t#__uint16_t ilf_type ; t#__uint16_t ilf_size ; t#__uint32_t ilf_fields ; t#__uint16_t ilf_asize ; t#__uint16_t ilf_dsize ; t#__uint64_t ilf_ino ; union { t#__uint32_t ilfu_rdev ; t#uuid_t ilfu_uuid ; } ilf_u ; t#__int64_t ilf_blkno ; t#__int32_t ilf_len ; t#__int32_t ilf_boffset ; } 
t#xfs_inode_log_format_t typedef s#xfs_inode_log_format xfs_inode_log_format_t 
s#xfs_inode_log_item struct xfs_inode_log_item { t#xfs_log_item_t ili_item ; s#xfs_inode * ili_inode ; t#xfs_lsn_t ili_flush_lsn ; t#xfs_lsn_t ili_last_lsn ; unsigned short ili_lock_flags ; unsigned short ili_logged ; unsigned int ili_last_fields ; s#xfs_bmbt_rec * ili_extents_buf ; s#xfs_bmbt_rec * ili_aextents_buf ; t#xfs_inode_log_format_t ili_format ; } 
t#mrlock_t typedef struct { s#rw_semaphore mr_lock ; } mrlock_t 
t#__int8_t typedef signed char __int8_t 
s#xfs_ictimestamp struct xfs_ictimestamp { t#__int32_t t_sec ; t#__int32_t t_nsec ; } 
t#xfs_ictimestamp_t typedef s#xfs_ictimestamp xfs_ictimestamp_t 
t#xfs_fsize_t typedef t#__int64_t xfs_fsize_t 
t#__int16_t typedef signed short int __int16_t 
t#xfs_aextnum_t typedef t#__int16_t xfs_aextnum_t 
s#xfs_icdinode struct xfs_icdinode { t#__uint16_t di_magic ; t#__uint16_t di_mode ; t#__int8_t di_version ; t#__int8_t di_format ; t#__uint16_t di_onlink ; t#__uint32_t di_uid ; t#__uint32_t di_gid ; t#__uint32_t di_nlink ; t#__uint16_t di_projid_lo ; t#__uint16_t di_projid_hi ; t#__uint8_t di_pad [ 6 ] ; t#__uint16_t di_flushiter ; t#xfs_ictimestamp_t di_atime ; t#xfs_ictimestamp_t di_mtime ; t#xfs_ictimestamp_t di_ctime ; t#xfs_fsize_t di_size ; t#xfs_drfsbno_t di_nblocks ; t#xfs_extlen_t di_extsize ; t#xfs_extnum_t di_nextents ; t#xfs_aextnum_t di_anextents ; t#__uint8_t di_forkoff ; t#__int8_t di_aformat ; t#__uint32_t di_dmevmask ; t#__uint16_t di_dmstate ; t#__uint16_t di_flags ; t#__uint32_t di_gen ; } 
t#xfs_icdinode_t typedef s#xfs_icdinode xfs_icdinode_t 
s#xfs_inode struct xfs_inode { s#xfs_mount * i_mount ; s#xfs_dquot * i_udquot ; s#xfs_dquot * i_gdquot ; t#xfs_ino_t i_ino ; s#xfs_imap i_imap ; t#xfs_ifork_t * i_afp ; t#xfs_ifork_t i_df ; s#xfs_trans * i_transp ; s#xfs_inode_log_item * i_itemp ; t#mrlock_t i_lock ; t#mrlock_t i_iolock ; s#completion i_flush ; t#atomic_t i_pincount ; t#wait_queue_head_t i_ipin_wait ; t#spinlock_t i_flags_lock ; unsigned short i_flags ; unsigned char i_update_core ; unsigned int i_delayed_blks ; t#xfs_icdinode_t i_d ; t#xfs_fsize_t i_size ; t#xfs_fsize_t i_new_size ; t#atomic_t i_iocount ; s#inode i_vnode ; } 
t#xfs_send_data_t typedef int ( * xfs_send_data_t ) ( int , s#xfs_inode * , t#loff_t , t#size_t , int , int * ) 
t#xfs_send_mmap_t typedef int ( * xfs_send_mmap_t ) ( s#vm_area_struct * , t#uint ) 
t#xfs_send_destroy_t typedef int ( * xfs_send_destroy_t ) ( s#xfs_inode * , t#dm_right_t ) 
t#xfs_send_namesp_t typedef int ( * xfs_send_namesp_t ) ( t#dm_eventtype_t , s#xfs_mount * , s#xfs_inode * , t#dm_right_t , s#xfs_inode * , t#dm_right_t , const unsigned char * , const unsigned char * , t#mode_t , int , int ) 
t#xfs_send_mount_t typedef int ( * xfs_send_mount_t ) ( s#xfs_mount * , t#dm_right_t , char * , char * ) 
t#xfs_send_unmount_t typedef void ( * xfs_send_unmount_t ) ( s#xfs_mount * , s#xfs_inode * , t#dm_right_t , t#mode_t , int , int ) 
s#xfs_dmops struct xfs_dmops { t#xfs_send_data_t xfs_send_data ; t#xfs_send_mmap_t xfs_send_mmap ; t#xfs_send_destroy_t xfs_send_destroy ; t#xfs_send_namesp_t xfs_send_namesp ; t#xfs_send_mount_t xfs_send_mount ; t#xfs_send_unmount_t xfs_send_unmount ; } 
xfs_dmcore_xfs extern s#xfs_dmops xfs_dmcore_xfs 

/* fs/xfs/linux-2.6/xfs_ksyms.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##xattr_handler
s##mtd_info
s#xfs_ail_cursor struct xfs_ail_cursor { s#xfs_ail_cursor * next ; s#xfs_log_item * item ; } 
s#xfs_ail struct xfs_ail { s#xfs_mount * xa_mount ; s#task_struct * xa_task ; s#list_head xa_ail ; t#xfs_lsn_t xa_target ; s#xfs_ail_cursor xa_cursors ; t#spinlock_t xa_lock ; t#xfs_lsn_t xa_last_pushed_lsn ; } 
t#xlog_tid_t typedef t#__uint32_t xlog_tid_t 
s#xlog_res struct xlog_res { t#uint r_len ; t#uint r_type ; } 
t#xlog_res_t typedef s#xlog_res xlog_res_t 
s#xlog_ticket struct xlog_ticket { t#wait_queue_head_t t_wait ; s#list_head t_queue ; t#xlog_tid_t t_tid ; t#atomic_t t_ref ; int t_curr_res ; int t_unit_res ; char t_ocnt ; char t_cnt ; char t_clientid ; char t_flags ; t#uint t_trans_type ; t#uint t_res_num ; t#uint t_res_num_ophdrs ; t#uint t_res_arr_sum ; t#uint t_res_o_flow ; t#xlog_res_t t_res_arr [ 15 ] ; } 
s#xfs_cil_ctx struct xfs_cil_ctx { s#xfs_cil * cil ; t#xfs_lsn_t sequence ; t#xfs_lsn_t start_lsn ; t#xfs_lsn_t commit_lsn ; s#xlog_ticket * ticket ; int nvecs ; int space_used ; s#list_head busy_extents ; s#xfs_log_vec * lv_chain ; t#xfs_log_callback_t log_cb ; s#list_head committing ; } 
s#xfs_cil struct xfs_cil { s#log * xc_log ; s#list_head xc_cil ; t#spinlock_t xc_cil_lock ; s#xfs_cil_ctx * xc_ctx ; s#rw_semaphore xc_ctx_lock ; s#list_head xc_committing ; t#wait_queue_head_t xc_commit_wait ; t#xfs_lsn_t xc_current_sequence ; } 
s#xlog_rec_header struct xlog_rec_header { t#__be32 h_magicno ; t#__be32 h_cycle ; t#__be32 h_version ; t#__be32 h_len ; t#__be64 h_lsn ; t#__be64 h_tail_lsn ; t#__be32 h_chksum ; t#__be32 h_prev_block ; t#__be32 h_num_logops ; t#__be32 h_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; t#__be32 h_fmt ; t#uuid_t h_fs_uuid ; t#__be32 h_size ; } 
t#xlog_rec_header_t typedef s#xlog_rec_header xlog_rec_header_t 
s#xlog_rec_ext_header struct xlog_rec_ext_header { t#__be32 xh_cycle ; t#__be32 xh_cycle_data [ ( 32 * 1024 ) / ( 1 << 9 ) ] ; } 
t#xlog_rec_ext_header_t typedef s#xlog_rec_ext_header xlog_rec_ext_header_t 
u#xlog_in_core2 union xlog_in_core2 { t#xlog_rec_header_t hic_header ; t#xlog_rec_ext_header_t hic_xheader ; char hic_sector [ 512 ] ; } 
t#xlog_in_core_2_t typedef u#xlog_in_core2 xlog_in_core_2_t 
s#xlog_in_core struct xlog_in_core { t#wait_queue_head_t ic_force_wait ; t#wait_queue_head_t ic_write_wait ; s#xlog_in_core * ic_next ; s#xlog_in_core * ic_prev ; s#xfs_buf * ic_bp ; s#log * ic_log ; int ic_size ; int ic_offset ; int ic_bwritecnt ; unsigned short ic_state ; char * ic_datap ; t#spinlock_t ic_callback_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#xfs_log_callback_t * ic_callback ; t#xfs_log_callback_t * * ic_callback_tail ; t#atomic_t ic_refcnt __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#xlog_in_core_2_t * ic_data ; } 
t#xlog_in_core_t typedef s#xlog_in_core xlog_in_core_t 
s#log struct log { s#xfs_mount * l_mp ; s#xfs_ail * l_ailp ; s#xfs_cil * l_cilp ; s#xfs_buf * l_xbuf ; s#xfs_buftarg * l_targ ; t#uint l_flags ; t#uint l_quotaoffs_flag ; s#list_head * l_buf_cancel_table ; int l_iclog_hsize ; int l_iclog_heads ; t#uint l_sectBBsize ; int l_iclog_size ; int l_iclog_size_log ; int l_iclog_bufs ; t#xfs_daddr_t l_logBBstart ; int l_logsize ; int l_logBBsize ; t#wait_queue_head_t l_flush_wait __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; int l_covered_state ; t#xlog_in_core_t * l_iclog ; t#spinlock_t l_icloglock ; int l_curr_cycle ; int l_prev_cycle ; int l_curr_block ; int l_prev_block ; t#atomic64_t l_last_sync_lsn __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#atomic64_t l_tail_lsn __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; t#spinlock_t l_grant_reserve_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#list_head l_reserveq ; t#atomic64_t l_grant_reserve_head ; t#spinlock_t l_grant_write_lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#list_head l_writeq ; t#atomic64_t l_grant_write_head ; } 
s##xfs_quotainfo
s##xfs_dquot_acct
s##xfs_chash
s##xfs_qmops
s##xfs_mru_cache
s##workqueue_struct
s##xfs_dquot
t#xfs_inode_t typedef s#xfs_inode xfs_inode_t 
xfs_iunlock void xfs_iunlock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_remove int xfs_attr_remove ( s#xfs_inode * , const unsigned char * , int ) 
xfs_iunlock_map_shared void xfs_iunlock_map_shared ( t#xfs_inode_t * , t#uint ) 
xfs_iget int xfs_iget ( s#xfs_mount * , s#xfs_trans * , t#xfs_ino_t , t#uint , t#uint , t#xfs_inode_t * * ) 
t#xfs_fileoff_t typedef t#__uint64_t xfs_fileoff_t 
t#xfs_filblks_t typedef t#__uint64_t xfs_filblks_t 
t#xfs_exntst_t typedef enum { XFS_EXT_NORM , XFS_EXT_UNWRITTEN , XFS_EXT_DMAPI_OFFLINE , XFS_EXT_INVALID } xfs_exntst_t 
s#xfs_bmbt_irec struct xfs_bmbt_irec { t#xfs_fileoff_t br_startoff ; t#xfs_fsblock_t br_startblock ; t#xfs_filblks_t br_blockcount ; t#xfs_exntst_t br_state ; } 
t#xfs_bmap_free_t typedef s#xfs_bmap_free xfs_bmap_free_t 
xfs_bmapi int xfs_bmapi ( s#xfs_trans * , s#xfs_inode * , t#xfs_fileoff_t , t#xfs_filblks_t , int , t#xfs_fsblock_t * , t#xfs_extlen_t , s#xfs_bmbt_irec * , int * , t#xfs_bmap_free_t * ) 
t#xfs_mount_t typedef s#xfs_mount xfs_mount_t 
xfs_internal_inum int xfs_internal_inum ( t#xfs_mount_t * , t#xfs_ino_t ) 
xfs_attr_set int xfs_attr_set ( s#xfs_inode * , const unsigned char * , unsigned char * , int , int ) 
t#xfs_trans_t typedef s#xfs_trans xfs_trans_t 
xfs_trans_reserve int xfs_trans_reserve ( t#xfs_trans_t * , t#uint , t#uint , t#uint , t#uint , t#uint ) 
xfs_trans_ijoin void xfs_trans_ijoin ( s#xfs_trans * , s#xfs_inode * ) 
xfs_free_eofblocks extern int xfs_free_eofblocks ( s#xfs_mount * , s#xfs_inode * , int ) 
kmem_free extern void kmem_free ( const void * ) 
_xfs_trans_commit int _xfs_trans_commit ( t#xfs_trans_t * , t#uint , int * ) 
xfs_ilock void xfs_ilock ( t#xfs_inode_t * , t#uint ) 
xfs_attr_get int xfs_attr_get ( s#xfs_inode * , const unsigned char * , unsigned char * , int * , int ) 
xfs_readdir int xfs_readdir ( s#xfs_inode * , void * , t#size_t , t#xfs_off_t * , t#filldir_t ) 
xfs_setattr int xfs_setattr ( s#xfs_inode * , s#iattr * , int ) 
xfs_trans_alloc t#xfs_trans_t * xfs_trans_alloc ( s#xfs_mount * , t#uint ) 
xfs_trans_cancel void xfs_trans_cancel ( t#xfs_trans_t * , int ) 
xfs_fsync int xfs_fsync ( s#xfs_inode * , int ) 
t#bulkstat_one_pf typedef int ( * bulkstat_one_pf ) ( s#xfs_mount * , t#xfs_ino_t , void * , int , void * , int * , int * ) 
xfs_bulkstat int xfs_bulkstat ( t#xfs_mount_t * , t#xfs_ino_t * , int * , t#bulkstat_one_pf , void * , t#size_t , char * , int * ) 
xfs_ilock_map_shared t#uint xfs_ilock_map_shared ( t#xfs_inode_t * ) 
xfs_trans_log_inode void xfs_trans_log_inode ( t#xfs_trans_t * , s#xfs_inode * , t#uint ) 
s#attrlist_cursor_kern struct attrlist_cursor_kern { t#__u32 hashval ; t#__u32 blkno ; t#__u32 offset ; t#__u16 pad1 ; t#__u8 pad2 ; t#__u8 initted ; } 
xfs_attr_list int xfs_attr_list ( s#xfs_inode * , char * , int , int , s#attrlist_cursor_kern * ) 
kmem_alloc extern void * kmem_alloc ( t#size_t , unsigned int ) 
s#xfs_flock64 struct xfs_flock64 { t#__s16 l_type ; t#__s16 l_whence ; t#__s64 l_start ; t#__s64 l_len ; t#__s32 l_sysid ; t#__u32 l_pid ; t#__s32 l_pad [ 4 ] ; } 
t#xfs_flock64_t typedef s#xfs_flock64 xfs_flock64_t 
xfs_change_file_space int xfs_change_file_space ( s#xfs_inode * , int , t#xfs_flock64_t * , t#xfs_off_t , int ) 
xfs_get_extsz_hint extern t#xfs_extlen_t xfs_get_extsz_hint ( s#xfs_inode * ) 
assfail extern void assfail ( char * , char * , int ) 

/* fs/xfs/linux-2.6/xfs_super.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
xfs_fs_type s#file_system_type xfs_fs_type 

/* fs/xfs/linux-2.6/xfs_trace.o */
__tracepoint_xfs_irele extern s#tracepoint __tracepoint_xfs_irele 

/* init/main.o */
e#system_states extern enum system_states { SYSTEM_BOOTING , SYSTEM_RUNNING , SYSTEM_HALT , SYSTEM_POWER_OFF , SYSTEM_RESTART , SYSTEM_SUSPEND_DISK , } 
system_state extern e#system_states system_state 
reset_devices extern unsigned int reset_devices 
loops_per_jiffy extern unsigned long loops_per_jiffy 

/* init/version.o */
s##user_namespace
init_uts_ns extern s#uts_namespace init_uts_ns 

/* kernel/async.o */
t#async_cookie_t typedef t#u64 async_cookie_t 
t#async_func_ptr typedef void ( async_func_ptr ) ( void * , t#async_cookie_t ) 
async_schedule extern t#async_cookie_t async_schedule ( t#async_func_ptr * , void * ) 
async_schedule_domain extern t#async_cookie_t async_schedule_domain ( t#async_func_ptr * , void * , s#async_domain * ) 
async_synchronize_full extern void async_synchronize_full ( void ) 
async_unregister_domain void async_unregister_domain ( s#async_domain * ) 
async_synchronize_full_domain extern void async_synchronize_full_domain ( s#async_domain * ) 
async_synchronize_cookie_domain extern void async_synchronize_cookie_domain ( t#async_cookie_t , s#async_domain * ) 
async_synchronize_cookie extern void async_synchronize_cookie ( t#async_cookie_t ) 

/* kernel/audit.o */
audit_enabled extern int audit_enabled 
s##audit_buffer
s##audit_context
audit_log_start extern s#audit_buffer * audit_log_start ( s#audit_context * , t#gfp_t , int ) 
audit_log_end extern void audit_log_end ( s#audit_buffer * ) 
audit_log_format extern void audit_log_format ( s#audit_buffer * , const char * , ... ) 
audit_log extern void audit_log ( s#audit_context * , t#gfp_t , int , const char * , ... ) 
audit_log_vformat extern void audit_log_vformat ( s#audit_buffer * , const char * , va_list args ) 
audit_log_untrustedstring extern void audit_log_untrustedstring ( s#audit_buffer * , const char * ) 

/* kernel/auditsc.o */
s##audit_buffer
audit_log_task_context extern void audit_log_task_context ( s#audit_buffer * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
__audit_inode_child extern void __audit_inode_child ( const s#dentry * , const s#inode * ) 

/* kernel/capability.o */
__cap_empty_set extern const t#kernel_cap_t __cap_empty_set 
capable extern t#bool capable ( int ) 
s##key_type
s##key_user
s##keyring_list
ns_capable extern t#bool ns_capable ( s#user_namespace * , int ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
task_ns_capable extern t#bool task_ns_capable ( s#task_struct * , int ) 

/* kernel/cgroup.o */
cgroup_lock_is_held extern int cgroup_lock_is_held ( void ) 
cgroup_lock extern void cgroup_lock ( void ) 
cgroup_unlock extern void cgroup_unlock ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##device
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##cgroupfs_root
cgroup_path int cgroup_path ( const s#cgroup * , char * , int ) 
cgroup_attach_task_all int cgroup_attach_task_all ( s#task_struct * , s#task_struct * ) 
cgroup_lock_live_group extern t#bool cgroup_lock_live_group ( s#cgroup * ) 
s#cgroup_map_cb struct cgroup_map_cb { int ( * fill ) ( s#cgroup_map_cb * , const char * , t#u64 ) ; void * state ; } 
s#cftype struct cftype { char name [ 64 ] ; int private ; t#mode_t mode ; t#size_t max_write_len ; int ( * open ) ( s#inode * , s#file * ) ; t#ssize_t ( * read ) ( s#cgroup * , s#cftype * , s#file * , char * , t#size_t , t#loff_t * ) ; t#u64 ( * read_u64 ) ( s#cgroup * , s#cftype * ) ; t#s64 ( * read_s64 ) ( s#cgroup * , s#cftype * ) ; int ( * read_map ) ( s#cgroup * , s#cftype * , s#cgroup_map_cb * ) ; int ( * read_seq_string ) ( s#cgroup * , s#cftype * , s#seq_file * ) ; t#ssize_t ( * write ) ( s#cgroup * , s#cftype * , s#file * , const char * , t#size_t , t#loff_t * ) ; int ( * write_u64 ) ( s#cgroup * , s#cftype * , t#u64 ) ; int ( * write_s64 ) ( s#cgroup * , s#cftype * , t#s64 ) ; int ( * write_string ) ( s#cgroup * , s#cftype * , const char * ) ; int ( * trigger ) ( s#cgroup * , unsigned int ) ; int ( * release ) ( s#inode * , s#file * ) ; int ( * register_event ) ( s#cgroup * , s#cftype * , s#eventfd_ctx * , const char * ) ; void ( * unregister_event ) ( s#cgroup * , s#cftype * , s#eventfd_ctx * ) ; } 
cgroup_add_file int cgroup_add_file ( s#cgroup * , s#cgroup_subsys * , const s#cftype * ) 
cgroup_add_files int cgroup_add_files ( s#cgroup * , s#cgroup_subsys * , const s#cftype [ ] , int ) 
cgroup_load_subsys extern int cgroup_load_subsys ( s#cgroup_subsys * ) 
cgroup_unload_subsys extern void cgroup_unload_subsys ( s#cgroup_subsys * ) 
__css_put extern void __css_put ( s#cgroup_subsys_state * , int ) 
css_id unsigned short css_id ( s#cgroup_subsys_state * ) 
css_depth unsigned short css_depth ( s#cgroup_subsys_state * ) 
free_css_id void free_css_id ( s#cgroup_subsys * , s#cgroup_subsys_state * ) 
css_lookup s#cgroup_subsys_state * css_lookup ( s#cgroup_subsys * , int ) 

/* kernel/compat.o */
compat_alloc_user_space extern void * compat_alloc_user_space ( unsigned long ) 

/* kernel/cpu.o */
get_online_cpus extern void get_online_cpus ( void ) 
try_get_online_cpus extern t#bool try_get_online_cpus ( void ) 
put_online_cpus extern void put_online_cpus ( void ) 
register_cpu_notifier extern int register_cpu_notifier ( s#notifier_block * ) 
unregister_cpu_notifier extern void unregister_cpu_notifier ( s#notifier_block * ) 
cpu_down int cpu_down ( unsigned int ) 
cpu_bit_bitmap extern const unsigned long cpu_bit_bitmap [ 64 + 1 ] [ ( ( ( 1024 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_all_bits extern const unsigned long cpu_all_bits [ ( ( ( 1024 ) + ( 8 * sizeof ( long ) ) - 1 ) / ( 8 * sizeof ( long ) ) ) ] 
cpu_possible_mask extern const s#cpumask * const cpu_possible_mask 
cpu_online_mask extern const s#cpumask * const cpu_online_mask 
cpu_present_mask extern const s#cpumask * const cpu_present_mask 
cpu_active_mask extern const s#cpumask * const cpu_active_mask 

/* kernel/cpuset.o */
cpuset_mem_spread_node extern int cpuset_mem_spread_node ( void ) 

/* kernel/crash_dump.o */
elfcorehdr_addr extern unsigned long long elfcorehdr_addr 

/* kernel/cred.o */
s##key_type
s##key_user
s##keyring_list
__put_cred extern void __put_cred ( s#cred * ) 
prepare_creds extern s#cred * prepare_creds ( void ) 
commit_creds extern int commit_creds ( s#cred * ) 
abort_creds extern void abort_creds ( s#cred * ) 
override_creds extern const s#cred * override_creds ( const s#cred * ) 
revert_creds extern void revert_creds ( const s#cred * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
prepare_kernel_cred extern s#cred * prepare_kernel_cred ( s#task_struct * ) 
set_security_override extern int set_security_override ( s#cred * , t#u32 ) 
set_security_override_from_ctx extern int set_security_override_from_ctx ( s#cred * , const char * ) 
set_create_files_as extern int set_create_files_as ( s#cred * , s#inode * ) 

/* kernel/dma.o */
request_dma extern int request_dma ( unsigned int , const char * ) 
free_dma extern void free_dma ( unsigned int ) 
dma_spin_lock extern t#spinlock_t dma_spin_lock 

/* kernel/events/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#perf_event_mmap_page struct perf_event_mmap_page { t#__u32 version ; t#__u32 compat_version ; t#__u32 lock ; t#__u32 index ; t#__s64 offset ; t#__u64 time_enabled ; t#__u64 time_running ; union { t#__u64 capabilities ; t#__u64 cap_usr_time : 1 , cap_usr_rdpmc : 1 , cap_____res : 62 ; } ; t#__u16 pmc_width ; t#__u16 time_shift ; t#__u32 time_mult ; t#__u64 time_offset ; t#__u64 __reserved [ 120 ] ; t#__u64 data_head ; t#__u64 data_tail ; } 
s#ring_buffer struct ring_buffer { t#atomic_t refcount ; s#rcu_head rcu_head ; int nr_pages ; int writable ; t#atomic_t poll ; t#local_t head ; t#local_t nest ; t#local_t events ; t#local_t wakeup ; t#local_t lost ; long watermark ; t#spinlock_t event_lock ; s#list_head event_list ; s#perf_event_mmap_page * user_page ; void * data_pages [ 0 ] ; } 
perf_event_refresh extern int perf_event_refresh ( s#perf_event * , int ) 
perf_event_release_kernel extern int perf_event_release_kernel ( s#perf_event * ) 
perf_event_read_value extern t#u64 perf_event_read_value ( s#perf_event * , t#u64 * , t#u64 * ) 
s#perf_guest_info_callbacks struct perf_guest_info_callbacks { int ( * is_in_guest ) ( void ) ; int ( * is_user_mode ) ( void ) ; unsigned long ( * get_guest_ip ) ( void ) ; } 
perf_register_guest_info_callbacks extern int perf_register_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_unregister_guest_info_callbacks extern int perf_unregister_guest_info_callbacks ( s#perf_guest_info_callbacks * ) 
perf_swevent_get_recursion_context extern int perf_swevent_get_recursion_context ( void ) 
perf_tp_event extern void perf_tp_event ( t#u64 , t#u64 , void * , int , s#pt_regs * , s#hlist_head * , int , s#task_struct * ) 
perf_event_create_kernel_counter extern s#perf_event * perf_event_create_kernel_counter ( s#perf_event_attr * , int , s#task_struct * , t#perf_overflow_handler_t , void * ) 
perf_pmu_migrate_context extern void perf_pmu_migrate_context ( s#pmu * , int , int ) 

/* kernel/events/hw_breakpoint.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##ring_buffer
s##event_filter
register_user_hw_breakpoint extern s#perf_event * register_user_hw_breakpoint ( s#perf_event_attr * , t#perf_overflow_handler_t , void * , s#task_struct * ) 
modify_user_hw_breakpoint extern int modify_user_hw_breakpoint ( s#perf_event * , s#perf_event_attr * ) 
unregister_hw_breakpoint extern void unregister_hw_breakpoint ( s#perf_event * ) 
register_wide_hw_breakpoint extern s#perf_event * * register_wide_hw_breakpoint ( s#perf_event_attr * , t#perf_overflow_handler_t , void * ) 
unregister_wide_hw_breakpoint extern void unregister_wide_hw_breakpoint ( s#perf_event * * ) 

/* kernel/exec_domain.o */
t#handler_t typedef void ( * handler_t ) ( int , s#pt_regs * ) 
s##map_segment
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##linux_binfmt
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
s#exec_domain struct exec_domain { const char * name ; t#handler_t handler ; unsigned char pers_low ; unsigned char pers_high ; unsigned long * signal_map ; unsigned long * signal_invmap ; s#map_segment * err_map ; s#map_segment * socktype_map ; s#map_segment * sockopt_map ; s#map_segment * af_map ; s#module * module ; s#exec_domain * next ; } 
register_exec_domain extern int register_exec_domain ( s#exec_domain * ) 
unregister_exec_domain extern int unregister_exec_domain ( s#exec_domain * ) 
__set_personality extern int __set_personality ( unsigned int ) 

/* kernel/exit.o */
allow_signal extern int allow_signal ( int ) 
disallow_signal extern int disallow_signal ( int ) 
daemonize extern void daemonize ( const char * , ... ) 
do_exit void do_exit ( long ) 
complete_and_exit void complete_and_exit ( s#completion * , long ) 

/* kernel/fork.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##mnt_namespace
s##posix_acl
e##migrate_mode
s##cgroupfs_root
s##css_id
s##ring_buffer
s##uts_namespace
s##ipc_namespace
s##net
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s#robust_list struct robust_list { s#robust_list * next ; } 
s#robust_list_head struct robust_list_head { s#robust_list list ; long futex_offset ; s#robust_list * list_op_pending ; } 
s##futex_pi_state
s##mem_cgroup
free_task extern void free_task ( s#task_struct * ) 
__put_task_struct extern void __put_task_struct ( s#task_struct * ) 
__mmdrop extern void __mmdrop ( s#mm_struct * ) 
mmput extern void mmput ( s#mm_struct * ) 
get_task_mm extern s#mm_struct * get_task_mm ( s#task_struct * ) 

/* kernel/freezer.o */
refrigerator extern void refrigerator ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
thaw_process extern int thaw_process ( s#task_struct * ) 

/* kernel/groups.o */
groups_alloc extern s#group_info * groups_alloc ( int ) 
groups_free extern void groups_free ( s#group_info * ) 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
set_groups extern int set_groups ( s#cred * , s#group_info * ) 
set_current_groups extern int set_current_groups ( s#group_info * ) 
in_group_p extern int in_group_p ( t#gid_t ) 
in_egroup_p extern int in_egroup_p ( t#gid_t ) 

/* kernel/hrtimer.o */
ktime_add_safe extern t#ktime_t ktime_add_safe ( const t#ktime_t , const t#ktime_t ) 
hrtimer_forward extern t#u64 hrtimer_forward ( s#hrtimer * , t#ktime_t , t#ktime_t ) 
e#hrtimer_mode enum hrtimer_mode { HRTIMER_MODE_ABS = 0x0 , HRTIMER_MODE_REL = 0x1 , HRTIMER_MODE_PINNED = 0x02 , HRTIMER_MODE_ABS_PINNED = 0x02 , HRTIMER_MODE_REL_PINNED = 0x03 , } 
hrtimer_start_range_ns extern int hrtimer_start_range_ns ( s#hrtimer * , t#ktime_t , unsigned long , const e#hrtimer_mode ) 
hrtimer_start extern int hrtimer_start ( s#hrtimer * , t#ktime_t , const e#hrtimer_mode ) 
hrtimer_try_to_cancel extern int hrtimer_try_to_cancel ( s#hrtimer * ) 
hrtimer_cancel extern int hrtimer_cancel ( s#hrtimer * ) 
hrtimer_get_remaining extern t#ktime_t hrtimer_get_remaining ( const s#hrtimer * ) 
hrtimer_init extern void hrtimer_init ( s#hrtimer * , t#clockid_t , e#hrtimer_mode ) 
hrtimer_get_res extern int hrtimer_get_res ( const t#clockid_t , s#timespec * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s#hrtimer_sleeper struct hrtimer_sleeper { s#hrtimer timer ; s#task_struct * task ; } 
hrtimer_init_sleeper extern void hrtimer_init_sleeper ( s#hrtimer_sleeper * , s#task_struct * ) 
schedule_hrtimeout_range extern int schedule_hrtimeout_range ( t#ktime_t * , unsigned long , const e#hrtimer_mode ) 
schedule_hrtimeout extern int schedule_hrtimeout ( t#ktime_t * , const e#hrtimer_mode ) 

/* kernel/irq/chip.o */
s##pci_dev
s#msi_msg struct msi_msg { t#u32 address_lo ; t#u32 address_hi ; t#u32 data ; } 
s##sock
s##sysfs_dirent
s#msi_desc struct msi_desc { struct { t#__u8 is_msix : 1 ; t#__u8 multiple : 3 ; t#__u8 maskbit : 1 ; t#__u8 is_64 : 1 ; t#__u8 pos ; t#__u16 entry_nr ; unsigned default_irq ; } msi_attrib ; t#u32 masked ; unsigned int irq ; s#list_head list ; union { void * mask_base ; t#u8 mask_pos ; } ; s#pci_dev * dev ; s#msi_msg msg ; s#kobject kobj ; } 
s##seq_file
irq_set_chip extern int irq_set_chip ( unsigned int , s#irq_chip * ) 
irq_set_irq_type extern int irq_set_irq_type ( unsigned int , unsigned int ) 
irq_set_handler_data extern int irq_set_handler_data ( unsigned int , void * ) 
irq_set_chip_data extern int irq_set_chip_data ( unsigned int , void * ) 
irq_get_irq_data extern s#irq_data * irq_get_irq_data ( unsigned int ) 
handle_nested_irq extern void handle_nested_irq ( unsigned int ) 
t#irq_flow_handler_t typedef void ( * irq_flow_handler_t ) ( unsigned int , s#irq_desc * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##proc_dir_entry
s#irq_affinity_notify struct irq_affinity_notify { unsigned int irq ; s#kref kref ; s#work_struct work ; void ( * notify ) ( s#irq_affinity_notify * , const t#cpumask_t * ) ; void ( * release ) ( s#kref * ) ; } 
s#irq_desc struct irq_desc { s#irq_data irq_data ; unsigned int * kstat_irqs ; t#irq_flow_handler_t handle_irq ; s#irqaction * action ; unsigned int status_use_accessors ; unsigned int core_internal_state__do_not_mess_with_it ; unsigned int depth ; unsigned int wake_depth ; unsigned int irq_count ; unsigned long last_unhandled ; unsigned int irqs_unhandled ; t#raw_spinlock_t lock ; const s#cpumask * affinity_hint ; s#irq_affinity_notify * affinity_notify ; unsigned long threads_oneshot ; t#atomic_t threads_active ; t#wait_queue_head_t wait_for_threads ; s#proc_dir_entry * dir ; const char * name ; } 
handle_simple_irq extern void handle_simple_irq ( unsigned int , s#irq_desc * ) 
handle_level_irq extern void handle_level_irq ( unsigned int , s#irq_desc * ) 
__irq_set_handler extern void __irq_set_handler ( unsigned int , t#irq_flow_handler_t , int , const char * ) 
irq_modify_status void irq_modify_status ( unsigned int , unsigned long , unsigned long ) 

/* kernel/irq/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
devm_request_threaded_irq extern int devm_request_threaded_irq ( s#device * , unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
devm_free_irq extern void devm_free_irq ( s#device * , unsigned int , void * ) 

/* kernel/irq/irqdesc.o */
nr_irqs extern int nr_irqs 
s##seq_file
s##msi_desc
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##proc_dir_entry
irq_to_desc extern s#irq_desc * irq_to_desc ( unsigned int ) 
generic_handle_irq int generic_handle_irq ( unsigned int ) 
irq_free_descs void irq_free_descs ( unsigned int , unsigned int ) 
irq_alloc_descs int irq_alloc_descs ( int , unsigned int , unsigned int , int ) 

/* kernel/irq/manage.o */
synchronize_irq extern void synchronize_irq ( unsigned int ) 
irq_set_affinity_hint extern int irq_set_affinity_hint ( unsigned int , const s#cpumask * ) 
irq_set_affinity_notifier extern int irq_set_affinity_notifier ( unsigned int , s#irq_affinity_notify * ) 
disable_irq_nosync extern void disable_irq_nosync ( unsigned int ) 
disable_irq extern void disable_irq ( unsigned int ) 
enable_irq extern void enable_irq ( unsigned int ) 
irq_set_irq_wake extern int irq_set_irq_wake ( unsigned int , unsigned int ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##proc_dir_entry
setup_irq extern int setup_irq ( unsigned int , s#irqaction * ) 
remove_irq extern void remove_irq ( unsigned int , s#irqaction * ) 
free_irq extern void free_irq ( unsigned int , void * ) 
request_threaded_irq extern int request_threaded_irq ( unsigned int , t#irq_handler_t , t#irq_handler_t , unsigned long , const char * , void * ) 
request_any_context_irq extern int request_any_context_irq ( unsigned int , t#irq_handler_t , unsigned long , const char * , void * ) 

/* kernel/irq/pm.o */
suspend_device_irqs extern void suspend_device_irqs ( void ) 
resume_device_irqs extern void resume_device_irqs ( void ) 

/* kernel/irq_work.o */
irq_work_queue t#bool irq_work_queue ( s#irq_work * ) 
irq_work_run void irq_work_run ( void ) 
irq_work_sync void irq_work_sync ( s#irq_work * ) 

/* kernel/kallsyms.o */
kallsyms_lookup_name unsigned long kallsyms_lookup_name ( const char * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
kallsyms_on_each_symbol int kallsyms_on_each_symbol ( int ( * ) ( void * , const char * , s#module * , unsigned long ) , void * ) 
sprint_symbol extern int sprint_symbol ( char * , unsigned long ) 
__print_symbol extern void __print_symbol ( const char * , unsigned long ) 

/* kernel/kexec.o */
kexec_crash_loaded int kexec_crash_loaded ( void ) 

/* kernel/kfifo.o */
__kfifo_alloc extern int __kfifo_alloc ( s#__kfifo * , unsigned int , t#size_t , t#gfp_t ) 
__kfifo_free extern void __kfifo_free ( s#__kfifo * ) 
__kfifo_init extern int __kfifo_init ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_in extern unsigned int __kfifo_in ( s#__kfifo * , const void * , unsigned int ) 
__kfifo_out_peek extern unsigned int __kfifo_out_peek ( s#__kfifo * , void * , unsigned int ) 
__kfifo_out extern unsigned int __kfifo_out ( s#__kfifo * , void * , unsigned int ) 
__kfifo_from_user extern int __kfifo_from_user ( s#__kfifo * , const void * , unsigned long , unsigned int * ) 
__kfifo_to_user extern int __kfifo_to_user ( s#__kfifo * , void * , unsigned long , unsigned int * ) 
__kfifo_dma_in_prepare extern unsigned int __kfifo_dma_in_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_dma_out_prepare extern unsigned int __kfifo_dma_out_prepare ( s#__kfifo * , s#scatterlist * , int , unsigned int ) 
__kfifo_len_r extern unsigned int __kfifo_len_r ( s#__kfifo * , t#size_t ) 
__kfifo_in_r extern unsigned int __kfifo_in_r ( s#__kfifo * , const void * , unsigned int , t#size_t ) 
__kfifo_out_peek_r extern unsigned int __kfifo_out_peek_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_out_r extern unsigned int __kfifo_out_r ( s#__kfifo * , void * , unsigned int , t#size_t ) 
__kfifo_skip_r extern void __kfifo_skip_r ( s#__kfifo * , t#size_t ) 
__kfifo_from_user_r extern int __kfifo_from_user_r ( s#__kfifo * , const void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_to_user_r extern int __kfifo_to_user_r ( s#__kfifo * , void * , unsigned long , unsigned int * , t#size_t ) 
__kfifo_dma_in_prepare_r extern unsigned int __kfifo_dma_in_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_in_finish_r extern void __kfifo_dma_in_finish_r ( s#__kfifo * , unsigned int , t#size_t ) 
__kfifo_dma_out_prepare_r extern unsigned int __kfifo_dma_out_prepare_r ( s#__kfifo * , s#scatterlist * , int , unsigned int , t#size_t ) 
__kfifo_dma_out_finish_r extern void __kfifo_dma_out_finish_r ( s#__kfifo * , t#size_t ) 

/* kernel/kmod.o */
__request_module extern int __request_module ( t#bool , const char * , ... ) 
e#umh_wait enum umh_wait { UMH_NO_WAIT = - 1 , UMH_WAIT_EXEC = 0 , UMH_WAIT_PROC = 1 , } 
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s#subprocess_info struct subprocess_info { s#work_struct work ; s#completion * complete ; char * path ; char * * argv ; char * * envp ; e#umh_wait wait ; int retval ; int ( * init ) ( s#subprocess_info * , s#cred * ) ; void ( * cleanup ) ( s#subprocess_info * ) ; void * data ; } 
call_usermodehelper_freeinfo void call_usermodehelper_freeinfo ( s#subprocess_info * ) 
usermodehelper_read_trylock extern int usermodehelper_read_trylock ( void ) 
usermodehelper_read_lock_wait extern long usermodehelper_read_lock_wait ( long ) 
usermodehelper_read_unlock extern void usermodehelper_read_unlock ( void ) 
call_usermodehelper_setup s#subprocess_info * call_usermodehelper_setup ( char * , char * * , char * * , t#gfp_t ) 
call_usermodehelper_setfns void call_usermodehelper_setfns ( s#subprocess_info * , int ( * ) ( s#subprocess_info * , s#cred * ) , void ( * ) ( s#subprocess_info * ) , void * ) 
call_usermodehelper_exec int call_usermodehelper_exec ( s#subprocess_info * , e#umh_wait ) 

/* kernel/kprobes.o */
t#kprobe_opcode_t typedef unsigned int kprobe_opcode_t 
t#kprobe_pre_handler_t typedef int ( * kprobe_pre_handler_t ) ( s#kprobe * , s#pt_regs * ) 
t#kprobe_post_handler_t typedef void ( * kprobe_post_handler_t ) ( s#kprobe * , s#pt_regs * , unsigned long ) 
t#kprobe_fault_handler_t typedef int ( * kprobe_fault_handler_t ) ( s#kprobe * , s#pt_regs * , int ) 
t#kprobe_break_handler_t typedef int ( * kprobe_break_handler_t ) ( s#kprobe * , s#pt_regs * ) 
s#arch_specific_insn struct arch_specific_insn { t#kprobe_opcode_t * insn ; int boostable ; } 
s#kprobe struct kprobe { s#hlist_node hlist ; s#list_head list ; unsigned long nmissed ; t#kprobe_opcode_t * addr ; const char * symbol_name ; unsigned int offset ; t#kprobe_pre_handler_t pre_handler ; t#kprobe_post_handler_t post_handler ; t#kprobe_fault_handler_t fault_handler ; t#kprobe_break_handler_t break_handler ; t#kprobe_opcode_t opcode ; s#arch_specific_insn ainsn ; t#u32 flags ; } 
register_kprobe int register_kprobe ( s#kprobe * ) 
register_kprobes int register_kprobes ( s#kprobe * * , int ) 
unregister_kprobe void unregister_kprobe ( s#kprobe * ) 
unregister_kprobes void unregister_kprobes ( s#kprobe * * , int ) 
s#jprobe struct jprobe { s#kprobe kp ; void * entry ; } 
register_jprobes int register_jprobes ( s#jprobe * * , int ) 
register_jprobe int register_jprobe ( s#jprobe * ) 
unregister_jprobe void unregister_jprobe ( s#jprobe * ) 
unregister_jprobes void unregister_jprobes ( s#jprobe * * , int ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#kretprobe_instance struct kretprobe_instance { s#hlist_node hlist ; s#kretprobe * rp ; t#kprobe_opcode_t * ret_addr ; s#task_struct * task ; char data [ 0 ] ; } 
t#kretprobe_handler_t typedef int ( * kretprobe_handler_t ) ( s#kretprobe_instance * , s#pt_regs * ) 
s#kretprobe struct kretprobe { s#kprobe kp ; t#kretprobe_handler_t handler ; t#kretprobe_handler_t entry_handler ; int maxactive ; int nmissed ; t#size_t data_size ; s#hlist_head free_instances ; t#spinlock_t lock ; } 
register_kretprobe int register_kretprobe ( s#kretprobe * ) 
register_kretprobes int register_kretprobes ( s#kretprobe * * , int ) 
unregister_kretprobe void unregister_kretprobe ( s#kretprobe * ) 
unregister_kretprobes void unregister_kretprobes ( s#kretprobe * * , int ) 
disable_kprobe int disable_kprobe ( s#kprobe * ) 
enable_kprobe int enable_kprobe ( s#kprobe * ) 
jprobe_return void jprobe_return ( void ) 

/* kernel/ksysfs.o */
s##sock
s##sysfs_dirent
kernel_kobj extern s#kobject * kernel_kobj 

/* kernel/kthread.o */
kthread_should_stop int kthread_should_stop ( void ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##dentry
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
kthread_create_on_node s#task_struct * kthread_create_on_node ( int ( * ) ( void * ) , void * , int , const char [ ] , ... ) 
kthread_bind void kthread_bind ( s#task_struct * , unsigned int ) 
kthread_stop int kthread_stop ( s#task_struct * ) 
__init_kthread_worker extern void __init_kthread_worker ( s#kthread_worker * , const char * , s#lock_class_key * ) 
kthread_worker_fn int kthread_worker_fn ( void * ) 
queue_kthread_work t#bool queue_kthread_work ( s#kthread_worker * , s#kthread_work * ) 
flush_kthread_work void flush_kthread_work ( s#kthread_work * ) 
flush_kthread_worker void flush_kthread_worker ( s#kthread_worker * ) 

/* kernel/module.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
module_mutex extern s#mutex module_mutex 
register_module_notifier int register_module_notifier ( s#notifier_block * ) 
unregister_module_notifier int unregister_module_notifier ( s#notifier_block * ) 
__module_put_and_exit extern void __module_put_and_exit ( s#module * , long ) 
s#symsearch struct symsearch { const s#kernel_symbol * start , * stop ; const unsigned long * crcs ; enum { NOT_GPL_ONLY , GPL_ONLY , WILL_BE_GPL_ONLY , } licence ; t#bool unused ; } 
each_symbol_section t#bool each_symbol_section ( t#bool ( * ) ( const s#symsearch * , s#module * , void * ) , void * ) 
find_symbol const s#kernel_symbol * find_symbol ( const char * , s#module * * , const unsigned long * * , t#bool , t#bool ) 
find_module s#module * find_module ( const char * ) 
__tracepoint_module_get extern s#tracepoint __tracepoint_module_get 
ref_module int ref_module ( s#module * , s#module * ) 
module_refcount unsigned int module_refcount ( s#module * ) 
__symbol_put void __symbol_put ( const char * ) 
symbol_put_addr void symbol_put_addr ( void * ) 
module_put extern void module_put ( s#module * ) 
__symbol_get void * __symbol_get ( const char * ) 
__module_address s#module * __module_address ( unsigned long ) 
__module_text_address s#module * __module_text_address ( unsigned long ) 
s#modversion_info struct modversion_info { unsigned long crc ; char name [ ( 64 - sizeof ( unsigned long ) ) ] ; } 
module_layout void module_layout ( s#module * , s#modversion_info * , s#kernel_param * , s#kernel_symbol * , s#tracepoint * const * ) 
secure_modules extern t#bool secure_modules ( void ) 

/* kernel/mutex.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
__mutex_init extern void __mutex_init ( s#mutex * , const char * , s#lock_class_key * ) 
mutex_lock extern void mutex_lock ( s#mutex * ) 
mutex_unlock extern void mutex_unlock ( s#mutex * ) 
mutex_lock_interruptible extern int mutex_lock_interruptible ( s#mutex * ) 
mutex_lock_killable extern int mutex_lock_killable ( s#mutex * ) 
mutex_trylock extern int mutex_trylock ( s#mutex * ) 
atomic_dec_and_mutex_lock extern int atomic_dec_and_mutex_lock ( t#atomic_t * , s#mutex * ) 

/* kernel/notifier.o */
atomic_notifier_chain_register extern int atomic_notifier_chain_register ( s#atomic_notifier_head * , s#notifier_block * ) 
atomic_notifier_chain_unregister extern int atomic_notifier_chain_unregister ( s#atomic_notifier_head * , s#notifier_block * ) 
__atomic_notifier_call_chain extern int __atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * , int , int * ) 
atomic_notifier_call_chain extern int atomic_notifier_call_chain ( s#atomic_notifier_head * , unsigned long , void * ) 
blocking_notifier_chain_register extern int blocking_notifier_chain_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_cond_register extern int blocking_notifier_chain_cond_register ( s#blocking_notifier_head * , s#notifier_block * ) 
blocking_notifier_chain_unregister extern int blocking_notifier_chain_unregister ( s#blocking_notifier_head * , s#notifier_block * ) 
__blocking_notifier_call_chain extern int __blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * , int , int * ) 
blocking_notifier_call_chain extern int blocking_notifier_call_chain ( s#blocking_notifier_head * , unsigned long , void * ) 
s#raw_notifier_head struct raw_notifier_head { s#notifier_block * head ; } 
raw_notifier_chain_register extern int raw_notifier_chain_register ( s#raw_notifier_head * , s#notifier_block * ) 
raw_notifier_chain_unregister extern int raw_notifier_chain_unregister ( s#raw_notifier_head * , s#notifier_block * ) 
__raw_notifier_call_chain extern int __raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * , int , int * ) 
raw_notifier_call_chain extern int raw_notifier_call_chain ( s#raw_notifier_head * , unsigned long , void * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#srcu_struct_array struct srcu_struct_array { int c [ 2 ] ; } 
s#srcu_struct struct srcu_struct { int completed ; s#srcu_struct_array * per_cpu_ref ; s#mutex mutex ; } 
s#srcu_notifier_head struct srcu_notifier_head { s#mutex mutex ; s#srcu_struct srcu ; s#notifier_block * head ; } 
srcu_notifier_chain_register extern int srcu_notifier_chain_register ( s#srcu_notifier_head * , s#notifier_block * ) 
srcu_notifier_chain_unregister extern int srcu_notifier_chain_unregister ( s#srcu_notifier_head * , s#notifier_block * ) 
__srcu_notifier_call_chain extern int __srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * , int , int * ) 
srcu_notifier_call_chain extern int srcu_notifier_call_chain ( s#srcu_notifier_head * , unsigned long , void * ) 
srcu_init_notifier_head extern void srcu_init_notifier_head ( s#srcu_notifier_head * ) 
register_reboot_notifier extern int register_reboot_notifier ( s#notifier_block * ) 
unregister_reboot_notifier extern int unregister_reboot_notifier ( s#notifier_block * ) 
register_die_notifier int register_die_notifier ( s#notifier_block * ) 
unregister_die_notifier int unregister_die_notifier ( s#notifier_block * ) 

/* kernel/padata.o */
s##workqueue_struct
s#padata_list struct padata_list { s#list_head list ; t#spinlock_t lock ; } 
s#padata_parallel_queue struct padata_parallel_queue { s#padata_list parallel ; s#padata_list reorder ; s#parallel_data * pd ; s#work_struct work ; t#atomic_t num_obj ; int cpu_index ; } 
s#padata_serial_queue struct padata_serial_queue { s#padata_list serial ; s#work_struct work ; s#parallel_data * pd ; } 
s#padata_cpumask struct padata_cpumask { t#cpumask_var_t pcpu ; t#cpumask_var_t cbcpu ; } 
s##tvec_base
s#parallel_data struct parallel_data { s#padata_instance * pinst ; s#padata_parallel_queue * pqueue ; s#padata_serial_queue * squeue ; t#atomic_t seq_nr ; t#atomic_t reorder_objects ; t#atomic_t refcnt ; unsigned int max_seq_nr ; s#padata_cpumask cpumask ; t#spinlock_t lock __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; unsigned int processed ; s#timer_list timer ; } 
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#padata_instance struct padata_instance { s#notifier_block cpu_notifier ; s#workqueue_struct * wq ; s#parallel_data * pd ; s#padata_cpumask cpumask ; s#blocking_notifier_head cpumask_change_notifier ; s#kobject kobj ; s#mutex lock ; t#u8 flags ; } 
s#padata_priv struct padata_priv { s#list_head list ; s#parallel_data * pd ; int cb_cpu ; int seq_nr ; int info ; void ( * parallel ) ( s#padata_priv * ) ; void ( * serial ) ( s#padata_priv * ) ; } 
padata_do_parallel extern int padata_do_parallel ( s#padata_instance * , s#padata_priv * , int ) 
padata_do_serial extern void padata_do_serial ( s#padata_priv * ) 
padata_register_cpumask_notifier extern int padata_register_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_unregister_cpumask_notifier extern int padata_unregister_cpumask_notifier ( s#padata_instance * , s#notifier_block * ) 
padata_set_cpumasks extern int padata_set_cpumasks ( s#padata_instance * , t#cpumask_var_t , t#cpumask_var_t ) 
padata_set_cpumask extern int padata_set_cpumask ( s#padata_instance * , int , t#cpumask_var_t ) 
padata_add_cpu extern int padata_add_cpu ( s#padata_instance * , int , int ) 
padata_remove_cpu extern int padata_remove_cpu ( s#padata_instance * , int , int ) 
padata_start extern int padata_start ( s#padata_instance * ) 
padata_stop extern void padata_stop ( s#padata_instance * ) 
padata_alloc_possible extern s#padata_instance * padata_alloc_possible ( s#workqueue_struct * ) 
padata_alloc extern s#padata_instance * padata_alloc ( s#workqueue_struct * , const s#cpumask * , const s#cpumask * ) 
padata_free extern void padata_free ( s#padata_instance * ) 

/* kernel/panic.o */
panic_timeout extern int panic_timeout 
panic_notifier_list extern s#atomic_notifier_head panic_notifier_list 
panic_blink extern long ( * panic_blink ) ( int ) 
panic void panic ( const char * , ... ) 
test_taint extern int test_taint ( unsigned ) 
add_taint extern void add_taint ( unsigned ) 

/* kernel/params.o */
param_set_byte extern int param_set_byte ( const char * , const s#kernel_param * ) 
param_get_byte extern int param_get_byte ( char * , const s#kernel_param * ) 
param_ops_byte extern s#kernel_param_ops param_ops_byte 
param_set_short extern int param_set_short ( const char * , const s#kernel_param * ) 
param_get_short extern int param_get_short ( char * , const s#kernel_param * ) 
param_ops_short extern s#kernel_param_ops param_ops_short 
param_set_ushort extern int param_set_ushort ( const char * , const s#kernel_param * ) 
param_get_ushort extern int param_get_ushort ( char * , const s#kernel_param * ) 
param_ops_ushort extern s#kernel_param_ops param_ops_ushort 
param_set_int extern int param_set_int ( const char * , const s#kernel_param * ) 
param_get_int extern int param_get_int ( char * , const s#kernel_param * ) 
param_ops_int extern s#kernel_param_ops param_ops_int 
param_set_uint extern int param_set_uint ( const char * , const s#kernel_param * ) 
param_get_uint extern int param_get_uint ( char * , const s#kernel_param * ) 
param_ops_uint extern s#kernel_param_ops param_ops_uint 
param_set_long extern int param_set_long ( const char * , const s#kernel_param * ) 
param_get_long extern int param_get_long ( char * , const s#kernel_param * ) 
param_ops_long extern s#kernel_param_ops param_ops_long 
param_set_ulong extern int param_set_ulong ( const char * , const s#kernel_param * ) 
param_get_ulong extern int param_get_ulong ( char * , const s#kernel_param * ) 
param_ops_ulong extern s#kernel_param_ops param_ops_ulong 
param_set_charp extern int param_set_charp ( const char * , const s#kernel_param * ) 
param_get_charp extern int param_get_charp ( char * , const s#kernel_param * ) 
param_ops_charp extern s#kernel_param_ops param_ops_charp 
param_set_bool extern int param_set_bool ( const char * , const s#kernel_param * ) 
param_get_bool extern int param_get_bool ( char * , const s#kernel_param * ) 
param_ops_bool extern s#kernel_param_ops param_ops_bool 
param_set_invbool extern int param_set_invbool ( const char * , const s#kernel_param * ) 
param_get_invbool extern int param_get_invbool ( char * , const s#kernel_param * ) 
param_ops_invbool extern s#kernel_param_ops param_ops_invbool 
param_array_ops extern s#kernel_param_ops param_array_ops 
param_set_copystring extern int param_set_copystring ( const char * , const s#kernel_param * ) 
param_get_string extern int param_get_string ( char * , const s#kernel_param * ) 
param_ops_string extern s#kernel_param_ops param_ops_string 
__kernel_param_lock extern void __kernel_param_lock ( void ) 
__kernel_param_unlock extern void __kernel_param_unlock ( void ) 

/* kernel/pid.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
init_pid_ns extern s#pid_namespace init_pid_ns 
is_container_init extern int is_container_init ( s#task_struct * ) 
put_pid extern void put_pid ( s#pid * ) 
find_pid_ns extern s#pid * find_pid_ns ( int , s#pid_namespace * ) 
find_vpid extern s#pid * find_vpid ( int ) 
pid_task extern s#task_struct * pid_task ( s#pid * , e#pid_type ) 
get_task_pid extern s#pid * get_task_pid ( s#task_struct * , e#pid_type ) 
get_pid_task extern s#task_struct * get_pid_task ( s#pid * , e#pid_type ) 
find_get_pid extern s#pid * find_get_pid ( int ) 
pid_vnr t#pid_t pid_vnr ( s#pid * ) 
__task_pid_nr_ns t#pid_t __task_pid_nr_ns ( s#task_struct * , e#pid_type , s#pid_namespace * ) 
task_tgid_nr_ns t#pid_t task_tgid_nr_ns ( s#task_struct * , s#pid_namespace * ) 
task_active_pid_ns extern s#pid_namespace * task_active_pid_ns ( s#task_struct * ) 

/* kernel/pm_qos_params.o */
pm_qos_request int pm_qos_request ( int ) 
pm_qos_request_active int pm_qos_request_active ( s#pm_qos_request_list * ) 
pm_qos_add_request void pm_qos_add_request ( s#pm_qos_request_list * , int , t#s32 ) 
pm_qos_update_request void pm_qos_update_request ( s#pm_qos_request_list * , t#s32 ) 
pm_qos_remove_request void pm_qos_remove_request ( s#pm_qos_request_list * ) 
pm_qos_add_notifier int pm_qos_add_notifier ( int , s#notifier_block * ) 
pm_qos_remove_notifier int pm_qos_remove_notifier ( int , s#notifier_block * ) 

/* kernel/posix-timers.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##tty_struct
s##tty_audit_buf
posix_timer_event int posix_timer_event ( s#k_itimer * , int ) 
s##compat_timespec
s#pollfd struct pollfd { int fd ; short events ; short revents ; } 
s#restart_block struct restart_block { long ( * fn ) ( s#restart_block * ) ; union { struct { t#u32 * uaddr ; t#u32 val ; t#u32 flags ; t#u32 bitset ; t#u64 time ; t#u32 * uaddr2 ; } futex ; struct { t#clockid_t clockid ; s#timespec * rmtp ; s#compat_timespec * compat_rmtp ; t#u64 expires ; } nanosleep ; struct { s#pollfd * ufds ; int nfds ; int has_timeout ; unsigned long tv_sec ; unsigned long tv_nsec ; } poll ; } ; } 
s#k_clock struct k_clock { int ( * clock_getres ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_set ) ( const t#clockid_t , const s#timespec * ) ; int ( * clock_get ) ( const t#clockid_t , s#timespec * ) ; int ( * clock_adj ) ( const t#clockid_t , s#timex * ) ; int ( * timer_create ) ( s#k_itimer * ) ; int ( * nsleep ) ( const t#clockid_t , int , s#timespec * , s#timespec * ) ; long ( * nsleep_restart ) ( s#restart_block * ) ; int ( * timer_set ) ( s#k_itimer * , int , s#itimerspec * , s#itimerspec * ) ; int ( * timer_del ) ( s#k_itimer * ) ; void ( * timer_get ) ( s#k_itimer * , s#itimerspec * ) ; } 
posix_timers_register_clock void posix_timers_register_clock ( const t#clockid_t , s#k_clock * ) 

/* kernel/power/main.o */
register_pm_notifier extern int register_pm_notifier ( s#notifier_block * ) 
unregister_pm_notifier extern int unregister_pm_notifier ( s#notifier_block * ) 
s##workqueue_struct
pm_wq s#workqueue_struct * pm_wq 

/* kernel/power/suspend.o */
pm_suspend extern int pm_suspend ( t#suspend_state_t ) 

/* kernel/printk.o */
oops_in_progress extern int oops_in_progress 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##serial_icounter_struct
s##poll_table_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
console_drivers extern s#console * console_drivers 
console_set_on_cmdline extern int console_set_on_cmdline 
printk __attribute__ ( ( format ( printf , 1 , 2 ) ) ) __attribute__ ( ( __cold__ ) ) int printk ( const char * , ... ) 
vprintk __attribute__ ( ( format ( printf , 1 , 0 ) ) ) int vprintk ( const char * , va_list args ) 
console_suspend_enabled extern int console_suspend_enabled 
console_lock extern void console_lock ( void ) 
console_trylock extern int console_trylock ( void ) 
console_unlock extern void console_unlock ( void ) 
console_conditional_schedule extern void console_conditional_schedule ( void ) 
console_stop extern void console_stop ( s#console * ) 
console_start extern void console_start ( s#console * ) 
register_console extern void register_console ( s#console * ) 
unregister_console extern int unregister_console ( s#console * ) 
__printk_ratelimit extern int __printk_ratelimit ( const char * ) 
printk_timed_ratelimit extern t#bool printk_timed_ratelimit ( unsigned long * , unsigned int ) 
e#kmsg_dump_reason enum kmsg_dump_reason { KMSG_DUMP_OOPS , KMSG_DUMP_PANIC , KMSG_DUMP_KEXEC , KMSG_DUMP_RESTART , KMSG_DUMP_HALT , KMSG_DUMP_POWEROFF , KMSG_DUMP_EMERG , } 
s#kmsg_dumper struct kmsg_dumper { void ( * dump ) ( s#kmsg_dumper * , e#kmsg_dump_reason , const char * , unsigned long , const char * , unsigned long ) ; s#list_head list ; int registered ; } 
kmsg_dump_register int kmsg_dump_register ( s#kmsg_dumper * ) 
kmsg_dump_unregister int kmsg_dump_unregister ( s#kmsg_dumper * ) 

/* kernel/profile.o */
prof_on extern int prof_on 
task_handoff_register int task_handoff_register ( s#notifier_block * ) 
task_handoff_unregister int task_handoff_unregister ( s#notifier_block * ) 
e#profile_type enum profile_type { PROFILE_TASK_EXIT , PROFILE_MUNMAP } 
profile_event_register int profile_event_register ( e#profile_type , s#notifier_block * ) 
profile_event_unregister int profile_event_unregister ( e#profile_type , s#notifier_block * ) 
register_timer_hook int register_timer_hook ( int ( * ) ( s#pt_regs * ) ) 
unregister_timer_hook void unregister_timer_hook ( int ( * ) ( s#pt_regs * ) ) 
profile_hits void profile_hits ( int , void * , unsigned int ) 

/* kernel/rcutree.o */
rcu_scheduler_active extern int rcu_scheduler_active 
rcu_note_context_switch extern void rcu_note_context_switch ( int ) 
rcu_batches_completed_sched extern long rcu_batches_completed_sched ( void ) 
rcu_batches_completed_bh extern long rcu_batches_completed_bh ( void ) 
rcu_bh_force_quiescent_state extern void rcu_bh_force_quiescent_state ( void ) 
rcutorture_record_test_transition extern void rcutorture_record_test_transition ( void ) 
rcutorture_record_progress extern void rcutorture_record_progress ( unsigned long ) 
rcu_sched_force_quiescent_state extern void rcu_sched_force_quiescent_state ( void ) 
call_rcu_sched extern void call_rcu_sched ( s#rcu_head * , void ( * ) ( s#rcu_head * ) ) 
call_rcu_bh extern void call_rcu_bh ( s#rcu_head * , void ( * ) ( s#rcu_head * ) ) 
synchronize_sched extern void synchronize_sched ( void ) 
synchronize_rcu_bh extern void synchronize_rcu_bh ( void ) 
rcu_barrier_bh extern void rcu_barrier_bh ( void ) 
rcu_barrier_sched extern void rcu_barrier_sched ( void ) 
rcu_batches_completed extern long rcu_batches_completed ( void ) 
rcu_force_quiescent_state extern void rcu_force_quiescent_state ( void ) 
synchronize_rcu_expedited extern void synchronize_rcu_expedited ( void ) 
rcu_barrier extern void rcu_barrier ( void ) 
synchronize_sched_expedited extern void synchronize_sched_expedited ( void ) 

/* kernel/relay.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
relay_buf_full extern int relay_buf_full ( s#rchan_buf * ) 
relay_reset extern void relay_reset ( s#rchan * ) 
relay_open s#rchan * relay_open ( const char * , s#dentry * , t#size_t , t#size_t , s#rchan_callbacks * , void * ) 
relay_switch_subbuf extern t#size_t relay_switch_subbuf ( s#rchan_buf * , t#size_t ) 
relay_subbufs_consumed extern void relay_subbufs_consumed ( s#rchan * , unsigned int , t#size_t ) 
relay_close extern void relay_close ( s#rchan * ) 
relay_flush extern void relay_flush ( s#rchan * ) 
relay_file_operations extern const s#file_operations relay_file_operations 

/* kernel/resource.o */
ioport_resource extern s#resource ioport_resource 
iomem_resource extern s#resource iomem_resource 
request_resource extern int request_resource ( s#resource * , s#resource * ) 
release_resource extern int release_resource ( s#resource * ) 
allocate_resource extern int allocate_resource ( s#resource * , s#resource * , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t , t#resource_size_t ( * ) ( void * , const s#resource * , t#resource_size_t , t#resource_size_t ) , void * ) 
adjust_resource int adjust_resource ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__request_region extern s#resource * __request_region ( s#resource * , t#resource_size_t , t#resource_size_t , const char * , int ) 
__check_region extern int __check_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
__release_region extern void __release_region ( s#resource * , t#resource_size_t , t#resource_size_t ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
__devm_request_region extern s#resource * __devm_request_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t , const char * ) 
__devm_release_region extern void __devm_release_region ( s#device * , s#resource * , t#resource_size_t , t#resource_size_t ) 

/* kernel/rtmutex.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s#rt_mutex_waiter struct rt_mutex_waiter { s#plist_node list_entry ; s#plist_node pi_list_entry ; s#task_struct * task ; s#rt_mutex * lock ; } 
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
rt_mutex_lock extern void rt_mutex_lock ( s#rt_mutex * ) 
rt_mutex_lock_interruptible extern int rt_mutex_lock_interruptible ( s#rt_mutex * , int ) 
rt_mutex_timed_lock extern int rt_mutex_timed_lock ( s#rt_mutex * , s#hrtimer_sleeper * , int ) 
rt_mutex_trylock extern int rt_mutex_trylock ( s#rt_mutex * ) 
rt_mutex_unlock extern void rt_mutex_unlock ( s#rt_mutex * ) 
rt_mutex_destroy extern void rt_mutex_destroy ( s#rt_mutex * ) 
__rt_mutex_init extern void __rt_mutex_init ( s#rt_mutex * , const char * ) 

/* kernel/rwsem.o */
down_read extern void down_read ( s#rw_semaphore * ) 
down_read_trylock extern int down_read_trylock ( s#rw_semaphore * ) 
down_write extern void down_write ( s#rw_semaphore * ) 
down_write_trylock extern int down_write_trylock ( s#rw_semaphore * ) 
up_read extern void up_read ( s#rw_semaphore * ) 
up_write extern void up_write ( s#rw_semaphore * ) 
downgrade_write extern void downgrade_write ( s#rw_semaphore * ) 

/* kernel/sched.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
kick_process extern void kick_process ( s#task_struct * ) 
wake_up_process extern int wake_up_process ( s#task_struct * ) 
avenrun extern unsigned long avenrun [ ] 
t#cputime64_t typedef t#u64 cputime64_t 
s#cpu_usage_stat struct cpu_usage_stat { t#cputime64_t user ; t#cputime64_t nice ; t#cputime64_t system ; t#cputime64_t softirq ; t#cputime64_t irq ; t#cputime64_t idle ; t#cputime64_t iowait ; t#cputime64_t steal ; t#cputime64_t guest ; t#cputime64_t guest_nice ; } 
E#NR_SOFTIRQS ( 0 ) + 10 
s#kernel_stat struct kernel_stat { s#cpu_usage_stat cpustat ; unsigned long irqs_sum ; unsigned int softirqs [ E#NR_SOFTIRQS ] ; } 
kstat extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#kernel_stat ) kstat 
schedule void schedule ( void ) 
default_wake_function int default_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
__wake_up void __wake_up ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_locked void __wake_up_locked ( t#wait_queue_head_t * , unsigned int , int ) 
__wake_up_locked_key void __wake_up_locked_key ( t#wait_queue_head_t * , unsigned int , void * ) 
__wake_up_sync_key void __wake_up_sync_key ( t#wait_queue_head_t * , unsigned int , int , void * ) 
__wake_up_sync void __wake_up_sync ( t#wait_queue_head_t * , unsigned int , int ) 
complete extern void complete ( s#completion * ) 
complete_all extern void complete_all ( s#completion * ) 
wait_for_completion extern void wait_for_completion ( s#completion * ) 
wait_for_completion_timeout extern unsigned long wait_for_completion_timeout ( s#completion * , unsigned long ) 
wait_for_completion_interruptible extern int wait_for_completion_interruptible ( s#completion * ) 
wait_for_completion_interruptible_timeout extern long wait_for_completion_interruptible_timeout ( s#completion * , unsigned long ) 
wait_for_completion_killable extern int wait_for_completion_killable ( s#completion * ) 
wait_for_completion_killable_timeout extern long wait_for_completion_killable_timeout ( s#completion * , unsigned long ) 
try_wait_for_completion extern t#bool try_wait_for_completion ( s#completion * ) 
completion_done extern t#bool completion_done ( s#completion * ) 
interruptible_sleep_on extern void interruptible_sleep_on ( t#wait_queue_head_t * ) 
interruptible_sleep_on_timeout extern long interruptible_sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
sleep_on extern void sleep_on ( t#wait_queue_head_t * ) 
sleep_on_timeout extern long sleep_on_timeout ( t#wait_queue_head_t * , signed long ) 
set_user_nice extern void set_user_nice ( s#task_struct * , long ) 
task_nice extern int task_nice ( const s#task_struct * ) 
s#sched_param struct sched_param { int sched_priority ; } 
sched_setscheduler extern int sched_setscheduler ( s#task_struct * , int , const s#sched_param * ) 
_cond_resched extern int _cond_resched ( void ) 
__cond_resched_lock extern int __cond_resched_lock ( t#spinlock_t * ) 
__cond_resched_softirq extern int __cond_resched_softirq ( void ) 
yield void yield ( void ) 
yield_to extern t#bool yield_to ( s#task_struct * , t#bool ) 
io_schedule void io_schedule ( void ) 
set_cpus_allowed_ptr extern int set_cpus_allowed_ptr ( s#task_struct * , const s#cpumask * ) 

/* kernel/sched_clock.o */
sched_clock extern unsigned long long __attribute__ ( ( no_instrument_function ) ) sched_clock ( void ) 
cpu_clock extern t#u64 cpu_clock ( int ) 
local_clock extern t#u64 local_clock ( void ) 

/* kernel/semaphore.o */
down extern void down ( s#semaphore * ) 
down_interruptible extern int down_interruptible ( s#semaphore * ) 
down_killable extern int down_killable ( s#semaphore * ) 
down_trylock extern int down_trylock ( s#semaphore * ) 
down_timeout extern int down_timeout ( s#semaphore * , long ) 
up extern void up ( s#semaphore * ) 

/* kernel/signal.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
kill_pid_info_as_cred extern int kill_pid_info_as_cred ( int , s#siginfo * , s#pid * , const s#cred * , t#u32 ) 
kill_pgrp extern int kill_pgrp ( s#pid * , int , int ) 
kill_pid extern int kill_pid ( s#pid * , int , int ) 
recalc_sigpending extern void recalc_sigpending ( void ) 
dequeue_signal extern int dequeue_signal ( s#task_struct * , t#sigset_t * , t#siginfo_t * ) 
flush_signals extern void flush_signals ( s#task_struct * ) 
force_sig extern void force_sig ( int , s#task_struct * ) 
send_sig extern int send_sig ( int , s#task_struct * , int ) 
send_sig_info extern int send_sig_info ( int , s#siginfo * , s#task_struct * ) 
sigprocmask extern int sigprocmask ( int , t#sigset_t * , t#sigset_t * ) 
block_all_signals extern void block_all_signals ( int ( * ) ( void * ) , void * , t#sigset_t * ) 
unblock_all_signals extern void unblock_all_signals ( void ) 

/* kernel/smp.o */
smp_call_function_single int smp_call_function_single ( int , t#smp_call_func_t , void * , int ) 
smp_call_function_any int smp_call_function_any ( const s#cpumask * , t#smp_call_func_t , void * , int ) 
smp_call_function_many void smp_call_function_many ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
smp_call_function int smp_call_function ( t#smp_call_func_t , void * , int ) 
setup_max_cpus extern unsigned int setup_max_cpus 
nr_cpu_ids extern int nr_cpu_ids 
on_each_cpu int on_each_cpu ( t#smp_call_func_t , void * , int ) 
on_each_cpu_mask void on_each_cpu_mask ( const s#cpumask * , t#smp_call_func_t , void * , t#bool ) 
on_each_cpu_cond void on_each_cpu_cond ( t#bool ( * ) ( int , void * ) , t#smp_call_func_t , void * , t#bool , t#gfp_t ) 

/* kernel/softirq.o */
local_bh_disable extern void local_bh_disable ( void ) 
_local_bh_enable extern void _local_bh_enable ( void ) 
local_bh_enable extern void local_bh_enable ( void ) 
local_bh_enable_ip extern void local_bh_enable_ip ( unsigned long ) 
__tasklet_schedule extern void __tasklet_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule extern void __tasklet_hi_schedule ( s#tasklet_struct * ) 
__tasklet_hi_schedule_first extern void __tasklet_hi_schedule_first ( s#tasklet_struct * ) 
tasklet_init extern void tasklet_init ( s#tasklet_struct * , void ( * ) ( unsigned long ) , unsigned long ) 
tasklet_kill extern void tasklet_kill ( s#tasklet_struct * ) 
tasklet_hrtimer_init extern void tasklet_hrtimer_init ( s#tasklet_hrtimer * , e#hrtimer_restart ( * ) ( s#hrtimer * ) , t#clockid_t , e#hrtimer_mode ) 
__send_remote_softirq extern void __send_remote_softirq ( s#call_single_data * , int , int , int ) 
send_remote_softirq extern void send_remote_softirq ( s#call_single_data * , int , int ) 

/* kernel/spinlock.o */
_raw_spin_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_trylock ( t#raw_spinlock_t * ) 
_raw_spin_trylock_bh int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_trylock_bh ( t#raw_spinlock_t * ) 
_raw_spin_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock ( t#raw_spinlock_t * ) 
_raw_spin_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_irqsave ( t#raw_spinlock_t * ) 
_raw_spin_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_irq ( t#raw_spinlock_t * ) 
_raw_spin_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_lock_bh ( t#raw_spinlock_t * ) 
_raw_spin_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_unlock_irqrestore ( t#raw_spinlock_t * , unsigned long ) 
_raw_spin_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_spin_unlock_bh ( t#raw_spinlock_t * ) 
_raw_read_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_trylock ( t#rwlock_t * ) 
_raw_read_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock ( t#rwlock_t * ) 
_raw_read_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_irqsave ( t#rwlock_t * ) 
_raw_read_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_irq ( t#rwlock_t * ) 
_raw_read_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_lock_bh ( t#rwlock_t * ) 
_raw_read_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_unlock_irqrestore ( t#rwlock_t * , unsigned long ) 
_raw_read_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_read_unlock_bh ( t#rwlock_t * ) 
_raw_write_trylock int __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_trylock ( t#rwlock_t * ) 
_raw_write_lock void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock ( t#rwlock_t * ) 
_raw_write_lock_irqsave unsigned long __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_irqsave ( t#rwlock_t * ) 
_raw_write_lock_irq void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_irq ( t#rwlock_t * ) 
_raw_write_lock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_lock_bh ( t#rwlock_t * ) 
_raw_write_unlock_irqrestore void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_unlock_irqrestore ( t#rwlock_t * , unsigned long ) 
_raw_write_unlock_bh void __attribute__ ( ( section ( ".spinlock.text" ) ) ) _raw_write_unlock_bh ( t#rwlock_t * ) 
in_lock_functions int in_lock_functions ( unsigned long ) 

/* kernel/srcu.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
init_srcu_struct int init_srcu_struct ( s#srcu_struct * ) 
cleanup_srcu_struct void cleanup_srcu_struct ( s#srcu_struct * ) 
__srcu_read_lock int __srcu_read_lock ( s#srcu_struct * ) 
__srcu_read_unlock void __srcu_read_unlock ( s#srcu_struct * , int ) 
synchronize_srcu void synchronize_srcu ( s#srcu_struct * ) 
synchronize_srcu_expedited void synchronize_srcu_expedited ( s#srcu_struct * ) 
srcu_batches_completed long srcu_batches_completed ( s#srcu_struct * ) 

/* kernel/stacktrace.o */
print_stack_trace extern void print_stack_trace ( s#stack_trace * , int ) 

/* kernel/stop_machine.o */
stop_machine int stop_machine ( int ( * ) ( void * ) , void * , const s#cpumask * ) 

/* kernel/sys.o */
overflowuid extern int overflowuid 
overflowgid extern int overflowgid 
fs_overflowuid extern int fs_overflowuid 
fs_overflowgid extern int fs_overflowgid 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##ipc_namespace
s##mnt_namespace
s##net
s##proc_dir_entry
s##serial_icounter_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
cad_pid extern s#pid * cad_pid 
emergency_restart extern void emergency_restart ( void ) 
kernel_restart extern void kernel_restart ( char * ) 
kernel_halt extern void kernel_halt ( void ) 
kernel_power_off extern void kernel_power_off ( void ) 
orderly_poweroff extern int orderly_poweroff ( t#bool ) 

/* kernel/sysctl.o */
proc_dointvec extern int proc_dointvec ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_jiffies extern int proc_dointvec_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_minmax extern int proc_dointvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_userhz_jiffies extern int proc_dointvec_userhz_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dointvec_ms_jiffies extern int proc_dointvec_ms_jiffies ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_dostring extern int proc_dostring ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_minmax extern int proc_doulongvec_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
proc_doulongvec_ms_jiffies_minmax extern int proc_doulongvec_ms_jiffies_minmax ( s#ctl_table * , int , void * , t#size_t * , t#loff_t * ) 
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##radix_tree_node
e##migrate_mode
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##bsd_acct_struct
register_sysctl_table s#ctl_table_header * register_sysctl_table ( s#ctl_table * ) 
s#ctl_path struct ctl_path { const char * procname ; } 
register_sysctl_paths s#ctl_table_header * register_sysctl_paths ( const s#ctl_path * , s#ctl_table * ) 
unregister_sysctl_table void unregister_sysctl_table ( s#ctl_table_header * ) 

/* kernel/time.o */
s#timezone struct timezone { int tz_minuteswest ; int tz_dsttime ; } 
sys_tz extern s#timezone sys_tz 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
current_fs_time extern s#timespec current_fs_time ( s#super_block * ) 
jiffies_to_msecs extern unsigned int jiffies_to_msecs ( const unsigned long ) 
jiffies_to_usecs extern unsigned int jiffies_to_usecs ( const unsigned long ) 
timespec_trunc extern s#timespec timespec_trunc ( s#timespec , unsigned ) 
mktime extern unsigned long mktime ( const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int , const unsigned int ) 
set_normalized_timespec extern void set_normalized_timespec ( s#timespec * , t#time_t , t#s64 ) 
ns_to_timespec extern s#timespec ns_to_timespec ( const t#s64 ) 
ns_to_timeval extern s#timeval ns_to_timeval ( const t#s64 ) 
msecs_to_jiffies extern unsigned long msecs_to_jiffies ( const unsigned int ) 
usecs_to_jiffies extern unsigned long usecs_to_jiffies ( const unsigned int ) 
timespec_to_jiffies extern unsigned long timespec_to_jiffies ( const s#timespec * ) 
jiffies_to_timespec extern void jiffies_to_timespec ( const unsigned long , s#timespec * ) 
timeval_to_jiffies extern unsigned long timeval_to_jiffies ( const s#timeval * ) 
jiffies_to_timeval extern void jiffies_to_timeval ( const unsigned long , s#timeval * ) 
t#clock_t typedef t#__kernel_clock_t clock_t 
jiffies_to_clock_t extern t#clock_t jiffies_to_clock_t ( unsigned long ) 
clock_t_to_jiffies extern unsigned long clock_t_to_jiffies ( unsigned long ) 
jiffies_64_to_clock_t extern t#u64 jiffies_64_to_clock_t ( t#u64 ) 

/* kernel/time/clockevents.o */
e#clock_event_mode enum clock_event_mode { CLOCK_EVT_MODE_UNUSED = 0 , CLOCK_EVT_MODE_SHUTDOWN , CLOCK_EVT_MODE_PERIODIC , CLOCK_EVT_MODE_ONESHOT , CLOCK_EVT_MODE_RESUME , } 
s#clock_event_device struct clock_event_device { void ( * event_handler ) ( s#clock_event_device * ) ; int ( * set_next_event ) ( unsigned long , s#clock_event_device * ) ; t#ktime_t next_event ; t#u64 max_delta_ns ; t#u64 min_delta_ns ; t#u32 mult ; t#u32 shift ; e#clock_event_mode mode ; unsigned int features ; unsigned long retries ; void ( * broadcast ) ( const s#cpumask * ) ; void ( * set_mode ) ( e#clock_event_mode , s#clock_event_device * ) ; unsigned long min_delta_ticks ; unsigned long max_delta_ticks ; const char * name ; int rating ; int irq ; const s#cpumask * cpumask ; s#list_head list ; } 
clockevent_delta2ns extern t#u64 clockevent_delta2ns ( unsigned long , s#clock_event_device * ) 
clockevents_register_device extern void clockevents_register_device ( s#clock_event_device * ) 
clockevents_config_and_register extern void clockevents_config_and_register ( s#clock_event_device * , t#u32 , unsigned long , unsigned long ) 
clockevents_notify extern void clockevents_notify ( unsigned long , void * ) 

/* kernel/time/clocksource.o */
timecounter_init extern void timecounter_init ( s#timecounter * , const s#cyclecounter * , t#u64 ) 
timecounter_read extern t#u64 timecounter_read ( s#timecounter * ) 
timecounter_cyc2time extern t#u64 timecounter_cyc2time ( s#timecounter * , t#cycle_t ) 
s#clocksource struct clocksource { t#cycle_t ( * read ) ( s#clocksource * ) ; t#cycle_t cycle_last ; t#cycle_t mask ; t#u32 mult ; t#u32 shift ; t#u64 max_idle_ns ; const char * name ; s#list_head list ; int rating ; t#cycle_t ( * vread ) ( void ) ; int ( * enable ) ( s#clocksource * ) ; void ( * disable ) ( s#clocksource * ) ; unsigned long flags ; void ( * suspend ) ( s#clocksource * ) ; void ( * resume ) ( s#clocksource * ) ; } 
__clocksource_updatefreq_scale extern void __clocksource_updatefreq_scale ( s#clocksource * , t#u32 , t#u32 ) 
__clocksource_register_scale extern int __clocksource_register_scale ( s#clocksource * , t#u32 , t#u32 ) 
clocksource_register extern int clocksource_register ( s#clocksource * ) 
clocksource_change_rating extern void clocksource_change_rating ( s#clocksource * , int ) 
clocksource_unregister extern void clocksource_unregister ( s#clocksource * ) 

/* kernel/time/jiffies.o */
jiffies extern unsigned long volatile __attribute__ ( ( section ( ".data" ) ) ) jiffies 

/* kernel/time/posix-clock.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##linux_binfmt
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##trace_array
s##tracer
s##ring_buffer_iter
posix_clock_register int posix_clock_register ( s#posix_clock * , t#dev_t ) 
posix_clock_unregister void posix_clock_unregister ( s#posix_clock * ) 

/* kernel/time/tick-sched.o */
get_cpu_idle_time_us extern t#u64 get_cpu_idle_time_us ( int , t#u64 * ) 
get_cpu_iowait_time_us extern t#u64 get_cpu_iowait_time_us ( int , t#u64 * ) 

/* kernel/time/timecompare.o */
s#timecompare struct timecompare { s#timecounter * source ; t#ktime_t ( * target ) ( void ) ; int num_samples ; t#s64 offset ; t#s64 skew ; t#u64 last_update ; } 
timecompare_transform extern t#ktime_t timecompare_transform ( s#timecompare * , t#u64 ) 
timecompare_offset extern int timecompare_offset ( s#timecompare * , t#s64 * , t#u64 * ) 
__timecompare_update extern void __timecompare_update ( s#timecompare * , t#u64 ) 

/* kernel/time/timeconv.o */
s#tm struct tm { int tm_sec ; int tm_min ; int tm_hour ; int tm_mday ; int tm_mon ; long tm_year ; int tm_wday ; int tm_yday ; } 
time_to_tm void time_to_tm ( t#time_t , int , s#tm * ) 

/* kernel/time/timekeeping.o */
getnstimeofday extern void getnstimeofday ( s#timespec * ) 
ktime_get extern t#ktime_t ktime_get ( void ) 
ktime_get_ts extern void ktime_get_ts ( s#timespec * ) 
do_gettimeofday extern void do_gettimeofday ( s#timeval * ) 
do_settimeofday extern int do_settimeofday ( const s#timespec * ) 
timekeeping_inject_offset extern int timekeeping_inject_offset ( s#timespec * ) 
ktime_get_real extern t#ktime_t ktime_get_real ( void ) 
getrawmonotonic extern void getrawmonotonic ( s#timespec * ) 
getboottime extern void getboottime ( s#timespec * ) 
get_monotonic_boottime extern void get_monotonic_boottime ( s#timespec * ) 
ktime_get_boottime extern t#ktime_t ktime_get_boottime ( void ) 
monotonic_to_bootbased extern void monotonic_to_bootbased ( s#timespec * ) 
get_seconds unsigned long get_seconds ( void ) 
current_kernel_time s#timespec current_kernel_time ( void ) 
ktime_get_monotonic_offset extern t#ktime_t ktime_get_monotonic_offset ( void ) 

/* kernel/timer.o */
jiffies_64 extern t#u64 __attribute__ ( ( section ( ".data" ) ) ) jiffies_64 
s##tvec_base
boot_tvec_bases extern s#tvec_base boot_tvec_bases 
__round_jiffies unsigned long __round_jiffies ( unsigned long , int ) 
__round_jiffies_relative unsigned long __round_jiffies_relative ( unsigned long , int ) 
round_jiffies unsigned long round_jiffies ( unsigned long ) 
round_jiffies_relative unsigned long round_jiffies_relative ( unsigned long ) 
__round_jiffies_up unsigned long __round_jiffies_up ( unsigned long , int ) 
__round_jiffies_up_relative unsigned long __round_jiffies_up_relative ( unsigned long , int ) 
round_jiffies_up unsigned long round_jiffies_up ( unsigned long ) 
round_jiffies_up_relative unsigned long round_jiffies_up_relative ( unsigned long ) 
set_timer_slack extern void set_timer_slack ( s#timer_list * , int ) 
setup_deferrable_timer_on_stack_key extern void setup_deferrable_timer_on_stack_key ( s#timer_list * , const char * , s#lock_class_key * , void ( * ) ( unsigned long ) , unsigned long ) 
init_timer_key void init_timer_key ( s#timer_list * , const char * , s#lock_class_key * ) 
init_timer_deferrable_key void init_timer_deferrable_key ( s#timer_list * , const char * , s#lock_class_key * ) 
mod_timer_pending extern int mod_timer_pending ( s#timer_list * , unsigned long ) 
mod_timer extern int mod_timer ( s#timer_list * , unsigned long ) 
mod_timer_pinned extern int mod_timer_pinned ( s#timer_list * , unsigned long ) 
add_timer extern void add_timer ( s#timer_list * ) 
add_timer_on extern void add_timer_on ( s#timer_list * , int ) 
del_timer extern int del_timer ( s#timer_list * ) 
try_to_del_timer_sync extern int try_to_del_timer_sync ( s#timer_list * ) 
del_timer_sync extern int del_timer_sync ( s#timer_list * ) 
schedule_timeout extern signed long schedule_timeout ( signed long ) 
schedule_timeout_interruptible extern signed long schedule_timeout_interruptible ( signed long ) 
schedule_timeout_killable extern signed long schedule_timeout_killable ( signed long ) 
schedule_timeout_uninterruptible extern signed long schedule_timeout_uninterruptible ( signed long ) 
msleep void msleep ( unsigned int ) 
msleep_interruptible unsigned long msleep_interruptible ( unsigned int ) 
usleep_range void usleep_range ( unsigned long , unsigned long ) 

/* kernel/trace/blktrace.o */
s##tvec_base
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ring_buffer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##mtd_info
s##hd_geometry
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cgroupfs_root
s##css_id
t#filter_pred_fn_t typedef int ( * filter_pred_fn_t ) ( s#filter_pred * , void * ) 
t#regex_match_func typedef int ( * regex_match_func ) ( char * , s#regex * , int ) 
s#regex struct regex { char pattern [ 256 ] ; int len ; int field_len ; t#regex_match_func match ; } 
s#filter_pred struct filter_pred { t#filter_pred_fn_t fn ; t#u64 val ; s#regex regex ; union { char * field_name ; unsigned short * ops ; } ; int offset ; int not ; int op ; unsigned short index ; unsigned short parent ; unsigned short left ; unsigned short right ; } 
s#event_filter struct event_filter { int n_preds ; int a_preds ; s#filter_pred * preds ; s#filter_pred * root ; char * filter_string ; } 
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s#trace_array_cpu struct trace_array_cpu { t#atomic_t disabled ; void * buffer_page ; unsigned long saved_latency ; unsigned long critical_start ; unsigned long critical_end ; unsigned long critical_sequence ; unsigned long nice ; unsigned long policy ; unsigned long rt_priority ; unsigned long skipped_entries ; t#cycle_t preempt_timestamp ; t#pid_t pid ; t#uid_t uid ; char comm [ 16 ] ; } 
s#trace_array struct trace_array { s#ring_buffer * buffer ; unsigned long entries ; int cpu ; t#cycle_t time_start ; s#task_struct * waiter ; s#trace_array_cpu * data [ 1024 ] ; } 
s#tracer_opt struct tracer_opt { const char * name ; t#u32 bit ; } 
s#tracer_flags struct tracer_flags { t#u32 val ; s#tracer_opt * opts ; } 
s#tracer struct tracer { const char * name ; int ( * init ) ( s#trace_array * ) ; void ( * reset ) ( s#trace_array * ) ; void ( * start ) ( s#trace_array * ) ; void ( * stop ) ( s#trace_array * ) ; void ( * open ) ( s#trace_iterator * ) ; void ( * pipe_open ) ( s#trace_iterator * ) ; void ( * wait_pipe ) ( s#trace_iterator * ) ; void ( * close ) ( s#trace_iterator * ) ; void ( * pipe_close ) ( s#trace_iterator * ) ; t#ssize_t ( * read ) ( s#trace_iterator * , s#file * , char * , t#size_t , t#loff_t * ) ; t#ssize_t ( * splice_read ) ( s#trace_iterator * , s#file * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) ; void ( * print_header ) ( s#seq_file * ) ; e#print_line_t ( * print_line ) ( s#trace_iterator * ) ; int ( * set_flag ) ( t#u32 , t#u32 , int ) ; int ( * flag_changed ) ( s#tracer * , t#u32 , int ) ; s#tracer * next ; s#tracer_flags * flags ; int print_max ; int use_max_tr ; t#bool enabled ; } 
s##ring_buffer_iter
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
__trace_note_message extern __attribute__ ( ( format ( printf , 2 , 3 ) ) ) void __trace_note_message ( s#blk_trace * , const char * , ... ) 
blk_trace_remove extern int blk_trace_remove ( s#request_queue * ) 
blk_trace_setup extern int blk_trace_setup ( s#request_queue * , char * , t#dev_t , s#block_device * , char * ) 
blk_trace_startstop extern int blk_trace_startstop ( s#request_queue * , int ) 
blk_add_driver_data extern void blk_add_driver_data ( s#request_queue * , s#request * , void * , t#size_t ) 

/* kernel/trace/power-traces.o */
__tracepoint_cpu_idle extern s#tracepoint __tracepoint_cpu_idle 

/* kernel/trace/ring_buffer.o */
tracing_on void tracing_on ( void ) 
tracing_off void tracing_off ( void ) 
tracing_is_on int tracing_is_on ( void ) 
s#ring_buffer_event struct ring_buffer_event { ; t#u32 type_len : 5 , time_delta : 27 ; ; t#u32 array [ ] ; } 
ring_buffer_event_length unsigned ring_buffer_event_length ( s#ring_buffer_event * ) 
ring_buffer_event_data void * ring_buffer_event_data ( s#ring_buffer_event * ) 
s##ring_buffer
ring_buffer_time_stamp t#u64 ring_buffer_time_stamp ( s#ring_buffer * , int ) 
ring_buffer_normalize_time_stamp void ring_buffer_normalize_time_stamp ( s#ring_buffer * , int , t#u64 * ) 
__ring_buffer_alloc s#ring_buffer * __ring_buffer_alloc ( unsigned long , unsigned , s#lock_class_key * ) 
ring_buffer_free void ring_buffer_free ( s#ring_buffer * ) 
ring_buffer_resize int ring_buffer_resize ( s#ring_buffer * , unsigned long ) 
ring_buffer_change_overwrite void ring_buffer_change_overwrite ( s#ring_buffer * , int ) 
ring_buffer_lock_reserve s#ring_buffer_event * ring_buffer_lock_reserve ( s#ring_buffer * , unsigned long ) 
ring_buffer_unlock_commit int ring_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_discard_commit void ring_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
ring_buffer_write int ring_buffer_write ( s#ring_buffer * , unsigned long , void * ) 
ring_buffer_record_disable void ring_buffer_record_disable ( s#ring_buffer * ) 
ring_buffer_record_enable void ring_buffer_record_enable ( s#ring_buffer * ) 
ring_buffer_record_disable_cpu void ring_buffer_record_disable_cpu ( s#ring_buffer * , int ) 
ring_buffer_record_enable_cpu void ring_buffer_record_enable_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries_cpu unsigned long ring_buffer_entries_cpu ( s#ring_buffer * , int ) 
ring_buffer_overrun_cpu unsigned long ring_buffer_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_commit_overrun_cpu unsigned long ring_buffer_commit_overrun_cpu ( s#ring_buffer * , int ) 
ring_buffer_entries unsigned long ring_buffer_entries ( s#ring_buffer * ) 
ring_buffer_overruns unsigned long ring_buffer_overruns ( s#ring_buffer * ) 
s##ring_buffer_iter
ring_buffer_iter_reset void ring_buffer_iter_reset ( s#ring_buffer_iter * ) 
ring_buffer_iter_empty int ring_buffer_iter_empty ( s#ring_buffer_iter * ) 
ring_buffer_peek s#ring_buffer_event * ring_buffer_peek ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_iter_peek s#ring_buffer_event * ring_buffer_iter_peek ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_consume s#ring_buffer_event * ring_buffer_consume ( s#ring_buffer * , int , t#u64 * , unsigned long * ) 
ring_buffer_read_prepare s#ring_buffer_iter * ring_buffer_read_prepare ( s#ring_buffer * , int ) 
ring_buffer_read_prepare_sync void ring_buffer_read_prepare_sync ( void ) 
ring_buffer_read_start void ring_buffer_read_start ( s#ring_buffer_iter * ) 
ring_buffer_read_finish void ring_buffer_read_finish ( s#ring_buffer_iter * ) 
ring_buffer_read s#ring_buffer_event * ring_buffer_read ( s#ring_buffer_iter * , t#u64 * ) 
ring_buffer_size unsigned long ring_buffer_size ( s#ring_buffer * ) 
ring_buffer_reset_cpu void ring_buffer_reset_cpu ( s#ring_buffer * , int ) 
ring_buffer_reset void ring_buffer_reset ( s#ring_buffer * ) 
ring_buffer_empty int ring_buffer_empty ( s#ring_buffer * ) 
ring_buffer_empty_cpu int ring_buffer_empty_cpu ( s#ring_buffer * , int ) 
ring_buffer_swap_cpu int ring_buffer_swap_cpu ( s#ring_buffer * , s#ring_buffer * , int ) 
ring_buffer_alloc_read_page void * ring_buffer_alloc_read_page ( s#ring_buffer * ) 
ring_buffer_free_read_page void ring_buffer_free_read_page ( s#ring_buffer * , void * ) 
ring_buffer_read_page int ring_buffer_read_page ( s#ring_buffer * , void * * , t#size_t , int , int ) 

/* kernel/trace/trace.o */
s##ring_buffer
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##kstatfs
s##export_operations
s##xattr_handler
s##backing_dev_info
s##mtd_info
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##ring_buffer_iter
filter_current_check_discard extern int filter_current_check_discard ( s#ring_buffer * , s#ftrace_event_call * , void * , s#ring_buffer_event * ) 
tracing_generic_entry_update void tracing_generic_entry_update ( s#trace_entry * , unsigned long , int ) 
trace_current_buffer_lock_reserve s#ring_buffer_event * trace_current_buffer_lock_reserve ( s#ring_buffer * * , int , unsigned long , unsigned long , int ) 
trace_current_buffer_unlock_commit void trace_current_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
trace_nowake_buffer_unlock_commit void trace_nowake_buffer_unlock_commit ( s#ring_buffer * , s#ring_buffer_event * , unsigned long , int ) 
trace_current_buffer_discard_commit void trace_current_buffer_discard_commit ( s#ring_buffer * , s#ring_buffer_event * ) 
trace_vbprintk extern int trace_vbprintk ( unsigned long , const char * , va_list args ) 
trace_vprintk extern int trace_vprintk ( unsigned long , const char * , va_list args ) 
e#ftrace_dump_mode enum ftrace_dump_mode { DUMP_NONE , DUMP_ALL , DUMP_ORIG , } 
ftrace_dump extern void ftrace_dump ( e#ftrace_dump_mode ) 

/* kernel/trace/trace_event_perf.o */
perf_trace_buf_prepare extern void * perf_trace_buf_prepare ( int , unsigned short , s#pt_regs * , int * ) 

/* kernel/trace/trace_events.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ring_buffer
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
event_storage_mutex extern s#mutex event_storage_mutex 
event_storage extern char event_storage [ 128 ] 
trace_define_field extern int trace_define_field ( s#ftrace_event_call * , const char * , const char * , int , int , int , int ) 
trace_event_raw_init extern int trace_event_raw_init ( s#ftrace_event_call * ) 
ftrace_event_reg extern int ftrace_event_reg ( s#ftrace_event_call * , e#trace_reg , void * ) 
trace_set_clr_event int trace_set_clr_event ( const char * , const char * , int ) 

/* kernel/trace/trace_events_filter.o */
filter_match_preds extern int filter_match_preds ( s#event_filter * , void * ) 

/* kernel/trace/trace_output.o */
trace_seq_printf extern int trace_seq_printf ( s#trace_seq * , const char * , ... ) 
trace_seq_vprintf extern int trace_seq_vprintf ( s#trace_seq * , const char * , va_list args ) 
trace_seq_putc extern int trace_seq_putc ( s#trace_seq * , unsigned char ) 
s#trace_print_flags struct trace_print_flags { unsigned long mask ; const char * name ; } 
ftrace_print_flags_seq const char * ftrace_print_flags_seq ( s#trace_seq * , const char * , unsigned long , const s#trace_print_flags * ) 
ftrace_print_symbols_seq const char * ftrace_print_symbols_seq ( s#trace_seq * , unsigned long , const s#trace_print_flags * ) 
ftrace_print_hex_seq const char * ftrace_print_hex_seq ( s#trace_seq * , const unsigned char * , int ) 
s##ring_buffer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##kmem_cache
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
register_ftrace_event extern int register_ftrace_event ( s#trace_event * ) 
unregister_ftrace_event extern int unregister_ftrace_event ( s#trace_event * ) 

/* kernel/trace/trace_printk.o */
__trace_bprintk extern int __trace_bprintk ( unsigned long , const char * , ... ) 
__ftrace_vbprintk extern int __ftrace_vbprintk ( unsigned long , const char * , va_list ap ) 
__trace_printk extern int __trace_printk ( unsigned long , const char * , ... ) 
__ftrace_vprintk extern int __ftrace_vprintk ( unsigned long , const char * , va_list ap ) 

/* kernel/tracepoint.o */
tracepoint_probe_register extern int tracepoint_probe_register ( const char * , void * , void * ) 
tracepoint_probe_unregister extern int tracepoint_probe_unregister ( const char * , void * , void * ) 
tracepoint_probe_register_noupdate extern int tracepoint_probe_register_noupdate ( const char * , void * , void * ) 
tracepoint_probe_unregister_noupdate extern int tracepoint_probe_unregister_noupdate ( const char * , void * , void * ) 
tracepoint_probe_update_all extern void tracepoint_probe_update_all ( void ) 
tracepoint_get_iter_range extern int tracepoint_get_iter_range ( s#tracepoint * const * * , s#tracepoint * const * , s#tracepoint * const * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#tracepoint_iter struct tracepoint_iter { s#module * module ; s#tracepoint * const * tracepoint ; } 
tracepoint_iter_start extern void tracepoint_iter_start ( s#tracepoint_iter * ) 
tracepoint_iter_next extern void tracepoint_iter_next ( s#tracepoint_iter * ) 
tracepoint_iter_stop extern void tracepoint_iter_stop ( s#tracepoint_iter * ) 
tracepoint_iter_reset extern void tracepoint_iter_reset ( s#tracepoint_iter * ) 

/* kernel/user.o */
s##key_type
s##key_user
s##keyring_list
init_user_ns extern s#user_namespace init_user_ns 

/* kernel/user_namespace.o */
free_user_ns extern void free_user_ns ( s#kref * ) 

/* kernel/wait.o */
__init_waitqueue_head extern void __init_waitqueue_head ( t#wait_queue_head_t * , s#lock_class_key * ) 
add_wait_queue extern void add_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
add_wait_queue_exclusive extern void add_wait_queue_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * ) 
remove_wait_queue extern void remove_wait_queue ( t#wait_queue_head_t * , t#wait_queue_t * ) 
prepare_to_wait void prepare_to_wait ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
prepare_to_wait_exclusive void prepare_to_wait_exclusive ( t#wait_queue_head_t * , t#wait_queue_t * , int ) 
finish_wait void finish_wait ( t#wait_queue_head_t * , t#wait_queue_t * ) 
abort_exclusive_wait void abort_exclusive_wait ( t#wait_queue_head_t * , t#wait_queue_t * , unsigned int , void * ) 
autoremove_wake_function int autoremove_wake_function ( t#wait_queue_t * , unsigned , int , void * ) 
wake_bit_function int wake_bit_function ( t#wait_queue_t * , unsigned , int , void * ) 
s#wait_bit_key struct wait_bit_key { void * flags ; int bit_nr ; } 
s#wait_bit_queue struct wait_bit_queue { s#wait_bit_key key ; t#wait_queue_t wait ; } 
__wait_on_bit int __wait_on_bit ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit int out_of_line_wait_on_bit ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wait_on_bit_lock int __wait_on_bit_lock ( t#wait_queue_head_t * , s#wait_bit_queue * , int ( * ) ( void * ) , unsigned ) 
out_of_line_wait_on_bit_lock int out_of_line_wait_on_bit_lock ( void * , int , int ( * ) ( void * ) , unsigned ) 
__wake_up_bit void __wake_up_bit ( t#wait_queue_head_t * , void * , int ) 
wake_up_bit void wake_up_bit ( void * , int ) 
bit_waitqueue t#wait_queue_head_t * bit_waitqueue ( void * , int ) 
out_of_line_wait_on_atomic_t int out_of_line_wait_on_atomic_t ( t#atomic_t * , int ( * ) ( t#atomic_t * ) , unsigned ) 
wake_up_atomic_t void wake_up_atomic_t ( t#atomic_t * ) 

/* kernel/watchdog.o */
touch_softlockup_watchdog extern void touch_softlockup_watchdog ( void ) 

/* kernel/workqueue.o */
s##workqueue_struct
system_wq extern s#workqueue_struct * system_wq 
system_long_wq extern s#workqueue_struct * system_long_wq 
system_nrt_wq extern s#workqueue_struct * system_nrt_wq 
system_unbound_wq extern s#workqueue_struct * system_unbound_wq 
system_freezable_wq extern s#workqueue_struct * system_freezable_wq 
system_nrt_freezable_wq extern s#workqueue_struct * system_nrt_freezable_wq 
queue_work extern int queue_work ( s#workqueue_struct * , s#work_struct * ) 
queue_work_on extern int queue_work_on ( int , s#workqueue_struct * , s#work_struct * ) 
s##tvec_base
queue_delayed_work extern int queue_delayed_work ( s#workqueue_struct * , s#delayed_work * , unsigned long ) 
queue_delayed_work_on extern int queue_delayed_work_on ( int , s#workqueue_struct * , s#delayed_work * , unsigned long ) 
flush_workqueue extern void flush_workqueue ( s#workqueue_struct * ) 
drain_workqueue extern void drain_workqueue ( s#workqueue_struct * ) 
flush_work extern t#bool flush_work ( s#work_struct * ) 
flush_work_sync extern t#bool flush_work_sync ( s#work_struct * ) 
cancel_work_sync extern t#bool cancel_work_sync ( s#work_struct * ) 
flush_delayed_work extern t#bool flush_delayed_work ( s#delayed_work * ) 
flush_delayed_work_sync extern t#bool flush_delayed_work_sync ( s#delayed_work * ) 
cancel_delayed_work_sync extern t#bool cancel_delayed_work_sync ( s#delayed_work * ) 
schedule_work extern int schedule_work ( s#work_struct * ) 
schedule_work_on extern int schedule_work_on ( int , s#work_struct * ) 
schedule_delayed_work extern int schedule_delayed_work ( s#delayed_work * , unsigned long ) 
schedule_delayed_work_on extern int schedule_delayed_work_on ( int , s#delayed_work * , unsigned long ) 
flush_scheduled_work extern void flush_scheduled_work ( void ) 
execute_in_process_context int execute_in_process_context ( t#work_func_t , s#execute_work * ) 
__alloc_workqueue_key extern s#workqueue_struct * __alloc_workqueue_key ( const char * , unsigned int , int , s#lock_class_key * , const char * ) 
destroy_workqueue extern void destroy_workqueue ( s#workqueue_struct * ) 
workqueue_set_max_active extern void workqueue_set_max_active ( s#workqueue_struct * , int ) 
workqueue_congested extern t#bool workqueue_congested ( unsigned int , s#workqueue_struct * ) 
work_cpu extern unsigned int work_cpu ( s#work_struct * ) 
work_busy extern unsigned int work_busy ( s#work_struct * ) 
work_on_cpu long work_on_cpu ( unsigned int , long ( * ) ( void * ) , void * ) 

/* lib/argv_split.o */
argv_free extern void argv_free ( char * * ) 
argv_split extern char * * argv_split ( t#gfp_t , const char * , int * ) 

/* lib/asn1_decoder.o */
t#asn1_action_t typedef int ( * asn1_action_t ) ( void * , t#size_t , unsigned char , const void * , t#size_t ) 
s#asn1_decoder struct asn1_decoder { const unsigned char * machine ; t#size_t machlen ; const t#asn1_action_t * actions ; } 
asn1_ber_decoder extern int asn1_ber_decoder ( const s#asn1_decoder * , void * , const unsigned char * , t#size_t ) 

/* lib/average.o */
s#ewma struct ewma { unsigned long internal ; unsigned long factor ; unsigned long weight ; } 
ewma_init extern void ewma_init ( s#ewma * , unsigned long , unsigned long ) 
ewma_add extern s#ewma * ewma_add ( s#ewma * , unsigned long ) 

/* lib/bcd.o */
bcd2bin unsigned bcd2bin ( unsigned char ) 
bin2bcd unsigned char bin2bcd ( unsigned ) 

/* lib/bitmap.o */
__bitmap_empty extern int __bitmap_empty ( const unsigned long * , int ) 
__bitmap_full extern int __bitmap_full ( const unsigned long * , int ) 
__bitmap_equal extern int __bitmap_equal ( const unsigned long * , const unsigned long * , int ) 
__bitmap_complement extern void __bitmap_complement ( unsigned long * , const unsigned long * , int ) 
__bitmap_shift_right extern void __bitmap_shift_right ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_shift_left extern void __bitmap_shift_left ( unsigned long * , const unsigned long * , int , int ) 
__bitmap_and extern int __bitmap_and ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_or extern void __bitmap_or ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_xor extern void __bitmap_xor ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_andnot extern int __bitmap_andnot ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
__bitmap_intersects extern int __bitmap_intersects ( const unsigned long * , const unsigned long * , int ) 
__bitmap_subset extern int __bitmap_subset ( const unsigned long * , const unsigned long * , int ) 
__bitmap_weight extern int __bitmap_weight ( const unsigned long * , int ) 
bitmap_set extern void bitmap_set ( unsigned long * , int , int ) 
bitmap_clear extern void bitmap_clear ( unsigned long * , int , int ) 
bitmap_find_next_zero_area extern unsigned long bitmap_find_next_zero_area ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long ) 
bitmap_scnprintf extern int bitmap_scnprintf ( char * , unsigned int , const unsigned long * , int ) 
__bitmap_parse extern int __bitmap_parse ( const char * , unsigned int , int , unsigned long * , int ) 
bitmap_parse_user extern int bitmap_parse_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_scnlistprintf extern int bitmap_scnlistprintf ( char * , unsigned int , const unsigned long * , int ) 
bitmap_parselist extern int bitmap_parselist ( const char * , unsigned long * , int ) 
bitmap_parselist_user extern int bitmap_parselist_user ( const char * , unsigned int , unsigned long * , int ) 
bitmap_remap extern void bitmap_remap ( unsigned long * , const unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_bitremap extern int bitmap_bitremap ( int , const unsigned long * , const unsigned long * , int ) 
bitmap_onto extern void bitmap_onto ( unsigned long * , const unsigned long * , const unsigned long * , int ) 
bitmap_fold extern void bitmap_fold ( unsigned long * , const unsigned long * , int , int ) 
bitmap_find_free_region extern int bitmap_find_free_region ( unsigned long * , int , int ) 
bitmap_release_region extern void bitmap_release_region ( unsigned long * , int , int ) 
bitmap_allocate_region extern int bitmap_allocate_region ( unsigned long * , int , int ) 
bitmap_copy_le extern void bitmap_copy_le ( void * , const unsigned long * , int ) 

/* lib/bitrev.o */
byte_rev_table extern t#u8 const byte_rev_table [ 256 ] 
bitrev16 extern t#u16 bitrev16 ( t#u16 ) 
bitrev32 extern t#u32 bitrev32 ( t#u32 ) 

/* lib/bsearch.o */
bsearch void * bsearch ( const void * , const void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) ) 

/* lib/btree.o */
s##btree_geo
btree_geo32 extern s#btree_geo btree_geo32 
btree_geo64 extern s#btree_geo btree_geo64 
btree_geo128 extern s#btree_geo btree_geo128 
btree_alloc void * btree_alloc ( t#gfp_t , void * ) 
btree_free void btree_free ( void * , void * ) 
s#btree_head struct btree_head { unsigned long * node ; t#mempool_t * mempool ; int height ; } 
btree_init_mempool void btree_init_mempool ( s#btree_head * , t#mempool_t * ) 
btree_init int btree_init ( s#btree_head * ) 
btree_destroy void btree_destroy ( s#btree_head * ) 
btree_last void * btree_last ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_lookup void * btree_lookup ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_update int btree_update ( s#btree_head * , s#btree_geo * , unsigned long * , void * ) 
btree_get_prev void * btree_get_prev ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_insert int btree_insert ( s#btree_head * , s#btree_geo * , unsigned long * , void * , t#gfp_t ) 
btree_remove void * btree_remove ( s#btree_head * , s#btree_geo * , unsigned long * ) 
btree_merge int btree_merge ( s#btree_head * , s#btree_head * , s#btree_geo * , t#gfp_t ) 
visitorl void visitorl ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor32 void visitor32 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor64 void visitor64 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
visitor128 void visitor128 ( void * , unsigned long , unsigned long * , t#size_t , void * ) 
btree_visitor t#size_t btree_visitor ( s#btree_head * , s#btree_geo * , unsigned long , void ( * ) ( void * , unsigned long , unsigned long * , t#size_t , void * ) , void * ) 
btree_grim_visitor t#size_t btree_grim_visitor ( s#btree_head * , s#btree_geo * , unsigned long , void ( * ) ( void * , unsigned long , unsigned long * , t#size_t , void * ) , void * ) 

/* lib/cmdline.o */
memparse extern unsigned long long memparse ( const char * , char * * ) 
get_option extern int get_option ( char * * , int * ) 
get_options extern char * get_options ( const char * , int , int * ) 

/* lib/cpu_rmap.o */
alloc_cpu_rmap extern s#cpu_rmap * alloc_cpu_rmap ( unsigned int , t#gfp_t ) 
cpu_rmap_put extern int cpu_rmap_put ( s#cpu_rmap * ) 
cpu_rmap_add extern int cpu_rmap_add ( s#cpu_rmap * , void * ) 
cpu_rmap_update extern int cpu_rmap_update ( s#cpu_rmap * , t#u16 , const s#cpumask * ) 
free_irq_cpu_rmap extern void free_irq_cpu_rmap ( s#cpu_rmap * ) 
irq_cpu_rmap_add extern int irq_cpu_rmap_add ( s#cpu_rmap * , int ) 

/* lib/cpumask.o */
__first_cpu int __first_cpu ( const t#cpumask_t * ) 
__next_cpu int __next_cpu ( int , const t#cpumask_t * ) 
__next_cpu_nr int __next_cpu_nr ( int , const t#cpumask_t * ) 
__any_online_cpu int __any_online_cpu ( const t#cpumask_t * ) 
cpumask_next_and int cpumask_next_and ( int , const s#cpumask * , const s#cpumask * ) 
cpumask_next_wrap extern int cpumask_next_wrap ( int , const s#cpumask * , int , t#bool ) 
alloc_cpumask_var_node t#bool alloc_cpumask_var_node ( t#cpumask_var_t * , t#gfp_t , int ) 
zalloc_cpumask_var_node t#bool zalloc_cpumask_var_node ( t#cpumask_var_t * , t#gfp_t , int ) 
alloc_cpumask_var t#bool alloc_cpumask_var ( t#cpumask_var_t * , t#gfp_t ) 
zalloc_cpumask_var t#bool zalloc_cpumask_var ( t#cpumask_var_t * , t#gfp_t ) 
free_cpumask_var void free_cpumask_var ( t#cpumask_var_t ) 
cpumask_set_cpu_local_first int cpumask_set_cpu_local_first ( int , int , t#cpumask_t * ) 
cpumask_local_spread unsigned int cpumask_local_spread ( unsigned int , int ) 

/* lib/crc-ccitt.o */
crc_ccitt_table extern t#u16 const crc_ccitt_table [ 256 ] 
crc_ccitt extern t#u16 crc_ccitt ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-itu-t.o */
crc_itu_t_table extern t#u16 const crc_itu_t_table [ 256 ] 
crc_itu_t extern t#u16 crc_itu_t ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc-t10dif.o */
crc_t10dif t#__u16 crc_t10dif ( unsigned char const * , t#size_t ) 

/* lib/crc16.o */
crc16_table extern t#u16 const crc16_table [ 256 ] 
crc16 extern t#u16 crc16 ( t#u16 , const t#u8 * , t#size_t ) 

/* lib/crc32.o */
crc32_le extern t#u32 crc32_le ( t#u32 , unsigned char const * , t#size_t ) 
__crc32c_le extern t#u32 __crc32c_le ( t#u32 , unsigned char const * , t#size_t ) 
crc32_be extern t#u32 crc32_be ( t#u32 , unsigned char const * , t#size_t ) 

/* lib/crc7.o */
crc7_syndrome_table extern const t#u8 crc7_syndrome_table [ 256 ] 
crc7 extern t#u8 crc7 ( t#u8 , const t#u8 * , t#size_t ) 

/* lib/ctype.o */
_ctype extern const unsigned char _ctype [ ] 

/* lib/debug_locks.o */
debug_locks extern int debug_locks 

/* lib/dec_and_lock.o */
_atomic_dec_and_lock extern int _atomic_dec_and_lock ( t#atomic_t * , t#spinlock_t * ) 

/* lib/devres.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##proc_dir_entry
devm_ioremap void * devm_ioremap ( s#device * , t#resource_size_t , unsigned long ) 
devm_ioremap_nocache void * devm_ioremap_nocache ( s#device * , t#resource_size_t , unsigned long ) 
devm_iounmap void devm_iounmap ( s#device * , void * ) 
devm_ioport_map void * devm_ioport_map ( s#device * , unsigned long , unsigned int ) 
devm_ioport_unmap void devm_ioport_unmap ( s#device * , void * ) 
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pcim_iomap_table void * const * pcim_iomap_table ( s#pci_dev * ) 
pcim_iomap void * pcim_iomap ( s#pci_dev * , int , unsigned long ) 
pcim_iounmap void pcim_iounmap ( s#pci_dev * , void * ) 
pcim_iomap_regions int pcim_iomap_regions ( s#pci_dev * , t#u16 , const char * ) 
pcim_iomap_regions_request_all int pcim_iomap_regions_request_all ( s#pci_dev * , t#u16 , const char * ) 
pcim_iounmap_regions void pcim_iounmap_regions ( s#pci_dev * , t#u16 ) 

/* lib/div64.o */
iter_div_u64_rem t#u32 iter_div_u64_rem ( t#u64 , t#u32 , t#u64 * ) 

/* lib/dump_stack.o */
dump_stack extern void dump_stack ( void ) 

/* lib/dynamic_debug.o */
s#_ddebug struct _ddebug { const char * modname ; const char * function ; const char * filename ; const char * format ; unsigned int lineno : 24 ; unsigned int flags : 8 ; char enabled ; } 
__dynamic_pr_debug extern int __dynamic_pr_debug ( s#_ddebug * , const char * , ... ) 
ddebug_add_module int ddebug_add_module ( s#_ddebug * , unsigned int , const char * ) 
ddebug_remove_module extern int ddebug_remove_module ( const char * ) 

/* lib/find_last_bit.o */
find_last_bit extern unsigned long find_last_bit ( const unsigned long * , unsigned long ) 

/* lib/find_next_bit.o */
find_next_bit extern unsigned long find_next_bit ( const unsigned long * , unsigned long , unsigned long ) 
find_next_zero_bit extern unsigned long find_next_zero_bit ( const unsigned long * , unsigned long , unsigned long ) 
find_next_zero_bit_le unsigned long find_next_zero_bit_le ( const void * , unsigned long , unsigned long ) 
find_next_bit_le unsigned long find_next_bit_le ( const void * , unsigned long , unsigned long ) 

/* lib/flex_array.o */
s##flex_array_part
s#flex_array struct flex_array { union { struct { int element_size ; int total_nr_elements ; int elems_per_part ; t#u32 reciprocal_elems ; s#flex_array_part * parts [ ] ; } ; char padding [ ( 1UL << 16 ) ] ; } ; } 
flex_array_alloc s#flex_array * flex_array_alloc ( int , unsigned int , t#gfp_t ) 
flex_array_free_parts void flex_array_free_parts ( s#flex_array * ) 
flex_array_free void flex_array_free ( s#flex_array * ) 
flex_array_put int flex_array_put ( s#flex_array * , unsigned int , void * , t#gfp_t ) 
flex_array_clear int flex_array_clear ( s#flex_array * , unsigned int ) 
flex_array_prealloc int flex_array_prealloc ( s#flex_array * , unsigned int , unsigned int , t#gfp_t ) 
flex_array_get void * flex_array_get ( s#flex_array * , unsigned int ) 
flex_array_get_ptr void * flex_array_get_ptr ( s#flex_array * , unsigned int ) 
flex_array_shrink int flex_array_shrink ( s#flex_array * ) 

/* lib/gcd.o */
gcd unsigned long gcd ( unsigned long , unsigned long ) 

/* lib/genalloc.o */
s#gen_pool struct gen_pool { t#spinlock_t lock ; s#list_head chunks ; int min_alloc_order ; } 
gen_pool_create extern s#gen_pool * gen_pool_create ( int , int ) 
gen_pool_add_virt extern int gen_pool_add_virt ( s#gen_pool * , unsigned long , t#phys_addr_t , t#size_t , int ) 
gen_pool_virt_to_phys extern t#phys_addr_t gen_pool_virt_to_phys ( s#gen_pool * , unsigned long ) 
gen_pool_destroy extern void gen_pool_destroy ( s#gen_pool * ) 
gen_pool_alloc extern unsigned long gen_pool_alloc ( s#gen_pool * , t#size_t ) 
gen_pool_free extern void gen_pool_free ( s#gen_pool * , unsigned long , t#size_t ) 
s#gen_pool_chunk struct gen_pool_chunk { s#list_head next_chunk ; t#atomic_t avail ; t#phys_addr_t phys_addr ; unsigned long start_addr ; unsigned long end_addr ; unsigned long bits [ 0 ] ; } 
gen_pool_for_each_chunk extern void gen_pool_for_each_chunk ( s#gen_pool * , void ( * ) ( s#gen_pool * , s#gen_pool_chunk * , void * ) , void * ) 
gen_pool_avail extern t#size_t gen_pool_avail ( s#gen_pool * ) 
gen_pool_size extern t#size_t gen_pool_size ( s#gen_pool * ) 

/* lib/halfmd4.o */
half_md4_transform t#__u32 half_md4_transform ( t#__u32 [ 4 ] , t#__u32 const [ 8 ] ) 

/* lib/hexdump.o */
hex_asc extern const char hex_asc [ ] 
hex_to_bin extern int hex_to_bin ( char ) 
hex2bin extern int hex2bin ( t#u8 * , const char * , t#size_t ) 
hex_dump_to_buffer extern void hex_dump_to_buffer ( const void * , t#size_t , int , int , char * , t#size_t , t#bool ) 
print_hex_dump extern void print_hex_dump ( const char * , const char * , int , int , int , const void * , t#size_t , t#bool ) 
print_hex_dump_bytes extern void print_hex_dump_bytes ( const char * , int , const void * , t#size_t ) 

/* lib/hweight.o */
__sw_hweight32 extern unsigned int __sw_hweight32 ( unsigned int ) 
__sw_hweight16 extern unsigned int __sw_hweight16 ( unsigned int ) 
__sw_hweight8 extern unsigned int __sw_hweight8 ( unsigned int ) 
__sw_hweight64 extern unsigned long __sw_hweight64 ( t#__u64 ) 

/* lib/idr.o */
idr_pre_get int idr_pre_get ( s#idr * , t#gfp_t ) 
idr_get_new_above int idr_get_new_above ( s#idr * , void * , int , int * ) 
idr_get_new int idr_get_new ( s#idr * , void * , int * ) 
idr_remove void idr_remove ( s#idr * , int ) 
idr_remove_all void idr_remove_all ( s#idr * ) 
idr_destroy void idr_destroy ( s#idr * ) 
idr_find void * idr_find ( s#idr * , int ) 
idr_for_each int idr_for_each ( s#idr * , int ( * ) ( int , void * , void * ) , void * ) 
idr_get_next void * idr_get_next ( s#idr * , int * ) 
idr_replace void * idr_replace ( s#idr * , void * , int ) 
idr_init void idr_init ( s#idr * ) 
ida_pre_get int ida_pre_get ( s#ida * , t#gfp_t ) 
ida_get_new_above int ida_get_new_above ( s#ida * , int , int * ) 
ida_get_new int ida_get_new ( s#ida * , int * ) 
ida_remove void ida_remove ( s#ida * , int ) 
ida_destroy void ida_destroy ( s#ida * ) 
ida_simple_get int ida_simple_get ( s#ida * , unsigned int , unsigned int , t#gfp_t ) 
ida_simple_remove void ida_simple_remove ( s#ida * , unsigned int ) 
ida_init void ida_init ( s#ida * ) 

/* lib/int_sqrt.o */
int_sqrt unsigned long int_sqrt ( unsigned long ) 

/* lib/iomap.o */
ioread8 extern unsigned int ioread8 ( void * ) 
ioread16 extern unsigned int ioread16 ( void * ) 
ioread16be extern unsigned int ioread16be ( void * ) 
ioread32 extern unsigned int ioread32 ( void * ) 
ioread32be extern unsigned int ioread32be ( void * ) 
iowrite8 extern void iowrite8 ( t#u8 , void * ) 
iowrite16 extern void iowrite16 ( t#u16 , void * ) 
iowrite16be extern void iowrite16be ( t#u16 , void * ) 
iowrite32 extern void iowrite32 ( t#u32 , void * ) 
iowrite32be extern void iowrite32be ( t#u32 , void * ) 
ioread8_rep extern void ioread8_rep ( void * , void * , unsigned long ) 
ioread16_rep extern void ioread16_rep ( void * , void * , unsigned long ) 
ioread32_rep extern void ioread32_rep ( void * , void * , unsigned long ) 
iowrite8_rep extern void iowrite8_rep ( void * , const void * , unsigned long ) 
iowrite16_rep extern void iowrite16_rep ( void * , const void * , unsigned long ) 
iowrite32_rep extern void iowrite32_rep ( void * , const void * , unsigned long ) 
ioport_map extern void * ioport_map ( unsigned long , unsigned int ) 
ioport_unmap extern void ioport_unmap ( void * ) 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
pci_iomap extern void * pci_iomap ( s#pci_dev * , int , unsigned long ) 
pci_iounmap extern void pci_iounmap ( s#pci_dev * , void * ) 

/* lib/iomap_copy.o */
__iowrite32_copy void __iowrite32_copy ( void * , const void * , t#size_t ) 
__iowrite64_copy void __iowrite64_copy ( void * , const void * , t#size_t ) 

/* lib/iommu-helper.o */
iommu_area_alloc unsigned long iommu_area_alloc ( unsigned long * , unsigned long , unsigned long , unsigned int , unsigned long , unsigned long , unsigned long ) 

/* lib/ioremap.o */
ioremap_page_range int ioremap_page_range ( unsigned long , unsigned long , t#phys_addr_t , t#pgprot_t ) 

/* lib/irq_regs.o */
__irq_regs extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#pt_regs * ) __irq_regs 

/* lib/kasprintf.o */
kvasprintf extern char * kvasprintf ( t#gfp_t , const char * , va_list args ) 
kasprintf extern char * kasprintf ( t#gfp_t , const char * , ... ) 

/* lib/klist.o */
klist_init extern void klist_init ( s#klist * , void ( * ) ( s#klist_node * ) , void ( * ) ( s#klist_node * ) ) 
klist_add_head extern void klist_add_head ( s#klist_node * , s#klist * ) 
klist_add_tail extern void klist_add_tail ( s#klist_node * , s#klist * ) 
klist_add_after extern void klist_add_after ( s#klist_node * , s#klist_node * ) 
klist_add_before extern void klist_add_before ( s#klist_node * , s#klist_node * ) 
klist_del extern void klist_del ( s#klist_node * ) 
klist_remove extern void klist_remove ( s#klist_node * ) 
klist_node_attached extern int klist_node_attached ( s#klist_node * ) 
klist_iter_init_node extern void klist_iter_init_node ( s#klist * , s#klist_iter * , s#klist_node * ) 
klist_iter_init extern void klist_iter_init ( s#klist * , s#klist_iter * ) 
klist_iter_exit extern void klist_iter_exit ( s#klist_iter * ) 
klist_next extern s#klist_node * klist_next ( s#klist_iter * ) 

/* lib/kobject.o */
s##sock
s##sysfs_dirent
kobject_get_path extern char * kobject_get_path ( s#kobject * , t#gfp_t ) 
kobject_set_name extern int kobject_set_name ( s#kobject * , const char * , ... ) 
kobject_init extern void kobject_init ( s#kobject * , s#kobj_type * ) 
kobject_add extern int kobject_add ( s#kobject * , s#kobject * , const char * , ... ) 
kobject_init_and_add extern int kobject_init_and_add ( s#kobject * , s#kobj_type * , s#kobject * , const char * , ... ) 
kobject_rename extern int kobject_rename ( s#kobject * , const char * ) 
kobject_create_and_add extern s#kobject * kobject_create_and_add ( const char * , s#kobject * ) 
kset_create_and_add extern s#kset * kset_create_and_add ( const char * , const s#kset_uevent_ops * , s#kobject * ) 
kobject_get extern s#kobject * kobject_get ( s#kobject * ) 
kobject_put extern void kobject_put ( s#kobject * ) 
kobject_del extern void kobject_del ( s#kobject * ) 
kset_register extern int kset_register ( s#kset * ) 
kset_unregister extern void kset_unregister ( s#kset * ) 

/* lib/kobject_uevent.o */
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
e#kobject_action enum kobject_action { KOBJ_ADD , KOBJ_REMOVE , KOBJ_CHANGE , KOBJ_MOVE , KOBJ_ONLINE , KOBJ_OFFLINE , KOBJ_MAX } 
kobject_uevent_env int kobject_uevent_env ( s#kobject * , e#kobject_action , char * [ ] ) 
kobject_uevent int kobject_uevent ( s#kobject * , e#kobject_action ) 
add_uevent_var int add_uevent_var ( s#kobj_uevent_env * , const char * , ... ) 

/* lib/kref.o */
kref_init void kref_init ( s#kref * ) 
kref_get void kref_get ( s#kref * ) 
kref_put int kref_put ( s#kref * , void ( * ) ( s#kref * ) ) 
kref_sub int kref_sub ( s#kref * , unsigned int , void ( * ) ( s#kref * ) ) 

/* lib/kstrtox.o */
kstrtoull int kstrtoull ( const char * , unsigned int , unsigned long long * ) 
kstrtoll int kstrtoll ( const char * , unsigned int , long long * ) 
_kstrtoul int _kstrtoul ( const char * , unsigned int , unsigned long * ) 
_kstrtol int _kstrtol ( const char * , unsigned int , long * ) 
kstrtouint int kstrtouint ( const char * , unsigned int , unsigned int * ) 
kstrtoint int kstrtoint ( const char * , unsigned int , int * ) 
kstrtou16 int kstrtou16 ( const char * , unsigned int , t#u16 * ) 
kstrtos16 int kstrtos16 ( const char * , unsigned int , t#s16 * ) 
kstrtou8 int kstrtou8 ( const char * , unsigned int , t#u8 * ) 
kstrtos8 int kstrtos8 ( const char * , unsigned int , t#s8 * ) 
kstrtoull_from_user int kstrtoull_from_user ( const char * , t#size_t , unsigned int , unsigned long long * ) 
kstrtoll_from_user int kstrtoll_from_user ( const char * , t#size_t , unsigned int , long long * ) 
kstrtoul_from_user int kstrtoul_from_user ( const char * , t#size_t , unsigned int , unsigned long * ) 
kstrtol_from_user int kstrtol_from_user ( const char * , t#size_t , unsigned int , long * ) 
kstrtouint_from_user int kstrtouint_from_user ( const char * , t#size_t , unsigned int , unsigned int * ) 
kstrtoint_from_user int kstrtoint_from_user ( const char * , t#size_t , unsigned int , int * ) 
kstrtou16_from_user int kstrtou16_from_user ( const char * , t#size_t , unsigned int , t#u16 * ) 
kstrtos16_from_user int kstrtos16_from_user ( const char * , t#size_t , unsigned int , t#s16 * ) 
kstrtou8_from_user int kstrtou8_from_user ( const char * , t#size_t , unsigned int , t#u8 * ) 
kstrtos8_from_user int kstrtos8_from_user ( const char * , t#size_t , unsigned int , t#s8 * ) 

/* lib/lcm.o */
lcm unsigned long lcm ( unsigned long , unsigned long ) 

/* lib/libcrc32c.o */
crc32c t#u32 crc32c ( t#u32 , const void * , unsigned int ) 

/* lib/list_sort.o */
list_sort void list_sort ( void * , s#list_head * , int ( * ) ( void * , s#list_head * , s#list_head * ) ) 

/* lib/llist.o */
s#llist_node struct llist_node { s#llist_node * next ; } 
s#llist_head struct llist_head { s#llist_node * first ; } 
llist_add_batch extern t#bool llist_add_batch ( s#llist_node * , s#llist_node * , s#llist_head * ) 
llist_del_first extern s#llist_node * llist_del_first ( s#llist_head * ) 

/* lib/lockref.o */
lockref_get extern void lockref_get ( s#lockref * ) 
lockref_get_not_zero extern int lockref_get_not_zero ( s#lockref * ) 
lockref_get_or_lock extern int lockref_get_or_lock ( s#lockref * ) 
lockref_put_or_lock extern int lockref_put_or_lock ( s#lockref * ) 
lockref_get_not_dead extern int lockref_get_not_dead ( s#lockref * ) 

/* lib/lru_cache.o */
s##array_cache
s##kmem_list3
s#lc_element struct lc_element { s#hlist_node colision ; s#list_head list ; unsigned refcnt ; unsigned lc_index ; unsigned lc_number ; } 
s#lru_cache struct lru_cache { s#list_head lru ; s#list_head free ; s#list_head in_use ; s#kmem_cache * lc_cache ; t#size_t element_size ; t#size_t element_off ; unsigned int nr_elements ; unsigned used ; unsigned long hits , misses , starving , dirty , changed ; unsigned long flags ; unsigned int new_number ; s#lc_element * changing_element ; void * lc_private ; const char * name ; s#hlist_head * lc_slot ; s#lc_element * * lc_element ; } 
lc_create extern s#lru_cache * lc_create ( const char * , s#kmem_cache * , unsigned , t#size_t , t#size_t ) 
lc_reset extern void lc_reset ( s#lru_cache * ) 
lc_destroy extern void lc_destroy ( s#lru_cache * ) 
lc_set extern void lc_set ( s#lru_cache * , unsigned int , int ) 
lc_del extern void lc_del ( s#lru_cache * , s#lc_element * ) 
lc_try_get extern s#lc_element * lc_try_get ( s#lru_cache * , unsigned int ) 
lc_find extern s#lc_element * lc_find ( s#lru_cache * , unsigned int ) 
lc_get extern s#lc_element * lc_get ( s#lru_cache * , unsigned int ) 
lc_put extern unsigned int lc_put ( s#lru_cache * , s#lc_element * ) 
lc_changed extern void lc_changed ( s#lru_cache * , s#lc_element * ) 
lc_element_by_index extern s#lc_element * lc_element_by_index ( s#lru_cache * , unsigned ) 
lc_index_of extern unsigned int lc_index_of ( s#lru_cache * , s#lc_element * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
lc_seq_printf_stats extern t#size_t lc_seq_printf_stats ( s#seq_file * , s#lru_cache * ) 
lc_seq_dump_details extern void lc_seq_dump_details ( s#seq_file * , s#lru_cache * , char * , void ( * ) ( s#seq_file * , s#lc_element * ) ) 

/* lib/lzo/lzo1x_compress.o */
lzo1x_1_compress int lzo1x_1_compress ( const unsigned char * , t#size_t , unsigned char * , t#size_t * , void * ) 

/* lib/lzo/lzo1x_decompress.o */
lzo1x_decompress_safe int lzo1x_decompress_safe ( const unsigned char * , t#size_t , unsigned char * , t#size_t * ) 

/* lib/md5.o */
md5_transform void md5_transform ( t#__u32 * , t#__u32 const * ) 

/* lib/mpi/mpi-bit.o */
mpi_get_nbits unsigned mpi_get_nbits ( t#MPI ) 

/* lib/mpi/mpi-cmp.o */
mpi_cmp_ui int mpi_cmp_ui ( t#MPI , t#ulong ) 
mpi_cmp int mpi_cmp ( t#MPI , t#MPI ) 

/* lib/mpi/mpi-pow.o */
mpi_powm int mpi_powm ( t#MPI , t#MPI , t#MPI , t#MPI ) 

/* lib/mpi/mpicoder.o */
mpi_read_raw_data t#MPI mpi_read_raw_data ( const void * , t#size_t ) 
mpi_read_from_buffer t#MPI mpi_read_from_buffer ( const void * , unsigned * ) 
mpi_get_buffer void * mpi_get_buffer ( t#MPI , unsigned * , int * ) 
mpi_set_buffer int mpi_set_buffer ( t#MPI , const void * , unsigned , int ) 

/* lib/mpi/mpiutil.o */
mpi_alloc t#MPI mpi_alloc ( unsigned ) 
mpi_free void mpi_free ( t#MPI ) 

/* lib/nlattr.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
__nla_reserve extern s#nlattr * __nla_reserve ( s#sk_buff * , int , int ) 
__nla_reserve_nohdr extern void * __nla_reserve_nohdr ( s#sk_buff * , int ) 
nla_reserve extern s#nlattr * nla_reserve ( s#sk_buff * , int , int ) 
nla_reserve_nohdr extern void * nla_reserve_nohdr ( s#sk_buff * , int ) 
__nla_put extern void __nla_put ( s#sk_buff * , int , int , const void * ) 
__nla_put_nohdr extern void __nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_put extern int nla_put ( s#sk_buff * , int , int , const void * ) 
nla_put_nohdr extern int nla_put_nohdr ( s#sk_buff * , int , const void * ) 
nla_append extern int nla_append ( s#sk_buff * , int , const void * ) 
nla_validate extern int nla_validate ( const s#nlattr * , int , int , const s#nla_policy * ) 
nla_policy_len extern int nla_policy_len ( const s#nla_policy * , int ) 
nla_parse extern int nla_parse ( s#nlattr * * , int , const s#nlattr * , int , const s#nla_policy * ) 
nla_find extern s#nlattr * nla_find ( const s#nlattr * , int , int ) 
nla_strlcpy extern t#size_t nla_strlcpy ( char * , const s#nlattr * , t#size_t ) 
nla_memcpy extern int nla_memcpy ( void * , const s#nlattr * , int ) 
nla_memcmp extern int nla_memcmp ( const s#nlattr * , const void * , t#size_t ) 
nla_strcmp extern int nla_strcmp ( const s#nlattr * , const char * ) 

/* lib/oid_registry.o */
e#OID enum OID { OID_id_dsa_with_sha1 , OID_id_dsa , OID_id_ecdsa_with_sha1 , OID_id_ecPublicKey , OID_rsaEncryption , OID_md2WithRSAEncryption , OID_md3WithRSAEncryption , OID_md4WithRSAEncryption , OID_sha1WithRSAEncryption , OID_sha256WithRSAEncryption , OID_sha384WithRSAEncryption , OID_sha512WithRSAEncryption , OID_sha224WithRSAEncryption , OID_data , OID_signed_data , OID_email_address , OID_content_type , OID_messageDigest , OID_signingTime , OID_smimeCapabilites , OID_smimeAuthenticatedAttrs , OID_md2 , OID_md4 , OID_md5 , OID_certAuthInfoAccess , OID_msOutlookExpress , OID_sha1 , OID_commonName , OID_surname , OID_countryName , OID_locality , OID_stateOrProvinceName , OID_organizationName , OID_organizationUnitName , OID_title , OID_description , OID_name , OID_givenName , OID_initials , OID_generationalQualifier , OID_subjectKeyIdentifier , OID_keyUsage , OID_subjectAltName , OID_issuerAltName , OID_basicConstraints , OID_crlDistributionPoints , OID_certPolicies , OID_authorityKeyIdentifier , OID_extKeyUsage , OID__NR } 
look_up_OID extern e#OID look_up_OID ( const void * , t#size_t ) 
sprint_oid extern int sprint_oid ( const void * , t#size_t , char * , t#size_t ) 
sprint_OID extern int sprint_OID ( e#OID , char * , t#size_t ) 

/* lib/parser.o */
s#match_token struct match_token { int token ; const char * pattern ; } 
t#match_table_t typedef s#match_token match_table_t [ ] 
t#substring_t typedef struct { char * from ; char * to ; } substring_t 
match_token int match_token ( char * , const t#match_table_t , t#substring_t [ ] ) 
match_string int match_string ( t#substring_t * , const char * ) 
match_int int match_int ( t#substring_t * , int * ) 
match_octal int match_octal ( t#substring_t * , int * ) 
match_hex int match_hex ( t#substring_t * , int * ) 
match_strlcpy t#size_t match_strlcpy ( char * , const t#substring_t * , t#size_t ) 
match_strdup char * match_strdup ( const t#substring_t * ) 

/* lib/percpu_counter.o */
percpu_counter_set void percpu_counter_set ( s#percpu_counter * , t#s64 ) 
__percpu_counter_add void __percpu_counter_add ( s#percpu_counter * , t#s64 , t#s32 ) 
__percpu_counter_sum t#s64 __percpu_counter_sum ( s#percpu_counter * ) 
__percpu_counter_init int __percpu_counter_init ( s#percpu_counter * , t#s64 , s#lock_class_key * ) 
percpu_counter_destroy void percpu_counter_destroy ( s#percpu_counter * ) 
percpu_counter_batch extern int percpu_counter_batch 
percpu_counter_compare int percpu_counter_compare ( s#percpu_counter * , t#s64 ) 

/* lib/radix-tree.o */
radix_tree_preload int radix_tree_preload ( t#gfp_t ) 
radix_tree_maybe_preload int radix_tree_maybe_preload ( t#gfp_t ) 
s##radix_tree_node
radix_tree_insert int radix_tree_insert ( s#radix_tree_root * , unsigned long , void * ) 
radix_tree_lookup_slot void * * radix_tree_lookup_slot ( s#radix_tree_root * , unsigned long ) 
radix_tree_lookup void * radix_tree_lookup ( s#radix_tree_root * , unsigned long ) 
radix_tree_tag_set void * radix_tree_tag_set ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_clear void * radix_tree_tag_clear ( s#radix_tree_root * , unsigned long , unsigned int ) 
radix_tree_tag_get int radix_tree_tag_get ( s#radix_tree_root * , unsigned long , unsigned int ) 
s#radix_tree_iter struct radix_tree_iter { unsigned long index ; unsigned long next_index ; unsigned long tags ; } 
radix_tree_next_chunk void * * radix_tree_next_chunk ( s#radix_tree_root * , s#radix_tree_iter * , unsigned ) 
radix_tree_range_tag_if_tagged unsigned long radix_tree_range_tag_if_tagged ( s#radix_tree_root * , unsigned long * , unsigned long , unsigned long , unsigned int , unsigned int ) 
radix_tree_next_hole unsigned long radix_tree_next_hole ( s#radix_tree_root * , unsigned long , unsigned long ) 
radix_tree_prev_hole unsigned long radix_tree_prev_hole ( s#radix_tree_root * , unsigned long , unsigned long ) 
radix_tree_gang_lookup unsigned int radix_tree_gang_lookup ( s#radix_tree_root * , void * * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_slot unsigned int radix_tree_gang_lookup_slot ( s#radix_tree_root * , void * * * , unsigned long * , unsigned long , unsigned int ) 
radix_tree_gang_lookup_tag unsigned int radix_tree_gang_lookup_tag ( s#radix_tree_root * , void * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_gang_lookup_tag_slot unsigned int radix_tree_gang_lookup_tag_slot ( s#radix_tree_root * , void * * * , unsigned long , unsigned int , unsigned int ) 
radix_tree_delete void * radix_tree_delete ( s#radix_tree_root * , unsigned long ) 
radix_tree_tagged int radix_tree_tagged ( s#radix_tree_root * , unsigned int ) 

/* lib/raid6/algos.o */
raid6_empty_zero_page extern const char raid6_empty_zero_page [ ( 1UL << 16 ) ] 
s#raid6_calls struct raid6_calls { void ( * gen_syndrome ) ( int , t#size_t , void * * ) ; int ( * valid ) ( void ) ; const char * name ; int prefer ; } 
raid6_call extern s#raid6_calls raid6_call 
raid6_2data_recov extern void ( * raid6_2data_recov ) ( int , t#size_t , int , int , void * * ) 
raid6_datap_recov extern void ( * raid6_datap_recov ) ( int , t#size_t , int , void * * ) 

/* lib/raid6/tables.o */
raid6_gfmul extern const t#u8 raid6_gfmul [ 256 ] [ 256 ] 
raid6_vgfmul extern const t#u8 raid6_vgfmul [ 256 ] [ 32 ] 
raid6_gfexp extern const t#u8 raid6_gfexp [ 256 ] 
raid6_gfinv extern const t#u8 raid6_gfinv [ 256 ] 
raid6_gfexi extern const t#u8 raid6_gfexi [ 256 ] 

/* lib/random32.o */
prandom32 t#u32 prandom32 ( s#rnd_state * ) 
random32 t#u32 random32 ( void ) 
srandom32 void srandom32 ( t#u32 ) 

/* lib/ratelimit.o */
___ratelimit extern int ___ratelimit ( s#ratelimit_state * , const char * ) 

/* lib/rbtree.o */
rb_insert_color extern void rb_insert_color ( s#rb_node * , s#rb_root * ) 
rb_erase extern void rb_erase ( s#rb_node * , s#rb_root * ) 
t#rb_augment_f typedef void ( * rb_augment_f ) ( s#rb_node * , void * ) 
rb_augment_insert extern void rb_augment_insert ( s#rb_node * , t#rb_augment_f , void * ) 
rb_augment_erase_begin extern s#rb_node * rb_augment_erase_begin ( s#rb_node * ) 
rb_augment_erase_end extern void rb_augment_erase_end ( s#rb_node * , t#rb_augment_f , void * ) 
rb_first extern s#rb_node * rb_first ( const s#rb_root * ) 
rb_last extern s#rb_node * rb_last ( const s#rb_root * ) 
rb_next extern s#rb_node * rb_next ( const s#rb_node * ) 
rb_prev extern s#rb_node * rb_prev ( const s#rb_node * ) 
rb_replace_node extern void rb_replace_node ( s#rb_node * , s#rb_node * , s#rb_root * ) 

/* lib/rwsem.o */
__init_rwsem extern void __init_rwsem ( s#rw_semaphore * , const char * , s#lock_class_key * ) 
rwsem_down_read_failed extern s#rw_semaphore * rwsem_down_read_failed ( s#rw_semaphore * ) 
rwsem_down_write_failed extern s#rw_semaphore * rwsem_down_write_failed ( s#rw_semaphore * ) 
rwsem_wake extern s#rw_semaphore * rwsem_wake ( s#rw_semaphore * ) 
rwsem_downgrade_wake extern s#rw_semaphore * rwsem_downgrade_wake ( s#rw_semaphore * ) 

/* lib/scatterlist.o */
sg_next s#scatterlist * sg_next ( s#scatterlist * ) 
sg_last s#scatterlist * sg_last ( s#scatterlist * , unsigned int ) 
sg_init_table void sg_init_table ( s#scatterlist * , unsigned int ) 
sg_init_one void sg_init_one ( s#scatterlist * , const void * , unsigned int ) 
t#sg_free_fn typedef void ( sg_free_fn ) ( s#scatterlist * , unsigned int ) 
__sg_free_table void __sg_free_table ( s#sg_table * , unsigned int , t#sg_free_fn * ) 
sg_free_table void sg_free_table ( s#sg_table * ) 
t#sg_alloc_fn typedef s#scatterlist * ( sg_alloc_fn ) ( unsigned int , t#gfp_t ) 
__sg_alloc_table int __sg_alloc_table ( s#sg_table * , unsigned int , unsigned int , t#gfp_t , t#sg_alloc_fn * ) 
sg_alloc_table int sg_alloc_table ( s#sg_table * , unsigned int , t#gfp_t ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
sg_miter_start void sg_miter_start ( s#sg_mapping_iter * , s#scatterlist * , unsigned int , unsigned int ) 
sg_miter_next t#bool sg_miter_next ( s#sg_mapping_iter * ) 
sg_miter_stop void sg_miter_stop ( s#sg_mapping_iter * ) 
sg_copy_from_buffer t#size_t sg_copy_from_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 
sg_copy_to_buffer t#size_t sg_copy_to_buffer ( s#scatterlist * , unsigned int , void * , t#size_t ) 

/* lib/sha1.o */
sha_transform void sha_transform ( t#__u32 * , const char * , t#__u32 * ) 

/* lib/sort.o */
sort void sort ( void * , t#size_t , t#size_t , int ( * ) ( const void * , const void * ) , void ( * ) ( void * , void * , int ) ) 

/* lib/string.o */
strnicmp extern int strnicmp ( const char * , const char * , t#__kernel_size_t ) 
strcasecmp extern int strcasecmp ( const char * , const char * ) 
strncasecmp extern int strncasecmp ( const char * , const char * , t#size_t ) 
strlcpy t#size_t strlcpy ( char * , const char * , t#size_t ) 
strncat extern char * strncat ( char * , const char * , t#__kernel_size_t ) 
strlcat extern t#size_t strlcat ( char * , const char * , t#__kernel_size_t ) 
strchr extern char * strchr ( const char * , int ) 
strrchr extern char * strrchr ( const char * , int ) 
strnchr extern char * strnchr ( const char * , t#size_t , int ) 
skip_spaces extern char * skip_spaces ( const char * ) 
strim extern char * strim ( char * ) 
strnlen extern t#__kernel_size_t strnlen ( const char * , t#__kernel_size_t ) 
strspn extern t#__kernel_size_t strspn ( const char * , const char * ) 
strcspn extern t#__kernel_size_t strcspn ( const char * , const char * ) 
strpbrk extern char * strpbrk ( const char * , const char * ) 
strsep extern char * strsep ( char * * , const char * ) 
sysfs_streq extern t#bool sysfs_streq ( const char * , const char * ) 
strtobool extern int strtobool ( const char * , t#bool * ) 
memscan extern void * memscan ( void * , int , t#__kernel_size_t ) 
strstr extern char * strstr ( const char * , const char * ) 
strnstr extern char * strnstr ( const char * , const char * , t#size_t ) 
memchr_inv void * memchr_inv ( const void * , int , t#size_t ) 

/* lib/string_helpers.o */
e#string_size_units enum string_size_units { STRING_UNITS_10 , STRING_UNITS_2 , } 
string_get_size int string_get_size ( t#u64 , e#string_size_units , char * , int ) 

/* lib/syscall.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
task_current_syscall extern int task_current_syscall ( s#task_struct * , long * , unsigned long [ 6 ] , unsigned int , unsigned long * , unsigned long * ) 

/* lib/textsearch.o */
s#ts_state struct ts_state { unsigned int offset ; char cb [ 40 ] ; } 
s#ts_config struct ts_config { s#ts_ops * ops ; int flags ; unsigned int ( * get_next_block ) ( unsigned int , const t#u8 * * , s#ts_config * , s#ts_state * ) ; void ( * finish ) ( s#ts_config * , s#ts_state * ) ; } 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#ts_ops struct ts_ops { const char * name ; s#ts_config * ( * init ) ( const void * , unsigned int , t#gfp_t , int ) ; unsigned int ( * find ) ( s#ts_config * , s#ts_state * ) ; void ( * destroy ) ( s#ts_config * ) ; void * ( * get_pattern ) ( s#ts_config * ) ; unsigned int ( * get_pattern_len ) ( s#ts_config * ) ; s#module * owner ; s#list_head list ; } 
textsearch_register extern int textsearch_register ( s#ts_ops * ) 
textsearch_unregister extern int textsearch_unregister ( s#ts_ops * ) 
textsearch_prepare extern s#ts_config * textsearch_prepare ( const char * , const void * , unsigned int , t#gfp_t , int ) 
textsearch_find_continuous extern unsigned int textsearch_find_continuous ( s#ts_config * , s#ts_state * , const void * , unsigned int ) 
textsearch_destroy extern void textsearch_destroy ( s#ts_config * ) 

/* lib/timerqueue.o */
timerqueue_add extern void timerqueue_add ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_del extern void timerqueue_del ( s#timerqueue_head * , s#timerqueue_node * ) 
timerqueue_iterate_next extern s#timerqueue_node * timerqueue_iterate_next ( s#timerqueue_node * ) 

/* lib/uuid.o */
t#uuid_le typedef struct { t#__u8 b [ 16 ] ; } uuid_le 
uuid_le_gen extern void uuid_le_gen ( t#uuid_le * ) 
t#uuid_be typedef struct { t#__u8 b [ 16 ] ; } uuid_be 
uuid_be_gen extern void uuid_be_gen ( t#uuid_be * ) 

/* lib/vsprintf.o */
simple_strtoull extern unsigned long long simple_strtoull ( const char * , char * * , unsigned int ) 
simple_strtoul extern unsigned long simple_strtoul ( const char * , char * * , unsigned int ) 
simple_strtol extern long simple_strtol ( const char * , char * * , unsigned int ) 
simple_strtoll extern long long simple_strtoll ( const char * , char * * , unsigned int ) 
vsnprintf extern int vsnprintf ( char * , t#size_t , const char * , va_list args ) 
vscnprintf extern int vscnprintf ( char * , t#size_t , const char * , va_list args ) 
snprintf extern int snprintf ( char * , t#size_t , const char * , ... ) 
scnprintf extern int scnprintf ( char * , t#size_t , const char * , ... ) 
vsprintf extern int vsprintf ( char * , const char * , va_list ) 
sprintf extern int sprintf ( char * , const char * , ... ) 
vbin_printf int vbin_printf ( t#u32 * , t#size_t , const char * , va_list args ) 
bstr_printf int bstr_printf ( char * , t#size_t , const char * , const t#u32 * ) 
bprintf int bprintf ( t#u32 * , t#size_t , const char * , ... ) 
vsscanf extern int vsscanf ( const char * , const char * , va_list ) 
sscanf extern int sscanf ( const char * , const char * , ... ) 

/* lib/xz/xz_dec_syms.o */
s##xz_dec
e#xz_mode enum xz_mode { XZ_SINGLE , XZ_PREALLOC , XZ_DYNALLOC } 
xz_dec_init extern s#xz_dec * xz_dec_init ( e#xz_mode , t#uint32_t ) 
xz_dec_reset extern void xz_dec_reset ( s#xz_dec * ) 
e#xz_ret enum xz_ret { XZ_OK , XZ_STREAM_END , XZ_UNSUPPORTED_CHECK , XZ_MEM_ERROR , XZ_MEMLIMIT_ERROR , XZ_FORMAT_ERROR , XZ_OPTIONS_ERROR , XZ_DATA_ERROR , XZ_BUF_ERROR } 
s#xz_buf struct xz_buf { const t#uint8_t * in ; t#size_t in_pos ; t#size_t in_size ; t#uint8_t * out ; t#size_t out_pos ; t#size_t out_size ; } 
xz_dec_run extern e#xz_ret xz_dec_run ( s#xz_dec * , s#xz_buf * ) 
xz_dec_end extern void xz_dec_end ( s#xz_dec * ) 

/* lib/zlib_deflate/deflate_syms.o */
zlib_deflate_workspacesize extern int zlib_deflate_workspacesize ( int , int ) 
t#Byte typedef unsigned char Byte 
t#uInt typedef unsigned int uInt 
t#uLong typedef unsigned long uLong 
s#internal_state struct internal_state { int dummy ; } 
s#z_stream_s struct z_stream_s { const t#Byte * next_in ; t#uInt avail_in ; t#uLong total_in ; t#Byte * next_out ; t#uInt avail_out ; t#uLong total_out ; char * msg ; s#internal_state * state ; void * workspace ; int data_type ; t#uLong adler ; t#uLong reserved ; } 
t#z_stream typedef s#z_stream_s z_stream 
t#z_streamp typedef t#z_stream * z_streamp 
zlib_deflate extern int zlib_deflate ( t#z_streamp , int ) 
zlib_deflateInit2 extern int zlib_deflateInit2 ( t#z_streamp , int , int , int , int , int ) 
zlib_deflateEnd extern int zlib_deflateEnd ( t#z_streamp ) 
zlib_deflateReset extern int zlib_deflateReset ( t#z_streamp ) 

/* lib/zlib_inflate/inflate_syms.o */
zlib_inflate_workspacesize extern int zlib_inflate_workspacesize ( void ) 
zlib_inflate extern int zlib_inflate ( t#z_streamp , int ) 
zlib_inflateInit2 extern int zlib_inflateInit2 ( t#z_streamp , int ) 
zlib_inflateEnd extern int zlib_inflateEnd ( t#z_streamp ) 
zlib_inflateReset extern int zlib_inflateReset ( t#z_streamp ) 
zlib_inflateIncomp extern int zlib_inflateIncomp ( t#z_stream * ) 
zlib_inflate_blob extern int zlib_inflate_blob ( void * , unsigned , const void * , unsigned ) 

/* mm/backing-dev.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
default_backing_dev_info extern s#backing_dev_info default_backing_dev_info 
noop_backing_dev_info extern s#backing_dev_info noop_backing_dev_info 
bdi_register int bdi_register ( s#backing_dev_info * , s#device * , const char * , ... ) 
bdi_register_dev int bdi_register_dev ( s#backing_dev_info * , t#dev_t ) 
bdi_unregister void bdi_unregister ( s#backing_dev_info * ) 
bdi_init int bdi_init ( s#backing_dev_info * ) 
bdi_destroy void bdi_destroy ( s#backing_dev_info * ) 
bdi_setup_and_register int bdi_setup_and_register ( s#backing_dev_info * , char * , unsigned int ) 
clear_bdi_congested void clear_bdi_congested ( s#backing_dev_info * , int ) 
set_bdi_congested void set_bdi_congested ( s#backing_dev_info * , int ) 
congestion_wait long congestion_wait ( int , long ) 
s##bootmem_data
wait_iff_congested long wait_iff_congested ( s#zone * , int , long ) 

/* mm/bounce.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_geometry
s##timer_rand_state
s##disk_events
s##bsg_job
s##throtl_data
blk_queue_bounce extern void blk_queue_bounce ( s#request_queue * , s#bio * * ) 

/* mm/cleancache.o */
cleancache_enabled extern int cleancache_enabled 
s#cleancache_filekey struct cleancache_filekey { union { t#ino_t ino ; t#__u32 fh [ 6 ] ; t#u32 key [ 6 ] ; } u ; } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s#cleancache_ops struct cleancache_ops { int ( * init_fs ) ( t#size_t ) ; int ( * init_shared_fs ) ( char * , t#size_t ) ; int ( * get_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * put_page ) ( int , s#cleancache_filekey , unsigned long , s#page * ) ; void ( * invalidate_page ) ( int , s#cleancache_filekey , unsigned long ) ; void ( * invalidate_inode ) ( int , s#cleancache_filekey ) ; void ( * invalidate_fs ) ( int ) ; } 
cleancache_register_ops extern s#cleancache_ops cleancache_register_ops ( s#cleancache_ops * ) 
__cleancache_init_fs extern void __cleancache_init_fs ( s#super_block * ) 
__cleancache_init_shared_fs extern void __cleancache_init_shared_fs ( char * , s#super_block * ) 
__cleancache_get_page extern int __cleancache_get_page ( s#page * ) 
__cleancache_put_page extern void __cleancache_put_page ( s#page * ) 
__cleancache_invalidate_page extern void __cleancache_invalidate_page ( s#address_space * , s#page * ) 
__cleancache_invalidate_inode extern void __cleancache_invalidate_inode ( s#address_space * ) 
__cleancache_invalidate_fs extern void __cleancache_invalidate_fs ( s#super_block * ) 

/* mm/dmapool.o */
s##dma_pool
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
dma_pool_create s#dma_pool * dma_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dma_pool_destroy void dma_pool_destroy ( s#dma_pool * ) 
dma_pool_alloc void * dma_pool_alloc ( s#dma_pool * , t#gfp_t , t#dma_addr_t * ) 
dma_pool_free void dma_pool_free ( s#dma_pool * , void * , t#dma_addr_t ) 
dmam_pool_create s#dma_pool * dmam_pool_create ( const char * , s#device * , t#size_t , t#size_t , t#size_t ) 
dmam_pool_destroy void dmam_pool_destroy ( s#dma_pool * ) 

/* mm/filemap.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
delete_from_page_cache extern void delete_from_page_cache ( s#page * ) 
filemap_fdatawrite extern int filemap_fdatawrite ( s#address_space * ) 
filemap_fdatawrite_range extern int filemap_fdatawrite_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_flush extern int filemap_flush ( s#address_space * ) 
filemap_fdatawait_range extern int filemap_fdatawait_range ( s#address_space * , t#loff_t , t#loff_t ) 
filemap_fdatawait extern int filemap_fdatawait ( s#address_space * ) 
filemap_write_and_wait extern int filemap_write_and_wait ( s#address_space * ) 
filemap_write_and_wait_range extern int filemap_write_and_wait_range ( s#address_space * , t#loff_t , t#loff_t ) 
replace_page_cache_page int replace_page_cache_page ( s#page * , s#page * , t#gfp_t ) 
add_to_page_cache_locked int add_to_page_cache_locked ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache int add_to_page_cache ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
add_to_page_cache_lru int add_to_page_cache_lru ( s#page * , s#address_space * , unsigned long , t#gfp_t ) 
__page_cache_alloc extern s#page * __page_cache_alloc ( t#gfp_t ) 
wait_on_page_bit extern void wait_on_page_bit ( s#page * , int ) 
add_page_wait_queue extern void add_page_wait_queue ( s#page * , t#wait_queue_t * ) 
unlock_page extern void unlock_page ( s#page * ) 
end_page_writeback extern void end_page_writeback ( s#page * ) 
__lock_page extern void __lock_page ( s#page * ) 
__lock_page_killable extern int __lock_page_killable ( s#page * ) 
__wait_on_page_locked_killable extern int __wait_on_page_locked_killable ( s#page * ) 
__wait_on_page_locked extern void __wait_on_page_locked ( s#page * ) 
find_get_page extern s#page * find_get_page ( s#address_space * , unsigned long ) 
find_lock_page extern s#page * find_lock_page ( s#address_space * , unsigned long ) 
find_or_create_page extern s#page * find_or_create_page ( s#address_space * , unsigned long , t#gfp_t ) 
find_get_pages_contig unsigned find_get_pages_contig ( s#address_space * , unsigned long , unsigned int , s#page * * ) 
find_get_pages_tag unsigned find_get_pages_tag ( s#address_space * , unsigned long * , int , unsigned int , s#page * * ) 
grab_cache_page_nowait extern s#page * grab_cache_page_nowait ( s#address_space * , unsigned long ) 
generic_segment_checks extern int generic_segment_checks ( const s#iovec * , unsigned long * , t#size_t * , int ) 
generic_file_aio_read extern t#ssize_t generic_file_aio_read ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
filemap_fault extern int filemap_fault ( s#vm_area_struct * , s#vm_fault * ) 
filemap_page_mkwrite extern int filemap_page_mkwrite ( s#vm_area_struct * , s#vm_fault * ) 
generic_file_mmap extern int generic_file_mmap ( s#file * , s#vm_area_struct * ) 
generic_file_readonly_mmap extern int generic_file_readonly_mmap ( s#file * , s#vm_area_struct * ) 
t#filler_t typedef int filler_t ( void * , s#page * ) 
read_cache_page_async extern s#page * read_cache_page_async ( s#address_space * , unsigned long , t#filler_t * , void * ) 
read_cache_page_gfp extern s#page * read_cache_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 
read_cache_page extern s#page * read_cache_page ( s#address_space * , unsigned long , t#filler_t * , void * ) 
should_remove_suid extern int should_remove_suid ( s#dentry * ) 
file_remove_suid extern int file_remove_suid ( s#file * ) 
s#iov_iter struct iov_iter { const s#iovec * iov ; unsigned long nr_segs ; t#size_t iov_offset ; t#size_t count ; } 
iov_iter_copy_from_user_atomic t#size_t iov_iter_copy_from_user_atomic ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_copy_from_user t#size_t iov_iter_copy_from_user ( s#page * , s#iov_iter * , unsigned long , t#size_t ) 
iov_iter_advance void iov_iter_advance ( s#iov_iter * , t#size_t ) 
iov_iter_fault_in_readable int iov_iter_fault_in_readable ( s#iov_iter * , t#size_t ) 
iov_iter_single_seg_count t#size_t iov_iter_single_seg_count ( const s#iov_iter * ) 
generic_write_checks2 int generic_write_checks2 ( s#kiocb * , t#loff_t * , t#size_t * , int ) 
generic_write_checks int generic_write_checks ( s#file * , t#loff_t * , t#size_t * , int ) 
pagecache_write_begin int pagecache_write_begin ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * * , void * * ) 
pagecache_write_end int pagecache_write_end ( s#file * , s#address_space * , t#loff_t , unsigned , unsigned , s#page * , void * ) 
generic_file_direct_write extern t#ssize_t generic_file_direct_write ( s#kiocb * , const s#iovec * , unsigned long * , t#loff_t , t#loff_t * , t#size_t , t#size_t ) 
grab_cache_page_write_begin s#page * grab_cache_page_write_begin ( s#address_space * , unsigned long , unsigned ) 
generic_file_buffered_write extern t#ssize_t generic_file_buffered_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t , t#loff_t * , t#size_t , t#ssize_t ) 
__generic_file_aio_write extern t#ssize_t __generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t * ) 
generic_file_aio_write extern t#ssize_t generic_file_aio_write ( s#kiocb * , const s#iovec * , unsigned long , t#loff_t ) 
try_to_release_page extern int try_to_release_page ( s#page * , t#gfp_t ) 

/* mm/hugetlb.o */
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
s##kstatfs
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
vma_kernel_pagesize extern unsigned long vma_kernel_pagesize ( s#vm_area_struct * ) 
PageHuge int PageHuge ( s#page * ) 

/* mm/maccess.o */
probe_kernel_read extern long probe_kernel_read ( void * , const void * , t#size_t ) 
probe_kernel_write extern long __attribute__ ( ( no_instrument_function ) ) probe_kernel_write ( void * , const void * , t#size_t ) 

/* mm/memcontrol.o */
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##linux_binfmt
e#vm_event_item enum vm_event_item { PGPGIN , PGPGOUT , PSWPIN , PSWPOUT , PGALLOC_DMA , PGALLOC_NORMAL , PGALLOC_MOVABLE , PGFREE , PGACTIVATE , PGDEACTIVATE , PGFAULT , PGMAJFAULT , PGREFILL_DMA , PGREFILL_NORMAL , PGREFILL_MOVABLE , PGSTEAL_DMA , PGSTEAL_NORMAL , PGSTEAL_MOVABLE , PGSCAN_KSWAPD_DMA , PGSCAN_KSWAPD_NORMAL , PGSCAN_KSWAPD_MOVABLE , PGSCAN_DIRECT_DMA , PGSCAN_DIRECT_NORMAL , PGSCAN_DIRECT_MOVABLE , PGSCAN_DIRECT_THROTTLE , PGSCAN_ZONE_RECLAIM_FAILED , PGINODESTEAL , SLABS_SCANNED , KSWAPD_STEAL , KSWAPD_INODESTEAL , KSWAPD_LOW_WMARK_HIT_QUICKLY , KSWAPD_HIGH_WMARK_HIT_QUICKLY , KSWAPD_SKIP_CONGESTION_WAIT , PAGEOUTRUN , ALLOCSTALL , PGROTATED , COMPACTBLOCKS , COMPACTPAGES , COMPACTPAGEFAILED , COMPACTSTALL , COMPACTFAIL , COMPACTSUCCESS , HTLB_BUDDY_PGALLOC , HTLB_BUDDY_PGALLOC_FAIL , UNEVICTABLE_PGCULLED , UNEVICTABLE_PGSCANNED , UNEVICTABLE_PGRESCUED , UNEVICTABLE_PGMLOCKED , UNEVICTABLE_PGMUNLOCKED , UNEVICTABLE_PGCLEARED , UNEVICTABLE_PGSTRANDED , UNEVICTABLE_MLOCKFREED , NR_VM_EVENT_ITEMS } 
mem_cgroup_count_vm_event void mem_cgroup_count_vm_event ( s#mm_struct * , e#vm_event_item ) 
e#mem_cgroup_page_stat_item enum mem_cgroup_page_stat_item { MEMCG_NR_FILE_MAPPED , } 
mem_cgroup_update_page_stat void mem_cgroup_update_page_stat ( s#page * , e#mem_cgroup_page_stat_item , int ) 

/* mm/memory.o */
num_physpages extern unsigned long num_physpages 
high_memory extern void * high_memory 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##linux_binfmt
s#zap_details struct zap_details { s#vm_area_struct * nonlinear_vma ; s#address_space * check_mapping ; unsigned long first_index ; unsigned long last_index ; } 
zap_page_range unsigned long zap_page_range ( s#vm_area_struct * , unsigned long , unsigned long , s#zap_details * ) 
zap_vma_ptes int zap_vma_ptes ( s#vm_area_struct * , unsigned long , unsigned long ) 
__get_user_pages int __get_user_pages ( s#task_struct * , s#mm_struct * , unsigned long , int , unsigned int , s#page * * , s#vm_area_struct * * , int * ) 
get_user_pages int get_user_pages ( s#task_struct * , s#mm_struct * , unsigned long , int , int , int , s#page * * , s#vm_area_struct * * ) 
vm_insert_page int vm_insert_page ( s#vm_area_struct * , unsigned long , s#page * ) 
vm_insert_pfn int vm_insert_pfn ( s#vm_area_struct * , unsigned long , unsigned long ) 
vm_insert_mixed int vm_insert_mixed ( s#vm_area_struct * , unsigned long , unsigned long ) 
remap_pfn_range int remap_pfn_range ( s#vm_area_struct * , unsigned long , unsigned long , unsigned long , t#pgprot_t ) 
vm_iomap_memory int vm_iomap_memory ( s#vm_area_struct * , t#phys_addr_t , unsigned long ) 
t#pte_basic_t typedef unsigned long pte_basic_t 
t#pte_t typedef t#pte_basic_t pte_t 
t#pgtable_t typedef s#page * pgtable_t 
t#pte_fn_t typedef int ( * pte_fn_t ) ( t#pte_t * , t#pgtable_t , unsigned long , void * ) 
apply_to_page_range extern int apply_to_page_range ( s#mm_struct * , unsigned long , unsigned long , t#pte_fn_t , void * ) 
unmap_mapping_range void unmap_mapping_range ( s#address_space * , t#loff_t const , t#loff_t const , int ) 
follow_pfn int follow_pfn ( s#vm_area_struct * , unsigned long , unsigned long * ) 

/* mm/memory_hotplug.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
__add_pages extern int __add_pages ( int , s#zone * , unsigned long , unsigned long ) 
__remove_pages extern int __remove_pages ( s#zone * , unsigned long , unsigned long ) 
t#online_page_callback_t typedef void ( * online_page_callback_t ) ( s#page * ) 
set_online_page_callback extern int set_online_page_callback ( t#online_page_callback_t ) 
restore_online_page_callback extern int restore_online_page_callback ( t#online_page_callback_t ) 
__online_page_set_limits extern void __online_page_set_limits ( s#page * ) 
__online_page_increment_counters extern void __online_page_increment_counters ( s#page * ) 
__online_page_free extern void __online_page_free ( s#page * ) 
add_memory extern int add_memory ( int , t#u64 , t#u64 ) 
remove_memory extern int remove_memory ( t#u64 , t#u64 ) 

/* mm/mempolicy.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
alloc_pages_current extern s#page * alloc_pages_current ( t#gfp_t , unsigned ) 

/* mm/mempool.o */
mempool_create extern t#mempool_t * mempool_create ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * ) 
mempool_create_node extern t#mempool_t * mempool_create_node ( int , t#mempool_alloc_t * , t#mempool_free_t * , void * , int ) 
mempool_resize extern int mempool_resize ( t#mempool_t * , int , t#gfp_t ) 
mempool_destroy extern void mempool_destroy ( t#mempool_t * ) 
mempool_alloc extern void * mempool_alloc ( t#mempool_t * , t#gfp_t ) 
mempool_free extern void mempool_free ( void * , t#mempool_t * ) 
mempool_alloc_slab void * mempool_alloc_slab ( t#gfp_t , void * ) 
mempool_free_slab void mempool_free_slab ( void * , void * ) 
mempool_kmalloc void * mempool_kmalloc ( t#gfp_t , void * ) 
mempool_kfree void mempool_kfree ( void * , void * ) 
mempool_alloc_pages void * mempool_alloc_pages ( t#gfp_t , void * ) 
mempool_free_pages void mempool_free_pages ( void * , void * ) 

/* mm/migrate.o */
migrate_prep extern int migrate_prep ( void ) 
putback_lru_pages extern void putback_lru_pages ( s#list_head * ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
fail_migrate_page extern int fail_migrate_page ( s#address_space * , s#page * , s#page * ) 
migrate_page extern int migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 
buffer_migrate_page extern int buffer_migrate_page ( s#address_space * , s#page * , s#page * , e#migrate_mode ) 
t#new_page_t typedef s#page * new_page_t ( s#page * , unsigned long , int * * ) 
migrate_pages extern int migrate_pages ( s#list_head * , t#new_page_t , unsigned long , t#bool , e#migrate_mode ) 

/* mm/mlock.o */
can_do_mlock extern int can_do_mlock ( void ) 

/* mm/mm_init.o */
s##sock
s##sysfs_dirent
mm_kobj extern s#kobject * mm_kobj 

/* mm/mmap.o */
vm_get_page_prot t#pgprot_t vm_get_page_prot ( unsigned long ) 
vm_memory_committed unsigned long vm_memory_committed ( void ) 
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##hd_struct
s##gendisk
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
do_mmap_pgoff extern unsigned long do_mmap_pgoff ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long , unsigned long ) 
get_unmapped_area extern unsigned long get_unmapped_area ( s#file * , unsigned long , unsigned long , unsigned long , unsigned long ) 
find_vma extern s#vm_area_struct * find_vma ( s#mm_struct * , unsigned long ) 
do_munmap extern int do_munmap ( s#mm_struct * , unsigned long , t#size_t ) 
do_brk extern unsigned long do_brk ( unsigned long , unsigned long ) 

/* mm/mmu_context.o */
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
use_mm void use_mm ( s#mm_struct * ) 
unuse_mm void unuse_mm ( s#mm_struct * ) 

/* mm/oom_kill.o */
register_oom_notifier extern int register_oom_notifier ( s#notifier_block * ) 
unregister_oom_notifier extern int unregister_oom_notifier ( s#notifier_block * ) 

/* mm/page-writeback.o */
laptop_mode extern int laptop_mode 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##kstatfs
s##export_operations
s##xattr_handler
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##mempolicy
s##linux_binfmt
s##cgroupfs_root
s##css_id
s##ring_buffer
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
bdi_writeout_inc extern void bdi_writeout_inc ( s#backing_dev_info * ) 
bdi_set_max_ratio int bdi_set_max_ratio ( s#backing_dev_info * , unsigned int ) 
balance_dirty_pages_ratelimited_nr void balance_dirty_pages_ratelimited_nr ( s#address_space * , unsigned long ) 
tag_pages_for_writeback void tag_pages_for_writeback ( s#address_space * , unsigned long , unsigned long ) 
t#writepage_t typedef int ( * writepage_t ) ( s#page * , s#writeback_control * , void * ) 
write_cache_pages int write_cache_pages ( s#address_space * , s#writeback_control * , t#writepage_t , void * ) 
generic_writepages int generic_writepages ( s#address_space * , s#writeback_control * ) 
write_one_page int write_one_page ( s#page * , int ) 
account_page_dirtied void account_page_dirtied ( s#page * , s#address_space * ) 
account_page_writeback void account_page_writeback ( s#page * ) 
__set_page_dirty_nobuffers int __set_page_dirty_nobuffers ( s#page * ) 
set_page_dirty_notag int set_page_dirty_notag ( s#page * ) 
redirty_page_for_writepage int redirty_page_for_writepage ( s#writeback_control * , s#page * ) 
set_page_dirty int set_page_dirty ( s#page * ) 
set_page_dirty_lock int set_page_dirty_lock ( s#page * ) 
clear_page_dirty_for_io int clear_page_dirty_for_io ( s#page * ) 
test_set_page_writeback int test_set_page_writeback ( s#page * ) 
mapping_tagged int mapping_tagged ( s#address_space * , int ) 
wait_for_stable_page void wait_for_stable_page ( s#page * ) 

/* mm/page_alloc.o */
E#N_NORMAL_MEMORY 2 
E#NR_NODE_STATES ( E#N_NORMAL_MEMORY ) + 2 
node_states extern t#nodemask_t node_states [ E#NR_NODE_STATES ] 
totalram_pages extern unsigned long totalram_pages 
movable_zone extern int movable_zone 
nr_node_ids extern int nr_node_ids 
nr_online_nodes extern int nr_online_nodes 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
split_page void split_page ( s#page * , unsigned int ) 
__alloc_pages_nodemask s#page * __alloc_pages_nodemask ( t#gfp_t , unsigned int , s#zonelist * , t#nodemask_t * ) 
__get_free_pages extern unsigned long __get_free_pages ( t#gfp_t , unsigned int ) 
get_zeroed_page extern unsigned long get_zeroed_page ( t#gfp_t ) 
__free_pages extern void __free_pages ( s#page * , unsigned int ) 
free_pages extern void free_pages ( unsigned long , unsigned int ) 
alloc_pages_exact void * alloc_pages_exact ( t#size_t , t#gfp_t ) 
alloc_pages_exact_nid void * alloc_pages_exact_nid ( int , t#size_t , t#gfp_t ) 
free_pages_exact void free_pages_exact ( void * , t#size_t ) 
nr_free_buffer_pages extern unsigned long nr_free_buffer_pages ( void ) 
s#sysinfo struct sysinfo { long uptime ; unsigned long loads [ 3 ] ; unsigned long totalram ; unsigned long freeram ; unsigned long sharedram ; unsigned long bufferram ; unsigned long totalswap ; unsigned long freeswap ; unsigned short procs ; unsigned short pad ; unsigned long totalhigh ; unsigned long freehigh ; unsigned int mem_unit ; char _f [ 20 - 2 * sizeof ( long ) - sizeof ( int ) ] ; } 
si_meminfo extern void si_meminfo ( s#sysinfo * ) 

/* mm/percpu.o */
pcpu_base_addr extern void * pcpu_base_addr 
__alloc_percpu extern void * __alloc_percpu ( t#size_t , t#size_t ) 
free_percpu extern void free_percpu ( void * ) 

/* mm/readahead.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##array_cache
s##kmem_list3
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
file_ra_state_init extern void file_ra_state_init ( s#file_ra_state * , s#address_space * ) 
read_cache_pages extern int read_cache_pages ( s#address_space * , s#list_head * , t#filler_t * , void * ) 
page_cache_sync_readahead void page_cache_sync_readahead ( s#address_space * , s#file_ra_state * , s#file * , unsigned long , unsigned long ) 
page_cache_async_readahead void page_cache_async_readahead ( s#address_space * , s#file_ra_state * , s#file * , s#page * , unsigned long , unsigned long ) 

/* mm/rmap.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
s##array_cache
s##kmem_list3
page_mkclean int page_mkclean ( s#page * ) 

/* mm/shmem.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##hd_geometry
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##array_cache
s##kmem_list3
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##mtd_info
s##mnt_namespace
s##cdev
shmem_truncate_range extern void shmem_truncate_range ( s#inode * , t#loff_t , t#loff_t ) 
shmem_file_setup s#file * shmem_file_setup ( const char * , t#loff_t , unsigned long ) 
shmem_read_mapping_page_gfp extern s#page * shmem_read_mapping_page_gfp ( s#address_space * , unsigned long , t#gfp_t ) 

/* mm/slab.o */
s##array_cache
s##kmem_list3
slab_buffer_size extern t#size_t slab_buffer_size ( s#kmem_cache * ) 
s#cache_sizes struct cache_sizes { t#size_t cs_size ; s#kmem_cache * cs_cachep ; s#kmem_cache * cs_dmacachep ; } 
malloc_sizes extern s#cache_sizes malloc_sizes [ ] 
kmem_cache_create s#kmem_cache * kmem_cache_create ( const char * , t#size_t , t#size_t , unsigned long , void ( * ) ( void * ) ) 
kmem_cache_shrink int kmem_cache_shrink ( s#kmem_cache * ) 
kmem_cache_destroy void kmem_cache_destroy ( s#kmem_cache * ) 
kmem_cache_alloc void * kmem_cache_alloc ( s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_trace extern void * kmem_cache_alloc_trace ( t#size_t , s#kmem_cache * , t#gfp_t ) 
kmem_cache_alloc_node extern void * kmem_cache_alloc_node ( s#kmem_cache * , t#gfp_t , int ) 
kmem_cache_alloc_node_trace extern void * kmem_cache_alloc_node_trace ( t#size_t , s#kmem_cache * , t#gfp_t , int ) 
__kmalloc_node extern void * __kmalloc_node ( t#size_t , t#gfp_t , int ) 
__kmalloc_node_track_caller extern void * __kmalloc_node_track_caller ( t#size_t , t#gfp_t , int , unsigned long ) 
__kmalloc void * __kmalloc ( t#size_t , t#gfp_t ) 
__kmalloc_track_caller extern void * __kmalloc_track_caller ( t#size_t , t#gfp_t , unsigned long ) 
kmem_cache_free void kmem_cache_free ( s#kmem_cache * , void * ) 
kfree void kfree ( const void * ) 
kmem_cache_size unsigned int kmem_cache_size ( s#kmem_cache * ) 
ksize t#size_t ksize ( const void * ) 

/* mm/sparse.o */
s##page_cgroup
s#mem_section struct mem_section { unsigned long section_mem_map ; unsigned long * pageblock_flags ; s#page_cgroup * page_cgroup ; unsigned long pad ; } 
mem_section extern s#mem_section * mem_section [ ( ( ( ( 1UL << ( 44 - 24 ) ) ) + ( ( ( 1UL << 16 ) / sizeof ( struct mem_section ) ) ) - 1 ) / ( ( ( 1UL << 16 ) / sizeof ( struct mem_section ) ) ) ) ] 

/* mm/swap.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##kmem_cache
put_page void put_page ( s#page * ) 
__get_page_tail extern t#bool __get_page_tail ( s#page * ) 
put_pages_list void put_pages_list ( s#list_head * ) 
get_kernel_pages int get_kernel_pages ( const s#kvec * , int , int , s#page * * ) 
get_kernel_page int get_kernel_page ( unsigned long , int , s#page * * ) 
mark_page_accessed extern void mark_page_accessed ( s#page * ) 
e#lru_list enum lru_list { LRU_INACTIVE_ANON = 0 , LRU_ACTIVE_ANON = 0 + 1 , LRU_INACTIVE_FILE = 0 + 2 , LRU_ACTIVE_FILE = 0 + 2 + 1 , LRU_UNEVICTABLE , NR_LRU_LISTS } 
__lru_cache_add extern void __lru_cache_add ( s#page * , e#lru_list ) 
release_pages void release_pages ( s#page * * , int , int ) 
__pagevec_release void __pagevec_release ( s#pagevec * ) 
____pagevec_lru_add void ____pagevec_lru_add ( s#pagevec * , e#lru_list ) 
pagevec_lookup unsigned pagevec_lookup ( s#pagevec * , s#address_space * , unsigned long , unsigned ) 
pagevec_lookup_tag unsigned pagevec_lookup_tag ( s#pagevec * , s#address_space * , unsigned long * , int , unsigned ) 

/* mm/swapfile.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##pipe_inode_info
s##mem_cgroup
s##ring_buffer_iter
s##eventfd_ctx
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
e##migrate_mode
__page_file_mapping extern s#address_space * __page_file_mapping ( s#page * ) 
__page_file_index extern unsigned long __page_file_index ( s#page * ) 

/* mm/truncate.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##kmem_cache
cancel_dirty_page extern void cancel_dirty_page ( s#page * , unsigned int ) 
generic_error_remove_page int generic_error_remove_page ( s#address_space * , s#page * ) 
truncate_inode_pages_range extern void truncate_inode_pages_range ( s#address_space * , t#loff_t , t#loff_t ) 
truncate_inode_pages extern void truncate_inode_pages ( s#address_space * , t#loff_t ) 
invalidate_mapping_pages unsigned long invalidate_mapping_pages ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2_range extern int invalidate_inode_pages2_range ( s#address_space * , unsigned long , unsigned long ) 
invalidate_inode_pages2 extern int invalidate_inode_pages2 ( s#address_space * ) 
truncate_pagecache extern void truncate_pagecache ( s#inode * , t#loff_t , t#loff_t ) 
truncate_setsize extern void truncate_setsize ( s#inode * , t#loff_t ) 
vmtruncate extern int vmtruncate ( s#inode * , t#loff_t ) 

/* mm/util.o */
kstrdup extern char * kstrdup ( const char * , t#gfp_t ) 
kstrndup extern char * kstrndup ( const char * , t#size_t , t#gfp_t ) 
kmemdup extern void * kmemdup ( const void * , t#size_t , t#gfp_t ) 
memdup_user extern void * memdup_user ( const void * , t#size_t ) 
__krealloc void * __krealloc ( const void * , t#size_t , t#gfp_t ) 
krealloc void * krealloc ( const void * , t#size_t , t#gfp_t ) 
kzfree void kzfree ( const void * ) 
strndup_user extern char * strndup_user ( const char * , long ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
__get_user_pages_fast int __get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
get_user_pages_fast int get_user_pages_fast ( unsigned long , int , int , s#page * * ) 
kvfree extern void kvfree ( const void * ) 
__tracepoint_kmalloc extern s#tracepoint __tracepoint_kmalloc 
__tracepoint_kmem_cache_alloc extern s#tracepoint __tracepoint_kmem_cache_alloc 
__tracepoint_kmalloc_node extern s#tracepoint __tracepoint_kmalloc_node 
__tracepoint_kmem_cache_alloc_node extern s#tracepoint __tracepoint_kmem_cache_alloc_node 
__tracepoint_kfree extern s#tracepoint __tracepoint_kfree 
__tracepoint_kmem_cache_free extern s#tracepoint __tracepoint_kmem_cache_free 

/* mm/vmalloc.o */
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
vmalloc_to_page s#page * vmalloc_to_page ( const void * ) 
vmalloc_to_pfn unsigned long vmalloc_to_pfn ( const void * ) 
vm_unmap_aliases extern void vm_unmap_aliases ( void ) 
vm_unmap_ram extern void vm_unmap_ram ( const void * , unsigned int ) 
vm_map_ram extern void * vm_map_ram ( s#page * * , unsigned int , int , t#pgprot_t ) 
unmap_kernel_range_noflush extern void unmap_kernel_range_noflush ( unsigned long , unsigned long ) 
s#vm_struct struct vm_struct { s#vm_struct * next ; void * addr ; unsigned long size ; unsigned long flags ; s#page * * pages ; unsigned int nr_pages ; t#phys_addr_t phys_addr ; void * caller ; } 
map_vm_area extern int map_vm_area ( s#vm_struct * , t#pgprot_t , s#page * * * ) 
__get_vm_area extern s#vm_struct * __get_vm_area ( unsigned long , unsigned long , unsigned long , unsigned long ) 
vfree extern void vfree ( const void * ) 
vunmap extern void vunmap ( const void * ) 
vmap extern void * vmap ( s#page * * , unsigned int , unsigned long , t#pgprot_t ) 
__vmalloc extern void * __vmalloc ( unsigned long , t#gfp_t , t#pgprot_t ) 
vmalloc extern void * vmalloc ( unsigned long ) 
vzalloc extern void * vzalloc ( unsigned long ) 
vmalloc_user extern void * vmalloc_user ( unsigned long ) 
vmalloc_node extern void * vmalloc_node ( unsigned long , int ) 
vzalloc_node extern void * vzalloc_node ( unsigned long , int ) 
vmalloc_32 extern void * vmalloc_32 ( unsigned long ) 
vmalloc_32_user extern void * vmalloc_32_user ( unsigned long ) 
remap_vmalloc_range_partial extern int remap_vmalloc_range_partial ( s#vm_area_struct * , unsigned long , void * , unsigned long ) 
remap_vmalloc_range extern int remap_vmalloc_range ( s#vm_area_struct * , void * , unsigned long ) 
alloc_vm_area extern s#vm_struct * alloc_vm_area ( t#size_t ) 
free_vm_area extern void free_vm_area ( s#vm_struct * ) 

/* mm/vmscan.o */
register_shrinker extern void register_shrinker ( s#shrinker * ) 
unregister_shrinker extern void unregister_shrinker ( s#shrinker * ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##hd_geometry
s##radix_tree_node
s##blk_trace
s##bsg_job
s##throtl_data
s##timer_rand_state
s##disk_events
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
isolate_lru_page extern int isolate_lru_page ( s#page * ) 

/* mm/vmstat.o */
E#NR_VM_EVENT_ITEMS 52 
s#vm_event_state struct vm_event_state { unsigned long event [ E#NR_VM_EVENT_ITEMS ] ; } 
vm_event_states extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#vm_event_state ) vm_event_states 
all_vm_events extern void all_vm_events ( unsigned long * ) 
vm_stat extern t#atomic_long_t vm_stat [ E#NR_VM_ZONE_STAT_ITEMS ] 
s##bootmem_data
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
e#zone_stat_item enum zone_stat_item { NR_FREE_PAGES , NR_LRU_BASE , NR_INACTIVE_ANON = E#NR_LRU_BASE , NR_ACTIVE_ANON , NR_INACTIVE_FILE , NR_ACTIVE_FILE , NR_UNEVICTABLE , NR_MLOCK , NR_ANON_PAGES , NR_FILE_MAPPED , NR_FILE_PAGES , NR_FILE_DIRTY , NR_WRITEBACK , NR_SLAB_RECLAIMABLE , NR_SLAB_UNRECLAIMABLE , NR_PAGETABLE , NR_KERNEL_STACK , NR_UNSTABLE_NFS , NR_BOUNCE , NR_VMSCAN_WRITE , NR_VMSCAN_IMMEDIATE , NR_WRITEBACK_TEMP , NR_ISOLATED_ANON , NR_ISOLATED_FILE , NR_SHMEM , NR_DIRTIED , NR_WRITTEN , NUMA_HIT , NUMA_MISS , NUMA_FOREIGN , NUMA_INTERLEAVE_HIT , NUMA_LOCAL , NUMA_OTHER , NR_ANON_TRANSPARENT_HUGEPAGES , NR_VM_ZONE_STAT_ITEMS } 
__mod_zone_page_state void __mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
__inc_zone_page_state void __inc_zone_page_state ( s#page * , e#zone_stat_item ) 
__dec_zone_page_state void __dec_zone_page_state ( s#page * , e#zone_stat_item ) 
mod_zone_page_state void mod_zone_page_state ( s#zone * , e#zone_stat_item , int ) 
inc_zone_page_state void inc_zone_page_state ( s#page * , e#zone_stat_item ) 
dec_zone_page_state void dec_zone_page_state ( s#page * , e#zone_stat_item ) 

/* net/802/fc.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
alloc_fcdev extern s#net_device * alloc_fcdev ( int ) 

/* net/802/garp.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
e#garp_applications enum garp_applications { GARP_APPLICATION_GVRP , __GARP_APPLICATION_MAX } 
s#stp_proto struct stp_proto { unsigned char group_address [ 6 ] ; void ( * rcv ) ( const s#stp_proto * , s#sk_buff * , s#net_device * ) ; void * data ; } 
s#garp_application struct garp_application { e#garp_applications type ; unsigned int maxattr ; s#stp_proto proto ; } 
s#garp_applicant struct garp_applicant { s#garp_application * app ; s#net_device * dev ; s#timer_list join_timer ; t#spinlock_t lock ; s#sk_buff_head queue ; s#sk_buff * pdu ; s#rb_root gid ; s#rcu_head rcu ; } 
E#__GARP_APPLICATION_MAX 1 
s#garp_port struct garp_port { s#garp_applicant * applicants [ ( E#__GARP_APPLICATION_MAX - 1 ) + 1 ] ; s#rcu_head rcu ; } 
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
garp_request_join extern int garp_request_join ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_request_leave extern void garp_request_leave ( const s#net_device * , const s#garp_application * , const void * , t#u8 , t#u8 ) 
garp_init_applicant extern int garp_init_applicant ( s#net_device * , s#garp_application * ) 
garp_uninit_applicant extern void garp_uninit_applicant ( s#net_device * , s#garp_application * ) 
garp_register_application extern int garp_register_application ( s#garp_application * ) 
garp_unregister_application extern void garp_unregister_application ( s#garp_application * ) 

/* net/802/p8022.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
s#packet_type struct packet_type { t#__be16 type ; s#net_device * dev ; int ( * func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , t#u32 ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; void * af_packet_priv ; s#list_head list ; } 
s#llc_addr struct llc_addr { unsigned char lsap ; unsigned char mac [ 6 ] ; } 
s#llc_sap struct llc_sap { unsigned char state ; unsigned char p_bit ; unsigned char f_bit ; t#atomic_t refcnt ; int ( * rcv_func ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; s#llc_addr laddr ; s#list_head node ; t#spinlock_t sk_lock ; int sk_count ; s#hlist_nulls_head sk_laddr_hash [ ( 1 << 6 ) ] ; s#hlist_head sk_dev_hash [ ( 1 << 6 ) ] ; } 
s#datalink_proto struct datalink_proto { unsigned char type [ 8 ] ; s#llc_sap * sap ; unsigned short header_length ; int ( * rcvfunc ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ; int ( * request ) ( s#datalink_proto * , s#sk_buff * , unsigned char * ) ; s#list_head node ; } 
register_8022_client extern s#datalink_proto * register_8022_client ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_8022_client extern void unregister_8022_client ( s#datalink_proto * ) 

/* net/802/p8023.o */
s##llc_sap
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
destroy_8023_client extern void destroy_8023_client ( s#datalink_proto * ) 
make_8023_client extern s#datalink_proto * make_8023_client ( void ) 

/* net/802/psnap.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
register_snap_client extern s#datalink_proto * register_snap_client ( const unsigned char * , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
unregister_snap_client extern void unregister_snap_client ( s#datalink_proto * ) 

/* net/802/stp.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
stp_proto_register extern int stp_proto_register ( const s#stp_proto * ) 
stp_proto_unregister extern void stp_proto_unregister ( const s#stp_proto * ) 

/* net/802/tr.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
tr_type_trans extern t#__be16 tr_type_trans ( s#sk_buff * , s#net_device * ) 
alloc_trdev extern s#net_device * alloc_trdev ( int ) 

/* net/8021q/vlan_core.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##tvec_base
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
__vlan_find_dev_deep extern s#net_device * __vlan_find_dev_deep ( s#net_device * , t#u16 ) 
vlan_dev_real_dev extern s#net_device * vlan_dev_real_dev ( const s#net_device * ) 
vlan_dev_vlan_id extern t#u16 vlan_dev_vlan_id ( const s#net_device * ) 
__vlan_hwaccel_rx extern int __vlan_hwaccel_rx ( s#sk_buff * , s#vlan_group * , t#u16 , int ) 
e#gro_result enum gro_result { GRO_MERGED , GRO_MERGED_FREE , GRO_HELD , GRO_NORMAL , GRO_DROP , } 
t#gro_result_t typedef e#gro_result gro_result_t 
vlan_gro_receive extern t#gro_result_t vlan_gro_receive ( s#napi_struct * , s#vlan_group * , unsigned int , s#sk_buff * ) 
vlan_gro_frags extern t#gro_result_t vlan_gro_frags ( s#napi_struct * , s#vlan_group * , unsigned int ) 

/* net/9p/client.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#p9_fcall struct p9_fcall { t#u32 size ; t#u8 id ; t#u16 tag ; t#size_t offset ; t#size_t capacity ; t#u8 * sdata ; } 
s#p9_req_t struct p9_req_t { int status ; int t_err ; t#wait_queue_head_t * wq ; s#p9_fcall * tc ; s#p9_fcall * rc ; void * aux ; s#list_head req_list ; } 
s#p9_trans_module struct p9_trans_module { s#list_head list ; char * name ; int maxsize ; int def ; s#module * owner ; int ( * create ) ( s#p9_client * , const char * , char * ) ; void ( * close ) ( s#p9_client * ) ; int ( * request ) ( s#p9_client * , s#p9_req_t * ) ; int ( * cancel ) ( s#p9_client * , s#p9_req_t * ) ; int ( * zc_request ) ( s#p9_client * , s#p9_req_t * , char * , char * , int , int , int , int ) ; } 
e#p9_trans_status enum p9_trans_status { Connected , BeginDisconnect , Disconnected , Hung , } 
s##p9_conn
s##p9_idpool
s#p9_client struct p9_client { t#spinlock_t lock ; int msize ; unsigned char proto_version ; s#p9_trans_module * trans_mod ; e#p9_trans_status status ; void * trans ; s#p9_conn * conn ; s#p9_idpool * fidpool ; s#list_head fidlist ; s#p9_idpool * tagpool ; s#p9_req_t * reqs [ 255 ] ; int max_tag ; } 
p9_is_proto_dotl int p9_is_proto_dotl ( s#p9_client * ) 
p9_is_proto_dotu int p9_is_proto_dotu ( s#p9_client * ) 
p9_tag_lookup s#p9_req_t * p9_tag_lookup ( s#p9_client * , t#u16 ) 
p9_client_cb void p9_client_cb ( s#p9_client * , s#p9_req_t * ) 
p9_parse_header int p9_parse_header ( s#p9_fcall * , t#int32_t * , t#int8_t * , t#int16_t * , int ) 
p9_client_create s#p9_client * p9_client_create ( const char * , char * ) 
p9_client_destroy void p9_client_destroy ( s#p9_client * ) 
p9_client_disconnect void p9_client_disconnect ( s#p9_client * ) 
p9_client_begin_disconnect void p9_client_begin_disconnect ( s#p9_client * ) 
s#p9_qid struct p9_qid { t#u8 type ; t#u32 version ; t#u64 path ; } 
s#p9_fid struct p9_fid { s#p9_client * clnt ; t#u32 fid ; int mode ; s#p9_qid qid ; t#u32 iounit ; t#uid_t uid ; void * rdir ; s#list_head flist ; s#list_head dlist ; } 
p9_client_attach s#p9_fid * p9_client_attach ( s#p9_client * , s#p9_fid * , char * , t#u32 , char * ) 
p9_client_walk s#p9_fid * p9_client_walk ( s#p9_fid * , t#uint16_t , char * * , int ) 
p9_client_open int p9_client_open ( s#p9_fid * , int ) 
p9_client_create_dotl int p9_client_create_dotl ( s#p9_fid * , char * , t#u32 , t#u32 , t#gid_t , s#p9_qid * ) 
p9_client_fcreate int p9_client_fcreate ( s#p9_fid * , char * , t#u32 , int , char * ) 
p9_client_symlink int p9_client_symlink ( s#p9_fid * , char * , char * , t#gid_t , s#p9_qid * ) 
p9_client_link int p9_client_link ( s#p9_fid * , s#p9_fid * , char * ) 
p9_client_fsync int p9_client_fsync ( s#p9_fid * , int ) 
p9_client_clunk int p9_client_clunk ( s#p9_fid * ) 
p9_client_remove int p9_client_remove ( s#p9_fid * ) 
p9_client_read int p9_client_read ( s#p9_fid * , char * , char * , t#u64 , t#u32 ) 
p9_client_write int p9_client_write ( s#p9_fid * , char * , const char * , t#u64 , t#u32 ) 
s#p9_wstat struct p9_wstat { t#u16 size ; t#u16 type ; t#u32 dev ; s#p9_qid qid ; t#u32 mode ; t#u32 atime ; t#u32 mtime ; t#u64 length ; char * name ; char * uid ; char * gid ; char * muid ; char * extension ; t#u32 n_uid ; t#u32 n_gid ; t#u32 n_muid ; } 
p9_client_stat s#p9_wstat * p9_client_stat ( s#p9_fid * ) 
s#p9_stat_dotl struct p9_stat_dotl { t#u64 st_result_mask ; s#p9_qid qid ; t#u32 st_mode ; t#u32 st_uid ; t#u32 st_gid ; t#u64 st_nlink ; t#u64 st_rdev ; t#u64 st_size ; t#u64 st_blksize ; t#u64 st_blocks ; t#u64 st_atime_sec ; t#u64 st_atime_nsec ; t#u64 st_mtime_sec ; t#u64 st_mtime_nsec ; t#u64 st_ctime_sec ; t#u64 st_ctime_nsec ; t#u64 st_btime_sec ; t#u64 st_btime_nsec ; t#u64 st_gen ; t#u64 st_data_version ; } 
p9_client_getattr_dotl s#p9_stat_dotl * p9_client_getattr_dotl ( s#p9_fid * , t#u64 ) 
p9_client_wstat int p9_client_wstat ( s#p9_fid * , s#p9_wstat * ) 
s#p9_iattr_dotl struct p9_iattr_dotl { t#u32 valid ; t#u32 mode ; t#u32 uid ; t#u32 gid ; t#u64 size ; t#u64 atime_sec ; t#u64 atime_nsec ; t#u64 mtime_sec ; t#u64 mtime_nsec ; } 
p9_client_setattr int p9_client_setattr ( s#p9_fid * , s#p9_iattr_dotl * ) 
s#p9_rstatfs struct p9_rstatfs { t#u32 type ; t#u32 bsize ; t#u64 blocks ; t#u64 bfree ; t#u64 bavail ; t#u64 files ; t#u64 ffree ; t#u64 fsid ; t#u32 namelen ; } 
p9_client_statfs int p9_client_statfs ( s#p9_fid * , s#p9_rstatfs * ) 
p9_client_rename int p9_client_rename ( s#p9_fid * , s#p9_fid * , char * ) 
p9_client_xattrwalk s#p9_fid * p9_client_xattrwalk ( s#p9_fid * , const char * , t#u64 * ) 
p9_client_xattrcreate int p9_client_xattrcreate ( s#p9_fid * , const char * , t#u64 , int ) 
p9_client_readdir int p9_client_readdir ( s#p9_fid * , char * , t#u32 , t#u64 ) 
p9_client_mknod_dotl int p9_client_mknod_dotl ( s#p9_fid * , char * , int , t#dev_t , t#gid_t , s#p9_qid * ) 
p9_client_mkdir_dotl int p9_client_mkdir_dotl ( s#p9_fid * , char * , int , t#gid_t , s#p9_qid * ) 
s#p9_flock struct p9_flock { t#u8 type ; t#u32 flags ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_lock_dotl int p9_client_lock_dotl ( s#p9_fid * , s#p9_flock * , t#u8 * ) 
s#p9_getlock struct p9_getlock { t#u8 type ; t#u64 start ; t#u64 length ; t#u32 proc_id ; char * client_id ; } 
p9_client_getlock_dotl int p9_client_getlock_dotl ( s#p9_fid * , s#p9_getlock * ) 
p9_client_readlink int p9_client_readlink ( s#p9_fid * , char * * ) 

/* net/9p/error.o */
p9_error_init int p9_error_init ( void ) 
p9_errstr2errno int p9_errstr2errno ( char * , int ) 

/* net/9p/mod.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##kmem_cache
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##p9_conn
s##p9_idpool
v9fs_register_trans void v9fs_register_trans ( s#p9_trans_module * ) 
v9fs_unregister_trans void v9fs_unregister_trans ( s#p9_trans_module * ) 
v9fs_get_trans_by_name s#p9_trans_module * v9fs_get_trans_by_name ( const t#substring_t * ) 
v9fs_get_default_trans s#p9_trans_module * v9fs_get_default_trans ( void ) 

/* net/9p/protocol.o */
p9pdu_dump void p9pdu_dump ( int , s#p9_fcall * ) 
p9stat_free void p9stat_free ( s#p9_wstat * ) 
p9stat_read int p9stat_read ( char * , int , s#p9_wstat * , int ) 
s#p9_dirent struct p9_dirent { s#p9_qid qid ; t#u64 d_off ; unsigned char d_type ; char d_name [ 256 ] ; } 
p9dirent_read int p9dirent_read ( char * , int , s#p9_dirent * , int ) 

/* net/9p/trans_common.o */
s##address_space
s##array_cache
s##kmem_list3
p9_release_pages void p9_release_pages ( s#page * * , int ) 
p9_nr_pages int p9_nr_pages ( char * , int ) 
p9_payload_gup int p9_payload_gup ( char * , int * , s#page * * , int ) 

/* net/9p/util.o */
s##p9_idpool
p9_idpool_create s#p9_idpool * p9_idpool_create ( void ) 
p9_idpool_destroy void p9_idpool_destroy ( s#p9_idpool * ) 
p9_idpool_get int p9_idpool_get ( s#p9_idpool * ) 
p9_idpool_put void p9_idpool_put ( int , s#p9_idpool * ) 
p9_idpool_check int p9_idpool_check ( int , s#p9_idpool * ) 

/* net/appletalk/aarp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s#atalk_addr struct atalk_addr { t#__be16 s_net ; t#__u8 s_node ; } 
aarp_send_ddp extern int aarp_send_ddp ( s#net_device * , s#sk_buff * , s#atalk_addr * , void * ) 

/* net/appletalk/ddp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
atrtr_get_dev extern s#net_device * atrtr_get_dev ( s#atalk_addr * ) 
atalk_find_dev_addr extern s#atalk_addr * atalk_find_dev_addr ( s#net_device * ) 

/* net/appletalk/dev.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
alloc_ltalkdev extern s#net_device * alloc_ltalkdev ( int ) 

/* net/bluetooth/af_bluetooth.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#net_proto_family struct net_proto_family { int family ; int ( * create ) ( s#net * , s#socket * , int , int ) ; s#module * owner ; } 
bt_sock_register int bt_sock_register ( int , const s#net_proto_family * ) 
bt_sock_unregister int bt_sock_unregister ( int ) 
s#bt_sock_list struct bt_sock_list { s#hlist_head head ; t#rwlock_t lock ; } 
bt_sock_link void bt_sock_link ( s#bt_sock_list * , s#sock * ) 
bt_sock_unlink void bt_sock_unlink ( s#bt_sock_list * , s#sock * ) 
bt_accept_enqueue void bt_accept_enqueue ( s#sock * , s#sock * ) 
bt_accept_unlink void bt_accept_unlink ( s#sock * ) 
bt_accept_dequeue s#sock * bt_accept_dequeue ( s#sock * , s#socket * ) 
bt_sock_recvmsg int bt_sock_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
bt_sock_stream_recvmsg int bt_sock_stream_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
bt_sock_poll t#uint bt_sock_poll ( s#file * , s#socket * , t#poll_table * ) 
bt_sock_ioctl int bt_sock_ioctl ( s#socket * , unsigned int , unsigned long ) 
bt_sock_wait_state int bt_sock_wait_state ( s#sock * , int , unsigned long ) 

/* net/bluetooth/hci_conn.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##workqueue_struct
s##rfkill
s#hci_conn struct hci_conn { s#list_head list ; t#atomic_t refcnt ; t#spinlock_t lock ; t#bdaddr_t dst ; t#__u16 handle ; t#__u16 state ; t#__u8 mode ; t#__u8 type ; t#__u8 out ; t#__u8 attempt ; t#__u8 dev_class [ 3 ] ; t#__u8 features [ 8 ] ; t#__u8 ssp_mode ; t#__u16 interval ; t#__u16 pkt_type ; t#__u16 link_policy ; t#__u32 link_mode ; t#__u8 key_type ; t#__u8 auth_type ; t#__u8 sec_level ; t#__u8 pending_sec_level ; t#__u8 pin_length ; t#__u8 io_capability ; t#__u8 power_save ; t#__u16 disc_timeout ; unsigned long pend ; t#__u8 remote_cap ; t#__u8 remote_oob ; t#__u8 remote_auth ; unsigned int sent ; s#sk_buff_head data_q ; s#timer_list disc_timer ; s#timer_list idle_timer ; s#timer_list auto_accept_timer ; s#work_struct work_add ; s#work_struct work_del ; s#device dev ; t#atomic_t devref ; s#hci_dev * hdev ; void * l2cap_data ; void * sco_data ; void * priv ; s#hci_conn * link ; void ( * connect_cfm_cb ) ( s#hci_conn * , t#u8 ) ; void ( * security_cfm_cb ) ( s#hci_conn * , t#u8 ) ; void ( * disconn_cfm_cb ) ( s#hci_conn * , t#u8 ) ; } 
hci_le_conn_update void hci_le_conn_update ( s#hci_conn * , t#u16 , t#u16 , t#u16 , t#u16 ) 
hci_get_route s#hci_dev * hci_get_route ( t#bdaddr_t * , t#bdaddr_t * ) 
hci_connect s#hci_conn * hci_connect ( s#hci_dev * , int , t#bdaddr_t * , t#__u8 , t#__u8 ) 
hci_conn_check_link_mode int hci_conn_check_link_mode ( s#hci_conn * ) 
hci_conn_security int hci_conn_security ( s#hci_conn * , t#__u8 , t#__u8 ) 
hci_conn_check_secure int hci_conn_check_secure ( s#hci_conn * , t#__u8 ) 
hci_conn_change_link_key int hci_conn_change_link_key ( s#hci_conn * ) 
hci_conn_switch_role int hci_conn_switch_role ( s#hci_conn * , t#__u8 ) 
hci_conn_hold_device void hci_conn_hold_device ( s#hci_conn * ) 
hci_conn_put_device void hci_conn_put_device ( s#hci_conn * ) 

/* net/bluetooth/hci_core.o */
s##workqueue_struct
s##tvec_base
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##rfkill
hci_alloc_dev s#hci_dev * hci_alloc_dev ( void ) 
hci_free_dev void hci_free_dev ( s#hci_dev * ) 
hci_register_dev int hci_register_dev ( s#hci_dev * ) 
hci_unregister_dev int hci_unregister_dev ( s#hci_dev * ) 
hci_suspend_dev int hci_suspend_dev ( s#hci_dev * ) 
hci_resume_dev int hci_resume_dev ( s#hci_dev * ) 
hci_recv_frame int hci_recv_frame ( s#sk_buff * ) 
hci_recv_fragment int hci_recv_fragment ( s#hci_dev * , int , void * , int ) 
hci_recv_stream_fragment int hci_recv_stream_fragment ( s#hci_dev * , void * , int ) 
s#hci_proto struct hci_proto { char * name ; unsigned int id ; unsigned long flags ; void * priv ; int ( * connect_ind ) ( s#hci_dev * , t#bdaddr_t * , t#__u8 ) ; int ( * connect_cfm ) ( s#hci_conn * , t#__u8 ) ; int ( * disconn_ind ) ( s#hci_conn * ) ; int ( * disconn_cfm ) ( s#hci_conn * , t#__u8 ) ; int ( * recv_acldata ) ( s#hci_conn * , s#sk_buff * , t#__u16 ) ; int ( * recv_scodata ) ( s#hci_conn * , s#sk_buff * ) ; int ( * security_cfm ) ( s#hci_conn * , t#__u8 , t#__u8 ) ; } 
hci_register_proto int hci_register_proto ( s#hci_proto * ) 
hci_unregister_proto int hci_unregister_proto ( s#hci_proto * ) 
s#hci_cb struct hci_cb { s#list_head list ; char * name ; void ( * security_cfm ) ( s#hci_conn * , t#__u8 , t#__u8 ) ; void ( * key_change_cfm ) ( s#hci_conn * , t#__u8 ) ; void ( * role_switch_cfm ) ( s#hci_conn * , t#__u8 , t#__u8 ) ; } 
hci_register_cb int hci_register_cb ( s#hci_cb * ) 
hci_unregister_cb int hci_unregister_cb ( s#hci_cb * ) 
hci_send_acl void hci_send_acl ( s#hci_conn * , s#sk_buff * , t#__u16 ) 
hci_send_sco void hci_send_sco ( s#hci_conn * , s#sk_buff * ) 

/* net/bluetooth/hci_sysfs.o */
s##nameidata
s##vfsmount
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
bt_debugfs extern s#dentry * bt_debugfs 

/* net/bluetooth/l2cap_sock.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
l2cap_is_socket t#bool l2cap_is_socket ( s#socket * ) 

/* net/bluetooth/lib.o */
baswap void baswap ( t#bdaddr_t * , t#bdaddr_t * ) 
batostr char * batostr ( t#bdaddr_t * ) 
bt_err int bt_err ( t#__u16 ) 

/* net/bridge/br_input.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
t#br_should_route_hook_t typedef int br_should_route_hook_t ( s#sk_buff * ) 
br_should_route_hook extern t#br_should_route_hook_t * br_should_route_hook 

/* net/bridge/netfilter/ebtables.o */
s#ebt_entries struct ebt_entries { unsigned int distinguisher ; char name [ 32 ] ; unsigned int counter_offset ; int policy ; unsigned int nentries ; char data [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_counter struct ebt_counter { t#uint64_t pcnt ; t#uint64_t bcnt ; } 
s#ebt_replace_kernel struct ebt_replace_kernel { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int nentries ; unsigned int entries_size ; s#ebt_entries * hook_entry [ 6 ] ; unsigned int num_counters ; s#ebt_counter * counters ; char * entries ; } 
s#ebt_entry struct ebt_entry { unsigned int bitmask ; unsigned int invflags ; t#__be16 ethproto ; char in [ 16 ] ; char logical_in [ 16 ] ; char out [ 16 ] ; char logical_out [ 16 ] ; unsigned char sourcemac [ 6 ] ; unsigned char sourcemsk [ 6 ] ; unsigned char destmac [ 6 ] ; unsigned char destmsk [ 6 ] ; unsigned int watchers_offset ; unsigned int target_offset ; unsigned int next_offset ; unsigned char elems [ 0 ] __attribute__ ( ( aligned ( __alignof__ ( struct ebt_replace ) ) ) ) ; } 
s#ebt_chainstack struct ebt_chainstack { s#ebt_entries * chaininfo ; s#ebt_entry * e ; unsigned int n ; } 
s#ebt_table_info struct ebt_table_info { unsigned int entries_size ; unsigned int nentries ; s#ebt_entries * hook_entry [ 6 ] ; s#ebt_chainstack * * chainstack ; char * entries ; s#ebt_counter counters [ 0 ] __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; } 
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
E#NF_INET_NUMHOOKS 5 
s#xt_table_info struct xt_table_info { unsigned int size ; unsigned int number ; unsigned int initial_entries ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int stacksize ; unsigned int * stackptr ; void * * * jumpstack ; void * entries [ 1 ] ; } 
s#xt_table struct xt_table { s#list_head list ; unsigned int valid_hooks ; s#xt_table_info * private ; s#module * me ; t#u_int8_t af ; int priority ; const char name [ 32 ] ; } 
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#ebt_table struct ebt_table { s#list_head list ; char name [ 32 ] ; s#ebt_replace_kernel * table ; unsigned int valid_hooks ; t#rwlock_t lock ; int ( * check ) ( const s#ebt_table_info * , unsigned int ) ; s#ebt_table_info * private ; s#module * me ; } 
ebt_register_table extern s#ebt_table * ebt_register_table ( s#net * , const s#ebt_table * ) 
ebt_unregister_table extern void ebt_unregister_table ( s#net * , s#ebt_table * ) 
ebt_do_table extern unsigned int ebt_do_table ( unsigned int , s#sk_buff * , const s#net_device * , const s#net_device * , s#ebt_table * ) 

/* net/caif/caif_dev.o */
s##cfcnfg
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s#tcmsg struct tcmsg { unsigned char tcm_family ; unsigned char tcm__pad1 ; unsigned short tcm__pad2 ; int tcm_ifindex ; t#__u32 tcm_handle ; t#__u32 tcm_parent ; t#__u32 tcm_info ; } 
s#qdisc_walker struct qdisc_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#Qdisc * , unsigned long , s#qdisc_walker * ) ; } 
s#tcf_result struct tcf_result { unsigned long class ; t#u32 classid ; } 
s##tcf_walker
s#tcf_proto_ops struct tcf_proto_ops { s#tcf_proto_ops * next ; char kind [ 16 ] ; int ( * classify ) ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) ; int ( * init ) ( s#tcf_proto * ) ; void ( * destroy ) ( s#tcf_proto * ) ; unsigned long ( * get ) ( s#tcf_proto * , t#u32 ) ; void ( * put ) ( s#tcf_proto * , unsigned long ) ; int ( * change ) ( s#tcf_proto * , unsigned long , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#tcf_proto * , unsigned long ) ; void ( * walk ) ( s#tcf_proto * , s#tcf_walker * ) ; int ( * dump ) ( s#tcf_proto * , unsigned long , s#sk_buff * , s#tcmsg * ) ; s#module * owner ; } 
s#tcf_proto struct tcf_proto { s#tcf_proto * next ; void * root ; int ( * classify ) ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) ; t#__be16 protocol ; t#u32 prio ; t#u32 classid ; s#Qdisc * q ; void * data ; s#tcf_proto_ops * ops ; } 
s#tc_stats struct tc_stats { t#__u64 bytes ; t#__u32 packets ; t#__u32 drops ; t#__u32 overlimits ; t#__u32 bps ; t#__u32 pps ; t#__u32 qlen ; t#__u32 backlog ; } 
s#gnet_dump struct gnet_dump { t#spinlock_t * lock ; s#sk_buff * skb ; s#nlattr * tail ; int compat_tc_stats ; int compat_xstats ; void * xstats ; int xstats_len ; s#tc_stats tc_stats ; } 
s#Qdisc_class_ops struct Qdisc_class_ops { s#netdev_queue * ( * select_queue ) ( s#Qdisc * , s#tcmsg * ) ; int ( * graft ) ( s#Qdisc * , unsigned long , s#Qdisc * , s#Qdisc * * ) ; s#Qdisc * ( * leaf ) ( s#Qdisc * , unsigned long ) ; void ( * qlen_notify ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * get ) ( s#Qdisc * , t#u32 ) ; void ( * put ) ( s#Qdisc * , unsigned long ) ; int ( * change ) ( s#Qdisc * , t#u32 , t#u32 , s#nlattr * * , unsigned long * ) ; int ( * delete ) ( s#Qdisc * , unsigned long ) ; void ( * walk ) ( s#Qdisc * , s#qdisc_walker * ) ; s#tcf_proto * * ( * tcf_chain ) ( s#Qdisc * , unsigned long ) ; unsigned long ( * bind_tcf ) ( s#Qdisc * , unsigned long , t#u32 ) ; void ( * unbind_tcf ) ( s#Qdisc * , unsigned long ) ; int ( * dump ) ( s#Qdisc * , unsigned long , s#sk_buff * , s#tcmsg * ) ; int ( * dump_stats ) ( s#Qdisc * , unsigned long , s#gnet_dump * ) ; } 
s#Qdisc_ops struct Qdisc_ops { s#Qdisc_ops * next ; const s#Qdisc_class_ops * cl_ops ; char id [ 16 ] ; int priv_size ; int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; s#sk_buff * ( * peek ) ( s#Qdisc * ) ; unsigned int ( * drop ) ( s#Qdisc * ) ; int ( * init ) ( s#Qdisc * , s#nlattr * ) ; void ( * reset ) ( s#Qdisc * ) ; void ( * destroy ) ( s#Qdisc * ) ; int ( * change ) ( s#Qdisc * , s#nlattr * ) ; void ( * attach ) ( s#Qdisc * ) ; int ( * dump ) ( s#Qdisc * , s#sk_buff * ) ; int ( * dump_stats ) ( s#Qdisc * , s#gnet_dump * ) ; s#module * owner ; } 
s#tc_sizespec struct tc_sizespec { unsigned char cell_log ; unsigned char size_log ; short cell_align ; int overhead ; unsigned int linklayer ; unsigned int mpu ; unsigned int mtu ; unsigned int tsize ; } 
s#qdisc_size_table struct qdisc_size_table { s#rcu_head rcu ; s#list_head list ; s#tc_sizespec szopts ; int refcnt ; t#u16 data [ ] ; } 
s#gnet_stats_rate_est struct gnet_stats_rate_est { t#__u32 bps ; t#__u32 pps ; } 
s#gnet_stats_basic_packed struct gnet_stats_basic_packed { t#__u64 bytes ; t#__u32 packets ; } 
s#gnet_stats_queue struct gnet_stats_queue { t#__u32 qlen ; t#__u32 backlog ; t#__u32 drops ; t#__u32 requeues ; t#__u32 overlimits ; } 
s#Qdisc struct Qdisc { int ( * enqueue ) ( s#sk_buff * , s#Qdisc * ) ; s#sk_buff * ( * dequeue ) ( s#Qdisc * ) ; unsigned flags ; int padded ; s#Qdisc_ops * ops ; s#qdisc_size_table * stab ; s#list_head list ; t#u32 handle ; t#u32 parent ; t#atomic_t refcnt ; s#gnet_stats_rate_est rate_est ; int ( * reshape_fail ) ( s#sk_buff * , s#Qdisc * ) ; void * u32_node ; s#Qdisc * __parent ; s#netdev_queue * dev_queue ; s#Qdisc * next_sched ; s#sk_buff * gso_skb ; unsigned long state ; s#sk_buff_head q ; s#gnet_stats_basic_packed bstats ; unsigned int __state ; s#gnet_stats_queue qstats ; s#rcu_head rcu_head ; t#spinlock_t busylock ; t#u32 limit ; } 
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
get_cfcnfg s#cfcnfg * get_cfcnfg ( s#net * ) 

/* net/caif/cfcnfg.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfpkt
e#caif_ctrlcmd enum caif_ctrlcmd { CAIF_CTRLCMD_FLOW_OFF_IND , CAIF_CTRLCMD_FLOW_ON_IND , CAIF_CTRLCMD_REMOTE_SHUTDOWN_IND , CAIF_CTRLCMD_INIT_RSP , CAIF_CTRLCMD_DEINIT_RSP , CAIF_CTRLCMD_INIT_FAIL_RSP , _CAIF_CTRLCMD_PHYIF_FLOW_OFF_IND , _CAIF_CTRLCMD_PHYIF_FLOW_ON_IND , _CAIF_CTRLCMD_PHYIF_DOWN_IND , } 
e#caif_modemcmd enum caif_modemcmd { CAIF_MODEMCMD_FLOW_ON_REQ = 0 , CAIF_MODEMCMD_FLOW_OFF_REQ = 1 , _CAIF_MODEMCMD_PHYIF_USEFULL = 3 , _CAIF_MODEMCMD_PHYIF_USELESS = 4 } 
s#cflayer struct cflayer { s#cflayer * up ; s#cflayer * dn ; s#list_head node ; int ( * receive ) ( s#cflayer * , s#cfpkt * ) ; int ( * transmit ) ( s#cflayer * , s#cfpkt * ) ; void ( * ctrlcmd ) ( s#cflayer * , e#caif_ctrlcmd , int ) ; int ( * modemcmd ) ( s#cflayer * , e#caif_modemcmd ) ; unsigned short prio ; unsigned int id ; unsigned int type ; char name [ 16 ] ; } 
caif_disconnect_client int caif_disconnect_client ( s#net * , s#cflayer * ) 
e#caif_protocol_type enum caif_protocol_type { CAIFPROTO_AT , CAIFPROTO_DATAGRAM , CAIFPROTO_DATAGRAM_LOOP , CAIFPROTO_UTIL , CAIFPROTO_RFM , CAIFPROTO_DEBUG , _CAIFPROTO_MAX } 
s#sockaddr_caif struct sockaddr_caif { t#sa_family_t family ; union { struct { t#__u8 type ; } at ; struct { char service [ 16 ] ; } util ; union { t#__u32 connection_id ; t#__u8 nsapi ; } dgm ; struct { t#__u32 connection_id ; char volume [ 16 ] ; } rfm ; struct { t#__u8 type ; t#__u8 service ; } dbg ; } u ; } 
e#caif_channel_priority enum caif_channel_priority { CAIF_PRIO_MIN = 0x01 , CAIF_PRIO_LOW = 0x04 , CAIF_PRIO_NORMAL = 0x0f , CAIF_PRIO_HIGH = 0x14 , CAIF_PRIO_MAX = 0x1F } 
e#caif_link_selector enum caif_link_selector { CAIF_LINK_HIGH_BANDW , CAIF_LINK_LOW_LATENCY } 
s#caif_param struct caif_param { t#u16 size ; t#u8 data [ 256 ] ; } 
s#caif_connect_request struct caif_connect_request { e#caif_protocol_type protocol ; s#sockaddr_caif sockaddr ; e#caif_channel_priority priority ; e#caif_link_selector link_selector ; int ifindex ; s#caif_param param ; } 
caif_connect_client int caif_connect_client ( s#net * , s#caif_connect_request * , s#cflayer * , int * , int * , int * ) 
s##cfcnfg
e#cfcnfg_phy_type enum cfcnfg_phy_type { CFPHYTYPE_FRAG = 1 , CFPHYTYPE_CAIF , CFPHYTYPE_MAX } 
e#cfcnfg_phy_preference enum cfcnfg_phy_preference { CFPHYPREF_UNSPECIFIED , CFPHYPREF_LOW_LAT , CFPHYPREF_HIGH_BW , CFPHYPREF_LOOP } 
cfcnfg_add_phy_layer void cfcnfg_add_phy_layer ( s#cfcnfg * , e#cfcnfg_phy_type , s#net_device * , s#cflayer * , e#cfcnfg_phy_preference , t#bool , t#bool ) 
cfcnfg_set_phy_state int cfcnfg_set_phy_state ( s#cfcnfg * , s#cflayer * , t#bool ) 
cfcnfg_del_phy_layer int cfcnfg_del_phy_layer ( s#cfcnfg * , s#cflayer * ) 

/* net/caif/cfpkt_skbuff.o */
s##cfpkt
e#caif_direction enum caif_direction { CAIF_DIR_IN = 0 , CAIF_DIR_OUT = 1 } 
cfpkt_fromnative s#cfpkt * cfpkt_fromnative ( e#caif_direction , void * ) 
cfpkt_tonative void * cfpkt_tonative ( s#cfpkt * ) 

/* net/caif/cfsrvl.o */
s##cfpkt
caif_free_client void caif_free_client ( s#cflayer * ) 
caif_client_register_refcnt void caif_client_register_refcnt ( s#cflayer * , void ( * ) ( s#cflayer * ) , void ( * ) ( s#cflayer * ) ) 

/* net/can/af_can.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
can_ioctl extern int can_ioctl ( s#socket * , unsigned int , unsigned long ) 
can_send extern int can_send ( s#sk_buff * , int ) 
can_rx_register extern int can_rx_register ( s#net_device * , t#canid_t , t#canid_t , void ( * ) ( s#sk_buff * , void * ) , void * , char * ) 
can_rx_unregister extern void can_rx_unregister ( s#net_device * , t#canid_t , t#canid_t , void ( * ) ( s#sk_buff * , void * ) , void * ) 
s#can_proto struct can_proto { int type ; int protocol ; const s#proto_ops * ops ; s#proto * prot ; } 
can_proto_register extern int can_proto_register ( const s#can_proto * ) 
can_proto_unregister extern void can_proto_unregister ( const s#can_proto * ) 

/* net/ceph/auth.o */
s##ceph_authorizer
s#ceph_auth_handshake struct ceph_auth_handshake { s#ceph_authorizer * authorizer ; void * authorizer_buf ; t#size_t authorizer_buf_len ; void * authorizer_reply_buf ; t#size_t authorizer_reply_buf_len ; } 
s#ceph_auth_client_ops struct ceph_auth_client_ops { const char * name ; int ( * is_authenticated ) ( s#ceph_auth_client * ) ; int ( * should_authenticate ) ( s#ceph_auth_client * ) ; int ( * build_request ) ( s#ceph_auth_client * , void * , void * ) ; int ( * handle_reply ) ( s#ceph_auth_client * , int , void * , void * ) ; int ( * create_authorizer ) ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) ; int ( * update_authorizer ) ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) ; int ( * verify_authorizer_reply ) ( s#ceph_auth_client * , s#ceph_authorizer * , t#size_t ) ; void ( * destroy_authorizer ) ( s#ceph_auth_client * , s#ceph_authorizer * ) ; void ( * invalidate_authorizer ) ( s#ceph_auth_client * , int ) ; void ( * reset ) ( s#ceph_auth_client * ) ; void ( * destroy ) ( s#ceph_auth_client * ) ; } 
s#ceph_timespec struct ceph_timespec { t#__le32 tv_sec ; t#__le32 tv_nsec ; } 
s#ceph_crypto_key struct ceph_crypto_key { int type ; s#ceph_timespec created ; int len ; void * key ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##tvec_base
s##device
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#ceph_auth_client struct ceph_auth_client { t#u32 protocol ; void * private ; const s#ceph_auth_client_ops * ops ; t#bool negotiating ; const char * name ; t#u64 global_id ; const s#ceph_crypto_key * key ; unsigned want_keys ; s#mutex mutex ; } 
ceph_auth_is_authenticated extern int ceph_auth_is_authenticated ( s#ceph_auth_client * ) 
ceph_auth_create_authorizer extern int ceph_auth_create_authorizer ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) 
ceph_auth_destroy_authorizer extern void ceph_auth_destroy_authorizer ( s#ceph_auth_client * , s#ceph_authorizer * ) 
ceph_auth_update_authorizer extern int ceph_auth_update_authorizer ( s#ceph_auth_client * , int , s#ceph_auth_handshake * ) 
ceph_auth_verify_authorizer_reply extern int ceph_auth_verify_authorizer_reply ( s#ceph_auth_client * , s#ceph_authorizer * , t#size_t ) 
ceph_auth_invalidate_authorizer extern void ceph_auth_invalidate_authorizer ( s#ceph_auth_client * , int ) 

/* net/ceph/buffer.o */
s#ceph_buffer struct ceph_buffer { s#kref kref ; s#kvec vec ; t#size_t alloc_len ; } 
ceph_buffer_new extern s#ceph_buffer * ceph_buffer_new ( t#size_t , t#gfp_t ) 
ceph_buffer_release extern void ceph_buffer_release ( s#kref * ) 

/* net/ceph/ceph_common.o */
libceph_compatible extern t#bool libceph_compatible ( void * ) 
ceph_file_part const char * ceph_file_part ( const char * , int ) 
ceph_msg_type_name extern const char * ceph_msg_type_name ( int ) 
s#ceph_fsid struct ceph_fsid { unsigned char fsid [ 16 ] ; } 
s#ceph_entity_addr struct ceph_entity_addr { t#__le32 type ; t#__le32 nonce ; s#__kernel_sockaddr_storage in_addr ; } 
s#ceph_options struct ceph_options { int flags ; s#ceph_fsid fsid ; s#ceph_entity_addr my_addr ; int mount_timeout ; int osd_idle_ttl ; int osd_keepalive_timeout ; s#ceph_entity_addr * mon_addr ; int num_mon ; char * name ; s#ceph_crypto_key * key ; } 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##xattr_handler
s##hd_struct
s##gendisk
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##net_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##sec_path
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#ceph_entity_name struct ceph_entity_name { t#__u8 type ; t#__le64 num ; } 
s#ceph_msg_header struct ceph_msg_header { t#__le64 seq ; t#__le64 tid ; t#__le16 type ; t#__le16 priority ; t#__le16 version ; t#__le32 front_len ; t#__le32 middle_len ; t#__le32 data_len ; t#__le16 data_off ; s#ceph_entity_name src ; t#__le32 reserved ; t#__le32 crc ; } 
s#ceph_msg_footer struct ceph_msg_footer { t#__le32 front_crc , middle_crc , data_crc ; t#__u8 flags ; } 
e#ceph_msg_data_type enum ceph_msg_data_type { CEPH_MSG_DATA_NONE , CEPH_MSG_DATA_PAGES , CEPH_MSG_DATA_PAGELIST , CEPH_MSG_DATA_BIO , } 
s##bio_integrity_payload
s#ceph_pagelist struct ceph_pagelist { s#list_head head ; void * mapped_tail ; t#size_t length ; t#size_t room ; s#list_head free_list ; t#size_t num_pages_free ; } 
s#ceph_msg_data struct ceph_msg_data { s#list_head links ; e#ceph_msg_data_type type ; union { struct { s#bio * bio ; t#size_t bio_length ; } ; struct { s#page * * pages ; t#size_t length ; unsigned int alignment ; } ; s#ceph_pagelist * pagelist ; } ; } 
s#ceph_msg_data_cursor struct ceph_msg_data_cursor { t#size_t total_resid ; s#list_head * data_head ; s#ceph_msg_data * data ; t#size_t resid ; t#bool last_piece ; t#bool need_crc ; union { struct { s#bio * bio ; unsigned int vector_index ; unsigned int vector_offset ; } ; struct { unsigned int page_offset ; unsigned short page_index ; unsigned short page_count ; } ; struct { s#page * page ; t#size_t offset ; } ; } ; } 
s##ceph_authorizer
s#ceph_connection_operations struct ceph_connection_operations { s#ceph_connection * ( * get ) ( s#ceph_connection * ) ; void ( * put ) ( s#ceph_connection * ) ; void ( * dispatch ) ( s#ceph_connection * , s#ceph_msg * ) ; s#ceph_auth_handshake * ( * get_authorizer ) ( s#ceph_connection * , int * , int ) ; int ( * verify_authorizer_reply ) ( s#ceph_connection * , int ) ; int ( * invalidate_authorizer ) ( s#ceph_connection * ) ; void ( * fault ) ( s#ceph_connection * ) ; void ( * peer_reset ) ( s#ceph_connection * ) ; s#ceph_msg * ( * alloc_msg ) ( s#ceph_connection * , s#ceph_msg_header * , int * ) ; } 
s#ceph_entity_inst struct ceph_entity_inst { s#ceph_entity_name name ; s#ceph_entity_addr addr ; } 
s#ceph_messenger struct ceph_messenger { s#ceph_entity_inst inst ; s#ceph_entity_addr my_enc_addr ; t#atomic_t stopping ; t#bool nocrc ; t#u32 global_seq ; t#spinlock_t global_seq_lock ; t#u64 supported_features ; t#u64 required_features ; } 
s#ceph_msg_connect struct ceph_msg_connect { t#__le64 features ; t#__le32 host_type ; t#__le32 global_seq ; t#__le32 connect_seq ; t#__le32 protocol_version ; t#__le32 authorizer_protocol ; t#__le32 authorizer_len ; t#__u8 flags ; } 
s#ceph_msg_connect_reply struct ceph_msg_connect_reply { t#__u8 tag ; t#__le64 features ; t#__le32 global_seq ; t#__le32 connect_seq ; t#__le32 protocol_version ; t#__le32 authorizer_len ; t#__u8 flags ; } 
s#ceph_connection struct ceph_connection { void * private ; const s#ceph_connection_operations * ops ; s#ceph_messenger * msgr ; t#atomic_t sock_state ; s#socket * sock ; s#ceph_entity_addr peer_addr ; s#ceph_entity_addr peer_addr_for_me ; unsigned long flags ; unsigned long state ; const char * error_msg ; s#ceph_entity_name peer_name ; t#u64 peer_features ; t#u32 connect_seq ; t#u32 peer_global_seq ; int auth_retry ; void * auth_reply_buf ; int auth_reply_buf_len ; s#mutex mutex ; s#list_head out_queue ; s#list_head out_sent ; t#u64 out_seq ; t#u64 in_seq , in_seq_acked ; char in_banner [ 30 ] ; s#ceph_msg_connect out_connect ; s#ceph_msg_connect_reply in_reply ; s#ceph_entity_addr actual_peer_addr ; s#ceph_msg * out_msg ; t#bool out_msg_done ; s#kvec out_kvec [ 8 ] , * out_kvec_cur ; int out_kvec_left ; int out_skip ; int out_kvec_bytes ; t#bool out_kvec_is_msg ; int out_more ; t#__le64 out_temp_ack ; s#ceph_msg_header in_hdr ; s#ceph_msg * in_msg ; t#u32 in_front_crc , in_middle_crc , in_data_crc ; char in_tag ; int in_base_pos ; t#__le64 in_temp_ack ; s#delayed_work work ; unsigned long delay ; } 
s#ceph_msgpool struct ceph_msgpool { const char * name ; t#mempool_t * pool ; int type ; int front_len ; } 
s#ceph_msg struct ceph_msg { s#ceph_msg_header hdr ; s#ceph_msg_footer footer ; s#kvec front ; s#ceph_buffer * middle ; t#size_t data_length ; s#list_head data ; s#ceph_msg_data_cursor cursor ; s#ceph_connection * con ; s#list_head list_head ; s#kref kref ; t#bool more_to_follow ; t#bool needs_out_seq ; int front_alloc_len ; unsigned long ack_stamp ; s#ceph_msgpool * pool ; } 
s#ceph_monmap struct ceph_monmap { s#ceph_fsid fsid ; t#u32 epoch ; t#u32 num_mon ; s#ceph_entity_inst mon_inst [ 0 ] ; } 
s#ceph_mon_client struct ceph_mon_client { s#ceph_client * client ; s#ceph_monmap * monmap ; s#mutex mutex ; s#delayed_work delayed_work ; s#ceph_auth_client * auth ; s#ceph_msg * m_auth , * m_auth_reply , * m_subscribe , * m_subscribe_ack ; int pending_auth ; t#bool hunting ; int cur_mon ; unsigned long sub_sent , sub_renew_after ; s#ceph_connection con ; s#rb_root generic_request_tree ; int num_generic_requests ; t#u64 last_tid ; int want_mdsmap ; int want_next_osdmap ; t#u32 have_osdmap , have_mdsmap ; s#dentry * debugfs_file ; } 
s#crush_bucket struct crush_bucket { t#__s32 id ; t#__u16 type ; t#__u8 alg ; t#__u8 hash ; t#__u32 weight ; t#__u32 size ; t#__s32 * items ; t#__u32 perm_x ; t#__u32 perm_n ; t#__u32 * perm ; } 
s#crush_rule_mask struct crush_rule_mask { t#__u8 ruleset ; t#__u8 type ; t#__u8 min_size ; t#__u8 max_size ; } 
s#crush_rule_step struct crush_rule_step { t#__u32 op ; t#__s32 arg1 ; t#__s32 arg2 ; } 
s#crush_rule struct crush_rule { t#__u32 len ; s#crush_rule_mask mask ; s#crush_rule_step steps [ 0 ] ; } 
s#crush_map struct crush_map { s#crush_bucket * * buckets ; s#crush_rule * * rules ; t#__s32 max_buckets ; t#__u32 max_rules ; t#__s32 max_devices ; t#__u32 choose_local_tries ; t#__u32 choose_local_fallback_tries ; t#__u32 choose_total_tries ; t#__u32 chooseleaf_descend_once ; } 
s#ceph_osdmap struct ceph_osdmap { s#ceph_fsid fsid ; t#u32 epoch ; t#u32 mkfs_epoch ; s#ceph_timespec created , modified ; t#u32 flags ; t#u32 max_osd ; t#u8 * osd_state ; t#u32 * osd_weight ; s#ceph_entity_addr * osd_addr ; s#rb_root pg_temp ; s#rb_root pg_pools ; t#u32 pool_max ; s#crush_map * crush ; } 
s##workqueue_struct
s#ceph_osd_client struct ceph_osd_client { s#ceph_client * client ; s#ceph_osdmap * osdmap ; s#rw_semaphore map_sem ; s#completion map_waiters ; t#u64 last_requested_map ; s#mutex request_mutex ; s#rb_root osds ; s#list_head osd_lru ; t#u64 timeout_tid ; t#u64 last_tid ; s#rb_root requests ; s#list_head req_lru ; s#list_head req_unsent ; s#list_head req_notarget ; s#list_head req_linger ; int num_requests ; s#delayed_work timeout_work ; s#delayed_work osds_timeout_work ; s#dentry * debugfs_file ; t#mempool_t * req_mempool ; s#ceph_msgpool msgpool_op ; s#ceph_msgpool msgpool_op_reply ; t#spinlock_t event_lock ; s#rb_root event_tree ; t#u64 event_count ; s#workqueue_struct * notify_wq ; } 
s#ceph_client struct ceph_client { s#ceph_fsid fsid ; t#bool have_fsid ; void * private ; s#ceph_options * options ; s#mutex mount_mutex ; t#wait_queue_head_t auth_wq ; int auth_err ; int ( * extra_mon_dispatch ) ( s#ceph_client * , s#ceph_msg * ) ; t#u64 supported_features ; t#u64 required_features ; s#ceph_messenger msgr ; s#ceph_mon_client monc ; s#ceph_osd_client osdc ; s#dentry * debugfs_dir ; s#dentry * debugfs_monmap ; s#dentry * debugfs_osdmap ; } 
ceph_check_fsid extern int ceph_check_fsid ( s#ceph_client * , s#ceph_fsid * ) 
ceph_compare_options extern int ceph_compare_options ( s#ceph_options * , s#ceph_client * ) 
ceph_destroy_options extern void ceph_destroy_options ( s#ceph_options * ) 
ceph_parse_options extern s#ceph_options * ceph_parse_options ( char * , const char * , const char * , int ( * ) ( char * , void * ) , void * ) 
ceph_client_id extern t#u64 ceph_client_id ( s#ceph_client * ) 
ceph_create_client extern s#ceph_client * ceph_create_client ( s#ceph_options * , void * , t#u64 , t#u64 ) 
ceph_destroy_client extern void ceph_destroy_client ( s#ceph_client * ) 
__ceph_open_session extern int __ceph_open_session ( s#ceph_client * , unsigned long ) 
ceph_open_session extern int ceph_open_session ( s#ceph_client * ) 

/* net/ceph/ceph_fs.o */
ceph_flags_to_mode int ceph_flags_to_mode ( int ) 
ceph_caps_for_mode int ceph_caps_for_mode ( int ) 

/* net/ceph/ceph_hash.o */
ceph_str_hash extern unsigned ceph_str_hash ( int , const char * , unsigned ) 
ceph_str_hash_name extern const char * ceph_str_hash_name ( int ) 

/* net/ceph/debugfs.o */
ceph_debugfs_init extern int ceph_debugfs_init ( void ) 
ceph_debugfs_cleanup extern void ceph_debugfs_cleanup ( void ) 

/* net/ceph/messenger.o */
ceph_pr_addr extern const char * ceph_pr_addr ( const s#__kernel_sockaddr_storage * ) 
ceph_msgr_init extern int ceph_msgr_init ( void ) 
ceph_msgr_exit extern void ceph_msgr_exit ( void ) 
ceph_msgr_flush extern void ceph_msgr_flush ( void ) 
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##blk_plug
s##tvec_base
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##device_node
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##hd_struct
s##gendisk
s##ceph_authorizer
ceph_con_close extern void ceph_con_close ( s#ceph_connection * ) 
ceph_con_open extern void ceph_con_open ( s#ceph_connection * , t#__u8 , t#__u64 , s#ceph_entity_addr * ) 
ceph_con_init extern void ceph_con_init ( s#ceph_connection * , void * , const s#ceph_connection_operations * , s#ceph_messenger * ) 
ceph_parse_ips extern int ceph_parse_ips ( const char * , const char * , s#ceph_entity_addr * , int , int * ) 
ceph_messenger_init extern void ceph_messenger_init ( s#ceph_messenger * , s#ceph_entity_addr * , t#u64 , t#u64 , t#bool ) 
ceph_con_send extern void ceph_con_send ( s#ceph_connection * , s#ceph_msg * ) 
ceph_con_keepalive extern void ceph_con_keepalive ( s#ceph_connection * ) 
ceph_msg_data_add_pages extern void ceph_msg_data_add_pages ( s#ceph_msg * , s#page * * , t#size_t , t#size_t ) 
ceph_msg_data_add_pagelist extern void ceph_msg_data_add_pagelist ( s#ceph_msg * , s#ceph_pagelist * ) 
ceph_msg_data_add_bio extern void ceph_msg_data_add_bio ( s#ceph_msg * , s#bio * , t#size_t ) 
ceph_msg_new extern s#ceph_msg * ceph_msg_new ( int , int , t#gfp_t , t#bool ) 
ceph_msg_last_put extern void ceph_msg_last_put ( s#kref * ) 
ceph_msg_dump extern void ceph_msg_dump ( s#ceph_msg * ) 

/* net/ceph/mon_client.o */
s##ceph_crypto_key
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##tvec_base
s##device
s##mtd_info
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##bio_integrity_payload
s##ceph_authorizer
s##workqueue_struct
ceph_monc_got_mdsmap extern int ceph_monc_got_mdsmap ( s#ceph_mon_client * , t#u32 ) 
ceph_monc_open_session extern int ceph_monc_open_session ( s#ceph_mon_client * ) 
s#ceph_statfs struct ceph_statfs { t#__le64 kb , kb_used , kb_avail ; t#__le64 num_objects ; } 
ceph_monc_do_statfs extern int ceph_monc_do_statfs ( s#ceph_mon_client * , s#ceph_statfs * ) 
ceph_monc_create_snapid extern int ceph_monc_create_snapid ( s#ceph_mon_client * , t#u32 , t#u64 * ) 
ceph_monc_init extern int ceph_monc_init ( s#ceph_mon_client * , s#ceph_client * ) 
ceph_monc_stop extern void ceph_monc_stop ( s#ceph_mon_client * ) 
ceph_monc_validate_auth extern int ceph_monc_validate_auth ( s#ceph_mon_client * ) 

/* net/ceph/osd_client.o */
e#ceph_osd_data_type enum ceph_osd_data_type { CEPH_OSD_DATA_TYPE_NONE = 0 , CEPH_OSD_DATA_TYPE_PAGES , CEPH_OSD_DATA_TYPE_PAGELIST , CEPH_OSD_DATA_TYPE_BIO , } 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##hd_struct
s##gendisk
s##blk_plug
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##radix_tree_node
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
e##migrate_mode
s##array_cache
s##kmem_list3
s#ceph_osd_data struct ceph_osd_data { e#ceph_osd_data_type type ; union { struct { s#page * * pages ; t#u64 length ; t#u32 alignment ; t#bool pages_from_pool ; t#bool own_pages ; } ; s#ceph_pagelist * pagelist ; struct { s#bio * bio ; t#size_t bio_length ; } ; } ; } 
s##ceph_crypto_key
s##ceph_authorizer
s##workqueue_struct
s#ceph_osd struct ceph_osd { t#atomic_t o_ref ; s#ceph_osd_client * o_osdc ; int o_osd ; int o_incarnation ; s#rb_node o_node ; s#ceph_connection o_con ; s#list_head o_requests ; s#list_head o_linger_requests ; s#list_head o_osd_lru ; s#ceph_auth_handshake o_auth ; unsigned long lru_ttl ; int o_marked_for_keepalive ; s#list_head o_keepalive_item ; } 
s#ceph_pg struct ceph_pg { t#uint64_t pool ; t#uint32_t seed ; } 
s#ceph_osd_req_op struct ceph_osd_req_op { t#u16 op ; t#u32 payload_len ; union { s#ceph_osd_data raw_data_in ; struct { t#u64 offset , length ; t#u64 truncate_size ; t#u32 truncate_seq ; s#ceph_osd_data osd_data ; } extent ; struct { const char * class_name ; const char * method_name ; s#ceph_osd_data request_info ; s#ceph_osd_data request_data ; s#ceph_osd_data response_data ; t#__u8 class_len ; t#__u8 method_len ; t#__u8 argc ; } cls ; struct { t#u64 cookie ; t#u64 ver ; t#u32 prot_ver ; t#u32 timeout ; t#__u8 flag ; } watch ; } ; } 
s#ceph_eversion struct ceph_eversion { t#__le32 epoch ; t#__le64 version ; } 
t#ceph_osdc_callback_t typedef void ( * ceph_osdc_callback_t ) ( s#ceph_osd_request * , s#ceph_msg * ) 
t#ceph_osdc_unsafe_callback_t typedef void ( * ceph_osdc_unsafe_callback_t ) ( s#ceph_osd_request * , t#bool ) 
s#ceph_object_locator struct ceph_object_locator { t#s64 pool ; } 
s#ceph_object_id struct ceph_object_id { char name [ 100 ] ; int name_len ; } 
s#ceph_snap_context struct ceph_snap_context { t#atomic_t nref ; t#u64 seq ; t#u32 num_snaps ; t#u64 snaps [ ] ; } 
s#ceph_osd_request struct ceph_osd_request { t#u64 r_tid ; s#rb_node r_node ; s#list_head r_req_lru_item ; s#list_head r_osd_item ; s#list_head r_linger_item ; s#list_head r_linger_osd ; s#ceph_osd * r_osd ; s#ceph_pg r_pgid ; int r_pg_osds [ 16 ] ; int r_num_pg_osds ; s#ceph_msg * r_request , * r_reply ; int r_flags ; t#u32 r_sent ; unsigned int r_num_ops ; s#ceph_osd_req_op r_ops [ 2 ] ; t#__le32 * r_request_osdmap_epoch ; t#__le32 * r_request_flags ; t#__le64 * r_request_pool ; void * r_request_pgid ; t#__le32 * r_request_attempts ; t#bool r_paused ; s#ceph_eversion * r_request_reassert_version ; int r_result ; int r_reply_op_len [ 2 ] ; t#s32 r_reply_op_result [ 2 ] ; int r_got_reply ; int r_linger ; s#ceph_osd_client * r_osdc ; s#kref r_kref ; t#bool r_mempool ; s#completion r_completion , r_safe_completion ; t#ceph_osdc_callback_t r_callback ; t#ceph_osdc_unsafe_callback_t r_unsafe_callback ; s#ceph_eversion r_reassert_version ; s#list_head r_unsafe_item ; s#inode * r_inode ; void * r_priv ; s#ceph_object_locator r_base_oloc ; s#ceph_object_id r_base_oid ; s#ceph_object_locator r_target_oloc ; s#ceph_object_id r_target_oid ; t#u64 r_snapid ; unsigned long r_stamp ; s#ceph_snap_context * r_snapc ; } 
osd_req_op_extent_osd_data extern s#ceph_osd_data * osd_req_op_extent_osd_data ( s#ceph_osd_request * , unsigned int ) 
osd_req_op_cls_response_data extern s#ceph_osd_data * osd_req_op_cls_response_data ( s#ceph_osd_request * , unsigned int ) 
osd_req_op_raw_data_in_pages extern void osd_req_op_raw_data_in_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_extent_osd_data_pages extern void osd_req_op_extent_osd_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_extent_osd_data_pagelist extern void osd_req_op_extent_osd_data_pagelist ( s#ceph_osd_request * , unsigned int , s#ceph_pagelist * ) 
osd_req_op_extent_osd_data_bio extern void osd_req_op_extent_osd_data_bio ( s#ceph_osd_request * , unsigned int , s#bio * , t#size_t ) 
osd_req_op_cls_request_data_pagelist extern void osd_req_op_cls_request_data_pagelist ( s#ceph_osd_request * , unsigned int , s#ceph_pagelist * ) 
osd_req_op_cls_request_data_pages extern void osd_req_op_cls_request_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
osd_req_op_cls_response_data_pages extern void osd_req_op_cls_response_data_pages ( s#ceph_osd_request * , unsigned int , s#page * * , t#u64 , t#u32 , t#bool , t#bool ) 
ceph_osdc_release_request extern void ceph_osdc_release_request ( s#kref * ) 
ceph_osdc_alloc_request extern s#ceph_osd_request * ceph_osdc_alloc_request ( s#ceph_osd_client * , s#ceph_snap_context * , unsigned int , t#bool , t#gfp_t ) 
osd_req_op_init extern void osd_req_op_init ( s#ceph_osd_request * , unsigned int , t#u16 ) 
osd_req_op_extent_init extern void osd_req_op_extent_init ( s#ceph_osd_request * , unsigned int , t#u16 , t#u64 , t#u64 , t#u64 , t#u32 ) 
osd_req_op_extent_update extern void osd_req_op_extent_update ( s#ceph_osd_request * , unsigned int , t#u64 ) 
osd_req_op_cls_init extern void osd_req_op_cls_init ( s#ceph_osd_request * , unsigned int , t#u16 , const char * , const char * ) 
osd_req_op_watch_init extern void osd_req_op_watch_init ( s#ceph_osd_request * , unsigned int , t#u16 , t#u64 , t#u64 , int ) 
s#ceph_file_layout struct ceph_file_layout { t#__le32 fl_stripe_unit ; t#__le32 fl_stripe_count ; t#__le32 fl_object_size ; t#__le32 fl_cas_hash ; t#__le32 fl_object_stripe_unit ; t#__le32 fl_unused ; t#__le32 fl_pg_pool ; } 
s#ceph_vino struct ceph_vino { t#u64 ino ; t#u64 snap ; } 
ceph_osdc_new_request extern s#ceph_osd_request * ceph_osdc_new_request ( s#ceph_osd_client * , s#ceph_file_layout * , s#ceph_vino , t#u64 , t#u64 * , int , int , int , s#ceph_snap_context * , t#u32 , t#u64 , t#bool ) 
ceph_osdc_unregister_linger_request extern void ceph_osdc_unregister_linger_request ( s#ceph_osd_client * , s#ceph_osd_request * ) 
ceph_osdc_set_request_linger extern void ceph_osdc_set_request_linger ( s#ceph_osd_client * , s#ceph_osd_request * ) 
s#ceph_osd_event struct ceph_osd_event { t#u64 cookie ; int one_shot ; s#ceph_osd_client * osdc ; void ( * cb ) ( t#u64 , t#u64 , t#u8 , void * ) ; void * data ; s#rb_node node ; s#list_head osd_node ; s#kref kref ; } 
ceph_osdc_put_event extern void ceph_osdc_put_event ( s#ceph_osd_event * ) 
ceph_osdc_create_event extern int ceph_osdc_create_event ( s#ceph_osd_client * , void ( * ) ( t#u64 , t#u64 , t#u8 , void * ) , void * , s#ceph_osd_event * * ) 
ceph_osdc_cancel_event extern void ceph_osdc_cancel_event ( s#ceph_osd_event * ) 
ceph_osdc_build_request extern void ceph_osdc_build_request ( s#ceph_osd_request * , t#u64 , s#ceph_snap_context * , t#u64 , s#timespec * ) 
ceph_osdc_start_request extern int ceph_osdc_start_request ( s#ceph_osd_client * , s#ceph_osd_request * , t#bool ) 
ceph_osdc_wait_request extern int ceph_osdc_wait_request ( s#ceph_osd_client * , s#ceph_osd_request * ) 
ceph_osdc_sync extern void ceph_osdc_sync ( s#ceph_osd_client * ) 
ceph_osdc_flush_notifies extern void ceph_osdc_flush_notifies ( s#ceph_osd_client * ) 
ceph_osdc_readpages extern int ceph_osdc_readpages ( s#ceph_osd_client * , s#ceph_vino , s#ceph_file_layout * , t#u64 , t#u64 * , t#u32 , t#u64 , s#page * * , int , int ) 
ceph_osdc_writepages extern int ceph_osdc_writepages ( s#ceph_osd_client * , s#ceph_vino , s#ceph_file_layout * , s#ceph_snap_context * , t#u64 , t#u64 , t#u32 , t#u64 , s#timespec * , s#page * * , int ) 
ceph_osdc_setup extern int ceph_osdc_setup ( void ) 
ceph_osdc_cleanup extern void ceph_osdc_cleanup ( void ) 

/* net/ceph/osdmap.o */
ceph_pg_pool_name_by_id extern const char * ceph_pg_pool_name_by_id ( s#ceph_osdmap * , t#u64 ) 
ceph_pg_poolid_by_name extern int ceph_pg_poolid_by_name ( s#ceph_osdmap * , const char * ) 
ceph_calc_file_object_mapping extern int ceph_calc_file_object_mapping ( s#ceph_file_layout * , t#u64 , t#u64 , t#u64 * , t#u64 * , t#u64 * ) 
ceph_oloc_oid_to_pg extern int ceph_oloc_oid_to_pg ( s#ceph_osdmap * , s#ceph_object_locator * , s#ceph_object_id * , s#ceph_pg * ) 
ceph_calc_pg_primary extern int ceph_calc_pg_primary ( s#ceph_osdmap * , s#ceph_pg ) 

/* net/ceph/pagelist.o */
ceph_pagelist_release extern int ceph_pagelist_release ( s#ceph_pagelist * ) 
ceph_pagelist_append extern int ceph_pagelist_append ( s#ceph_pagelist * , const void * , t#size_t ) 
ceph_pagelist_reserve extern int ceph_pagelist_reserve ( s#ceph_pagelist * , t#size_t ) 
ceph_pagelist_free_reserve extern int ceph_pagelist_free_reserve ( s#ceph_pagelist * ) 
s#ceph_pagelist_cursor struct ceph_pagelist_cursor { s#ceph_pagelist * pl ; s#list_head * page_lru ; t#size_t room ; } 
ceph_pagelist_set_cursor extern void ceph_pagelist_set_cursor ( s#ceph_pagelist * , s#ceph_pagelist_cursor * ) 
ceph_pagelist_truncate extern int ceph_pagelist_truncate ( s#ceph_pagelist * , s#ceph_pagelist_cursor * ) 

/* net/ceph/pagevec.o */
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##tvec_base
s##device
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##eventfd_ctx
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##kstatfs
s##seq_file
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
ceph_get_direct_page_vector extern s#page * * ceph_get_direct_page_vector ( const void * , int , t#bool ) 
ceph_put_page_vector extern void ceph_put_page_vector ( s#page * * , int , t#bool ) 
ceph_release_page_vector extern void ceph_release_page_vector ( s#page * * , int ) 
ceph_alloc_page_vector extern s#page * * ceph_alloc_page_vector ( int , t#gfp_t ) 
ceph_copy_user_to_page_vector extern int ceph_copy_user_to_page_vector ( s#page * * , const void * , t#loff_t , t#size_t ) 
ceph_copy_to_page_vector extern void ceph_copy_to_page_vector ( s#page * * , const void * , t#loff_t , t#size_t ) 
ceph_copy_from_page_vector extern void ceph_copy_from_page_vector ( s#page * * , void * , t#loff_t , t#size_t ) 
ceph_copy_page_vector_to_user extern int ceph_copy_page_vector_to_user ( s#page * * , void * , t#loff_t , t#size_t ) 
ceph_zero_page_vector_range extern void ceph_zero_page_vector_range ( int , int , s#page * * ) 

/* net/ceph/snapshot.o */
ceph_create_snap_context extern s#ceph_snap_context * ceph_create_snap_context ( t#u32 , t#gfp_t ) 
ceph_get_snap_context extern s#ceph_snap_context * ceph_get_snap_context ( s#ceph_snap_context * ) 
ceph_put_snap_context extern void ceph_put_snap_context ( s#ceph_snap_context * ) 

/* net/compat.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##trace_array
s##tracer
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##bsd_acct_struct
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##robust_list_head
s##futex_pi_state
s##mem_cgroup
s##ring_buffer_iter
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
compat_sock_get_timestamp extern int compat_sock_get_timestamp ( s#sock * , s#timeval * ) 
compat_sock_get_timestampns extern int compat_sock_get_timestampns ( s#sock * , s#timespec * ) 
compat_mc_setsockopt extern int compat_mc_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * , int , int , char * , unsigned int ) ) 
compat_mc_getsockopt extern int compat_mc_getsockopt ( s#sock * , int , int , char * , int * , int ( * ) ( s#sock * , int , int , char * , int * ) ) 

/* net/core/datagram.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
__skb_recv_datagram extern s#sk_buff * __skb_recv_datagram ( s#sock * , unsigned , int * , int * ) 
skb_recv_datagram extern s#sk_buff * skb_recv_datagram ( s#sock * , unsigned , int , int * ) 
skb_free_datagram extern void skb_free_datagram ( s#sock * , s#sk_buff * ) 
skb_free_datagram_locked extern void skb_free_datagram_locked ( s#sock * , s#sk_buff * ) 
skb_kill_datagram extern int skb_kill_datagram ( s#sock * , s#sk_buff * , unsigned int ) 
skb_copy_datagram_iovec extern int skb_copy_datagram_iovec ( const s#sk_buff * , int , s#iovec * , int ) 
skb_copy_datagram_const_iovec extern int skb_copy_datagram_const_iovec ( const s#sk_buff * , int , const s#iovec * , int , int ) 
skb_copy_datagram_from_iovec extern int skb_copy_datagram_from_iovec ( s#sk_buff * , int , const s#iovec * , int , int ) 
__skb_checksum_complete_head extern t#__sum16 __skb_checksum_complete_head ( s#sk_buff * , int ) 
__skb_checksum_complete extern t#__sum16 __skb_checksum_complete ( s#sk_buff * ) 
skb_copy_and_csum_datagram_iovec extern int skb_copy_and_csum_datagram_iovec ( s#sk_buff * , int , s#iovec * ) 
datagram_poll extern unsigned int datagram_poll ( s#file * , s#socket * , s#poll_table_struct * ) 

/* net/core/dev.o */
dev_base_lock extern t#rwlock_t dev_base_lock 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##libipw_device
s##ip_mc_list
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tcf_walker
s#softnet_data struct softnet_data { s#Qdisc * output_queue ; s#Qdisc * * output_queue_tailp ; s#list_head poll_list ; s#sk_buff * completion_queue ; s#sk_buff_head process_queue ; unsigned int processed ; unsigned int time_squeeze ; unsigned int cpu_collision ; unsigned int received_rps ; s#softnet_data * rps_ipi_list ; s#call_single_data csd __attribute__ ( ( __aligned__ ( ( 1 << 7 ) ) ) ) ; s#softnet_data * rps_ipi_next ; unsigned int cpu ; unsigned int input_queue_head ; unsigned int input_queue_tail ; unsigned dropped ; s#sk_buff_head input_pkt_queue ; s#napi_struct backlog ; } 
softnet_data extern __attribute__ ( ( section ( ".data..percpu" "..shared_aligned" ) ) ) __typeof__ ( s#softnet_data ) softnet_data 
bond_dev_disable_lro_cb extern void ( * bond_dev_disable_lro_cb ) ( s#net_device * ) 
dev_add_pack extern void dev_add_pack ( s#packet_type * ) 
__dev_remove_pack extern void __dev_remove_pack ( s#packet_type * ) 
dev_remove_pack extern void dev_remove_pack ( s#packet_type * ) 
netdev_boot_setup_check extern int netdev_boot_setup_check ( s#net_device * ) 
__dev_get_by_name extern s#net_device * __dev_get_by_name ( s#net * , const char * ) 
dev_get_by_name_rcu extern s#net_device * dev_get_by_name_rcu ( s#net * , const char * ) 
dev_get_by_name extern s#net_device * dev_get_by_name ( s#net * , const char * ) 
__dev_get_by_index extern s#net_device * __dev_get_by_index ( s#net * , int ) 
dev_get_by_index_rcu extern s#net_device * dev_get_by_index_rcu ( s#net * , int ) 
dev_get_by_index extern s#net_device * dev_get_by_index ( s#net * , int ) 
dev_getbyhwaddr_rcu extern s#net_device * dev_getbyhwaddr_rcu ( s#net * , unsigned short , const char * ) 
__dev_getfirstbyhwtype extern s#net_device * __dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_getfirstbyhwtype extern s#net_device * dev_getfirstbyhwtype ( s#net * , unsigned short ) 
dev_get_by_flags_rcu extern s#net_device * dev_get_by_flags_rcu ( s#net * , unsigned short , unsigned short ) 
dev_valid_name extern int dev_valid_name ( const char * ) 
dev_alloc_name extern int dev_alloc_name ( s#net_device * , const char * ) 
netdev_features_change extern void netdev_features_change ( s#net_device * ) 
netdev_state_change extern void netdev_state_change ( s#net_device * ) 
netdev_bonding_change extern int netdev_bonding_change ( s#net_device * , unsigned long ) 
dev_load extern void dev_load ( s#net * , const char * ) 
dev_open extern int dev_open ( s#net_device * ) 
dev_close extern int dev_close ( s#net_device * ) 
dev_disable_lro extern void dev_disable_lro ( s#net_device * ) 
register_netdevice_notifier extern int register_netdevice_notifier ( s#notifier_block * ) 
unregister_netdevice_notifier extern int unregister_netdevice_notifier ( s#notifier_block * ) 
call_netdevice_notifiers extern int call_netdevice_notifiers ( unsigned long , s#net_device * ) 
net_enable_timestamp extern void net_enable_timestamp ( void ) 
net_disable_timestamp extern void net_disable_timestamp ( void ) 
dev_forward_skb extern int dev_forward_skb ( s#net_device * , s#sk_buff * ) 
netif_set_xps_queue extern int netif_set_xps_queue ( s#net_device * , s#cpumask * , t#u16 ) 
netif_set_real_num_tx_queues extern int netif_set_real_num_tx_queues ( s#net_device * , unsigned int ) 
netif_set_real_num_rx_queues extern int netif_set_real_num_rx_queues ( s#net_device * , unsigned int ) 
netif_get_num_default_rss_queues extern int netif_get_num_default_rss_queues ( void ) 
__netif_schedule extern void __netif_schedule ( s#Qdisc * ) 
e#skb_free_reason enum skb_free_reason { SKB_REASON_CONSUMED , SKB_REASON_DROPPED , } 
__dev_kfree_skb_irq void __dev_kfree_skb_irq ( s#sk_buff * , e#skb_free_reason ) 
__dev_kfree_skb_any void __dev_kfree_skb_any ( s#sk_buff * , e#skb_free_reason ) 
netif_device_detach extern void netif_device_detach ( s#net_device * ) 
netif_device_attach extern void netif_device_attach ( s#net_device * ) 
skb_checksum_help extern int skb_checksum_help ( s#sk_buff * ) 
skb_gso_segment extern s#sk_buff * skb_gso_segment ( s#sk_buff * , t#u32 ) 
netdev_rx_csum_fault extern void netdev_rx_csum_fault ( s#net_device * ) 
netif_skb_features t#u32 netif_skb_features ( s#sk_buff * ) 
__skb_tx_hash extern t#u16 __skb_tx_hash ( const s#net_device * , const s#sk_buff * , unsigned int ) 
__netdev_pick_tx extern t#u16 __netdev_pick_tx ( s#net_device * , s#sk_buff * ) 
dev_queue_xmit extern int dev_queue_xmit ( s#sk_buff * ) 
__skb_get_rxhash extern t#__u32 __skb_get_rxhash ( s#sk_buff * ) 
s#rps_sock_flow_table struct rps_sock_flow_table { unsigned int mask ; t#u16 ents [ 0 ] ; } 
rps_sock_flow_table extern s#rps_sock_flow_table * rps_sock_flow_table 
rps_may_expire_flow extern t#bool rps_may_expire_flow ( s#net_device * , t#u16 , t#u32 , t#u16 ) 
netif_rx extern int netif_rx ( s#sk_buff * ) 
netif_rx_ni extern int netif_rx_ni ( s#sk_buff * ) 
netdev_rx_handler_register extern int netdev_rx_handler_register ( s#net_device * , t#rx_handler_func_t * , void * ) 
netdev_rx_handler_unregister extern void netdev_rx_handler_unregister ( s#net_device * ) 
netif_receive_skb extern int netif_receive_skb ( s#sk_buff * ) 
napi_gro_flush extern void napi_gro_flush ( s#napi_struct * ) 
dev_gro_receive extern t#gro_result_t dev_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_skb_finish extern t#gro_result_t napi_skb_finish ( t#gro_result_t , s#sk_buff * ) 
skb_gro_reset_offset extern void skb_gro_reset_offset ( s#sk_buff * ) 
napi_gro_receive extern t#gro_result_t napi_gro_receive ( s#napi_struct * , s#sk_buff * ) 
napi_get_frags extern s#sk_buff * napi_get_frags ( s#napi_struct * ) 
napi_frags_finish extern t#gro_result_t napi_frags_finish ( s#napi_struct * , s#sk_buff * , t#gro_result_t ) 
napi_frags_skb extern s#sk_buff * napi_frags_skb ( s#napi_struct * ) 
napi_gro_frags extern t#gro_result_t napi_gro_frags ( s#napi_struct * ) 
__napi_schedule extern void __napi_schedule ( s#napi_struct * ) 
__napi_schedule_irqoff void __napi_schedule_irqoff ( s#napi_struct * ) 
__napi_complete extern void __napi_complete ( s#napi_struct * ) 
napi_complete extern void napi_complete ( s#napi_struct * ) 
netif_napi_add void netif_napi_add ( s#net_device * , s#napi_struct * , int ( * ) ( s#napi_struct * , int ) , int ) 
netif_napi_del void netif_napi_del ( s#napi_struct * ) 
t#gifconf_func_t typedef int gifconf_func_t ( s#net_device * , char * , int ) 
register_gifconf extern int register_gifconf ( unsigned int , t#gifconf_func_t * ) 
netdev_set_master extern int netdev_set_master ( s#net_device * , s#net_device * ) 
netdev_set_bond_master extern int netdev_set_bond_master ( s#net_device * , s#net_device * ) 
dev_set_promiscuity extern int dev_set_promiscuity ( s#net_device * , int ) 
dev_set_allmulti extern int dev_set_allmulti ( s#net_device * , int ) 
dev_ethtool_get_settings int dev_ethtool_get_settings ( s#net_device * , s#ethtool_cmd * ) 
dev_get_flags extern unsigned dev_get_flags ( const s#net_device * ) 
dev_change_flags extern int dev_change_flags ( s#net_device * , unsigned ) 
dev_set_mtu extern int dev_set_mtu ( s#net_device * , int ) 
dev_set_group extern void dev_set_group ( s#net_device * , int ) 
dev_set_mac_address extern int dev_set_mac_address ( s#net_device * , s#sockaddr * ) 
dev_get_phys_port_id extern int dev_get_phys_port_id ( s#net_device * , s#netdev_phys_port_id * ) 
netdev_fix_features t#u32 netdev_fix_features ( s#net_device * , t#u32 ) 
netdev_update_features void netdev_update_features ( s#net_device * ) 
netdev_change_features void netdev_change_features ( s#net_device * ) 
netif_stacked_transfer_operstate void netif_stacked_transfer_operstate ( const s#net_device * , s#net_device * ) 
register_netdevice extern int register_netdevice ( s#net_device * ) 
init_dummy_netdev extern int init_dummy_netdev ( s#net_device * ) 
register_netdev extern int register_netdev ( s#net_device * ) 
netdev_refcnt_read extern int netdev_refcnt_read ( const s#net_device * ) 
dev_get_stats extern s#rtnl_link_stats64 * dev_get_stats ( s#net_device * , s#rtnl_link_stats64 * ) 
alloc_netdev_mqs extern s#net_device * alloc_netdev_mqs ( int , const char * , void ( * ) ( s#net_device * ) , unsigned int , unsigned int ) 
free_netdev extern void free_netdev ( s#net_device * ) 
synchronize_net extern void synchronize_net ( void ) 
unregister_netdevice_queue extern void unregister_netdevice_queue ( s#net_device * , s#list_head * ) 
unregister_netdevice_many extern void unregister_netdevice_many ( s#list_head * ) 
unregister_netdev extern void unregister_netdev ( s#net_device * ) 
dev_change_net_namespace extern int dev_change_net_namespace ( s#net_device * , s#net * , const char * ) 
netdev_increment_features t#u32 netdev_increment_features ( t#u32 , t#u32 , t#u32 ) 
netdev_printk extern int netdev_printk ( const char * , const s#net_device * , const char * , ... ) 
netdev_emerg extern int netdev_emerg ( const s#net_device * , const char * , ... ) 
netdev_alert extern int netdev_alert ( const s#net_device * , const char * , ... ) 
netdev_crit extern int netdev_crit ( const s#net_device * , const char * , ... ) 
netdev_err extern int netdev_err ( const s#net_device * , const char * , ... ) 
netdev_warn extern int netdev_warn ( const s#net_device * , const char * , ... ) 
netdev_notice extern int netdev_notice ( const s#net_device * , const char * , ... ) 
netdev_info extern int netdev_info ( const s#net_device * , const char * , ... ) 

/* net/core/dev_addr_lists.o */
__hw_addr_add_multiple extern int __hw_addr_add_multiple ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int , unsigned char ) 
__hw_addr_del_multiple extern void __hw_addr_del_multiple ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int , unsigned char ) 
__hw_addr_sync extern int __hw_addr_sync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
__hw_addr_unsync extern void __hw_addr_unsync ( s#netdev_hw_addr_list * , s#netdev_hw_addr_list * , int ) 
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
__hw_addr_sync_dev int __hw_addr_sync_dev ( s#netdev_hw_addr_list * , s#net_device * , int ( * ) ( s#net_device * , const unsigned char * ) , int ( * ) ( s#net_device * , const unsigned char * ) ) 
__hw_addr_unsync_dev void __hw_addr_unsync_dev ( s#netdev_hw_addr_list * , s#net_device * , int ( * ) ( s#net_device * , const unsigned char * ) ) 
__hw_addr_flush extern void __hw_addr_flush ( s#netdev_hw_addr_list * ) 
__hw_addr_init extern void __hw_addr_init ( s#netdev_hw_addr_list * ) 
dev_addr_flush extern void dev_addr_flush ( s#net_device * ) 
dev_addr_init extern int dev_addr_init ( s#net_device * ) 
dev_addr_add extern int dev_addr_add ( s#net_device * , const unsigned char * , unsigned char ) 
dev_addr_del extern int dev_addr_del ( s#net_device * , const unsigned char * , unsigned char ) 
dev_addr_add_multiple extern int dev_addr_add_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_addr_del_multiple extern int dev_addr_del_multiple ( s#net_device * , s#net_device * , unsigned char ) 
dev_uc_add_excl extern int dev_uc_add_excl ( s#net_device * , const unsigned char * ) 
dev_uc_add extern int dev_uc_add ( s#net_device * , const unsigned char * ) 
dev_uc_del extern int dev_uc_del ( s#net_device * , const unsigned char * ) 
dev_uc_sync extern int dev_uc_sync ( s#net_device * , s#net_device * ) 
dev_uc_sync_multiple extern int dev_uc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_uc_unsync extern void dev_uc_unsync ( s#net_device * , s#net_device * ) 
dev_uc_flush extern void dev_uc_flush ( s#net_device * ) 
dev_uc_init extern void dev_uc_init ( s#net_device * ) 
dev_mc_add_excl extern int dev_mc_add_excl ( s#net_device * , const unsigned char * ) 
dev_mc_add extern int dev_mc_add ( s#net_device * , const unsigned char * ) 
dev_mc_add_global extern int dev_mc_add_global ( s#net_device * , const unsigned char * ) 
dev_mc_del extern int dev_mc_del ( s#net_device * , const unsigned char * ) 
dev_mc_del_global extern int dev_mc_del_global ( s#net_device * , const unsigned char * ) 
dev_mc_sync extern int dev_mc_sync ( s#net_device * , s#net_device * ) 
dev_mc_sync_multiple extern int dev_mc_sync_multiple ( s#net_device * , s#net_device * ) 
dev_mc_unsync extern void dev_mc_unsync ( s#net_device * , s#net_device * ) 
dev_mc_flush extern void dev_mc_flush ( s#net_device * ) 
dev_mc_init extern void dev_mc_init ( s#net_device * ) 

/* net/core/dst.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
dst_discard extern int dst_discard ( s#sk_buff * ) 
dst_alloc extern void * dst_alloc ( s#dst_ops * , s#net_device * , int , int , int ) 
__dst_free extern void __dst_free ( s#dst_entry * ) 
dst_destroy extern s#dst_entry * dst_destroy ( s#dst_entry * ) 
dst_release extern void dst_release ( s#dst_entry * ) 
dst_cow_metrics_generic extern t#u32 * dst_cow_metrics_generic ( s#dst_entry * , unsigned long ) 
__dst_destroy_metrics_generic extern void __dst_destroy_metrics_generic ( s#dst_entry * , unsigned long ) 
skb_dst_set_noref extern void skb_dst_set_noref ( s#sk_buff * , s#dst_entry * ) 

/* net/core/ethtool.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
ethtool_op_get_link t#u32 ethtool_op_get_link ( s#net_device * ) 
ethtool_op_get_ts_info int ethtool_op_get_ts_info ( s#net_device * , s#ethtool_ts_info * ) 
ethtool_op_get_tx_csum t#u32 ethtool_op_get_tx_csum ( s#net_device * ) 
ethtool_op_set_tx_csum int ethtool_op_set_tx_csum ( s#net_device * , t#u32 ) 
ethtool_op_set_tx_hw_csum int ethtool_op_set_tx_hw_csum ( s#net_device * , t#u32 ) 
ethtool_op_set_tx_ipv6_csum int ethtool_op_set_tx_ipv6_csum ( s#net_device * , t#u32 ) 
ethtool_op_get_sg t#u32 ethtool_op_get_sg ( s#net_device * ) 
ethtool_op_set_sg int ethtool_op_set_sg ( s#net_device * , t#u32 ) 
ethtool_op_get_tso t#u32 ethtool_op_get_tso ( s#net_device * ) 
ethtool_op_set_tso int ethtool_op_set_tso ( s#net_device * , t#u32 ) 
ethtool_op_get_ufo t#u32 ethtool_op_get_ufo ( s#net_device * ) 
ethtool_op_set_ufo int ethtool_op_set_ufo ( s#net_device * , t#u32 ) 
ethtool_op_get_flags t#u32 ethtool_op_get_flags ( s#net_device * ) 
ethtool_invalid_flags t#bool ethtool_invalid_flags ( s#net_device * , t#u32 , t#u32 ) 
ethtool_op_set_flags int ethtool_op_set_flags ( s#net_device * , t#u32 , t#u32 ) 
ethtool_ntuple_flush void ethtool_ntuple_flush ( s#net_device * ) 

/* net/core/fib_rules.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#fib_rule struct fib_rule { s#list_head list ; t#atomic_t refcnt ; int iifindex ; int oifindex ; t#u32 mark ; t#u32 mark_mask ; t#u32 pref ; t#u32 flags ; t#u32 table ; t#u8 action ; t#u32 target ; s#fib_rule * ctarget ; char iifname [ 16 ] ; char oifname [ 16 ] ; s#rcu_head rcu ; s#net * fr_net ; } 
s#fib_lookup_arg struct fib_lookup_arg { void * lookup_ptr ; void * result ; s#fib_rule * rule ; int flags ; } 
s#fib_rule_hdr struct fib_rule_hdr { t#__u8 family ; t#__u8 dst_len ; t#__u8 src_len ; t#__u8 tos ; t#__u8 table ; t#__u8 res1 ; t#__u8 res2 ; t#__u8 action ; t#__u32 flags ; } 
s#fib_rules_ops struct fib_rules_ops { int family ; s#list_head list ; int rule_size ; int addr_size ; int unresolved_rules ; int nr_goto_rules ; int ( * action ) ( s#fib_rule * , s#flowi * , int , s#fib_lookup_arg * ) ; int ( * match ) ( s#fib_rule * , s#flowi * , int ) ; int ( * configure ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * compare ) ( s#fib_rule * , s#fib_rule_hdr * , s#nlattr * * ) ; int ( * fill ) ( s#fib_rule * , s#sk_buff * , s#fib_rule_hdr * ) ; t#u32 ( * default_pref ) ( s#fib_rules_ops * ) ; t#size_t ( * nlmsg_payload ) ( s#fib_rule * ) ; void ( * flush_cache ) ( s#fib_rules_ops * ) ; int nlgroup ; const s#nla_policy * policy ; s#list_head rules_list ; s#module * owner ; s#net * fro_net ; s#rcu_head rcu ; } 
fib_default_rule_add extern int fib_default_rule_add ( s#fib_rules_ops * , t#u32 , t#u32 , t#u32 ) 
fib_default_rule_pref extern t#u32 fib_default_rule_pref ( s#fib_rules_ops * ) 
fib_rules_register extern s#fib_rules_ops * fib_rules_register ( const s#fib_rules_ops * , s#net * ) 
fib_rules_unregister extern void fib_rules_unregister ( s#fib_rules_ops * ) 
fib_rules_lookup extern int fib_rules_lookup ( s#fib_rules_ops * , s#flowi * , int , s#fib_lookup_arg * ) 

/* net/core/filter.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_filter extern int sk_filter ( s#sock * , s#sk_buff * ) 
sk_run_filter extern unsigned int sk_run_filter ( const s#sk_buff * , const s#sock_filter * ) 
sk_chk_filter extern int sk_chk_filter ( s#sock_filter * , int ) 
sk_filter_release_rcu extern void sk_filter_release_rcu ( s#rcu_head * ) 
s#sock_fprog struct sock_fprog { unsigned short len ; s#sock_filter * filter ; } 
sk_attach_filter extern int sk_attach_filter ( s#sock_fprog * , s#sock * ) 
sk_detach_filter extern int sk_detach_filter ( s#sock * ) 
bpf_prog_ran extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( unsigned int ) bpf_prog_ran 
bpf_leave_prog_deferred void bpf_leave_prog_deferred ( const s#sk_filter * ) 

/* net/core/flow.o */
flow_cache_genid extern t#atomic_t flow_cache_genid 
s##net
t#flow_resolve_t typedef s#flow_cache_object * ( * flow_resolve_t ) ( s#net * , const s#flowi * , t#u16 , t#u8 , s#flow_cache_object * , void * ) 
flow_cache_lookup s#flow_cache_object * flow_cache_lookup ( s#net * , const s#flowi * , t#u16 , t#u8 , t#flow_resolve_t , void * ) 

/* net/core/flow_dissector.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
skb_flow_get_ports t#__be32 skb_flow_get_ports ( const s#sk_buff * , int , t#u8 ) 
s#flow_keys struct flow_keys { t#__be32 src ; t#__be32 dst ; union { t#__be32 ports ; t#__be16 port16 [ 2 ] ; } ; t#u16 thoff ; t#u16 n_proto ; t#u8 ip_proto ; } 
skb_flow_dissect t#bool skb_flow_dissect ( const s#sk_buff * , s#flow_keys * ) 

/* net/core/gen_estimator.o */
gen_new_estimator extern int gen_new_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * , t#spinlock_t * , s#nlattr * ) 
gen_kill_estimator extern void gen_kill_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * ) 
gen_replace_estimator extern int gen_replace_estimator ( s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * , t#spinlock_t * , s#nlattr * ) 
gen_estimator_active extern t#bool gen_estimator_active ( const s#gnet_stats_basic_packed * , const s#gnet_stats_rate_est * ) 

/* net/core/gen_stats.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
gnet_stats_start_copy_compat extern int gnet_stats_start_copy_compat ( s#sk_buff * , int , int , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_start_copy extern int gnet_stats_start_copy ( s#sk_buff * , int , t#spinlock_t * , s#gnet_dump * ) 
gnet_stats_copy_basic extern int gnet_stats_copy_basic ( s#gnet_dump * , s#gnet_stats_basic_packed * ) 
gnet_stats_copy_rate_est extern int gnet_stats_copy_rate_est ( s#gnet_dump * , const s#gnet_stats_basic_packed * , s#gnet_stats_rate_est * ) 
gnet_stats_copy_queue extern int gnet_stats_copy_queue ( s#gnet_dump * , s#gnet_stats_queue * ) 
gnet_stats_copy_app extern int gnet_stats_copy_app ( s#gnet_dump * , void * , int ) 
gnet_stats_finish_copy extern int gnet_stats_finish_copy ( s#gnet_dump * ) 

/* net/core/iovec.o */
memcpy_toiovec extern int memcpy_toiovec ( s#iovec * , unsigned char * , int ) 
memcpy_toiovecend extern int memcpy_toiovecend ( const s#iovec * , unsigned char * , int , int ) 
memcpy_fromiovec extern int memcpy_fromiovec ( unsigned char * , s#iovec * , int ) 
memcpy_fromiovecend extern int memcpy_fromiovecend ( unsigned char * , const s#iovec * , int , int ) 
csum_partial_copy_fromiovecend extern int csum_partial_copy_fromiovecend ( unsigned char * , s#iovec * , int , unsigned int , t#__wsum * ) 

/* net/core/link_watch.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
linkwatch_fire_event extern void linkwatch_fire_event ( s#net_device * ) 

/* net/core/neighbour.o */
neigh_rand_reach_time extern unsigned long neigh_rand_reach_time ( unsigned long ) 
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
neigh_changeaddr extern void neigh_changeaddr ( s#neigh_table * , s#net_device * ) 
neigh_ifdown extern int neigh_ifdown ( s#neigh_table * , s#net_device * ) 
neigh_lookup extern s#neighbour * neigh_lookup ( s#neigh_table * , const void * , s#net_device * ) 
neigh_lookup_nodev extern s#neighbour * neigh_lookup_nodev ( s#neigh_table * , s#net * , const void * ) 
neigh_create extern s#neighbour * neigh_create ( s#neigh_table * , const void * , s#net_device * ) 
__pneigh_lookup extern s#pneigh_entry * __pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * ) 
pneigh_lookup extern s#pneigh_entry * pneigh_lookup ( s#neigh_table * , s#net * , const void * , s#net_device * , int ) 
neigh_destroy extern void neigh_destroy ( s#neighbour * ) 
__neigh_event_send extern int __neigh_event_send ( s#neighbour * , s#sk_buff * ) 
neigh_update extern int neigh_update ( s#neighbour * , const t#u8 * , t#u8 , t#u32 ) 
neigh_event_ns extern s#neighbour * neigh_event_ns ( s#neigh_table * , t#u8 * , void * , s#net_device * ) 
neigh_compat_output extern int neigh_compat_output ( s#sk_buff * ) 
neigh_resolve_output extern int neigh_resolve_output ( s#sk_buff * ) 
neigh_connected_output extern int neigh_connected_output ( s#sk_buff * ) 
pneigh_enqueue extern void pneigh_enqueue ( s#neigh_table * , s#neigh_parms * , s#sk_buff * ) 
neigh_parms_alloc extern s#neigh_parms * neigh_parms_alloc ( s#net_device * , s#neigh_table * ) 
neigh_parms_release extern void neigh_parms_release ( s#neigh_table * , s#neigh_parms * ) 
neigh_table_init_no_netlink extern void neigh_table_init_no_netlink ( s#neigh_table * ) 
neigh_table_init extern void neigh_table_init ( s#neigh_table * ) 
neigh_table_clear extern int neigh_table_clear ( s#neigh_table * ) 
neigh_for_each extern void neigh_for_each ( s#neigh_table * , void ( * ) ( s#neighbour * , void * ) , void * ) 
__neigh_for_each_release extern void __neigh_for_each_release ( s#neigh_table * , int ( * ) ( s#neighbour * ) ) 
neigh_seq_start extern void * neigh_seq_start ( s#seq_file * , t#loff_t * , s#neigh_table * , unsigned int ) 
neigh_seq_next extern void * neigh_seq_next ( s#seq_file * , void * , t#loff_t * ) 
neigh_seq_stop extern void neigh_seq_stop ( s#seq_file * , void * ) 
neigh_sysctl_register extern int neigh_sysctl_register ( s#net_device * , s#neigh_parms * , char * , t#proc_handler * ) 
neigh_sysctl_unregister extern void neigh_sysctl_unregister ( s#neigh_parms * ) 

/* net/core/net-sysfs.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##libipw_device
s##sec_path
s##tvec_base
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
net_ns_type_operations extern s#kobj_ns_type_operations net_ns_type_operations 
netdev_class_create_file extern int netdev_class_create_file ( s#class_attribute * ) 
netdev_class_remove_file extern void netdev_class_remove_file ( s#class_attribute * ) 

/* net/core/net-traces.o */
__tracepoint_kfree_skb extern s#tracepoint __tracepoint_kfree_skb 
__tracepoint_napi_poll extern s#tracepoint __tracepoint_napi_poll 

/* net/core/net_namespace.o */
net_namespace_list extern s#list_head net_namespace_list 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
init_net extern s#net init_net 
__put_net extern void __put_net ( s#net * ) 
get_net_ns_by_pid extern s#net * get_net_ns_by_pid ( t#pid_t ) 
s#pernet_operations struct pernet_operations { s#list_head list ; int ( * init ) ( s#net * ) ; void ( * exit ) ( s#net * ) ; void ( * exit_batch ) ( s#list_head * ) ; int * id ; t#size_t size ; } 
register_pernet_subsys extern int register_pernet_subsys ( s#pernet_operations * ) 
unregister_pernet_subsys extern void unregister_pernet_subsys ( s#pernet_operations * ) 
register_pernet_device extern int register_pernet_device ( s#pernet_operations * ) 
unregister_pernet_device extern void unregister_pernet_device ( s#pernet_operations * ) 

/* net/core/netevent.o */
register_netevent_notifier extern int register_netevent_notifier ( s#notifier_block * ) 
unregister_netevent_notifier extern int unregister_netevent_notifier ( s#notifier_block * ) 
call_netevent_notifiers extern int call_netevent_notifiers ( unsigned long , void * ) 

/* net/core/netpoll.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s#udp_hslot struct udp_hslot { s#hlist_nulls_head head ; int count ; t#spinlock_t lock ; } 
s#udp_table struct udp_table { s#udp_hslot * hash ; s#udp_hslot * hash2 ; unsigned int mask ; unsigned int log ; } 
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
netpoll_poll_dev void netpoll_poll_dev ( s#net_device * ) 
netpoll_poll void netpoll_poll ( s#netpoll * ) 
netpoll_send_skb_on_dev void netpoll_send_skb_on_dev ( s#netpoll * , s#sk_buff * , s#net_device * ) 
netpoll_send_udp void netpoll_send_udp ( s#netpoll * , const char * , int ) 
netpoll_print_options void netpoll_print_options ( s#netpoll * ) 
netpoll_parse_options int netpoll_parse_options ( s#netpoll * , char * ) 
__netpoll_setup int __netpoll_setup ( s#netpoll * ) 
netpoll_setup int netpoll_setup ( s#netpoll * ) 
__netpoll_cleanup void __netpoll_cleanup ( s#netpoll * ) 
netpoll_cleanup void netpoll_cleanup ( s#netpoll * ) 
netpoll_trap extern int netpoll_trap ( void ) 
netpoll_set_trap void netpoll_set_trap ( int ) 

/* net/core/request_sock.o */
sysctl_max_syn_backlog extern int sysctl_max_syn_backlog 

/* net/core/rtnetlink.o */
rtnl_lock extern void rtnl_lock ( void ) 
rtnl_unlock extern void rtnl_unlock ( void ) 
rtnl_trylock extern int rtnl_trylock ( void ) 
rtnl_is_locked extern int rtnl_is_locked ( void ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
t#rtnl_doit_func typedef int ( * rtnl_doit_func ) ( s#sk_buff * , s#nlmsghdr * , void * ) 
t#rtnl_dumpit_func typedef int ( * rtnl_dumpit_func ) ( s#sk_buff * , s#netlink_callback * ) 
t#rtnl_calcit_func typedef t#u16 ( * rtnl_calcit_func ) ( s#sk_buff * , s#nlmsghdr * ) 
__rtnl_register extern int __rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_register extern void rtnl_register ( int , int , t#rtnl_doit_func , t#rtnl_dumpit_func , t#rtnl_calcit_func ) 
rtnl_unregister extern int rtnl_unregister ( int , int ) 
rtnl_unregister_all extern void rtnl_unregister_all ( int ) 
__rtnl_link_register extern int __rtnl_link_register ( s#rtnl_link_ops * ) 
rtnl_link_register extern int rtnl_link_register ( s#rtnl_link_ops * ) 
__rtnl_link_unregister extern void __rtnl_link_unregister ( s#rtnl_link_ops * ) 
rtnl_link_unregister extern void rtnl_link_unregister ( s#rtnl_link_ops * ) 
s#rtnl_af_ops struct rtnl_af_ops { s#list_head list ; int family ; int ( * fill_link_af ) ( s#sk_buff * , const s#net_device * ) ; t#size_t ( * get_link_af_size ) ( const s#net_device * ) ; int ( * validate_link_af ) ( const s#net_device * , const s#nlattr * ) ; int ( * set_link_af ) ( s#net_device * , const s#nlattr * ) ; } 
__rtnl_af_register extern int __rtnl_af_register ( s#rtnl_af_ops * ) 
rtnl_af_register extern int rtnl_af_register ( s#rtnl_af_ops * ) 
__rtnl_af_unregister extern void __rtnl_af_unregister ( s#rtnl_af_ops * ) 
rtnl_af_unregister extern void rtnl_af_unregister ( s#rtnl_af_ops * ) 
__rta_fill extern void __rta_fill ( s#sk_buff * , int , int , const void * ) 
rtnl_unicast extern int rtnl_unicast ( s#sk_buff * , s#net * , t#u32 ) 
rtnl_notify extern void rtnl_notify ( s#sk_buff * , s#net * , t#u32 , t#u32 , s#nlmsghdr * , t#gfp_t ) 
rtnl_set_sk_err extern void rtnl_set_sk_err ( s#net * , t#u32 , int ) 
rtnetlink_put_metrics extern int rtnetlink_put_metrics ( s#sk_buff * , t#u32 * ) 
rtnl_put_cacheinfo extern int rtnl_put_cacheinfo ( s#sk_buff * , s#dst_entry * , t#u32 , t#u32 , t#u32 , long , t#u32 ) 
E#__IFLA_MAX 30 
ifla_policy extern const s#nla_policy ifla_policy [ ( E#__IFLA_MAX - 1 ) + 1 ] 
rtnl_link_get_net extern s#net * rtnl_link_get_net ( s#net * , s#nlattr * [ ] ) 
s#ifinfomsg struct ifinfomsg { unsigned char ifi_family ; unsigned char __ifi_pad ; unsigned short ifi_type ; int ifi_index ; unsigned ifi_flags ; unsigned ifi_change ; } 
rtnl_configure_link extern int rtnl_configure_link ( s#net_device * , const s#ifinfomsg * ) 
rtnl_create_link extern s#net_device * rtnl_create_link ( s#net * , s#net * , char * , const s#rtnl_link_ops * , s#nlattr * [ ] ) 
ndo_dflt_fdb_add extern int ndo_dflt_fdb_add ( s#ndmsg * , s#nlattr * [ ] , s#net_device * , const unsigned char * , t#u16 ) 
ndo_dflt_fdb_del extern int ndo_dflt_fdb_del ( s#ndmsg * , s#net_device * , const unsigned char * ) 
ndo_dflt_fdb_dump extern int ndo_dflt_fdb_dump ( s#sk_buff * , s#netlink_callback * , s#net_device * , int ) 
ndo_dflt_bridge_getlink extern int ndo_dflt_bridge_getlink ( s#sk_buff * , t#u32 , t#u32 , s#net_device * , t#u16 ) 

/* net/core/scm.o */
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#scm_fp_list struct scm_fp_list { s#list_head list ; short count ; short max ; s#file * fp [ 253 ] ; } 
s#scm_cookie struct scm_cookie { s#pid * pid ; const s#cred * cred ; s#scm_fp_list * fp ; s#ucred creds ; t#u32 secid ; } 
__scm_destroy extern void __scm_destroy ( s#scm_cookie * ) 
__scm_send extern int __scm_send ( s#socket * , s#msghdr * , s#scm_cookie * ) 
put_cmsg extern int put_cmsg ( s#msghdr * , int , int , int , void * ) 
scm_detach_fds extern void scm_detach_fds ( s#msghdr * , s#scm_cookie * ) 
scm_fp_dup extern s#scm_fp_list * scm_fp_dup ( s#scm_fp_list * ) 

/* net/core/secure_seq.o */
secure_tcpv6_sequence_number extern t#__u32 secure_tcpv6_sequence_number ( t#__be32 * , t#__be32 * , t#__be16 , t#__be16 ) 
secure_ipv4_port_ephemeral extern t#u32 secure_ipv4_port_ephemeral ( t#__be32 , t#__be32 , t#__be16 ) 
secure_dccp_sequence_number extern t#u64 secure_dccp_sequence_number ( t#__be32 , t#__be32 , t#__be16 , t#__be16 ) 
secure_dccpv6_sequence_number extern t#u64 secure_dccpv6_sequence_number ( t#__be32 * , t#__be32 * , t#__be16 , t#__be16 ) 

/* net/core/skbuff.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__alloc_skb extern s#sk_buff * __alloc_skb ( unsigned int , t#gfp_t , int , int ) 
__netdev_alloc_skb extern s#sk_buff * __netdev_alloc_skb ( s#net_device * , unsigned int , t#gfp_t ) 
skb_add_rx_frag extern void skb_add_rx_frag ( s#sk_buff * , int , s#page * , int , int , unsigned int ) 
dev_alloc_skb extern s#sk_buff * dev_alloc_skb ( unsigned int ) 
__kfree_skb extern void __kfree_skb ( s#sk_buff * ) 
kfree_skb extern void kfree_skb ( s#sk_buff * ) 
consume_skb extern void consume_skb ( s#sk_buff * ) 
skb_recycle_check extern t#bool skb_recycle_check ( s#sk_buff * , int ) 
skb_morph extern s#sk_buff * skb_morph ( s#sk_buff * , s#sk_buff * ) 
skb_copy_ubufs extern int skb_copy_ubufs ( s#sk_buff * , t#gfp_t ) 
skb_clone extern s#sk_buff * skb_clone ( s#sk_buff * , t#gfp_t ) 
skb_copy extern s#sk_buff * skb_copy ( const s#sk_buff * , t#gfp_t ) 
pskb_copy extern s#sk_buff * pskb_copy ( s#sk_buff * , t#gfp_t ) 
pskb_expand_head extern int pskb_expand_head ( s#sk_buff * , int , int , t#gfp_t ) 
skb_realloc_headroom extern s#sk_buff * skb_realloc_headroom ( s#sk_buff * , unsigned int ) 
skb_copy_expand extern s#sk_buff * skb_copy_expand ( const s#sk_buff * , int , int , t#gfp_t ) 
skb_pad extern int skb_pad ( s#sk_buff * , int ) 
skb_put extern unsigned char * skb_put ( s#sk_buff * , unsigned int ) 
skb_push extern unsigned char * skb_push ( s#sk_buff * , unsigned int ) 
skb_pull extern unsigned char * skb_pull ( s#sk_buff * , unsigned int ) 
skb_trim extern void skb_trim ( s#sk_buff * , unsigned int ) 
___pskb_trim extern int ___pskb_trim ( s#sk_buff * , unsigned int ) 
__pskb_pull_tail extern unsigned char * __pskb_pull_tail ( s#sk_buff * , int ) 
skb_copy_bits extern int skb_copy_bits ( const s#sk_buff * , int , void * , int ) 
skb_store_bits extern int skb_store_bits ( s#sk_buff * , int , const void * , int ) 
skb_checksum extern t#__wsum skb_checksum ( const s#sk_buff * , int , int , t#__wsum ) 
skb_copy_and_csum_bits extern t#__wsum skb_copy_and_csum_bits ( const s#sk_buff * , int , t#u8 * , int , t#__wsum ) 
skb_copy_and_csum_dev extern void skb_copy_and_csum_dev ( const s#sk_buff * , t#u8 * ) 
skb_dequeue extern s#sk_buff * skb_dequeue ( s#sk_buff_head * ) 
skb_dequeue_tail extern s#sk_buff * skb_dequeue_tail ( s#sk_buff_head * ) 
skb_queue_purge extern void skb_queue_purge ( s#sk_buff_head * ) 
skb_queue_head extern void skb_queue_head ( s#sk_buff_head * , s#sk_buff * ) 
skb_queue_tail extern void skb_queue_tail ( s#sk_buff_head * , s#sk_buff * ) 
skb_unlink extern void skb_unlink ( s#sk_buff * , s#sk_buff_head * ) 
skb_append extern void skb_append ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_insert extern void skb_insert ( s#sk_buff * , s#sk_buff * , s#sk_buff_head * ) 
skb_split extern void skb_split ( s#sk_buff * , s#sk_buff * , const t#u32 ) 
s#skb_seq_state struct skb_seq_state { t#__u32 lower_offset ; t#__u32 upper_offset ; t#__u32 frag_idx ; t#__u32 stepped_offset ; s#sk_buff * root_skb ; s#sk_buff * cur_skb ; t#__u8 * frag_data ; } 
skb_prepare_seq_read extern void skb_prepare_seq_read ( s#sk_buff * , unsigned int , unsigned int , s#skb_seq_state * ) 
skb_seq_read extern unsigned int skb_seq_read ( unsigned int , const t#u8 * * , s#skb_seq_state * ) 
skb_abort_seq_read extern void skb_abort_seq_read ( s#skb_seq_state * ) 
skb_find_text extern unsigned int skb_find_text ( s#sk_buff * , unsigned int , unsigned int , s#ts_config * , s#ts_state * ) 
skb_append_datato_frags extern int skb_append_datato_frags ( s#sock * , s#sk_buff * , int ( void * , char * , int , int , int , s#sk_buff * ) , void * , int ) 
skb_pull_rcsum unsigned char * skb_pull_rcsum ( s#sk_buff * , unsigned int ) 
skb_segment extern s#sk_buff * skb_segment ( s#sk_buff * , t#u32 ) 
skb_gro_receive extern int skb_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
skb_to_sgvec extern int skb_to_sgvec ( s#sk_buff * , s#scatterlist * , int , int ) 
skb_cow_data extern int skb_cow_data ( s#sk_buff * , int , s#sk_buff * * ) 
sock_queue_err_skb extern int sock_queue_err_skb ( s#sock * , s#sk_buff * ) 
s#skb_shared_hwtstamps struct skb_shared_hwtstamps { t#ktime_t hwtstamp ; t#ktime_t syststamp ; } 
skb_tstamp_tx extern void skb_tstamp_tx ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
skb_partial_csum_set t#bool skb_partial_csum_set ( s#sk_buff * , t#u16 , t#u16 ) 
__skb_warn_lro_forwarding extern void __skb_warn_lro_forwarding ( const s#sk_buff * ) 

/* net/core/sock.o */
sysctl_optmem_max extern int sysctl_optmem_max 
memalloc_socks extern t#atomic_t memalloc_socks 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##tvec_base
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
sk_set_memalloc extern void sk_set_memalloc ( s#sock * ) 
sk_clear_memalloc extern void sk_clear_memalloc ( s#sock * ) 
__sk_backlog_rcv extern int __sk_backlog_rcv ( s#sock * , s#sk_buff * ) 
sock_queue_rcv_skb extern int sock_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
sk_receive_skb extern int sk_receive_skb ( s#sock * , s#sk_buff * , const int ) 
sk_reset_txq extern void sk_reset_txq ( s#sock * ) 
__sk_dst_check extern s#dst_entry * __sk_dst_check ( s#sock * , t#u32 ) 
sk_dst_check extern s#dst_entry * sk_dst_check ( s#sock * , t#u32 ) 
sock_setsockopt extern int sock_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
cred_to_ucred extern void cred_to_ucred ( s#pid * , const s#cred * , s#ucred * , t#bool ) 
sk_prot_clear_portaddr_nulls void sk_prot_clear_portaddr_nulls ( s#sock * , int ) 
sock_update_classid extern void sock_update_classid ( s#sock * ) 
sk_alloc extern s#sock * sk_alloc ( s#net * , int , t#gfp_t , s#proto * ) 
sk_free extern void sk_free ( s#sock * ) 
sk_release_kernel extern void sk_release_kernel ( s#sock * ) 
sk_clone extern s#sock * sk_clone ( const s#sock * , const t#gfp_t ) 
sk_setup_caps extern void sk_setup_caps ( s#sock * , s#dst_entry * ) 
sock_wfree extern void sock_wfree ( s#sk_buff * ) 
sock_rfree extern void sock_rfree ( s#sk_buff * ) 
sock_i_uid extern int sock_i_uid ( s#sock * ) 
sock_i_ino extern unsigned long sock_i_ino ( s#sock * ) 
sock_wmalloc extern s#sk_buff * sock_wmalloc ( s#sock * , unsigned long , int , t#gfp_t ) 
sock_kmalloc extern void * sock_kmalloc ( s#sock * , int , t#gfp_t ) 
sock_kfree_s extern void sock_kfree_s ( s#sock * , void * , int ) 
sock_alloc_send_pskb extern s#sk_buff * sock_alloc_send_pskb ( s#sock * , unsigned long , unsigned long , int , int * ) 
sock_alloc_send_skb extern s#sk_buff * sock_alloc_send_skb ( s#sock * , unsigned long , int , int * ) 
sk_wait_data extern int sk_wait_data ( s#sock * , long * ) 
__sk_mem_schedule extern int __sk_mem_schedule ( s#sock * , int , int ) 
__sk_mem_reclaim extern void __sk_mem_reclaim ( s#sock * ) 
sock_no_bind extern int sock_no_bind ( s#socket * , s#sockaddr * , int ) 
sock_no_connect extern int sock_no_connect ( s#socket * , s#sockaddr * , int , int ) 
sock_no_socketpair extern int sock_no_socketpair ( s#socket * , s#socket * ) 
sock_no_accept extern int sock_no_accept ( s#socket * , s#socket * , int ) 
sock_no_getname extern int sock_no_getname ( s#socket * , s#sockaddr * , int * , int ) 
sock_no_poll extern unsigned int sock_no_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
sock_no_ioctl extern int sock_no_ioctl ( s#socket * , unsigned int , unsigned long ) 
sock_no_listen extern int sock_no_listen ( s#socket * , int ) 
sock_no_shutdown extern int sock_no_shutdown ( s#socket * , int ) 
sock_no_setsockopt extern int sock_no_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sock_no_getsockopt extern int sock_no_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_no_sendmsg extern int sock_no_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
sock_no_recvmsg extern int sock_no_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_no_mmap extern int sock_no_mmap ( s#file * , s#socket * , s#vm_area_struct * ) 
sock_no_sendpage extern t#ssize_t sock_no_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
sk_send_sigurg extern void sk_send_sigurg ( s#sock * ) 
sk_reset_timer extern void sk_reset_timer ( s#sock * , s#timer_list * , unsigned long ) 
sk_stop_timer extern void sk_stop_timer ( s#sock * , s#timer_list * ) 
sock_init_data extern void sock_init_data ( s#socket * , s#sock * ) 
lock_sock_nested extern void lock_sock_nested ( s#sock * , int ) 
release_sock extern void release_sock ( s#sock * ) 
lock_sock_fast extern t#bool lock_sock_fast ( s#sock * ) 
sock_get_timestamp extern int sock_get_timestamp ( s#sock * , s#timeval * ) 
sock_get_timestampns extern int sock_get_timestampns ( s#sock * , s#timespec * ) 
sock_common_getsockopt extern int sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
compat_sock_common_getsockopt extern int compat_sock_common_getsockopt ( s#socket * , int , int , char * , int * ) 
sock_common_recvmsg extern int sock_common_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
sock_common_setsockopt extern int sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
compat_sock_common_setsockopt extern int compat_sock_common_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
sk_common_release extern void sk_common_release ( s#sock * ) 
sock_prot_inuse_add extern void sock_prot_inuse_add ( s#net * , s#proto * , int ) 
sock_prot_inuse_get extern int sock_prot_inuse_get ( s#net * , s#proto * ) 
proto_register extern int proto_register ( s#proto * , int ) 
proto_unregister extern void proto_unregister ( s#proto * ) 

/* net/core/stream.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
sk_stream_write_space extern void sk_stream_write_space ( s#sock * ) 
sk_stream_wait_connect extern int sk_stream_wait_connect ( s#sock * , long * ) 
sk_stream_wait_close extern void sk_stream_wait_close ( s#sock * , long ) 
sk_stream_wait_memory extern int sk_stream_wait_memory ( s#sock * , long * ) 
sk_stream_error extern int sk_stream_error ( s#sock * , int , int ) 
sk_stream_kill_queues extern void sk_stream_kill_queues ( s#sock * ) 

/* net/core/timestamping.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
skb_clone_tx_timestamp extern void skb_clone_tx_timestamp ( s#sk_buff * ) 
skb_complete_tx_timestamp void skb_complete_tx_timestamp ( s#sk_buff * , s#skb_shared_hwtstamps * ) 
skb_defer_rx_timestamp extern t#bool skb_defer_rx_timestamp ( s#sk_buff * ) 

/* net/core/user_dma.o */
sysctl_tcp_dma_copybreak extern int sysctl_tcp_dma_copybreak 

/* net/core/utils.o */
net_msg_warn extern int net_msg_warn 
net_ratelimit extern int net_ratelimit ( void ) 
in_aton extern t#__be32 in_aton ( const char * ) 
in4_pton extern int in4_pton ( const char * , int , t#u8 * , int , const char * * ) 
in6_pton extern int in6_pton ( const char * , int , t#u8 * , int , const char * * ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
inet_proto_csum_replace4 extern void inet_proto_csum_replace4 ( t#__sum16 * , s#sk_buff * , t#__be32 , t#__be32 , int ) 
mac_pton int mac_pton ( const char * , t#u8 * ) 

/* net/dccp/ackvec.o */
dccp_ackvec_parsed_add extern int dccp_ackvec_parsed_add ( s#list_head * , t#u8 * , t#u8 , t#u8 ) 
dccp_ackvec_parsed_cleanup extern void dccp_ackvec_parsed_cleanup ( s#list_head * ) 

/* net/dccp/feat.o */
dccp_feat_list_purge extern void dccp_feat_list_purge ( s#list_head * ) 

/* net/dccp/input.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#dccp_hdr struct dccp_hdr { t#__be16 dccph_sport , dccph_dport ; t#__u8 dccph_doff ; t#__u8 dccph_ccval : 4 , dccph_cscov : 4 ; t#__sum16 dccph_checksum ; t#__u8 dccph_reserved : 3 , dccph_type : 4 , dccph_x : 1 ; t#__u8 dccph_seq2 ; t#__be16 dccph_seq ; } 
dccp_rcv_established extern int dccp_rcv_established ( s#sock * , s#sk_buff * , const s#dccp_hdr * , const unsigned ) 
dccp_rcv_state_process extern int dccp_rcv_state_process ( s#sock * , s#sk_buff * , s#dccp_hdr * , unsigned ) 

/* net/dccp/ipv4.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
dccp_v4_connect extern int dccp_v4_connect ( s#sock * , s#sockaddr * , int ) 
dccp_v4_send_check extern void dccp_v4_send_check ( s#sock * , s#sk_buff * ) 
dccp_v4_request_recv_sock extern s#sock * dccp_v4_request_recv_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) 
dccp_v4_conn_request extern int dccp_v4_conn_request ( s#sock * , s#sk_buff * ) 
dccp_v4_do_rcv extern int dccp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
dccp_invalid_packet extern int dccp_invalid_packet ( s#sk_buff * ) 

/* net/dccp/minisocks.o */
s##tvec_base
s##array_cache
s##kmem_list3
s#inet_timewait_death_row struct inet_timewait_death_row { int twcal_hand ; unsigned long twcal_jiffie ; s#timer_list twcal_timer ; s#hlist_head twcal_row [ ( 1 << 5 ) ] ; t#spinlock_t death_lock ; int tw_count ; int period ; t#u32 thread_slots ; s#work_struct twkill_work ; s#timer_list tw_timer ; int slot ; s#hlist_head cells [ 8 ] ; s#inet_hashinfo * hashinfo ; int sysctl_tw_recycle ; int sysctl_max_tw_buckets ; } 
dccp_death_row extern s#inet_timewait_death_row dccp_death_row 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
dccp_create_openreq_child extern s#sock * dccp_create_openreq_child ( s#sock * , const s#request_sock * , const s#sk_buff * ) 
dccp_check_req extern s#sock * dccp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , s#request_sock * * ) 
dccp_child_process extern int dccp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 
dccp_reqsk_send_ack extern void dccp_reqsk_send_ack ( s#sock * , s#sk_buff * , s#request_sock * ) 
s#in6_pktinfo struct in6_pktinfo { s#in6_addr ipi6_addr ; int ipi6_ifindex ; } 
s#ip6_sf_socklist struct ip6_sf_socklist { unsigned int sl_max ; unsigned int sl_count ; s#in6_addr sl_addr [ 0 ] ; } 
s#ipv6_mc_socklist struct ipv6_mc_socklist { s#in6_addr addr ; int ifindex ; s#ipv6_mc_socklist * next ; t#rwlock_t sflock ; unsigned int sfmode ; s#ip6_sf_socklist * sflist ; s#rcu_head rcu ; } 
s#ipv6_ac_socklist struct ipv6_ac_socklist { s#in6_addr acl_addr ; int acl_ifindex ; s#ipv6_ac_socklist * acl_next ; } 
s#ipv6_opt_hdr struct ipv6_opt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; } 
s#ipv6_rt_hdr struct ipv6_rt_hdr { t#__u8 nexthdr ; t#__u8 hdrlen ; t#__u8 type ; t#__u8 segments_left ; } 
s#ipv6_txoptions struct ipv6_txoptions { int tot_len ; t#__u16 opt_flen ; t#__u16 opt_nflen ; s#ipv6_opt_hdr * hopopt ; s#ipv6_opt_hdr * dst0opt ; s#ipv6_rt_hdr * srcrt ; s#ipv6_opt_hdr * dst1opt ; } 
s#ip6_flowlabel struct ip6_flowlabel { s#ip6_flowlabel * next ; t#__be32 label ; t#atomic_t users ; s#in6_addr dst ; s#ipv6_txoptions * opt ; unsigned long linger ; t#u8 share ; t#u32 owner ; unsigned long lastuse ; unsigned long expires ; s#net * fl_net ; } 
s#ipv6_fl_socklist struct ipv6_fl_socklist { s#ipv6_fl_socklist * next ; s#ip6_flowlabel * fl ; } 
s#ipv6_pinfo struct ipv6_pinfo { s#in6_addr saddr ; s#in6_addr rcv_saddr ; s#in6_addr daddr ; s#in6_pktinfo sticky_pktinfo ; s#in6_addr * daddr_cache ; s#in6_addr * saddr_cache ; t#__be32 flow_label ; t#__u32 frag_size ; t#__s16 hop_limit : 9 ; t#__u16 __unused_1 : 7 ; t#__s16 mcast_hops : 9 ; t#__u16 __unused_2 : 6 , mc_loop : 1 ; int mcast_oif ; union { struct { t#__u16 srcrt : 1 , osrcrt : 1 , rxinfo : 1 , rxoinfo : 1 , rxhlim : 1 , rxohlim : 1 , hopopts : 1 , ohopopts : 1 , dstopts : 1 , odstopts : 1 , rxflow : 1 , rxtclass : 1 , rxpmtu : 1 , rxorigdstaddr : 1 ; } bits ; t#__u16 all ; } rxopt ; t#__u16 recverr : 1 , sndflow : 1 , pmtudisc : 2 , ipv6only : 1 , srcprefs : 3 , dontfrag : 1 ; t#__u8 min_hopcount ; t#__u8 tclass ; t#__u8 padding ; t#__u32 dst_cookie ; s#ipv6_mc_socklist * ipv6_mc_list ; s#ipv6_ac_socklist * ipv6_ac_list ; s#ipv6_fl_socklist * ipv6_fl_list ; s#ipv6_txoptions * opt ; s#sk_buff * pktoptions ; s#sk_buff * rxpmtu ; struct { s#ipv6_txoptions * opt ; t#u8 hop_limit ; t#u8 tclass ; } cork ; } 
s#ip_options struct ip_options { t#__be32 faddr ; t#__be32 nexthop ; unsigned char optlen ; unsigned char srr ; unsigned char rr ; unsigned char ts ; unsigned char is_strictroute : 1 , srr_is_hit : 1 , is_changed : 1 , rr_needaddr : 1 , ts_needtime : 1 , ts_needaddr : 1 ; unsigned char router_alert ; unsigned char cipso ; unsigned char __pad2 ; unsigned char __data [ 0 ] ; } 
s#ip_options_rcu struct ip_options_rcu { s#rcu_head rcu ; s#ip_options opt ; } 
s##ip_mc_socklist
s#inet_cork struct inet_cork { unsigned int flags ; t#__be32 addr ; s#ip_options * opt ; unsigned int fragsize ; s#dst_entry * dst ; int length ; s#page * page ; t#u32 off ; t#u8 tx_flags ; } 
s#inet_cork_full struct inet_cork_full { s#inet_cork base ; s#flowi fl ; } 
s#inet_sock struct inet_sock { s#sock sk ; s#ipv6_pinfo * pinet6 ; t#__be16 inet_dport ; t#__u16 inet_num ; t#__be32 inet_saddr ; t#__s16 uc_ttl ; t#__u16 cmsg_flags ; t#__be16 inet_sport ; t#__u16 inet_id ; s#ip_options_rcu * inet_opt ; t#__u8 tos ; t#__u8 min_ttl ; t#__u8 mc_ttl ; t#__u8 pmtudisc ; t#__u8 recverr : 1 , is_icsk : 1 , freebind : 1 , hdrincl : 1 , mc_loop : 1 , transparent : 1 , mc_all : 1 , nodefrag : 1 ; int mc_index ; t#__be32 mc_addr ; s#ip_mc_socklist * mc_list ; s#inet_cork_full cork ; } 
s#listen_sock struct listen_sock { t#u8 max_qlen_log ; int qlen ; int qlen_young ; int clock_hand ; t#u32 hash_rnd ; t#u32 nr_table_entries ; s#request_sock * syn_table [ 0 ] ; } 
s#request_sock_queue struct request_sock_queue { s#request_sock * rskq_accept_head ; s#request_sock * rskq_accept_tail ; t#rwlock_t syn_wait_lock ; t#u8 rskq_defer_accept ; s#listen_sock * listen_opt ; } 
s#inet_bind_bucket struct inet_bind_bucket { s#net * ib_net ; unsigned short port ; signed short fastreuse ; int num_owners ; s#hlist_node node ; s#hlist_head owners ; } 
e#tcp_ca_event enum tcp_ca_event { CA_EVENT_TX_START , CA_EVENT_CWND_RESTART , CA_EVENT_COMPLETE_CWR , CA_EVENT_FRTO , CA_EVENT_LOSS , CA_EVENT_FAST_ACK , CA_EVENT_SLOW_ACK , } 
s#tcp_congestion_ops struct tcp_congestion_ops { s#list_head list ; unsigned long flags ; void ( * init ) ( s#sock * ) ; void ( * release ) ( s#sock * ) ; t#u32 ( * ssthresh ) ( s#sock * ) ; t#u32 ( * min_cwnd ) ( const s#sock * ) ; void ( * cong_avoid ) ( s#sock * , t#u32 , t#u32 ) ; void ( * set_state ) ( s#sock * , t#u8 ) ; void ( * cwnd_event ) ( s#sock * , e#tcp_ca_event ) ; t#u32 ( * undo_cwnd ) ( s#sock * ) ; void ( * pkts_acked ) ( s#sock * , t#u32 , t#s32 ) ; void ( * get_info ) ( s#sock * , t#u32 , s#sk_buff * ) ; char name [ 16 ] ; s#module * owner ; } 
s#inetpeer_addr_base struct inetpeer_addr_base { union { t#__be32 a4 ; t#__be32 a6 [ 4 ] ; } ; } 
s#inetpeer_addr struct inetpeer_addr { s#inetpeer_addr_base addr ; t#__u16 family ; } 
E#__RTAX_MAX 15 
s#inet_peer struct inet_peer { s#inet_peer * avl_left , * avl_right ; s#inetpeer_addr daddr ; t#__u32 avl_height ; union { s#list_head unused ; struct { s#inet_peer_base * base ; void * base_padding ; } ; } ; t#__u32 dtime ; t#atomic_t refcnt ; union { struct { t#atomic_t rid ; t#atomic_t ip_id_count ; t#__u32 tcp_ts ; t#__u32 tcp_ts_stamp ; t#u32 metrics [ ( E#__RTAX_MAX - 1 ) ] ; t#u32 rate_tokens ; int redirect_genid ; unsigned long rate_last ; unsigned long pmtu_expires ; t#u32 pmtu_orig ; t#u32 pmtu_learned ; s#inetpeer_addr_base redirect_learned ; } ; s#rcu_head rcu ; } ; } 
s#inet_connection_sock_af_ops struct inet_connection_sock_af_ops { int ( * queue_xmit ) ( s#sk_buff * , s#flowi * ) ; void ( * send_check ) ( s#sock * , s#sk_buff * ) ; int ( * rebuild_header ) ( s#sock * ) ; int ( * conn_request ) ( s#sock * , s#sk_buff * ) ; s#sock * ( * syn_recv_sock ) ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) ; s#inet_peer * ( * get_peer ) ( s#sock * , t#bool * ) ; t#u16 net_header_len ; t#u16 sockaddr_len ; int ( * setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * getsockopt ) ( s#sock * , int , int , char * , int * ) ; int ( * compat_setsockopt ) ( s#sock * , int , int , char * , unsigned int ) ; int ( * compat_getsockopt ) ( s#sock * , int , int , char * , int * ) ; void ( * addr2sockaddr ) ( s#sock * , s#sockaddr * ) ; int ( * bind_conflict ) ( const s#sock * , const s#inet_bind_bucket * , t#bool ) ; } 
s#inet_connection_sock struct inet_connection_sock { s#inet_sock icsk_inet ; s#request_sock_queue icsk_accept_queue ; s#inet_bind_bucket * icsk_bind_hash ; unsigned long icsk_timeout ; s#timer_list icsk_retransmit_timer ; s#timer_list icsk_delack_timer ; t#__u32 icsk_rto ; t#__u32 icsk_pmtu_cookie ; const s#tcp_congestion_ops * icsk_ca_ops ; const s#inet_connection_sock_af_ops * icsk_af_ops ; unsigned int ( * icsk_sync_mss ) ( s#sock * , t#u32 ) ; t#__u8 icsk_ca_state ; t#__u8 icsk_retransmits ; t#__u8 icsk_pending ; t#__u8 icsk_backoff ; t#__u8 icsk_syn_retries ; t#__u8 icsk_probes_out ; t#__u16 icsk_ext_hdr_len ; struct { t#__u8 pending ; t#__u8 quick ; t#__u8 pingpong ; t#__u8 blocked ; t#__u32 ato ; unsigned long timeout ; t#__u32 lrcvtime ; t#__u16 last_seg_size ; t#__u16 rcv_mss ; } icsk_ack ; struct { int enabled ; int search_high ; int search_low ; int probe_size ; } icsk_mtup ; t#u32 icsk_ca_priv [ 16 ] ; t#u32 icsk_user_timeout ; } 
s#dccp_service_list struct dccp_service_list { t#__u32 dccpsl_nr ; t#__be32 dccpsl_list [ 0 ] ; } 
s#dccp_ackvec struct dccp_ackvec { t#u8 av_buf [ ( 253 * 2 ) ] ; t#u16 av_buf_head ; t#u16 av_buf_tail ; t#u64 av_buf_ackno : 48 ; t#u64 av_tail_ackno : 48 ; t#bool av_buf_nonce [ 2 ] ; t#u8 av_overflow : 1 ; s#list_head av_records ; } 
s#tcp_info struct tcp_info { t#__u8 tcpi_state ; t#__u8 tcpi_ca_state ; t#__u8 tcpi_retransmits ; t#__u8 tcpi_probes ; t#__u8 tcpi_backoff ; t#__u8 tcpi_options ; t#__u8 tcpi_snd_wscale : 4 , tcpi_rcv_wscale : 4 ; t#__u32 tcpi_rto ; t#__u32 tcpi_ato ; t#__u32 tcpi_snd_mss ; t#__u32 tcpi_rcv_mss ; t#__u32 tcpi_unacked ; t#__u32 tcpi_sacked ; t#__u32 tcpi_lost ; t#__u32 tcpi_retrans ; t#__u32 tcpi_fackets ; t#__u32 tcpi_last_data_sent ; t#__u32 tcpi_last_ack_sent ; t#__u32 tcpi_last_data_recv ; t#__u32 tcpi_last_ack_recv ; t#__u32 tcpi_pmtu ; t#__u32 tcpi_rcv_ssthresh ; t#__u32 tcpi_rtt ; t#__u32 tcpi_rttvar ; t#__u32 tcpi_snd_ssthresh ; t#__u32 tcpi_snd_cwnd ; t#__u32 tcpi_advmss ; t#__u32 tcpi_reordering ; t#__u32 tcpi_rcv_rtt ; t#__u32 tcpi_rcv_space ; t#__u32 tcpi_total_retrans ; } 
s#ccid_operations struct ccid_operations { unsigned char ccid_id ; t#__u32 ccid_ccmps ; const char * ccid_name ; s#kmem_cache * ccid_hc_rx_slab , * ccid_hc_tx_slab ; char ccid_hc_rx_slab_name [ 32 ] ; char ccid_hc_tx_slab_name [ 32 ] ; t#__u32 ccid_hc_rx_obj_size , ccid_hc_tx_obj_size ; int ( * ccid_hc_rx_init ) ( s#ccid * , s#sock * ) ; int ( * ccid_hc_tx_init ) ( s#ccid * , s#sock * ) ; void ( * ccid_hc_rx_exit ) ( s#sock * ) ; void ( * ccid_hc_tx_exit ) ( s#sock * ) ; void ( * ccid_hc_rx_packet_recv ) ( s#sock * , s#sk_buff * ) ; int ( * ccid_hc_rx_parse_options ) ( s#sock * , t#u8 , t#u8 , t#u8 * , t#u8 ) ; int ( * ccid_hc_rx_insert_options ) ( s#sock * , s#sk_buff * ) ; void ( * ccid_hc_tx_packet_recv ) ( s#sock * , s#sk_buff * ) ; int ( * ccid_hc_tx_parse_options ) ( s#sock * , t#u8 , t#u8 , t#u8 * , t#u8 ) ; int ( * ccid_hc_tx_send_packet ) ( s#sock * , s#sk_buff * ) ; void ( * ccid_hc_tx_packet_sent ) ( s#sock * , unsigned int ) ; void ( * ccid_hc_rx_get_info ) ( s#sock * , s#tcp_info * ) ; void ( * ccid_hc_tx_get_info ) ( s#sock * , s#tcp_info * ) ; int ( * ccid_hc_rx_getsockopt ) ( s#sock * , const int , int , t#u32 * , int * ) ; int ( * ccid_hc_tx_getsockopt ) ( s#sock * , const int , int , t#u32 * , int * ) ; } 
s#ccid struct ccid { s#ccid_operations * ccid_ops ; char ccid_priv [ 0 ] ; } 
s#dccp_options_received struct dccp_options_received { t#u64 dccpor_ndp : 48 ; t#u32 dccpor_timestamp ; t#u32 dccpor_timestamp_echo ; t#u32 dccpor_elapsed_time ; } 
e#dccp_role enum dccp_role { DCCP_ROLE_UNDEFINED , DCCP_ROLE_LISTEN , DCCP_ROLE_CLIENT , DCCP_ROLE_SERVER , } 
s#dccp_sock struct dccp_sock { s#inet_connection_sock dccps_inet_connection ; t#__u64 dccps_swl ; t#__u64 dccps_swh ; t#__u64 dccps_awl ; t#__u64 dccps_awh ; t#__u64 dccps_iss ; t#__u64 dccps_isr ; t#__u64 dccps_osr ; t#__u64 dccps_gss ; t#__u64 dccps_gsr ; t#__u64 dccps_gar ; t#__be32 dccps_service ; t#__u32 dccps_mss_cache ; s#dccp_service_list * dccps_service_list ; t#__u32 dccps_timestamp_echo ; t#__u32 dccps_timestamp_time ; t#__u16 dccps_l_ack_ratio ; t#__u16 dccps_r_ack_ratio ; t#__u64 dccps_l_seq_win : 48 ; t#__u64 dccps_r_seq_win : 48 ; t#__u8 dccps_pcslen : 4 ; t#__u8 dccps_pcrlen : 4 ; t#__u8 dccps_send_ndp_count : 1 ; t#__u64 dccps_ndp_count : 48 ; unsigned long dccps_rate_last ; s#list_head dccps_featneg ; s#dccp_ackvec * dccps_hc_rx_ackvec ; s#ccid * dccps_hc_rx_ccid ; s#ccid * dccps_hc_tx_ccid ; s#dccp_options_received dccps_options_received ; t#__u8 dccps_qpolicy ; t#__u32 dccps_tx_qlen ; e#dccp_role dccps_role : 2 ; t#__u8 dccps_hc_rx_insert_options : 1 ; t#__u8 dccps_hc_tx_insert_options : 1 ; t#__u8 dccps_server_timewait : 1 ; t#__u8 dccps_sync_scheduled : 1 ; s#tasklet_struct dccps_xmitlet ; s#timer_list dccps_xmit_timer ; } 
dccp_reqsk_init extern int dccp_reqsk_init ( s#request_sock * , s#dccp_sock const * , s#sk_buff const * ) 

/* net/dccp/options.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#inet_request_sock struct inet_request_sock { s#request_sock req ; t#u16 inet6_rsk_offset ; t#__be16 loc_port ; t#__be32 loc_addr ; t#__be32 rmt_addr ; t#__be16 rmt_port ; ; t#u16 snd_wscale : 4 , rcv_wscale : 4 , tstamp_ok : 1 , sack_ok : 1 , wscale_ok : 1 , ecn_ok : 1 , acked : 1 , no_srccheck : 1 ; ; s#ip_options_rcu * opt ; } 
s#dccp_request_sock struct dccp_request_sock { s#inet_request_sock dreq_inet_rsk ; t#__u64 dreq_iss ; t#__u64 dreq_isr ; t#__be32 dreq_service ; s#list_head dreq_featneg ; t#__u32 dreq_timestamp_echo ; t#__u32 dreq_timestamp_time ; } 
dccp_parse_options extern int dccp_parse_options ( s#sock * , s#dccp_request_sock * , s#sk_buff * ) 
dccp_insert_option extern int dccp_insert_option ( s#sk_buff * , unsigned char , const void * , unsigned char ) 
dccp_insert_option_elapsed_time extern int dccp_insert_option_elapsed_time ( s#sk_buff * , t#u32 ) 

/* net/dccp/output.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
dccp_sync_mss extern unsigned int dccp_sync_mss ( s#sock * , t#u32 ) 
dccp_make_response extern s#sk_buff * dccp_make_response ( s#sock * , s#dst_entry * , s#request_sock * ) 
dccp_ctl_make_reset extern s#sk_buff * dccp_ctl_make_reset ( s#sock * , s#sk_buff * ) 
dccp_connect extern int dccp_connect ( s#sock * ) 
dccp_send_ack extern void dccp_send_ack ( s#sock * ) 
e#dccp_pkt_type enum dccp_pkt_type { DCCP_PKT_REQUEST = 0 , DCCP_PKT_RESPONSE , DCCP_PKT_DATA , DCCP_PKT_ACK , DCCP_PKT_DATAACK , DCCP_PKT_CLOSEREQ , DCCP_PKT_CLOSE , DCCP_PKT_RESET , DCCP_PKT_SYNC , DCCP_PKT_SYNCACK , DCCP_PKT_INVALID , } 
dccp_send_sync extern void dccp_send_sync ( s#sock * , const t#u64 , const e#dccp_pkt_type ) 

/* net/dccp/proto.o */
E#__DCCP_MIB_MAX ( 0 ) + 15 
s#dccp_mib struct dccp_mib { unsigned long mibs [ E#__DCCP_MIB_MAX ] ; } 
dccp_statistics extern __typeof__ ( s#dccp_mib ) * dccp_statistics [ 2 ] 
dccp_orphan_count extern s#percpu_counter dccp_orphan_count 
s##array_cache
s##kmem_list3
dccp_hashinfo extern s#inet_hashinfo dccp_hashinfo 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
dccp_set_state extern void dccp_set_state ( s#sock * , const int ) 
dccp_done extern void dccp_done ( s#sock * ) 
dccp_packet_name extern const char * dccp_packet_name ( const int ) 
dccp_init_sock extern int dccp_init_sock ( s#sock * , const t#__u8 ) 
dccp_destroy_sock extern void dccp_destroy_sock ( s#sock * ) 
dccp_disconnect extern int dccp_disconnect ( s#sock * , int ) 
dccp_poll extern unsigned int dccp_poll ( s#file * , s#socket * , t#poll_table * ) 
dccp_ioctl extern int dccp_ioctl ( s#sock * , int , unsigned long ) 
dccp_setsockopt extern int dccp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_dccp_setsockopt extern int compat_dccp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
dccp_getsockopt extern int dccp_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_dccp_getsockopt extern int compat_dccp_getsockopt ( s#sock * , int , int , char * , int * ) 
dccp_sendmsg extern int dccp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
dccp_recvmsg extern int dccp_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
inet_dccp_listen extern int inet_dccp_listen ( s#socket * , int ) 
dccp_close extern void dccp_close ( s#sock * , long ) 
dccp_shutdown extern void dccp_shutdown ( s#sock * , int ) 

/* net/dccp/timer.o */
dccp_timestamp extern t#u32 dccp_timestamp ( void ) 

/* net/dns_resolver/dns_query.o */
dns_query extern int dns_query ( const char * , const char * , t#size_t , const char * , char * * , t#time_t * ) 

/* net/ethernet/eth.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
eth_header extern int eth_header ( s#sk_buff * , s#net_device * , unsigned short , const void * , const void * , unsigned ) 
eth_rebuild_header extern int eth_rebuild_header ( s#sk_buff * ) 
eth_type_trans extern t#__be16 eth_type_trans ( s#sk_buff * , s#net_device * ) 
eth_header_parse int eth_header_parse ( const s#sk_buff * , unsigned char * ) 
eth_header_cache extern int eth_header_cache ( const s#neighbour * , s#hh_cache * ) 
eth_header_cache_update extern void eth_header_cache_update ( s#hh_cache * , const s#net_device * , const unsigned char * ) 
eth_mac_addr extern int eth_mac_addr ( s#net_device * , void * ) 
eth_change_mtu extern int eth_change_mtu ( s#net_device * , int ) 
eth_validate_addr extern int eth_validate_addr ( s#net_device * ) 
ether_setup extern void ether_setup ( s#net_device * ) 
alloc_etherdev_mqs extern s#net_device * alloc_etherdev_mqs ( int , unsigned int , unsigned int ) 
sysfs_format_mac extern t#ssize_t sysfs_format_mac ( char * , const unsigned char * , int ) 

/* net/ethernet/pe2.o */
s##llc_sap
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
make_EII_client s#datalink_proto * make_EII_client ( void ) 
destroy_EII_client void destroy_EII_client ( s#datalink_proto * ) 

/* net/ieee802154/nl-mac.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s#ieee802154_addr struct ieee802154_addr { int addr_type ; t#u16 pan_id ; union { t#u8 hwaddr [ 8 ] ; t#u16 short_addr ; } ; } 
ieee802154_nl_assoc_indic int ieee802154_nl_assoc_indic ( s#net_device * , s#ieee802154_addr * , t#u8 ) 
ieee802154_nl_assoc_confirm int ieee802154_nl_assoc_confirm ( s#net_device * , t#u16 , t#u8 ) 
ieee802154_nl_disassoc_indic int ieee802154_nl_disassoc_indic ( s#net_device * , s#ieee802154_addr * , t#u8 ) 
ieee802154_nl_disassoc_confirm int ieee802154_nl_disassoc_confirm ( s#net_device * , t#u8 ) 
ieee802154_nl_beacon_indic int ieee802154_nl_beacon_indic ( s#net_device * , t#u16 , t#u16 ) 
ieee802154_nl_scan_confirm int ieee802154_nl_scan_confirm ( s#net_device * , t#u8 , t#u8 , t#u32 , t#u8 , t#u8 * ) 
ieee802154_nl_start_confirm int ieee802154_nl_start_confirm ( s#net_device * , t#u8 ) 

/* net/ieee802154/wpan-class.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s#wpan_phy struct wpan_phy { s#mutex pib_lock ; t#u8 current_channel ; t#u8 current_page ; t#u32 channels_supported [ 32 ] ; t#u8 transmit_power ; t#u8 cca_mode ; s#device dev ; int idx ; s#net_device * ( * add_iface ) ( s#wpan_phy * , const char * ) ; void ( * del_iface ) ( s#wpan_phy * , s#net_device * ) ; char priv [ 0 ] __attribute__ ( ( __aligned__ ( 32 ) ) ) ; } 
wpan_phy_find s#wpan_phy * wpan_phy_find ( const char * ) 
wpan_phy_for_each int wpan_phy_for_each ( int ( * ) ( s#wpan_phy * , void * ) , void * ) 
wpan_phy_alloc s#wpan_phy * wpan_phy_alloc ( t#size_t ) 
wpan_phy_register int wpan_phy_register ( s#wpan_phy * ) 
wpan_phy_unregister void wpan_phy_unregister ( s#wpan_phy * ) 
wpan_phy_free void wpan_phy_free ( s#wpan_phy * ) 

/* net/ipv4/af_inet.o */
s#ipv4_config struct ipv4_config { int log_martians ; int no_pmtu_disc ; } 
ipv4_config extern s#ipv4_config ipv4_config 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##inet_peer_base
s##xt_table
s#fib_nh struct fib_nh { s#net_device * nh_dev ; s#hlist_node nh_hash ; s#fib_info * nh_parent ; unsigned nh_flags ; unsigned char nh_scope ; int nh_weight ; int nh_power ; t#__u32 nh_tclassid ; int nh_oif ; t#__be32 nh_gw ; t#__be32 nh_saddr ; int nh_saddr_genid ; } 
s#fib_info struct fib_info { s#hlist_node fib_hash ; s#hlist_node fib_lhash ; s#net * fib_net ; int fib_treeref ; t#atomic_t fib_clntref ; unsigned fib_flags ; unsigned char fib_dead ; unsigned char fib_protocol ; unsigned char fib_scope ; t#__be32 fib_prefsrc ; t#u32 fib_priority ; t#u32 * fib_metrics ; int fib_nhs ; int fib_power ; s#rcu_head rcu ; s#fib_nh fib_nh [ 0 ] ; } 
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s#ip_sf_list struct ip_sf_list { s#ip_sf_list * sf_next ; t#__be32 sf_inaddr ; unsigned long sf_count [ 2 ] ; unsigned char sf_gsresp ; unsigned char sf_oldin ; unsigned char sf_crcount ; } 
s#ip_mc_list struct ip_mc_list { s#in_device * interface ; t#__be32 multiaddr ; unsigned int sfmode ; s#ip_sf_list * sources ; s#ip_sf_list * tomb ; unsigned long sfcount [ 2 ] ; union { s#ip_mc_list * next ; s#ip_mc_list * next_rcu ; } ; s#timer_list timer ; int users ; t#atomic_t refcnt ; t#spinlock_t lock ; char tm_running ; char reporter ; char unsolicit_count ; char loaded ; unsigned char gsquery ; unsigned char crcount ; s#rcu_head rcu ; } 
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s#raw_hashinfo struct raw_hashinfo { t#rwlock_t lock ; s#hlist_head ht [ 256 ] ; } 
inet_sock_destruct extern void inet_sock_destruct ( s#sock * ) 
inet_listen extern int inet_listen ( s#socket * , int ) 
inet_ehash_secret extern t#u32 inet_ehash_secret 
ipv6_hash_secret extern t#u32 ipv6_hash_secret 
build_ehash_secret extern void build_ehash_secret ( void ) 
inet_release extern int inet_release ( s#socket * ) 
sysctl_ip_nonlocal_bind extern int sysctl_ip_nonlocal_bind 
inet_bind extern int inet_bind ( s#socket * , s#sockaddr * , int ) 
inet_dgram_connect extern int inet_dgram_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_stream_connect extern int inet_stream_connect ( s#socket * , s#sockaddr * , int , int ) 
inet_accept extern int inet_accept ( s#socket * , s#socket * , int ) 
inet_getname extern int inet_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet_sendmsg extern int inet_sendmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t ) 
inet_sendpage extern t#ssize_t inet_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
inet_recvmsg extern int inet_recvmsg ( s#kiocb * , s#socket * , s#msghdr * , t#size_t , int ) 
inet_shutdown extern int inet_shutdown ( s#socket * , int ) 
inet_ioctl extern int inet_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet_stream_ops extern const s#proto_ops inet_stream_ops 
inet_dgram_ops extern const s#proto_ops inet_dgram_ops 
s#inet_protosw struct inet_protosw { s#list_head list ; unsigned short type ; unsigned short protocol ; s#proto * prot ; const s#proto_ops * ops ; char no_check ; unsigned char flags ; } 
inet_register_protosw extern void inet_register_protosw ( s#inet_protosw * ) 
inet_unregister_protosw extern void inet_unregister_protosw ( s#inet_protosw * ) 
inet_sk_rebuild_header extern int inet_sk_rebuild_header ( s#sock * ) 
inet_ctl_sock_create extern int inet_ctl_sock_create ( s#sock * * , unsigned short , unsigned short , unsigned char , s#net * ) 
snmp_fold_field extern unsigned long snmp_fold_field ( void * [ ] , int ) 
snmp_mib_init extern int snmp_mib_init ( void * [ 2 ] , t#size_t , t#size_t ) 
snmp_mib_free extern void snmp_mib_free ( void * [ 2 ] ) 

/* net/ipv4/arp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
arp_tbl extern s#neigh_table arp_tbl 
arp_find extern int arp_find ( unsigned char * , s#sk_buff * ) 
arp_create extern s#sk_buff * arp_create ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_xmit extern void arp_xmit ( s#sk_buff * ) 
arp_send extern void arp_send ( int , int , t#__be32 , s#net_device * , t#__be32 , const unsigned char * , const unsigned char * , const unsigned char * ) 
arp_invalidate int arp_invalidate ( s#net_device * , t#__be32 ) 

/* net/ipv4/datagram.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
ip4_datagram_connect extern int ip4_datagram_connect ( s#sock * , s#sockaddr * , int ) 

/* net/ipv4/devinet.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
__ip_dev_find extern s#net_device * __ip_dev_find ( s#net * , t#__be32 , t#bool ) 
in_dev_finish_destroy extern void in_dev_finish_destroy ( s#in_device * ) 
inetdev_by_index extern s#in_device * inetdev_by_index ( s#net * , int ) 
inet_select_addr extern t#__be32 inet_select_addr ( const s#net_device * , t#__be32 , int ) 
inet_confirm_addr extern t#__be32 inet_confirm_addr ( s#in_device * , t#__be32 , t#__be32 , int ) 
register_inetaddr_notifier extern int register_inetaddr_notifier ( s#notifier_block * ) 
unregister_inetaddr_notifier extern int unregister_inetaddr_notifier ( s#notifier_block * ) 

/* net/ipv4/fib_frontend.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
inet_addr_type extern unsigned inet_addr_type ( s#net * , t#__be32 ) 
inet_dev_addr_type extern unsigned inet_dev_addr_type ( s#net * , const s#net_device * , t#__be32 ) 

/* net/ipv4/gre.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#gre_protocol struct gre_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; } 
gre_add_protocol int gre_add_protocol ( const s#gre_protocol * , t#u8 ) 
gre_del_protocol int gre_del_protocol ( const s#gre_protocol * , t#u8 ) 

/* net/ipv4/icmp.o */
s#icmp_err struct icmp_err { int errno ; unsigned fatal : 1 ; } 
icmp_err_convert extern const s#icmp_err icmp_err_convert [ ] 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
icmp_send extern void icmp_send ( s#sk_buff * , int , int , t#__be32 ) 

/* net/ipv4/igmp.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
ip_mc_inc_group extern void ip_mc_inc_group ( s#in_device * , t#__be32 ) 
ip_mc_rejoin_groups extern void ip_mc_rejoin_groups ( s#in_device * ) 
ip_mc_dec_group extern void ip_mc_dec_group ( s#in_device * , t#__be32 ) 
s#ip_mreqn struct ip_mreqn { s#in_addr imr_multiaddr ; s#in_addr imr_address ; int imr_ifindex ; } 
ip_mc_join_group extern int ip_mc_join_group ( s#sock * , s#ip_mreqn * ) 

/* net/ipv4/inet_connection_sock.o */
inet_csk_timer_bug_msg extern const char inet_csk_timer_bug_msg [ ] 
sysctl_local_reserved_ports extern unsigned long * sysctl_local_reserved_ports 
inet_get_local_port_range extern void inet_get_local_port_range ( int * , int * ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
inet_csk_bind_conflict extern int inet_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * , t#bool ) 
inet_csk_get_port extern int inet_csk_get_port ( s#sock * , unsigned short ) 
inet_csk_accept extern s#sock * inet_csk_accept ( s#sock * , int , int * ) 
inet_csk_init_xmit_timers extern void inet_csk_init_xmit_timers ( s#sock * , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) , void ( * ) ( unsigned long ) ) 
inet_csk_clear_xmit_timers extern void inet_csk_clear_xmit_timers ( s#sock * ) 
inet_csk_delete_keepalive_timer extern void inet_csk_delete_keepalive_timer ( s#sock * ) 
inet_csk_reset_keepalive_timer extern void inet_csk_reset_keepalive_timer ( s#sock * , unsigned long ) 
inet_csk_route_req extern s#dst_entry * inet_csk_route_req ( s#sock * , s#flowi4 * , const s#request_sock * ) 
inet_csk_route_child_sock extern s#dst_entry * inet_csk_route_child_sock ( s#sock * , s#sock * , const s#request_sock * ) 
inet_csk_search_req extern s#request_sock * inet_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const t#__be32 , const t#__be32 ) 
inet_csk_reqsk_queue_hash_add extern void inet_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , unsigned long ) 
inet_csk_reqsk_queue_prune extern void inet_csk_reqsk_queue_prune ( s#sock * , const unsigned long , const unsigned long , const unsigned long ) 
inet_csk_clone extern s#sock * inet_csk_clone ( s#sock * , const s#request_sock * , const t#gfp_t ) 
inet_csk_destroy_sock extern void inet_csk_destroy_sock ( s#sock * ) 
inet_csk_listen_start extern int inet_csk_listen_start ( s#sock * , const int ) 
inet_csk_listen_stop extern void inet_csk_listen_stop ( s#sock * ) 
inet_csk_addr2sockaddr extern void inet_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet_csk_compat_getsockopt extern int inet_csk_compat_getsockopt ( s#sock * , int , int , char * , int * ) 
inet_csk_compat_setsockopt extern int inet_csk_compat_setsockopt ( s#sock * , int , int , char * , unsigned int ) 

/* net/ipv4/inet_diag.o */
s##array_cache
s##kmem_list3
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#inet_diag_sockid struct inet_diag_sockid { t#__be16 idiag_sport ; t#__be16 idiag_dport ; t#__be32 idiag_src [ 4 ] ; t#__be32 idiag_dst [ 4 ] ; t#__u32 idiag_if ; t#__u32 idiag_cookie [ 2 ] ; } 
s#inet_diag_msg struct inet_diag_msg { t#__u8 idiag_family ; t#__u8 idiag_state ; t#__u8 idiag_timer ; t#__u8 idiag_retrans ; s#inet_diag_sockid id ; t#__u32 idiag_expires ; t#__u32 idiag_rqueue ; t#__u32 idiag_wqueue ; t#__u32 idiag_uid ; t#__u32 idiag_inode ; } 
s#inet_diag_handler struct inet_diag_handler { s#inet_hashinfo * idiag_hashinfo ; void ( * idiag_get_info ) ( s#sock * , s#inet_diag_msg * , void * ) ; t#__u16 idiag_info_size ; t#__u16 idiag_type ; } 
inet_diag_register extern int inet_diag_register ( const s#inet_diag_handler * ) 
inet_diag_unregister extern void inet_diag_unregister ( const s#inet_diag_handler * ) 

/* net/ipv4/inet_fragment.o */
s##tvec_base
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#inet_frag_queue struct inet_frag_queue { s#hlist_node list ; s#netns_frags * net ; s#list_head lru_list ; t#spinlock_t lock ; t#atomic_t refcnt ; s#timer_list timer ; s#sk_buff * fragments ; s#sk_buff * fragments_tail ; t#ktime_t stamp ; int len ; int meat ; t#__u8 last_in ; t#u16 max_size ; } 
s#inet_frags struct inet_frags { s#hlist_head hash [ 64 ] ; t#rwlock_t lock ; t#u32 rnd ; int qsize ; int secret_interval ; s#timer_list secret_timer ; unsigned int ( * hashfn ) ( s#inet_frag_queue * ) ; void ( * constructor ) ( s#inet_frag_queue * , void * ) ; void ( * destructor ) ( s#inet_frag_queue * ) ; void ( * skb_free ) ( s#sk_buff * ) ; int ( * match ) ( s#inet_frag_queue * , void * ) ; void ( * frag_expire ) ( unsigned long ) ; } 
inet_frags_init void inet_frags_init ( s#inet_frags * ) 
inet_frags_init_net void inet_frags_init_net ( s#netns_frags * ) 
inet_frags_fini void inet_frags_fini ( s#inet_frags * ) 
inet_frags_exit_net void inet_frags_exit_net ( s#netns_frags * , s#inet_frags * ) 
inet_frag_kill void inet_frag_kill ( s#inet_frag_queue * , s#inet_frags * ) 
inet_frag_destroy void inet_frag_destroy ( s#inet_frag_queue * , s#inet_frags * , int * ) 
inet_frag_evictor int inet_frag_evictor ( s#netns_frags * , s#inet_frags * ) 
inet_frag_find s#inet_frag_queue * inet_frag_find ( s#netns_frags * , s#inet_frags * , void * , unsigned int ) 
inet_frag_maybe_warn_overflow void inet_frag_maybe_warn_overflow ( s#inet_frag_queue * , const char * ) 

/* net/ipv4/inet_hashtables.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet_put_port extern void inet_put_port ( s#sock * ) 
__inet_inherit_port extern int __inet_inherit_port ( s#sock * , s#sock * ) 
__inet_lookup_listener extern s#sock * __inet_lookup_listener ( s#net * , s#inet_hashinfo * , const t#__be32 , const unsigned short , const int ) 
__inet_lookup_established extern s#sock * __inet_lookup_established ( s#net * , s#inet_hashinfo * , const t#__be32 , const t#__be16 , const t#__be32 , const t#u16 , const int ) 
s#inet_timewait_sock struct inet_timewait_sock { s#sock_common __tw_common ; int tw_timeout ; volatile unsigned char tw_substate ; unsigned char tw_rcv_wscale ; t#__be16 tw_sport ; t#__be16 tw_dport ; t#__u16 tw_num ; ; unsigned int tw_ipv6only : 1 , tw_transparent : 1 , tw_pad : 14 , tw_ipv6_offset : 16 ; ; unsigned long tw_ttd ; s#inet_bind_bucket * tw_tb ; s#hlist_node tw_death_node ; } 
__inet_hash_nolisten extern int __inet_hash_nolisten ( s#sock * , s#inet_timewait_sock * ) 
inet_hash extern void inet_hash ( s#sock * ) 
inet_unhash extern void inet_unhash ( s#sock * ) 
inet_hash_connect extern int inet_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 
inet_hashinfo_init void inet_hashinfo_init ( s#inet_hashinfo * ) 

/* net/ipv4/inet_lro.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s#net_lro_stats struct net_lro_stats { unsigned long aggregated ; unsigned long flushed ; unsigned long no_desc ; } 
s#skb_frag_struct struct skb_frag_struct { s#page * page ; t#__u32 page_offset ; t#__u32 size ; } 
s#net_lro_desc struct net_lro_desc { s#sk_buff * parent ; s#sk_buff * last_skb ; s#skb_frag_struct * next_frag ; s#iphdr * iph ; s#tcphdr * tcph ; s#vlan_group * vgrp ; t#__wsum data_csum ; t#__be32 tcp_rcv_tsecr ; t#__be32 tcp_rcv_tsval ; t#__be32 tcp_ack ; t#u32 tcp_next_seq ; t#u32 skb_tot_frags_len ; t#u16 ip_tot_len ; t#u16 tcp_saw_tstamp ; t#__be16 tcp_window ; t#u16 vlan_tag ; int pkt_aggr_cnt ; int vlan_packet ; int mss ; int active ; } 
s#net_lro_mgr struct net_lro_mgr { s#net_device * dev ; s#net_lro_stats stats ; unsigned long features ; t#u32 ip_summed ; t#u32 ip_summed_aggr ; int max_desc ; int max_aggr ; int frag_align_pad ; s#net_lro_desc * lro_arr ; int ( * get_skb_header ) ( s#sk_buff * , void * * , void * * , t#u64 * , void * ) ; int ( * get_frag_header ) ( s#skb_frag_struct * , void * * , void * * , void * * , t#u64 * , void * ) ; } 
lro_receive_skb void lro_receive_skb ( s#net_lro_mgr * , s#sk_buff * , void * ) 
lro_vlan_hwaccel_receive_skb void lro_vlan_hwaccel_receive_skb ( s#net_lro_mgr * , s#sk_buff * , s#vlan_group * , t#u16 , void * ) 
lro_receive_frags void lro_receive_frags ( s#net_lro_mgr * , s#skb_frag_struct * , int , int , void * , t#__wsum ) 
lro_vlan_hwaccel_receive_frags void lro_vlan_hwaccel_receive_frags ( s#net_lro_mgr * , s#skb_frag_struct * , int , int , s#vlan_group * , t#u16 , void * , t#__wsum ) 
lro_flush_all void lro_flush_all ( s#net_lro_mgr * ) 
lro_flush_pkt void lro_flush_pkt ( s#net_lro_mgr * , s#iphdr * , s#tcphdr * ) 

/* net/ipv4/inet_timewait_sock.o */
s##iw_handler_def
s##iw_public_data
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##xfrm_policy
s##udp_table
s##raw_hashinfo
inet_twsk_put extern void inet_twsk_put ( s#inet_timewait_sock * ) 
__inet_twsk_hashdance extern void __inet_twsk_hashdance ( s#inet_timewait_sock * , s#sock * , s#inet_hashinfo * ) 
inet_twsk_alloc extern s#inet_timewait_sock * inet_twsk_alloc ( const s#sock * , const int ) 
inet_twdr_hangman extern void inet_twdr_hangman ( unsigned long ) 
inet_twdr_twkill_work extern void inet_twdr_twkill_work ( s#work_struct * ) 
inet_twsk_deschedule extern void inet_twsk_deschedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * ) 
inet_twsk_schedule extern void inet_twsk_schedule ( s#inet_timewait_sock * , s#inet_timewait_death_row * , const int , const int ) 
inet_twdr_twcal_tick extern void inet_twdr_twcal_tick ( unsigned long ) 
inet_twsk_purge extern void inet_twsk_purge ( s#inet_hashinfo * , s#inet_timewait_death_row * , int ) 

/* net/ipv4/inetpeer.o */
s##inet_peer_base
inet_getpeer s#inet_peer * inet_getpeer ( s#inet_peer_base * , const s#inetpeer_addr * , int ) 
inet_putpeer extern void inet_putpeer ( s#inet_peer * ) 
inet_peer_xrlim_allow extern t#bool inet_peer_xrlim_allow ( s#inet_peer * , int ) 

/* net/ipv4/ip_fragment.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
ip_defrag int ip_defrag ( s#sk_buff * , t#u32 ) 

/* net/ipv4/ip_options.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##fib_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip_options_compile extern int ip_options_compile ( s#net * , s#ip_options * , s#sk_buff * ) 
ip_options_rcv_srr extern int ip_options_rcv_srr ( s#sk_buff * ) 

/* net/ipv4/ip_output.o */
sysctl_ip_default_ttl extern int sysctl_ip_default_ttl 
ip_send_check extern void ip_send_check ( s#iphdr * ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip_local_out extern int ip_local_out ( s#sk_buff * ) 
ip_build_and_send_pkt extern int ip_build_and_send_pkt ( s#sk_buff * , s#sock * , t#__be32 , t#__be32 , s#ip_options_rcu * ) 
ip_queue_xmit extern int ip_queue_xmit ( s#sk_buff * , s#flowi * ) 
ip_fragment extern int ip_fragment ( s#sk_buff * , int ( * ) ( s#sk_buff * ) ) 
ip_generic_getfrag extern int ip_generic_getfrag ( void * , char * , int , int , int , s#sk_buff * ) 

/* net/ipv4/ip_sockglue.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip_cmsg_recv extern void ip_cmsg_recv ( s#msghdr * , s#sk_buff * ) 
ip_queue_rcv_skb extern int ip_queue_rcv_skb ( s#sock * , s#sk_buff * ) 
ip_setsockopt extern int ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ip_setsockopt extern int compat_ip_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ip_getsockopt extern int ip_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ip_getsockopt extern int compat_ip_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv4/netfilter.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip_route_me_harder extern int ip_route_me_harder ( s#sk_buff * , unsigned ) 
ip_xfrm_me_harder extern int ip_xfrm_me_harder ( s#sk_buff * ) 
ip_nat_decode_session extern void ( * ip_nat_decode_session ) ( s#sk_buff * , s#flowi * ) 
nf_ip_checksum extern t#__sum16 nf_ip_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 
nf_net_ipv4_netfilter_sysctl_path extern s#ctl_path nf_net_ipv4_netfilter_sysctl_path [ ] 

/* net/ipv4/netfilter/arp_tables.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
arpt_alloc_initial_table extern void * arpt_alloc_initial_table ( const s#xt_table * ) 
s#xt_counters struct xt_counters { t#__u64 pcnt , bcnt ; } 
s#arpt_devaddr_info struct arpt_devaddr_info { char addr [ 16 ] ; char mask [ 16 ] ; } 
s#arpt_arp struct arpt_arp { s#in_addr src , tgt ; s#in_addr smsk , tmsk ; t#u_int8_t arhln , arhln_mask ; s#arpt_devaddr_info src_devaddr ; s#arpt_devaddr_info tgt_devaddr ; t#__be16 arpop , arpop_mask ; t#__be16 arhrd , arhrd_mask ; t#__be16 arpro , arpro_mask ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int8_t flags ; t#u_int16_t invflags ; } 
s#arpt_entry struct arpt_entry { s#arpt_arp arp ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#arpt_replace struct arpt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ 3 ] ; unsigned int underflow [ 3 ] ; unsigned int num_counters ; s#xt_counters * counters ; s#arpt_entry entries [ 0 ] ; } 
arpt_register_table extern s#xt_table * arpt_register_table ( s#net * , const s#xt_table * , const s#arpt_replace * ) 
arpt_unregister_table extern void arpt_unregister_table ( s#xt_table * ) 
arpt_do_table extern unsigned int arpt_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv4/netfilter/ip_tables.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
ipt_alloc_initial_table extern void * ipt_alloc_initial_table ( const s#xt_table * ) 
s#ipt_ip struct ipt_ip { s#in_addr src , dst ; s#in_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int16_t proto ; t#u_int8_t flags ; t#u_int8_t invflags ; } 
s#ipt_entry struct ipt_entry { s#ipt_ip ip ; unsigned int nfcache ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ipt_replace struct ipt_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ipt_entry entries [ 0 ] ; } 
ipt_register_table extern s#xt_table * ipt_register_table ( s#net * , const s#xt_table * , const s#ipt_replace * ) 
ipt_unregister_table extern void ipt_unregister_table ( s#net * , s#xt_table * ) 
ipt_do_table extern unsigned int ipt_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 

/* net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s#ip_conntrack_stat struct ip_conntrack_stat { unsigned int searched ; unsigned int found ; unsigned int new ; unsigned int invalid ; unsigned int ignore ; unsigned int delete ; unsigned int delete_list ; unsigned int insert ; unsigned int insert_failed ; unsigned int drop ; unsigned int early_drop ; unsigned int error ; unsigned int expect_new ; unsigned int expect_create ; unsigned int expect_delete ; unsigned int search_restart ; } 
u#nf_inet_addr union nf_inet_addr { t#__u32 all [ 4 ] ; t#__be32 ip ; t#__be32 ip6 [ 4 ] ; s#in_addr in ; s#in6_addr in6 ; } 
u#nf_conntrack_man_proto union nf_conntrack_man_proto { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#__be16 id ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } 
s#nf_conntrack_man struct nf_conntrack_man { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; t#u_int16_t l3num ; } 
s#nf_conntrack_tuple struct nf_conntrack_tuple { s#nf_conntrack_man src ; struct { u#nf_inet_addr u3 ; union { t#__be16 all ; struct { t#__be16 port ; } tcp ; struct { t#__be16 port ; } udp ; struct { t#u_int8_t type , code ; } icmp ; struct { t#__be16 port ; } dccp ; struct { t#__be16 port ; } sctp ; struct { t#__be16 key ; } gre ; } u ; t#u_int8_t protonum ; t#u_int8_t dir ; } dst ; } 
s#nf_conntrack_tuple_hash struct nf_conntrack_tuple_hash { s#hlist_nulls_node hnnode ; s#nf_conntrack_tuple tuple ; } 
E#IP_CT_DIR_MAX 2 
E#NF_CT_EXT_NUM 6 
s#nf_ct_ext struct nf_ct_ext { s#rcu_head rcu ; t#u8 offset [ E#NF_CT_EXT_NUM ] ; t#u8 len ; char data [ 0 ] ; } 
t#u_int64_t typedef t#__u64 u_int64_t 
s#nf_ct_dccp struct nf_ct_dccp { t#u_int8_t role [ E#IP_CT_DIR_MAX ] ; t#u_int8_t state ; t#u_int8_t last_pkt ; t#u_int8_t last_dir ; t#u_int64_t handshake_seq ; } 
e#sctp_conntrack enum sctp_conntrack { SCTP_CONNTRACK_NONE , SCTP_CONNTRACK_CLOSED , SCTP_CONNTRACK_COOKIE_WAIT , SCTP_CONNTRACK_COOKIE_ECHOED , SCTP_CONNTRACK_ESTABLISHED , SCTP_CONNTRACK_SHUTDOWN_SENT , SCTP_CONNTRACK_SHUTDOWN_RECD , SCTP_CONNTRACK_SHUTDOWN_ACK_SENT , SCTP_CONNTRACK_MAX } 
s#ip_ct_sctp struct ip_ct_sctp { e#sctp_conntrack state ; t#__be32 vtag [ E#IP_CT_DIR_MAX ] ; } 
s#ip_ct_tcp_state struct ip_ct_tcp_state { t#u_int32_t td_end ; t#u_int32_t td_maxend ; t#u_int32_t td_maxwin ; t#u_int32_t td_maxack ; t#u_int8_t td_scale ; t#u_int8_t flags ; } 
s#ip_ct_tcp struct ip_ct_tcp { s#ip_ct_tcp_state seen [ 2 ] ; t#u_int8_t state ; t#u_int8_t last_dir ; t#u_int8_t retrans ; t#u_int8_t last_index ; t#u_int32_t last_seq ; t#u_int32_t last_ack ; t#u_int32_t last_end ; t#u_int16_t last_win ; t#u_int8_t last_wscale ; t#u_int8_t last_flags ; } 
s#nf_ct_gre struct nf_ct_gre { unsigned int stream_timeout ; unsigned int timeout ; } 
u#nf_conntrack_proto union nf_conntrack_proto { s#nf_ct_dccp dccp ; s#ip_ct_sctp sctp ; s#ip_ct_tcp tcp ; s#nf_ct_gre gre ; } 
s#nf_conn struct nf_conn { s#nf_conntrack ct_general ; t#spinlock_t lock ; s#nf_conntrack_tuple_hash tuplehash [ E#IP_CT_DIR_MAX ] ; unsigned long status ; s#nf_conn * master ; s#timer_list timeout ; t#u_int32_t mark ; t#u_int32_t secmark ; s#nf_ct_ext * ext ; s#net * ct_net ; u#nf_conntrack_proto proto ; } 
s#nf_ct_event struct nf_ct_event { s#nf_conn * ct ; t#u32 pid ; int report ; } 
s#nf_ct_event_notifier struct nf_ct_event_notifier { int ( * fcn ) ( unsigned int , s#nf_ct_event * ) ; } 
s#nf_conntrack_tuple_mask struct nf_conntrack_tuple_mask { struct { u#nf_inet_addr u3 ; u#nf_conntrack_man_proto u ; } src ; } 
s#nf_conntrack_expect_policy struct nf_conntrack_expect_policy { unsigned int max_expected ; unsigned int timeout ; const char * name ; } 
E#IP_CT_ESTABLISHED 0 
E#IP_CT_IS_REPLY 3 
E#IP_CT_RELATED 1 
E#IP_CT_NEW 2 
e#ip_conntrack_info enum ip_conntrack_info { IP_CT_ESTABLISHED , IP_CT_RELATED , IP_CT_NEW , IP_CT_IS_REPLY , IP_CT_ESTABLISHED_REPLY = E#IP_CT_ESTABLISHED + E#IP_CT_IS_REPLY , IP_CT_RELATED_REPLY = E#IP_CT_RELATED + E#IP_CT_IS_REPLY , IP_CT_NEW_REPLY = E#IP_CT_NEW + E#IP_CT_IS_REPLY , IP_CT_NUMBER = E#IP_CT_IS_REPLY * 2 - 1 } 
s#nf_conntrack_helper struct nf_conntrack_helper { s#hlist_node hnode ; const char * name ; s#module * me ; const s#nf_conntrack_expect_policy * expect_policy ; s#nf_conntrack_tuple tuple ; int ( * help ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , const s#nf_conn * ) ; unsigned int expect_class_max ; } 
e#ip_conntrack_dir enum ip_conntrack_dir { IP_CT_DIR_ORIGINAL , IP_CT_DIR_REPLY , IP_CT_DIR_MAX } 
s#nf_conntrack_expect struct nf_conntrack_expect { s#hlist_node lnode ; s#hlist_node hnode ; s#nf_conntrack_tuple tuple ; s#nf_conntrack_tuple_mask mask ; void ( * expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) ; s#nf_conntrack_helper * helper ; s#nf_conn * master ; s#timer_list timeout ; t#atomic_t use ; unsigned int flags ; unsigned int class ; t#__be32 saved_ip ; u#nf_conntrack_man_proto saved_proto ; e#ip_conntrack_dir dir ; s#rcu_head rcu ; } 
s#nf_exp_event struct nf_exp_event { s#nf_conntrack_expect * exp ; t#u32 pid ; int report ; } 
s#nf_exp_event_notifier struct nf_exp_event_notifier { int ( * fcn ) ( unsigned int , s#nf_exp_event * ) ; } 
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_nat_seq_adjust_hook extern int ( * nf_nat_seq_adjust_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info ) 
need_ipv4_conntrack extern void need_ipv4_conntrack ( void ) 

/* net/ipv4/netfilter/nf_defrag_ipv4.o */
nf_defrag_ipv4_enable extern void nf_defrag_ipv4_enable ( void ) 

/* net/ipv4/netfilter/nf_nat_core.o */
s##tvec_base
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##fib_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##ebt_table
s##net_generic
s##netns_ipvs
nf_nat_used_tuple extern int nf_nat_used_tuple ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
s#nf_nat_range struct nf_nat_range { unsigned int flags ; t#__be32 min_ip , max_ip ; u#nf_conntrack_man_proto min , max ; } 
e#nf_nat_manip_type enum nf_nat_manip_type { IP_NAT_MANIP_SRC , IP_NAT_MANIP_DST } 
nf_nat_setup_info extern unsigned int nf_nat_setup_info ( s#nf_conn * , const s#nf_nat_range * , e#nf_nat_manip_type ) 
nf_nat_packet extern unsigned int nf_nat_packet ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
nf_nat_icmp_reply_translation extern int nf_nat_icmp_reply_translation ( s#nf_conn * , e#ip_conntrack_info , unsigned int , s#sk_buff * ) 
s#nf_nat_protocol struct nf_nat_protocol { unsigned int protonum ; s#module * me ; t#bool ( * manip_pkt ) ( s#sk_buff * , unsigned int , const s#nf_conntrack_tuple * , e#nf_nat_manip_type ) ; t#bool ( * in_range ) ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) ; void ( * unique_tuple ) ( s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * ) ; int ( * range_to_nlattr ) ( s#sk_buff * , const s#nf_nat_range * ) ; int ( * nlattr_to_range ) ( s#nlattr * [ ] , s#nf_nat_range * ) ; } 
nf_nat_protocol_register extern int nf_nat_protocol_register ( const s#nf_nat_protocol * ) 
nf_nat_protocol_unregister extern void nf_nat_protocol_unregister ( const s#nf_nat_protocol * ) 

/* net/ipv4/netfilter/nf_nat_helper.o */
s##tvec_base
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##fib_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##ebt_table
s##net_generic
s##netns_ipvs
nf_nat_get_offset extern t#s16 nf_nat_get_offset ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 
nf_nat_set_seq_adjust extern void nf_nat_set_seq_adjust ( s#nf_conn * , e#ip_conntrack_info , t#__be32 , t#s16 ) 
__nf_nat_mangle_tcp_packet extern int __nf_nat_mangle_tcp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , const char * , unsigned int , t#bool ) 
nf_nat_mangle_udp_packet extern int nf_nat_mangle_udp_packet ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned int , unsigned int , const char * , unsigned int ) 
nf_nat_follow_master extern void nf_nat_follow_master ( s#nf_conn * , s#nf_conntrack_expect * ) 

/* net/ipv4/netfilter/nf_nat_proto_common.o */
nf_nat_proto_in_range extern t#bool nf_nat_proto_in_range ( const s#nf_conntrack_tuple * , e#nf_nat_manip_type , const u#nf_conntrack_man_proto * , const u#nf_conntrack_man_proto * ) 
s##tvec_base
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
nf_nat_proto_unique_tuple extern void nf_nat_proto_unique_tuple ( s#nf_conntrack_tuple * , const s#nf_nat_range * , e#nf_nat_manip_type , const s#nf_conn * , t#u_int16_t * ) 
nf_nat_proto_nlattr_to_range extern int nf_nat_proto_nlattr_to_range ( s#nlattr * [ ] , s#nf_nat_range * ) 
nf_nat_proto_range_to_nlattr extern int nf_nat_proto_range_to_nlattr ( s#sk_buff * , const s#nf_nat_range * ) 

/* net/ipv4/netfilter/nf_nat_proto_gre.o */
nf_nat_need_gre extern void nf_nat_need_gre ( void ) 

/* net/ipv4/ping.o */
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##inet_hashinfo
s##raw_hashinfo
ping_prot extern s#proto ping_prot 

/* net/ipv4/protocol.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#net_protocol struct net_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , t#u32 ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , t#u32 ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; unsigned int no_policy : 1 , netns_ok : 1 ; } 
inet_add_protocol extern int inet_add_protocol ( const s#net_protocol * , unsigned char ) 
inet_del_protocol extern int inet_del_protocol ( const s#net_protocol * , unsigned char ) 

/* net/ipv4/raw.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
raw_hash_sk void raw_hash_sk ( s#sock * ) 
raw_unhash_sk void raw_unhash_sk ( s#sock * ) 
raw_seq_start void * raw_seq_start ( s#seq_file * , t#loff_t * ) 
raw_seq_next void * raw_seq_next ( s#seq_file * , void * , t#loff_t * ) 
raw_seq_stop void raw_seq_stop ( s#seq_file * , void * ) 
raw_seq_open int raw_seq_open ( s#inode * , s#file * , s#raw_hashinfo * , const s#seq_operations * ) 

/* net/ipv4/route.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##dn_route
__ip_select_ident extern void __ip_select_ident ( s#iphdr * , s#dst_entry * , int ) 
ip_route_input_common extern int ip_route_input_common ( s#sk_buff * , t#__be32 , t#__be32 , t#u8 , s#net_device * , t#bool ) 
__ip_route_output_key extern s#rtable * __ip_route_output_key ( s#net * , s#flowi4 * ) 
ip_route_output_flow extern s#rtable * ip_route_output_flow ( s#net * , s#flowi4 * , s#sock * ) 

/* net/ipv4/syncookies.o */
syncookie_secret extern t#__u32 syncookie_secret [ 2 ] [ 16 - 4 + 5 ] 
s#tcp_options_received struct tcp_options_received { long ts_recent_stamp ; t#u32 ts_recent ; t#u32 rcv_tsval ; t#u32 rcv_tsecr ; t#u16 saw_tstamp : 1 , tstamp_ok : 1 , dsack : 1 , wscale_ok : 1 , sack_ok : 4 , snd_wscale : 4 , rcv_wscale : 4 ; t#u8 cookie_plus : 6 , cookie_out_never : 1 , cookie_in_always : 1 ; t#u8 num_sacks ; t#u16 user_mss ; t#u16 mss_clamp ; } 
cookie_check_timestamp extern t#bool cookie_check_timestamp ( s#tcp_options_received * , t#bool * ) 

/* net/ipv4/sysctl_net_ipv4.o */
net_ipv4_ctl_path extern s#ctl_path net_ipv4_ctl_path [ ] 

/* net/ipv4/tcp.o */
tcp_orphan_count extern s#percpu_counter tcp_orphan_count 
sysctl_tcp_mem extern long sysctl_tcp_mem [ 3 ] 
sysctl_tcp_rmem extern int sysctl_tcp_rmem [ 3 ] 
sysctl_tcp_wmem extern int sysctl_tcp_wmem [ 3 ] 
tcp_memory_allocated extern t#atomic_long_t tcp_memory_allocated 
tcp_sockets_allocated extern s#percpu_counter tcp_sockets_allocated 
tcp_memory_pressure extern int tcp_memory_pressure 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
tcp_enter_memory_pressure extern void tcp_enter_memory_pressure ( s#sock * ) 
tcp_poll extern unsigned int tcp_poll ( s#file * , s#socket * , s#poll_table_struct * ) 
tcp_ioctl extern int tcp_ioctl ( s#sock * , int , unsigned long ) 
tcp_splice_read extern t#ssize_t tcp_splice_read ( s#socket * , t#loff_t * , s#pipe_inode_info * , t#size_t , unsigned int ) 
tcp_sendpage extern int tcp_sendpage ( s#sock * , s#page * , int , t#size_t , int ) 
tcp_sendmsg extern int tcp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
t#sk_read_actor_t typedef int ( * sk_read_actor_t ) ( t#read_descriptor_t * , s#sk_buff * , unsigned int , t#size_t ) 
tcp_read_sock extern int tcp_read_sock ( s#sock * , t#read_descriptor_t * , t#sk_read_actor_t ) 
tcp_recvmsg extern int tcp_recvmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t , int , int , int * ) 
tcp_set_state extern void tcp_set_state ( s#sock * , int ) 
tcp_shutdown extern void tcp_shutdown ( s#sock * , int ) 
tcp_close extern void tcp_close ( s#sock * , long ) 
tcp_disconnect extern int tcp_disconnect ( s#sock * , int ) 
tcp_setsockopt extern int tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_tcp_setsockopt extern int compat_tcp_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
tcp_get_info extern void tcp_get_info ( s#sock * , s#tcp_info * ) 
tcp_getsockopt extern int tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_tcp_getsockopt extern int compat_tcp_getsockopt ( s#sock * , int , int , char * , int * ) 
tcp_tso_segment extern s#sk_buff * tcp_tso_segment ( s#sk_buff * , t#u32 ) 
tcp_gro_receive extern s#sk_buff * * tcp_gro_receive ( s#sk_buff * * , s#sk_buff * ) 
tcp_gro_complete extern int tcp_gro_complete ( s#sk_buff * ) 
tcp_cookie_generator extern int tcp_cookie_generator ( t#u32 * ) 
tcp_done extern void tcp_done ( s#sock * ) 

/* net/ipv4/tcp_cong.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_register_congestion_control extern int tcp_register_congestion_control ( s#tcp_congestion_ops * ) 
tcp_unregister_congestion_control extern void tcp_unregister_congestion_control ( s#tcp_congestion_ops * ) 
tcp_is_cwnd_limited extern int tcp_is_cwnd_limited ( const s#sock * , t#u32 ) 
s##ip_mc_socklist
s#dma_page_list struct dma_page_list { char * base_address ; int nr_pages ; s#page * * pages ; } 
s#dma_pinned_list struct dma_pinned_list { int nr_iovecs ; s#dma_page_list page_list [ 0 ] ; } 
s#tcp_sack_block struct tcp_sack_block { t#u32 start_seq ; t#u32 end_seq ; } 
s#tcp_cookie_values struct tcp_cookie_values { s#kref kref ; t#u8 cookie_pair [ ( 2 * 16 ) ] ; t#u8 cookie_pair_size ; t#u8 cookie_desired ; t#u16 s_data_desired : 11 , s_data_constant : 1 , s_data_in : 1 , s_data_out : 1 , s_data_unused : 2 ; t#u8 s_data_payload [ 0 ] ; } 
s#tcp_sock struct tcp_sock { s#inet_connection_sock inet_conn ; t#u16 tcp_header_len ; t#u16 xmit_size_goal_segs ; t#__be32 pred_flags ; t#u32 rcv_nxt ; t#u32 copied_seq ; t#u32 rcv_wup ; t#u32 snd_nxt ; t#u32 snd_una ; t#u32 snd_sml ; t#u32 rcv_tstamp ; t#u32 lsndtime ; struct { s#sk_buff_head prequeue ; s#task_struct * task ; s#iovec * iov ; int memory ; int len ; s#dma_chan * dma_chan ; int wakeup ; s#dma_pinned_list * pinned_list ; t#dma_cookie_t dma_cookie ; } ucopy ; t#u32 snd_wl1 ; t#u32 snd_wnd ; t#u32 max_window ; t#u32 mss_cache ; t#u32 window_clamp ; t#u32 rcv_ssthresh ; t#u32 frto_highmark ; t#u16 advmss ; t#u8 frto_counter ; t#u8 nonagle : 4 , thin_lto : 1 , thin_dupack : 1 , unused : 2 ; t#u32 srtt ; t#u32 mdev ; t#u32 mdev_max ; t#u32 rttvar ; t#u32 rtt_seq ; t#u32 packets_out ; t#u32 retrans_out ; t#u16 urg_data ; t#u8 ecn_flags ; t#u8 reordering ; t#u32 snd_up ; t#u8 keepalive_probes ; s#tcp_options_received rx_opt ; t#u32 snd_ssthresh ; t#u32 snd_cwnd ; t#u32 snd_cwnd_cnt ; t#u32 snd_cwnd_clamp ; t#u32 snd_cwnd_used ; t#u32 snd_cwnd_stamp ; t#u32 rcv_wnd ; t#u32 write_seq ; t#u32 pushed_seq ; t#u32 lost_out ; t#u32 sacked_out ; t#u32 fackets_out ; t#u32 tso_deferred ; t#u32 bytes_acked ; s#sk_buff * lost_skb_hint ; s#sk_buff * scoreboard_skb_hint ; s#sk_buff * retransmit_skb_hint ; s#sk_buff_head out_of_order_queue ; s#tcp_sack_block duplicate_sack [ 1 ] ; s#tcp_sack_block selective_acks [ 4 ] ; s#tcp_sack_block recv_sack_cache [ 4 ] ; s#sk_buff * highest_sack ; int lost_cnt_hint ; t#u32 retransmit_high ; t#u32 lost_retrans_low ; t#u32 prior_ssthresh ; t#u32 high_seq ; t#u32 retrans_stamp ; t#u32 undo_marker ; int undo_retrans ; t#u32 total_retrans ; t#u32 urg_seq ; unsigned int keepalive_time ; unsigned int keepalive_intvl ; int linger2 ; struct { t#u32 rtt ; t#u32 seq ; t#u32 time ; } rcv_rtt_est ; struct { int space ; t#u32 seq ; t#u32 time ; } rcvq_space ; struct { t#u32 probe_seq_start ; t#u32 probe_seq_end ; } mtu_probe ; s#tcp_cookie_values * cookie_values ; } 
tcp_slow_start extern void tcp_slow_start ( s#tcp_sock * ) 
tcp_cong_avoid_ai extern void tcp_cong_avoid_ai ( s#tcp_sock * , t#u32 ) 
tcp_reno_cong_avoid extern void tcp_reno_cong_avoid ( s#sock * , t#u32 , t#u32 ) 
tcp_reno_ssthresh extern t#u32 tcp_reno_ssthresh ( s#sock * ) 
tcp_reno_min_cwnd extern t#u32 tcp_reno_min_cwnd ( const s#sock * ) 
tcp_init_congestion_ops extern s#tcp_congestion_ops tcp_init_congestion_ops 

/* net/ipv4/tcp_input.o */
sysctl_tcp_reordering extern int sysctl_tcp_reordering 
sysctl_tcp_ecn extern int sysctl_tcp_ecn 
sysctl_tcp_adv_win_scale extern int sysctl_tcp_adv_win_scale 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_initialize_rcv_mss extern void tcp_initialize_rcv_mss ( s#sock * ) 
tcp_simple_retransmit extern void tcp_simple_retransmit ( s#sock * ) 
tcp_parse_options extern void tcp_parse_options ( s#sk_buff * , s#tcp_options_received * , t#u8 * * , int ) 
tcp_rcv_established extern int tcp_rcv_established ( s#sock * , s#sk_buff * , s#tcphdr * , unsigned ) 
tcp_rcv_state_process extern int tcp_rcv_state_process ( s#sock * , s#sk_buff * , s#tcphdr * , unsigned ) 

/* net/ipv4/tcp_ipv4.o */
sysctl_tcp_low_latency extern int sysctl_tcp_low_latency 
s##array_cache
s##kmem_list3
tcp_hashinfo extern s#inet_hashinfo tcp_hashinfo 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
tcp_twsk_unique extern int tcp_twsk_unique ( s#sock * , s#sock * , void * ) 
tcp_v4_connect extern int tcp_v4_connect ( s#sock * , s#sockaddr * , int ) 
tcp_v4_send_check extern void tcp_v4_send_check ( s#sock * , s#sk_buff * ) 
tcp_v4_conn_request extern int tcp_v4_conn_request ( s#sock * , s#sk_buff * ) 
tcp_v4_syn_recv_sock extern s#sock * tcp_v4_syn_recv_sock ( s#sock * , s#sk_buff * , s#request_sock * , s#dst_entry * ) 
tcp_v4_do_rcv extern int tcp_v4_do_rcv ( s#sock * , s#sk_buff * ) 
tcp_v4_get_peer extern s#inet_peer * tcp_v4_get_peer ( s#sock * , t#bool * ) 
tcp_v4_tw_get_peer extern void * tcp_v4_tw_get_peer ( s#sock * ) 
ipv4_specific extern const s#inet_connection_sock_af_ops ipv4_specific 
tcp_v4_destroy_sock extern void tcp_v4_destroy_sock ( s#sock * ) 
s#tcp_seq_afinfo struct tcp_seq_afinfo { char * name ; t#sa_family_t family ; s#file_operations seq_fops ; s#seq_operations seq_ops ; } 
tcp_proc_register extern int tcp_proc_register ( s#net * , s#tcp_seq_afinfo * ) 
tcp_proc_unregister extern void tcp_proc_unregister ( s#net * , s#tcp_seq_afinfo * ) 
tcp_prot extern s#proto tcp_prot 

/* net/ipv4/tcp_minisocks.o */
sysctl_tcp_syncookies extern int sysctl_tcp_syncookies 
s##tvec_base
s##array_cache
s##kmem_list3
tcp_death_row extern s#inet_timewait_death_row tcp_death_row 
e#tcp_tw_status enum tcp_tw_status { TCP_TW_SUCCESS = 0 , TCP_TW_RST = 1 , TCP_TW_ACK = 2 , TCP_TW_SYN = 3 } 
s##iw_handler_def
s##iw_public_data
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##udp_table
s##raw_hashinfo
tcp_timewait_state_process extern e#tcp_tw_status tcp_timewait_state_process ( s#inet_timewait_sock * , s#sk_buff * , const s#tcphdr * ) 
tcp_twsk_destructor extern void tcp_twsk_destructor ( s#sock * ) 
tcp_create_openreq_child extern s#sock * tcp_create_openreq_child ( s#sock * , s#request_sock * , s#sk_buff * ) 
tcp_check_req extern s#sock * tcp_check_req ( s#sock * , s#sk_buff * , s#request_sock * , s#request_sock * * ) 
tcp_child_process extern int tcp_child_process ( s#sock * , s#sock * , s#sk_buff * ) 

/* net/ipv4/tcp_output.o */
sysctl_tcp_cookie_size extern int sysctl_tcp_cookie_size 
tcp_select_initial_window extern void tcp_select_initial_window ( int , t#__u32 , t#__u32 * , t#__u32 * , int , t#__u8 * , t#__u32 ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_mtup_init extern void tcp_mtup_init ( s#sock * ) 
tcp_sync_mss extern unsigned int tcp_sync_mss ( s#sock * , t#u32 ) 
tcp_make_synack extern s#sk_buff * tcp_make_synack ( s#sock * , s#dst_entry * , s#request_sock * , s#request_values * ) 
tcp_connect extern int tcp_connect ( s#sock * ) 

/* net/ipv4/tcp_timer.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_init_xmit_timers extern void tcp_init_xmit_timers ( s#sock * ) 
tcp_syn_ack_timeout extern void tcp_syn_ack_timeout ( s#sock * , s#request_sock * ) 

/* net/ipv4/tcp_vegas.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
tcp_vegas_init extern void tcp_vegas_init ( s#sock * ) 
tcp_vegas_pkts_acked extern void tcp_vegas_pkts_acked ( s#sock * , t#u32 , t#s32 ) 
tcp_vegas_state extern void tcp_vegas_state ( s#sock * , t#u8 ) 
tcp_vegas_cwnd_event extern void tcp_vegas_cwnd_event ( s#sock * , e#tcp_ca_event ) 
tcp_vegas_get_info extern void tcp_vegas_get_info ( s#sock * , t#u32 , s#sk_buff * ) 

/* net/ipv4/tunnel4.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#xfrm_tunnel struct xfrm_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , t#u32 ) ; s#xfrm_tunnel * next ; int priority ; } 
xfrm4_tunnel_register extern int xfrm4_tunnel_register ( s#xfrm_tunnel * , unsigned short ) 
xfrm4_tunnel_deregister extern int xfrm4_tunnel_deregister ( s#xfrm_tunnel * , unsigned short ) 

/* net/ipv4/udp.o */
udp_table extern s#udp_table udp_table 
sysctl_udp_mem extern long sysctl_udp_mem [ 3 ] 
sysctl_udp_rmem_min extern int sysctl_udp_rmem_min 
sysctl_udp_wmem_min extern int sysctl_udp_wmem_min 
udp_memory_allocated extern t#atomic_long_t udp_memory_allocated 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##raw_hashinfo
udp_lib_get_port extern int udp_lib_get_port ( s#sock * , unsigned short , int ( * ) ( const s#sock * , const s#sock * ) , unsigned int ) 
udp4_lib_lookup extern s#sock * udp4_lib_lookup ( s#net * , t#__be32 , t#__be16 , t#__be32 , t#__be16 , int ) 
udp_flush_pending_frames extern void udp_flush_pending_frames ( s#sock * ) 
udp_push_pending_frames extern int udp_push_pending_frames ( s#sock * ) 
udp_sendmsg extern int udp_sendmsg ( s#kiocb * , s#sock * , s#msghdr * , t#size_t ) 
udp_ioctl extern int udp_ioctl ( s#sock * , int , unsigned long ) 
udp_disconnect extern int udp_disconnect ( s#sock * , int ) 
udp_lib_unhash extern void udp_lib_unhash ( s#sock * ) 
udp_lib_rehash extern void udp_lib_rehash ( s#sock * , t#u16 ) 
udp_lib_setsockopt extern int udp_lib_setsockopt ( s#sock * , int , int , char * , unsigned int , int ( * ) ( s#sock * ) ) 
udp_lib_getsockopt extern int udp_lib_getsockopt ( s#sock * , int , int , char * , int * ) 
udp_poll extern unsigned int udp_poll ( s#file * , s#socket * , t#poll_table * ) 
udp_prot extern s#proto udp_prot 
s#udp_seq_afinfo struct udp_seq_afinfo { char * name ; t#sa_family_t family ; s#udp_table * udp_table ; s#file_operations seq_fops ; s#seq_operations seq_ops ; } 
udp_proc_register extern int udp_proc_register ( s#net * , s#udp_seq_afinfo * ) 
udp_proc_unregister extern void udp_proc_unregister ( s#net * , s#udp_seq_afinfo * ) 

/* net/ipv4/udplite.o */
udplite_table extern s#udp_table udplite_table 
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##inet_hashinfo
s##raw_hashinfo
udplite_prot extern s#proto udplite_prot 

/* net/ipv4/xfrm4_input.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm4_rcv_encap extern int xfrm4_rcv_encap ( s#sk_buff * , int , t#__be32 , int ) 
xfrm4_rcv extern int xfrm4_rcv ( s#sk_buff * ) 

/* net/ipv4/xfrm4_output.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm4_prepare_output extern int xfrm4_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/addrconf.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
in6_dev_finish_destroy extern void in6_dev_finish_destroy ( s#inet6_dev * ) 
ipv6_dev_get_saddr extern int ipv6_dev_get_saddr ( s#net * , s#net_device * , const s#in6_addr * , unsigned int , s#in6_addr * ) 
ipv6_chk_addr extern int ipv6_chk_addr ( s#net * , const s#in6_addr * , s#net_device * , int ) 
ipv6_chk_prefix extern int ipv6_chk_prefix ( const s#in6_addr * , s#net_device * ) 
register_inet6addr_notifier extern int register_inet6addr_notifier ( s#notifier_block * ) 
unregister_inet6addr_notifier extern int unregister_inet6addr_notifier ( s#notifier_block * ) 

/* net/ipv6/addrconf_core.o */
__ipv6_addr_type extern int __ipv6_addr_type ( const s#in6_addr * ) 

/* net/ipv6/af_inet6.o */
s#ipv6_params struct ipv6_params { t#__s32 disable_ipv6 ; t#__s32 autoconf ; } 
ipv6_defaults extern s#ipv6_params ipv6_defaults 
disable_ipv6_mod extern int disable_ipv6_mod 
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
inet6_bind extern int inet6_bind ( s#socket * , s#sockaddr * , int ) 
inet6_release extern int inet6_release ( s#socket * ) 
inet6_destroy_sock extern void inet6_destroy_sock ( s#sock * ) 
inet6_getname extern int inet6_getname ( s#socket * , s#sockaddr * , int * , int ) 
inet6_ioctl extern int inet6_ioctl ( s#socket * , unsigned int , unsigned long ) 
inet6_register_protosw extern int inet6_register_protosw ( s#inet_protosw * ) 
inet6_unregister_protosw extern void inet6_unregister_protosw ( s#inet_protosw * ) 
inet6_sk_rebuild_header extern int inet6_sk_rebuild_header ( s#sock * ) 
ipv6_opt_accepted extern int ipv6_opt_accepted ( s#sock * , s#sk_buff * ) 
inet6_init_real int inet6_init_real ( void ) 
inet6_exit_real void inet6_exit_real ( void ) 

/* net/ipv6/exthdrs.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ipv6_find_tlv extern int ipv6_find_tlv ( s#sk_buff * , int , int ) 
ipv6_push_nfrag_opts extern void ipv6_push_nfrag_opts ( s#sk_buff * , s#ipv6_txoptions * , t#u8 * , s#in6_addr * * ) 
ipv6_dup_options extern s#ipv6_txoptions * ipv6_dup_options ( s#sock * , s#ipv6_txoptions * ) 
fl6_update_dst extern s#in6_addr * fl6_update_dst ( s#flowi6 * , const s#ipv6_txoptions * , s#in6_addr * ) 

/* net/ipv6/exthdrs_core.o */
ipv6_ext_hdr extern int ipv6_ext_hdr ( t#u8 ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
ipv6_skip_exthdr extern int ipv6_skip_exthdr ( const s#sk_buff * , int , t#u8 * , t#__be16 * ) 

/* net/ipv6/icmp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
icmpv6_send extern void icmpv6_send ( s#sk_buff * , t#u8 , t#u8 , t#__u32 ) 
icmpv6_err_convert extern int icmpv6_err_convert ( t#u8 , t#u8 , int * ) 

/* net/ipv6/inet6_connection_sock.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
inet6_csk_bind_conflict extern int inet6_csk_bind_conflict ( const s#sock * , const s#inet_bind_bucket * , t#bool ) 
inet6_csk_search_req extern s#request_sock * inet6_csk_search_req ( const s#sock * , s#request_sock * * * , const t#__be16 , const s#in6_addr * , const s#in6_addr * , const int ) 
inet6_csk_reqsk_queue_hash_add extern void inet6_csk_reqsk_queue_hash_add ( s#sock * , s#request_sock * , const unsigned long ) 
inet6_csk_addr2sockaddr extern void inet6_csk_addr2sockaddr ( s#sock * , s#sockaddr * ) 
inet6_csk_xmit extern int inet6_csk_xmit ( s#sk_buff * , s#flowi * ) 

/* net/ipv6/inet6_hashtables.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
__inet6_hash extern int __inet6_hash ( s#sock * , s#inet_timewait_sock * ) 
__inet6_lookup_established extern s#sock * __inet6_lookup_established ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#u16 , const int ) 
inet6_lookup_listener extern s#sock * inet6_lookup_listener ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const unsigned short , const int ) 
inet6_lookup extern s#sock * inet6_lookup ( s#net * , s#inet_hashinfo * , const s#in6_addr * , const t#__be16 , const s#in6_addr * , const t#__be16 , const int ) 
inet6_hash_connect extern int inet6_hash_connect ( s#inet_timewait_death_row * , s#sock * ) 

/* net/ipv6/ip6_flowlabel.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
fl6_sock_lookup extern s#ip6_flowlabel * fl6_sock_lookup ( s#sock * , t#__be32 ) 

/* net/ipv6/ip6_output.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip6_local_out extern int ip6_local_out ( s#sk_buff * ) 
ip6_xmit extern int ip6_xmit ( s#sock * , s#sk_buff * , s#flowi6 * , s#ipv6_txoptions * ) 
ip6_dst_lookup extern int ip6_dst_lookup ( s#sock * , s#dst_entry * * , s#flowi6 * ) 
ip6_dst_lookup_flow extern s#dst_entry * ip6_dst_lookup_flow ( s#sock * , s#flowi6 * , const s#in6_addr * , t#bool ) 
ip6_sk_dst_lookup_flow extern s#dst_entry * ip6_sk_dst_lookup_flow ( s#sock * , s#flowi6 * , const s#in6_addr * , t#bool ) 

/* net/ipv6/ipv6_sockglue.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##raw_hashinfo
ipv6_setsockopt extern int ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
compat_ipv6_setsockopt extern int compat_ipv6_setsockopt ( s#sock * , int , int , char * , unsigned int ) 
ipv6_getsockopt extern int ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 
compat_ipv6_getsockopt extern int compat_ipv6_getsockopt ( s#sock * , int , int , char * , int * ) 

/* net/ipv6/ndisc.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
ndisc_mc_map extern int ndisc_mc_map ( const s#in6_addr * , char * , s#net_device * , int ) 
s#icmpv6_echo struct icmpv6_echo { t#__be16 identifier ; t#__be16 sequence ; } 
s#icmpv6_nd_advt struct icmpv6_nd_advt { t#__u32 router : 1 , solicited : 1 , override : 1 , reserved : 29 ; } 
s#icmpv6_nd_ra struct icmpv6_nd_ra { t#__u8 hop_limit ; t#__u8 managed : 1 , other : 1 , home_agent : 1 , router_pref : 2 , reserved : 3 ; t#__be16 rt_lifetime ; } 
s#icmp6hdr struct icmp6hdr { t#__u8 icmp6_type ; t#__u8 icmp6_code ; t#__sum16 icmp6_cksum ; union { t#__be32 un_data32 [ 1 ] ; t#__be16 un_data16 [ 2 ] ; t#__u8 un_data8 [ 4 ] ; s#icmpv6_echo u_echo ; s#icmpv6_nd_advt u_nd_advt ; s#icmpv6_nd_ra u_nd_ra ; } icmp6_dataun ; } 
ndisc_build_skb extern s#sk_buff * ndisc_build_skb ( s#net_device * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * , const s#in6_addr * , int ) 
ndisc_send_skb extern void ndisc_send_skb ( s#sk_buff * , s#net_device * , s#neighbour * , const s#in6_addr * , const s#in6_addr * , s#icmp6hdr * ) 

/* net/ipv6/netfilter.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ip6_route_me_harder extern int ip6_route_me_harder ( s#sk_buff * ) 
nf_ip6_checksum extern t#__sum16 nf_ip6_checksum ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) 

/* net/ipv6/netfilter/ip6_tables.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
ip6t_alloc_initial_table extern void * ip6t_alloc_initial_table ( const s#xt_table * ) 
s#ip6t_ip6 struct ip6t_ip6 { s#in6_addr src , dst ; s#in6_addr smsk , dmsk ; char iniface [ 16 ] , outiface [ 16 ] ; unsigned char iniface_mask [ 16 ] , outiface_mask [ 16 ] ; t#u_int16_t proto ; t#u_int8_t tos ; t#u_int8_t flags ; t#u_int8_t invflags ; } 
s#ip6t_entry struct ip6t_entry { s#ip6t_ip6 ipv6 ; unsigned int nfcache ; t#u_int16_t target_offset ; t#u_int16_t next_offset ; unsigned int comefrom ; s#xt_counters counters ; unsigned char elems [ 0 ] ; } 
s#ip6t_replace struct ip6t_replace { char name [ 32 ] ; unsigned int valid_hooks ; unsigned int num_entries ; unsigned int size ; unsigned int hook_entry [ E#NF_INET_NUMHOOKS ] ; unsigned int underflow [ E#NF_INET_NUMHOOKS ] ; unsigned int num_counters ; s#xt_counters * counters ; s#ip6t_entry entries [ 0 ] ; } 
ip6t_register_table extern s#xt_table * ip6t_register_table ( s#net * , const s#xt_table * , const s#ip6t_replace * ) 
ip6t_unregister_table extern void ip6t_unregister_table ( s#net * , s#xt_table * ) 
ip6t_do_table extern unsigned int ip6t_do_table ( s#sk_buff * , unsigned int , const s#net_device * , const s#net_device * , s#xt_table * ) 
ip6t_ext_hdr extern int ip6t_ext_hdr ( t#u8 ) 
ipv6_find_hdr extern int ipv6_find_hdr ( const s#sk_buff * , unsigned int * , int , unsigned short * , int * ) 

/* net/ipv6/netfilter/nf_defrag_ipv6_hooks.o */
nf_defrag_ipv6_enable extern void nf_defrag_ipv6_enable ( void ) 

/* net/ipv6/protocol.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#inet6_skb_parm struct inet6_skb_parm { int iif ; t#__u16 ra ; t#__u16 hop ; t#__u16 dst0 ; t#__u16 srcrt ; t#__u16 dst1 ; t#__u16 lastopt ; t#__u16 nhoff ; t#__u16 flags ; t#__u16 dsthao ; t#__u16 frag_max_size ; } 
s#inet6_protocol struct inet6_protocol { int ( * handler ) ( s#sk_buff * ) ; void ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; int ( * gso_send_check ) ( s#sk_buff * ) ; s#sk_buff * ( * gso_segment ) ( s#sk_buff * , t#u32 ) ; s#sk_buff * * ( * gro_receive ) ( s#sk_buff * * , s#sk_buff * ) ; int ( * gro_complete ) ( s#sk_buff * ) ; unsigned int flags ; } 
inet6_add_protocol extern int inet6_add_protocol ( const s#inet6_protocol * , unsigned char ) 
inet6_del_protocol extern int inet6_del_protocol ( const s#inet6_protocol * , unsigned char ) 

/* net/ipv6/raw.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
rawv6_mh_filter_register int rawv6_mh_filter_register ( int ( * ) ( s#sock * , s#sk_buff * ) ) 
rawv6_mh_filter_unregister int rawv6_mh_filter_unregister ( int ( * ) ( s#sock * , s#sk_buff * ) ) 

/* net/ipv6/reassembly.o */
inet6_hash_frag extern unsigned int inet6_hash_frag ( t#__be32 , const s#in6_addr * , const s#in6_addr * , t#u32 ) 
s##tvec_base
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##xfrm_state
s##rtable
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
ip6_frag_match int ip6_frag_match ( s#inet_frag_queue * , void * ) 
ip6_frag_init void ip6_frag_init ( s#inet_frag_queue * , void * ) 

/* net/ipv6/route.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##tvec_base
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##fib_info
s##dn_route
rt6_lookup extern s#rt6_info * rt6_lookup ( s#net * , const s#in6_addr * , const s#in6_addr * , int , int ) 
ip6_route_input extern void ip6_route_input ( s#sk_buff * ) 
ip6_route_output extern s#dst_entry * ip6_route_output ( s#net * , const s#sock * , s#flowi6 * ) 
ip6_dst_hoplimit extern int ip6_dst_hoplimit ( s#dst_entry * ) 

/* net/ipv6/sysctl_net_ipv6.o */
net_ipv6_ctl_path extern s#ctl_path net_ipv6_ctl_path [ ] 

/* net/ipv6/tunnel6.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#xfrm6_tunnel struct xfrm6_tunnel { int ( * handler ) ( s#sk_buff * ) ; int ( * err_handler ) ( s#sk_buff * , s#inet6_skb_parm * , t#u8 , t#u8 , int , t#__be32 ) ; s#xfrm6_tunnel * next ; int priority ; } 
xfrm6_tunnel_register extern int xfrm6_tunnel_register ( s#xfrm6_tunnel * , unsigned short ) 
xfrm6_tunnel_deregister extern int xfrm6_tunnel_deregister ( s#xfrm6_tunnel * , unsigned short ) 

/* net/ipv6/udp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
udp6_lib_lookup extern s#sock * udp6_lib_lookup ( s#net * , const s#in6_addr * , t#__be16 , const s#in6_addr * , t#__be16 , int ) 

/* net/ipv6/xfrm6_input.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm6_rcv_spi extern int xfrm6_rcv_spi ( s#sk_buff * , int , t#__be32 ) 
xfrm6_rcv extern int xfrm6_rcv ( s#sk_buff * ) 
xfrm6_input_addr extern int xfrm6_input_addr ( s#sk_buff * , t#xfrm_address_t * , t#xfrm_address_t * , t#u8 ) 

/* net/ipv6/xfrm6_output.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm6_find_1stfragopt extern int xfrm6_find_1stfragopt ( s#xfrm_state * , s#sk_buff * , t#u8 * * ) 
xfrm6_prepare_output extern int xfrm6_prepare_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/ipv6/xfrm6_tunnel.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
xfrm6_tunnel_spi_lookup extern t#__be32 xfrm6_tunnel_spi_lookup ( s#net * , const t#xfrm_address_t * ) 
xfrm6_tunnel_alloc_spi extern t#__be32 xfrm6_tunnel_alloc_spi ( s#net * , t#xfrm_address_t * ) 

/* net/l2tp/l2tp_core.o */
e#l2tp_encap_type enum l2tp_encap_type { L2TP_ENCAPTYPE_UDP , L2TP_ENCAPTYPE_IP , } 
s#l2tp_stats struct l2tp_stats { t#u64 tx_packets ; t#u64 tx_bytes ; t#u64 tx_errors ; t#u64 rx_packets ; t#u64 rx_bytes ; t#u64 rx_seq_discards ; t#u64 rx_oos_packets ; t#u64 rx_errors ; t#u64 rx_cookie_discards ; } 
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s#l2tp_tunnel struct l2tp_tunnel { int magic ; s#rcu_head rcu ; t#rwlock_t hlist_lock ; s#hlist_head session_hlist [ ( 1 << 4 ) ] ; t#u32 tunnel_id ; t#u32 peer_tunnel_id ; int version ; char name [ 20 ] ; int debug ; e#l2tp_encap_type encap ; s#l2tp_stats stats ; s#list_head list ; s#net * l2tp_net ; t#atomic_t ref_count ; void ( * show ) ( s#seq_file * , void * ) ; int ( * recv_payload_hook ) ( s#sk_buff * ) ; void ( * old_sk_destruct ) ( s#sock * ) ; s#sock * sock ; int fd ; t#uint8_t priv [ 0 ] ; } 
e#l2tp_pwtype enum l2tp_pwtype { L2TP_PWTYPE_NONE = 0x0000 , L2TP_PWTYPE_ETH_VLAN = 0x0004 , L2TP_PWTYPE_ETH = 0x0005 , L2TP_PWTYPE_PPP = 0x0007 , L2TP_PWTYPE_PPP_AC = 0x0008 , L2TP_PWTYPE_IP = 0x000b , __L2TP_PWTYPE_MAX } 
s#l2tp_session struct l2tp_session { int magic ; s#l2tp_tunnel * tunnel ; t#u32 session_id ; t#u32 peer_session_id ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u16 hdr_len ; t#u32 nr ; t#u32 ns ; s#sk_buff_head reorder_q ; s#hlist_node hlist ; t#atomic_t ref_count ; char name [ 32 ] ; char ifname [ 16 ] ; unsigned data_seq : 2 ; unsigned recv_seq : 1 ; unsigned send_seq : 1 ; unsigned lns_mode : 1 ; int debug ; int reorder_timeout ; int mtu ; int mru ; e#l2tp_pwtype pwtype ; s#l2tp_stats stats ; s#hlist_node global_hlist ; int ( * build_header ) ( s#l2tp_session * , void * ) ; void ( * recv_skb ) ( s#l2tp_session * , s#sk_buff * , int ) ; void ( * session_close ) ( s#l2tp_session * ) ; void ( * ref ) ( s#l2tp_session * ) ; void ( * deref ) ( s#l2tp_session * ) ; void ( * show ) ( s#seq_file * , void * ) ; t#uint8_t priv [ 0 ] ; } 
l2tp_session_find extern s#l2tp_session * l2tp_session_find ( s#net * , s#l2tp_tunnel * , t#u32 ) 
l2tp_session_find_nth extern s#l2tp_session * l2tp_session_find_nth ( s#l2tp_tunnel * , int ) 
l2tp_session_find_by_ifname extern s#l2tp_session * l2tp_session_find_by_ifname ( s#net * , char * ) 
l2tp_tunnel_find extern s#l2tp_tunnel * l2tp_tunnel_find ( s#net * , t#u32 ) 
l2tp_tunnel_find_nth extern s#l2tp_tunnel * l2tp_tunnel_find_nth ( s#net * , int ) 
l2tp_recv_common extern void l2tp_recv_common ( s#l2tp_session * , s#sk_buff * , unsigned char * , unsigned char * , t#u16 , int , int ( * ) ( s#sk_buff * ) ) 
l2tp_udp_encap_recv extern int l2tp_udp_encap_recv ( s#sock * , s#sk_buff * ) 
l2tp_xmit_skb extern int l2tp_xmit_skb ( s#l2tp_session * , s#sk_buff * , int ) 
s#l2tp_tunnel_cfg struct l2tp_tunnel_cfg { int debug ; e#l2tp_encap_type encap ; s#in_addr local_ip ; s#in_addr peer_ip ; t#u16 local_udp_port ; t#u16 peer_udp_port ; unsigned int use_udp_checksums : 1 ; } 
l2tp_tunnel_create extern int l2tp_tunnel_create ( s#net * , int , int , t#u32 , t#u32 , s#l2tp_tunnel_cfg * , s#l2tp_tunnel * * ) 
l2tp_tunnel_delete extern int l2tp_tunnel_delete ( s#l2tp_tunnel * ) 
l2tp_session_free extern void l2tp_session_free ( s#l2tp_session * ) 
l2tp_session_delete extern int l2tp_session_delete ( s#l2tp_session * ) 
s#l2tp_session_cfg struct l2tp_session_cfg { e#l2tp_pwtype pw_type ; unsigned data_seq : 2 ; unsigned recv_seq : 1 ; unsigned send_seq : 1 ; unsigned lns_mode : 1 ; int debug ; t#u16 vlan_id ; t#u16 offset ; t#u16 l2specific_len ; t#u16 l2specific_type ; t#u8 cookie [ 8 ] ; int cookie_len ; t#u8 peer_cookie [ 8 ] ; int peer_cookie_len ; int reorder_timeout ; int mtu ; int mru ; char * ifname ; } 
l2tp_session_create extern s#l2tp_session * l2tp_session_create ( int , s#l2tp_tunnel * , t#u32 , t#u32 , s#l2tp_session_cfg * ) 

/* net/l2tp/l2tp_netlink.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#l2tp_nl_cmd_ops struct l2tp_nl_cmd_ops { int ( * session_create ) ( s#net * , t#u32 , t#u32 , t#u32 , s#l2tp_session_cfg * ) ; int ( * session_delete ) ( s#l2tp_session * ) ; } 
l2tp_nl_register_ops extern int l2tp_nl_register_ops ( e#l2tp_pwtype , const s#l2tp_nl_cmd_ops * ) 
l2tp_nl_unregister_ops extern void l2tp_nl_unregister_ops ( e#l2tp_pwtype ) 

/* net/llc/llc_core.o */
llc_sap_list extern s#list_head llc_sap_list 
llc_sap_list_lock extern t#spinlock_t llc_sap_list_lock 
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_sap_find extern s#llc_sap * llc_sap_find ( unsigned char ) 
llc_sap_open extern s#llc_sap * llc_sap_open ( unsigned char , int ( * ) ( s#sk_buff * , s#net_device * , s#packet_type * , s#net_device * ) ) 
llc_sap_close extern void llc_sap_close ( s#llc_sap * ) 

/* net/llc/llc_input.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_add_pack extern void llc_add_pack ( int , void ( * ) ( s#llc_sap * , s#sk_buff * ) ) 
llc_remove_pack extern void llc_remove_pack ( int ) 
llc_set_station_handler extern void llc_set_station_handler ( void ( * ) ( s#sk_buff * ) ) 

/* net/llc/llc_output.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
llc_mac_hdr_init extern int llc_mac_hdr_init ( s#sk_buff * , const unsigned char * , const unsigned char * ) 
llc_build_and_send_ui_pkt extern int llc_build_and_send_ui_pkt ( s#llc_sap * , s#sk_buff * , unsigned char * , unsigned char ) 

/* net/mac80211/agg-tx.o */
ieee80211_start_tx_ba_session int ieee80211_start_tx_ba_session ( s#ieee80211_sta * , t#u16 , t#u16 ) 
ieee80211_start_tx_ba_cb_irqsafe void ieee80211_start_tx_ba_cb_irqsafe ( s#ieee80211_vif * , const t#u8 * , t#u16 ) 
ieee80211_stop_tx_ba_session int ieee80211_stop_tx_ba_session ( s#ieee80211_sta * , t#u16 ) 
ieee80211_stop_tx_ba_cb_irqsafe void ieee80211_stop_tx_ba_cb_irqsafe ( s#ieee80211_vif * , const t#u8 * , t#u16 ) 

/* net/mac80211/ht.o */
ieee80211_request_smps void ieee80211_request_smps ( s#ieee80211_vif * , e#ieee80211_smps_mode ) 

/* net/mac80211/key.o */
ieee80211_key_removed void ieee80211_key_removed ( s#ieee80211_key_conf * ) 

/* net/mac80211/led.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__ieee80211_get_radio_led_name extern char * __ieee80211_get_radio_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_assoc_led_name extern char * __ieee80211_get_assoc_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_tx_led_name extern char * __ieee80211_get_tx_led_name ( s#ieee80211_hw * ) 
__ieee80211_get_rx_led_name extern char * __ieee80211_get_rx_led_name ( s#ieee80211_hw * ) 
s#ieee80211_tpt_blink struct ieee80211_tpt_blink { int throughput ; int blink_time ; } 
__ieee80211_create_tpt_led_trigger extern char * __ieee80211_create_tpt_led_trigger ( s#ieee80211_hw * , unsigned int , const s#ieee80211_tpt_blink * , unsigned int ) 

/* net/mac80211/main.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_restart_hw void ieee80211_restart_hw ( s#ieee80211_hw * ) 
ieee80211_napi_schedule void ieee80211_napi_schedule ( s#ieee80211_hw * ) 
ieee80211_napi_complete void ieee80211_napi_complete ( s#ieee80211_hw * ) 
ieee80211_alloc_hw s#ieee80211_hw * ieee80211_alloc_hw ( t#size_t , const s#ieee80211_ops * ) 
ieee80211_register_hw int ieee80211_register_hw ( s#ieee80211_hw * ) 
ieee80211_unregister_hw void ieee80211_unregister_hw ( s#ieee80211_hw * ) 
ieee80211_free_hw void ieee80211_free_hw ( s#ieee80211_hw * ) 

/* net/mac80211/mlme.o */
ieee80211_chswitch_done void ieee80211_chswitch_done ( s#ieee80211_vif * , t#bool ) 
ieee80211_enable_dyn_ps void ieee80211_enable_dyn_ps ( s#ieee80211_vif * ) 
ieee80211_disable_dyn_ps void ieee80211_disable_dyn_ps ( s#ieee80211_vif * ) 
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
ieee80211_ap_probereq_get s#sk_buff * ieee80211_ap_probereq_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_beacon_loss void ieee80211_beacon_loss ( s#ieee80211_vif * ) 
ieee80211_connection_loss void ieee80211_connection_loss ( s#ieee80211_vif * ) 
e#nl80211_cqm_rssi_threshold_event enum nl80211_cqm_rssi_threshold_event { NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW , NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH , } 
ieee80211_cqm_rssi_notify void ieee80211_cqm_rssi_notify ( s#ieee80211_vif * , e#nl80211_cqm_rssi_threshold_event , t#gfp_t ) 

/* net/mac80211/offchannel.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_ready_on_channel void ieee80211_ready_on_channel ( s#ieee80211_hw * ) 
ieee80211_remain_on_channel_expired void ieee80211_remain_on_channel_expired ( s#ieee80211_hw * ) 

/* net/mac80211/rate.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#ieee80211_tx_rate_control struct ieee80211_tx_rate_control { s#ieee80211_hw * hw ; s#ieee80211_supported_band * sband ; s#ieee80211_bss_conf * bss_conf ; s#sk_buff * skb ; s#ieee80211_tx_rate reported_rate ; t#bool rts , short_preamble ; t#u8 max_rate_idx ; t#u32 rate_idx_mask ; t#bool bss ; } 
s#rate_control_ops struct rate_control_ops { s#module * module ; const char * name ; void * ( * alloc ) ( s#ieee80211_hw * , s#dentry * ) ; void ( * free ) ( void * ) ; void * ( * alloc_sta ) ( void * , s#ieee80211_sta * , t#gfp_t ) ; void ( * rate_init ) ( void * , s#ieee80211_supported_band * , s#ieee80211_sta * , void * ) ; void ( * rate_update ) ( void * , s#ieee80211_supported_band * , s#ieee80211_sta * , void * , t#u32 , e#nl80211_channel_type ) ; void ( * free_sta ) ( void * , s#ieee80211_sta * , void * ) ; void ( * tx_status ) ( void * , s#ieee80211_supported_band * , s#ieee80211_sta * , void * , s#sk_buff * ) ; void ( * get_rate ) ( void * , s#ieee80211_sta * , void * , s#ieee80211_tx_rate_control * ) ; void ( * add_sta_debugfs ) ( void * , void * , s#dentry * ) ; void ( * remove_sta_debugfs ) ( void * , void * ) ; } 
ieee80211_rate_control_register int ieee80211_rate_control_register ( s#rate_control_ops * ) 
ieee80211_rate_control_unregister void ieee80211_rate_control_unregister ( s#rate_control_ops * ) 
rate_control_send_low t#bool rate_control_send_low ( s#ieee80211_sta * , void * , s#ieee80211_tx_rate_control * ) 

/* net/mac80211/rx.o */
ieee80211_sta_ps_transition int ieee80211_sta_ps_transition ( s#ieee80211_sta * , t#bool ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_rx void ieee80211_rx ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_rx_irqsafe void ieee80211_rx_irqsafe ( s#ieee80211_hw * , s#sk_buff * ) 

/* net/mac80211/scan.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##qdisc_walker
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_scan_completed void ieee80211_scan_completed ( s#ieee80211_hw * , t#bool ) 
ieee80211_sched_scan_results void ieee80211_sched_scan_results ( s#ieee80211_hw * ) 
ieee80211_sched_scan_stopped void ieee80211_sched_scan_stopped ( s#ieee80211_hw * ) 

/* net/mac80211/sta_info.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_find_sta_by_ifaddr s#ieee80211_sta * ieee80211_find_sta_by_ifaddr ( s#ieee80211_hw * , const t#u8 * , const t#u8 * ) 
ieee80211_find_sta s#ieee80211_sta * ieee80211_find_sta ( s#ieee80211_vif * , const t#u8 * ) 
ieee80211_sta_block_awake void ieee80211_sta_block_awake ( s#ieee80211_hw * , s#ieee80211_sta * , t#bool ) 
ieee80211_sta_set_tim void ieee80211_sta_set_tim ( s#ieee80211_sta * ) 

/* net/mac80211/status.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ieee80211_tx_status_irqsafe void ieee80211_tx_status_irqsafe ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_tx_status void ieee80211_tx_status ( s#ieee80211_hw * , s#sk_buff * ) 
ieee80211_report_low_ack void ieee80211_report_low_ack ( s#ieee80211_sta * , t#u32 ) 

/* net/mac80211/tkip.o */
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
e#ieee80211_tkip_key_type enum ieee80211_tkip_key_type { IEEE80211_TKIP_P1_KEY , IEEE80211_TKIP_P2_KEY , } 
ieee80211_get_tkip_key void ieee80211_get_tkip_key ( s#ieee80211_key_conf * , s#sk_buff * , e#ieee80211_tkip_key_type , t#u8 * ) 

/* net/mac80211/tx.o */
s##sock
s##libipw_device
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##sec_path
ieee80211_beacon_get_tim s#sk_buff * ieee80211_beacon_get_tim ( s#ieee80211_hw * , s#ieee80211_vif * , t#u16 * , t#u16 * ) 
ieee80211_pspoll_get s#sk_buff * ieee80211_pspoll_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_nullfunc_get s#sk_buff * ieee80211_nullfunc_get ( s#ieee80211_hw * , s#ieee80211_vif * ) 
ieee80211_probereq_get s#sk_buff * ieee80211_probereq_get ( s#ieee80211_hw * , s#ieee80211_vif * , const t#u8 * , t#size_t , const t#u8 * , t#size_t ) 
s#ieee80211_rts struct ieee80211_rts { t#__le16 frame_control ; t#__le16 duration ; t#u8 ra [ 6 ] ; t#u8 ta [ 6 ] ; } 
ieee80211_rts_get void ieee80211_rts_get ( s#ieee80211_hw * , s#ieee80211_vif * , const void * , t#size_t , const s#ieee80211_tx_info * , s#ieee80211_rts * ) 
s#ieee80211_cts struct ieee80211_cts { t#__le16 frame_control ; t#__le16 duration ; t#u8 ra [ 6 ] ; } 
ieee80211_ctstoself_get void ieee80211_ctstoself_get ( s#ieee80211_hw * , s#ieee80211_vif * , const void * , t#size_t , const s#ieee80211_tx_info * , s#ieee80211_cts * ) 
ieee80211_get_buffered_bc s#sk_buff * ieee80211_get_buffered_bc ( s#ieee80211_hw * , s#ieee80211_vif * ) 

/* net/mac80211/util.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
wiphy_to_ieee80211_hw s#ieee80211_hw * wiphy_to_ieee80211_hw ( s#wiphy * ) 
ieee80211_generic_frame_duration t#__le16 ieee80211_generic_frame_duration ( s#ieee80211_hw * , s#ieee80211_vif * , t#size_t , s#ieee80211_rate * ) 
ieee80211_rts_duration t#__le16 ieee80211_rts_duration ( s#ieee80211_hw * , s#ieee80211_vif * , t#size_t , const s#ieee80211_tx_info * ) 
ieee80211_ctstoself_duration t#__le16 ieee80211_ctstoself_duration ( s#ieee80211_hw * , s#ieee80211_vif * , t#size_t , const s#ieee80211_tx_info * ) 
ieee80211_wake_queue void ieee80211_wake_queue ( s#ieee80211_hw * , int ) 
ieee80211_stop_queue void ieee80211_stop_queue ( s#ieee80211_hw * , int ) 
ieee80211_stop_queues void ieee80211_stop_queues ( s#ieee80211_hw * ) 
ieee80211_queue_stopped int ieee80211_queue_stopped ( s#ieee80211_hw * , int ) 
ieee80211_wake_queues void ieee80211_wake_queues ( s#ieee80211_hw * ) 
ieee80211_iterate_active_interfaces void ieee80211_iterate_active_interfaces ( s#ieee80211_hw * , void ( * ) ( void * , t#u8 * , s#ieee80211_vif * ) , void * ) 
ieee80211_iterate_active_interfaces_atomic void ieee80211_iterate_active_interfaces_atomic ( s#ieee80211_hw * , void ( * ) ( void * , t#u8 * , s#ieee80211_vif * ) , void * ) 
ieee80211_queue_work void ieee80211_queue_work ( s#ieee80211_hw * , s#work_struct * ) 
ieee80211_queue_delayed_work void ieee80211_queue_delayed_work ( s#ieee80211_hw * , s#delayed_work * , unsigned long ) 

/* net/netfilter/core.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##nf_queue_entry
s#nf_afinfo struct nf_afinfo { unsigned short family ; t#__sum16 ( * checksum ) ( s#sk_buff * , unsigned int , unsigned int , t#u_int8_t ) ; t#__sum16 ( * checksum_partial ) ( s#sk_buff * , unsigned int , unsigned int , unsigned int , t#u_int8_t ) ; int ( * route ) ( s#net * , s#dst_entry * * , s#flowi * , t#bool ) ; void ( * saveroute ) ( const s#sk_buff * , s#nf_queue_entry * ) ; int ( * reroute ) ( s#sk_buff * , const s#nf_queue_entry * ) ; int route_key_size ; } 
nf_afinfo extern const s#nf_afinfo * nf_afinfo [ E#NFPROTO_NUMPROTO ] 
s##nf_ipv6_ops
nf_ipv6_ops const s#nf_ipv6_ops * nf_ipv6_ops 
nf_register_afinfo extern int nf_register_afinfo ( const s#nf_afinfo * ) 
nf_unregister_afinfo extern void nf_unregister_afinfo ( const s#nf_afinfo * ) 
nf_hooks extern s#list_head nf_hooks [ E#NFPROTO_NUMPROTO ] [ 8 ] 
t#nf_hookfn typedef unsigned int nf_hookfn ( unsigned int , s#sk_buff * , const s#net_device * , const s#net_device * , int ( * ) ( s#sk_buff * ) ) 
s#nf_hook_ops struct nf_hook_ops { s#list_head list ; t#nf_hookfn * hook ; s#module * owner ; t#u_int8_t pf ; unsigned int hooknum ; int priority ; } 
nf_register_hook int nf_register_hook ( s#nf_hook_ops * ) 
nf_unregister_hook void nf_unregister_hook ( s#nf_hook_ops * ) 
nf_register_hooks int nf_register_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_unregister_hooks void nf_unregister_hooks ( s#nf_hook_ops * , unsigned int ) 
nf_hook_slow int nf_hook_slow ( t#u_int8_t , unsigned int , s#sk_buff * , s#net_device * , s#net_device * , int ( * ) ( s#sk_buff * ) , int ) 
skb_make_writable extern int skb_make_writable ( s#sk_buff * , unsigned int ) 
ip_ct_attach extern void ( * ip_ct_attach ) ( s#sk_buff * , s#sk_buff * ) 
nf_ct_attach extern void nf_ct_attach ( s#sk_buff * , s#sk_buff * ) 
nf_ct_destroy extern void ( * nf_ct_destroy ) ( s#nf_conntrack * ) 
nf_conntrack_destroy extern void nf_conntrack_destroy ( s#nf_conntrack * ) 
proc_net_netfilter extern s#proc_dir_entry * proc_net_netfilter 
nf_net_netfilter_sysctl_path extern s#ctl_path nf_net_netfilter_sysctl_path [ ] 

/* net/netfilter/ipset/ip_set_core.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
E#IPSET_ADT_MAX 3 
e#ipset_adt enum ipset_adt { IPSET_ADD , IPSET_DEL , IPSET_TEST , IPSET_ADT_MAX , IPSET_CREATE = E#IPSET_ADT_MAX , IPSET_CADT_MAX , } 
t#ipset_adtfn typedef int ( * ipset_adtfn ) ( s#ip_set * , void * , t#u32 , t#u32 ) 
s#ip_set_type_variant struct ip_set_type_variant { int ( * kadt ) ( s#ip_set * , const s#sk_buff * , e#ipset_adt , t#u8 , t#u8 , t#u8 ) ; int ( * uadt ) ( s#ip_set * , s#nlattr * [ ] , e#ipset_adt , t#u32 * , t#u32 , t#bool ) ; t#ipset_adtfn adt [ E#IPSET_ADT_MAX ] ; int ( * resize ) ( s#ip_set * , t#bool ) ; void ( * destroy ) ( s#ip_set * ) ; void ( * flush ) ( s#ip_set * ) ; void ( * expire ) ( s#ip_set * ) ; int ( * head ) ( s#ip_set * , s#sk_buff * ) ; int ( * list ) ( const s#ip_set * , s#sk_buff * , s#netlink_callback * ) ; t#bool ( * same_set ) ( const s#ip_set * , const s#ip_set * ) ; } 
s#ip_set struct ip_set { char name [ 32 ] ; t#rwlock_t lock ; t#u32 ref ; s#ip_set_type * type ; const s#ip_set_type_variant * variant ; t#u8 family ; void * data ; } 
E#__IPSET_ATTR_CREATE_MAX ( 16 ) + 11 
E#IPSET_ATTR_CADT_MAX 16 
E#__IPSET_ATTR_ADT_MAX ( E#IPSET_ATTR_CADT_MAX + 1 ) + 5 
s#ip_set_type struct ip_set_type { s#list_head list ; char name [ 32 ] ; t#u8 protocol ; t#u8 features ; t#u8 dimension ; t#u8 family ; t#u8 revision ; int ( * create ) ( s#ip_set * , s#nlattr * [ ] , t#u32 ) ; const s#nla_policy create_policy [ ( E#__IPSET_ATTR_CREATE_MAX - 1 ) + 1 ] ; const s#nla_policy adt_policy [ ( E#__IPSET_ATTR_ADT_MAX - 1 ) + 1 ] ; s#module * me ; } 
ip_set_type_register extern int ip_set_type_register ( s#ip_set_type * ) 
ip_set_type_unregister extern void ip_set_type_unregister ( s#ip_set_type * ) 
ip_set_alloc extern void * ip_set_alloc ( t#size_t ) 
ip_set_free extern void ip_set_free ( void * ) 
ip_set_get_ipaddr4 extern int ip_set_get_ipaddr4 ( s#nlattr * , t#__be32 * ) 
ip_set_get_ipaddr6 extern int ip_set_get_ipaddr6 ( s#nlattr * , u#nf_inet_addr * ) 
t#ip_set_id_t typedef t#u16 ip_set_id_t 
ip_set_test extern int ip_set_test ( t#ip_set_id_t , const s#sk_buff * , t#u8 , t#u8 , t#u8 ) 
ip_set_add extern int ip_set_add ( t#ip_set_id_t , const s#sk_buff * , t#u8 , t#u8 , t#u8 ) 
ip_set_del extern int ip_set_del ( t#ip_set_id_t , const s#sk_buff * , t#u8 , t#u8 , t#u8 ) 
ip_set_get_byname extern t#ip_set_id_t ip_set_get_byname ( const char * , s#ip_set * * ) 
ip_set_put_byindex extern void ip_set_put_byindex ( t#ip_set_id_t ) 
ip_set_name_byindex extern const char * ip_set_name_byindex ( t#ip_set_id_t ) 
ip_set_nfnl_get extern t#ip_set_id_t ip_set_nfnl_get ( const char * ) 
ip_set_nfnl_get_byindex extern t#ip_set_id_t ip_set_nfnl_get_byindex ( t#ip_set_id_t ) 
ip_set_nfnl_put extern void ip_set_nfnl_put ( t#ip_set_id_t ) 

/* net/netfilter/ipset/ip_set_getport.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
ip_set_get_ip4_port extern t#bool ip_set_get_ip4_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip6_port extern t#bool ip_set_get_ip6_port ( const s#sk_buff * , t#bool , t#__be16 * , t#u8 * ) 
ip_set_get_ip_port extern t#bool ip_set_get_ip_port ( const s#sk_buff * , t#u8 , t#bool , t#__be16 * ) 

/* net/netfilter/ipset/pfxlen.o */
ip_set_netmask_map extern const u#nf_inet_addr ip_set_netmask_map [ ] 
ip_set_hostmask_map extern const u#nf_inet_addr ip_set_hostmask_map [ ] 

/* net/netfilter/nf_conntrack_acct.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
seq_print_acct extern unsigned int seq_print_acct ( s#seq_file * , const s#nf_conn * , int ) 

/* net/netfilter/nf_conntrack_amanda.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_nat_amanda_hook extern unsigned int ( * nf_nat_amanda_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_broadcast.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##ip_mc_list
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_conntrack_broadcast_help extern int nf_conntrack_broadcast_help ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info , unsigned int ) 

/* net/netfilter/nf_conntrack_core.o */
s##tvec_base
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##net_generic
s##netns_ipvs
nfnetlink_parse_nat_setup_hook extern int ( * nfnetlink_parse_nat_setup_hook ) ( s#nf_conn * , e#nf_nat_manip_type , const s#nlattr * ) 
nf_conntrack_lock extern t#spinlock_t nf_conntrack_lock 
nf_conntrack_htable_size extern unsigned int nf_conntrack_htable_size 
nf_conntrack_max extern unsigned int nf_conntrack_max 
nf_conntrack_untracked extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#nf_conn ) nf_conntrack_untracked 
s#nf_conntrack_l3proto struct nf_conntrack_l3proto { t#u_int16_t l3proto ; const char * name ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * get_l4proto ) ( const s#sk_buff * , unsigned int , unsigned int * , t#u_int8_t * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; s#ctl_table_header * ctl_table_header ; s#ctl_path * ctl_table_path ; s#ctl_table * ctl_table ; s#module * me ; } 
s#nf_conntrack_l4proto struct nf_conntrack_l4proto { t#u_int16_t l3proto ; t#u_int8_t l4proto ; t#bool ( * pkt_to_tuple ) ( const s#sk_buff * , unsigned int , s#nf_conntrack_tuple * ) ; t#bool ( * invert_tuple ) ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) ; int ( * packet ) ( s#nf_conn * , const s#sk_buff * , unsigned int , e#ip_conntrack_info , t#u_int8_t , unsigned int ) ; t#bool ( * new ) ( s#nf_conn * , const s#sk_buff * , unsigned int ) ; void ( * destroy ) ( s#nf_conn * ) ; int ( * error ) ( s#net * , s#nf_conn * , s#sk_buff * , unsigned int , e#ip_conntrack_info * , t#u_int8_t , unsigned int ) ; int ( * print_tuple ) ( s#seq_file * , const s#nf_conntrack_tuple * ) ; int ( * print_conntrack ) ( s#seq_file * , s#nf_conn * ) ; int ( * to_nlattr ) ( s#sk_buff * , s#nlattr * , s#nf_conn * ) ; int ( * nlattr_size ) ( void ) ; int ( * from_nlattr ) ( s#nlattr * [ ] , s#nf_conn * ) ; int ( * tuple_to_nlattr ) ( s#sk_buff * , const s#nf_conntrack_tuple * ) ; int ( * nlattr_tuple_size ) ( void ) ; int ( * nlattr_to_tuple ) ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) ; const s#nla_policy * nla_policy ; t#size_t nla_size ; s#ctl_table_header * * ctl_table_header ; s#ctl_table * ctl_table ; unsigned int * ctl_table_users ; const char * name ; s#module * me ; } 
nf_ct_get_tuple extern t#bool nf_ct_get_tuple ( const s#sk_buff * , unsigned int , unsigned int , t#u_int16_t , t#u_int8_t , s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_get_tuplepr extern t#bool nf_ct_get_tuplepr ( const s#sk_buff * , unsigned int , t#u_int16_t , s#nf_conntrack_tuple * ) 
nf_ct_invert_tuple extern t#bool nf_ct_invert_tuple ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
nf_ct_delete_from_lists extern void nf_ct_delete_from_lists ( s#nf_conn * ) 
nf_ct_insert_dying_list extern void nf_ct_insert_dying_list ( s#nf_conn * ) 
__nf_conntrack_find extern s#nf_conntrack_tuple_hash * __nf_conntrack_find ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_conntrack_find_get extern s#nf_conntrack_tuple_hash * nf_conntrack_find_get ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_conntrack_hash_insert extern void nf_conntrack_hash_insert ( s#nf_conn * ) 
__nf_conntrack_confirm extern int __nf_conntrack_confirm ( s#sk_buff * ) 
nf_conntrack_tuple_taken extern int nf_conntrack_tuple_taken ( const s#nf_conntrack_tuple * , const s#nf_conn * ) 
nf_conntrack_alloc extern s#nf_conn * nf_conntrack_alloc ( s#net * , t#u16 , const s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * , t#gfp_t ) 
nf_conntrack_free extern void nf_conntrack_free ( s#nf_conn * ) 
nf_conntrack_in extern unsigned int nf_conntrack_in ( s#net * , t#u_int8_t , unsigned int , s#sk_buff * ) 
nf_ct_invert_tuplepr extern t#bool nf_ct_invert_tuplepr ( s#nf_conntrack_tuple * , const s#nf_conntrack_tuple * ) 
nf_conntrack_alter_reply extern void nf_conntrack_alter_reply ( s#nf_conn * , const s#nf_conntrack_tuple * ) 
__nf_ct_refresh_acct extern void __nf_ct_refresh_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , unsigned long , int ) 
__nf_ct_kill_acct extern t#bool __nf_ct_kill_acct ( s#nf_conn * , e#ip_conntrack_info , const s#sk_buff * , int ) 
nf_ct_port_tuple_to_nlattr extern int nf_ct_port_tuple_to_nlattr ( s#sk_buff * , const s#nf_conntrack_tuple * ) 
nf_ct_port_nla_policy extern const s#nla_policy nf_ct_port_nla_policy [ ] 
nf_ct_port_nlattr_to_tuple extern int nf_ct_port_nlattr_to_tuple ( s#nlattr * [ ] , s#nf_conntrack_tuple * ) 
nf_ct_port_nlattr_tuple_size extern int nf_ct_port_nlattr_tuple_size ( void ) 
nf_ct_iterate_cleanup extern void nf_ct_iterate_cleanup ( s#net * , int ( * ) ( s#nf_conn * , void * ) , void * ) 
nf_ct_free_hashtable extern void nf_ct_free_hashtable ( void * , unsigned int ) 
nf_conntrack_flush_report extern void nf_conntrack_flush_report ( s#net * , t#u32 , int ) 
nf_ct_alloc_hashtable extern void * nf_ct_alloc_hashtable ( unsigned int * , int ) 
nf_conntrack_set_hashsize extern int nf_conntrack_set_hashsize ( const char * , s#kernel_param * ) 
nf_ct_untracked_status_or extern void nf_ct_untracked_status_or ( unsigned long ) 
nf_ct_nat_offset extern t#s16 ( * nf_ct_nat_offset ) ( const s#nf_conn * , e#ip_conntrack_dir , t#u32 ) 

/* net/netfilter/nf_conntrack_ecache.o */
s##tvec_base
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_conntrack_helper
s##net_generic
s##netns_ipvs
nf_ct_deliver_cached_events extern void nf_ct_deliver_cached_events ( s#nf_conn * ) 
nf_conntrack_register_notifier extern int nf_conntrack_register_notifier ( s#net * , s#nf_ct_event_notifier * ) 
nf_conntrack_unregister_notifier extern void nf_conntrack_unregister_notifier ( s#net * , s#nf_ct_event_notifier * ) 
nf_ct_expect_register_notifier extern int nf_ct_expect_register_notifier ( s#net * , s#nf_exp_event_notifier * ) 
nf_ct_expect_unregister_notifier extern void nf_ct_expect_unregister_notifier ( s#net * , s#nf_exp_event_notifier * ) 

/* net/netfilter/nf_conntrack_expect.o */
nf_ct_expect_hsize extern unsigned int nf_ct_expect_hsize 
s##tvec_base
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##net_generic
s##netns_ipvs
nf_ct_unlink_expect_report void nf_ct_unlink_expect_report ( s#nf_conntrack_expect * , t#u32 , int ) 
__nf_ct_expect_find s#nf_conntrack_expect * __nf_ct_expect_find ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_ct_expect_find_get s#nf_conntrack_expect * nf_ct_expect_find_get ( s#net * , t#u16 , const s#nf_conntrack_tuple * ) 
nf_ct_remove_expectations void nf_ct_remove_expectations ( s#nf_conn * ) 
nf_ct_unexpect_related void nf_ct_unexpect_related ( s#nf_conntrack_expect * ) 
nf_ct_expect_alloc s#nf_conntrack_expect * nf_ct_expect_alloc ( s#nf_conn * ) 
nf_ct_expect_init void nf_ct_expect_init ( s#nf_conntrack_expect * , unsigned int , t#u_int8_t , const u#nf_inet_addr * , const u#nf_inet_addr * , t#u_int8_t , const t#__be16 * , const t#__be16 * ) 
nf_ct_expect_put void nf_ct_expect_put ( s#nf_conntrack_expect * ) 
nf_ct_expect_related_report int nf_ct_expect_related_report ( s#nf_conntrack_expect * , t#u32 , int ) 
nf_ct_remove_userspace_expectations void nf_ct_remove_userspace_expectations ( void ) 

/* net/netfilter/nf_conntrack_extend.o */
s##tvec_base
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__nf_ct_ext_destroy extern void __nf_ct_ext_destroy ( s#nf_conn * ) 
e#nf_ct_ext_id enum nf_ct_ext_id { NF_CT_EXT_HELPER , NF_CT_EXT_NAT , NF_CT_EXT_ACCT , NF_CT_EXT_ECACHE , NF_CT_EXT_ZONE , NF_CT_EXT_TSTAMP , NF_CT_EXT_NUM , } 
__nf_ct_ext_add void * __nf_ct_ext_add ( s#nf_conn * , e#nf_ct_ext_id , t#gfp_t ) 
s#nf_ct_ext_type struct nf_ct_ext_type { void ( * destroy ) ( s#nf_conn * ) ; void ( * move ) ( void * , void * ) ; e#nf_ct_ext_id id ; unsigned int flags ; t#u8 len ; t#u8 align ; t#u8 alloc_size ; } 
nf_ct_extend_register int nf_ct_extend_register ( s#nf_ct_ext_type * ) 
nf_ct_extend_unregister void nf_ct_extend_unregister ( s#nf_ct_ext_type * ) 

/* net/netfilter/nf_conntrack_ftp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
e#nf_ct_ftp_type enum nf_ct_ftp_type { NF_CT_FTP_PORT , NF_CT_FTP_PASV , NF_CT_FTP_EPRT , NF_CT_FTP_EPSV , } 
nf_nat_ftp_hook extern unsigned int ( * nf_nat_ftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , e#nf_ct_ftp_type , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_h323_main.o */
s##tvec_base
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##xfrm_state
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ebt_table
s##net_generic
s##netns_ipvs
s#TransportAddress_ipAddress struct TransportAddress_ipAddress { int options ; unsigned ip ; } 
t#TransportAddress_ipAddress typedef s#TransportAddress_ipAddress TransportAddress_ipAddress 
s#TransportAddress_ip6Address struct TransportAddress_ip6Address { int options ; unsigned ip ; } 
t#TransportAddress_ip6Address typedef s#TransportAddress_ip6Address TransportAddress_ip6Address 
s#TransportAddress struct TransportAddress { enum { eTransportAddress_ipAddress , eTransportAddress_ipSourceRoute , eTransportAddress_ipxAddress , eTransportAddress_ip6Address , eTransportAddress_netBios , eTransportAddress_nsap , eTransportAddress_nonStandardAddress , } choice ; union { t#TransportAddress_ipAddress ipAddress ; t#TransportAddress_ip6Address ip6Address ; } ; } 
t#TransportAddress typedef s#TransportAddress TransportAddress 
get_h225_addr extern int get_h225_addr ( s#nf_conn * , unsigned char * , t#TransportAddress * , u#nf_inet_addr * , t#__be16 * ) 
s#UnicastAddress_iPAddress struct UnicastAddress_iPAddress { int options ; unsigned network ; } 
t#UnicastAddress_iPAddress typedef s#UnicastAddress_iPAddress UnicastAddress_iPAddress 
s#UnicastAddress_iP6Address struct UnicastAddress_iP6Address { int options ; unsigned network ; } 
t#UnicastAddress_iP6Address typedef s#UnicastAddress_iP6Address UnicastAddress_iP6Address 
s#UnicastAddress struct UnicastAddress { enum { eUnicastAddress_iPAddress , eUnicastAddress_iPXAddress , eUnicastAddress_iP6Address , eUnicastAddress_netBios , eUnicastAddress_iPSourceRouteAddress , eUnicastAddress_nsap , eUnicastAddress_nonStandardAddress , } choice ; union { t#UnicastAddress_iPAddress iPAddress ; t#UnicastAddress_iP6Address iP6Address ; } ; } 
t#UnicastAddress typedef s#UnicastAddress UnicastAddress 
s#H245_TransportAddress struct H245_TransportAddress { enum { eH245_TransportAddress_unicastAddress , eH245_TransportAddress_multicastAddress , } choice ; union { t#UnicastAddress unicastAddress ; } ; } 
t#H245_TransportAddress typedef s#H245_TransportAddress H245_TransportAddress 
set_h245_addr_hook extern int ( * set_h245_addr_hook ) ( s#sk_buff * , unsigned char * * , int , t#H245_TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_h225_addr_hook extern int ( * set_h225_addr_hook ) ( s#sk_buff * , unsigned char * * , int , t#TransportAddress * , u#nf_inet_addr * , t#__be16 ) 
set_sig_addr_hook extern int ( * set_sig_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int ) 
set_ras_addr_hook extern int ( * set_ras_addr_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int ) 
nat_rtp_rtcp_hook extern int ( * nat_rtp_rtcp_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , t#__be16 , s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nat_t120_hook extern int ( * nat_t120_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#H245_TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_h245_hook extern int ( * nat_h245_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_callforwarding_hook extern int ( * nat_callforwarding_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , int , t#TransportAddress * , t#__be16 , s#nf_conntrack_expect * ) 
nat_q931_hook extern int ( * nat_q931_hook ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , unsigned char * * , t#TransportAddress * , int , t#__be16 , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_helper.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
__nf_conntrack_helper_find extern s#nf_conntrack_helper * __nf_conntrack_helper_find ( const char * , t#u16 , t#u8 ) 
nf_conntrack_helper_try_module_get extern s#nf_conntrack_helper * nf_conntrack_helper_try_module_get ( const char * , t#u16 , t#u8 ) 
s#nf_ct_ftp_master struct nf_ct_ftp_master { t#u_int32_t seq_aft_nl [ E#IP_CT_DIR_MAX ] [ 2 ] ; int seq_aft_nl_num [ E#IP_CT_DIR_MAX ] ; } 
e#pptp_ctrlsess_state enum pptp_ctrlsess_state { PPTP_SESSION_NONE , PPTP_SESSION_ERROR , PPTP_SESSION_STOPREQ , PPTP_SESSION_REQUESTED , PPTP_SESSION_CONFIRMED , } 
e#pptp_ctrlcall_state enum pptp_ctrlcall_state { PPTP_CALL_NONE , PPTP_CALL_ERROR , PPTP_CALL_OUT_REQ , PPTP_CALL_OUT_CONF , PPTP_CALL_IN_REQ , PPTP_CALL_IN_REP , PPTP_CALL_IN_CONF , PPTP_CALL_CLEAR_REQ , } 
s#nf_ct_gre_keymap struct nf_ct_gre_keymap { s#list_head list ; s#nf_conntrack_tuple tuple ; } 
s#nf_ct_pptp_master struct nf_ct_pptp_master { e#pptp_ctrlsess_state sstate ; e#pptp_ctrlcall_state cstate ; t#__be16 pac_call_id ; t#__be16 pns_call_id ; s#nf_ct_gre_keymap * keymap [ E#IP_CT_DIR_MAX ] ; } 
s#nf_ct_h323_master struct nf_ct_h323_master { t#__be16 sig_port [ E#IP_CT_DIR_MAX ] ; t#__be16 rtp_port [ 4 ] [ E#IP_CT_DIR_MAX ] ; union { t#u_int32_t timeout ; t#u_int16_t tpkt_len [ E#IP_CT_DIR_MAX ] ; } ; } 
e#sane_state enum sane_state { SANE_STATE_NORMAL , SANE_STATE_START_REQUESTED , } 
s#nf_ct_sane_master struct nf_ct_sane_master { e#sane_state state ; } 
s#nf_ct_sip_master struct nf_ct_sip_master { unsigned int register_cseq ; unsigned int invite_cseq ; } 
u#nf_conntrack_help union nf_conntrack_help { s#nf_ct_ftp_master ct_ftp_info ; s#nf_ct_pptp_master ct_pptp_info ; s#nf_ct_h323_master ct_h323_info ; s#nf_ct_sane_master ct_sane_info ; s#nf_ct_sip_master ct_sip_info ; } 
s#nf_conn_help struct nf_conn_help { s#nf_conntrack_helper * helper ; u#nf_conntrack_help help ; s#hlist_head expectations ; t#u8 expecting [ 4 ] ; } 
nf_ct_helper_ext_add extern s#nf_conn_help * nf_ct_helper_ext_add ( s#nf_conn * , t#gfp_t ) 
__nf_ct_try_assign_helper extern int __nf_ct_try_assign_helper ( s#nf_conn * , s#nf_conn * , t#gfp_t ) 
nf_conntrack_helper_register extern int nf_conntrack_helper_register ( s#nf_conntrack_helper * ) 
nf_conntrack_helper_unregister extern void nf_conntrack_helper_unregister ( s#nf_conntrack_helper * ) 

/* net/netfilter/nf_conntrack_irc.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_nat_irc_hook extern unsigned int ( * nf_nat_irc_hook ) ( s#sk_buff * , e#ip_conntrack_info , unsigned int , unsigned int , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_conntrack_l3proto_generic.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##nf_conntrack_helper
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_conntrack_l3proto_generic extern s#nf_conntrack_l3proto nf_conntrack_l3proto_generic 

/* net/netfilter/nf_conntrack_pptp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#PptpControlHeader struct PptpControlHeader { t#__be16 messageType ; t#__u16 reserved ; } 
s#PptpStartSessionRequest struct PptpStartSessionRequest { t#__be16 protocolVersion ; t#__u16 reserved1 ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStartSessionReply struct PptpStartSessionReply { t#__be16 protocolVersion ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be32 framingCapability ; t#__be32 bearerCapability ; t#__be16 maxChannels ; t#__be16 firmwareRevision ; t#__u8 hostName [ 64 ] ; t#__u8 vendorString [ 64 ] ; } 
s#PptpStopSessionRequest struct PptpStopSessionRequest { t#__u8 reason ; t#__u8 reserved1 ; t#__u16 reserved2 ; } 
s#PptpStopSessionReply struct PptpStopSessionReply { t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__u16 reserved1 ; } 
s#PptpOutCallRequest struct PptpOutCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 minBPS ; t#__be32 maxBPS ; t#__be32 bearerType ; t#__be32 framingType ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be16 phoneNumberLength ; t#__u16 reserved1 ; t#__u8 phoneNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpOutCallReply struct PptpOutCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 physChannelID ; } 
s#PptpInCallRequest struct PptpInCallRequest { t#__be16 callID ; t#__be16 callSerialNumber ; t#__be32 callBearerType ; t#__be32 physChannelID ; t#__be16 dialedNumberLength ; t#__be16 dialingNumberLength ; t#__u8 dialedNumber [ 64 ] ; t#__u8 dialingNumber [ 64 ] ; t#__u8 subAddress [ 64 ] ; } 
s#PptpInCallReply struct PptpInCallReply { t#__be16 callID ; t#__be16 peersCallID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__u16 reserved ; } 
s#PptpInCallConnected struct PptpInCallConnected { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 connectSpeed ; t#__be16 packetWindow ; t#__be16 packetProcDelay ; t#__be32 callFramingType ; } 
s#PptpClearCallRequest struct PptpClearCallRequest { t#__be16 callID ; t#__u16 reserved ; } 
s#PptpCallDisconnectNotify struct PptpCallDisconnectNotify { t#__be16 callID ; t#__u8 resultCode ; t#__u8 generalErrorCode ; t#__be16 causeCode ; t#__u16 reserved ; t#__u8 callStatistics [ 128 ] ; } 
s#PptpWanErrorNotify struct PptpWanErrorNotify { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 crcErrors ; t#__be32 framingErrors ; t#__be32 hardwareOverRuns ; t#__be32 bufferOverRuns ; t#__be32 timeoutErrors ; t#__be32 alignmentErrors ; } 
s#PptpSetLinkInfo struct PptpSetLinkInfo { t#__be16 peersCallID ; t#__u16 reserved ; t#__be32 sendAccm ; t#__be32 recvAccm ; } 
u#pptp_ctrl_union union pptp_ctrl_union { s#PptpStartSessionRequest sreq ; s#PptpStartSessionReply srep ; s#PptpStopSessionRequest streq ; s#PptpStopSessionReply strep ; s#PptpOutCallRequest ocreq ; s#PptpOutCallReply ocack ; s#PptpInCallRequest icreq ; s#PptpInCallReply icack ; s#PptpInCallConnected iccon ; s#PptpClearCallRequest clrreq ; s#PptpCallDisconnectNotify disc ; s#PptpWanErrorNotify wanerr ; s#PptpSetLinkInfo setlink ; } 
nf_nat_pptp_hook_outbound extern int ( * nf_nat_pptp_hook_outbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_inbound extern int ( * nf_nat_pptp_hook_inbound ) ( s#sk_buff * , s#nf_conn * , e#ip_conntrack_info , s#PptpControlHeader * , u#pptp_ctrl_union * ) 
nf_nat_pptp_hook_exp_gre extern void ( * nf_nat_pptp_hook_exp_gre ) ( s#nf_conntrack_expect * , s#nf_conntrack_expect * ) 
nf_nat_pptp_hook_expectfn extern void ( * nf_nat_pptp_hook_expectfn ) ( s#nf_conn * , s#nf_conntrack_expect * ) 
pptp_msg_name extern const char * const pptp_msg_name [ ] 

/* net/netfilter/nf_conntrack_proto.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_conntrack_helper
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
nf_ct_l3protos extern s#nf_conntrack_l3proto * nf_ct_l3protos [ 39 ] 
__nf_ct_l4proto_find extern s#nf_conntrack_l4proto * __nf_ct_l4proto_find ( t#u_int16_t , t#u_int8_t ) 
nf_ct_l3proto_find_get extern s#nf_conntrack_l3proto * nf_ct_l3proto_find_get ( t#u_int16_t ) 
nf_ct_l3proto_put extern void nf_ct_l3proto_put ( s#nf_conntrack_l3proto * ) 
nf_ct_l3proto_try_module_get extern int nf_ct_l3proto_try_module_get ( unsigned short ) 
nf_ct_l3proto_module_put extern void nf_ct_l3proto_module_put ( unsigned short ) 
nf_conntrack_l3proto_register extern int nf_conntrack_l3proto_register ( s#nf_conntrack_l3proto * ) 
nf_conntrack_l3proto_unregister extern void nf_conntrack_l3proto_unregister ( s#nf_conntrack_l3proto * ) 
nf_conntrack_l4proto_register extern int nf_conntrack_l4proto_register ( s#nf_conntrack_l4proto * ) 
nf_conntrack_l4proto_unregister extern void nf_conntrack_l4proto_unregister ( s#nf_conntrack_l4proto * ) 

/* net/netfilter/nf_conntrack_proto_gre.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##iw_handler_def
s##iw_public_data
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##netns_ipvs
nf_ct_gre_keymap_flush extern void nf_ct_gre_keymap_flush ( s#net * ) 
nf_ct_gre_keymap_add int nf_ct_gre_keymap_add ( s#nf_conn * , e#ip_conntrack_dir , s#nf_conntrack_tuple * ) 
nf_ct_gre_keymap_destroy void nf_ct_gre_keymap_destroy ( s#nf_conn * ) 

/* net/netfilter/nf_conntrack_proto_tcp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##nf_conntrack_helper
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_tcp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp4 
nf_conntrack_l4proto_tcp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_tcp6 

/* net/netfilter/nf_conntrack_proto_udp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##nf_conntrack_helper
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_conntrack_l4proto_udp4 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp4 
nf_conntrack_l4proto_udp6 extern s#nf_conntrack_l4proto nf_conntrack_l4proto_udp6 

/* net/netfilter/nf_conntrack_sip.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_nat_sip_hook extern unsigned int ( * nf_nat_sip_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * ) 
nf_nat_sip_seq_adjust_hook extern void ( * nf_nat_sip_seq_adjust_hook ) ( s#sk_buff * , t#s16 ) 
nf_nat_sip_expect_hook extern unsigned int ( * nf_nat_sip_expect_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , unsigned int , unsigned int ) 
e#sdp_header_types enum sdp_header_types { SDP_HDR_UNSPEC , SDP_HDR_VERSION , SDP_HDR_OWNER_IP4 , SDP_HDR_CONNECTION_IP4 , SDP_HDR_OWNER_IP6 , SDP_HDR_CONNECTION_IP6 , SDP_HDR_MEDIA , } 
nf_nat_sdp_addr_hook extern unsigned int ( * nf_nat_sdp_addr_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * , unsigned int , e#sdp_header_types , e#sdp_header_types , const u#nf_inet_addr * ) 
nf_nat_sdp_port_hook extern unsigned int ( * nf_nat_sdp_port_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * , unsigned int , unsigned int , t#u_int16_t ) 
nf_nat_sdp_session_hook extern unsigned int ( * nf_nat_sdp_session_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * , unsigned int , const u#nf_inet_addr * ) 
nf_nat_sdp_media_hook extern unsigned int ( * nf_nat_sdp_media_hook ) ( s#sk_buff * , unsigned int , const char * * , unsigned int * , s#nf_conntrack_expect * , s#nf_conntrack_expect * , unsigned int , unsigned int , u#nf_inet_addr * ) 
ct_sip_parse_request extern int ct_sip_parse_request ( const s#nf_conn * , const char * , unsigned int , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
e#sip_header_types enum sip_header_types { SIP_HDR_CSEQ , SIP_HDR_FROM , SIP_HDR_TO , SIP_HDR_CONTACT , SIP_HDR_VIA_UDP , SIP_HDR_VIA_TCP , SIP_HDR_EXPIRES , SIP_HDR_CONTENT_LENGTH , SIP_HDR_CALL_ID , } 
ct_sip_get_header extern int ct_sip_get_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sip_header_types , unsigned int * , unsigned int * ) 
ct_sip_parse_header_uri extern int ct_sip_parse_header_uri ( const s#nf_conn * , const char * , unsigned int * , unsigned int , e#sip_header_types , int * , unsigned int * , unsigned int * , u#nf_inet_addr * , t#__be16 * ) 
ct_sip_parse_address_param extern int ct_sip_parse_address_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , u#nf_inet_addr * ) 
ct_sip_parse_numerical_param extern int ct_sip_parse_numerical_param ( const s#nf_conn * , const char * , unsigned int , unsigned int , const char * , unsigned int * , unsigned int * , unsigned int * ) 
ct_sip_get_sdp_header extern int ct_sip_get_sdp_header ( const s#nf_conn * , const char * , unsigned int , unsigned int , e#sdp_header_types , e#sdp_header_types , unsigned int * , unsigned int * ) 

/* net/netfilter/nf_conntrack_snmp.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
nf_nat_snmp_hook int ( * nf_nat_snmp_hook ) ( s#sk_buff * , unsigned int , s#nf_conn * , e#ip_conntrack_info ) 

/* net/netfilter/nf_conntrack_standalone.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
print_tuple int print_tuple ( s#seq_file * , const s#nf_conntrack_tuple * , const s#nf_conntrack_l3proto * , const s#nf_conntrack_l4proto * ) 
need_conntrack extern void need_conntrack ( void ) 

/* net/netfilter/nf_conntrack_tftp.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_nat_tftp_hook extern unsigned int ( * nf_nat_tftp_hook ) ( s#sk_buff * , e#ip_conntrack_info , s#nf_conntrack_expect * ) 

/* net/netfilter/nf_log.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#nf_loginfo struct nf_loginfo { t#u_int8_t type ; union { struct { t#u_int32_t copy_len ; t#u_int16_t group ; t#u_int16_t qthreshold ; } ulog ; struct { t#u_int8_t level ; t#u_int8_t logflags ; } log ; } u ; } 
t#nf_logfn typedef void nf_logfn ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 
s#nf_logger struct nf_logger { s#module * me ; t#nf_logfn * logfn ; char * name ; s#list_head list [ E#NFPROTO_NUMPROTO ] ; } 
nf_log_register int nf_log_register ( t#u_int8_t , s#nf_logger * ) 
nf_log_unregister void nf_log_unregister ( s#nf_logger * ) 
nf_log_bind_pf int nf_log_bind_pf ( t#u_int8_t , const s#nf_logger * ) 
nf_log_unbind_pf void nf_log_unbind_pf ( t#u_int8_t ) 
nf_log_packet void nf_log_packet ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * , ... ) 

/* net/netfilter/nf_queue.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#nf_queue_entry struct nf_queue_entry { s#list_head list ; s#sk_buff * skb ; unsigned int id ; s#nf_hook_ops * elem ; t#u_int8_t pf ; unsigned int hook ; s#net_device * indev ; s#net_device * outdev ; int ( * okfn ) ( s#sk_buff * ) ; } 
s#nf_queue_handler struct nf_queue_handler { int ( * outfn ) ( s#nf_queue_entry * , unsigned int ) ; char * name ; } 
nf_register_queue_handler extern int nf_register_queue_handler ( t#u_int8_t , const s#nf_queue_handler * ) 
nf_unregister_queue_handler extern int nf_unregister_queue_handler ( t#u_int8_t , const s#nf_queue_handler * ) 
nf_unregister_queue_handlers extern void nf_unregister_queue_handlers ( const s#nf_queue_handler * ) 
nf_reinject extern void nf_reinject ( s#nf_queue_entry * , unsigned int ) 

/* net/netfilter/nf_sockopt.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nf_sockopt_ops struct nf_sockopt_ops { s#list_head list ; t#u_int8_t pf ; int set_optmin ; int set_optmax ; int ( * set ) ( s#sock * , int , void * , unsigned int ) ; int ( * compat_set ) ( s#sock * , int , void * , unsigned int ) ; int get_optmin ; int get_optmax ; int ( * get ) ( s#sock * , int , void * , int * ) ; int ( * compat_get ) ( s#sock * , int , void * , int * ) ; s#module * owner ; } 
nf_register_sockopt int nf_register_sockopt ( s#nf_sockopt_ops * ) 
nf_unregister_sockopt void nf_unregister_sockopt ( s#nf_sockopt_ops * ) 
nf_setsockopt int nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
nf_getsockopt int nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 
compat_nf_setsockopt int compat_nf_setsockopt ( s#sock * , t#u_int8_t , int , char * , unsigned int ) 
compat_nf_getsockopt int compat_nf_getsockopt ( s#sock * , t#u_int8_t , int , char * , int * ) 

/* net/netfilter/nf_tproxy_core.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nf_tproxy_assign_sock void nf_tproxy_assign_sock ( s#sk_buff * , s#sock * ) 

/* net/netfilter/nfnetlink.o */
nfnl_lock extern void nfnl_lock ( void ) 
nfnl_unlock extern void nfnl_unlock ( void ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#nfnl_callback struct nfnl_callback { int ( * call ) ( s#sock * , s#sk_buff * , const s#nlmsghdr * , const s#nlattr * const [ ] ) ; const s#nla_policy * policy ; const t#u_int16_t attr_count ; } 
s#nfnetlink_subsystem struct nfnetlink_subsystem { const char * name ; t#__u8 subsys_id ; t#__u8 cb_count ; const s#nfnl_callback * cb ; } 
nfnetlink_subsys_register extern int nfnetlink_subsys_register ( const s#nfnetlink_subsystem * ) 
nfnetlink_subsys_unregister extern int nfnetlink_subsys_unregister ( const s#nfnetlink_subsystem * ) 
nfnetlink_has_listeners extern int nfnetlink_has_listeners ( s#net * , unsigned int ) 
nfnetlink_send extern int nfnetlink_send ( s#sk_buff * , s#net * , t#u32 , unsigned , int , t#gfp_t ) 
nfnetlink_set_err extern int nfnetlink_set_err ( s#net * , t#u32 , t#u32 , int ) 
nfnetlink_unicast extern int nfnetlink_unicast ( s#sk_buff * , s#net * , t#u_int32_t , int ) 

/* net/netfilter/nfnetlink_log.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
nfulnl_log_packet void nfulnl_log_packet ( t#u_int8_t , unsigned int , const s#sk_buff * , const s#net_device * , const s#net_device * , const s#nf_loginfo * , const char * ) 

/* net/netfilter/x_tables.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#xt_mtchk_param struct xt_mtchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_match * match ; void * matchinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_mtdtor_param struct xt_mtdtor_param { s#net * net ; const s#xt_match * match ; void * matchinfo ; t#u_int8_t family ; } 
s#xt_match struct xt_match { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; t#bool ( * match ) ( const s#sk_buff * , s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_mtchk_param * ) ; void ( * destroy ) ( const s#xt_mtdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int matchsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
s#xt_action_param struct xt_action_param { union { const s#xt_match * match ; const s#xt_target * target ; } ; union { const void * matchinfo , * targinfo ; } ; const s#net_device * in , * out ; int fragoff ; unsigned int thoff ; unsigned int hooknum ; t#u_int8_t family ; t#bool hotdrop ; } 
s#xt_tgchk_param struct xt_tgchk_param { s#net * net ; const char * table ; const void * entryinfo ; const s#xt_target * target ; void * targinfo ; unsigned int hook_mask ; t#u_int8_t family ; } 
s#xt_tgdtor_param struct xt_tgdtor_param { s#net * net ; const s#xt_target * target ; void * targinfo ; t#u_int8_t family ; } 
s#xt_target struct xt_target { s#list_head list ; const char name [ 29 ] ; t#u_int8_t revision ; unsigned int ( * target ) ( s#sk_buff * , const s#xt_action_param * ) ; int ( * checkentry ) ( const s#xt_tgchk_param * ) ; void ( * destroy ) ( const s#xt_tgdtor_param * ) ; void ( * compat_from_user ) ( void * , const void * ) ; int ( * compat_to_user ) ( void * , const void * ) ; s#module * me ; const char * table ; unsigned int targetsize ; unsigned int compatsize ; unsigned int hooks ; unsigned short proto ; unsigned short family ; } 
xt_register_target extern int xt_register_target ( s#xt_target * ) 
xt_unregister_target extern void xt_unregister_target ( s#xt_target * ) 
xt_register_targets extern int xt_register_targets ( s#xt_target * , unsigned int ) 
xt_unregister_targets extern void xt_unregister_targets ( s#xt_target * , unsigned int ) 
xt_register_match extern int xt_register_match ( s#xt_match * ) 
xt_unregister_match extern void xt_unregister_match ( s#xt_match * ) 
xt_register_matches extern int xt_register_matches ( s#xt_match * , unsigned int ) 
xt_unregister_matches extern void xt_unregister_matches ( s#xt_match * , unsigned int ) 
xt_find_match extern s#xt_match * xt_find_match ( t#u8 , const char * , t#u8 ) 
xt_request_find_match extern s#xt_match * xt_request_find_match ( t#u8 , const char * , t#u8 ) 
xt_find_target extern s#xt_target * xt_find_target ( t#u8 , const char * , t#u8 ) 
xt_request_find_target extern s#xt_target * xt_request_find_target ( t#u8 , const char * , t#u8 ) 
xt_find_revision extern int xt_find_revision ( t#u8 , const char * , t#u8 , int , int * ) 
xt_check_match extern int xt_check_match ( s#xt_mtchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_add_offset extern int xt_compat_add_offset ( t#u_int8_t , unsigned int , int ) 
xt_compat_flush_offsets extern void xt_compat_flush_offsets ( t#u_int8_t ) 
xt_compat_calc_jump extern int xt_compat_calc_jump ( t#u_int8_t , unsigned int ) 
xt_compat_init_offsets extern void xt_compat_init_offsets ( t#u_int8_t , unsigned int ) 
xt_compat_match_offset extern int xt_compat_match_offset ( const s#xt_match * ) 
s#xt_entry_match struct xt_entry_match { union { struct { t#__u16 match_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 match_size ; s#xt_match * match ; } kernel ; t#__u16 match_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_match_from_user extern int xt_compat_match_from_user ( s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_match_to_user extern int xt_compat_match_to_user ( const s#xt_entry_match * , void * * , unsigned int * ) 
xt_compat_check_entry_offsets int xt_compat_check_entry_offsets ( const void * , const char * , unsigned int , unsigned int ) 
xt_check_entry_offsets int xt_check_entry_offsets ( const void * , const char * , unsigned int , unsigned int ) 
xt_alloc_entry_offsets unsigned int * xt_alloc_entry_offsets ( unsigned int ) 
xt_free_entry_offsets void xt_free_entry_offsets ( int * ) 
xt_find_jump_offset t#bool xt_find_jump_offset ( const unsigned int * , unsigned int , unsigned int ) 
xt_check_target extern int xt_check_target ( s#xt_tgchk_param * , unsigned int , t#u_int8_t , t#bool ) 
xt_compat_target_offset extern int xt_compat_target_offset ( const s#xt_target * ) 
s#xt_entry_target struct xt_entry_target { union { struct { t#__u16 target_size ; char name [ 29 ] ; t#__u8 revision ; } user ; struct { t#__u16 target_size ; s#xt_target * target ; } kernel ; t#__u16 target_size ; } u ; unsigned char data [ 0 ] ; } 
xt_compat_target_from_user extern void xt_compat_target_from_user ( s#xt_entry_target * , void * * , unsigned int * ) 
xt_compat_target_to_user extern int xt_compat_target_to_user ( const s#xt_entry_target * , void * * , unsigned int * ) 
xt_alloc_table_info extern s#xt_table_info * xt_alloc_table_info ( unsigned int ) 
xt_free_table_info extern void xt_free_table_info ( s#xt_table_info * ) 
xt_find_table_lock extern s#xt_table * xt_find_table_lock ( s#net * , t#u_int8_t , const char * ) 
xt_table_unlock extern void xt_table_unlock ( s#xt_table * ) 
xt_compat_lock extern void xt_compat_lock ( t#u_int8_t ) 
xt_compat_unlock extern void xt_compat_unlock ( t#u_int8_t ) 
xt_recseq extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( t#seqcount_t ) xt_recseq 
xt_replace_table extern s#xt_table_info * xt_replace_table ( s#xt_table * , unsigned int , s#xt_table_info * , int * ) 
xt_register_table extern s#xt_table * xt_register_table ( s#net * , const s#xt_table * , s#xt_table_info * , s#xt_table_info * ) 
xt_unregister_table extern void * xt_unregister_table ( s#xt_table * ) 
xt_hook_link extern s#nf_hook_ops * xt_hook_link ( const s#xt_table * , t#nf_hookfn * ) 
xt_hook_unlink extern void xt_hook_unlink ( const s#xt_table * , s#nf_hook_ops * ) 
xt_proto_init extern int xt_proto_init ( s#net * , t#u_int8_t ) 
xt_proto_fini extern void xt_proto_fini ( s#net * , t#u_int8_t ) 

/* net/netfilter/xt_RATEEST.o */
s#gnet_estimator struct gnet_estimator { signed char interval ; unsigned char ewma_log ; } 
s#xt_rateest struct xt_rateest { s#gnet_stats_basic_packed bstats ; t#spinlock_t lock ; s#gnet_stats_rate_est rstats ; s#hlist_node list ; char name [ 16 ] ; unsigned int refcnt ; s#gnet_estimator params ; s#rcu_head rcu ; } 
xt_rateest_lookup extern s#xt_rateest * xt_rateest_lookup ( const char * ) 
xt_rateest_put extern void xt_rateest_put ( s#xt_rateest * ) 

/* net/netlink/af_netlink.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
netlink_unicast extern int netlink_unicast ( s#sock * , s#sk_buff * , t#__u32 , int ) 
netlink_has_listeners extern int netlink_has_listeners ( s#sock * , unsigned int ) 
netlink_broadcast_filtered extern int netlink_broadcast_filtered ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t , int ( * ) ( s#sock * , s#sk_buff * , void * ) , void * ) 
netlink_broadcast extern int netlink_broadcast ( s#sock * , s#sk_buff * , t#__u32 , t#__u32 , t#gfp_t ) 
netlink_set_err extern int netlink_set_err ( s#sock * , t#__u32 , t#__u32 , int ) 
netlink_kernel_create extern s#sock * netlink_kernel_create ( s#net * , int , unsigned int , void ( * ) ( s#sk_buff * ) , s#mutex * , s#module * ) 
netlink_kernel_release extern void netlink_kernel_release ( s#sock * ) 
netlink_set_nonroot extern void netlink_set_nonroot ( int , unsigned ) 
netlink_dump_start extern int netlink_dump_start ( s#sock * , s#sk_buff * , const s#nlmsghdr * , int ( * ) ( s#sk_buff * , s#netlink_callback * ) , int ( * ) ( s#netlink_callback * ) , t#u16 ) 
netlink_ack extern void netlink_ack ( s#sk_buff * , s#nlmsghdr * , int ) 
netlink_rcv_skb extern int netlink_rcv_skb ( s#sk_buff * , int ( * ) ( s#sk_buff * , s#nlmsghdr * ) ) 
nlmsg_notify extern int nlmsg_notify ( s#sock * , s#sk_buff * , t#u32 , unsigned int , int , t#gfp_t ) 
netlink_register_notifier extern int netlink_register_notifier ( s#notifier_block * ) 
netlink_unregister_notifier extern int netlink_unregister_notifier ( s#notifier_block * ) 

/* net/netlink/genetlink.o */
genl_lock extern void genl_lock ( void ) 
genl_unlock extern void genl_unlock ( void ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#genlmsghdr struct genlmsghdr { t#__u8 cmd ; t#__u8 version ; t#__u16 reserved ; } 
s#genl_info struct genl_info { t#u32 snd_seq ; t#u32 snd_pid ; s#nlmsghdr * nlhdr ; s#genlmsghdr * genlhdr ; void * userhdr ; s#nlattr * * attrs ; s#net * _net ; void * user_ptr [ 2 ] ; } 
s#genl_ops struct genl_ops { t#u8 cmd ; t#u8 internal_flags ; unsigned int flags ; const s#nla_policy * policy ; int ( * doit ) ( s#sk_buff * , s#genl_info * ) ; int ( * dumpit ) ( s#sk_buff * , s#netlink_callback * ) ; int ( * done ) ( s#netlink_callback * ) ; s#list_head ops_list ; } 
s#genl_family struct genl_family { unsigned int id ; unsigned int hdrsize ; char name [ 16 ] ; unsigned int version ; unsigned int maxattr ; t#bool netnsok ; int ( * pre_doit ) ( s#genl_ops * , s#sk_buff * , s#genl_info * ) ; void ( * post_doit ) ( s#genl_ops * , s#sk_buff * , s#genl_info * ) ; s#nlattr * * attrbuf ; s#list_head ops_list ; s#list_head family_list ; s#list_head mcast_groups ; } 
s#genl_multicast_group struct genl_multicast_group { s#genl_family * family ; s#list_head list ; char name [ 16 ] ; t#u32 id ; } 
genl_register_mc_group extern int genl_register_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
genl_unregister_mc_group extern void genl_unregister_mc_group ( s#genl_family * , s#genl_multicast_group * ) 
genl_register_ops extern int genl_register_ops ( s#genl_family * , s#genl_ops * ) 
genl_unregister_ops extern int genl_unregister_ops ( s#genl_family * , s#genl_ops * ) 
genl_register_family extern int genl_register_family ( s#genl_family * ) 
genl_register_family_with_ops extern int genl_register_family_with_ops ( s#genl_family * , s#genl_ops * , t#size_t ) 
genl_unregister_family extern int genl_unregister_family ( s#genl_family * ) 
genlmsg_multicast_allns int genlmsg_multicast_allns ( s#sk_buff * , t#u32 , unsigned int , t#gfp_t ) 

/* net/phonet/af_phonet.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
phonet_header_ops extern s#header_ops phonet_header_ops 
s#sockaddr_pn struct sockaddr_pn { t#sa_family_t spn_family ; t#__u8 spn_obj ; t#__u8 spn_dev ; t#__u8 spn_resource ; t#__u8 spn_zero [ sizeof ( struct sockaddr ) - sizeof ( sa_family_t ) - 3 ] ; } 
pn_skb_send int pn_skb_send ( s#sock * , s#sk_buff * , const s#sockaddr_pn * ) 
s#phonet_protocol struct phonet_protocol { const s#proto_ops * ops ; s#proto * prot ; int sock_type ; } 
phonet_proto_register int phonet_proto_register ( unsigned int , s#phonet_protocol * ) 
phonet_proto_unregister void phonet_proto_unregister ( unsigned int , s#phonet_protocol * ) 

/* net/phonet/socket.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
pn_sock_hash void pn_sock_hash ( s#sock * ) 
pn_sock_unhash void pn_sock_unhash ( s#sock * ) 
phonet_stream_ops extern const s#proto_ops phonet_stream_ops 
pn_sock_get_port int pn_sock_get_port ( s#sock * , unsigned short ) 

/* net/rds/af_rds.o */
rds_str_array char * rds_str_array ( char * * , t#size_t , t#size_t ) 

/* net/rds/cong.o */
s#rds_cong_map struct rds_cong_map { s#rb_node m_rb_node ; t#__be32 m_addr ; t#wait_queue_head_t m_waitq ; s#list_head m_conn_list ; unsigned long m_page_addrs [ ( ( ( ( ( ( 65536 / 8 ) ) ) + ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( 1UL << 16 ) ) ) - 1 ) ) & ~ ( ( typeof ( ( ( 65536 / 8 ) ) ) ) ( ( ( 1UL << 16 ) ) ) - 1 ) ) / ( 1UL << 16 ) ) ] ; } 
rds_cong_map_updated void rds_cong_map_updated ( s#rds_cong_map * , t#uint64_t ) 

/* net/rds/connection.o */
s#rds_header struct rds_header { t#__be64 h_sequence ; t#__be64 h_ack ; t#__be32 h_len ; t#__be16 h_sport ; t#__be16 h_dport ; t#u8 h_flags ; t#u8 h_credit ; t#u8 h_padding [ 4 ] ; t#__sum16 h_csum ; t#u8 h_exthdr [ 16 ] ; } 
t#rds_rdma_cookie_t typedef t#uint64_t rds_rdma_cookie_t 
s#rds_incoming struct rds_incoming { t#atomic_t i_refcount ; s#list_head i_item ; s#rds_connection * i_conn ; s#rds_header i_hdr ; unsigned long i_rx_jiffies ; t#__be32 i_saddr ; t#rds_rdma_cookie_t i_rdma_cookie ; } 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s#rds_notifier struct rds_notifier { s#list_head n_list ; t#uint64_t n_user_token ; int n_status ; } 
s#rds_mr struct rds_mr { s#rb_node r_rb_node ; t#atomic_t r_refcount ; t#u32 r_key ; unsigned int r_use_once : 1 ; unsigned int r_invalidate : 1 ; unsigned int r_write : 1 ; unsigned long r_state ; s#rds_sock * r_sock ; s#rds_transport * r_trans ; void * r_trans_private ; } 
s#rm_rdma_op struct rm_rdma_op { t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_write : 1 ; unsigned int op_fence : 1 ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; unsigned int op_bytes ; unsigned int op_nents ; unsigned int op_count ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s#rm_atomic_op struct rm_atomic_op { int op_type ; union { struct { t#uint64_t compare ; t#uint64_t swap ; t#uint64_t compare_mask ; t#uint64_t swap_mask ; } op_m_cswp ; struct { t#uint64_t add ; t#uint64_t nocarry_mask ; } op_m_fadd ; } ; t#u32 op_rkey ; t#u64 op_remote_addr ; unsigned int op_notify : 1 ; unsigned int op_recverr : 1 ; unsigned int op_mapped : 1 ; unsigned int op_silent : 1 ; unsigned int op_active : 1 ; s#scatterlist * op_sg ; s#rds_notifier * op_notifier ; s#rds_mr * op_rdma_mr ; } 
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
s#rds_transport struct rds_transport { char t_name [ 16 ] ; s#list_head t_item ; s#module * t_owner ; unsigned int t_prefer_loopback : 1 ; unsigned int t_type ; int ( * laddr_check ) ( t#__be32 ) ; int ( * conn_alloc ) ( s#rds_connection * , t#gfp_t ) ; void ( * conn_free ) ( void * ) ; int ( * conn_connect ) ( s#rds_connection * ) ; void ( * conn_shutdown ) ( s#rds_connection * ) ; void ( * xmit_prepare ) ( s#rds_connection * ) ; void ( * xmit_complete ) ( s#rds_connection * ) ; int ( * xmit ) ( s#rds_connection * , s#rds_message * , unsigned int , unsigned int , unsigned int ) ; int ( * xmit_rdma ) ( s#rds_connection * , s#rm_rdma_op * ) ; int ( * xmit_atomic ) ( s#rds_connection * , s#rm_atomic_op * ) ; int ( * recv ) ( s#rds_connection * ) ; int ( * inc_copy_to_user ) ( s#rds_incoming * , s#iovec * , t#size_t ) ; void ( * inc_free ) ( s#rds_incoming * ) ; int ( * cm_handle_connect ) ( s#rdma_cm_id * , s#rdma_cm_event * ) ; int ( * cm_initiate_connect ) ( s#rdma_cm_id * ) ; void ( * cm_connect_complete ) ( s#rds_connection * , s#rdma_cm_event * ) ; unsigned int ( * stats_info_copy ) ( s#rds_info_iterator * , unsigned int ) ; void ( * exit ) ( void ) ; void * ( * get_mr ) ( s#scatterlist * , unsigned long , s#rds_sock * , t#u32 * ) ; void ( * sync_mr ) ( void * , int ) ; void ( * free_mr ) ( void * , int ) ; void ( * flush_mrs ) ( void ) ; } 
s#rds_sock struct rds_sock { s#sock rs_sk ; t#u64 rs_user_addr ; t#u64 rs_user_bytes ; s#hlist_node rs_bound_node ; t#__be32 rs_bound_addr ; t#__be32 rs_conn_addr ; t#__be16 rs_bound_port ; t#__be16 rs_conn_port ; s#rds_transport * rs_transport ; s#rds_connection * rs_conn ; int rs_congested ; int rs_seen_congestion ; t#spinlock_t rs_lock ; s#list_head rs_send_queue ; t#u32 rs_snd_bytes ; int rs_rcv_bytes ; s#list_head rs_notify_queue ; t#uint64_t rs_cong_mask ; t#uint64_t rs_cong_notify ; s#list_head rs_cong_list ; unsigned long rs_cong_track ; t#rwlock_t rs_recv_lock ; s#list_head rs_recv_queue ; s#list_head rs_item ; t#spinlock_t rs_rdma_lock ; s#rb_root rs_rdma_keys ; unsigned char rs_recverr , rs_cong_monitor ; } 
s#rm_data_op struct rm_data_op { unsigned int op_active : 1 ; unsigned int op_nents ; unsigned int op_count ; s#scatterlist * op_sg ; } 
s#rds_message struct rds_message { t#atomic_t m_refcount ; s#list_head m_sock_item ; s#list_head m_conn_item ; s#rds_incoming m_inc ; t#u64 m_ack_seq ; t#__be32 m_daddr ; unsigned long m_flags ; t#spinlock_t m_rs_lock ; t#wait_queue_head_t m_flush_wait ; s#rds_sock * m_rs ; t#rds_rdma_cookie_t m_rdma_cookie ; unsigned int m_used_sgs ; unsigned int m_total_sgs ; void * m_final_op ; struct { s#rm_atomic_op atomic ; s#rm_rdma_op rdma ; s#rm_data_op data ; } ; } 
s#rds_connection struct rds_connection { s#hlist_node c_hash_node ; t#__be32 c_laddr ; t#__be32 c_faddr ; unsigned int c_loopback : 1 ; s#rds_connection * c_passive ; s#rds_cong_map * c_lcong ; s#rds_cong_map * c_fcong ; s#rds_message * c_xmit_rm ; unsigned long c_xmit_sg ; unsigned int c_xmit_hdr_off ; unsigned int c_xmit_data_off ; unsigned int c_xmit_atomic_sent ; unsigned int c_xmit_rdma_sent ; unsigned int c_xmit_data_sent ; t#spinlock_t c_lock ; t#u64 c_next_tx_seq ; s#list_head c_send_queue ; s#list_head c_retrans ; t#u64 c_next_rx_seq ; s#rds_transport * c_trans ; void * c_transport_data ; t#atomic_t c_state ; unsigned long c_flags ; unsigned long c_reconnect_jiffies ; s#delayed_work c_send_w ; s#delayed_work c_recv_w ; s#delayed_work c_conn_w ; s#work_struct c_down_w ; s#mutex c_cm_lock ; t#wait_queue_head_t c_waitq ; s#list_head c_map_item ; unsigned long c_map_queued ; unsigned int c_unacked_packets ; unsigned int c_unacked_bytes ; unsigned int c_version ; } 
rds_conn_create s#rds_connection * rds_conn_create ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_create_outgoing s#rds_connection * rds_conn_create_outgoing ( t#__be32 , t#__be32 , s#rds_transport * , t#gfp_t ) 
rds_conn_destroy void rds_conn_destroy ( s#rds_connection * ) 
s#rds_info_lengths struct rds_info_lengths { unsigned int nr ; unsigned int each ; } 
rds_for_each_conn_info void rds_for_each_conn_info ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * , int ( * ) ( s#rds_connection * , void * ) , t#size_t ) 
rds_conn_drop void rds_conn_drop ( s#rds_connection * ) 
rds_conn_connect_if_down void rds_conn_connect_if_down ( s#rds_connection * ) 

/* net/rds/info.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##rds_info_iterator
t#rds_info_func typedef void ( * rds_info_func ) ( s#socket * , unsigned int , s#rds_info_iterator * , s#rds_info_lengths * ) 
rds_info_register_func void rds_info_register_func ( int , t#rds_info_func ) 
rds_info_deregister_func void rds_info_deregister_func ( int , t#rds_info_func ) 
rds_info_copy void rds_info_copy ( s#rds_info_iterator * , void * , unsigned long ) 

/* net/rds/message.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_message_addref void rds_message_addref ( s#rds_message * ) 
rds_message_put void rds_message_put ( s#rds_message * ) 
rds_message_populate_header void rds_message_populate_header ( s#rds_header * , t#__be16 , t#__be16 , t#u64 ) 
rds_message_add_extension int rds_message_add_extension ( s#rds_header * , unsigned int , const void * , unsigned int ) 
rds_message_add_rdma_dest_extension int rds_message_add_rdma_dest_extension ( s#rds_header * , t#u32 , t#u32 ) 
rds_message_unmapped void rds_message_unmapped ( s#rds_message * ) 

/* net/rds/page.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
rds_page_copy_user int rds_page_copy_user ( s#page * , unsigned long , void * , unsigned long , int ) 
rds_page_remainder_alloc int rds_page_remainder_alloc ( s#scatterlist * , unsigned long , t#gfp_t ) 

/* net/rds/recv.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_inc_init void rds_inc_init ( s#rds_incoming * , s#rds_connection * , t#__be32 ) 
rds_inc_put void rds_inc_put ( s#rds_incoming * ) 
e#km_type enum km_type { KM_BOUNCE_READ , KM_SKB_SUNRPC_DATA , KM_SKB_DATA_SOFTIRQ , KM_USER0 , KM_USER1 , KM_BIO_SRC_IRQ , KM_BIO_DST_IRQ , KM_PTE0 , KM_PTE1 , KM_IRQ0 , KM_IRQ1 , KM_SOFTIRQ0 , KM_SOFTIRQ1 , KM_PPC_SYNC_PAGE , KM_PPC_SYNC_ICACHE , KM_KDB , KM_TYPE_NR } 
rds_recv_incoming void rds_recv_incoming ( s#rds_connection * , t#__be32 , t#__be32 , s#rds_incoming * , t#gfp_t , e#km_type ) 

/* net/rds/send.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_rdma_send_complete void rds_rdma_send_complete ( s#rds_message * , int ) 
rds_atomic_send_complete void rds_atomic_send_complete ( s#rds_message * , int ) 
rds_send_get_message s#rds_message * rds_send_get_message ( s#rds_connection * , s#rm_rdma_op * ) 
t#is_acked_func typedef int ( * is_acked_func ) ( s#rds_message * , t#uint64_t ) 
rds_send_drop_acked void rds_send_drop_acked ( s#rds_connection * , t#u64 , t#is_acked_func ) 

/* net/rds/stats.o */
s#rds_statistics struct rds_statistics { t#uint64_t s_conn_reset ; t#uint64_t s_recv_drop_bad_checksum ; t#uint64_t s_recv_drop_old_seq ; t#uint64_t s_recv_drop_no_sock ; t#uint64_t s_recv_drop_dead_sock ; t#uint64_t s_recv_deliver_raced ; t#uint64_t s_recv_delivered ; t#uint64_t s_recv_queued ; t#uint64_t s_recv_immediate_retry ; t#uint64_t s_recv_delayed_retry ; t#uint64_t s_recv_ack_required ; t#uint64_t s_recv_rdma_bytes ; t#uint64_t s_recv_ping ; t#uint64_t s_send_queue_empty ; t#uint64_t s_send_queue_full ; t#uint64_t s_send_lock_contention ; t#uint64_t s_send_lock_queue_raced ; t#uint64_t s_send_immediate_retry ; t#uint64_t s_send_delayed_retry ; t#uint64_t s_send_drop_acked ; t#uint64_t s_send_ack_required ; t#uint64_t s_send_queued ; t#uint64_t s_send_rdma ; t#uint64_t s_send_rdma_bytes ; t#uint64_t s_send_pong ; t#uint64_t s_page_remainder_hit ; t#uint64_t s_page_remainder_miss ; t#uint64_t s_copy_to_user ; t#uint64_t s_copy_from_user ; t#uint64_t s_cong_update_queued ; t#uint64_t s_cong_update_received ; t#uint64_t s_cong_send_error ; t#uint64_t s_cong_send_blocked ; } 
rds_stats extern __attribute__ ( ( section ( ".data..percpu" "" ) ) ) __typeof__ ( s#rds_statistics ) rds_stats 
s##rds_info_iterator
rds_stats_info_copy void rds_stats_info_copy ( s#rds_info_iterator * , t#uint64_t * , const char * const * , t#size_t ) 

/* net/rds/threads.o */
s##workqueue_struct
rds_wq extern s#workqueue_struct * rds_wq 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_connect_complete void rds_connect_complete ( s#rds_connection * ) 

/* net/rds/transport.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##ib_pkey_cache
s##ib_gid_cache
s##iw_cm_verbs
s##rds_info_iterator
rds_trans_register int rds_trans_register ( s#rds_transport * ) 
rds_trans_unregister void rds_trans_unregister ( s#rds_transport * ) 

/* net/rfkill/core.o */
s##rfkill
rfkill_set_hw_state t#bool rfkill_set_hw_state ( s#rfkill * , t#bool ) 
rfkill_set_sw_state t#bool rfkill_set_sw_state ( s#rfkill * , t#bool ) 
rfkill_init_sw_state void rfkill_init_sw_state ( s#rfkill * , t#bool ) 
rfkill_set_states void rfkill_set_states ( s#rfkill * , t#bool , t#bool ) 
rfkill_pause_polling void rfkill_pause_polling ( s#rfkill * ) 
rfkill_resume_polling void rfkill_resume_polling ( s#rfkill * ) 
rfkill_blocked t#bool rfkill_blocked ( s#rfkill * ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
e#rfkill_type enum rfkill_type { RFKILL_TYPE_ALL = 0 , RFKILL_TYPE_WLAN , RFKILL_TYPE_BLUETOOTH , RFKILL_TYPE_UWB , RFKILL_TYPE_WIMAX , RFKILL_TYPE_WWAN , RFKILL_TYPE_GPS , RFKILL_TYPE_FM , NUM_RFKILL_TYPES , } 
s#rfkill_ops struct rfkill_ops { void ( * poll ) ( s#rfkill * , void * ) ; void ( * query ) ( s#rfkill * , void * ) ; int ( * set_block ) ( void * , t#bool ) ; } 
rfkill_alloc s#rfkill * rfkill_alloc ( const char * , s#device * , const e#rfkill_type , const s#rfkill_ops * , void * ) 
rfkill_register int rfkill_register ( s#rfkill * ) 
rfkill_unregister void rfkill_unregister ( s#rfkill * ) 
rfkill_destroy void rfkill_destroy ( s#rfkill * ) 

/* net/rxrpc/af_rxrpc.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s#sockaddr_rxrpc struct sockaddr_rxrpc { t#sa_family_t srx_family ; t#u16 srx_service ; t#u16 transport_type ; t#u16 transport_len ; union { t#sa_family_t family ; s#sockaddr_in sin ; s#sockaddr_in6 sin6 ; } transport ; } 
s#rxrpc_local struct rxrpc_local { s#socket * socket ; s#work_struct destroyer ; s#work_struct acceptor ; s#work_struct rejecter ; s#list_head services ; s#list_head link ; s#rw_semaphore defrag_sem ; s#sk_buff_head accept_queue ; s#sk_buff_head reject_queue ; t#spinlock_t lock ; t#rwlock_t services_lock ; t#atomic_t usage ; int debug_id ; volatile char error_rcvd ; s#sockaddr_rxrpc srx ; } 
t#suseconds_t typedef t#__kernel_suseconds_t suseconds_t 
s#rxrpc_peer struct rxrpc_peer { s#work_struct destroyer ; s#list_head link ; s#list_head error_targets ; t#spinlock_t lock ; t#atomic_t usage ; unsigned if_mtu ; unsigned mtu ; unsigned maxdata ; unsigned short hdrsize ; int debug_id ; int net_error ; s#sockaddr_rxrpc srx ; t#suseconds_t rtt ; unsigned rtt_point ; unsigned rtt_usage ; t#suseconds_t rtt_cache [ 32 ] ; } 
s#rxrpc_transport struct rxrpc_transport { s#rxrpc_local * local ; s#rxrpc_peer * peer ; s#work_struct error_handler ; s#rb_root bundles ; s#rb_root client_conns ; s#rb_root server_conns ; s#list_head link ; s#sk_buff_head error_queue ; t#time_t put_time ; t#spinlock_t client_lock ; t#rwlock_t conn_lock ; t#atomic_t usage ; int debug_id ; unsigned int conn_idcounter ; } 
s#rxrpc_conn_bundle struct rxrpc_conn_bundle { s#rb_node node ; s#list_head unused_conns ; s#list_head avail_conns ; s#list_head busy_conns ; s#key * key ; t#wait_queue_head_t chanwait ; t#atomic_t usage ; int debug_id ; unsigned short num_conns ; t#__be16 service_id ; t#u8 security_ix ; } 
s#rxrpc_security struct rxrpc_security { s#module * owner ; s#list_head link ; const char * name ; t#u8 security_index ; int ( * init_connection_security ) ( s#rxrpc_connection * ) ; void ( * prime_packet_security ) ( s#rxrpc_connection * ) ; int ( * secure_packet ) ( const s#rxrpc_call * , s#sk_buff * , t#size_t , void * ) ; int ( * verify_packet ) ( const s#rxrpc_call * , s#sk_buff * , t#u32 * ) ; int ( * issue_challenge ) ( s#rxrpc_connection * ) ; int ( * respond_to_challenge ) ( s#rxrpc_connection * , s#sk_buff * , t#u32 * ) ; int ( * verify_response ) ( s#rxrpc_connection * , s#sk_buff * , t#u32 * ) ; void ( * clear ) ( s#rxrpc_connection * ) ; } 
s##crypto_blkcipher
s#rxrpc_crypt struct rxrpc_crypt { union { t#u8 x [ 8 ] ; t#__be32 n [ 2 ] ; } ; } 
s#rxrpc_connection struct rxrpc_connection { s#rxrpc_transport * trans ; s#rxrpc_conn_bundle * bundle ; s#work_struct processor ; s#rb_node node ; s#list_head link ; s#list_head bundle_link ; s#rb_root calls ; s#sk_buff_head rx_queue ; s#rxrpc_call * channels [ 4 ] ; s#rxrpc_security * security ; s#key * key ; s#key * server_key ; s#crypto_blkcipher * cipher ; s#rxrpc_crypt csum_iv ; unsigned long events ; t#time_t put_time ; t#rwlock_t lock ; t#spinlock_t state_lock ; t#atomic_t usage ; t#u32 real_conn_id ; enum { RXRPC_CONN_UNUSED , RXRPC_CONN_CLIENT , RXRPC_CONN_SERVER_UNSECURED , RXRPC_CONN_SERVER_CHALLENGING , RXRPC_CONN_SERVER , RXRPC_CONN_REMOTELY_ABORTED , RXRPC_CONN_LOCALLY_ABORTED , RXRPC_CONN_NETWORK_ERROR , } state ; int error ; int debug_id ; unsigned call_counter ; t#atomic_t serial ; t#atomic_t hi_serial ; t#u8 avail_calls ; t#u8 size_align ; t#u8 header_size ; t#u8 security_size ; t#u32 security_level ; t#u32 security_nonce ; t#__be32 epoch ; t#__be32 cid ; t#__be16 service_id ; t#u8 security_ix ; t#u8 in_clientflag ; t#u8 out_clientflag ; } 
t#rxrpc_interceptor_t typedef void ( * rxrpc_interceptor_t ) ( s#sock * , unsigned long , s#sk_buff * ) 
s#rxrpc_sock struct rxrpc_sock { s#sock sk ; t#rxrpc_interceptor_t interceptor ; s#rxrpc_local * local ; s#rxrpc_transport * trans ; s#rxrpc_conn_bundle * bundle ; s#rxrpc_connection * conn ; s#list_head listen_link ; s#list_head secureq ; s#list_head acceptq ; s#key * key ; s#key * securities ; s#rb_root calls ; unsigned long flags ; t#rwlock_t call_lock ; t#u32 min_sec_level ; s#sockaddr_rxrpc srx ; t#sa_family_t proto ; t#__be16 service_id ; } 
t#rxrpc_seq_t typedef t#u32 rxrpc_seq_t 
t#rxrpc_seq_net_t typedef t#__be32 rxrpc_seq_net_t 
s#rxrpc_call struct rxrpc_call { s#rxrpc_connection * conn ; s#rxrpc_sock * socket ; s#timer_list lifetimer ; s#timer_list deadspan ; s#timer_list ack_timer ; s#timer_list resend_timer ; s#work_struct destroyer ; s#work_struct processor ; s#list_head link ; s#list_head error_link ; s#list_head accept_link ; s#rb_node sock_node ; s#rb_node conn_node ; s#sk_buff_head rx_queue ; s#sk_buff_head rx_oos_queue ; s#sk_buff * tx_pending ; t#wait_queue_head_t tx_waitq ; unsigned long user_call_ID ; unsigned long creation_jif ; unsigned long flags ; unsigned long events ; t#spinlock_t lock ; t#rwlock_t state_lock ; t#atomic_t usage ; t#atomic_t sequence ; t#u32 abort_code ; enum { RXRPC_CALL_CLIENT_SEND_REQUEST , RXRPC_CALL_CLIENT_AWAIT_REPLY , RXRPC_CALL_CLIENT_RECV_REPLY , RXRPC_CALL_CLIENT_FINAL_ACK , RXRPC_CALL_SERVER_SECURING , RXRPC_CALL_SERVER_ACCEPTING , RXRPC_CALL_SERVER_RECV_REQUEST , RXRPC_CALL_SERVER_ACK_REQUEST , RXRPC_CALL_SERVER_SEND_REPLY , RXRPC_CALL_SERVER_AWAIT_ACK , RXRPC_CALL_COMPLETE , RXRPC_CALL_SERVER_BUSY , RXRPC_CALL_REMOTELY_ABORTED , RXRPC_CALL_LOCALLY_ABORTED , RXRPC_CALL_NETWORK_ERROR , RXRPC_CALL_DEAD , } state ; int debug_id ; t#u8 channel ; t#u8 acks_head ; t#u8 acks_tail ; t#u8 acks_winsz ; t#u8 acks_unacked ; int acks_latest ; t#rxrpc_seq_t acks_hard ; unsigned long * acks_window ; t#rxrpc_seq_t rx_data_expect ; t#rxrpc_seq_t rx_data_post ; t#rxrpc_seq_t rx_data_recv ; t#rxrpc_seq_t rx_data_eaten ; t#rxrpc_seq_t rx_first_oos ; t#rxrpc_seq_t ackr_win_top ; t#rxrpc_seq_net_t ackr_prev_seq ; t#u8 ackr_reason ; t#__be32 ackr_serial ; t#atomic_t ackr_not_idle ; unsigned long ackr_window [ ( ( ( 255 ) + ( 64 ) - 1 ) / ( 64 ) ) + 1 ] ; t#__be32 cid ; t#__be32 call_id ; } 
rxrpc_kernel_begin_call extern s#rxrpc_call * rxrpc_kernel_begin_call ( s#socket * , s#sockaddr_rxrpc * , s#key * , unsigned long , t#gfp_t ) 
rxrpc_kernel_end_call extern void rxrpc_kernel_end_call ( s#rxrpc_call * ) 
rxrpc_kernel_intercept_rx_messages extern void rxrpc_kernel_intercept_rx_messages ( s#socket * , t#rxrpc_interceptor_t ) 

/* net/rxrpc/ar-accept.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##crypto_blkcipher
rxrpc_kernel_accept_call extern s#rxrpc_call * rxrpc_kernel_accept_call ( s#socket * , unsigned long ) 
rxrpc_kernel_reject_call extern int rxrpc_kernel_reject_call ( s#socket * ) 

/* net/rxrpc/ar-key.o */
s##key_user
s##keyring_list
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
key_type_rxrpc extern s#key_type key_type_rxrpc 
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
rxrpc_get_server_data_key extern int rxrpc_get_server_data_key ( s#rxrpc_connection * , const void * , t#time_t , t#u32 ) 
rxrpc_get_null_key extern s#key * rxrpc_get_null_key ( const char * ) 

/* net/rxrpc/ar-output.o */
s##vfsmount
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##crypto_blkcipher
rxrpc_kernel_send_data extern int rxrpc_kernel_send_data ( s#rxrpc_call * , s#msghdr * , t#size_t ) 
rxrpc_kernel_abort_call extern void rxrpc_kernel_abort_call ( s#rxrpc_call * , t#u32 ) 

/* net/rxrpc/ar-recvmsg.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
rxrpc_kernel_data_delivered extern void rxrpc_kernel_data_delivered ( s#sk_buff * ) 
rxrpc_kernel_is_data_last extern t#bool rxrpc_kernel_is_data_last ( s#sk_buff * ) 
rxrpc_kernel_get_abort_code extern t#u32 rxrpc_kernel_get_abort_code ( s#sk_buff * ) 
rxrpc_kernel_get_error_number extern int rxrpc_kernel_get_error_number ( s#sk_buff * ) 

/* net/rxrpc/ar-security.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##skcipher_givcrypt_request
s##aead_givcrypt_request
s##crypto_type
rxrpc_register_security extern int rxrpc_register_security ( s#rxrpc_security * ) 
rxrpc_unregister_security extern void rxrpc_unregister_security ( s#rxrpc_security * ) 

/* net/rxrpc/ar-skbuff.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
rxrpc_kernel_free_skb extern void rxrpc_kernel_free_skb ( s#sk_buff * ) 

/* net/sched/act_api.o */
s#tcf_t struct tcf_t { t#__u64 install ; t#__u64 lastuse ; t#__u64 expires ; } 
s#tcf_common struct tcf_common { s#tcf_common * tcfc_next ; t#u32 tcfc_index ; int tcfc_refcnt ; int tcfc_bindcnt ; t#u32 tcfc_capab ; int tcfc_action ; s#tcf_t tcfc_tm ; s#gnet_stats_basic_packed tcfc_bstats ; s#gnet_stats_queue tcfc_qstats ; s#gnet_stats_rate_est tcfc_rate_est ; t#spinlock_t tcfc_lock ; s#rcu_head tcfc_rcu ; } 
s#tcf_hashinfo struct tcf_hashinfo { s#tcf_common * * htab ; unsigned int hmask ; t#rwlock_t * lock ; } 
tcf_hash_destroy extern void tcf_hash_destroy ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_hash_release extern int tcf_hash_release ( s#tcf_common * , int , s#tcf_hashinfo * ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#tc_action_ops struct tc_action_ops { s#tc_action_ops * next ; s#tcf_hashinfo * hinfo ; char kind [ 16 ] ; t#__u32 type ; t#__u32 capab ; s#module * owner ; int ( * act ) ( s#sk_buff * , s#tc_action * , s#tcf_result * ) ; int ( * get_stats ) ( s#sk_buff * , s#tc_action * ) ; int ( * dump ) ( s#sk_buff * , s#tc_action * , int , int ) ; int ( * cleanup ) ( s#tc_action * , int ) ; int ( * lookup ) ( s#tc_action * , t#u32 ) ; int ( * init ) ( s#nlattr * , s#nlattr * , s#tc_action * , int , int ) ; int ( * walk ) ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) ; } 
s#tc_action struct tc_action { void * priv ; s#tc_action_ops * ops ; t#__u32 type ; t#__u32 order ; s#tc_action * next ; } 
tcf_generic_walker extern int tcf_generic_walker ( s#sk_buff * , s#netlink_callback * , int , s#tc_action * ) 
tcf_hash_lookup extern s#tcf_common * tcf_hash_lookup ( t#u32 , s#tcf_hashinfo * ) 
tcf_hash_new_index extern t#u32 tcf_hash_new_index ( t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_search extern int tcf_hash_search ( s#tc_action * , t#u32 ) 
tcf_hash_check extern s#tcf_common * tcf_hash_check ( t#u32 , s#tc_action * , int , s#tcf_hashinfo * ) 
tcf_hash_create extern s#tcf_common * tcf_hash_create ( t#u32 , s#nlattr * , s#tc_action * , int , int , t#u32 * , s#tcf_hashinfo * ) 
tcf_hash_insert extern void tcf_hash_insert ( s#tcf_common * , s#tcf_hashinfo * ) 
tcf_register_action extern int tcf_register_action ( s#tc_action_ops * ) 
tcf_unregister_action extern int tcf_unregister_action ( s#tc_action_ops * ) 
tcf_action_exec extern int tcf_action_exec ( s#sk_buff * , s#tc_action * , s#tcf_result * ) 
tcf_action_dump_1 extern int tcf_action_dump_1 ( s#sk_buff * , s#tc_action * , int , int ) 

/* net/sched/cls_api.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#tcf_walker struct tcf_walker { int stop ; int skip ; int count ; int ( * fn ) ( s#tcf_proto * , unsigned long , s#tcf_walker * ) ; } 
register_tcf_proto_ops extern int register_tcf_proto_ops ( s#tcf_proto_ops * ) 
unregister_tcf_proto_ops extern int unregister_tcf_proto_ops ( s#tcf_proto_ops * ) 
s#tcf_exts struct tcf_exts { s#tc_action * action ; } 
tcf_exts_destroy extern void tcf_exts_destroy ( s#tcf_proto * , s#tcf_exts * ) 
s#tcf_ext_map struct tcf_ext_map { int action ; int police ; } 
tcf_exts_validate extern int tcf_exts_validate ( s#tcf_proto * , s#nlattr * * , s#nlattr * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_change extern void tcf_exts_change ( s#tcf_proto * , s#tcf_exts * , s#tcf_exts * ) 
tcf_exts_dump extern int tcf_exts_dump ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 
tcf_exts_dump_stats extern int tcf_exts_dump_stats ( s#sk_buff * , s#tcf_exts * , const s#tcf_ext_map * ) 

/* net/sched/ematch.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s#tcf_ematch struct tcf_ematch { s#tcf_ematch_ops * ops ; unsigned long data ; unsigned int datalen ; t#u16 matchid ; t#u16 flags ; } 
s#tcf_pkt_info struct tcf_pkt_info { unsigned char * ptr ; int nexthdr ; } 
s#tcf_ematch_ops struct tcf_ematch_ops { int kind ; int datalen ; int ( * change ) ( s#tcf_proto * , void * , int , s#tcf_ematch * ) ; int ( * match ) ( s#sk_buff * , s#tcf_ematch * , s#tcf_pkt_info * ) ; void ( * destroy ) ( s#tcf_proto * , s#tcf_ematch * ) ; int ( * dump ) ( s#sk_buff * , s#tcf_ematch * ) ; s#module * owner ; s#list_head link ; } 
tcf_em_register extern int tcf_em_register ( s#tcf_ematch_ops * ) 
tcf_em_unregister extern void tcf_em_unregister ( s#tcf_ematch_ops * ) 
s#tcf_ematch_tree_hdr struct tcf_ematch_tree_hdr { t#__u16 nmatches ; t#__u16 progid ; } 
s#tcf_ematch_tree struct tcf_ematch_tree { s#tcf_ematch_tree_hdr hdr ; s#tcf_ematch * matches ; } 
tcf_em_tree_validate extern int tcf_em_tree_validate ( s#tcf_proto * , s#nlattr * , s#tcf_ematch_tree * ) 
tcf_em_tree_destroy extern void tcf_em_tree_destroy ( s#tcf_proto * , s#tcf_ematch_tree * ) 
tcf_em_tree_dump extern int tcf_em_tree_dump ( s#sk_buff * , s#tcf_ematch_tree * , int ) 
__tcf_em_tree_match extern int __tcf_em_tree_match ( s#sk_buff * , s#tcf_ematch_tree * , s#tcf_pkt_info * ) 

/* net/sched/sch_api.o */
s##iw_handler_def
s##iw_public_data
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##tcf_walker
register_qdisc extern int register_qdisc ( s#Qdisc_ops * ) 
unregister_qdisc extern int unregister_qdisc ( s#Qdisc_ops * ) 
qdisc_list_del extern void qdisc_list_del ( s#Qdisc * ) 
s#tc_ratespec struct tc_ratespec { unsigned char cell_log ; unsigned char __reserved ; unsigned short overhead ; short cell_align ; unsigned short mpu ; t#__u32 rate ; } 
s#qdisc_rate_table struct qdisc_rate_table { s#tc_ratespec rate ; t#u32 data [ 256 ] ; s#qdisc_rate_table * next ; int refcnt ; } 
qdisc_get_rtab extern s#qdisc_rate_table * qdisc_get_rtab ( s#tc_ratespec * , s#nlattr * ) 
qdisc_put_rtab extern void qdisc_put_rtab ( s#qdisc_rate_table * ) 
qdisc_put_stab extern void qdisc_put_stab ( s#qdisc_size_table * ) 
__qdisc_calculate_pkt_len extern void __qdisc_calculate_pkt_len ( s#sk_buff * , const s#qdisc_size_table * ) 
qdisc_warn_nonwc extern void qdisc_warn_nonwc ( char * , s#Qdisc * ) 
s#qdisc_watchdog struct qdisc_watchdog { s#hrtimer timer ; s#Qdisc * qdisc ; } 
qdisc_watchdog_init extern void qdisc_watchdog_init ( s#qdisc_watchdog * , s#Qdisc * ) 
t#psched_time_t typedef t#u64 psched_time_t 
qdisc_watchdog_schedule extern void qdisc_watchdog_schedule ( s#qdisc_watchdog * , t#psched_time_t ) 
qdisc_watchdog_cancel extern void qdisc_watchdog_cancel ( s#qdisc_watchdog * ) 
s#Qdisc_class_hash struct Qdisc_class_hash { s#hlist_head * hash ; unsigned int hashsize ; unsigned int hashmask ; unsigned int hashelems ; } 
qdisc_class_hash_grow extern void qdisc_class_hash_grow ( s#Qdisc * , s#Qdisc_class_hash * ) 
qdisc_class_hash_init extern int qdisc_class_hash_init ( s#Qdisc_class_hash * ) 
qdisc_class_hash_destroy extern void qdisc_class_hash_destroy ( s#Qdisc_class_hash * ) 
s#Qdisc_class_common struct Qdisc_class_common { t#u32 classid ; s#hlist_node hnode ; } 
qdisc_class_hash_insert extern void qdisc_class_hash_insert ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_class_hash_remove extern void qdisc_class_hash_remove ( s#Qdisc_class_hash * , s#Qdisc_class_common * ) 
qdisc_tree_decrease_qlen extern void qdisc_tree_decrease_qlen ( s#Qdisc * , unsigned int ) 
tc_classify_compat extern int tc_classify_compat ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) 
tc_classify extern int tc_classify ( s#sk_buff * , s#tcf_proto * , s#tcf_result * ) 
tcf_destroy_chain extern void tcf_destroy_chain ( s#tcf_proto * * ) 

/* net/sched/sch_fifo.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##tcf_walker
pfifo_qdisc_ops extern s#Qdisc_ops pfifo_qdisc_ops 
bfifo_qdisc_ops extern s#Qdisc_ops bfifo_qdisc_ops 
fifo_set_limit extern int fifo_set_limit ( s#Qdisc * , unsigned int ) 
fifo_create_dflt extern s#Qdisc * fifo_create_dflt ( s#Qdisc * , s#Qdisc_ops * , unsigned int ) 

/* net/sched/sch_generic.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##tcf_walker
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
dev_trans_start extern unsigned long dev_trans_start ( s#net_device * ) 
netif_carrier_on extern void netif_carrier_on ( s#net_device * ) 
netif_carrier_off extern void netif_carrier_off ( s#net_device * ) 
netif_notify_peers extern void netif_notify_peers ( s#net_device * ) 
noop_qdisc extern s#Qdisc noop_qdisc 
pfifo_fast_ops extern s#Qdisc_ops pfifo_fast_ops 
qdisc_create_dflt extern s#Qdisc * qdisc_create_dflt ( s#netdev_queue * , s#Qdisc_ops * , t#u32 ) 
qdisc_reset extern void qdisc_reset ( s#Qdisc * ) 
qdisc_destroy extern void qdisc_destroy ( s#Qdisc * ) 
dev_graft_qdisc extern s#Qdisc * dev_graft_qdisc ( s#netdev_queue * , s#Qdisc * ) 
dev_activate extern void dev_activate ( s#net_device * ) 
dev_deactivate extern void dev_deactivate ( s#net_device * ) 

/* net/sctp/socket.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##serial_icounter_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##posix_acl
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
t#sctp_assoc_t typedef t#__s32 sctp_assoc_t 
sctp_do_peeloff int sctp_do_peeloff ( s#sock * , t#sctp_assoc_t , s#socket * * ) 

/* net/socket.o */
s##nameidata
s##anon_vma
s##radix_tree_node
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##array_cache
s##kmem_list3
s##bsd_acct_struct
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s##cgroupfs_root
s##css_id
s##ring_buffer
s##trace_array
s##tracer
s##ring_buffer_iter
s##event_filter
s##fs_struct
s##files_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##libipw_device
s##sec_path
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##robust_list_head
s##futex_pi_state
s##mempolicy
s##mem_cgroup
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##eventfd_ctx
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
sock_map_fd extern int sock_map_fd ( s#socket * , int ) 
sockfd_lookup extern s#socket * sockfd_lookup ( int , int * ) 
sock_release extern void sock_release ( s#socket * ) 
sock_tx_timestamp extern int sock_tx_timestamp ( s#sock * , t#__u8 * ) 
sock_sendmsg extern int sock_sendmsg ( s#socket * , s#msghdr * , t#size_t ) 
kernel_sendmsg extern int kernel_sendmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t ) 
__sock_recv_timestamp extern void __sock_recv_timestamp ( s#msghdr * , s#sock * , s#sk_buff * ) 
__sock_recv_ts_and_drops extern void __sock_recv_ts_and_drops ( s#msghdr * , s#sock * , s#sk_buff * ) 
sock_recvmsg extern int sock_recvmsg ( s#socket * , s#msghdr * , t#size_t , int ) 
kernel_recvmsg extern int kernel_recvmsg ( s#socket * , s#msghdr * , s#kvec * , t#size_t , t#size_t , int ) 
brioctl_set extern void brioctl_set ( int ( * ) ( s#net * , unsigned int , void * ) ) 
vlan_ioctl_set extern void vlan_ioctl_set ( int ( * ) ( s#net * , void * ) ) 
dlci_ioctl_set extern void dlci_ioctl_set ( int ( * ) ( unsigned int , void * ) ) 
sock_create_lite extern int sock_create_lite ( int , int , int , s#socket * * ) 
sock_wake_async extern int sock_wake_async ( s#socket * , int , int ) 
__sock_create extern int __sock_create ( s#net * , int , int , int , s#socket * * , int ) 
sock_create extern int sock_create ( int , int , int , s#socket * * ) 
sock_create_kern extern int sock_create_kern ( int , int , int , s#socket * * ) 
sock_register extern int sock_register ( const s#net_proto_family * ) 
sock_unregister extern void sock_unregister ( int ) 
kernel_bind extern int kernel_bind ( s#socket * , s#sockaddr * , int ) 
kernel_listen extern int kernel_listen ( s#socket * , int ) 
kernel_accept extern int kernel_accept ( s#socket * , s#socket * * , int ) 
kernel_connect extern int kernel_connect ( s#socket * , s#sockaddr * , int , int ) 
kernel_getsockname extern int kernel_getsockname ( s#socket * , s#sockaddr * , int * ) 
kernel_getpeername extern int kernel_getpeername ( s#socket * , s#sockaddr * , int * ) 
kernel_getsockopt extern int kernel_getsockopt ( s#socket * , int , int , char * , int * ) 
kernel_setsockopt extern int kernel_setsockopt ( s#socket * , int , int , char * , unsigned int ) 
kernel_sendpage extern int kernel_sendpage ( s#socket * , s#page * , int , t#size_t , int ) 
kernel_sock_ioctl extern int kernel_sock_ioctl ( s#socket * , int , unsigned long ) 
e#sock_shutdown_cmd enum sock_shutdown_cmd { SHUT_RD = 0 , SHUT_WR = 1 , SHUT_RDWR = 2 , } 
kernel_sock_shutdown extern int kernel_sock_shutdown ( s#socket * , e#sock_shutdown_cmd ) 

/* net/sunrpc/addr.o */
rpc_ntop t#size_t rpc_ntop ( const s#sockaddr * , char * , const t#size_t ) 
rpc_pton t#size_t rpc_pton ( const char * , const t#size_t , s#sockaddr * , const t#size_t ) 
rpc_sockaddr2uaddr char * rpc_sockaddr2uaddr ( const s#sockaddr * ) 
rpc_uaddr2sockaddr t#size_t rpc_uaddr2sockaddr ( const char * , const t#size_t , s#sockaddr * , const t#size_t ) 

/* net/sunrpc/auth.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rpc_cred_cache
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##rpc_iostats
rpcauth_register int rpcauth_register ( const s#rpc_authops * ) 
rpcauth_unregister int rpcauth_unregister ( const s#rpc_authops * ) 
rpcauth_create s#rpc_auth * rpcauth_create ( t#rpc_authflavor_t , s#rpc_clnt * ) 
rpcauth_init_credcache int rpcauth_init_credcache ( s#rpc_auth * ) 
rpcauth_destroy_credcache void rpcauth_destroy_credcache ( s#rpc_auth * ) 
rpcauth_lookup_credcache s#rpc_cred * rpcauth_lookup_credcache ( s#rpc_auth * , s#auth_cred * , int ) 
rpcauth_init_cred void rpcauth_init_cred ( s#rpc_cred * , const s#auth_cred * , s#rpc_auth * , const s#rpc_credops * ) 
rpcauth_generic_bind_cred s#rpc_cred * rpcauth_generic_bind_cred ( s#rpc_task * , s#rpc_cred * , int ) 
put_rpccred void put_rpccred ( s#rpc_cred * ) 

/* net/sunrpc/auth_generic.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##workqueue_struct
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##rpc_cred_cache
rpc_lookup_cred s#rpc_cred * rpc_lookup_cred ( void ) 
rpc_lookup_cred_nonblock s#rpc_cred * rpc_lookup_cred_nonblock ( void ) 
rpc_lookup_machine_cred s#rpc_cred * rpc_lookup_machine_cred ( void ) 

/* net/sunrpc/auth_gss/gss_generic_token.o */
s#xdr_netobj struct xdr_netobj { unsigned int len ; t#u8 * data ; } 
g_token_size int g_token_size ( s#xdr_netobj * , unsigned int ) 
g_make_token_header void g_make_token_header ( s#xdr_netobj * , int , unsigned char * * ) 
g_verify_token_header t#u32 g_verify_token_header ( s#xdr_netobj * , int * , unsigned char * * , int ) 

/* net/sunrpc/auth_gss/gss_mech_switch.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s#gss_ctx struct gss_ctx { s#gss_api_mech * mech_type ; void * internal_ctx_id ; } 
s#gss_api_ops struct gss_api_ops { int ( * gss_import_sec_context ) ( const void * , t#size_t , s#gss_ctx * , t#gfp_t ) ; t#u32 ( * gss_get_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_verify_mic ) ( s#gss_ctx * , s#xdr_buf * , s#xdr_netobj * ) ; t#u32 ( * gss_wrap ) ( s#gss_ctx * , int , s#xdr_buf * , s#page * * ) ; t#u32 ( * gss_unwrap ) ( s#gss_ctx * , int , s#xdr_buf * ) ; void ( * gss_delete_sec_context ) ( void * ) ; } 
s#pf_desc struct pf_desc { t#u32 pseudoflavor ; t#u32 service ; char * name ; char * auth_domain_name ; } 
s#gss_api_mech struct gss_api_mech { s#list_head gm_list ; s#module * gm_owner ; s#xdr_netobj gm_oid ; char * gm_name ; const s#gss_api_ops * gm_ops ; int gm_pf_num ; s#pf_desc * gm_pfs ; const char * gm_upcall_enctypes ; } 
gss_mech_register int gss_mech_register ( s#gss_api_mech * ) 
gss_mech_unregister void gss_mech_unregister ( s#gss_api_mech * ) 
gss_mech_get s#gss_api_mech * gss_mech_get ( s#gss_api_mech * ) 
gss_mech_get_by_name s#gss_api_mech * gss_mech_get_by_name ( const char * ) 
gss_mech_get_by_OID s#gss_api_mech * gss_mech_get_by_OID ( s#xdr_netobj * ) 
gss_mech_get_by_pseudoflavor s#gss_api_mech * gss_mech_get_by_pseudoflavor ( t#u32 ) 
gss_mech_list_pseudoflavors int gss_mech_list_pseudoflavors ( t#u32 * ) 
gss_svc_to_pseudoflavor t#u32 gss_svc_to_pseudoflavor ( s#gss_api_mech * , t#u32 ) 
gss_pseudoflavor_to_service t#u32 gss_pseudoflavor_to_service ( s#gss_api_mech * , t#u32 ) 
gss_service_to_auth_domain_name char * gss_service_to_auth_domain_name ( s#gss_api_mech * , t#u32 ) 
gss_mech_put void gss_mech_put ( s#gss_api_mech * ) 

/* net/sunrpc/auth_gss/svcauth_gss.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##svc_stat
s##net
s##rpc_xprt
s##svc_cacherep
svcauth_gss_flavor t#u32 svcauth_gss_flavor ( s#auth_domain * ) 
svcauth_gss_register_pseudoflavor int svcauth_gss_register_pseudoflavor ( t#u32 , char * ) 
svc_gss_principal char * svc_gss_principal ( s#svc_rqst * ) 

/* net/sunrpc/backchannel_rqst.o */
s##rpc_clnt
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##rpc_cred
s##rpc_procinfo
s##workqueue_struct
s##svc_xprt
s##svc_serv
xprt_setup_backchannel int xprt_setup_backchannel ( s#rpc_xprt * , unsigned int ) 
xprt_destroy_backchannel void xprt_destroy_backchannel ( s#rpc_xprt * , unsigned int ) 

/* net/sunrpc/cache.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#cache_detail_procfs struct cache_detail_procfs { s#proc_dir_entry * proc_ent ; s#proc_dir_entry * flush_ent , * channel_ent , * content_ent ; } 
s#cache_detail_pipefs struct cache_detail_pipefs { s#dentry * dir ; } 
s#cache_detail struct cache_detail { s#module * owner ; int hash_size ; s#cache_head * * hash_table ; t#rwlock_t hash_lock ; t#atomic_t inuse ; char * name ; void ( * cache_put ) ( s#kref * ) ; int ( * cache_upcall ) ( s#cache_detail * , s#cache_head * ) ; int ( * cache_parse ) ( s#cache_detail * , char * , int ) ; int ( * cache_show ) ( s#seq_file * , s#cache_detail * , s#cache_head * ) ; void ( * warn_no_listener ) ( s#cache_detail * , int ) ; s#cache_head * ( * alloc ) ( void ) ; int ( * match ) ( s#cache_head * , s#cache_head * ) ; void ( * init ) ( s#cache_head * , s#cache_head * ) ; void ( * update ) ( s#cache_head * , s#cache_head * ) ; t#time_t flush_time ; s#list_head others ; t#time_t nextcheck ; int entries ; s#list_head queue ; t#atomic_t readers ; t#time_t last_close ; t#time_t last_warn ; union { s#cache_detail_procfs procfs ; s#cache_detail_pipefs pipefs ; } u ; } 
sunrpc_cache_lookup extern s#cache_head * sunrpc_cache_lookup ( s#cache_detail * , s#cache_head * , int ) 
sunrpc_cache_update extern s#cache_head * sunrpc_cache_update ( s#cache_detail * , s#cache_head * , s#cache_head * , int ) 
cache_check extern int cache_check ( s#cache_detail * , s#cache_head * , s#cache_req * ) 
cache_flush extern void cache_flush ( void ) 
cache_purge extern void cache_purge ( s#cache_detail * ) 
qword_add extern void qword_add ( char * * , int * , char * ) 
qword_addhex extern void qword_addhex ( char * * , int * , char * , int ) 
sunrpc_cache_pipe_upcall extern int sunrpc_cache_pipe_upcall ( s#cache_detail * , s#cache_head * , void ( * ) ( s#cache_detail * , s#cache_head * , char * * , int * ) ) 
qword_get extern int qword_get ( char * * , char * , int ) 
cache_register extern int cache_register ( s#cache_detail * ) 
cache_unregister extern void cache_unregister ( s#cache_detail * ) 
sunrpc_cache_register_pipefs extern int sunrpc_cache_register_pipefs ( s#dentry * , const char * , t#mode_t , s#cache_detail * ) 
sunrpc_cache_unregister_pipefs extern void sunrpc_cache_unregister_pipefs ( s#cache_detail * ) 

/* net/sunrpc/clnt.o */
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##ipc_namespace
s##mnt_namespace
s##iw_handler_def
s##iw_public_data
s##sec_path
s##tvec_base
s##array_cache
s##kmem_list3
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##rt6_info
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##rpc_cred_cache
s##workqueue_struct
s##svc_cacherep
s#rpc_create_args struct rpc_create_args { s#net * net ; int protocol ; s#sockaddr * address ; t#size_t addrsize ; s#sockaddr * saddress ; const s#rpc_timeout * timeout ; char * servername ; s#rpc_program * program ; t#u32 prognumber ; t#u32 version ; t#rpc_authflavor_t authflavor ; unsigned long flags ; char * client_name ; s#svc_xprt * bc_xprt ; } 
rpc_create s#rpc_clnt * rpc_create ( s#rpc_create_args * ) 
rpc_clone_client s#rpc_clnt * rpc_clone_client ( s#rpc_clnt * ) 
rpc_killall_tasks void rpc_killall_tasks ( s#rpc_clnt * ) 
rpc_shutdown_client void rpc_shutdown_client ( s#rpc_clnt * ) 
rpc_bind_new_program s#rpc_clnt * rpc_bind_new_program ( s#rpc_clnt * , s#rpc_program * , t#u32 ) 
rpc_task_reset_client void rpc_task_reset_client ( s#rpc_task * , s#rpc_clnt * ) 
s#rpc_task_setup struct rpc_task_setup { s#rpc_task * task ; s#rpc_clnt * rpc_client ; const s#rpc_message * rpc_message ; const s#rpc_call_ops * callback_ops ; void * callback_data ; s#workqueue_struct * workqueue ; unsigned short flags ; signed char priority ; } 
rpc_run_task s#rpc_task * rpc_run_task ( const s#rpc_task_setup * ) 
rpc_call_sync int rpc_call_sync ( s#rpc_clnt * , const s#rpc_message * , int ) 
rpc_call_async int rpc_call_async ( s#rpc_clnt * , const s#rpc_message * , int , const s#rpc_call_ops * , void * ) 
rpc_call_start void rpc_call_start ( s#rpc_task * ) 
rpc_peeraddr t#size_t rpc_peeraddr ( s#rpc_clnt * , s#sockaddr * , t#size_t ) 
e#rpc_display_format_t enum rpc_display_format_t { RPC_DISPLAY_ADDR = 0 , RPC_DISPLAY_PORT , RPC_DISPLAY_PROTO , RPC_DISPLAY_HEX_ADDR , RPC_DISPLAY_HEX_PORT , RPC_DISPLAY_NETID , RPC_DISPLAY_MAX , } 
rpc_peeraddr2str const char * rpc_peeraddr2str ( s#rpc_clnt * , e#rpc_display_format_t ) 
rpc_setbufsize void rpc_setbufsize ( s#rpc_clnt * , unsigned int , unsigned int ) 
rpc_max_payload t#size_t rpc_max_payload ( s#rpc_clnt * ) 
rpc_force_rebind void rpc_force_rebind ( s#rpc_clnt * ) 
rpc_restart_call_prepare int rpc_restart_call_prepare ( s#rpc_task * ) 
rpc_restart_call int rpc_restart_call ( s#rpc_task * ) 
rpc_call_null s#rpc_task * rpc_call_null ( s#rpc_clnt * , s#rpc_cred * , int ) 
rpc_cap_max_reconnect_timeout void rpc_cap_max_reconnect_timeout ( s#rpc_clnt * , unsigned long ) 

/* net/sunrpc/rpc_pipe.o */
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##hd_struct
s##gendisk
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
s#rpc_pipe_msg struct rpc_pipe_msg { s#list_head list ; void * data ; t#size_t len ; t#size_t copied ; int errno ; } 
rpc_queue_upcall extern int rpc_queue_upcall ( s#inode * , s#rpc_pipe_msg * ) 
rpc_get_mount extern s#vfsmount * rpc_get_mount ( void ) 
rpc_put_mount extern void rpc_put_mount ( void ) 
s#rpc_pipe_ops struct rpc_pipe_ops { t#ssize_t ( * upcall ) ( s#file * , s#rpc_pipe_msg * , char * , t#size_t ) ; t#ssize_t ( * downcall ) ( s#file * , const char * , t#size_t ) ; void ( * release_pipe ) ( s#inode * ) ; int ( * open_pipe ) ( s#inode * ) ; void ( * destroy_msg ) ( s#rpc_pipe_msg * ) ; } 
rpc_mkpipe extern s#dentry * rpc_mkpipe ( s#dentry * , const char * , void * , const s#rpc_pipe_ops * , int ) 
rpc_unlink extern int rpc_unlink ( s#dentry * ) 

/* net/sunrpc/rpcb_clnt.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##workqueue_struct
rpcb_getport_async void rpcb_getport_async ( s#rpc_task * ) 

/* net/sunrpc/sched.o */
s##tvec_base
rpc_init_priority_wait_queue void rpc_init_priority_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_init_wait_queue void rpc_init_wait_queue ( s#rpc_wait_queue * , const char * ) 
rpc_destroy_wait_queue void rpc_destroy_wait_queue ( s#rpc_wait_queue * ) 
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##rpc_cred_cache
s##svc_xprt
s##svc_serv
s##rpc_iostats
s##workqueue_struct
__rpc_wait_for_completion_task int __rpc_wait_for_completion_task ( s#rpc_task * , int ( * ) ( void * ) ) 
t#rpc_action typedef void ( * rpc_action ) ( s#rpc_task * ) 
rpc_sleep_on void rpc_sleep_on ( s#rpc_wait_queue * , s#rpc_task * , t#rpc_action ) 
rpc_queue_empty int rpc_queue_empty ( s#rpc_wait_queue * ) 
rpc_wake_up_queued_task void rpc_wake_up_queued_task ( s#rpc_wait_queue * , s#rpc_task * ) 
rpc_wake_up_first s#rpc_task * rpc_wake_up_first ( s#rpc_wait_queue * , t#bool ( * ) ( s#rpc_task * , void * ) , void * ) 
rpc_wake_up_next s#rpc_task * rpc_wake_up_next ( s#rpc_wait_queue * ) 
rpc_wake_up void rpc_wake_up ( s#rpc_wait_queue * ) 
rpc_wake_up_status void rpc_wake_up_status ( s#rpc_wait_queue * , int ) 
rpc_delay void rpc_delay ( s#rpc_task * , unsigned long ) 
rpc_exit void rpc_exit ( s#rpc_task * , int ) 
rpc_malloc void * rpc_malloc ( s#rpc_task * , t#size_t ) 
rpc_free void rpc_free ( void * ) 
rpc_put_task void rpc_put_task ( s#rpc_task * ) 
rpc_put_task_async void rpc_put_task_async ( s#rpc_task * ) 

/* net/sunrpc/socklib.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##xfrm_policy
s##sec_path
s#xdr_skb_reader struct xdr_skb_reader { s#sk_buff * skb ; unsigned int offset ; t#size_t count ; t#__wsum csum ; } 
xdr_skb_read_bits t#size_t xdr_skb_read_bits ( s#xdr_skb_reader * , void * , t#size_t ) 
t#xdr_skb_read_actor typedef t#size_t ( * xdr_skb_read_actor ) ( s#xdr_skb_reader * , void * , t#size_t ) 
xdr_partial_copy_from_skb extern t#ssize_t xdr_partial_copy_from_skb ( s#xdr_buf * , unsigned int , s#xdr_skb_reader * , t#xdr_skb_read_actor ) 
csum_partial_copy_to_xdr extern int csum_partial_copy_to_xdr ( s#xdr_buf * , s#sk_buff * ) 

/* net/sunrpc/stats.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##rpc_cred_cache
s##workqueue_struct
s##svc_cacherep
svc_seq_show void svc_seq_show ( s#seq_file * , const s#svc_stat * ) 
rpc_alloc_iostats s#rpc_iostats * rpc_alloc_iostats ( s#rpc_clnt * ) 
rpc_free_iostats void rpc_free_iostats ( s#rpc_iostats * ) 
rpc_print_iostats void rpc_print_iostats ( s#seq_file * , s#rpc_clnt * ) 
rpc_proc_register s#proc_dir_entry * rpc_proc_register ( s#rpc_stat * ) 
rpc_proc_unregister void rpc_proc_unregister ( const char * ) 
svc_proc_register s#proc_dir_entry * svc_proc_register ( s#svc_stat * , const s#file_operations * ) 
svc_proc_unregister void svc_proc_unregister ( const char * ) 

/* net/sunrpc/svc.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##workqueue_struct
s##svc_cacherep
svc_create s#svc_serv * svc_create ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * ) ) 
svc_create_pooled s#svc_serv * svc_create_pooled ( s#svc_program * , unsigned int , void ( * ) ( s#svc_serv * ) , t#svc_thread_fn , s#module * ) 
svc_destroy void svc_destroy ( s#svc_serv * ) 
svc_prepare_thread s#svc_rqst * svc_prepare_thread ( s#svc_serv * , s#svc_pool * ) 
svc_set_num_threads int svc_set_num_threads ( s#svc_serv * , s#svc_pool * , int ) 
svc_exit_thread void svc_exit_thread ( s#svc_rqst * ) 
svc_process int svc_process ( s#svc_rqst * ) 
bc_svc_process int bc_svc_process ( s#svc_serv * , s#rpc_rqst * , s#svc_rqst * ) 
svc_max_payload extern t#u32 svc_max_payload ( const s#svc_rqst * ) 

/* net/sunrpc/svc_xprt.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##request_sock_ops
s##timewait_sock_ops
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##svc_cacherep
s##rpc_clnt
s##rpc_cred_cache
s##rpc_procinfo
s##workqueue_struct
svc_reg_xprt_class int svc_reg_xprt_class ( s#svc_xprt_class * ) 
svc_unreg_xprt_class void svc_unreg_xprt_class ( s#svc_xprt_class * ) 
svc_xprt_put void svc_xprt_put ( s#svc_xprt * ) 
svc_xprt_init void svc_xprt_init ( s#svc_xprt_class * , s#svc_xprt * , s#svc_serv * ) 
svc_create_xprt int svc_create_xprt ( s#svc_serv * , const char * , s#net * , const int , const unsigned short , int ) 
svc_xprt_copy_addrs void svc_xprt_copy_addrs ( s#svc_rqst * , s#svc_xprt * ) 
svc_print_addr char * svc_print_addr ( s#svc_rqst * , char * , t#size_t ) 
svc_xprt_enqueue void svc_xprt_enqueue ( s#svc_xprt * ) 
svc_xprt_received void svc_xprt_received ( s#svc_xprt * ) 
svc_reserve void svc_reserve ( s#svc_rqst * , int ) 
svc_wake_up void svc_wake_up ( s#svc_serv * ) 
svc_recv int svc_recv ( s#svc_rqst * , long ) 
svc_drop void svc_drop ( s#svc_rqst * ) 
svc_close_xprt void svc_close_xprt ( s#svc_xprt * ) 
svc_find_xprt s#svc_xprt * svc_find_xprt ( s#svc_serv * , const char * , const t#sa_family_t , const unsigned short ) 
svc_xprt_names int svc_xprt_names ( s#svc_serv * , char * , const int ) 
svc_pool_stats_open int svc_pool_stats_open ( s#svc_serv * , s#file * ) 

/* net/sunrpc/svcauth.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##svc_stat
s##net
s##rpc_xprt
s##svc_cacherep
svc_authenticate extern int svc_authenticate ( s#svc_rqst * , t#__be32 * ) 
svc_set_client extern int svc_set_client ( s#svc_rqst * ) 
svc_auth_register extern int svc_auth_register ( t#rpc_authflavor_t , s#auth_ops * ) 
svc_auth_unregister extern void svc_auth_unregister ( t#rpc_authflavor_t ) 
auth_domain_put extern void auth_domain_put ( s#auth_domain * ) 
auth_domain_lookup extern s#auth_domain * auth_domain_lookup ( char * , s#auth_domain * ) 
auth_domain_find extern s#auth_domain * auth_domain_find ( char * ) 

/* net/sunrpc/svcauth_unix.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##workqueue_struct
s##svc_cacherep
unix_domain_find extern s#auth_domain * unix_domain_find ( char * ) 
auth_unix_add_addr extern int auth_unix_add_addr ( s#net * , s#in6_addr * , s#auth_domain * ) 
auth_unix_forget_old extern int auth_unix_forget_old ( s#auth_domain * ) 
auth_unix_lookup extern s#auth_domain * auth_unix_lookup ( s#net * , s#in6_addr * ) 
svcauth_unix_purge extern void svcauth_unix_purge ( void ) 
svcauth_unix_set_client extern int svcauth_unix_set_client ( s#svc_rqst * ) 

/* net/sunrpc/svcsock.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rpc_cred_cache
s##rpc_iostats
s##workqueue_struct
s##svc_cacherep
svc_sock_names int svc_sock_names ( s#svc_serv * , char * , const t#size_t , const char * ) 
svc_sock_update_bufs void svc_sock_update_bufs ( s#svc_serv * ) 
svc_addsock int svc_addsock ( s#svc_serv * , const int , char * , const t#size_t ) 

/* net/sunrpc/sysctl.o */
rpc_debug extern unsigned int rpc_debug 
nfs_debug extern unsigned int nfs_debug 
nfsd_debug extern unsigned int nfsd_debug 
nlm_debug extern unsigned int nlm_debug 

/* net/sunrpc/timer.o */
rpc_init_rtt extern void rpc_init_rtt ( s#rpc_rtt * , unsigned long ) 
rpc_update_rtt extern void rpc_update_rtt ( s#rpc_rtt * , unsigned , long ) 
rpc_calc_rto extern unsigned long rpc_calc_rto ( s#rpc_rtt * , unsigned ) 

/* net/sunrpc/xdr.o */
xdr_encode_netobj t#__be32 * xdr_encode_netobj ( t#__be32 * , const s#xdr_netobj * ) 
xdr_decode_netobj t#__be32 * xdr_decode_netobj ( t#__be32 * , s#xdr_netobj * ) 
xdr_encode_opaque_fixed t#__be32 * xdr_encode_opaque_fixed ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_opaque t#__be32 * xdr_encode_opaque ( t#__be32 * , const void * , unsigned int ) 
xdr_encode_string t#__be32 * xdr_encode_string ( t#__be32 * , const char * ) 
xdr_decode_string_inplace t#__be32 * xdr_decode_string_inplace ( t#__be32 * , char * * , unsigned int * , unsigned int ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##array_cache
s##kmem_list3
xdr_terminate_string void xdr_terminate_string ( s#xdr_buf * , const t#u32 ) 
xdr_encode_pages void xdr_encode_pages ( s#xdr_buf * , s#page * * , unsigned int , unsigned int ) 
xdr_inline_pages void xdr_inline_pages ( s#xdr_buf * , unsigned int , s#page * * , unsigned int , unsigned int ) 
_copy_from_pages extern void _copy_from_pages ( char * , s#page * * , t#size_t , t#size_t ) 
xdr_shift_buf extern void xdr_shift_buf ( s#xdr_buf * , t#size_t ) 
xdr_init_encode extern void xdr_init_encode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_reserve_space extern t#__be32 * xdr_reserve_space ( s#xdr_stream * , t#size_t ) 
xdr_write_pages extern void xdr_write_pages ( s#xdr_stream * , s#page * * , unsigned int , unsigned int ) 
xdr_init_decode extern void xdr_init_decode ( s#xdr_stream * , s#xdr_buf * , t#__be32 * ) 
xdr_init_decode_pages extern void xdr_init_decode_pages ( s#xdr_stream * , s#xdr_buf * , s#page * * , unsigned int ) 
xdr_set_scratch_buffer extern void xdr_set_scratch_buffer ( s#xdr_stream * , void * , t#size_t ) 
xdr_inline_decode extern t#__be32 * xdr_inline_decode ( s#xdr_stream * , t#size_t ) 
xdr_read_pages extern void xdr_read_pages ( s#xdr_stream * , unsigned int ) 
xdr_enter_page extern void xdr_enter_page ( s#xdr_stream * , unsigned int ) 
xdr_buf_from_iov extern void xdr_buf_from_iov ( s#kvec * , s#xdr_buf * ) 
xdr_buf_subsegment extern int xdr_buf_subsegment ( s#xdr_buf * , s#xdr_buf * , unsigned int , unsigned int ) 
read_bytes_from_xdr_buf extern int read_bytes_from_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
write_bytes_to_xdr_buf extern int write_bytes_to_xdr_buf ( s#xdr_buf * , unsigned int , void * , unsigned int ) 
xdr_decode_word extern int xdr_decode_word ( s#xdr_buf * , unsigned int , t#u32 * ) 
xdr_encode_word extern int xdr_encode_word ( s#xdr_buf * , unsigned int , t#u32 ) 
xdr_buf_read_netobj extern int xdr_buf_read_netobj ( s#xdr_buf * , s#xdr_netobj * , unsigned int ) 
t#xdr_xcode_elem_t typedef int ( * xdr_xcode_elem_t ) ( s#xdr_array2_desc * , void * ) 
s#xdr_array2_desc struct xdr_array2_desc { unsigned int elem_size ; unsigned int array_len ; unsigned int array_maxlen ; t#xdr_xcode_elem_t xcode ; } 
xdr_decode_array2 extern int xdr_decode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_encode_array2 extern int xdr_encode_array2 ( s#xdr_buf * , unsigned int , s#xdr_array2_desc * ) 
xdr_process_buf extern int xdr_process_buf ( s#xdr_buf * , unsigned int , unsigned int , int ( * ) ( s#scatterlist * , void * ) , void * ) 

/* net/sunrpc/xprt.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##rpc_cred_cache
s##workqueue_struct
s##svc_cacherep
s#xprt_create struct xprt_create { int ident ; s#net * net ; s#sockaddr * srcaddr ; s#sockaddr * dstaddr ; t#size_t addrlen ; s#svc_xprt * bc_xprt ; } 
s#xprt_class struct xprt_class { s#list_head list ; int ident ; s#rpc_xprt * ( * setup ) ( s#xprt_create * ) ; s#module * owner ; char name [ 32 ] ; } 
xprt_register_transport int xprt_register_transport ( s#xprt_class * ) 
xprt_unregister_transport int xprt_unregister_transport ( s#xprt_class * ) 
xprt_load_transport int xprt_load_transport ( const char * ) 
xprt_reserve_xprt int xprt_reserve_xprt ( s#rpc_task * ) 
xprt_reserve_xprt_cong int xprt_reserve_xprt_cong ( s#rpc_task * ) 
xprt_release_xprt void xprt_release_xprt ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_xprt_cong void xprt_release_xprt_cong ( s#rpc_xprt * , s#rpc_task * ) 
xprt_release_rqst_cong void xprt_release_rqst_cong ( s#rpc_task * ) 
xprt_adjust_cwnd void xprt_adjust_cwnd ( s#rpc_task * , int ) 
xprt_wake_pending_tasks void xprt_wake_pending_tasks ( s#rpc_xprt * , int ) 
xprt_wait_for_buffer_space void xprt_wait_for_buffer_space ( s#rpc_task * , t#rpc_action ) 
xprt_write_space void xprt_write_space ( s#rpc_xprt * ) 
xprt_set_retrans_timeout_def void xprt_set_retrans_timeout_def ( s#rpc_task * ) 
xprt_set_retrans_timeout_rtt void xprt_set_retrans_timeout_rtt ( s#rpc_task * ) 
xprt_disconnect_done void xprt_disconnect_done ( s#rpc_xprt * ) 
xprt_lookup_rqst s#rpc_rqst * xprt_lookup_rqst ( s#rpc_xprt * , t#__be32 ) 
xprt_complete_rqst void xprt_complete_rqst ( s#rpc_task * , int ) 
xprt_alloc s#rpc_xprt * xprt_alloc ( s#net * , int , int ) 
xprt_free void xprt_free ( s#rpc_xprt * ) 

/* net/sunrpc/xprtsock.o */
s##nameidata
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##backing_dev_info
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##array_cache
s##kmem_list3
s##xfrm_state
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##rpc_cred_cache
s##rpc_iostats
s##workqueue_struct
s##svc_cacherep
xs_swapper int xs_swapper ( s#rpc_xprt * , int ) 

/* net/sysctl_net.o */
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##pid_namespace
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##perf_event
s##fs_struct
s##files_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##xfrm_state
s##rtable
s##rt6_info
s##dn_route
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_statistics
s##fib6_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
register_net_sysctl_table extern s#ctl_table_header * register_net_sysctl_table ( s#net * , const s#ctl_path * , s#ctl_table * ) 
register_net_sysctl_rotable extern s#ctl_table_header * register_net_sysctl_rotable ( const s#ctl_path * , s#ctl_table * ) 
unregister_net_sysctl_table extern void unregister_net_sysctl_table ( s#ctl_table_header * ) 

/* net/wimax/op-msg.o */
s##sock
s##iw_handler_def
s##iw_public_data
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##sec_path
e#wimax_st enum wimax_st { __WIMAX_ST_NULL = 0 , WIMAX_ST_DOWN , __WIMAX_ST_QUIESCING , WIMAX_ST_UNINITIALIZED , WIMAX_ST_RADIO_OFF , WIMAX_ST_READY , WIMAX_ST_SCANNING , WIMAX_ST_CONNECTING , WIMAX_ST_CONNECTED , __WIMAX_ST_INVALID } 
e#wimax_rf_state enum wimax_rf_state { WIMAX_RF_OFF = 0 , WIMAX_RF_ON = 1 , WIMAX_RF_QUERY = 2 , } 
s##rfkill
s##input_dev
s#wimax_dev struct wimax_dev { s#net_device * net_dev ; s#list_head id_table_node ; s#mutex mutex ; s#mutex mutex_reset ; e#wimax_st state ; int ( * op_msg_from_user ) ( s#wimax_dev * , const char * , const void * , t#size_t , const s#genl_info * ) ; int ( * op_rfkill_sw_toggle ) ( s#wimax_dev * , e#wimax_rf_state ) ; int ( * op_reset ) ( s#wimax_dev * ) ; s#rfkill * rfkill ; s#input_dev * rfkill_input ; unsigned rf_hw ; unsigned rf_sw ; char name [ 32 ] ; s#dentry * debugfs_dentry ; } 
wimax_msg_alloc extern s#sk_buff * wimax_msg_alloc ( s#wimax_dev * , const char * , const void * , t#size_t , t#gfp_t ) 
wimax_msg_data_len extern const void * wimax_msg_data_len ( s#sk_buff * , t#size_t * ) 
wimax_msg_data extern const void * wimax_msg_data ( s#sk_buff * ) 
wimax_msg_len extern t#ssize_t wimax_msg_len ( s#sk_buff * ) 
wimax_msg_send extern int wimax_msg_send ( s#wimax_dev * , s#sk_buff * ) 
wimax_msg extern int wimax_msg ( s#wimax_dev * , const char * , const void * , t#size_t , t#gfp_t ) 

/* net/wimax/op-reset.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##rfkill
s##input_dev
wimax_reset extern int wimax_reset ( s#wimax_dev * ) 

/* net/wimax/op-rfkill.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##rfkill
s##input_dev
wimax_report_rfkill_hw extern void wimax_report_rfkill_hw ( s#wimax_dev * , e#wimax_rf_state ) 
wimax_report_rfkill_sw extern void wimax_report_rfkill_sw ( s#wimax_dev * , e#wimax_rf_state ) 
wimax_rfkill extern int wimax_rfkill ( s#wimax_dev * , e#wimax_rf_state ) 

/* net/wimax/stack.o */
s##iw_handler_def
s##iw_public_data
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##sysfs_dirent
s##cpu_rmap
s##Qdisc
s##tvec_base
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##rtnl_link_ops
s##phy_device
s##rfkill
s##input_dev
wimax_state_change extern void wimax_state_change ( s#wimax_dev * , e#wimax_st ) 
wimax_state_get extern e#wimax_st wimax_state_get ( s#wimax_dev * ) 
wimax_dev_init extern void wimax_dev_init ( s#wimax_dev * ) 
wimax_dev_add extern int wimax_dev_add ( s#wimax_dev * , s#net_device * ) 
wimax_dev_rm extern void wimax_dev_rm ( s#wimax_dev * ) 

/* net/wireless/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s#cfg80211_cached_keys struct cfg80211_cached_keys { s#key_params params [ 6 ] ; t#u8 data [ 6 ] [ 32 ] ; int def , defmgmt ; } 
s#cfg80211_bss struct cfg80211_bss { s#ieee80211_channel * channel ; t#u8 bssid [ 6 ] ; t#u64 tsf ; t#u16 beacon_interval ; t#u16 capability ; t#u8 * information_elements ; t#size_t len_information_elements ; t#u8 * beacon_ies ; t#size_t len_beacon_ies ; t#u8 * proberesp_ies ; t#size_t len_proberesp_ies ; t#s32 signal ; void ( * free_priv ) ( s#cfg80211_bss * ) ; t#u8 priv [ 0 ] __attribute__ ( ( __aligned__ ( sizeof ( void * ) ) ) ) ; } 
s#cfg80211_internal_bss struct cfg80211_internal_bss { s#list_head list ; s#rb_node rbn ; unsigned long ts ; s#kref ref ; t#atomic_t hold ; t#bool beacon_ies_allocated ; t#bool proberesp_ies_allocated ; s#cfg80211_bss pub ; } 
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s#vif_params struct vif_params { int use_4addr ; } 
s#beacon_parameters struct beacon_parameters { t#u8 * head , * tail ; int interval , dtim_period ; int head_len , tail_len ; } 
s#station_parameters struct station_parameters { t#u8 * supported_rates ; s#net_device * vlan ; t#u32 sta_flags_mask , sta_flags_set ; int listen_interval ; t#u16 aid ; t#u8 supported_rates_len ; t#u8 plink_action ; t#u8 plink_state ; s#ieee80211_ht_cap * ht_capa ; } 
s#rate_info struct rate_info { t#u8 flags ; t#u8 mcs ; t#u16 legacy ; } 
s#sta_bss_parameters struct sta_bss_parameters { t#u8 flags ; t#u8 dtim_period ; t#u16 beacon_interval ; } 
s#station_info struct station_info { t#u32 filled ; t#u32 connected_time ; t#u32 inactive_time ; t#u32 rx_bytes ; t#u32 tx_bytes ; t#u16 llid ; t#u16 plid ; t#u8 plink_state ; t#s8 signal ; t#s8 signal_avg ; s#rate_info txrate ; s#rate_info rxrate ; t#u32 rx_packets ; t#u32 tx_packets ; t#u32 tx_retries ; t#u32 tx_failed ; t#u32 rx_dropped_misc ; s#sta_bss_parameters bss_param ; int generation ; } 
s#mpath_info struct mpath_info { t#u32 filled ; t#u32 frame_qlen ; t#u32 sn ; t#u32 metric ; t#u32 exptime ; t#u32 discovery_timeout ; t#u8 discovery_retries ; t#u8 flags ; int generation ; } 
s#mesh_config struct mesh_config { t#u16 dot11MeshRetryTimeout ; t#u16 dot11MeshConfirmTimeout ; t#u16 dot11MeshHoldingTimeout ; t#u16 dot11MeshMaxPeerLinks ; t#u8 dot11MeshMaxRetries ; t#u8 dot11MeshTTL ; t#u8 element_ttl ; t#bool auto_open_plinks ; t#u8 dot11MeshHWMPmaxPREQretries ; t#u32 path_refresh_time ; t#u16 min_discovery_timeout ; t#u32 dot11MeshHWMPactivePathTimeout ; t#u16 dot11MeshHWMPpreqMinInterval ; t#u16 dot11MeshHWMPnetDiameterTraversalTime ; t#u8 dot11MeshHWMPRootMode ; } 
s#mesh_setup struct mesh_setup { const t#u8 * mesh_id ; t#u8 mesh_id_len ; t#u8 path_sel_proto ; t#u8 path_metric ; const t#u8 * ie ; t#u8 ie_len ; t#bool is_authenticated ; t#bool is_secure ; } 
s#bss_parameters struct bss_parameters { int use_cts_prot ; int use_short_preamble ; int use_short_slot_time ; t#u8 * basic_rates ; t#u8 basic_rates_len ; int ap_isolate ; int ht_opmode ; } 
e#nl80211_txq_q enum nl80211_txq_q { NL80211_TXQ_Q_VO , NL80211_TXQ_Q_VI , NL80211_TXQ_Q_BE , NL80211_TXQ_Q_BK } 
s#ieee80211_txq_params struct ieee80211_txq_params { e#nl80211_txq_q queue ; t#u16 txop ; t#u16 cwmin ; t#u16 cwmax ; t#u8 aifs ; } 
s#cfg80211_auth_request struct cfg80211_auth_request { s#cfg80211_bss * bss ; const t#u8 * ie ; t#size_t ie_len ; e#nl80211_auth_type auth_type ; const t#u8 * key ; t#u8 key_len , key_idx ; t#bool local_state_change ; } 
s#cfg80211_assoc_request struct cfg80211_assoc_request { s#cfg80211_bss * bss ; const t#u8 * ie , * prev_bssid ; t#size_t ie_len ; s#cfg80211_crypto_settings crypto ; t#bool use_mfp ; } 
s#cfg80211_deauth_request struct cfg80211_deauth_request { s#cfg80211_bss * bss ; const t#u8 * ie ; t#size_t ie_len ; t#u16 reason_code ; t#bool local_state_change ; } 
s#cfg80211_disassoc_request struct cfg80211_disassoc_request { s#cfg80211_bss * bss ; const t#u8 * ie ; t#size_t ie_len ; t#u16 reason_code ; t#bool local_state_change ; } 
e#nl80211_tx_power_setting enum nl80211_tx_power_setting { NL80211_TX_POWER_AUTOMATIC , NL80211_TX_POWER_LIMITED , NL80211_TX_POWER_FIXED , } 
s#cfg80211_pmksa struct cfg80211_pmksa { t#u8 * bssid ; t#u8 * pmkid ; } 
s#cfg80211_ops struct cfg80211_ops { int ( * suspend ) ( s#wiphy * , s#cfg80211_wowlan * ) ; int ( * resume ) ( s#wiphy * ) ; s#net_device * ( * add_virtual_intf ) ( s#wiphy * , char * , e#nl80211_iftype , t#u32 * , s#vif_params * ) ; int ( * del_virtual_intf ) ( s#wiphy * , s#net_device * ) ; int ( * change_virtual_intf ) ( s#wiphy * , s#net_device * , e#nl80211_iftype , t#u32 * , s#vif_params * ) ; int ( * add_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * , s#key_params * ) ; int ( * get_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * , void * , void ( * ) ( void * , s#key_params * ) ) ; int ( * del_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , const t#u8 * ) ; int ( * set_default_key ) ( s#wiphy * , s#net_device * , t#u8 , t#bool , t#bool ) ; int ( * set_default_mgmt_key ) ( s#wiphy * , s#net_device * , t#u8 ) ; int ( * add_beacon ) ( s#wiphy * , s#net_device * , s#beacon_parameters * ) ; int ( * set_beacon ) ( s#wiphy * , s#net_device * , s#beacon_parameters * ) ; int ( * del_beacon ) ( s#wiphy * , s#net_device * ) ; int ( * add_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_parameters * ) ; int ( * del_station ) ( s#wiphy * , s#net_device * , t#u8 * ) ; int ( * change_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_parameters * ) ; int ( * get_station ) ( s#wiphy * , s#net_device * , t#u8 * , s#station_info * ) ; int ( * dump_station ) ( s#wiphy * , s#net_device * , int , t#u8 * , s#station_info * ) ; int ( * add_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * ) ; int ( * del_mpath ) ( s#wiphy * , s#net_device * , t#u8 * ) ; int ( * change_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * ) ; int ( * get_mpath ) ( s#wiphy * , s#net_device * , t#u8 * , t#u8 * , s#mpath_info * ) ; int ( * dump_mpath ) ( s#wiphy * , s#net_device * , int , t#u8 * , t#u8 * , s#mpath_info * ) ; int ( * get_mesh_config ) ( s#wiphy * , s#net_device * , s#mesh_config * ) ; int ( * update_mesh_config ) ( s#wiphy * , s#net_device * , t#u32 , const s#mesh_config * ) ; int ( * join_mesh ) ( s#wiphy * , s#net_device * , const s#mesh_config * , const s#mesh_setup * ) ; int ( * leave_mesh ) ( s#wiphy * , s#net_device * ) ; int ( * change_bss ) ( s#wiphy * , s#net_device * , s#bss_parameters * ) ; int ( * set_txq_params ) ( s#wiphy * , s#ieee80211_txq_params * ) ; int ( * set_channel ) ( s#wiphy * , s#net_device * , s#ieee80211_channel * , e#nl80211_channel_type ) ; int ( * scan ) ( s#wiphy * , s#net_device * , s#cfg80211_scan_request * ) ; int ( * auth ) ( s#wiphy * , s#net_device * , s#cfg80211_auth_request * ) ; int ( * assoc ) ( s#wiphy * , s#net_device * , s#cfg80211_assoc_request * ) ; int ( * deauth ) ( s#wiphy * , s#net_device * , s#cfg80211_deauth_request * , void * ) ; int ( * disassoc ) ( s#wiphy * , s#net_device * , s#cfg80211_disassoc_request * , void * ) ; int ( * connect ) ( s#wiphy * , s#net_device * , s#cfg80211_connect_params * ) ; int ( * disconnect ) ( s#wiphy * , s#net_device * , t#u16 ) ; int ( * join_ibss ) ( s#wiphy * , s#net_device * , s#cfg80211_ibss_params * ) ; int ( * leave_ibss ) ( s#wiphy * , s#net_device * ) ; int ( * set_wiphy_params ) ( s#wiphy * , t#u32 ) ; int ( * set_tx_power ) ( s#wiphy * , e#nl80211_tx_power_setting , int ) ; int ( * get_tx_power ) ( s#wiphy * , int * ) ; int ( * set_wds_peer ) ( s#wiphy * , s#net_device * , const t#u8 * ) ; void ( * rfkill_poll ) ( s#wiphy * ) ; int ( * set_bitrate_mask ) ( s#wiphy * , s#net_device * , const t#u8 * , const s#cfg80211_bitrate_mask * ) ; int ( * dump_survey ) ( s#wiphy * , s#net_device * , int , s#survey_info * ) ; int ( * set_pmksa ) ( s#wiphy * , s#net_device * , s#cfg80211_pmksa * ) ; int ( * del_pmksa ) ( s#wiphy * , s#net_device * , s#cfg80211_pmksa * ) ; int ( * flush_pmksa ) ( s#wiphy * , s#net_device * ) ; int ( * remain_on_channel ) ( s#wiphy * , s#net_device * , s#ieee80211_channel * , e#nl80211_channel_type , unsigned int , t#u64 * ) ; int ( * cancel_remain_on_channel ) ( s#wiphy * , s#net_device * , t#u64 ) ; int ( * mgmt_tx ) ( s#wiphy * , s#net_device * , s#ieee80211_channel * , t#bool , e#nl80211_channel_type , t#bool , unsigned int , const t#u8 * , t#size_t , t#u64 * ) ; int ( * mgmt_tx_cancel_wait ) ( s#wiphy * , s#net_device * , t#u64 ) ; int ( * set_power_mgmt ) ( s#wiphy * , s#net_device * , t#bool , int ) ; int ( * set_cqm_rssi_config ) ( s#wiphy * , s#net_device * , t#s32 , t#u32 ) ; void ( * mgmt_frame_register ) ( s#wiphy * , s#net_device * , t#u16 , t#bool ) ; int ( * set_antenna ) ( s#wiphy * , t#u32 , t#u32 ) ; int ( * get_antenna ) ( s#wiphy * , t#u32 * , t#u32 * ) ; int ( * set_ringparam ) ( s#wiphy * , t#u32 , t#u32 ) ; void ( * get_ringparam ) ( s#wiphy * , t#u32 * , t#u32 * , t#u32 * , t#u32 * ) ; int ( * sched_scan_start ) ( s#wiphy * , s#net_device * , s#cfg80211_sched_scan_request * ) ; int ( * sched_scan_stop ) ( s#wiphy * , s#net_device * ) ; } 
wiphy_new s#wiphy * wiphy_new ( const s#cfg80211_ops * , int ) 
wiphy_register extern int wiphy_register ( s#wiphy * ) 
wiphy_rfkill_start_polling void wiphy_rfkill_start_polling ( s#wiphy * ) 
wiphy_rfkill_stop_polling void wiphy_rfkill_stop_polling ( s#wiphy * ) 
wiphy_unregister extern void wiphy_unregister ( s#wiphy * ) 
wiphy_free extern void wiphy_free ( s#wiphy * ) 
wiphy_rfkill_set_hw_state void wiphy_rfkill_set_hw_state ( s#wiphy * , t#bool ) 

/* net/wireless/ibss.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
cfg80211_ibss_joined void cfg80211_ibss_joined ( s#net_device * , const t#u8 * , t#gfp_t ) 

/* net/wireless/lib80211.o */
print_ssid const char * print_ssid ( char * , const char * , t#u8 ) 
s##sock
s##net_device
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s#lib80211_crypto_ops struct lib80211_crypto_ops { const char * name ; s#list_head list ; void * ( * init ) ( int ) ; void ( * deinit ) ( void * ) ; int ( * encrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_mpdu ) ( s#sk_buff * , int , void * ) ; int ( * encrypt_msdu ) ( s#sk_buff * , int , void * ) ; int ( * decrypt_msdu ) ( s#sk_buff * , int , int , void * ) ; int ( * set_key ) ( void * , int , t#u8 * , void * ) ; int ( * get_key ) ( void * , int , t#u8 * , void * ) ; char * ( * print_stats ) ( char * , void * ) ; unsigned long ( * get_flags ) ( void * ) ; unsigned long ( * set_flags ) ( unsigned long , void * ) ; int extra_mpdu_prefix_len , extra_mpdu_postfix_len ; int extra_msdu_prefix_len , extra_msdu_postfix_len ; s#module * owner ; } 
s#lib80211_crypt_data struct lib80211_crypt_data { s#list_head list ; s#lib80211_crypto_ops * ops ; void * priv ; t#atomic_t refcnt ; } 
s##tvec_base
s#lib80211_crypt_info struct lib80211_crypt_info { char * name ; t#spinlock_t * lock ; s#lib80211_crypt_data * crypt [ 4 ] ; int tx_keyidx ; s#list_head crypt_deinit_list ; s#timer_list crypt_deinit_timer ; int crypt_quiesced ; } 
lib80211_crypt_info_init int lib80211_crypt_info_init ( s#lib80211_crypt_info * , char * , t#spinlock_t * ) 
lib80211_crypt_info_free void lib80211_crypt_info_free ( s#lib80211_crypt_info * ) 
lib80211_crypt_deinit_entries void lib80211_crypt_deinit_entries ( s#lib80211_crypt_info * , int ) 
lib80211_crypt_quiescing void lib80211_crypt_quiescing ( s#lib80211_crypt_info * ) 
lib80211_crypt_deinit_handler void lib80211_crypt_deinit_handler ( unsigned long ) 
lib80211_crypt_delayed_deinit void lib80211_crypt_delayed_deinit ( s#lib80211_crypt_info * , s#lib80211_crypt_data * * ) 
lib80211_register_crypto_ops int lib80211_register_crypto_ops ( s#lib80211_crypto_ops * ) 
lib80211_unregister_crypto_ops int lib80211_unregister_crypto_ops ( s#lib80211_crypto_ops * ) 
lib80211_get_crypto_ops s#lib80211_crypto_ops * lib80211_get_crypto_ops ( const char * ) 

/* net/wireless/mesh.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
cfg80211_notify_new_peer_candidate void cfg80211_notify_new_peer_candidate ( s#net_device * , const t#u8 * , const t#u8 * , t#u8 , t#gfp_t ) 

/* net/wireless/mlme.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
cfg80211_send_rx_auth void cfg80211_send_rx_auth ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_send_rx_assoc void cfg80211_send_rx_assoc ( s#net_device * , const t#u8 * , t#size_t ) 
__cfg80211_send_deauth void __cfg80211_send_deauth ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_send_deauth void cfg80211_send_deauth ( s#net_device * , const t#u8 * , t#size_t ) 
__cfg80211_send_disassoc void __cfg80211_send_disassoc ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_send_disassoc void cfg80211_send_disassoc ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_send_unprot_deauth void cfg80211_send_unprot_deauth ( s#net_device * , const t#u8 * , t#size_t ) 
cfg80211_send_unprot_disassoc void cfg80211_send_unprot_disassoc ( s#net_device * , const t#u8 * , t#size_t ) 
__cfg80211_auth_canceled void __cfg80211_auth_canceled ( s#net_device * , const t#u8 * ) 
cfg80211_send_auth_timeout void cfg80211_send_auth_timeout ( s#net_device * , const t#u8 * ) 
cfg80211_send_assoc_timeout void cfg80211_send_assoc_timeout ( s#net_device * , const t#u8 * ) 
e#nl80211_key_type enum nl80211_key_type { NL80211_KEYTYPE_GROUP , NL80211_KEYTYPE_PAIRWISE , NL80211_KEYTYPE_PEERKEY , NUM_NL80211_KEYTYPES } 
cfg80211_michael_mic_failure void cfg80211_michael_mic_failure ( s#net_device * , const t#u8 * , e#nl80211_key_type , int , const t#u8 * , t#gfp_t ) 
cfg80211_ready_on_channel void cfg80211_ready_on_channel ( s#net_device * , t#u64 , s#ieee80211_channel * , e#nl80211_channel_type , unsigned int , t#gfp_t ) 
cfg80211_remain_on_channel_expired void cfg80211_remain_on_channel_expired ( s#net_device * , t#u64 , s#ieee80211_channel * , e#nl80211_channel_type , t#gfp_t ) 
cfg80211_new_sta void cfg80211_new_sta ( s#net_device * , const t#u8 * , s#station_info * , t#gfp_t ) 
cfg80211_del_sta void cfg80211_del_sta ( s#net_device * , const t#u8 * , t#gfp_t ) 
cfg80211_rx_mgmt t#bool cfg80211_rx_mgmt ( s#net_device * , int , const t#u8 * , t#size_t , t#gfp_t ) 
cfg80211_mgmt_tx_status void cfg80211_mgmt_tx_status ( s#net_device * , t#u64 , const t#u8 * , t#size_t , t#bool , t#gfp_t ) 
cfg80211_cqm_rssi_notify void cfg80211_cqm_rssi_notify ( s#net_device * , e#nl80211_cqm_rssi_threshold_event , t#gfp_t ) 
cfg80211_cqm_pktloss_notify void cfg80211_cqm_pktloss_notify ( s#net_device * , const t#u8 * , t#u32 , t#gfp_t ) 

/* net/wireless/radiotap.o */
s#ieee80211_radiotap_header struct ieee80211_radiotap_header { t#u8 it_version ; t#u8 it_pad ; t#__le16 it_len ; t#__le32 it_present ; } 
s#radiotap_align_size struct radiotap_align_size { t#uint8_t align : 4 , size : 4 ; } 
s#ieee80211_radiotap_namespace struct ieee80211_radiotap_namespace { const s#radiotap_align_size * align_size ; int n_bits ; t#uint32_t oui ; t#uint8_t subns ; } 
s#ieee80211_radiotap_vendor_namespaces struct ieee80211_radiotap_vendor_namespaces { const s#ieee80211_radiotap_namespace * ns ; int n_ns ; } 
s#ieee80211_radiotap_iterator struct ieee80211_radiotap_iterator { s#ieee80211_radiotap_header * _rtheader ; const s#ieee80211_radiotap_vendor_namespaces * _vns ; const s#ieee80211_radiotap_namespace * current_namespace ; unsigned char * _arg , * _next_ns_data ; t#__le32 * _next_bitmap ; unsigned char * this_arg ; int this_arg_index ; int this_arg_size ; int is_radiotap_ns ; int _max_length ; int _arg_index ; t#uint32_t _bitmap_shifter ; int _reset_on_ext ; } 
ieee80211_radiotap_iterator_init extern int ieee80211_radiotap_iterator_init ( s#ieee80211_radiotap_iterator * , s#ieee80211_radiotap_header * , int , const s#ieee80211_radiotap_vendor_namespaces * ) 
ieee80211_radiotap_iterator_next extern int ieee80211_radiotap_iterator_next ( s#ieee80211_radiotap_iterator * ) 

/* net/wireless/reg.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
freq_reg_info extern int freq_reg_info ( s#wiphy * , t#u32 , t#u32 , const s#ieee80211_reg_rule * * ) 
wiphy_apply_custom_regulatory extern void wiphy_apply_custom_regulatory ( s#wiphy * , const s#ieee80211_regdomain * ) 
regulatory_hint extern int regulatory_hint ( s#wiphy * , const char * ) 

/* net/wireless/scan.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##libipw_device
s##sec_path
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
cfg80211_scan_done void cfg80211_scan_done ( s#cfg80211_scan_request * , t#bool ) 
cfg80211_sched_scan_results void cfg80211_sched_scan_results ( s#wiphy * ) 
cfg80211_sched_scan_stopped void cfg80211_sched_scan_stopped ( s#wiphy * ) 
cfg80211_find_ie const t#u8 * cfg80211_find_ie ( t#u8 , const t#u8 * , int ) 
cfg80211_get_bss s#cfg80211_bss * cfg80211_get_bss ( s#wiphy * , s#ieee80211_channel * , const t#u8 * , const t#u8 * , t#size_t , t#u16 , t#u16 ) 
cfg80211_get_mesh s#cfg80211_bss * cfg80211_get_mesh ( s#wiphy * , s#ieee80211_channel * , const t#u8 * , t#size_t , const t#u8 * ) 
cfg80211_inform_bss s#cfg80211_bss * cfg80211_inform_bss ( s#wiphy * , s#ieee80211_channel * , const t#u8 * , t#u64 , t#u16 , t#u16 , const t#u8 * , t#size_t , t#s32 , t#gfp_t ) 
cfg80211_inform_bss_frame s#cfg80211_bss * cfg80211_inform_bss_frame ( s#wiphy * , s#ieee80211_channel * , s#ieee80211_mgmt * , t#size_t , t#s32 , t#gfp_t ) 
cfg80211_put_bss void cfg80211_put_bss ( s#cfg80211_bss * ) 
cfg80211_unlink_bss void cfg80211_unlink_bss ( s#wiphy * , s#cfg80211_bss * ) 
cfg80211_wext_siwscan int cfg80211_wext_siwscan ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
cfg80211_wext_giwscan int cfg80211_wext_giwscan ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 

/* net/wireless/sme.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
cfg80211_connect_result void cfg80211_connect_result ( s#net_device * , const t#u8 * , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#u16 , t#gfp_t ) 
cfg80211_roamed void cfg80211_roamed ( s#net_device * , s#ieee80211_channel * , const t#u8 * , const t#u8 * , t#size_t , const t#u8 * , t#size_t , t#gfp_t ) 
cfg80211_disconnected void cfg80211_disconnected ( s#net_device * , t#u16 , t#u8 * , t#size_t , t#gfp_t ) 

/* net/wireless/util.o */
ieee80211_get_response_rate s#ieee80211_rate * ieee80211_get_response_rate ( s#ieee80211_supported_band * , t#u32 , int ) 
ieee80211_channel_to_frequency extern int ieee80211_channel_to_frequency ( int , e#ieee80211_band ) 
ieee80211_frequency_to_channel extern int ieee80211_frequency_to_channel ( int ) 
s##device_private
s##vfsmount
s##nameidata
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##libipw_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##rt6_info
s##rt6_statistics
s##fib6_table
s##xfrm_state
s##rtable
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##phy_device
s##sec_path
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##xfrm_policy
s##sysfs_dirent
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
__ieee80211_get_channel extern s#ieee80211_channel * __ieee80211_get_channel ( s#wiphy * , int ) 
rfc1042_header extern const unsigned char rfc1042_header [ 6 ] 
bridge_tunnel_header extern const unsigned char bridge_tunnel_header [ 6 ] 
ieee80211_hdrlen unsigned int __attribute__ ( ( __const__ ) ) ieee80211_hdrlen ( t#__le16 ) 
ieee80211_get_hdrlen_from_skb unsigned int ieee80211_get_hdrlen_from_skb ( const s#sk_buff * ) 
ieee80211_data_to_8023 int ieee80211_data_to_8023 ( s#sk_buff * , const t#u8 * , e#nl80211_iftype ) 
ieee80211_data_from_8023 int ieee80211_data_from_8023 ( s#sk_buff * , const t#u8 * , e#nl80211_iftype , t#u8 * , t#bool ) 
ieee80211_amsdu_to_8023s void ieee80211_amsdu_to_8023s ( s#sk_buff * , s#sk_buff_head * , const t#u8 * , e#nl80211_iftype , const unsigned int , t#bool ) 
cfg80211_classify8021d unsigned int cfg80211_classify8021d ( s#sk_buff * ) 
ieee80211_bss_get_ie const t#u8 * ieee80211_bss_get_ie ( s#cfg80211_bss * , t#u8 ) 

/* net/wireless/wext-compat.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
cfg80211_wext_giwname int cfg80211_wext_giwname ( s#net_device * , s#iw_request_info * , char * , char * ) 
cfg80211_wext_siwmode int cfg80211_wext_siwmode ( s#net_device * , s#iw_request_info * , t#u32 * , char * ) 
cfg80211_wext_giwmode int cfg80211_wext_giwmode ( s#net_device * , s#iw_request_info * , t#u32 * , char * ) 
cfg80211_wext_giwrange int cfg80211_wext_giwrange ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwrts int cfg80211_wext_siwrts ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwrts int cfg80211_wext_giwrts ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwfrag int cfg80211_wext_siwfrag ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwfrag int cfg80211_wext_giwfrag ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwretry int cfg80211_wext_siwretry ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwretry int cfg80211_wext_giwretry ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwencode int cfg80211_wext_siwencode ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwencodeext int cfg80211_wext_siwencodeext ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_giwencode int cfg80211_wext_giwencode ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwfreq int cfg80211_wext_siwfreq ( s#net_device * , s#iw_request_info * , s#iw_freq * , char * ) 
cfg80211_wext_giwfreq int cfg80211_wext_giwfreq ( s#net_device * , s#iw_request_info * , s#iw_freq * , char * ) 
cfg80211_wext_siwtxpower int cfg80211_wext_siwtxpower ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
cfg80211_wext_giwtxpower int cfg80211_wext_giwtxpower ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
cfg80211_wext_siwauth int cfg80211_wext_siwauth ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwauth int cfg80211_wext_giwauth ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwpower int cfg80211_wext_siwpower ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwpower int cfg80211_wext_giwpower ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_siwrate int cfg80211_wext_siwrate ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wext_giwrate int cfg80211_wext_giwrate ( s#net_device * , s#iw_request_info * , s#iw_param * , char * ) 
cfg80211_wireless_stats s#iw_statistics * cfg80211_wireless_stats ( s#net_device * ) 
cfg80211_wext_siwap int cfg80211_wext_siwap ( s#net_device * , s#iw_request_info * , s#sockaddr * , char * ) 
cfg80211_wext_giwap int cfg80211_wext_giwap ( s#net_device * , s#iw_request_info * , s#sockaddr * , char * ) 
cfg80211_wext_siwessid int cfg80211_wext_siwessid ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_giwessid int cfg80211_wext_giwessid ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwpmksa int cfg80211_wext_siwpmksa ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 

/* net/wireless/wext-core.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cfg80211_cached_keys
s##cfg80211_internal_bss
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
wireless_send_event extern void wireless_send_event ( s#net_device * , unsigned int , u#iwreq_data * , const char * ) 

/* net/wireless/wext-sme.o */
s##libipw_device
s##sock
s##sec_path
s##neigh_parms
s##vlan_group
s##netpoll_info
s##neighbour
s##in_device
s##dn_dev
s##inet6_dev
s##device_private
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##cfg80211_conn
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##rtnl_link_ops
s##phy_device
cfg80211_wext_siwgenie int cfg80211_wext_siwgenie ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 
cfg80211_wext_siwmlme int cfg80211_wext_siwmlme ( s#net_device * , s#iw_request_info * , s#iw_point * , char * ) 

/* net/wireless/wext-spy.o */
s##libipw_device
s##sock
s##sec_path
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##vfsmount
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ipv6_devconf
s##rt6_info
s##rt6_statistics
s##fib6_table
s##dst_entry
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##inet6_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
iw_handler_set_spy extern int iw_handler_set_spy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_get_spy extern int iw_handler_get_spy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_set_thrspy extern int iw_handler_set_thrspy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
iw_handler_get_thrspy extern int iw_handler_get_thrspy ( s#net_device * , s#iw_request_info * , u#iwreq_data * , char * ) 
wireless_spy_update extern void wireless_spy_update ( s#net_device * , unsigned char * , s#iw_quality * ) 

/* net/xfrm/xfrm_algo.o */
s#xfrm_algo_aead_info struct xfrm_algo_aead_info { t#u16 icv_truncbits ; } 
s#xfrm_algo_auth_info struct xfrm_algo_auth_info { t#u16 icv_truncbits ; t#u16 icv_fullbits ; } 
s#xfrm_algo_encr_info struct xfrm_algo_encr_info { t#u16 blockbits ; t#u16 defkeybits ; } 
s#xfrm_algo_comp_info struct xfrm_algo_comp_info { t#u16 threshold ; } 
s#sadb_alg struct sadb_alg { t#__u8 sadb_alg_id ; t#__u8 sadb_alg_ivlen ; t#__u16 sadb_alg_minbits ; t#__u16 sadb_alg_maxbits ; t#__u16 sadb_alg_reserved ; } 
s#xfrm_algo_desc struct xfrm_algo_desc { char * name ; char * compat ; t#u8 available : 1 ; union { s#xfrm_algo_aead_info aead ; s#xfrm_algo_auth_info auth ; s#xfrm_algo_encr_info encr ; s#xfrm_algo_comp_info comp ; } uinfo ; s#sadb_alg desc ; } 
xfrm_aalg_get_byid extern s#xfrm_algo_desc * xfrm_aalg_get_byid ( int ) 
xfrm_ealg_get_byid extern s#xfrm_algo_desc * xfrm_ealg_get_byid ( int ) 
xfrm_calg_get_byid extern s#xfrm_algo_desc * xfrm_calg_get_byid ( int ) 
xfrm_aalg_get_byname extern s#xfrm_algo_desc * xfrm_aalg_get_byname ( const char * , int ) 
xfrm_ealg_get_byname extern s#xfrm_algo_desc * xfrm_ealg_get_byname ( const char * , int ) 
xfrm_calg_get_byname extern s#xfrm_algo_desc * xfrm_calg_get_byname ( const char * , int ) 
xfrm_aead_get_byname extern s#xfrm_algo_desc * xfrm_aead_get_byname ( const char * , int , int ) 
xfrm_aalg_get_byidx extern s#xfrm_algo_desc * xfrm_aalg_get_byidx ( unsigned int ) 
xfrm_ealg_get_byidx extern s#xfrm_algo_desc * xfrm_ealg_get_byidx ( unsigned int ) 
xfrm_probe_algs extern void xfrm_probe_algs ( void ) 
xfrm_count_auth_supported extern int xfrm_count_auth_supported ( void ) 
xfrm_count_enc_supported extern int xfrm_count_enc_supported ( void ) 
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
pskb_put extern void * pskb_put ( s#sk_buff * , s#sk_buff * , int ) 

/* net/xfrm/xfrm_input.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
__secpath_destroy extern void __secpath_destroy ( s#sec_path * ) 
secpath_dup extern s#sec_path * secpath_dup ( s#sec_path * ) 
xfrm_prepare_input extern int xfrm_prepare_input ( s#xfrm_state * , s#sk_buff * ) 
xfrm_input extern int xfrm_input ( s#sk_buff * , int , t#__be32 , int ) 
xfrm_input_resume extern int xfrm_input_resume ( s#sk_buff * , int ) 

/* net/xfrm/xfrm_ipcomp.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
ipcomp_input int ipcomp_input ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_output int ipcomp_output ( s#xfrm_state * , s#sk_buff * ) 
ipcomp_destroy void ipcomp_destroy ( s#xfrm_state * ) 
ipcomp_init_state int ipcomp_init_state ( s#xfrm_state * ) 

/* net/xfrm/xfrm_output.o */
s##vfsmount
s##nameidata
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm_output_resume extern int xfrm_output_resume ( s#sk_buff * , int ) 
xfrm_output extern int xfrm_output ( s#sk_buff * ) 
xfrm_inner_extract_output extern int xfrm_inner_extract_output ( s#xfrm_state * , s#sk_buff * ) 

/* net/xfrm/xfrm_policy.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##nsproxy
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##array_cache
s##kmem_list3
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##mempolicy
s##perf_event
s##fs_struct
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
xfrm_cfg_mutex extern s#mutex xfrm_cfg_mutex 
xfrm_policy_alloc s#xfrm_policy * xfrm_policy_alloc ( s#net * , t#gfp_t ) 
xfrm_policy_destroy extern void xfrm_policy_destroy ( s#xfrm_policy * ) 
s#xfrmk_spdinfo struct xfrmk_spdinfo { t#u32 incnt ; t#u32 outcnt ; t#u32 fwdcnt ; t#u32 inscnt ; t#u32 outscnt ; t#u32 fwdscnt ; t#u32 spdhcnt ; t#u32 spdhmcnt ; } 
xfrm_spd_getinfo extern void xfrm_spd_getinfo ( s#net * , s#xfrmk_spdinfo * ) 
xfrm_policy_insert int xfrm_policy_insert ( int , s#xfrm_policy * , int ) 
xfrm_policy_bysel_ctx s#xfrm_policy * xfrm_policy_bysel_ctx ( s#net * , t#u32 , t#u8 , int , s#xfrm_selector * , s#xfrm_sec_ctx * , int , int * ) 
xfrm_policy_byid s#xfrm_policy * xfrm_policy_byid ( s#net * , t#u32 , t#u8 , int , t#u32 , int , int * ) 
s#xfrm_audit struct xfrm_audit { t#u32 secid ; t#uid_t loginuid ; t#u32 sessionid ; } 
xfrm_policy_flush int xfrm_policy_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrm_policy_walk struct xfrm_policy_walk { s#xfrm_policy_walk_entry walk ; t#u8 type ; t#u32 seq ; } 
xfrm_policy_walk extern int xfrm_policy_walk ( s#net * , s#xfrm_policy_walk * , int ( * ) ( s#xfrm_policy * , int , int , void * ) , void * ) 
xfrm_policy_walk_init extern void xfrm_policy_walk_init ( s#xfrm_policy_walk * , t#u8 ) 
xfrm_policy_walk_done extern void xfrm_policy_walk_done ( s#xfrm_policy_walk * ) 
xfrm_policy_delete extern int xfrm_policy_delete ( s#xfrm_policy * , int ) 
xfrm_lookup extern s#dst_entry * xfrm_lookup ( s#net * , s#dst_entry * , const s#flowi * , s#sock * , int ) 
__xfrm_decode_session extern int __xfrm_decode_session ( s#sk_buff * , s#flowi * , unsigned int , int ) 
__xfrm_policy_check extern int __xfrm_policy_check ( s#sock * , int , s#sk_buff * , unsigned short ) 
__xfrm_route_forward extern int __xfrm_route_forward ( s#sk_buff * , unsigned short ) 
xfrm_dst_ifdown extern void xfrm_dst_ifdown ( s#dst_entry * , s#net_device * ) 
E#XFRM_POLICY_TYPE_MAX 2 
s#xfrm_dst struct xfrm_dst { union { s#dst_entry dst ; s#rtable rt ; s#rt6_info rt6 ; } u ; s#dst_entry * route ; s#flow_cache_object flo ; s#xfrm_policy * pols [ E#XFRM_POLICY_TYPE_MAX ] ; int num_pols , num_xfrms ; s#flowi * origin ; s#xfrm_selector * partner ; t#u32 xfrm_genid ; t#u32 policy_genid ; t#u32 route_mtu_cached ; t#u32 child_mtu_cached ; t#u32 route_cookie ; t#u32 path_cookie ; } 
s#xfrm_policy_afinfo struct xfrm_policy_afinfo { unsigned short family ; s#dst_ops * dst_ops ; void ( * garbage_collect ) ( s#net * ) ; s#dst_entry * ( * dst_lookup ) ( s#net * , int , const t#xfrm_address_t * , const t#xfrm_address_t * ) ; int ( * get_saddr ) ( s#net * , t#xfrm_address_t * , t#xfrm_address_t * ) ; void ( * decode_session ) ( s#sk_buff * , s#flowi * , int ) ; int ( * get_tos ) ( const s#flowi * ) ; int ( * init_path ) ( s#xfrm_dst * , s#dst_entry * , int ) ; int ( * fill_dst ) ( s#xfrm_dst * , s#net_device * , const s#flowi * ) ; s#dst_entry * ( * blackhole_route ) ( s#net * , s#dst_entry * ) ; } 
xfrm_policy_register_afinfo extern int xfrm_policy_register_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_policy_unregister_afinfo extern int xfrm_policy_unregister_afinfo ( s#xfrm_policy_afinfo * ) 
xfrm_audit_policy_add extern void xfrm_audit_policy_add ( s#xfrm_policy * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_policy_delete extern void xfrm_audit_policy_delete ( s#xfrm_policy * , int , t#u32 , t#u32 , t#u32 ) 
s#xfrm_migrate struct xfrm_migrate { t#xfrm_address_t old_daddr ; t#xfrm_address_t old_saddr ; t#xfrm_address_t new_daddr ; t#xfrm_address_t new_saddr ; t#u8 proto ; t#u8 mode ; t#u16 reserved ; t#u32 reqid ; t#u16 old_family ; t#u16 new_family ; } 
s#xfrm_kmaddress struct xfrm_kmaddress { t#xfrm_address_t local ; t#xfrm_address_t remote ; t#u32 reserved ; t#u16 family ; } 
xfrm_migrate extern int xfrm_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , s#xfrm_migrate * , int , s#xfrm_kmaddress * ) 

/* net/xfrm/xfrm_replay.o */
s##vfsmount
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mempolicy
s##pipe_inode_info
s##mem_cgroup
s##anon_vma
s##radix_tree_node
s##writeback_control
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##nlm_lockowner
s##nfs4_lock_state
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##fib_info
s##dn_route
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nameidata
s##cdev
s##posix_acl
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
xfrm_init_replay extern int xfrm_init_replay ( s#xfrm_state * ) 

/* net/xfrm/xfrm_state.o */
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##cdev
s##posix_acl
s##tvec_base
s##eventfd_ctx
s##iw_handler_def
s##iw_public_data
s##prot_inuse
s##ipv4_devconf
s##fib_rules_ops
s##inet_peer_base
s##xt_table
s##fib_info
s##dn_route
s##ebt_table
s##ip_conntrack_stat
s##nf_ct_event_notifier
s##nf_exp_event_notifier
s##net_generic
s##netns_ipvs
s##vlan_group
s##netpoll_info
s##in_device
s##dn_dev
s##wireless_dev
s##cpu_rmap
s##Qdisc
s##pcpu_lstats
s##pcpu_tstats
s##pcpu_dstats
s##garp_port
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##phy_device
s##inet_hashinfo
s##udp_table
s##raw_hashinfo
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
xfrm_register_type extern int xfrm_register_type ( const s#xfrm_type * , unsigned short ) 
xfrm_unregister_type extern int xfrm_unregister_type ( const s#xfrm_type * , unsigned short ) 
xfrm_register_mode extern int xfrm_register_mode ( s#xfrm_mode * , int ) 
xfrm_unregister_mode extern int xfrm_unregister_mode ( s#xfrm_mode * , int ) 
xfrm_state_alloc extern s#xfrm_state * xfrm_state_alloc ( s#net * ) 
__xfrm_state_destroy extern void __xfrm_state_destroy ( s#xfrm_state * ) 
__xfrm_state_delete extern int __xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_delete extern int xfrm_state_delete ( s#xfrm_state * ) 
xfrm_state_flush extern int xfrm_state_flush ( s#net * , t#u8 , s#xfrm_audit * ) 
s#xfrmk_sadinfo struct xfrmk_sadinfo { t#u32 sadhcnt ; t#u32 sadhmcnt ; t#u32 sadcnt ; } 
xfrm_sad_getinfo extern void xfrm_sad_getinfo ( s#net * , s#xfrmk_sadinfo * ) 
xfrm_stateonly_find extern s#xfrm_state * xfrm_stateonly_find ( s#net * , t#u32 , t#xfrm_address_t * , t#xfrm_address_t * , unsigned short , t#u8 , t#u8 , t#u32 ) 
xfrm_state_insert extern void xfrm_state_insert ( s#xfrm_state * ) 
xfrm_state_add extern int xfrm_state_add ( s#xfrm_state * ) 
xfrm_migrate_state_find extern s#xfrm_state * xfrm_migrate_state_find ( s#xfrm_migrate * ) 
xfrm_state_migrate extern s#xfrm_state * xfrm_state_migrate ( s#xfrm_state * , s#xfrm_migrate * ) 
xfrm_state_update extern int xfrm_state_update ( s#xfrm_state * ) 
xfrm_state_check_expire extern int xfrm_state_check_expire ( s#xfrm_state * ) 
xfrm_state_lookup extern s#xfrm_state * xfrm_state_lookup ( s#net * , t#u32 , const t#xfrm_address_t * , t#__be32 , t#u8 , unsigned short ) 
xfrm_state_lookup_byaddr extern s#xfrm_state * xfrm_state_lookup_byaddr ( s#net * , t#u32 , const t#xfrm_address_t * , const t#xfrm_address_t * , t#u8 , unsigned short ) 
xfrm_find_acq s#xfrm_state * xfrm_find_acq ( s#net * , s#xfrm_mark * , t#u8 , t#u32 , t#u8 , const t#xfrm_address_t * , const t#xfrm_address_t * , int , unsigned short ) 
xfrm_tmpl_sort extern int xfrm_tmpl_sort ( s#xfrm_tmpl * * , s#xfrm_tmpl * * , int , unsigned short ) 
xfrm_state_sort extern int xfrm_state_sort ( s#xfrm_state * * , s#xfrm_state * * , int , unsigned short ) 
xfrm_find_acq_byseq extern s#xfrm_state * xfrm_find_acq_byseq ( s#net * , t#u32 , t#u32 ) 
xfrm_get_acqseq t#u32 xfrm_get_acqseq ( void ) 
xfrm_alloc_spi extern int xfrm_alloc_spi ( s#xfrm_state * , t#u32 , t#u32 ) 
xfrm_state_walk extern int xfrm_state_walk ( s#net * , s#xfrm_state_walk * , int ( * ) ( s#xfrm_state * , int , void * ) , void * ) 
xfrm_state_walk_init extern void xfrm_state_walk_init ( s#xfrm_state_walk * , t#u8 ) 
xfrm_state_walk_done extern void xfrm_state_walk_done ( s#xfrm_state_walk * ) 
s#km_event struct km_event { union { t#u32 hard ; t#u32 proto ; t#u32 byid ; t#u32 aevent ; t#u32 type ; } data ; t#u32 seq ; t#u32 pid ; t#u32 event ; s#net * net ; } 
km_policy_notify extern void km_policy_notify ( s#xfrm_policy * , int , const s#km_event * ) 
km_state_notify extern void km_state_notify ( s#xfrm_state * , const s#km_event * ) 
km_state_expired extern void km_state_expired ( s#xfrm_state * , int , t#u32 ) 
km_query extern int km_query ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * ) 
km_new_mapping extern int km_new_mapping ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) 
km_policy_expired extern void km_policy_expired ( s#xfrm_policy * , int , int , t#u32 ) 
km_migrate extern int km_migrate ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) 
km_report extern int km_report ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) 
xfrm_user_policy extern int xfrm_user_policy ( s#sock * , int , t#u8 * , int ) 
s#xfrm_mgr struct xfrm_mgr { s#list_head list ; char * id ; int ( * notify ) ( s#xfrm_state * , const s#km_event * ) ; int ( * acquire ) ( s#xfrm_state * , s#xfrm_tmpl * , s#xfrm_policy * , int ) ; s#xfrm_policy * ( * compile_policy ) ( s#sock * , int , t#u8 * , int , int * ) ; int ( * new_mapping ) ( s#xfrm_state * , t#xfrm_address_t * , t#__be16 ) ; int ( * notify_policy ) ( s#xfrm_policy * , int , const s#km_event * ) ; int ( * report ) ( s#net * , t#u8 , s#xfrm_selector * , t#xfrm_address_t * ) ; int ( * migrate ) ( const s#xfrm_selector * , t#u8 , t#u8 , const s#xfrm_migrate * , int , const s#xfrm_kmaddress * ) ; } 
xfrm_register_km extern int xfrm_register_km ( s#xfrm_mgr * ) 
xfrm_unregister_km extern int xfrm_unregister_km ( s#xfrm_mgr * ) 
xfrm_state_register_afinfo extern int xfrm_state_register_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_unregister_afinfo extern int xfrm_state_unregister_afinfo ( s#xfrm_state_afinfo * ) 
xfrm_state_delete_tunnel extern void xfrm_state_delete_tunnel ( s#xfrm_state * ) 
__xfrm_init_state extern int __xfrm_init_state ( s#xfrm_state * , t#bool ) 
xfrm_init_state extern int xfrm_init_state ( s#xfrm_state * ) 
xfrm_audit_state_add extern void xfrm_audit_state_add ( s#xfrm_state * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_state_delete extern void xfrm_audit_state_delete ( s#xfrm_state * , int , t#u32 , t#u32 , t#u32 ) 
xfrm_audit_state_replay_overflow extern void xfrm_audit_state_replay_overflow ( s#xfrm_state * , s#sk_buff * ) 
xfrm_audit_state_replay extern void xfrm_audit_state_replay ( s#xfrm_state * , s#sk_buff * , t#__be32 ) 
xfrm_audit_state_notfound_simple extern void xfrm_audit_state_notfound_simple ( s#sk_buff * , t#u16 ) 
xfrm_audit_state_notfound extern void xfrm_audit_state_notfound ( s#sk_buff * , t#u16 , t#__be32 , t#__be32 ) 
xfrm_audit_state_icvfail extern void xfrm_audit_state_icvfail ( s#xfrm_state * , s#sk_buff * , t#u8 ) 

/* security/commoncap.o */
s##sock
s##net_device
s##sec_path
cap_netlink_recv extern int cap_netlink_recv ( s#sk_buff * , int ) 

/* security/inode.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
e##migrate_mode
s##hd_struct
s##gendisk
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##io_context
s##cgroupfs_root
s##css_id
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s##mnt_namespace
s##cdev
s##posix_acl
securityfs_create_file extern s#dentry * securityfs_create_file ( const char * , t#mode_t , s#dentry * , void * , const s#file_operations * ) 
securityfs_create_dir extern s#dentry * securityfs_create_dir ( const char * , s#dentry * ) 
securityfs_remove extern void securityfs_remove ( s#dentry * ) 

/* security/keys/encrypted-keys/ecryptfs_format.o */
s#ecryptfs_session_key struct ecryptfs_session_key { t#u32 flags ; t#u32 encrypted_key_size ; t#u32 decrypted_key_size ; t#u8 encrypted_key [ 512 ] ; t#u8 decrypted_key [ 64 ] ; } 
s#ecryptfs_password struct ecryptfs_password { t#u32 password_bytes ; t#s32 hash_algo ; t#u32 hash_iterations ; t#u32 session_key_encryption_key_bytes ; t#u32 flags ; t#u8 session_key_encryption_key [ 64 ] ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; t#u8 salt [ 8 ] ; } 
s#ecryptfs_private_key struct ecryptfs_private_key { t#u32 key_size ; t#u32 data_len ; t#u8 signature [ ( 8 * 2 ) + 1 ] ; char pki_type [ 16 + 1 ] ; t#u8 data [ ] ; } 
s#ecryptfs_auth_tok struct ecryptfs_auth_tok { t#u16 version ; t#u16 token_type ; t#u32 flags ; s#ecryptfs_session_key session_key ; t#u8 reserved [ 32 ] ; union { s#ecryptfs_password password ; s#ecryptfs_private_key private_key ; } token ; } 
ecryptfs_get_auth_tok_key t#u8 * ecryptfs_get_auth_tok_key ( s#ecryptfs_auth_tok * ) 
ecryptfs_get_versions void ecryptfs_get_versions ( int * , int * , int * ) 
ecryptfs_fill_auth_tok int ecryptfs_fill_auth_tok ( s#ecryptfs_auth_tok * , const char * ) 

/* security/keys/encrypted-keys/encrypted.o */
s##key_user
s##keyring_list
s##seq_file
key_type_encrypted extern s#key_type key_type_encrypted 

/* security/keys/key.o */
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##uts_namespace
s##ipc_namespace
s##mnt_namespace
s##net
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#key_user struct key_user { s#rb_node node ; s#mutex cons_lock ; t#spinlock_t lock ; t#atomic_t usage ; t#atomic_t nkeys ; t#atomic_t nikeys ; t#uid_t uid ; s#user_namespace * user_ns ; int qnkeys ; int qnbytes ; } 
s##keyring_list
key_alloc extern s#key * key_alloc ( s#key_type * , const char * , t#uid_t , t#gid_t , const s#cred * , t#key_perm_t , unsigned long ) 
key_payload_reserve extern int key_payload_reserve ( s#key * , t#size_t ) 
key_instantiate_and_link extern int key_instantiate_and_link ( s#key * , const void * , t#size_t , s#key * , s#key * ) 
key_reject_and_link extern int key_reject_and_link ( s#key * , unsigned , unsigned , s#key * , s#key * ) 
key_put extern void key_put ( s#key * ) 
s##__key_reference_with_attributes
t#key_ref_t typedef s#__key_reference_with_attributes * key_ref_t 
key_create_or_update extern t#key_ref_t key_create_or_update ( t#key_ref_t , const char * , const char * , const void * , t#size_t , t#key_perm_t , unsigned long ) 
key_update extern int key_update ( t#key_ref_t , const void * , t#size_t ) 
key_revoke extern void key_revoke ( s#key * ) 
register_key_type extern int register_key_type ( s#key_type * ) 
unregister_key_type extern void unregister_key_type ( s#key_type * ) 

/* security/keys/keyring.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#keyring_list struct keyring_list { s#rcu_head rcu ; unsigned short maxkeys ; unsigned short nkeys ; unsigned short delkey ; s#key * keys [ 0 ] ; } 
key_type_keyring extern s#key_type key_type_keyring 
s##__key_reference_with_attributes
keyring_search extern t#key_ref_t keyring_search ( t#key_ref_t , s#key_type * , const char * ) 
key_link extern int key_link ( s#key * , s#key * ) 
key_unlink extern int key_unlink ( s#key * , s#key * ) 
keyring_clear extern int keyring_clear ( s#key * ) 

/* security/keys/permission.o */
s##__key_reference_with_attributes
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##user_namespace
s##keyring_list
key_task_permission extern int key_task_permission ( const t#key_ref_t , const s#cred * , t#key_perm_t ) 
key_validate extern int key_validate ( s#key * ) 

/* security/keys/request_key.o */
s##seq_file
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##keyring_list
complete_request_key extern void complete_request_key ( s#key_construction * , int ) 
wait_for_key_construction extern int wait_for_key_construction ( s#key * , t#bool ) 
request_key extern s#key * request_key ( s#key_type * , const char * , const char * ) 
request_key_with_auxdata extern s#key * request_key_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 
request_key_async extern s#key * request_key_async ( s#key_type * , const char * , const void * , t#size_t ) 
request_key_async_with_auxdata extern s#key * request_key_async_with_auxdata ( s#key_type * , const char * , const void * , t#size_t , void * ) 

/* security/keys/user_defined.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##keyring_list
key_type_user extern s#key_type key_type_user 
user_instantiate extern int user_instantiate ( s#key * , const void * , t#size_t ) 
user_update extern int user_update ( s#key * , const void * , t#size_t ) 
user_match extern int user_match ( const s#key * , const void * ) 
user_revoke extern void user_revoke ( s#key * ) 
user_destroy extern void user_destroy ( s#key * ) 
user_describe extern void user_describe ( const s#key * , s#seq_file * ) 
user_read extern long user_read ( const s#key * , char * , t#size_t ) 

/* security/security.o */
security_sb_copy_data int security_sb_copy_data ( char * , char * ) 
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##pid_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##poll_table_struct
s##nlm_lockowner
s##nfs4_lock_state
s##hd_struct
s##gendisk
s##cdev
s##posix_acl
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##mtd_info
s#security_mnt_opts struct security_mnt_opts { char * * mnt_opts ; int * mnt_opts_flags ; int num_mnt_opts ; } 
security_sb_set_mnt_opts int security_sb_set_mnt_opts ( s#super_block * , s#security_mnt_opts * ) 
security_sb_clone_mnt_opts void security_sb_clone_mnt_opts ( const s#super_block * , s#super_block * ) 
security_sb_parse_opts_str int security_sb_parse_opts_str ( char * , s#security_mnt_opts * ) 
security_inode_init_security int security_inode_init_security ( s#inode * , s#inode * , const s#qstr * , char * * , void * * , t#size_t * ) 
security_path_mknod int security_path_mknod ( s#path * , s#dentry * , int , unsigned int ) 
security_path_mkdir int security_path_mkdir ( s#path * , s#dentry * , int ) 
security_path_unlink int security_path_unlink ( s#path * , s#dentry * ) 
security_path_rename int security_path_rename ( s#path * , s#dentry * , s#path * , s#dentry * ) 
security_inode_create int security_inode_create ( s#inode * , s#dentry * , int ) 
security_inode_unlink int security_inode_unlink ( s#inode * , s#dentry * ) 
security_inode_mkdir int security_inode_mkdir ( s#inode * , s#dentry * , int ) 
security_inode_permission int security_inode_permission ( s#inode * , int ) 
security_inode_setattr int security_inode_setattr ( s#dentry * , s#iattr * ) 
security_task_getsecid void security_task_getsecid ( s#task_struct * , t#u32 * ) 
security_d_instantiate void security_d_instantiate ( s#dentry * , s#inode * ) 
s##sk_buff
security_netlink_recv int security_netlink_recv ( s#sk_buff * , int ) 
security_secid_to_secctx int security_secid_to_secctx ( t#u32 , char * * , t#u32 * ) 
security_secctx_to_secid int security_secctx_to_secid ( const char * , t#u32 , t#u32 * ) 
security_release_secctx void security_release_secctx ( char * , t#u32 ) 
security_inode_notifysecctx int security_inode_notifysecctx ( s#inode * , void * , t#u32 ) 
security_inode_setsecctx int security_inode_setsecctx ( s#dentry * , void * , t#u32 ) 
security_inode_getsecctx int security_inode_getsecctx ( s#inode * , void * * , t#u32 * ) 
security_unix_stream_connect int security_unix_stream_connect ( s#sock * , s#sock * , s#sock * ) 
s##socket
security_unix_may_send int security_unix_may_send ( s#socket * , s#socket * ) 
security_sock_rcv_skb int security_sock_rcv_skb ( s#sock * , s#sk_buff * ) 
security_socket_getpeersec_dgram int security_socket_getpeersec_dgram ( s#socket * , s#sk_buff * , t#u32 * ) 
security_sk_classify_flow void security_sk_classify_flow ( s#sock * , s#flowi * ) 
s##request_sock
security_req_classify_flow void security_req_classify_flow ( const s#request_sock * , s#flowi * ) 
security_sock_graft void security_sock_graft ( s#sock * , s#socket * ) 
security_inet_conn_request int security_inet_conn_request ( s#sock * , s#sk_buff * , s#request_sock * ) 
security_secmark_relabel_packet int security_secmark_relabel_packet ( t#u32 ) 
security_secmark_refcount_inc void security_secmark_refcount_inc ( void ) 
security_secmark_refcount_dec void security_secmark_refcount_dec ( void ) 
security_tun_dev_create int security_tun_dev_create ( void ) 
security_tun_dev_post_create void security_tun_dev_post_create ( s#sock * ) 
security_tun_dev_attach int security_tun_dev_attach ( s#sock * ) 
s#xfrm_user_sec_ctx struct xfrm_user_sec_ctx { t#__u16 len ; t#__u16 exttype ; t#__u8 ctx_alg ; t#__u8 ctx_doi ; t#__u16 ctx_len ; } 
security_xfrm_policy_alloc int security_xfrm_policy_alloc ( s#xfrm_sec_ctx * * , s#xfrm_user_sec_ctx * ) 
security_xfrm_policy_free void security_xfrm_policy_free ( s#xfrm_sec_ctx * ) 
s##xfrm_state
security_xfrm_state_alloc int security_xfrm_state_alloc ( s#xfrm_state * , s#xfrm_user_sec_ctx * ) 
security_xfrm_state_delete int security_xfrm_state_delete ( s#xfrm_state * ) 
security_skb_classify_flow void security_skb_classify_flow ( s#sk_buff * , s#flowi * ) 

/* security/selinux/exports.o */
selinux_is_enabled t#bool selinux_is_enabled ( void ) 

/* sound/ac97_bus.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##subsys_private
ac97_bus_type extern s#bus_type ac97_bus_type 

/* sound/aoa/core/alsa.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_info_entry
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##snd_mixer_oss
aoa_get_card extern s#snd_card * aoa_get_card ( void ) 
t#snd_device_type_t typedef int snd_device_type_t 
t#snd_device_state_t typedef int snd_device_state_t 
s#snd_device struct snd_device { s#list_head list ; s#snd_card * card ; t#snd_device_state_t state ; t#snd_device_type_t type ; void * device_data ; s#snd_device_ops * ops ; } 
s#snd_device_ops struct snd_device_ops { int ( * dev_free ) ( s#snd_device * ) ; int ( * dev_register ) ( s#snd_device * ) ; int ( * dev_disconnect ) ( s#snd_device * ) ; } 
aoa_snd_device_new extern int aoa_snd_device_new ( t#snd_device_type_t , void * , s#snd_device_ops * ) 
t#snd_ctl_elem_iface_t typedef int snd_ctl_elem_iface_t 
s#snd_ctl_elem_id struct snd_ctl_elem_id { unsigned int numid ; t#snd_ctl_elem_iface_t iface ; unsigned int device ; unsigned int subdevice ; unsigned char name [ 44 ] ; unsigned int index ; } 
t#snd_ctl_elem_type_t typedef int snd_ctl_elem_type_t 
s#snd_ctl_elem_info struct snd_ctl_elem_info { s#snd_ctl_elem_id id ; t#snd_ctl_elem_type_t type ; unsigned int access ; unsigned int count ; t#__kernel_pid_t owner ; union { struct { long min ; long max ; long step ; } integer ; struct { long long min ; long long max ; long long step ; } integer64 ; struct { unsigned int items ; unsigned int item ; char name [ 64 ] ; } enumerated ; unsigned char reserved [ 128 ] ; } value ; union { unsigned short d [ 4 ] ; unsigned short * d_ptr ; } dimen ; unsigned char reserved [ 64 - 4 * sizeof ( unsigned short ) ] ; } 
t#snd_kcontrol_info_t typedef int ( snd_kcontrol_info_t ) ( s#snd_kcontrol * , s#snd_ctl_elem_info * ) 
s#snd_aes_iec958 struct snd_aes_iec958 { unsigned char status [ 24 ] ; unsigned char subcode [ 147 ] ; unsigned char pad ; unsigned char dig_subframe [ 4 ] ; } 
s#snd_ctl_elem_value struct snd_ctl_elem_value { s#snd_ctl_elem_id id ; unsigned int indirect : 1 ; union { union { long value [ 128 ] ; long * value_ptr ; } integer ; union { long long value [ 64 ] ; long long * value_ptr ; } integer64 ; union { unsigned int item [ 128 ] ; unsigned int * item_ptr ; } enumerated ; union { unsigned char data [ 512 ] ; unsigned char * data_ptr ; } bytes ; s#snd_aes_iec958 iec958 ; } value ; s#timespec tstamp ; unsigned char reserved [ 128 - sizeof ( struct timespec ) ] ; } 
t#snd_kcontrol_get_t typedef int ( snd_kcontrol_get_t ) ( s#snd_kcontrol * , s#snd_ctl_elem_value * ) 
t#snd_kcontrol_put_t typedef int ( snd_kcontrol_put_t ) ( s#snd_kcontrol * , s#snd_ctl_elem_value * ) 
t#snd_kcontrol_tlv_rw_t typedef int ( snd_kcontrol_tlv_rw_t ) ( s#snd_kcontrol * , int , unsigned int , unsigned int * ) 
s#snd_ctl_file struct snd_ctl_file { s#list_head list ; s#snd_card * card ; s#pid * pid ; int prefer_pcm_subdevice ; int prefer_rawmidi_subdevice ; t#wait_queue_head_t change_sleep ; t#spinlock_t read_lock ; s#fasync_struct * fasync ; int subscribed ; s#list_head events ; } 
s#snd_kcontrol_volatile struct snd_kcontrol_volatile { s#snd_ctl_file * owner ; unsigned int access ; } 
s#snd_kcontrol struct snd_kcontrol { s#list_head list ; s#snd_ctl_elem_id id ; unsigned int count ; t#snd_kcontrol_info_t * info ; t#snd_kcontrol_get_t * get ; t#snd_kcontrol_put_t * put ; union { t#snd_kcontrol_tlv_rw_t * c ; const unsigned int * p ; } tlv ; unsigned long private_value ; void * private_data ; void ( * private_free ) ( s#snd_kcontrol * ) ; s#snd_kcontrol_volatile vd [ 0 ] ; } 
aoa_snd_ctl_add extern int aoa_snd_ctl_add ( s#snd_kcontrol * ) 

/* sound/aoa/core/core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##mfd_cell
s##snd_info_entry
s##snd_shutdown_f_ops
s##snd_mixer_oss
s#snd_dma_device struct snd_dma_device { int type ; s#device * dev ; } 
s#snd_dma_buffer struct snd_dma_buffer { s#snd_dma_device dev ; unsigned char * area ; t#dma_addr_t addr ; t#size_t bytes ; void * private_data ; } 
s#snd_mask struct snd_mask { t#__u32 bits [ ( 256 + 31 ) / 32 ] ; } 
s#snd_interval struct snd_interval { unsigned int min , max ; unsigned int openmin : 1 , openmax : 1 , integer : 1 , empty : 1 ; } 
t#snd_pcm_uframes_t typedef unsigned long snd_pcm_uframes_t 
s#snd_pcm_hw_params struct snd_pcm_hw_params { unsigned int flags ; s#snd_mask masks [ 2 - 0 + 1 ] ; s#snd_mask mres [ 5 ] ; s#snd_interval intervals [ 19 - 8 + 1 ] ; s#snd_interval ires [ 9 ] ; unsigned int rmask ; unsigned int cmask ; unsigned int info ; unsigned int msbits ; unsigned int rate_num ; unsigned int rate_den ; t#snd_pcm_uframes_t fifo_size ; unsigned char reserved [ 64 ] ; } 
s#snd_pcm_ops struct snd_pcm_ops { int ( * open ) ( s#snd_pcm_substream * ) ; int ( * close ) ( s#snd_pcm_substream * ) ; int ( * ioctl ) ( s#snd_pcm_substream * , unsigned int , void * ) ; int ( * hw_params ) ( s#snd_pcm_substream * , s#snd_pcm_hw_params * ) ; int ( * hw_free ) ( s#snd_pcm_substream * ) ; int ( * prepare ) ( s#snd_pcm_substream * ) ; int ( * trigger ) ( s#snd_pcm_substream * , int ) ; t#snd_pcm_uframes_t ( * pointer ) ( s#snd_pcm_substream * ) ; int ( * copy ) ( s#snd_pcm_substream * , int , t#snd_pcm_uframes_t , void * , t#snd_pcm_uframes_t ) ; int ( * silence ) ( s#snd_pcm_substream * , int , t#snd_pcm_uframes_t , t#snd_pcm_uframes_t ) ; s#page * ( * page ) ( s#snd_pcm_substream * , unsigned long ) ; int ( * mmap ) ( s#snd_pcm_substream * , s#vm_area_struct * ) ; int ( * ack ) ( s#snd_pcm_substream * ) ; } 
t#snd_pcm_sframes_t typedef signed long snd_pcm_sframes_t 
t#snd_pcm_access_t typedef int snd_pcm_access_t 
t#snd_pcm_format_t typedef int snd_pcm_format_t 
t#snd_pcm_subformat_t typedef int snd_pcm_subformat_t 
u#snd_pcm_sync_id union snd_pcm_sync_id { unsigned char id [ 16 ] ; unsigned short id16 [ 8 ] ; unsigned int id32 [ 4 ] ; } 
t#snd_pcm_state_t typedef int snd_pcm_state_t 
s#snd_pcm_mmap_status struct snd_pcm_mmap_status { t#snd_pcm_state_t state ; int pad1 ; t#snd_pcm_uframes_t hw_ptr ; s#timespec tstamp ; t#snd_pcm_state_t suspended_state ; } 
s#snd_pcm_mmap_control struct snd_pcm_mmap_control { t#snd_pcm_uframes_t appl_ptr ; t#snd_pcm_uframes_t avail_min ; } 
s#snd_pcm_hardware struct snd_pcm_hardware { unsigned int info ; t#u64 formats ; unsigned int rates ; unsigned int rate_min ; unsigned int rate_max ; unsigned int channels_min ; unsigned int channels_max ; t#size_t buffer_bytes_max ; t#size_t period_bytes_min ; t#size_t period_bytes_max ; unsigned int periods_min ; unsigned int periods_max ; t#size_t fifo_size ; } 
t#snd_pcm_hw_rule_func_t typedef int ( * snd_pcm_hw_rule_func_t ) ( s#snd_pcm_hw_params * , s#snd_pcm_hw_rule * ) 
s#snd_pcm_hw_rule struct snd_pcm_hw_rule { unsigned int cond ; t#snd_pcm_hw_rule_func_t func ; int var ; int deps [ 4 ] ; void * private ; } 
s#snd_pcm_hw_constraints struct snd_pcm_hw_constraints { s#snd_mask masks [ 2 - 0 + 1 ] ; s#snd_interval intervals [ 19 - 8 + 1 ] ; unsigned int rules_num ; unsigned int rules_all ; s#snd_pcm_hw_rule * rules ; } 
s##snd_pcm_plugin
s#snd_pcm_oss_runtime struct snd_pcm_oss_runtime { unsigned params : 1 , prepare : 1 , trigger : 1 , sync_trigger : 1 ; int rate ; int format ; unsigned int channels ; unsigned int fragshift ; unsigned int maxfrags ; unsigned int subdivision ; t#size_t period_bytes ; t#size_t period_frames ; t#size_t period_ptr ; unsigned int periods ; t#size_t buffer_bytes ; t#size_t bytes ; t#size_t mmap_bytes ; char * buffer ; t#size_t buffer_used ; s#mutex params_lock ; s#snd_pcm_plugin * plugin_first ; s#snd_pcm_plugin * plugin_last ; unsigned int prev_hw_ptr_period ; } 
s#snd_pcm_runtime struct snd_pcm_runtime { s#snd_pcm_substream * trigger_master ; s#timespec trigger_tstamp ; int overrange ; t#snd_pcm_uframes_t avail_max ; t#snd_pcm_uframes_t hw_ptr_base ; t#snd_pcm_uframes_t hw_ptr_interrupt ; unsigned long hw_ptr_jiffies ; unsigned long hw_ptr_buffer_jiffies ; t#snd_pcm_sframes_t delay ; t#snd_pcm_access_t access ; t#snd_pcm_format_t format ; t#snd_pcm_subformat_t subformat ; unsigned int rate ; unsigned int channels ; t#snd_pcm_uframes_t period_size ; unsigned int periods ; t#snd_pcm_uframes_t buffer_size ; t#snd_pcm_uframes_t min_align ; t#size_t byte_align ; unsigned int frame_bits ; unsigned int sample_bits ; unsigned int info ; unsigned int rate_num ; unsigned int rate_den ; unsigned int no_period_wakeup : 1 ; int tstamp_mode ; unsigned int period_step ; t#snd_pcm_uframes_t start_threshold ; t#snd_pcm_uframes_t stop_threshold ; t#snd_pcm_uframes_t silence_threshold ; t#snd_pcm_uframes_t silence_size ; t#snd_pcm_uframes_t boundary ; t#snd_pcm_uframes_t silence_start ; t#snd_pcm_uframes_t silence_filled ; u#snd_pcm_sync_id sync ; s#snd_pcm_mmap_status * status ; s#snd_pcm_mmap_control * control ; t#snd_pcm_uframes_t twake ; t#wait_queue_head_t sleep ; t#wait_queue_head_t tsleep ; s#fasync_struct * fasync ; void * private_data ; void ( * private_free ) ( s#snd_pcm_runtime * ) ; s#snd_pcm_hardware hw ; s#snd_pcm_hw_constraints hw_constraints ; void ( * transfer_ack_begin ) ( s#snd_pcm_substream * ) ; void ( * transfer_ack_end ) ( s#snd_pcm_substream * ) ; unsigned int timer_resolution ; int tstamp_type ; unsigned char * dma_area ; t#dma_addr_t dma_addr ; t#size_t dma_bytes ; s#snd_dma_buffer * dma_buffer_p ; s#snd_pcm_oss_runtime oss ; } 
s##snd_timer
s#snd_pcm_group struct snd_pcm_group { t#spinlock_t lock ; s#list_head substreams ; int count ; } 
s#snd_pcm_oss_setup struct snd_pcm_oss_setup { char * task_name ; unsigned int disable : 1 , direct : 1 , block : 1 , nonblock : 1 , partialfrag : 1 , nosilence : 1 , buggyptr : 1 ; unsigned int periods ; unsigned int period_size ; s#snd_pcm_oss_setup * next ; } 
s#snd_pcm_oss_substream struct snd_pcm_oss_substream { unsigned oss : 1 ; s#snd_pcm_oss_setup setup ; } 
s#snd_pcm_substream struct snd_pcm_substream { s#snd_pcm * pcm ; s#snd_pcm_str * pstr ; void * private_data ; int number ; char name [ 32 ] ; int stream ; s#pm_qos_request_list latency_pm_qos_req ; t#size_t buffer_bytes_max ; s#snd_dma_buffer dma_buffer ; unsigned int dma_buf_id ; t#size_t dma_max ; s#snd_pcm_ops * ops ; s#snd_pcm_runtime * runtime ; s#snd_timer * timer ; unsigned timer_running : 1 ; s#snd_pcm_substream * next ; s#list_head link_list ; s#snd_pcm_group self_group ; s#snd_pcm_group * group ; void * file ; int ref_count ; t#atomic_t mmap_count ; unsigned int f_flags ; void ( * pcm_release ) ( s#snd_pcm_substream * ) ; s#pid * pid ; s#snd_pcm_oss_substream oss ; s#snd_info_entry * proc_root ; s#snd_info_entry * proc_info_entry ; s#snd_info_entry * proc_hw_params_entry ; s#snd_info_entry * proc_sw_params_entry ; s#snd_info_entry * proc_status_entry ; s#snd_info_entry * proc_prealloc_entry ; s#snd_info_entry * proc_prealloc_max_entry ; unsigned int hw_opened : 1 ; } 
s#snd_pcm_oss_stream struct snd_pcm_oss_stream { s#snd_pcm_oss_setup * setup_list ; s#mutex setup_mutex ; s#snd_info_entry * proc_entry ; } 
s#snd_pcm_str struct snd_pcm_str { int stream ; s#snd_pcm * pcm ; unsigned int substream_count ; unsigned int substream_opened ; s#snd_pcm_substream * substream ; s#snd_pcm_oss_stream oss ; s#snd_info_entry * proc_root ; s#snd_info_entry * proc_info_entry ; } 
s#snd_pcm_oss struct snd_pcm_oss { int reg ; unsigned int reg_mask ; } 
s#snd_pcm struct snd_pcm { s#snd_card * card ; s#list_head list ; int device ; unsigned int info_flags ; unsigned short dev_class ; unsigned short dev_subclass ; char id [ 64 ] ; char name [ 80 ] ; s#snd_pcm_str streams [ 2 ] ; s#mutex open_mutex ; t#wait_queue_head_t open_wait ; void * private_data ; void ( * private_free ) ( s#snd_pcm * ) ; s#device * dev ; s#snd_pcm_oss oss ; } 
s#transfer_info struct transfer_info { t#u64 formats ; unsigned int rates ; t#u32 transfer_in : 1 , must_be_clock_source : 1 ; int tag ; } 
s#codec_info_item struct codec_info_item { s#codec_info * codec ; void * codec_data ; s#soundbus_dev * sdev ; s#list_head list ; } 
e#clock_switch enum clock_switch { CLOCK_SWITCH_PREPARE_SLAVE , CLOCK_SWITCH_PREPARE_MASTER , CLOCK_SWITCH_SLAVE , CLOCK_SWITCH_MASTER , CLOCK_SWITCH_NOTIFY , } 
s#bus_info struct bus_info { int sysclock_factor ; int bus_factor ; } 
s#codec_info struct codec_info { s#module * owner ; s#transfer_info * transfers ; int sysclock_factor ; int bus_factor ; int ( * switch_clock ) ( s#codec_info_item * , e#clock_switch ) ; int ( * usable ) ( s#codec_info_item * , s#transfer_info * , s#transfer_info * ) ; int ( * open ) ( s#codec_info_item * , s#snd_pcm_substream * ) ; int ( * close ) ( s#codec_info_item * , s#snd_pcm_substream * ) ; int ( * prepare ) ( s#codec_info_item * , s#bus_info * , s#snd_pcm_substream * ) ; int ( * start ) ( s#codec_info_item * , s#snd_pcm_substream * ) ; int ( * stop ) ( s#codec_info_item * , s#snd_pcm_substream * ) ; int ( * suspend ) ( s#codec_info_item * , t#pm_message_t ) ; int ( * resume ) ( s#codec_info_item * ) ; } 
s#soundbus_dev struct soundbus_dev { s#list_head onbuslist ; s#platform_device ofdev ; char modalias [ 32 ] ; char * pcmname ; int pcmid ; s#snd_pcm * pcm ; int ( * attach_codec ) ( s#soundbus_dev * , s#snd_card * , s#codec_info * , void * ) ; void ( * detach_codec ) ( s#soundbus_dev * , void * ) ; s#list_head codec_list ; t#u32 have_out : 1 , have_in : 1 ; } 
e#notify_type enum notify_type { AOA_NOTIFY_HEADPHONE , AOA_NOTIFY_LINE_IN , AOA_NOTIFY_LINE_OUT , } 
t#notify_func_t typedef void ( * notify_func_t ) ( void * ) 
s#gpio_methods struct gpio_methods { void ( * init ) ( s#gpio_runtime * ) ; void ( * exit ) ( s#gpio_runtime * ) ; void ( * all_amps_off ) ( s#gpio_runtime * ) ; void ( * all_amps_restore ) ( s#gpio_runtime * ) ; void ( * set_headphone ) ( s#gpio_runtime * , int ) ; void ( * set_speakers ) ( s#gpio_runtime * , int ) ; void ( * set_lineout ) ( s#gpio_runtime * , int ) ; void ( * set_master ) ( s#gpio_runtime * , int ) ; int ( * get_headphone ) ( s#gpio_runtime * ) ; int ( * get_speakers ) ( s#gpio_runtime * ) ; int ( * get_lineout ) ( s#gpio_runtime * ) ; int ( * get_master ) ( s#gpio_runtime * ) ; void ( * set_hw_reset ) ( s#gpio_runtime * , int ) ; int ( * set_notify ) ( s#gpio_runtime * , e#notify_type , t#notify_func_t , void * ) ; int ( * get_detect ) ( s#gpio_runtime * , e#notify_type ) ; } 
s#gpio_notification struct gpio_notification { s#delayed_work work ; t#notify_func_t notify ; void * data ; void * gpio_private ; s#mutex mutex ; } 
s#gpio_runtime struct gpio_runtime { s#device_node * node ; s#gpio_methods * methods ; int implementation_private ; s#gpio_notification headphone_notify ; s#gpio_notification line_in_notify ; s#gpio_notification line_out_notify ; } 
s#aoa_fabric struct aoa_fabric { char name [ 32 ] ; s#module * owner ; int ( * found_codec ) ( s#aoa_codec * ) ; void ( * remove_codec ) ( s#aoa_codec * ) ; void ( * attached_codec ) ( s#aoa_codec * ) ; } 
s#aoa_codec struct aoa_codec { char name [ 32 ] ; s#module * owner ; int ( * init ) ( s#aoa_codec * ) ; void ( * exit ) ( s#aoa_codec * ) ; s#device_node * node ; s#soundbus_dev * soundbus_dev ; s#gpio_runtime * gpio ; t#u32 connected ; void * fabric_data ; s#list_head list ; s#aoa_fabric * fabric ; } 
aoa_codec_register extern int aoa_codec_register ( s#aoa_codec * ) 
aoa_codec_unregister extern void aoa_codec_unregister ( s#aoa_codec * ) 
aoa_fabric_register extern int aoa_fabric_register ( s#aoa_fabric * , s#device * ) 
aoa_fabric_unregister extern void aoa_fabric_unregister ( s#aoa_fabric * ) 
aoa_fabric_unlink_codec extern void aoa_fabric_unlink_codec ( s#aoa_codec * ) 

/* sound/aoa/core/gpio-feature.o */
s##proc_dir_entry
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
ftr_gpio_methods extern s#gpio_methods * ftr_gpio_methods 

/* sound/aoa/core/gpio-pmf.o */
s##proc_dir_entry
s##tvec_base
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
pmf_gpio_methods extern s#gpio_methods * pmf_gpio_methods 

/* sound/aoa/soundbus/core.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##proc_dir_entry
s##mfd_cell
s##snd_card
s##snd_pcm_plugin
s##snd_timer
s##snd_info_entry
soundbus_dev_get extern s#soundbus_dev * soundbus_dev_get ( s#soundbus_dev * ) 
soundbus_dev_put extern void soundbus_dev_put ( s#soundbus_dev * ) 
soundbus_add_one extern int soundbus_add_one ( s#soundbus_dev * ) 
soundbus_remove_one extern void soundbus_remove_one ( s#soundbus_dev * ) 
s#soundbus_driver struct soundbus_driver { char * name ; s#module * owner ; int ( * probe ) ( s#soundbus_dev * ) ; int ( * remove ) ( s#soundbus_dev * ) ; int ( * suspend ) ( s#soundbus_dev * , t#pm_message_t ) ; int ( * resume ) ( s#soundbus_dev * ) ; int ( * shutdown ) ( s#soundbus_dev * ) ; s#device_driver driver ; } 
soundbus_register_driver extern int soundbus_register_driver ( s#soundbus_driver * ) 
soundbus_unregister_driver extern void soundbus_unregister_driver ( s#soundbus_driver * ) 

/* sound/core/control.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_ctl_notify void snd_ctl_notify ( s#snd_card * , unsigned int , s#snd_ctl_elem_id * ) 
s#snd_kcontrol_new struct snd_kcontrol_new { t#snd_ctl_elem_iface_t iface ; unsigned int device ; unsigned int subdevice ; unsigned char * name ; unsigned int index ; unsigned int access ; unsigned int count ; t#snd_kcontrol_info_t * info ; t#snd_kcontrol_get_t * get ; t#snd_kcontrol_put_t * put ; union { t#snd_kcontrol_tlv_rw_t * c ; const unsigned int * p ; } tlv ; unsigned long private_value ; } 
snd_ctl_new1 s#snd_kcontrol * snd_ctl_new1 ( const s#snd_kcontrol_new * , void * ) 
snd_ctl_free_one void snd_ctl_free_one ( s#snd_kcontrol * ) 
snd_ctl_add int snd_ctl_add ( s#snd_card * , s#snd_kcontrol * ) 
snd_ctl_replace int snd_ctl_replace ( s#snd_card * , s#snd_kcontrol * , t#bool ) 
snd_ctl_remove int snd_ctl_remove ( s#snd_card * , s#snd_kcontrol * ) 
snd_ctl_remove_id int snd_ctl_remove_id ( s#snd_card * , s#snd_ctl_elem_id * ) 
snd_ctl_activate_id int snd_ctl_activate_id ( s#snd_card * , s#snd_ctl_elem_id * , int ) 
snd_ctl_rename_id int snd_ctl_rename_id ( s#snd_card * , s#snd_ctl_elem_id * , s#snd_ctl_elem_id * ) 
snd_ctl_find_numid s#snd_kcontrol * snd_ctl_find_numid ( s#snd_card * , unsigned int ) 
snd_ctl_find_id s#snd_kcontrol * snd_ctl_find_id ( s#snd_card * , s#snd_ctl_elem_id * ) 
t#snd_kctl_ioctl_func_t typedef int ( * snd_kctl_ioctl_func_t ) ( s#snd_card * , s#snd_ctl_file * , unsigned int , unsigned long ) 
snd_ctl_register_ioctl int snd_ctl_register_ioctl ( t#snd_kctl_ioctl_func_t ) 
snd_ctl_register_ioctl_compat int snd_ctl_register_ioctl_compat ( t#snd_kctl_ioctl_func_t ) 
snd_ctl_unregister_ioctl int snd_ctl_unregister_ioctl ( t#snd_kctl_ioctl_func_t ) 
snd_ctl_unregister_ioctl_compat int snd_ctl_unregister_ioctl_compat ( t#snd_kctl_ioctl_func_t ) 
snd_ctl_boolean_mono_info int snd_ctl_boolean_mono_info ( s#snd_kcontrol * , s#snd_ctl_elem_info * ) 
snd_ctl_boolean_stereo_info int snd_ctl_boolean_stereo_info ( s#snd_kcontrol * , s#snd_ctl_elem_info * ) 
snd_ctl_enum_info int snd_ctl_enum_info ( s#snd_ctl_elem_info * , unsigned int , unsigned int , const char * const [ ] ) 

/* sound/core/device.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##snd_info_entry
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_device_new int snd_device_new ( s#snd_card * , t#snd_device_type_t , void * , s#snd_device_ops * ) 
snd_device_free int snd_device_free ( s#snd_card * , void * ) 
snd_device_register int snd_device_register ( s#snd_card * , void * ) 

/* sound/core/hwdep.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s#snd_hwdep_dsp_status struct snd_hwdep_dsp_status { unsigned int version ; unsigned char id [ 32 ] ; unsigned int num_dsps ; unsigned int dsp_loaded ; unsigned int chip_ready ; unsigned char reserved [ 16 ] ; } 
s#snd_hwdep_dsp_image struct snd_hwdep_dsp_image { unsigned int index ; unsigned char name [ 64 ] ; unsigned char * image ; t#size_t length ; unsigned long driver_data ; } 
s#snd_hwdep_ops struct snd_hwdep_ops { long long ( * llseek ) ( s#snd_hwdep * , s#file * , long long , int ) ; long ( * read ) ( s#snd_hwdep * , char * , long , t#loff_t * ) ; long ( * write ) ( s#snd_hwdep * , const char * , long , t#loff_t * ) ; int ( * open ) ( s#snd_hwdep * , s#file * ) ; int ( * release ) ( s#snd_hwdep * , s#file * ) ; unsigned int ( * poll ) ( s#snd_hwdep * , s#file * , t#poll_table * ) ; int ( * ioctl ) ( s#snd_hwdep * , s#file * , unsigned int , unsigned long ) ; int ( * ioctl_compat ) ( s#snd_hwdep * , s#file * , unsigned int , unsigned long ) ; int ( * mmap ) ( s#snd_hwdep * , s#file * , s#vm_area_struct * ) ; int ( * dsp_status ) ( s#snd_hwdep * , s#snd_hwdep_dsp_status * ) ; int ( * dsp_load ) ( s#snd_hwdep * , s#snd_hwdep_dsp_image * ) ; } 
s#snd_hwdep struct snd_hwdep { s#snd_card * card ; s#list_head list ; int device ; char id [ 32 ] ; char name [ 80 ] ; int iface ; char oss_dev [ 32 ] ; int oss_type ; int ossreg ; s#snd_hwdep_ops ops ; t#wait_queue_head_t open_wait ; void * private_data ; void ( * private_free ) ( s#snd_hwdep * ) ; s#mutex open_mutex ; int used ; unsigned int dsp_loaded ; unsigned int exclusive : 1 ; } 
snd_hwdep_new extern int snd_hwdep_new ( s#snd_card * , char * , int , s#snd_hwdep * * ) 

/* sound/core/info.o */
snd_iprintf int snd_iprintf ( s#snd_info_buffer * , const char * , ... ) 
s##vfsmount
s##nameidata
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##radix_tree_node
s##writeback_control
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_seq_root extern s#snd_info_entry * snd_seq_root 
snd_info_get_line int snd_info_get_line ( s#snd_info_buffer * , char * , int ) 
snd_info_get_str const char * snd_info_get_str ( char * , const char * , int ) 
snd_info_create_module_entry s#snd_info_entry * snd_info_create_module_entry ( s#module * , const char * , s#snd_info_entry * ) 
snd_info_create_card_entry s#snd_info_entry * snd_info_create_card_entry ( s#snd_card * , const char * , s#snd_info_entry * ) 
snd_card_proc_new int snd_card_proc_new ( s#snd_card * , const char * , s#snd_info_entry * * ) 
snd_info_free_entry void snd_info_free_entry ( s#snd_info_entry * ) 
snd_info_register int snd_info_register ( s#snd_info_entry * ) 

/* sound/core/info_oss.o */
snd_oss_info_register int snd_oss_info_register ( int , int , char * ) 

/* sound/core/init.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_cards extern s#snd_card * snd_cards [ 32 ] 
snd_mixer_oss_notify_callback extern int ( * snd_mixer_oss_notify_callback ) ( s#snd_card * , int ) 
snd_card_create int snd_card_create ( int , const char * , s#module * , int , s#snd_card * * ) 
snd_card_disconnect int snd_card_disconnect ( s#snd_card * ) 
snd_card_unref void snd_card_unref ( s#snd_card * ) 
snd_card_free_when_closed int snd_card_free_when_closed ( s#snd_card * ) 
snd_card_free int snd_card_free ( s#snd_card * ) 
snd_card_set_id void snd_card_set_id ( s#snd_card * , const char * ) 
snd_card_register int snd_card_register ( s#snd_card * ) 
snd_component_add int snd_component_add ( s#snd_card * , const char * ) 
snd_card_file_add int snd_card_file_add ( s#snd_card * , s#file * ) 
snd_card_file_remove int snd_card_file_remove ( s#snd_card * , s#file * ) 
snd_power_wait int snd_power_wait ( s#snd_card * , unsigned int ) 

/* sound/core/isadma.o */
snd_dma_program void snd_dma_program ( unsigned long , unsigned long , unsigned int , unsigned short ) 
snd_dma_disable void snd_dma_disable ( unsigned long ) 
snd_dma_pointer unsigned int snd_dma_pointer ( unsigned long , unsigned int ) 

/* sound/core/jack.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_info_entry
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##input_mt_slot
s#snd_jack struct snd_jack { s#input_dev * input_dev ; int registered ; int type ; const char * id ; char name [ 100 ] ; unsigned int key [ 6 ] ; void * private_data ; void ( * private_free ) ( s#snd_jack * ) ; } 
snd_jack_new int snd_jack_new ( s#snd_card * , const char * , int , s#snd_jack * * ) 
snd_jack_set_parent void snd_jack_set_parent ( s#snd_jack * , s#device * ) 
E#SND_JACK_HEADPHONE 0x0001 
E#SND_JACK_MICROPHONE 0x0002 
E#SND_JACK_LINEOUT 0x0004 
E#SND_JACK_VIDEOOUT 0x0010 
e#snd_jack_types enum snd_jack_types { SND_JACK_HEADPHONE = 0x0001 , SND_JACK_MICROPHONE = 0x0002 , SND_JACK_HEADSET = E#SND_JACK_HEADPHONE | E#SND_JACK_MICROPHONE , SND_JACK_LINEOUT = 0x0004 , SND_JACK_MECHANICAL = 0x0008 , SND_JACK_VIDEOOUT = 0x0010 , SND_JACK_AVOUT = E#SND_JACK_LINEOUT | E#SND_JACK_VIDEOOUT , SND_JACK_LINEIN = 0x0020 , SND_JACK_BTN_0 = 0x4000 , SND_JACK_BTN_1 = 0x2000 , SND_JACK_BTN_2 = 0x1000 , SND_JACK_BTN_3 = 0x0800 , SND_JACK_BTN_4 = 0x0400 , SND_JACK_BTN_5 = 0x0200 , } 
snd_jack_set_key int snd_jack_set_key ( s#snd_jack * , e#snd_jack_types , int ) 
snd_jack_report void snd_jack_report ( s#snd_jack * , int ) 

/* sound/core/memalloc.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
snd_dma_alloc_pages int snd_dma_alloc_pages ( int , s#device * , t#size_t , s#snd_dma_buffer * ) 
snd_dma_alloc_pages_fallback int snd_dma_alloc_pages_fallback ( int , s#device * , t#size_t , s#snd_dma_buffer * ) 
snd_dma_free_pages void snd_dma_free_pages ( s#snd_dma_buffer * ) 
snd_dma_get_reserved_buf t#size_t snd_dma_get_reserved_buf ( s#snd_dma_buffer * , unsigned int ) 
snd_dma_reserve_buf int snd_dma_reserve_buf ( s#snd_dma_buffer * , unsigned int ) 
snd_malloc_pages void * snd_malloc_pages ( t#size_t , t#gfp_t ) 
snd_free_pages void snd_free_pages ( void * , t#size_t ) 

/* sound/core/memory.o */
copy_to_user_fromio int copy_to_user_fromio ( void * , const volatile void * , t#size_t ) 
copy_from_user_toio int copy_from_user_toio ( volatile void * , const void * , t#size_t ) 

/* sound/core/misc.o */
release_and_free_resource void release_and_free_resource ( s#resource * ) 
__snd_printk void __snd_printk ( unsigned int , const char * , int , const char * , ... ) 
s#snd_pci_quirk struct snd_pci_quirk { unsigned short subvendor ; unsigned short subdevice ; unsigned short subdevice_mask ; int value ; } 
snd_pci_quirk_lookup_id const s#snd_pci_quirk * snd_pci_quirk_lookup_id ( t#u16 , t#u16 , const s#snd_pci_quirk * ) 
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##array_cache
s##kmem_list3
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
snd_pci_quirk_lookup const s#snd_pci_quirk * snd_pci_quirk_lookup ( s#pci_dev * , const s#snd_pci_quirk * ) 

/* sound/core/oss/mixer_oss.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s#snd_mixer_oss_file struct snd_mixer_oss_file { s#snd_card * card ; s#snd_mixer_oss * mixer ; } 
s#snd_mixer_oss_slot struct snd_mixer_oss_slot { int number ; unsigned int stereo : 1 ; int ( * get_volume ) ( s#snd_mixer_oss_file * , s#snd_mixer_oss_slot * , int * , int * ) ; int ( * put_volume ) ( s#snd_mixer_oss_file * , s#snd_mixer_oss_slot * , int , int ) ; int ( * get_recsrc ) ( s#snd_mixer_oss_file * , s#snd_mixer_oss_slot * , int * ) ; int ( * put_recsrc ) ( s#snd_mixer_oss_file * , s#snd_mixer_oss_slot * , int ) ; unsigned long private_value ; void * private_data ; void ( * private_free ) ( s#snd_mixer_oss_slot * ) ; int volume [ 2 ] ; } 
s#snd_mixer_oss struct snd_mixer_oss { s#snd_card * card ; char id [ 16 ] ; char name [ 32 ] ; s#snd_mixer_oss_slot slots [ 32 ] ; unsigned int mask_recsrc ; int ( * get_recsrc ) ( s#snd_mixer_oss_file * , unsigned int * ) ; int ( * put_recsrc ) ( s#snd_mixer_oss_file * , unsigned int ) ; void * private_data_recsrc ; void ( * private_free_recsrc ) ( s#snd_mixer_oss * ) ; s#mutex reg_mutex ; s#snd_info_entry * proc_entry ; int oss_dev_alloc ; int oss_recsrc ; } 
snd_mixer_oss_ioctl_card int snd_mixer_oss_ioctl_card ( s#snd_card * , unsigned int , unsigned long ) 

/* sound/core/pcm.o */
snd_pcm_format_name const char * snd_pcm_format_name ( t#snd_pcm_format_t ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_pcm_plugin
s##snd_timer
snd_pcm_new_stream int snd_pcm_new_stream ( s#snd_pcm * , int , int ) 
snd_pcm_new int snd_pcm_new ( s#snd_card * , const char * , int , int , int , s#snd_pcm * * ) 
s#snd_pcm_notify struct snd_pcm_notify { int ( * n_register ) ( s#snd_pcm * ) ; int ( * n_disconnect ) ( s#snd_pcm * ) ; int ( * n_unregister ) ( s#snd_pcm * ) ; s#list_head list ; } 
snd_pcm_notify int snd_pcm_notify ( s#snd_pcm_notify * , int ) 

/* sound/core/pcm_lib.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_pcm_plugin
s#snd_timer_hardware struct snd_timer_hardware { unsigned int flags ; unsigned long resolution ; unsigned long resolution_min ; unsigned long resolution_max ; unsigned long ticks ; int ( * open ) ( s#snd_timer * ) ; int ( * close ) ( s#snd_timer * ) ; unsigned long ( * c_resolution ) ( s#snd_timer * ) ; int ( * start ) ( s#snd_timer * ) ; int ( * stop ) ( s#snd_timer * ) ; int ( * set_period ) ( s#snd_timer * , unsigned long , unsigned long ) ; int ( * precise_resolution ) ( s#snd_timer * , unsigned long * , unsigned long * ) ; } 
s#snd_timer struct snd_timer { int tmr_class ; s#snd_card * card ; s#module * module ; int tmr_device ; int tmr_subdevice ; char id [ 64 ] ; char name [ 80 ] ; unsigned int flags ; int running ; unsigned long sticks ; void * private_data ; void ( * private_free ) ( s#snd_timer * ) ; s#snd_timer_hardware hw ; t#spinlock_t lock ; s#list_head device_list ; s#list_head open_list_head ; s#list_head active_list_head ; s#list_head ack_list_head ; s#list_head sack_list_head ; s#tasklet_struct task_queue ; } 
snd_pcm_set_ops void snd_pcm_set_ops ( s#snd_pcm * , int , s#snd_pcm_ops * ) 
snd_pcm_set_sync void snd_pcm_set_sync ( s#snd_pcm_substream * ) 
snd_interval_refine int snd_interval_refine ( s#snd_interval * , const s#snd_interval * ) 
s#snd_ratnum struct snd_ratnum { unsigned int num ; unsigned int den_min , den_max , den_step ; } 
snd_interval_ratnum int snd_interval_ratnum ( s#snd_interval * , unsigned int , s#snd_ratnum * , unsigned int * , unsigned int * ) 
snd_interval_list int snd_interval_list ( s#snd_interval * , unsigned int , unsigned int * , unsigned int ) 
snd_pcm_hw_rule_add int snd_pcm_hw_rule_add ( s#snd_pcm_runtime * , unsigned int , int , t#snd_pcm_hw_rule_func_t , void * , int , ... ) 
t#snd_pcm_hw_param_t typedef int snd_pcm_hw_param_t 
snd_pcm_hw_constraint_integer int snd_pcm_hw_constraint_integer ( s#snd_pcm_runtime * , t#snd_pcm_hw_param_t ) 
snd_pcm_hw_constraint_minmax int snd_pcm_hw_constraint_minmax ( s#snd_pcm_runtime * , t#snd_pcm_hw_param_t , unsigned int , unsigned int ) 
s#snd_pcm_hw_constraint_list struct snd_pcm_hw_constraint_list { unsigned int count ; unsigned int * list ; unsigned int mask ; } 
snd_pcm_hw_constraint_list int snd_pcm_hw_constraint_list ( s#snd_pcm_runtime * , unsigned int , t#snd_pcm_hw_param_t , s#snd_pcm_hw_constraint_list * ) 
s#snd_pcm_hw_constraint_ratnums struct snd_pcm_hw_constraint_ratnums { int nrats ; s#snd_ratnum * rats ; } 
snd_pcm_hw_constraint_ratnums int snd_pcm_hw_constraint_ratnums ( s#snd_pcm_runtime * , unsigned int , t#snd_pcm_hw_param_t , s#snd_pcm_hw_constraint_ratnums * ) 
s#snd_ratden struct snd_ratden { unsigned int num_min , num_max , num_step ; unsigned int den ; } 
s#snd_pcm_hw_constraint_ratdens struct snd_pcm_hw_constraint_ratdens { int nrats ; s#snd_ratden * rats ; } 
snd_pcm_hw_constraint_ratdens int snd_pcm_hw_constraint_ratdens ( s#snd_pcm_runtime * , unsigned int , t#snd_pcm_hw_param_t , s#snd_pcm_hw_constraint_ratdens * ) 
snd_pcm_hw_constraint_msbits int snd_pcm_hw_constraint_msbits ( s#snd_pcm_runtime * , unsigned int , unsigned int , unsigned int ) 
snd_pcm_hw_constraint_step int snd_pcm_hw_constraint_step ( s#snd_pcm_runtime * , unsigned int , t#snd_pcm_hw_param_t , unsigned long ) 
snd_pcm_hw_constraint_pow2 int snd_pcm_hw_constraint_pow2 ( s#snd_pcm_runtime * , unsigned int , t#snd_pcm_hw_param_t ) 
_snd_pcm_hw_params_any void _snd_pcm_hw_params_any ( s#snd_pcm_hw_params * ) 
snd_pcm_hw_param_value int snd_pcm_hw_param_value ( const s#snd_pcm_hw_params * , t#snd_pcm_hw_param_t , int * ) 
_snd_pcm_hw_param_setempty void _snd_pcm_hw_param_setempty ( s#snd_pcm_hw_params * , t#snd_pcm_hw_param_t ) 
snd_pcm_hw_param_first int snd_pcm_hw_param_first ( s#snd_pcm_substream * , s#snd_pcm_hw_params * , t#snd_pcm_hw_param_t , int * ) 
snd_pcm_hw_param_last int snd_pcm_hw_param_last ( s#snd_pcm_substream * , s#snd_pcm_hw_params * , t#snd_pcm_hw_param_t , int * ) 
snd_pcm_lib_ioctl int snd_pcm_lib_ioctl ( s#snd_pcm_substream * , unsigned int , void * ) 
snd_pcm_period_elapsed void snd_pcm_period_elapsed ( s#snd_pcm_substream * ) 
snd_pcm_lib_write t#snd_pcm_sframes_t snd_pcm_lib_write ( s#snd_pcm_substream * , const void * , t#snd_pcm_uframes_t ) 
snd_pcm_lib_writev t#snd_pcm_sframes_t snd_pcm_lib_writev ( s#snd_pcm_substream * , void * * , t#snd_pcm_uframes_t ) 
snd_pcm_lib_read t#snd_pcm_sframes_t snd_pcm_lib_read ( s#snd_pcm_substream * , void * , t#snd_pcm_uframes_t ) 
snd_pcm_lib_readv t#snd_pcm_sframes_t snd_pcm_lib_readv ( s#snd_pcm_substream * , void * * , t#snd_pcm_uframes_t ) 

/* sound/core/pcm_memory.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_pcm_plugin
s##snd_timer
snd_pcm_lib_preallocate_free_for_all int snd_pcm_lib_preallocate_free_for_all ( s#snd_pcm * ) 
snd_pcm_lib_preallocate_pages int snd_pcm_lib_preallocate_pages ( s#snd_pcm_substream * , int , s#device * , t#size_t , t#size_t ) 
snd_pcm_lib_preallocate_pages_for_all int snd_pcm_lib_preallocate_pages_for_all ( s#snd_pcm * , int , void * , t#size_t , t#size_t ) 
snd_pcm_lib_malloc_pages int snd_pcm_lib_malloc_pages ( s#snd_pcm_substream * , t#size_t ) 
snd_pcm_lib_free_pages int snd_pcm_lib_free_pages ( s#snd_pcm_substream * ) 
_snd_pcm_lib_alloc_vmalloc_buffer int _snd_pcm_lib_alloc_vmalloc_buffer ( s#snd_pcm_substream * , t#size_t , t#gfp_t ) 
snd_pcm_lib_free_vmalloc_buffer int snd_pcm_lib_free_vmalloc_buffer ( s#snd_pcm_substream * ) 
snd_pcm_lib_get_vmalloc_page s#page * snd_pcm_lib_get_vmalloc_page ( s#snd_pcm_substream * , unsigned long ) 

/* sound/core/pcm_misc.o */
snd_pcm_format_signed int snd_pcm_format_signed ( t#snd_pcm_format_t ) 
snd_pcm_format_unsigned int snd_pcm_format_unsigned ( t#snd_pcm_format_t ) 
snd_pcm_format_linear int snd_pcm_format_linear ( t#snd_pcm_format_t ) 
snd_pcm_format_little_endian int snd_pcm_format_little_endian ( t#snd_pcm_format_t ) 
snd_pcm_format_big_endian int snd_pcm_format_big_endian ( t#snd_pcm_format_t ) 
snd_pcm_format_width int snd_pcm_format_width ( t#snd_pcm_format_t ) 
snd_pcm_format_physical_width int snd_pcm_format_physical_width ( t#snd_pcm_format_t ) 
snd_pcm_format_size t#ssize_t snd_pcm_format_size ( t#snd_pcm_format_t , t#size_t ) 
snd_pcm_format_silence_64 const unsigned char * snd_pcm_format_silence_64 ( t#snd_pcm_format_t ) 
snd_pcm_format_set_silence int snd_pcm_format_set_silence ( t#snd_pcm_format_t , void * , unsigned int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##kmem_cache
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_info_entry
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_timer
s##snd_pcm_plugin
snd_pcm_limit_hw_rates int snd_pcm_limit_hw_rates ( s#snd_pcm_runtime * ) 
snd_pcm_rate_to_rate_bit unsigned int snd_pcm_rate_to_rate_bit ( unsigned int ) 

/* sound/core/pcm_native.o */
snd_pcm_link_rwlock extern t#rwlock_t snd_pcm_link_rwlock 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s##snd_mixer_oss
s##snd_pcm_plugin
snd_pcm_hw_refine int snd_pcm_hw_refine ( s#snd_pcm_substream * , s#snd_pcm_hw_params * ) 
snd_pcm_stop int snd_pcm_stop ( s#snd_pcm_substream * , t#snd_pcm_state_t ) 
snd_pcm_suspend int snd_pcm_suspend ( s#snd_pcm_substream * ) 
snd_pcm_suspend_all int snd_pcm_suspend_all ( s#snd_pcm * ) 
snd_pcm_release_substream void snd_pcm_release_substream ( s#snd_pcm_substream * ) 
snd_pcm_open_substream int snd_pcm_open_substream ( s#snd_pcm * , int , s#file * , s#snd_pcm_substream * * ) 
snd_pcm_kernel_ioctl int snd_pcm_kernel_ioctl ( s#snd_pcm_substream * , unsigned int , void * ) 
snd_pcm_lib_default_mmap int snd_pcm_lib_default_mmap ( s#snd_pcm_substream * , s#vm_area_struct * ) 
snd_pcm_lib_mmap_iomem int snd_pcm_lib_mmap_iomem ( s#snd_pcm_substream * , s#vm_area_struct * ) 
snd_pcm_mmap_data int snd_pcm_mmap_data ( s#snd_pcm_substream * , s#file * , s#vm_area_struct * ) 

/* sound/core/rawmidi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_seq_port_info
s#snd_rawmidi_global_ops struct snd_rawmidi_global_ops { int ( * dev_register ) ( s#snd_rawmidi * ) ; int ( * dev_unregister ) ( s#snd_rawmidi * ) ; void ( * get_port_info ) ( s#snd_rawmidi * , int , s#snd_seq_port_info * ) ; } 
s#snd_rawmidi_str struct snd_rawmidi_str { unsigned int substream_count ; unsigned int substream_opened ; s#list_head substreams ; } 
s#snd_seq_device struct snd_seq_device { s#snd_card * card ; int device ; char id [ 32 ] ; char name [ 80 ] ; int argsize ; void * driver_data ; int status ; void * private_data ; void ( * private_free ) ( s#snd_seq_device * ) ; s#list_head list ; } 
s#snd_rawmidi struct snd_rawmidi { s#snd_card * card ; s#list_head list ; unsigned int device ; unsigned int info_flags ; char id [ 64 ] ; char name [ 80 ] ; int ossreg ; s#snd_rawmidi_global_ops * ops ; s#snd_rawmidi_str streams [ 2 ] ; void * private_data ; void ( * private_free ) ( s#snd_rawmidi * ) ; s#mutex open_mutex ; t#wait_queue_head_t open_wait ; s#snd_info_entry * dev ; s#snd_info_entry * proc_entry ; s#snd_seq_device * seq_dev ; } 
s#snd_rawmidi_runtime struct snd_rawmidi_runtime { unsigned int drain : 1 , oss : 1 ; unsigned char * buffer ; t#size_t buffer_size ; t#size_t appl_ptr ; t#size_t hw_ptr ; t#size_t avail_min ; t#size_t avail ; t#size_t xruns ; t#spinlock_t lock ; t#wait_queue_head_t sleep ; void ( * event ) ( s#snd_rawmidi_substream * ) ; s#tasklet_struct tasklet ; void * private_data ; void ( * private_free ) ( s#snd_rawmidi_substream * ) ; } 
s#snd_rawmidi_ops struct snd_rawmidi_ops { int ( * open ) ( s#snd_rawmidi_substream * ) ; int ( * close ) ( s#snd_rawmidi_substream * ) ; void ( * trigger ) ( s#snd_rawmidi_substream * , int ) ; void ( * drain ) ( s#snd_rawmidi_substream * ) ; } 
s#snd_rawmidi_substream struct snd_rawmidi_substream { s#list_head list ; int stream ; int number ; unsigned int opened : 1 , append : 1 , active_sensing : 1 ; int use_count ; t#size_t bytes ; s#snd_rawmidi * rmidi ; s#snd_rawmidi_str * pstr ; char name [ 32 ] ; s#snd_rawmidi_runtime * runtime ; s#pid * pid ; s#snd_rawmidi_ops * ops ; } 
s#snd_rawmidi_params struct snd_rawmidi_params { int stream ; t#size_t buffer_size ; t#size_t avail_min ; unsigned int no_active_sensing : 1 ; unsigned char reserved [ 16 ] ; } 
snd_rawmidi_output_params int snd_rawmidi_output_params ( s#snd_rawmidi_substream * , s#snd_rawmidi_params * ) 
snd_rawmidi_input_params int snd_rawmidi_input_params ( s#snd_rawmidi_substream * , s#snd_rawmidi_params * ) 
snd_rawmidi_drop_output int snd_rawmidi_drop_output ( s#snd_rawmidi_substream * ) 
snd_rawmidi_drain_output int snd_rawmidi_drain_output ( s#snd_rawmidi_substream * ) 
snd_rawmidi_drain_input int snd_rawmidi_drain_input ( s#snd_rawmidi_substream * ) 
snd_rawmidi_receive int snd_rawmidi_receive ( s#snd_rawmidi_substream * , const unsigned char * , int ) 
snd_rawmidi_transmit_empty int snd_rawmidi_transmit_empty ( s#snd_rawmidi_substream * ) 
snd_rawmidi_transmit_peek int snd_rawmidi_transmit_peek ( s#snd_rawmidi_substream * , unsigned char * , int ) 
snd_rawmidi_transmit_ack int snd_rawmidi_transmit_ack ( s#snd_rawmidi_substream * , int ) 
snd_rawmidi_transmit int snd_rawmidi_transmit ( s#snd_rawmidi_substream * , unsigned char * , int ) 
snd_rawmidi_new int snd_rawmidi_new ( s#snd_card * , char * , int , int , int , s#snd_rawmidi * * ) 
snd_rawmidi_set_ops void snd_rawmidi_set_ops ( s#snd_rawmidi * , int , s#snd_rawmidi_ops * ) 
s#snd_rawmidi_info struct snd_rawmidi_info { unsigned int device ; unsigned int subdevice ; int stream ; int card ; unsigned int flags ; unsigned char id [ 64 ] ; unsigned char name [ 80 ] ; unsigned char subname [ 32 ] ; unsigned int subdevices_count ; unsigned int subdevices_avail ; unsigned char reserved [ 64 ] ; } 
snd_rawmidi_info_select int snd_rawmidi_info_select ( s#snd_card * , s#snd_rawmidi_info * ) 
s#snd_rawmidi_file struct snd_rawmidi_file { s#snd_rawmidi * rmidi ; s#snd_rawmidi_substream * input ; s#snd_rawmidi_substream * output ; } 
snd_rawmidi_kernel_open int snd_rawmidi_kernel_open ( s#snd_card * , int , int , int , s#snd_rawmidi_file * ) 
snd_rawmidi_kernel_release int snd_rawmidi_kernel_release ( s#snd_rawmidi_file * ) 
snd_rawmidi_kernel_read long snd_rawmidi_kernel_read ( s#snd_rawmidi_substream * , unsigned char * , long ) 
snd_rawmidi_kernel_write long snd_rawmidi_kernel_write ( s#snd_rawmidi_substream * , const unsigned char * , long ) 
__snd_rawmidi_transmit_peek int __snd_rawmidi_transmit_peek ( s#snd_rawmidi_substream * , unsigned char * , int ) 
__snd_rawmidi_transmit_ack int __snd_rawmidi_transmit_ack ( s#snd_rawmidi_substream * , int ) 

/* sound/core/seq/seq_clientmgr.o */
s#snd_seq_queue_tempo struct snd_seq_queue_tempo { int queue ; unsigned int tempo ; int ppq ; unsigned int skew_value ; unsigned int skew_base ; char reserved [ 24 ] ; } 
snd_seq_set_queue_tempo int snd_seq_set_queue_tempo ( int , s#snd_seq_queue_tempo * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_seq_create_kernel_client int snd_seq_create_kernel_client ( s#snd_card * , int , const char * , ... ) 
snd_seq_delete_kernel_client int snd_seq_delete_kernel_client ( int ) 
t#snd_seq_event_type_t typedef unsigned char snd_seq_event_type_t 
t#snd_seq_tick_time_t typedef unsigned int snd_seq_tick_time_t 
s#snd_seq_real_time struct snd_seq_real_time { unsigned int tv_sec ; unsigned int tv_nsec ; } 
u#snd_seq_timestamp union snd_seq_timestamp { t#snd_seq_tick_time_t tick ; s#snd_seq_real_time time ; } 
s#snd_seq_addr struct snd_seq_addr { unsigned char client ; unsigned char port ; } 
s#snd_seq_ev_note struct snd_seq_ev_note { unsigned char channel ; unsigned char note ; unsigned char velocity ; unsigned char off_velocity ; unsigned int duration ; } 
s#snd_seq_ev_ctrl struct snd_seq_ev_ctrl { unsigned char channel ; unsigned char unused1 , unused2 , unused3 ; unsigned int param ; signed int value ; } 
s#snd_seq_ev_raw8 struct snd_seq_ev_raw8 { unsigned char d [ 12 ] ; } 
s#snd_seq_ev_raw32 struct snd_seq_ev_raw32 { unsigned int d [ 3 ] ; } 
s#snd_seq_ev_ext struct snd_seq_ev_ext { unsigned int len ; void * ptr ; } 
s#snd_seq_queue_skew struct snd_seq_queue_skew { unsigned int value ; unsigned int base ; } 
s#snd_seq_ev_queue_control struct snd_seq_ev_queue_control { unsigned char queue ; unsigned char pad [ 3 ] ; union { signed int value ; u#snd_seq_timestamp time ; unsigned int position ; s#snd_seq_queue_skew skew ; unsigned int d32 [ 2 ] ; unsigned char d8 [ 8 ] ; } param ; } 
s#snd_seq_connect struct snd_seq_connect { s#snd_seq_addr sender ; s#snd_seq_addr dest ; } 
s#snd_seq_result struct snd_seq_result { int event ; int result ; } 
s#snd_seq_ev_quote struct snd_seq_ev_quote { s#snd_seq_addr origin ; unsigned short value ; s#snd_seq_event * event ; } 
s#snd_seq_event struct snd_seq_event { t#snd_seq_event_type_t type ; unsigned char flags ; char tag ; unsigned char queue ; u#snd_seq_timestamp time ; s#snd_seq_addr source ; s#snd_seq_addr dest ; union { s#snd_seq_ev_note note ; s#snd_seq_ev_ctrl control ; s#snd_seq_ev_raw8 raw8 ; s#snd_seq_ev_raw32 raw32 ; s#snd_seq_ev_ext ext ; s#snd_seq_ev_queue_control queue ; u#snd_seq_timestamp time ; s#snd_seq_addr addr ; s#snd_seq_connect connect ; s#snd_seq_result result ; s#snd_seq_ev_quote quote ; } data ; } 
snd_seq_kernel_client_enqueue int snd_seq_kernel_client_enqueue ( int , s#snd_seq_event * , int , int ) 
snd_seq_kernel_client_enqueue_blocking int snd_seq_kernel_client_enqueue_blocking ( int , s#snd_seq_event * , s#file * , int , int ) 
snd_seq_kernel_client_dispatch int snd_seq_kernel_client_dispatch ( int , s#snd_seq_event * , int , int ) 
snd_seq_kernel_client_ctl int snd_seq_kernel_client_ctl ( int , unsigned int , void * ) 
snd_seq_kernel_client_write_poll int snd_seq_kernel_client_write_poll ( int , s#file * , t#poll_table * ) 

/* sound/core/seq/seq_device.o */
snd_seq_device_load_drivers void snd_seq_device_load_drivers ( void ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_seq_device_new int snd_seq_device_new ( s#snd_card * , int , char * , int , s#snd_seq_device * * ) 
s#snd_seq_dev_ops struct snd_seq_dev_ops { int ( * init_device ) ( s#snd_seq_device * ) ; int ( * free_device ) ( s#snd_seq_device * ) ; } 
snd_seq_device_register_driver int snd_seq_device_register_driver ( char * , s#snd_seq_dev_ops * , int ) 
snd_seq_device_unregister_driver int snd_seq_device_unregister_driver ( char * ) 
snd_seq_autoload_lock void snd_seq_autoload_lock ( void ) 
snd_seq_autoload_unlock void snd_seq_autoload_unlock ( void ) 

/* sound/core/seq/seq_lock.o */
t#snd_use_lock_t typedef t#atomic_t snd_use_lock_t 
snd_use_lock_sync_helper void snd_use_lock_sync_helper ( t#snd_use_lock_t * , const char * , int ) 

/* sound/core/seq/seq_memory.o */
t#snd_seq_dump_func_t typedef int ( * snd_seq_dump_func_t ) ( void * , void * , int ) 
snd_seq_dump_var_event int snd_seq_dump_var_event ( const s#snd_seq_event * , t#snd_seq_dump_func_t , void * ) 
snd_seq_expand_var_event int snd_seq_expand_var_event ( const s#snd_seq_event * , int , char * , int , int ) 

/* sound/core/seq/seq_midi_event.o */
s#snd_midi_event struct snd_midi_event { int qlen ; int read ; int type ; unsigned char lastcmd ; unsigned char nostat ; int bufsize ; unsigned char * buf ; t#spinlock_t lock ; } 
snd_midi_event_new int snd_midi_event_new ( int , s#snd_midi_event * * ) 
snd_midi_event_free void snd_midi_event_free ( s#snd_midi_event * ) 
snd_midi_event_reset_encode void snd_midi_event_reset_encode ( s#snd_midi_event * ) 
snd_midi_event_reset_decode void snd_midi_event_reset_decode ( s#snd_midi_event * ) 
snd_midi_event_no_status void snd_midi_event_no_status ( s#snd_midi_event * , int ) 
snd_midi_event_encode long snd_midi_event_encode ( s#snd_midi_event * , unsigned char * , long , s#snd_seq_event * ) 
snd_midi_event_encode_byte int snd_midi_event_encode_byte ( s#snd_midi_event * , int , s#snd_seq_event * ) 
snd_midi_event_decode long snd_midi_event_decode ( s#snd_midi_event * , unsigned char * , long , s#snd_seq_event * ) 

/* sound/core/seq/seq_ports.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s#snd_seq_port_subscribe struct snd_seq_port_subscribe { s#snd_seq_addr sender ; s#snd_seq_addr dest ; unsigned int voices ; unsigned int flags ; unsigned char queue ; unsigned char pad [ 3 ] ; char reserved [ 64 ] ; } 
s#snd_seq_port_callback struct snd_seq_port_callback { s#module * owner ; void * private_data ; int ( * subscribe ) ( void * , s#snd_seq_port_subscribe * ) ; int ( * unsubscribe ) ( void * , s#snd_seq_port_subscribe * ) ; int ( * use ) ( void * , s#snd_seq_port_subscribe * ) ; int ( * unuse ) ( void * , s#snd_seq_port_subscribe * ) ; int ( * event_input ) ( s#snd_seq_event * , int , void * , int , int ) ; void ( * private_free ) ( void * ) ; unsigned int callback_all ; } 
snd_seq_event_port_attach int snd_seq_event_port_attach ( int , s#snd_seq_port_callback * , int , int , int , int , char * ) 
snd_seq_event_port_detach int snd_seq_event_port_detach ( int , int ) 

/* sound/core/seq/seq_virmidi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s#snd_seq_port_info struct snd_seq_port_info { s#snd_seq_addr addr ; char name [ 64 ] ; unsigned int capability ; unsigned int type ; int midi_channels ; int midi_voices ; int synth_voices ; int read_use ; int write_use ; void * kernel ; unsigned int flags ; unsigned char time_queue ; char reserved [ 59 ] ; } 
snd_virmidi_new int snd_virmidi_new ( s#snd_card * , int , s#snd_rawmidi * * ) 

/* sound/core/sound.o */
snd_major extern int snd_major 
snd_ecards_limit extern int snd_ecards_limit 
snd_request_card void snd_request_card ( int ) 
snd_lookup_minor_data void * snd_lookup_minor_data ( unsigned int , int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_register_device_for_dev int snd_register_device_for_dev ( int , s#snd_card * , int , const s#file_operations * , void * , const char * , s#device * ) 
snd_unregister_device int snd_unregister_device ( int , s#snd_card * , int ) 
snd_add_device_sysfs_file int snd_add_device_sysfs_file ( int , s#snd_card * , int , s#device_attribute * ) 

/* sound/core/sound_oss.o */
snd_lookup_oss_minor_data void * snd_lookup_oss_minor_data ( unsigned int , int ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
snd_register_oss_device int snd_register_oss_device ( int , s#snd_card * , int , const s#file_operations * , void * , const char * ) 
snd_unregister_oss_device int snd_unregister_oss_device ( int , s#snd_card * , int ) 

/* sound/core/timer.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s#snd_timer_instance struct snd_timer_instance { s#snd_timer * timer ; char * owner ; unsigned int flags ; void * private_data ; void ( * private_free ) ( s#snd_timer_instance * ) ; void ( * callback ) ( s#snd_timer_instance * , unsigned long , unsigned long ) ; void ( * ccallback ) ( s#snd_timer_instance * , int , s#timespec * , unsigned long ) ; void * callback_data ; unsigned long ticks ; unsigned long cticks ; unsigned long pticks ; unsigned long resolution ; unsigned long lost ; int slave_class ; unsigned int slave_id ; s#list_head open_list ; s#list_head active_list ; s#list_head ack_list ; s#list_head slave_list_head ; s#list_head slave_active_head ; s#snd_timer_instance * master ; } 
s#snd_timer_id struct snd_timer_id { int dev_class ; int dev_sclass ; int card ; int device ; int subdevice ; } 
snd_timer_open int snd_timer_open ( s#snd_timer_instance * * , char * , s#snd_timer_id * , unsigned int ) 
snd_timer_close int snd_timer_close ( s#snd_timer_instance * ) 
snd_timer_resolution unsigned long snd_timer_resolution ( s#snd_timer_instance * ) 
snd_timer_start int snd_timer_start ( s#snd_timer_instance * , unsigned int ) 
snd_timer_stop int snd_timer_stop ( s#snd_timer_instance * ) 
snd_timer_continue int snd_timer_continue ( s#snd_timer_instance * ) 
snd_timer_pause int snd_timer_pause ( s#snd_timer_instance * ) 
snd_timer_new int snd_timer_new ( s#snd_card * , char * , s#snd_timer_id * , s#snd_timer * * ) 
snd_timer_notify void snd_timer_notify ( s#snd_timer * , int , s#timespec * ) 
snd_timer_global_new int snd_timer_global_new ( char * , int , s#snd_timer * * ) 
snd_timer_global_free int snd_timer_global_free ( s#snd_timer * ) 
snd_timer_global_register int snd_timer_global_register ( s#snd_timer * ) 
snd_timer_interrupt void snd_timer_interrupt ( s#snd_timer * , unsigned long ) 

/* sound/core/vmaster.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##snd_info_entry
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##fasync_struct
_snd_ctl_add_slave int _snd_ctl_add_slave ( s#snd_kcontrol * , s#snd_kcontrol * , unsigned int ) 
snd_ctl_make_virtual_master s#snd_kcontrol * snd_ctl_make_virtual_master ( char * , const unsigned int * ) 
snd_ctl_add_vmaster_hook int snd_ctl_add_vmaster_hook ( s#snd_kcontrol * , void ( * ) ( void * , int ) , void * ) 
snd_ctl_sync_vmaster_hook void snd_ctl_sync_vmaster_hook ( s#snd_kcontrol * ) 

/* sound/drivers/mpu401/mpu401_uart.o */
snd_mpu401_uart_interrupt t#irqreturn_t snd_mpu401_uart_interrupt ( int , void * ) 
snd_mpu401_uart_interrupt_tx t#irqreturn_t snd_mpu401_uart_interrupt_tx ( int , void * ) 
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##snd_info_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##snd_seq_port_info
snd_mpu401_uart_new int snd_mpu401_uart_new ( s#snd_card * , int , unsigned short , unsigned long , unsigned int , int , int , s#snd_rawmidi * * ) 

/* sound/firewire/amdtp.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##device_node
s#fw_unit struct fw_unit { s#device device ; const t#u32 * directory ; s#fw_attribute_group attribute_group ; } 
e#cip_out_flags enum cip_out_flags { CIP_NONBLOCKING = 0 , } 
s##fw_card_driver
s##fw_node
e#cip_sfc enum cip_sfc { CIP_SFC_32000 = 0 , CIP_SFC_44100 = 1 , CIP_SFC_48000 = 2 , CIP_SFC_88200 = 3 , CIP_SFC_96000 = 4 , CIP_SFC_176400 = 5 , CIP_SFC_192000 = 6 , } 
s##snd_card
s##snd_info_entry
s##snd_pcm_plugin
s##snd_timer
s#iso_packets_buffer struct iso_packets_buffer { s#fw_iso_buffer iso_buffer ; struct { void * buffer ; unsigned int offset ; } * packets ; } 
s#amdtp_out_stream struct amdtp_out_stream { s#fw_unit * unit ; e#cip_out_flags flags ; s#fw_iso_context * context ; s#mutex mutex ; e#cip_sfc sfc ; unsigned int data_block_quadlets ; unsigned int pcm_channels ; unsigned int midi_ports ; void ( * transfer_samples ) ( s#amdtp_out_stream * , s#snd_pcm_substream * , t#__be32 * , unsigned int ) ; unsigned int syt_interval ; unsigned int source_node_id_field ; s#iso_packets_buffer buffer ; s#snd_pcm_substream * pcm ; int packet_index ; unsigned int data_block_counter ; unsigned int data_block_state ; unsigned int last_syt_offset ; unsigned int syt_offset_state ; unsigned int pcm_buffer_pointer ; unsigned int pcm_period_pointer ; } 
amdtp_out_stream_init int amdtp_out_stream_init ( s#amdtp_out_stream * , s#fw_unit * , e#cip_out_flags ) 
amdtp_out_stream_destroy void amdtp_out_stream_destroy ( s#amdtp_out_stream * ) 
amdtp_out_stream_set_rate void amdtp_out_stream_set_rate ( s#amdtp_out_stream * , unsigned int ) 
amdtp_out_stream_get_max_payload unsigned int amdtp_out_stream_get_max_payload ( s#amdtp_out_stream * ) 
amdtp_out_stream_set_pcm_format void amdtp_out_stream_set_pcm_format ( s#amdtp_out_stream * , t#snd_pcm_format_t ) 
amdtp_out_stream_start int amdtp_out_stream_start ( s#amdtp_out_stream * , int , int ) 
amdtp_out_stream_update void amdtp_out_stream_update ( s#amdtp_out_stream * ) 
amdtp_out_stream_stop void amdtp_out_stream_stop ( s#amdtp_out_stream * ) 
amdtp_out_stream_pcm_abort void amdtp_out_stream_pcm_abort ( s#amdtp_out_stream * ) 

/* sound/firewire/cmp.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
s#fw_iso_resources struct fw_iso_resources { t#u64 channels_mask ; s#fw_unit * unit ; s#mutex mutex ; unsigned int channel ; unsigned int bandwidth ; unsigned int bandwidth_overhead ; int generation ; t#bool allocated ; } 
s#cmp_connection struct cmp_connection { int speed ; t#bool connected ; s#mutex mutex ; s#fw_iso_resources resources ; t#__be32 last_pcr_value ; unsigned int pcr_index ; unsigned int max_speed ; } 
cmp_connection_init int cmp_connection_init ( s#cmp_connection * , s#fw_unit * , unsigned int ) 
cmp_connection_destroy void cmp_connection_destroy ( s#cmp_connection * ) 
cmp_connection_establish int cmp_connection_establish ( s#cmp_connection * , unsigned int ) 
cmp_connection_update int cmp_connection_update ( s#cmp_connection * ) 
cmp_connection_break void cmp_connection_break ( s#cmp_connection * ) 

/* sound/firewire/fcp.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
fcp_avc_transaction int fcp_avc_transaction ( s#fw_unit * , const void * , unsigned int , void * , unsigned int , unsigned int ) 
fcp_bus_reset void fcp_bus_reset ( s#fw_unit * ) 

/* sound/firewire/iso-resources.o */
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
fw_iso_resources_init int fw_iso_resources_init ( s#fw_iso_resources * , s#fw_unit * ) 
fw_iso_resources_destroy void fw_iso_resources_destroy ( s#fw_iso_resources * ) 
fw_iso_resources_allocate int fw_iso_resources_allocate ( s#fw_iso_resources * , unsigned int , int ) 
fw_iso_resources_update int fw_iso_resources_update ( s#fw_iso_resources * ) 
fw_iso_resources_free void fw_iso_resources_free ( s#fw_iso_resources * ) 

/* sound/firewire/lib.o */
rcode_string const char * rcode_string ( unsigned int ) 
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##address_space
s##kmem_cache
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
snd_fw_transaction int snd_fw_transaction ( s#fw_unit * , int , t#u64 , void * , t#size_t ) 

/* sound/firewire/packets-buffer.o */
s##address_space
s##array_cache
s##kmem_list3
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##mempolicy
s##file
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##device_node
iso_packets_buffer_init int iso_packets_buffer_init ( s#iso_packets_buffer * , s#fw_unit * , unsigned int , unsigned int , e#dma_data_direction ) 
iso_packets_buffer_destroy void iso_packets_buffer_destroy ( s#iso_packets_buffer * , s#fw_unit * ) 

/* sound/pci/ac97/ac97_codec.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##snd_mixer_oss
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
snd_ac97_write void snd_ac97_write ( s#snd_ac97 * , unsigned short , unsigned short ) 
snd_ac97_read unsigned short snd_ac97_read ( s#snd_ac97 * , unsigned short ) 
snd_ac97_write_cache void snd_ac97_write_cache ( s#snd_ac97 * , unsigned short , unsigned short ) 
snd_ac97_update int snd_ac97_update ( s#snd_ac97 * , unsigned short , unsigned short ) 
snd_ac97_update_bits int snd_ac97_update_bits ( s#snd_ac97 * , unsigned short , unsigned short , unsigned short ) 
snd_ac97_get_short_name const char * snd_ac97_get_short_name ( s#snd_ac97 * ) 
snd_ac97_bus int snd_ac97_bus ( s#snd_card * , int , s#snd_ac97_bus_ops * , void * , s#snd_ac97_bus * * ) 
s#snd_ac97_template struct snd_ac97_template { void * private_data ; void ( * private_free ) ( s#snd_ac97 * ) ; s#pci_dev * pci ; unsigned short num ; unsigned short addr ; unsigned int scaps ; const s#snd_ac97_res_table * res_table ; } 
snd_ac97_mixer int snd_ac97_mixer ( s#snd_ac97_bus * , s#snd_ac97_template * , s#snd_ac97 * * ) 
snd_ac97_update_power int snd_ac97_update_power ( s#snd_ac97 * , int , int ) 
snd_ac97_suspend void snd_ac97_suspend ( s#snd_ac97 * ) 
snd_ac97_resume void snd_ac97_resume ( s#snd_ac97 * ) 
s#ac97_quirk struct ac97_quirk { unsigned short subvendor ; unsigned short subdevice ; unsigned short mask ; unsigned int codec_id ; const char * name ; int type ; } 
snd_ac97_tune_hardware int snd_ac97_tune_hardware ( s#snd_ac97 * , s#ac97_quirk * , const char * ) 

/* sound/pci/ac97/ac97_pcm.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##proc_dir_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##pci_dev
snd_ac97_set_rate int snd_ac97_set_rate ( s#snd_ac97 * , int , unsigned int ) 
snd_ac97_pcm_assign int snd_ac97_pcm_assign ( s#snd_ac97_bus * , unsigned short , const s#ac97_pcm * ) 
e#ac97_pcm_cfg enum ac97_pcm_cfg { AC97_PCM_CFG_FRONT = 2 , AC97_PCM_CFG_REAR = 10 , AC97_PCM_CFG_LFE = 11 , AC97_PCM_CFG_40 = 4 , AC97_PCM_CFG_51 = 6 , AC97_PCM_CFG_SPDIF = 20 } 
snd_ac97_pcm_open int snd_ac97_pcm_open ( s#ac97_pcm * , unsigned int , e#ac97_pcm_cfg , unsigned short ) 
snd_ac97_pcm_close int snd_ac97_pcm_close ( s#ac97_pcm * ) 
s##snd_timer
s##snd_pcm_plugin
snd_ac97_pcm_double_rate_rules int snd_ac97_pcm_double_rate_rules ( s#snd_pcm_runtime * ) 

/* sound/pci/oxygen/oxygen_io.o */
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##snd_info_entry
s##snd_shutdown_f_ops
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##pci_dev
s##snd_seq_port_info
s##snd_pcm_substream
s##snd_kcontrol
E#CONTROL_COUNT 6 
s##snd_kcontrol_new
s##snd_pcm_hardware
s##snd_info_buffer
s#oxygen_model struct oxygen_model { const char * shortname ; const char * longname ; const char * chip ; void ( * init ) ( s#oxygen * ) ; int ( * control_filter ) ( s#snd_kcontrol_new * ) ; int ( * mixer_init ) ( s#oxygen * ) ; void ( * cleanup ) ( s#oxygen * ) ; void ( * suspend ) ( s#oxygen * ) ; void ( * resume ) ( s#oxygen * ) ; void ( * pcm_hardware_filter ) ( unsigned int , s#snd_pcm_hardware * ) ; void ( * set_dac_params ) ( s#oxygen * , s#snd_pcm_hw_params * ) ; void ( * set_adc_params ) ( s#oxygen * , s#snd_pcm_hw_params * ) ; void ( * update_dac_volume ) ( s#oxygen * ) ; void ( * update_dac_mute ) ( s#oxygen * ) ; void ( * update_center_lfe_mix ) ( s#oxygen * , t#bool ) ; unsigned int ( * adjust_dac_routing ) ( s#oxygen * , unsigned int ) ; void ( * gpio_changed ) ( s#oxygen * ) ; void ( * uart_input ) ( s#oxygen * ) ; void ( * ac97_switch ) ( s#oxygen * , unsigned int , unsigned int ) ; void ( * dump_registers ) ( s#oxygen * , s#snd_info_buffer * ) ; const unsigned int * dac_tlv ; t#size_t model_data_size ; unsigned int device_config ; t#u8 dac_channels_pcm ; t#u8 dac_channels_mixer ; t#u8 dac_volume_min ; t#u8 dac_volume_max ; t#u8 misc_flags ; t#u8 function_flags ; t#u8 dac_mclks ; t#u8 adc_mclks ; t#u16 dac_i2s_format ; t#u16 adc_i2s_format ; } 
s#oxygen struct oxygen { unsigned long addr ; t#spinlock_t reg_lock ; s#mutex mutex ; s#snd_card * card ; s#pci_dev * pci ; s#snd_rawmidi * midi ; int irq ; void * model_data ; unsigned int interrupt_mask ; t#u8 dac_volume [ 8 ] ; t#u8 dac_mute ; t#u8 pcm_active ; t#u8 pcm_running ; t#u8 dac_routing ; t#u8 spdif_playback_enable ; t#u8 has_ac97_0 ; t#u8 has_ac97_1 ; t#u32 spdif_bits ; t#u32 spdif_pcm_bits ; s#snd_pcm_substream * streams [ 6 ] ; s#snd_kcontrol * controls [ E#CONTROL_COUNT ] ; s#work_struct spdif_input_bits_work ; s#work_struct gpio_work ; t#wait_queue_head_t ac97_waitqueue ; union { t#u8 _8 [ 0x100 ] ; t#__le16 _16 [ 0x100 / 2 ] ; t#__le32 _32 [ 0x100 / 4 ] ; } saved_registers ; t#u16 saved_ac97_registers [ 2 ] [ 0x40 ] ; unsigned int uart_input_count ; t#u8 uart_input [ 32 ] ; s#oxygen_model model ; } 
oxygen_read8 t#u8 oxygen_read8 ( s#oxygen * , unsigned int ) 
oxygen_read16 t#u16 oxygen_read16 ( s#oxygen * , unsigned int ) 
oxygen_read32 t#u32 oxygen_read32 ( s#oxygen * , unsigned int ) 
oxygen_write8 void oxygen_write8 ( s#oxygen * , unsigned int , t#u8 ) 
oxygen_write16 void oxygen_write16 ( s#oxygen * , unsigned int , t#u16 ) 
oxygen_write32 void oxygen_write32 ( s#oxygen * , unsigned int , t#u32 ) 
oxygen_write8_masked void oxygen_write8_masked ( s#oxygen * , unsigned int , t#u8 , t#u8 ) 
oxygen_write16_masked void oxygen_write16_masked ( s#oxygen * , unsigned int , t#u16 , t#u16 ) 
oxygen_write32_masked void oxygen_write32_masked ( s#oxygen * , unsigned int , t#u32 , t#u32 ) 
oxygen_write_ac97 void oxygen_write_ac97 ( s#oxygen * , unsigned int , unsigned int , t#u16 ) 
oxygen_read_ac97 t#u16 oxygen_read_ac97 ( s#oxygen * , unsigned int , unsigned int ) 
oxygen_write_ac97_masked void oxygen_write_ac97_masked ( s#oxygen * , unsigned int , unsigned int , t#u16 , t#u16 ) 
oxygen_write_spi void oxygen_write_spi ( s#oxygen * , t#u8 , unsigned int ) 
oxygen_write_i2c void oxygen_write_i2c ( s#oxygen * , t#u8 , t#u8 , t#u8 ) 
oxygen_reset_uart void oxygen_reset_uart ( s#oxygen * ) 
oxygen_write_uart void oxygen_write_uart ( s#oxygen * , t#u8 ) 

/* sound/pci/oxygen/oxygen_lib.o */
s##proc_dir_entry
s##device_private
s##sock
s##sysfs_dirent
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##nameidata
s##vfsmount
s##module_param_attrs
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##writeback_control
s##kstatfs
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##backing_dev_info
s##mtd_info
s##tvec_base
s##eventfd_ctx
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##hotplug_slot
s##pcie_link_state
s##pci_vpd
s##snd_shutdown_f_ops
s##snd_mixer_oss
s##snd_seq_port_info
s##snd_pcm_plugin
s##snd_timer
oxygen_pci_probe int oxygen_pci_probe ( s#pci_dev * , int , char * , s#module * , const s#pci_device_id * , int ( * ) ( s#oxygen * , const s#pci_device_id * ) ) 
oxygen_pci_remove void oxygen_pci_remove ( s#pci_dev * ) 
oxygen_pci_suspend int oxygen_pci_suspend ( s#pci_dev * , t#pm_message_t ) 
oxygen_pci_resume int oxygen_pci_resume ( s#pci_dev * ) 
oxygen_pci_shutdown void oxygen_pci_shutdown ( s#pci_dev * ) 

/* sound/sound_core.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##file
s##mempolicy
s##linux_binfmt
s##pid_namespace
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##perf_event
s##fs_struct
s##files_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##irqaction
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##backing_dev_info
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##pipe_inode_info
s##mem_cgroup
s##device_private
s##of_device_id
s##driver_private
s##subsys_private
s##tvec_base
s##dma_coherent_mem
s##dma_map_ops
s##device_node
sound_class extern s#class * sound_class 
s##nameidata
s##vfsmount
s##writeback_control
s##kstatfs
s##seq_file
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##nlm_lockowner
s##nfs4_lock_state
s##cdev
s##posix_acl
s##radix_tree_node
e##migrate_mode
s##swap_info_struct
s##array_cache
s##kmem_list3
s##eventfd_ctx
s##poll_table_struct
register_sound_special_device extern int register_sound_special_device ( const s#file_operations * , int , s#device * ) 
register_sound_special extern int register_sound_special ( const s#file_operations * , int ) 
register_sound_mixer extern int register_sound_mixer ( const s#file_operations * , int ) 
register_sound_midi extern int register_sound_midi ( const s#file_operations * , int ) 
register_sound_dsp extern int register_sound_dsp ( const s#file_operations * , int ) 
unregister_sound_special extern void unregister_sound_special ( int ) 
unregister_sound_mixer extern void unregister_sound_mixer ( int ) 
unregister_sound_midi extern void unregister_sound_midi ( int ) 
unregister_sound_dsp extern void unregister_sound_dsp ( int ) 

/* sound/usb/midi.o */
s##sock
s##sysfs_dirent
s##module_param_attrs
s##exception_table_entry
s##module_sect_attrs
s##module_notes_attrs
s##ftrace_event_call
s##rq
s##cfs_rq
s##rt_rq
s##task_group
s##anon_vma
s##vm_operations_struct
s##vfsmount
s##nameidata
s##writeback_control
s##kstatfs
s##seq_file
s##radix_tree_node
s##tvec_base
s##eventfd_ctx
e##migrate_mode
s##swap_info_struct
s##backing_dev_info
s##array_cache
s##kmem_list3
s##export_operations
s##xattr_handler
s##hd_struct
s##gendisk
s##mtd_info
s##poll_table_struct
s##files_struct
s##pid_namespace
s##nlm_lockowner
s##nfs4_lock_state
s##pipe_inode_info
s##cdev
s##posix_acl
s##key_type
s##key_user
s##keyring_list
s##user_namespace
s##mempolicy
s##linux_binfmt
s##perf_event
s##fs_struct
s##nsproxy
s##tty_struct
s##taskstats
s##tty_audit_buf
s##audit_context
s##seccomp_filter
s##proc_dir_entry
s##rt_mutex_waiter
s##bio_list
s##blk_plug
s##reclaim_state
s##io_context
s##css_set
s##robust_list_head
s##compat_robust_list_head
s##futex_pi_state
s##perf_event_context
s##mem_cgroup
s##snd_info_entry
s##snd_shutdown_f_ops
s##device_private
s##driver_private
s##subsys_private
s##dma_coherent_mem
s##dma_map_ops
s##device_node
s##snd_mixer_oss
s##ep_device
s#snd_usb_audio_quirk struct snd_usb_audio_quirk { const char * vendor_name ; const char * product_name ; t#int16_t ifnum ; t#uint16_t type ; const void * data ; } 
snd_usbmidi_create int snd_usbmidi_create ( s#snd_card * , s#usb_interface * , s#list_head * , const s#snd_usb_audio_quirk * ) 
snd_usbmidi_input_stop void snd_usbmidi_input_stop ( s#list_head * ) 
snd_usbmidi_input_start void snd_usbmidi_input_start ( s#list_head * ) 
snd_usbmidi_disconnect void snd_usbmidi_disconnect ( s#list_head * ) 

