From: Michal Hocko <mhocko@suse.com>
Subject: xen, x86, l1tf: Protect PROT_NONE PTEs against speculation fixup
Patch-mainline: never (suse specific)
References: bnc#1104684, bnc#1104818

When backporting patches.arch/x86-l1tf-04-protect-PROT_NONE-ptes.patch I
haven't realized that pre 4.4 kernels have a subtly different pmd/pud encoding
(introduced by f70abb0fc3da ("x86/asm: Fix pud/pmd interfaces to handle large
PAT bit")). So I have applied PHYSICAL_PMD_PAGE_MASK when encoding pmds but
pmd_pfn still uses a wider PTE_PFN_MASK so we are pulling in a garbage and
dereference a completely unrelated page which leads to all sorts of problems.

thp03 tescase from LTP BUG_ON(PageAnon) in  __split_huge_page_pmd
(bnc#1104684)or unmap path might go south as well and and up with inconsistent
state (bnc#1104818).

Signed-off-by: Michal Hocko <mhocko@suse.com>

---
 arch/x86/include/mach-xen/asm/pgtable.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/x86/include/mach-xen/asm/pgtable.h
+++ b/arch/x86/include/mach-xen/asm/pgtable.h
@@ -342,7 +342,7 @@ static inline pmd_t pfn_pmd(unsigned lon
 {
 	phys_addr_t paddr = PFN_PHYS(page_nr);
 	paddr ^= protnone_mask(pgprot_val(pgprot));
-	paddr &= PMD_PAGE_MASK;
+	paddr &= PTE_PFN_MASK;
 	return __pmd(paddr | massage_pgprot(pgprot));
 }
 
