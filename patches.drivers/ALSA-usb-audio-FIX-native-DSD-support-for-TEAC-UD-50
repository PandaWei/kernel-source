From 74dc71f83e500b2c6bb0d01a947e1b7231456dd8 Mon Sep 17 00:00:00 2001
From: Nobutaka Okabe <nob77413@gmail.com>
Date: Fri, 23 Mar 2018 19:20:00 +0900
Subject: [PATCH] ALSA: usb-audio: FIX native DSD support for TEAC UD-501 DAC
Git-commit: 74dc71f83e500b2c6bb0d01a947e1b7231456dd8
Patch-mainline: v4.17-rc1
References: bsc#1051510

There are two versions of TEAC UD-501, the normal version and
the vendor updated version(UD-501V2).

They have the same VID/PID, but the num of the altsetting is different,
UD-501 has 2 altsets for stream, and UD-501V2 has 3.

So, add the logic to distinguish them by the Product Name, not by the PID.

Signed-off-by: Nobutaka Okabe <nob77413@gmail.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/usb/quirks.c |   37 +++++++++++++++++++++++++++----------
 1 file changed, 27 insertions(+), 10 deletions(-)

--- a/sound/usb/quirks.c
+++ b/sound/usb/quirks.c
@@ -1186,14 +1186,23 @@ bool snd_usb_get_sample_rate_quirk(struc
  * between PCM and native DSD mode
  * (2 altsets version)
  */
-static bool is_itf_usb_dsd_2alts_dac(unsigned int id)
+static bool is_itf_usb_dsd_2alts_dac(struct snd_usb_audio *chip)
 {
-	switch (id) {
+	char *product = chip->dev->product; /* DAC product name */
+
+	switch (chip->usb_id) {
 	case USB_ID(0x154e, 0x1003): /* Denon DA-300USB */
 	case USB_ID(0x154e, 0x3005): /* Marantz HD-DAC1 */
 	case USB_ID(0x154e, 0x3006): /* Marantz SA-14S1 */
 	case USB_ID(0x1852, 0x5065): /* Luxman DA-06 */
 		return true;
+	case USB_ID(0x0644, 0x8043):
+		/* TEAC UD-501 */
+		if (product && strcmp("UD-501", product)) {
+			return true;
+		} else {
+			return false;
+		}
 	}
 	return false;
 }
@@ -1202,13 +1211,21 @@ static bool is_itf_usb_dsd_2alts_dac(uns
  * between PCM and native DSD mode
  * (3 altsets version)
  */
-static bool is_itf_usb_dsd_3alts_dac(unsigned int id)
+static bool is_itf_usb_dsd_3alts_dac(struct snd_usb_audio *chip)
 {
-	switch (id) {
-	case USB_ID(0x0644, 0x8043): /* TEAC UD-501/UD-503/NT-503 */
+	char *product = chip->dev->product; /* DAC product name */
+
+	switch (chip->usb_id) {
 	case USB_ID(0x0644, 0x8044): /* Esoteric D-05X */
 	case USB_ID(0x0644, 0x804a): /* TEAC UD-301 */
 		return true;
+	case USB_ID(0x0644, 0x8043):
+		/* TEAC UD-501V2/UD-503/NT-503 */
+		if (product && !strcmp("UD-501", product)) {
+			return true;
+		} else {
+			return false;
+		}
 	}
 	return false;
 }
@@ -1219,7 +1236,7 @@ int snd_usb_select_mode_quirk(struct snd
 	struct usb_device *dev = subs->dev;
 	int err;
 
-	if (is_itf_usb_dsd_2alts_dac(subs->stream->chip->usb_id)) {
+	if (is_itf_usb_dsd_2alts_dac(subs->stream->chip)) {
 		/* First switch to alt set 0, otherwise the mode switch cmd
 		 * will not be accepted by the DAC
 		 */
@@ -1240,7 +1257,7 @@ int snd_usb_select_mode_quirk(struct snd
 			break;
 		}
 		mdelay(20);
-	} else if (is_itf_usb_dsd_3alts_dac(subs->stream->chip->usb_id)) {
+	} else if (is_itf_usb_dsd_3alts_dac(subs->stream->chip)) {
 		/* Vendor mode switch cmd is required. */
 		switch (fmt->altsetting) {
 		case 3: /* DSD mode (DSD_U32) requested */
@@ -1339,7 +1356,7 @@ void snd_usb_ctl_msg_quirk(struct usb_de
 	/* ITF-USB DSD based DACs functionality need a delay
 	 * after each class compliant request
 	 */
-	if (is_itf_usb_dsd_2alts_dac(chip->usb_id)
+	if (is_itf_usb_dsd_2alts_dac(chip)
 	    && (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
 		mdelay(20);
 
@@ -1449,13 +1466,13 @@ u64 snd_usb_interface_dsd_format_quirks(
 	}
 
 	/* ITF-USB DSD based DACs (2 altsets version) */
-	if (is_itf_usb_dsd_2alts_dac(chip->usb_id)) {
+	if (is_itf_usb_dsd_2alts_dac(chip)) {
 		if (fp->altsetting == 2)
 			return SNDRV_PCM_FMTBIT_DSD_U32_BE;
 	}
 
 	/* ITF-USB DSD based DACs (3 altsets version) */
-	if (is_itf_usb_dsd_3alts_dac(chip->usb_id)) {
+	if (is_itf_usb_dsd_3alts_dac(chip)) {
 		if (fp->altsetting == 3)
 			return SNDRV_PCM_FMTBIT_DSD_U32_BE;
 	}
