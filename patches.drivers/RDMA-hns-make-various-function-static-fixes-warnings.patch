From: Colin Ian King <colin.king@canonical.com>
Date: Fri, 29 Sep 2017 14:16:01 +0100
Subject: RDMA/hns: make various function static, fixes warnings
Patch-mainline: v4.15-rc1
Git-commit: 281d0ccfae86c5b35ac48a0f2f20a6775a85cd05
References: bsc#1104427 FATE#326416

The functions hns_roce_table_mhop_get, hns_roce_table_mhop_put,
hns_roce_cleanup_mhop_hem_table,  hns_roce_v1_post_mbox,
hns_roce_cmq_setup_basic_desc, hns_roce_cmq_send,
hns_roce_cmq_query_hw_info are all local to the source and do
not need to be in global scope, so make them static.

Cleans up sparse warnings:
symbol 'hns_roce_table_mhop_get' was not declared. Should it be static?
symbol 'hns_roce_table_mhop_put' was not declared. Should it be static?
symbol 'hns_roce_cleanup_mhop_hem_table' was not declared. Should it be
static?
symbol 'hns_roce_v1_post_mbox' was not declared. Should it be static?
symbol 'hns_roce_cmq_setup_basic_desc' was not declared. Should it be
static?
symbol 'hns_roce_cmq_send' was not declared. Should it be static?
symbol 'hns_roce_cmq_query_hw_info' was not declared. Should it be static?

Signed-off-by: Colin Ian King <colin.king@canonical.com>
Signed-off-by: Doug Ledford <dledford@redhat.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/hw/hns/hns_roce_hem.c   |   18 +++++++++---------
 drivers/infiniband/hw/hns/hns_roce_hw_v1.c |    6 +++---
 drivers/infiniband/hw/hns/hns_roce_hw_v2.c |   12 ++++++------
 3 files changed, 18 insertions(+), 18 deletions(-)

--- a/drivers/infiniband/hw/hns/hns_roce_hem.c
+++ b/drivers/infiniband/hw/hns/hns_roce_hem.c
@@ -363,9 +363,9 @@ static int hns_roce_set_hem(struct hns_r
 	return ret;
 }
 
-int hns_roce_table_mhop_get(struct hns_roce_dev *hr_dev,
-			    struct hns_roce_hem_table *table,
-			    unsigned long obj)
+static int hns_roce_table_mhop_get(struct hns_roce_dev *hr_dev,
+				   struct hns_roce_hem_table *table,
+				   unsigned long obj)
 {
 	struct device *dev = hr_dev->dev;
 	struct hns_roce_hem_mhop mhop;
@@ -576,10 +576,10 @@ out:
 	return ret;
 }
 
-void hns_roce_table_mhop_put(struct hns_roce_dev *hr_dev,
-			     struct hns_roce_hem_table *table,
-			     unsigned long obj,
-			     int check_refcount)
+static void hns_roce_table_mhop_put(struct hns_roce_dev *hr_dev,
+				    struct hns_roce_hem_table *table,
+				    unsigned long obj,
+				    int check_refcount)
 {
 	struct device *dev = hr_dev->dev;
 	struct hns_roce_hem_mhop mhop;
@@ -983,8 +983,8 @@ err_kcalloc_hem_buf:
 	return -ENOMEM;
 }
 
-void hns_roce_cleanup_mhop_hem_table(struct hns_roce_dev *hr_dev,
-				     struct hns_roce_hem_table *table)
+static void hns_roce_cleanup_mhop_hem_table(struct hns_roce_dev *hr_dev,
+					    struct hns_roce_hem_table *table)
 {
 	struct hns_roce_hem_mhop mhop;
 	u32 buf_chunk_size;
--- a/drivers/infiniband/hw/hns/hns_roce_hw_v1.c
+++ b/drivers/infiniband/hw/hns/hns_roce_hw_v1.c
@@ -1628,9 +1628,9 @@ static int hns_roce_v1_cmd_pending(struc
 	return (!!(status & (1 << HCR_GO_BIT)));
 }
 
-int hns_roce_v1_post_mbox(struct hns_roce_dev *hr_dev, u64 in_param,
-			  u64 out_param, u32 in_modifier, u8 op_modifier,
-			  u16 op, u16 token, int event)
+static int hns_roce_v1_post_mbox(struct hns_roce_dev *hr_dev, u64 in_param,
+				 u64 out_param, u32 in_modifier, u8 op_modifier,
+				 u16 op, u16 token, int event)
 {
 	u32 *hcr = (u32 *)(hr_dev->reg_base + ROCEE_MB1_REG);
 	unsigned long end;
--- a/drivers/infiniband/hw/hns/hns_roce_hw_v2.c
+++ b/drivers/infiniband/hw/hns/hns_roce_hw_v2.c
@@ -496,9 +496,9 @@ static void hns_roce_v2_cmq_exit(struct
 	hns_roce_free_cmq_desc(hr_dev, &priv->cmq.crq);
 }
 
-void hns_roce_cmq_setup_basic_desc(struct hns_roce_cmq_desc *desc,
-				   enum hns_roce_opcode_type opcode,
-				   bool is_read)
+static void hns_roce_cmq_setup_basic_desc(struct hns_roce_cmq_desc *desc,
+					  enum hns_roce_opcode_type opcode,
+					  bool is_read)
 {
 	memset((void *)desc, 0, sizeof(struct hns_roce_cmq_desc));
 	desc->opcode = cpu_to_le16(opcode);
@@ -542,8 +542,8 @@ static int hns_roce_cmq_csq_clean(struct
 	return clean;
 }
 
-int hns_roce_cmq_send(struct hns_roce_dev *hr_dev,
-		      struct hns_roce_cmq_desc *desc, int num)
+static int hns_roce_cmq_send(struct hns_roce_dev *hr_dev,
+			     struct hns_roce_cmq_desc *desc, int num)
 {
 	struct hns_roce_v2_priv *priv = (struct hns_roce_v2_priv *)hr_dev->priv;
 	struct hns_roce_v2_cmq_ring *csq = &priv->cmq.csq;
@@ -629,7 +629,7 @@ int hns_roce_cmq_send(struct hns_roce_de
 	return ret;
 }
 
-int hns_roce_cmq_query_hw_info(struct hns_roce_dev *hr_dev)
+static int hns_roce_cmq_query_hw_info(struct hns_roce_dev *hr_dev)
 {
 	struct hns_roce_query_version *resp;
 	struct hns_roce_cmq_desc desc;
