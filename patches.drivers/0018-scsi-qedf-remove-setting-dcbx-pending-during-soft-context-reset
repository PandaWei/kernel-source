From: Saurav Kashyap <saurav.kashyap@cavium.com>
Date: Wed, 25 Apr 2018 06:08:57 -0700
Subject: scsi: qedf: Remove setting DCBX pending during soft context reset
Git-commit: f9a4a7f2c0f79d782aea04c05eb75fcee9f3e506
Patch-mainline: v4.18-rc1
References: bsc#1086317

PROBLEM DESCRIPTION:

According to the logs, STAG was changing and it was triggering soft
reset.  In soft reset we used to virtual link down and up and also we
were disabling DCBx flag. Since this was virtual link flap, DCBx never
used to converge again.

SOLUTION:

Code change is to remove disabling DCBx flag from soft reset.

Signed-off-by: Saurav Kashyap <saurav.kashyap@cavium.com>
Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Acked-by: Lee Duncan <lduncan@suse.com>
---

 drivers/scsi/qedf/qedf_main.c |    1 -
 1 file changed, 1 deletion(-)

--- a/drivers/scsi/qedf/qedf_main.c
+++ b/drivers/scsi/qedf/qedf_main.c
@@ -736,7 +736,6 @@ static void qedf_ctx_soft_reset(struct f
 
 	/* For host reset, essentially do a soft link up/down */
 	atomic_set(&qedf->link_state, QEDF_LINK_DOWN);
-	atomic_set(&qedf->dcbx, QEDF_DCBX_PENDING);
 	queue_delayed_work(qedf->link_update_wq, &qedf->link_update,
 	    0);
 	qedf_wait_for_upload(qedf);
