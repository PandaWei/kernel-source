From: Colin Ian King <colin.king@canonical.com>
Date: Fri, 29 Sep 2017 20:51:23 +0100
Subject: net: hns3: fix null pointer dereference before null check
Patch-mainline: v4.15-rc1
Git-commit: 075cfdd659cb1e86f948f11ba577f27706f0756e
References: bsc#1104353 FATE#326415

pointer ndev is being dereferenced with the call to netif_running
before it is being null checked.  Re-order the code to only dereference
ndev after it has been null checked.

Detected by CoverityScan, CID#1457206 ("Dereference before null check")

Fixes: 9df8f79a4d29 ("net: hns3: Add DCB support when interacting with network stack")
Signed-off-by: Colin Ian King <colin.king@canonical.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c
@@ -2865,7 +2865,7 @@ static int hns3_client_setup_tc(struct h
 {
 	struct hnae3_knic_private_info *kinfo = &handle->kinfo;
 	struct net_device *ndev = kinfo->netdev;
-	bool if_running = netif_running(ndev);
+	bool if_running;
 	int ret;
 	u8 i;
 
@@ -2875,6 +2875,8 @@ static int hns3_client_setup_tc(struct h
 	if (!ndev)
 		return -ENODEV;
 
+	if_running = netif_running(ndev);
+
 	ret = netdev_set_num_tc(ndev, tc);
 	if (ret)
 		return ret;
