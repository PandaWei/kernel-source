From: Alexandru Moise <00moses.alexander00@gmail.com>
Date: Tue, 19 Sep 2017 22:04:12 +0200
Subject: [PATCH] genirq: Check __free_irq() return value for NULL
References: bsc#1103517
Git-commit: 2827a418ca1b23e432e62c9b3d0e7cf3255dfe88
Patch-mainline: v4.14-rc3

__free_irq() can return a NULL irqaction for example when trying to free
already-free IRQ, but the callsite unconditionally dereferences the
returned pointer.

Fix this by adding a check and return NULL.

Signed-off-by: Alexandru Moise <00moses.alexander00@gmail.com>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20170919200412.GA29985@gmail.com

Signed-off-by: Hannes Reinecke <hare@suse.de>
---
 kernel/irq/manage.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/kernel/irq/manage.c b/kernel/irq/manage.c
index 6567d04262d4..c16c9fd151ff 100644
--- a/kernel/irq/manage.c
+++ b/kernel/irq/manage.c
@@ -1623,6 +1623,10 @@ const void *free_irq(unsigned int irq, void *dev_id)
 #endif
 
 	action = __free_irq(irq, dev_id);
+
+	if (!action)
+		return NULL;
+
 	devname = action->name;
 	kfree(action);
 	return devname;
-- 
2.12.3

