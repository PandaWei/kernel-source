From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 15 Oct 2018 09:25:57 +0200
Subject: Revert "proc: restrict kernel stack dumps to root"
Patch-mainline: never, kabi
References: kabi

This reverts commit 574757073482f77ec10caea5e57726190a2837fa, upstream
commit f8a00cef17206ecd1b30d3d9f99e10d9fa707aa7. It relies on
seq_file->file which we don't have. It was added in
34dbbcdbf63360661ff7bda6c5f52f99ac515f92, but we reverted that one due
to kABI. So we have to revert also this one.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 fs/proc/base.c |   14 --------------
 1 file changed, 14 deletions(-)

--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -471,20 +471,6 @@ static int proc_pid_stack(struct seq_fil
 	int err;
 	int i;
 
-	/*
-	 * The ability to racily run the kernel stack unwinder on a running task
-	 * and then observe the unwinder output is scary; while it is useful for
-	 * debugging kernel issues, it can also allow an attacker to leak kernel
-	 * stack contents.
-	 * Doing this in a manner that is at least safe from races would require
-	 * some work to ensure that the remote task can not be scheduled; and
-	 * even then, this would still expose the unwinder as local attack
-	 * surface.
-	 * Therefore, this interface is restricted to root.
-	 */
-	if (!file_ns_capable(m->file, &init_user_ns, CAP_SYS_ADMIN))
-		return -EACCES;
-
 	entries = kmalloc(MAX_STACK_TRACE_DEPTH * sizeof(*entries), GFP_KERNEL);
 	if (!entries)
 		return -ENOMEM;
