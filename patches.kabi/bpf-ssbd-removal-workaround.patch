From: Jiri Kosina <jkosina@suse.cz>
Subject: kABI: work around BPF SSBD removal
Patch-mainline: Never, SUSE-specific
References: bsc#1087082

Add dummy symbols for the ones we lost after removing the temporary
BPF SSBD implementation. No module could have realistically depended
on them.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/kernel/cpu/bugs.c |    7 +++++++
 include/linux/filter.h     |    2 ++
 net/core/filter.c          |   10 ++++++++++
 3 files changed, 19 insertions(+)

--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -820,3 +820,10 @@ static void x86_amd_ssbd_disable(void)
 	if (boot_cpu_has(X86_FEATURE_AMD_SSBD))
 		wrmsrl(MSR_AMD64_LS_CFG, msrval);
 }
+
+#ifdef __GENKSYMS__
+void x86_sync_spec_ctrl(void)
+{
+}
+EXPORT_SYMBOL_GPL(x86_sync_spec_ctrl);
+#endif
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -168,6 +168,8 @@ extern int sk_attach_filter(struct sock_
 extern int sk_detach_filter(struct sock *sk);
 extern int sk_chk_filter(struct sock_filter *filter, int flen);
 
+DECLARE_PER_CPU(unsigned int, bpf_prog_ran);
+
 #ifdef CONFIG_BPF_JIT
 extern void bpf_jit_compile(struct sk_filter *fp);
 extern void bpf_jit_free(struct sk_filter *fp);
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -26,6 +26,7 @@
 #include <linux/netdevice.h>
 #include <linux/if_packet.h>
 #include <linux/gfp.h>
+#include <linux/nospec.h>
 #include <net/ip.h>
 #include <net/protocol.h>
 #include <net/netlink.h>
@@ -670,3 +671,12 @@ int sk_detach_filter(struct sock *sk)
 	return ret;
 }
 EXPORT_SYMBOL_GPL(sk_detach_filter);
+
+#ifdef __GENKSYMS__
+DEFINE_PER_CPU(unsigned int, bpf_prog_ran);
+EXPORT_SYMBOL_GPL(bpf_prog_ran);
+void bpf_leave_prog_deferred(const struct sk_filter *fp)
+{
+}
+EXPORT_SYMBOL_GPL(bpf_leave_prog_deferred);
+#endif
