From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct nf_conn
Patch-mainline: never, kabi
References: kabi

In netfilter-stable-17_11_16, commit
e1bf1687740ce1a3598a1c5e452b852ff2190682 (netfilter: nat: Revert
"netfilter: nat: convert nat bysrc hash to rhashtable") changed one
member type from struct rhlist_head to struct hlist_node.  It made the
kABI checker complaining.

Given the both types contain 2 pointers, just hide the change from the
kABI checker as this is only a nat core member.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/net/netfilter/nf_conntrack.h |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/include/net/netfilter/nf_conntrack.h
+++ b/include/net/netfilter/nf_conntrack.h
@@ -17,6 +17,9 @@
 #include <linux/bitops.h>
 #include <linux/compiler.h>
 #include <linux/atomic.h>
+#ifdef __GENKSYMS__
+#include <linux/rhashtable.h>
+#endif
 
 #include <linux/netfilter/nf_conntrack_tcp.h>
 #include <linux/netfilter/nf_conntrack_dccp.h>
@@ -82,8 +85,12 @@ struct nf_conn {
 	possible_net_t ct_net;
 
 #if IS_ENABLED(CONFIG_NF_NAT)
+#ifdef __GENKSYMS__
+	struct rhlist_head nat_bysource;
+#else
 	struct hlist_node	nat_bysource;
 #endif
+#endif
 	/* all members below initialized via memset */
 	u8 __nfct_init_offset[0];
 
