From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct x86_emulate_ops
Patch-mainline: never, kabi
References: kabi

In 4.4.138, commit 25bdf0807b52fc99c3e7a6b424a9e847510dab15 (kvm: x86:
use correct privilege level for sgdt/sidt/fxsave/fxrstor access),
upstream commit 3c9fa24ca7c9c47605672916491f79e8ccacb9e6 added one
parameter to two hooks in struct x86_emulate_ops.  It made the kABI
checker to complain.

Given the structure is referenced from struct x86_emulate_ctxt via
pointer, is internal only to x86, and the hooks are defined only there,
it should cause no real harm, so hide the change from the kABI checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/kvm_emulate.h |    8 ++++++++
 1 file changed, 8 insertions(+)

--- a/arch/x86/include/asm/kvm_emulate.h
+++ b/arch/x86/include/asm/kvm_emulate.h
@@ -110,7 +110,11 @@ struct x86_emulate_ops {
 	int (*read_std)(struct x86_emulate_ctxt *ctxt,
 			unsigned long addr, void *val,
 			unsigned int bytes,
+#ifdef __GENKSYMS__
+			struct x86_exception *fault);
+#else
 			struct x86_exception *fault, bool system);
+#endif
 
 	/*
 	 * read_phys: Read bytes of standard (non-emulated/special) memory.
@@ -132,7 +136,11 @@ struct x86_emulate_ops {
 	 */
 	int (*write_std)(struct x86_emulate_ctxt *ctxt,
 			 unsigned long addr, void *val, unsigned int bytes,
+#ifdef __GENKSYMS__
+			 struct x86_exception *fault);
+#else
 			 struct x86_exception *fault, bool system);
+#endif
 	/*
 	 * fetch: Read bytes of standard (non-emulated/special) memory.
 	 *        Used for instruction fetch.
