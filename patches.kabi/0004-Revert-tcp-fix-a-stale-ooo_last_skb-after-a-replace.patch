From: Jiri Slaby <jslaby@suse.cz>
Date: Mon, 15 Oct 2018 18:27:22 +0200
Subject: Revert "tcp: fix a stale ooo_last_skb after a replace"
Patch-mainline: never, kabi
References: kabi

This reverts commit e747775172a2d4dc4dae794f248f9687ba793f54, upstream
commit 76f0dcbb5ae1a7c3dbeec13dd98233b8e6b0b32a. It fixes/depends on
commit 4666b6e2b27d91e05a5b8459e40e4a05dbc1c7b0, upstream commit
9f5afeae51526b3ad7b7cb21ee8b145ce6ea7a7a and that is being reverted due
to kABI breakage.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 net/ipv4/tcp_input.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
index 4cc0a53652ea..7832d0d107cd 100644
--- a/net/ipv4/tcp_input.c
+++ b/net/ipv4/tcp_input.c
@@ -4465,7 +4465,7 @@ coalesce_done:
 				NET_INC_STATS(sock_net(sk),
 					      LINUX_MIB_TCPOFOMERGE);
 				__kfree_skb(skb1);
-				goto merge_right;
+				goto add_sack;
 			}
 		} else if (tcp_try_coalesce(sk, skb1, skb, &fragstolen)) {
 			goto coalesce_done;
@@ -4477,7 +4477,6 @@ coalesce_done:
 	rb_link_node(&skb->rbnode, parent, p);
 	rb_insert_color(&skb->rbnode, &tp->out_of_order_queue);
 
-merge_right:
 	/* Remove other segments covered by skb. */
 	while ((q = rb_next(&skb->rbnode)) != NULL) {
 		skb1 = rb_entry(q, struct sk_buff, rbnode);
-- 
2.19.1

