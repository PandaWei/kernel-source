From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect struct hnae_desc_cb
Patch-mainline: never, kabi
References: kabi

In 4.4.160, commit aa1c657ae2c320372fceeea98c0e6d25102f9d33 (net: hns:
fix length and page_offset overflow when CONFIG_ARM64_64K_PAGES),
upstream commit 3ed614dce3ca9912d22be215ff0f11104b69fe62 changed few
members in struct hnae_desc_cb. It made the kABI checker to complain.

Given this is only an hns' internal header, just hide the change from
the kABI checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/net/ethernet/hisilicon/hns/hnae.h |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/drivers/net/ethernet/hisilicon/hns/hnae.h
+++ b/drivers/net/ethernet/hisilicon/hns/hnae.h
@@ -216,10 +216,17 @@ struct hnae_desc_cb {
 
 	/* priv data for the desc, e.g. skb when use with ip stack*/
 	void *priv;
+#ifdef __GENKSYMS__
+	u16 page_offset;
+	u16 reuse_flag;
+
+	u16 length;
+#else
 	u32 page_offset;
 	u32 length;     /* length of the buffer */
 
 	u16 reuse_flag;
+#endif
 
        /* desc type, used by the ring user to mark the type of the priv data */
 	u16 type;
