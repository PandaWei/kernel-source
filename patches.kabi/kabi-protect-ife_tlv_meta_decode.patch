From: Jiri Slaby <jslaby@suse.cz>
Subject: kABI: protect ife_tlv_meta_decode
Patch-mainline: never, kabi
References: kabi

In networking-stable-18_04_26, commit
cc74eddd0ff325d57373cea99f642b787d7f76f5 (net: sched: ife: handle
malformed tlv length) added one parameter to ife_tlv_meta_decode.
This indeed changed the checksum of this exported function and the kABI
checker now complains.

As this is only an ife internal function, just hide the change from the
kABI checker.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 include/net/ife.h |    4 ++++
 net/ife/ife.c     |    4 ++++
 2 files changed, 8 insertions(+)

--- a/include/net/ife.h
+++ b/include/net/ife.h
@@ -11,8 +11,12 @@
 void *ife_encode(struct sk_buff *skb, u16 metalen);
 void *ife_decode(struct sk_buff *skb, u16 *metalen);
 
+#ifdef __GENKSYMS__
+void *ife_tlv_meta_decode(void *skbdata, u16 *attrtype, u16 *dlen, u16 *totlen);
+#else
 void *ife_tlv_meta_decode(void *skbdata, const void *ifehdr_end, u16 *attrtype,
 			  u16 *dlen, u16 *totlen);
+#endif
 int ife_tlv_meta_encode(void *skbdata, u16 attrtype, u16 dlen,
 			const void *dval);
 
--- a/net/ife/ife.c
+++ b/net/ife/ife.c
@@ -123,8 +123,12 @@ static bool __ife_tlv_meta_valid(const u
 
 /* Caller takes care of presenting data in network order
  */
+#ifdef __GENKSYMS__
+void *ife_tlv_meta_decode(void *skbdata, u16 *attrtype, u16 *dlen, u16 *totlen)
+#else
 void *ife_tlv_meta_decode(void *skbdata, const void *ifehdr_end, u16 *attrtype,
 			  u16 *dlen, u16 *totlen)
+#endif
 {
 	struct meta_tlvhdr *tlv;
 
