From: Jean Delvare <jdelvare@suse.de>
Subject: Revert "drivers/firmware/dmi_scan.c: check dmi version when get system uuid"
Patch-mainline: Never, SUSE-specific

Revert 3.0.61 commit 88e10f8813d2f214178adc5f8ac62e4531bd6fdc
(commit f1d8e614d74b09531b9a85e812485340f3df7b1c upstream.)

This was a prerequisite for another commit we don't want.

Acked-by: Jean Delvare <jdelvare@suse.de>
---
 drivers/firmware/dmi_scan.c |   18 +++---------------
 1 file changed, 3 insertions(+), 15 deletions(-)

--- a/drivers/firmware/dmi_scan.c
+++ b/drivers/firmware/dmi_scan.c
@@ -16,7 +16,6 @@
  */
 static char dmi_empty_string[] = "        ";
 
-static u16 __initdata dmi_ver;
 /*
  * Catch too early calls to dmi_check_system():
  */
@@ -162,10 +161,8 @@ static void __init dmi_save_uuid(const s
 		return;
 
 	for (i = 0; i < 16 && (is_ff || is_00); i++) {
-		if (d[i] != 0x00)
-			is_00 = 0;
-		if (d[i] != 0xFF)
-			is_ff = 0;
+		if(d[i] != 0x00) is_ff = 0;
+		if(d[i] != 0xFF) is_00 = 0;
 	}
 
 	if (is_ff || is_00)
@@ -175,15 +172,7 @@ static void __init dmi_save_uuid(const s
 	if (!s)
 		return;
 
-	/*
-	 * As of version 2.6 of the SMBIOS specification, the first 3 fields of
-	 * the UUID are supposed to be little-endian encoded.  The specification
-	 * says that this is the defacto standard.
-	 */
-	if (dmi_ver >= 0x0206)
-		sprintf(s, "%pUL", d);
-	else
-		sprintf(s, "%pUB", d);
+	sprintf(s, "%pUB", d);
 
         dmi_ident[slot] = s;
 }
@@ -425,7 +414,6 @@ static int __init dmi_present(const char
 		 * DMI version 0.0 means that the real version is taken from
 		 * the SMBIOS version, which we don't know at this point.
 		 */
-		dmi_ver = (buf[14] & 0xf0) << 4 | (buf[14] & 0x0f);
 		if (buf[14] != 0)
 			printk(KERN_INFO "DMI %d.%d present.\n",
 			       buf[14] >> 4, buf[14] & 0xF);
