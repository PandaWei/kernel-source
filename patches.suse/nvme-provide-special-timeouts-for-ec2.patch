From: Johannes Thumshirn <jthumshirn@suse.de>
Subject: provide special timeout module parameters for EC2
Date: Mon Aug 20 11:28:58 CEST 2018
References: FATE#325514, bsc#1065364
Patch-mainline: Never, SLE12-SP3 specific

The NVMe interface on an Amazon EC2 instance is not necessarily
locally attached, so latencies can be much higher than the in-box NVMe
driver expects.

Upstream commit 8ae4e4477d8f ("nvme: update timeout module parameter
type") handles this by extending the module parameter form a byte to
an int.

Adjust the NVMe driver to have EC2 specific timeouts which can
override the normal ones.

Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
---
 drivers/nvme/host/core.c |   10 ++++++++++
 drivers/nvme/host/nvme.h |    9 +++++++--
 2 files changed, 17 insertions(+), 2 deletions(-)

--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -44,6 +44,16 @@ module_param_named(io_timeout, nvme_io_t
 MODULE_PARM_DESC(io_timeout, "timeout in seconds for I/O");
 EXPORT_SYMBOL_GPL(nvme_io_timeout);
 
+unsigned int admin_timeout_ec2 = 60;
+module_param(admin_timeout_ec2, int, 0644);
+MODULE_PARM_DESC(admin_timeout_ec2, "timeout in seconds for admin commands on EC2");
+EXPORT_SYMBOL_GPL(admin_timeout_ec2);
+
+unsigned int nvme_io_timeout_ec2 = 30;
+module_param_named(io_timeout_ec2, nvme_io_timeout_ec2, int, 0644);
+MODULE_PARM_DESC(io_timeout_ec2, "timeout in seconds for I/O");
+EXPORT_SYMBOL_GPL(nvme_io_timeout_ec2);
+
 unsigned char shutdown_timeout = 5;
 module_param(shutdown_timeout, byte, 0644);
 MODULE_PARM_DESC(shutdown_timeout, "timeout in seconds for controller shutdown");
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -20,11 +20,16 @@
 #include <linux/kref.h>
 #include <linux/blk-mq.h>
 
+extern unsigned int nvme_io_timeout_ec2;
+extern unsigned int admin_timeout_ec2;
+
 extern unsigned char nvme_io_timeout;
-#define NVME_IO_TIMEOUT	(nvme_io_timeout * HZ)
+#define NVME_IO_TIMEOUT	((nvme_io_timeout_ec2 > nvme_io_timeout) \
+			 ? (nvme_io_timeout_ec2 * HZ) : (nvme_io_timeout * HZ))
 
 extern unsigned char admin_timeout;
-#define ADMIN_TIMEOUT	(admin_timeout * HZ)
+#define ADMIN_TIMEOUT	((admin_timeout_ec2 > admin_timeout) \
+			 ? (admin_timeout_ec2 * HZ) : (admin_timeout * HZ))
 
 extern unsigned char shutdown_timeout;
 #define SHUTDOWN_TIMEOUT	(shutdown_timeout * HZ)
