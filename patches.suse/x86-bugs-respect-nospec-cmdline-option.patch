From: Jiri Slaby <jslaby@suse.cz>
Subject: x86/bugs: Respect nospec command line option
Patch-mainline: no, SUSE-specific
References: bsc#1068032

"nospec" is our specific command-line option, so reflect it when trying
to enable IBPB/IBRS_FW. This particular code was added in 4.4.144.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 arch/x86/include/asm/spec_ctrl.h |    1 +
 arch/x86/kernel/cpu/bugs.c       |    4 ++--
 arch/x86/kernel/cpu/spec_ctrl.c  |    2 +-
 3 files changed, 4 insertions(+), 3 deletions(-)

--- a/arch/x86/include/asm/spec_ctrl.h
+++ b/arch/x86/include/asm/spec_ctrl.h
@@ -88,6 +88,7 @@
 
 #else /* __ASSEMBLY__ */
 extern int ibrs_state;
+extern int ibpb_state;
 void x86_enable_ibrs(void);
 void x86_disable_ibrs(void);
 unsigned int x86_ibrs_enabled(void);
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@ -410,7 +410,7 @@ retpoline_auto:
 	}
 
 	/* Initialize Indirect Branch Prediction Barrier if supported */
-	if (boot_cpu_has(X86_FEATURE_IBPB)) {
+	if (boot_cpu_has(X86_FEATURE_IBPB) && ibpb_state != 0) {
 		setup_force_cpu_cap(X86_FEATURE_USE_IBPB);
 		pr_info("Spectre v2 mitigation: Enabling Indirect Branch Prediction Barrier\n");
 	}
@@ -419,7 +419,7 @@ retpoline_auto:
 	 * Retpoline means the kernel is safe because it has no indirect
 	 * branches. But firmware isn't, so use IBRS to protect that.
 	 */
-	if (boot_cpu_has(X86_FEATURE_IBRS)) {
+	if (boot_cpu_has(X86_FEATURE_IBRS) && ibrs_state != 0) {
 		setup_force_cpu_cap(X86_FEATURE_USE_IBRS_FW);
 		pr_info("Enabling Restricted Speculation for firmware calls\n");
 	}
--- a/arch/x86/kernel/cpu/spec_ctrl.c
+++ b/arch/x86/kernel/cpu/spec_ctrl.c
@@ -17,7 +17,7 @@
  * on IBRS state (SKL).
  */
 int ibrs_state = -1;
-static int ibpb_state = -1;
+int ibpb_state = -1;
 
 unsigned int notrace x86_ibrs_enabled(void)
 {
