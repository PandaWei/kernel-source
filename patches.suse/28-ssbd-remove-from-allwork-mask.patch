From: Jiri Kosina <jkosina@suse.cz>
Subject: [PATCH] x86/bugs: Make sure that _TIF_SSBD doesn't end up in _TIF_ALLWORK_MASK
References: bsc#1093215
Patch-mainline: Never, SUSE-specific

_TIF_SSBD is bit 5 of the flags, which gets covered by the 0x0000ffff
mask in _TIF_ALLWORK_MASK.

This means that syscall exit code will keep looping forever for task
that has TIF_RDS set, as _TIF_ALLWORK_MASK will always return "more
exit work pending"; this is particularly an issue on 3.12-based kernels,
as they contain explicit loop.

Let's fix it also for all kernels though, as TIF_SSBD simply doesn't
belog to _TIF_ALLWORK_MASK.

Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 arch/x86/include/asm/thread_info.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/x86/include/asm/thread_info.h
+++ b/arch/x86/include/asm/thread_info.h
@@ -146,7 +146,7 @@ struct thread_info {
 
 /* work to do on any return to user space */
 #define _TIF_ALLWORK_MASK						\
-	((0x0000FFFF & ~_TIF_SECCOMP) | _TIF_SYSCALL_TRACEPOINT |	\
+	((0x0000FFFF & ~(_TIF_SECCOMP | _TIF_SSBD)) | _TIF_SYSCALL_TRACEPOINT |	\
 	_TIF_NOHZ | _TIF_KGR_IN_PROGRESS)
 
 /* flags to check in __switch_to() */
