From: Doron Roberts-Kedes <doronrk@fb.com>
Date: Fri, 20 Apr 2018 12:11:11 -0700
Subject: strparser: Do not call mod_delayed_work with a timeout of LONG_MAX
Git-commit: 7c5aba211dd61f41d737a2c51729eb9fdcd3edf4
Patch-mainline: v4.17-rc3
References: networking-stable-18_04_26

struct sock's sk_rcvtimeo is initialized to
LONG_MAX/MAX_SCHEDULE_TIMEOUT in sock_init_data. Calling
mod_delayed_work with a timeout of LONG_MAX causes spurious execution of
the work function. timer->expires is set equal to jiffies + LONG_MAX.
When timer_base->clk falls behind the current value of jiffies,
the delta between timer_base->clk and jiffies + LONG_MAX causes the
expiration to be in the past. Returning early from strp_start_timer if
timeo == LONG_MAX solves this problem.

Found while testing net/tls_sw recv path.

Fixes: 43a0c6751a322847 ("strparser: Stream parser for messages")
Reviewed-by: Tejun Heo <tj@kernel.org>
Signed-off-by: Doron Roberts-Kedes <doronrk@fb.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 net/strparser/strparser.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/net/strparser/strparser.c
+++ b/net/strparser/strparser.c
@@ -65,7 +65,7 @@ static void strp_abort_rx_strp(struct st
 
 static void strp_start_rx_timer(struct strparser *strp)
 {
-	if (strp->sk->sk_rcvtimeo)
+	if (strp->sk->sk_rcvtimeo && strp->sk->sk_rcvtimeo != LONG_MAX)
 		mod_timer(&strp->rx_msg_timer, strp->sk->sk_rcvtimeo);
 }
 
