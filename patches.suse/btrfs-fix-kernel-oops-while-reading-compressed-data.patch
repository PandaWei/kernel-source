From: Liu Bo <bo.li.liu@oracle.com>
Subject: Btrfs: fix kernel oops while reading compressed data
Git-commit: cf1167d5c1abf3bc42b2a1562bfa7937c05337e2
Patch-mainline: v4.14-rc3
References: bsc#1089192

The kernel oops happens at

kernel BUG at fs/btrfs/extent_io.c:2104!
...
RIP: clean_io_failure+0x263/0x2a0 [btrfs]

It's showing that read-repair code is using an improper mirror index.
This is due to the fact that compression read's endio hasn't recorded
the failed mirror index in %cb->orig_bio.

With this, btrfs's read-repair can work properly on reading compressed
data.

Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
Reported-by: Paul Jones <paul@pauljones.id.au>
Tested-by: Paul Jones <paul@pauljones.id.au>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 fs/btrfs/compression.c |    8 ++++++++
 1 file changed, 8 insertions(+)

--- a/fs/btrfs/compression.c
+++ b/fs/btrfs/compression.c
@@ -162,6 +162,7 @@ static void end_compressed_bio_read(stru
 	struct inode *inode;
 	struct page *page;
 	unsigned long index;
+	unsigned int mirror = (unsigned long)bio->bi_bdev;
 	int ret;
 
 	if (err)
@@ -175,6 +176,13 @@ static void end_compressed_bio_read(stru
 	if (!atomic_dec_and_test(&cb->pending_bios))
 		goto out;
 
+	/*
+	 * Record the correct mirror_num in cb->orig_bio so that
+	 * read-repair can work properly.
+	 */
+	cb->orig_bio->bi_bdev = (struct block_device *)(unsigned long)mirror;
+	cb->mirror_num = mirror;
+
 	inode = cb->inode;
 	ret = check_compressed_csum(inode, cb, (u64)bio->bi_sector << 9);
 	if (ret)

