From: Joerg Roedel <jroedel@suse.de>
Date: Tue, 26 Jun 2018 16:29:14 +0200
Subject: [PATCH] x86-32/kaiser: Add CPL check for CR3 switch before iret
Patch-mainline: No, different implementation than upstream
References: bsc#1098408

In some cases we don't have our marker bit set in pt_regs
when we return to user-space, so that me miss the switch to
the user-cr3. This happens when the kernel starts init
and goes to user-space for the first time.

Fix it by adding an additional check whether we return to
user-space and do not rely on the marker bit alone.

The marker-bit is still required for the case that we return
to kernel-mode with user-cr3 already set.

Signed-off-by: Joerg Roedel <jroedel@suse.de>
---
 arch/x86/kernel/entry_32.S | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/arch/x86/kernel/entry_32.S b/arch/x86/kernel/entry_32.S
index 5f0dc54..ea77d9f 100644
--- a/arch/x86/kernel/entry_32.S
+++ b/arch/x86/kernel/entry_32.S
@@ -950,8 +950,22 @@ restore_all:
 restore_all_notrace:
 	CHECK_AND_APPLY_ESPFIX
 restore_nocheck:
+
+#ifdef CONFIG_VM86
+	movl	PT_EFLAGS(%esp), %eax	# mix EFLAGS and CS
+	movb	PT_CS(%esp), %al
+	andl	$(X86_EFLAGS_VM | SEGMENT_RPL_MASK), %eax
+#else
+	movl	PT_CS(%esp), %eax
+	andl	$SEGMENT_RPL_MASK, %eax
+#endif
+	cmpl	$USER_RPL, %eax
+	jae	restore_all_cr3_switch
+
 	testl   $CS_FROM_USER_CR3, PT_CS(%esp)
 	jz	restore_all_no_switch
+
+restore_all_cr3_switch:
 	andl	$(~CS_FROM_USER_CR3), PT_CS(%esp)
 	SWITCH_TO_USER_CR3 scratch_reg=%eax
 restore_all_no_switch:
-- 
2.12.3

